uint64_t sub_251BA5504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;

  v35 = a4;
  v30 = a1;
  v33 = type metadata accessor for StaticHome();
  v6 = MEMORY[0x270FA5388](v33);
  v34 = (uint64_t)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x270FA5388](v6);
  v10 = (char *)&v28 - v9;
  result = MEMORY[0x270FA5388](v8);
  v14 = (char *)&v28 - v13;
  v32 = a3;
  v29 = a2;
  if (a3 != a2)
  {
    v15 = *(void *)(v12 + 72);
    v36 = v15 * (v32 - 1);
    v31 = v15;
    v16 = v15 * v32;
LABEL_6:
    v17 = 0;
    v18 = v30;
    while (1)
    {
      v19 = *v35;
      sub_251BAD6EC(v16 + v17 + *v35, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticHome);
      sub_251BAD6EC(v36 + v17 + v19, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticHome);
      v20 = *(int *)(v33 + 20);
      v21 = *(void *)&v14[v20];
      v22 = *(void *)&v14[v20 + 8];
      v23 = &v10[v20];
      if (v21 == *(void *)v23 && v22 == *((void *)v23 + 1))
      {
        sub_251BAD68C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticHome);
        result = sub_251BAD68C((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticHome);
LABEL_5:
        v36 += v31;
        v16 += v31;
        if (++v32 == v29) {
          return result;
        }
        goto LABEL_6;
      }
      v25 = sub_251F36B10();
      sub_251BAD68C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticHome);
      result = sub_251BAD68C((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticHome);
      if ((v25 & 1) == 0) {
        goto LABEL_5;
      }
      v26 = *v35;
      if (!*v35) {
        break;
      }
      v27 = v26 + v36 + v17;
      sub_251BAD624(v26 + v16 + v17, v34, (uint64_t (*)(void))type metadata accessor for StaticHome);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_251BAD624(v34, v27, (uint64_t (*)(void))type metadata accessor for StaticHome);
      v17 -= v31;
      if (v32 == ++v18) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_251BA57F8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v54 = type metadata accessor for StaticHome();
  uint64_t v8 = MEMORY[0x270FA5388](v54);
  uint64_t v53 = (uint64_t)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  v12 = (char *)&v51 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  v15 = (char *)&v51 - v14;
  MEMORY[0x270FA5388](v13);
  v17 = (char *)&v51 - v16;
  uint64_t v19 = *(void *)(v18 + 72);
  if (!v19)
  {
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  unint64_t v20 = a1;
  if (a2 - a1 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_72;
  }
  int64_t v21 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_73;
  }
  uint64_t v22 = (uint64_t)(a2 - a1) / v19;
  unint64_t v57 = a1;
  unint64_t v56 = a4;
  uint64_t v23 = v21 / v19;
  if (v22 >= v21 / v19)
  {
    if ((v23 & 0x8000000000000000) == 0)
    {
      unint64_t v52 = a1;
      uint64_t v25 = v23 * v19;
      if (a4 < a2 || a2 + v25 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v37 = a4 + v25;
      unint64_t v55 = a4 + v25;
      unint64_t v57 = a2;
      if (v25 >= 1 && v52 < a2)
      {
        uint64_t v39 = -v19;
        do
        {
          sub_251BAD6EC(v37 + v39, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticHome);
          unint64_t v40 = a2 + v39;
          uint64_t v41 = v53;
          sub_251BAD6EC(a2 + v39, v53, (uint64_t (*)(void))type metadata accessor for StaticHome);
          uint64_t v42 = *(int *)(v54 + 20);
          uint64_t v43 = *(void *)&v12[v42];
          uint64_t v44 = *(void *)&v12[v42 + 8];
          v45 = (void *)(v41 + v42);
          if (v43 == *v45 && v44 == v45[1]) {
            char v47 = 0;
          }
          else {
            char v47 = sub_251F36B10();
          }
          unint64_t v48 = a3 + v39;
          sub_251BAD68C(v53, (uint64_t (*)(void))type metadata accessor for StaticHome);
          sub_251BAD68C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticHome);
          if (v47)
          {
            if (a3 < a2 || v48 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v57 += v39;
          }
          else
          {
            unint64_t v49 = v55;
            v55 += v39;
            if (a3 < v49 || v48 >= v49)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v49)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v40 = a2;
          }
          unint64_t v37 = v55;
          if (v55 <= a4) {
            break;
          }
          a2 = v40;
          a3 += v39;
        }
        while (v40 > v52);
      }
LABEL_70:
      sub_251ECD6D8(&v57, &v56, (uint64_t *)&v55);
      return 1;
    }
  }
  else if ((v22 & 0x8000000000000000) == 0)
  {
    uint64_t v24 = v22 * v19;
    if (a4 < v20 || v20 + v24 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != v20)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v26 = a4 + v24;
    unint64_t v55 = a4 + v24;
    if (v24 >= 1 && a2 < a3)
    {
      while (1)
      {
        sub_251BAD6EC(a2, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticHome);
        sub_251BAD6EC(a4, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StaticHome);
        uint64_t v28 = *(int *)(v54 + 20);
        uint64_t v29 = *(void *)&v17[v28];
        uint64_t v30 = *(void *)&v17[v28 + 8];
        v31 = &v15[v28];
        if (v29 == *(void *)v31 && v30 == *((void *)v31 + 1)) {
          break;
        }
        char v33 = sub_251F36B10();
        sub_251BAD68C((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StaticHome);
        sub_251BAD68C((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticHome);
        if ((v33 & 1) == 0) {
          goto LABEL_32;
        }
        unint64_t v34 = v57;
        unint64_t v35 = a2 + v19;
        if (v57 < a2 || v57 >= v35)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v57 == a2)
        {
          unint64_t v34 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_38:
        unint64_t v57 = v34 + v19;
        a4 = v56;
        if (v56 < v26)
        {
          a2 = v35;
          if (v35 < a3) {
            continue;
          }
        }
        goto LABEL_70;
      }
      sub_251BAD68C((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StaticHome);
      sub_251BAD68C((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticHome);
LABEL_32:
      unint64_t v34 = v57;
      unint64_t v36 = v56 + v19;
      if (v57 < v56 || v57 >= v36)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v57 != v56)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v56 = v36;
      unint64_t v35 = a2;
      goto LABEL_38;
    }
    goto LABEL_70;
  }
LABEL_74:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251BA5D98(uint64_t result, uint64_t a2, char a3, uint64_t a4, unsigned int a5, char a6, uint64_t a7)
{
  if (a6 & 1) != 0 || (a3) {
    goto LABEL_37;
  }
  unint64_t v8 = result;
  if (a4 < result) {
    goto LABEL_35;
  }
  if (a5 != a2)
  {
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    return result;
  }
  if (result != a4)
  {
    uint64_t v12 = a7 + 64;
    uint64_t v22 = a7 + 88;
    uint64_t v10 = 1;
    while (1)
    {
      if ((v8 & 0x8000000000000000) != 0 || (uint64_t v13 = 1 << *(unsigned char *)(a7 + 32), (uint64_t)v8 >= v13))
      {
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      unint64_t v14 = v8 >> 6;
      unint64_t v15 = *(void *)(v12 + 8 * (v8 >> 6));
      if (((v15 >> v8) & 1) == 0) {
        goto LABEL_33;
      }
      if (*(_DWORD *)(a7 + 36) != a5) {
        goto LABEL_34;
      }
      unint64_t v16 = v15 & (-2 << (v8 & 0x3F));
      if (v16)
      {
        uint64_t result = sub_251A4ECE4(v8, a2, 0);
        unint64_t v8 = __clz(__rbit64(v16)) | v8 & 0xFFFFFFFFFFFFFFC0;
        if (v8 == a4) {
          return v10;
        }
      }
      else
      {
        unint64_t v17 = v14 + 1;
        unint64_t v18 = (unint64_t)(v13 + 63) >> 6;
        if (v14 + 1 < v18)
        {
          unint64_t v19 = *(void *)(v12 + 8 * v17);
          if (v19) {
            goto LABEL_18;
          }
          unint64_t v17 = v14 + 2;
          if (v14 + 2 >= v18)
          {
LABEL_27:
            uint64_t result = sub_251A4ECE4(v8, a2, 0);
            unint64_t v8 = v13;
          }
          else
          {
            unint64_t v19 = *(void *)(v12 + 8 * v17);
            if (!v19)
            {
              unint64_t v20 = v18 - 3;
              while (v20 != v14)
              {
                unint64_t v19 = *(void *)(v22 + 8 * v14++);
                if (v19)
                {
                  unint64_t v17 = v14 + 2;
                  goto LABEL_18;
                }
              }
              goto LABEL_27;
            }
LABEL_18:
            uint64_t result = sub_251A4ECE4(v8, a2, 0);
            unint64_t v8 = __clz(__rbit64(v19)) | (v17 << 6);
          }
          if (v8 == a4) {
            return v10;
          }
          goto LABEL_29;
        }
        uint64_t result = sub_251A4ECE4(v8, a2, 0);
        unint64_t v8 = v13;
        if (v13 == a4) {
          return v10;
        }
      }
LABEL_29:
      a2 = a5;
      if (__OFADD__(v10++, 1))
      {
        __break(1u);
        goto LABEL_32;
      }
    }
  }
  return 0;
}

uint64_t sub_251BA5F68(uint64_t a1, uint64_t (*a2)(char *))
{
  uint64_t v25 = a2;
  uint64_t v3 = type metadata accessor for StaticEndpoint();
  uint64_t v24 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3 - 8);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_251AC5764(a1);
  if ((v8 & 1) == 0)
  {
    int v9 = v7;
    if (*(_DWORD *)(a1 + 36) == v7)
    {
      uint64_t v10 = result;
      uint64_t v11 = a1 + 64;
      uint64_t v22 = a1 + 88;
      uint64_t v23 = v7;
      uint64_t v12 = v7;
      do
      {
        uint64_t v14 = 1 << *(unsigned char *)(a1 + 32);
        if (v10 == v14) {
          return v10;
        }
        if (v10 < 0 || v10 >= v14) {
          goto LABEL_27;
        }
        if (v9 != v12) {
          goto LABEL_28;
        }
        unint64_t v15 = (unint64_t)v10 >> 6;
        if ((*(void *)(v11 + 8 * ((unint64_t)v10 >> 6)) & (1 << v10)) == 0) {
          goto LABEL_28;
        }
        sub_251BAD6EC(*(void *)(a1 + 56) + *(void *)(v24 + 72) * v10, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
        swift_retain();
        char v16 = v25(v5);
        swift_release();
        uint64_t result = sub_251BAD68C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
        if (v16) {
          return v10;
        }
        int64_t v13 = 1 << *(unsigned char *)(a1 + 32);
        if (v10 >= v13) {
          goto LABEL_29;
        }
        uint64_t v17 = *(void *)(v11 + 8 * v15);
        if ((v17 & (1 << v10)) == 0) {
          goto LABEL_30;
        }
        if (*(_DWORD *)(a1 + 36) != v9) {
          goto LABEL_31;
        }
        unint64_t v18 = v17 & (-2 << (v10 & 0x3F));
        if (v18)
        {
          int64_t v13 = __clz(__rbit64(v18)) | v10 & 0xFFFFFFFFFFFFFFC0;
        }
        else
        {
          unint64_t v19 = v15 + 1;
          unint64_t v20 = (unint64_t)(v13 + 63) >> 6;
          if (v15 + 1 < v20)
          {
            unint64_t v21 = *(void *)(v11 + 8 * v19);
            if (!v21)
            {
              unint64_t v19 = v15 + 2;
              if (v15 + 2 >= v20) {
                goto LABEL_5;
              }
              unint64_t v21 = *(void *)(v11 + 8 * v19);
              if (!v21)
              {
                while (v20 - 3 != v15)
                {
                  unint64_t v21 = *(void *)(v22 + 8 * v15++);
                  if (v21)
                  {
                    uint64_t result = sub_251A4ECE4(v10, v12, 0);
                    unint64_t v19 = v15 + 2;
                    goto LABEL_18;
                  }
                }
                uint64_t result = sub_251A4ECE4(v10, v12, 0);
                goto LABEL_5;
              }
            }
LABEL_18:
            int64_t v13 = __clz(__rbit64(v21)) + (v19 << 6);
          }
        }
LABEL_5:
        uint64_t v12 = v23;
        uint64_t v10 = v13;
      }
      while (*(_DWORD *)(a1 + 36) == v9);
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_251BA6228(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t (*a8)(void))
{
  uint64_t v11 = a4;
  int v14 = a3 & 1;
  int v15 = a6 & 1;
  int v16 = v15 | v14;
  uint64_t result = sub_251BA5D98(a1, a2, v14, a4, a5, v15, a7);
  if (v16)
  {
LABEL_27:
    __break(1u);
    return result;
  }
  if (a5 != a2)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  BOOL v18 = v11 < a1;
  if (v11 >= a1) {
    uint64_t v19 = a1;
  }
  else {
    uint64_t v19 = v11;
  }
  if (v11 >= a1) {
    uint64_t v20 = a2;
  }
  else {
    uint64_t v20 = a5;
  }
  if (v11 >= a1)
  {
    uint64_t v21 = 1;
  }
  else
  {
    uint64_t v11 = a1;
    uint64_t v21 = -1;
  }
  if (v18) {
    int v22 = a2;
  }
  else {
    int v22 = a5;
  }
  uint64_t v25 = v19;
  uint64_t v26 = v20;
  char v27 = 0;
  if (v19 != v11)
  {
    uint64_t v24 = 0;
    while (1)
    {
      uint64_t v23 = v24 + v21;
      if (__OFADD__(v24, v21)) {
        break;
      }
      uint64_t result = sub_251BA633C((uint64_t)&v25, a7, a8);
      if (v27) {
        goto LABEL_26;
      }
      if (v26 != v22) {
        goto LABEL_24;
      }
      v24 += v21;
      if (v25 == v11) {
        return v23;
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_251A4ECE4(v11, v20, 0);
  return 0;
}

uint64_t sub_251BA633C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = type metadata accessor for StaticEndpoint();
  uint64_t v28 = *(void *)(v6 - 8);
  uint64_t result = MEMORY[0x270FA5388](v6 - 8);
  int v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(a1 + 16) & 1) == 0)
  {
    uint64_t v10 = *(void *)(a1 + 8);
    uint64_t v11 = *(unsigned int *)(a2 + 36);
    if (v11 != v10) {
      goto LABEL_36;
    }
    unint64_t v12 = *(void *)a1;
    if (*(void *)a1 != 1 << *(unsigned char *)(a2 + 32))
    {
      uint64_t v25 = (unint64_t *)a1;
      uint64_t v26 = a3;
      uint64_t v13 = a2 + 64;
      uint64_t v27 = a2 + 88;
      while (1)
      {
        if ((v12 & 0x8000000000000000) != 0 || (uint64_t v14 = 1 << *(unsigned char *)(a2 + 32), (uint64_t)v12 >= v14))
        {
          __break(1u);
LABEL_31:
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          goto LABEL_37;
        }
        unint64_t v15 = v12 >> 6;
        unint64_t v16 = *(void *)(v13 + 8 * (v12 >> 6));
        if (((v16 >> v12) & 1) == 0) {
          goto LABEL_31;
        }
        if (v11 != *(_DWORD *)(a2 + 36)) {
          goto LABEL_32;
        }
        unint64_t v17 = v16 & (-2 << (v12 & 0x3F));
        if (v17)
        {
          uint64_t result = sub_251A4ECE4(v12, v10, 0);
          unint64_t v12 = __clz(__rbit64(v17)) | v12 & 0xFFFFFFFFFFFFFFC0;
          goto LABEL_23;
        }
        unint64_t v18 = v15 + 1;
        unint64_t v19 = (unint64_t)(v14 + 63) >> 6;
        if (v15 + 1 >= v19)
        {
          uint64_t result = sub_251A4ECE4(v12, v10, 0);
          unint64_t v12 = v14;
          goto LABEL_23;
        }
        unint64_t v20 = *(void *)(v13 + 8 * v18);
        if (!v20)
        {
          unint64_t v18 = v15 + 2;
          if (v15 + 2 >= v19) {
            goto LABEL_21;
          }
          unint64_t v20 = *(void *)(v13 + 8 * v18);
          if (!v20) {
            break;
          }
        }
LABEL_13:
        uint64_t result = sub_251A4ECE4(v12, v10, 0);
        unint64_t v12 = __clz(__rbit64(v20)) | (v18 << 6);
LABEL_22:
        a3 = v26;
LABEL_23:
        if (v11 != *(_DWORD *)(a2 + 36)) {
          goto LABEL_33;
        }
        uint64_t v22 = 1 << *(unsigned char *)(a2 + 32);
        if (v12 != v22)
        {
          if ((v12 & 0x8000000000000000) != 0 || (uint64_t)v12 >= v22) {
            goto LABEL_34;
          }
          if (((*(void *)(v13 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
            goto LABEL_35;
          }
          sub_251BAD6EC(*(void *)(a2 + 56) + *(void *)(v28 + 72) * v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
          swift_retain();
          char v23 = a3(v9);
          swift_release();
          uint64_t result = sub_251BAD68C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
          uint64_t v10 = v11;
          if ((v23 & 1) == 0) {
            continue;
          }
        }
        uint64_t v24 = v25;
        *uint64_t v25 = v12;
        v24[1] = v11;
        *((unsigned char *)v24 + 16) = 0;
        return result;
      }
      unint64_t v21 = v19 - 3;
      while (v21 != v15)
      {
        unint64_t v20 = *(void *)(v27 + 8 * v15++);
        if (v20)
        {
          unint64_t v18 = v15 + 2;
          goto LABEL_13;
        }
      }
LABEL_21:
      uint64_t result = sub_251A4ECE4(v12, v10, 0);
      unint64_t v12 = v14;
      goto LABEL_22;
    }
LABEL_37:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t _s13HomeDataModel23WidgetSnapshotModeratorC5ErrorO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetSnapshotModerator.Error();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F430);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_251BAD6EC(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for WidgetSnapshotModerator.Error);
  sub_251BAD6EC(a2, v11, (uint64_t (*)(void))type metadata accessor for WidgetSnapshotModerator.Error);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  switch(v14((uint64_t)v10, 3, v12))
  {
    case 1u:
      if (v14(v11, 3, v12) != 1) {
        goto LABEL_9;
      }
      goto LABEL_18;
    case 2u:
      if (v14(v11, 3, v12) == 2) {
        goto LABEL_18;
      }
      goto LABEL_9;
    case 3u:
      if (v14(v11, 3, v12) != 3) {
        goto LABEL_9;
      }
      goto LABEL_18;
    default:
      sub_251BAD6EC((uint64_t)v10, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for WidgetSnapshotModerator.Error);
      uint64_t v15 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v14)(v11, 3, v12);
      if (v15)
      {
        sub_251A1B064((uint64_t)v6, &qword_26B21FF90);
LABEL_9:
        sub_251A1B064((uint64_t)v10, &qword_269B9F430);
        return 0;
      }
      v33[2] = v33;
      uint64_t v17 = *(void *)(v13 + 64);
      MEMORY[0x270FA5388](v15);
      unint64_t v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF0;
      sub_251A4ECF0(v11, (uint64_t)v33 - v18, &qword_26B21FF90);
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
      v33[3] = v33;
      uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
      uint64_t v22 = (char *)v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v23 = (uint64_t)&v22[*(int *)(v20 + 56)];
      sub_251A4ECF0((uint64_t)v6, (uint64_t)v22, &qword_26B21FF90);
      sub_251A1B128((uint64_t)v33 - v18, v23, &qword_26B21FF90);
      uint64_t v24 = sub_251F34DA0();
      uint64_t v25 = *(void *)(v24 - 8);
      uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
      uint64_t v27 = v26(v22, 1, v24);
      if (v27 != 1)
      {
        v33[1] = v33;
        MEMORY[0x270FA5388](v27);
        sub_251A1B128((uint64_t)v22, (uint64_t)v33 - v18, &qword_26B21FF90);
        uint64_t v28 = v26((char *)v23, 1, v24);
        if (v28 != 1)
        {
          MEMORY[0x270FA5388](v28);
          uint64_t v30 = (char *)v33 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(v30, v23, v24);
          sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
          char v31 = sub_251F35650();
          v32 = *(void (**)(char *, uint64_t))(v25 + 8);
          v32(v30, v24);
          sub_251A1B064((uint64_t)v33 - v18, &qword_26B21FF90);
          v32((char *)v33 - v18, v24);
          sub_251A1B064((uint64_t)v22, &qword_26B21FF90);
          if (v31) {
            goto LABEL_18;
          }
LABEL_19:
          sub_251BAD68C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for WidgetSnapshotModerator.Error);
          return 0;
        }
        sub_251A1B064((uint64_t)v33 - v18, &qword_26B21FF90);
        (*(void (**)(char *, uint64_t))(v25 + 8))((char *)v33 - v18, v24);
LABEL_16:
        sub_251A1B064((uint64_t)v22, &qword_26B21E6B8);
        goto LABEL_19;
      }
      sub_251A1B064((uint64_t)v33 - v18, &qword_26B21FF90);
      if (v26((char *)v23, 1, v24) != 1) {
        goto LABEL_16;
      }
      sub_251A1B064((uint64_t)v22, &qword_26B21FF90);
LABEL_18:
      sub_251BAD68C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for WidgetSnapshotModerator.Error);
      return 1;
  }
}

uint64_t sub_251BA6BD8()
{
  v0 = (void *)MEMORY[0x263F8EE78];
  unint64_t v1 = sub_251A19364(MEMORY[0x263F8EE78]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F438);
  uint64_t v2 = swift_allocObject();
  *(_DWORD *)(v2 + 24) = 0;
  *(void *)(v2 + 16) = v1;
  unint64_t v3 = sub_251A19474((uint64_t)v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F440);
  uint64_t v4 = swift_allocObject();
  *(_DWORD *)(v4 + 24) = 0;
  *(void *)(v4 + 16) = v3;
  unint64_t v5 = sub_251A19638(v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F448);
  uint64_t v6 = swift_allocObject();
  *(_DWORD *)(v6 + 24) = 0;
  *(void *)(v6 + 16) = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F450);
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + 24) = 0;
  *(void *)(v7 + 16) = v0;
  return v2;
}

uint64_t sub_251BA6CCC()
{
  *(void *)(v1 + 168) = v0;
  if (qword_269B9C2E8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_269B9F038;
  *(void *)(v1 + 176) = qword_269B9F038;
  return MEMORY[0x270FA2498](sub_251BA6D68, v2, 0);
}

uint64_t sub_251BA6D68()
{
  if (*(void *)(*(void *)(v0 + 168) + 16))
  {
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    if (qword_269B9C2F8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    sub_251A1B128((uint64_t)&xmmword_269B9F040, v0 + 56, &qword_269B9F120);
    if (*(void *)(v0 + 80))
    {
      sub_251A1A444((long long *)(v0 + 56), v0 + 16);
      uint64_t v3 = *(void *)(v0 + 40);
      uint64_t v4 = *(void *)(v0 + 48);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v3);
      uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v4 + 8) + **(int **)(v4 + 8));
      unint64_t v5 = (void *)swift_task_alloc();
      *(void *)(v0 + 184) = v5;
      void *v5 = v0;
      v5[1] = sub_251BA7010;
      return v9(v3, v4);
    }
    else
    {
      sub_251A1B064(v0 + 56, &qword_269B9F120);
      if (qword_269B9C478 != -1) {
        swift_once();
      }
      id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E3C0]), sel_initWithConfiguration_, qword_269BF31E8);
      *(void *)(v0 + 200) = v6;
      uint64_t v7 = *(void *)(v0 + 168);
      type metadata accessor for WidgetSnapshotModerator();
      uint64_t v8 = swift_allocObject();
      sub_251B95CE8(v6);
      *(void *)(v7 + 16) = v8;
      swift_release();
      return MEMORY[0x270FA2498](sub_251BA71CC, 0, 0);
    }
  }
}

uint64_t sub_251BA7010(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 176);
  *(void *)(*(void *)v1 + 192) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251BA7128, v2, 0);
}

uint64_t sub_251BA7128()
{
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  uint64_t v1 = (void *)v0[24];
  v0[25] = v1;
  uint64_t v2 = v0[21];
  type metadata accessor for WidgetSnapshotModerator();
  uint64_t v3 = swift_allocObject();
  sub_251B95CE8(v1);
  *(void *)(v2 + 16) = v3;
  swift_release();
  return MEMORY[0x270FA2498](sub_251BA71CC, 0, 0);
}

uint64_t sub_251BA71CC()
{
  sub_251F35C80();
  *(void *)(v0 + 208) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251BA7260, v2, v1);
}

uint64_t sub_251BA7260()
{
  swift_release();
  swift_beginAccess();
  qword_26B21F258 = 3;
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v3 = (void **)(qword_26B21FF50 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *uint64_t v3 = v1;
  id v5 = v1;

  return MEMORY[0x270FA2498](sub_251BA736C, v2, 0);
}

uint64_t sub_251BA736C()
{
  uint64_t v1 = *(void *)(v0 + 168);

  uint64_t result = *(void *)(v1 + 16);
  if (result)
  {
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_251BA73DC(unint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for StaticHome();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    if (!v10) {
      return v11;
    }
    uint64_t v20 = MEMORY[0x263F8EE78];
    uint64_t result = sub_251A3E048(0, v10 & ~(v10 >> 63), 0);
    if (v10 < 0) {
      break;
    }
    uint64_t v13 = 0;
    uint64_t v11 = v20;
    unint64_t v18 = v3;
    unint64_t v19 = a1 & 0xC000000000000001;
    uint64_t v3 = *(void **)(a2 + 184);
    unint64_t v14 = a1;
    while (v10 != v13)
    {
      if (v19) {
        id v15 = (id)MEMORY[0x2533AB3A0](v13, a1);
      }
      else {
        id v15 = *(id *)(a1 + 8 * v13 + 32);
      }
      sub_251C7E220(v15, v3, (uint64_t)v9);
      uint64_t v20 = v11;
      unint64_t v17 = *(void *)(v11 + 16);
      unint64_t v16 = *(void *)(v11 + 24);
      a2 = v17 + 1;
      if (v17 >= v16 >> 1)
      {
        sub_251A3E048(v16 > 1, v17 + 1, 1);
        uint64_t v11 = v20;
      }
      ++v13;
      *(void *)(v11 + 16) = a2;
      sub_251BAD624((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v17, (uint64_t (*)(void))type metadata accessor for StaticHome);
      a1 = v14;
      if (v10 == v13) {
        return v11;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_251F366C0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_251BA75F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(a1, (uint64_t)v6, &qword_26B21FF90);
  uint64_t v7 = sub_251F34DA0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = 1;
  uint64_t v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (v10 != 1)
  {
    MEMORY[0x270FA5388](v10);
    uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v12, v6, v7);
    id v13 = objc_msgSend(*(id *)(a2 + 184), sel_homes);
    sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
    unint64_t v14 = sub_251F35AC0();

    MEMORY[0x270FA5388](v15);
    *(&v17 - 2) = (uint64_t)v12;
    uint64_t v9 = (uint64_t)sub_251A95638(sub_251BAD7C0, (uint64_t)(&v17 - 4), v14);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  }
  return v9;
}

uint64_t type metadata accessor for WidgetRefresh()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for WidgetDetailUpdate()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for WidgetWriteRequests()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for WidgetSnapshotModerator.Error()
{
  uint64_t result = qword_269B9F308;
  if (!qword_269B9F308) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_251BA78A0()
{
  unint64_t result = qword_269B9F0A0;
  if (!qword_269B9F0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F0A0);
  }
  return result;
}

unint64_t sub_251BA78F4()
{
  unint64_t result = qword_269B9F0A8;
  if (!qword_269B9F0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F0A8);
  }
  return result;
}

unint64_t sub_251BA7948()
{
  unint64_t result = qword_269B9F0B0;
  if (!qword_269B9F0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F0B0);
  }
  return result;
}

unint64_t sub_251BA799C()
{
  unint64_t result = qword_269B9F0B8;
  if (!qword_269B9F0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F0B8);
  }
  return result;
}

unint64_t sub_251BA79F0()
{
  unint64_t result = qword_269B9F0C0;
  if (!qword_269B9F0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F0C0);
  }
  return result;
}

uint64_t sub_251BA7A44()
{
  return sub_251F34D70() & 1;
}

unint64_t sub_251BA7A94@<X0>(unint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_251B94844(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_251BA7AB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticHome();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_251BA7B14(uint64_t a1, uint64_t (*a2)(char *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v38 = a6;
  uint64_t v39 = a7;
  uint64_t v36 = a4;
  uint64_t v37 = a5;
  uint64_t v11 = type metadata accessor for StaticEndpoint();
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  unint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v35 = (uint64_t)&v34 - v15;
  uint64_t v16 = sub_251BA5F68(a1, a2);
  uint64_t v18 = v17;
  char v20 = v19 & 1;
  uint64_t v21 = sub_251BA6228(v16, v17, v19 & 1, 1 << *(unsigned char *)(a1 + 32), *(unsigned int *)(a1 + 36), 0, a1, (uint64_t (*)(void))a2);
  sub_251A4ECE4(v16, v18, v20);
  uint64_t v22 = MEMORY[0x263F8EE78];
  if (!v21) {
    return v22;
  }
  uint64_t v48 = MEMORY[0x263F8EE78];
  sub_251A3E280(0, v21 & ~(v21 >> 63), 0);
  uint64_t result = sub_251BA5F68(a1, a2);
  uint64_t v45 = result;
  uint64_t v46 = v24;
  char v47 = v25 & 1;
  if ((v21 & 0x8000000000000000) == 0)
  {
    uint64_t v34 = a3;
    while (1)
    {
      uint64_t v26 = a2;
      uint64_t v22 = v45;
      uint64_t v27 = v46;
      char v28 = v47;
      uint64_t v29 = v35;
      sub_251AC57F0(v45, v46, v47, a1, v35);
      sub_251BAD624(v29, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      sub_251B98EC8((uint64_t)v14, v36, v37, v38, v39, &v42);
      sub_251BAD68C((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      if (v7) {
        break;
      }
      uint64_t v30 = v42;
      long long v40 = v44;
      long long v41 = v43;
      uint64_t v22 = v48;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3E280(0, *(void *)(v22 + 16) + 1, 1);
        uint64_t v22 = v48;
      }
      unint64_t v32 = *(void *)(v22 + 16);
      unint64_t v31 = *(void *)(v22 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_251A3E280(v31 > 1, v32 + 1, 1);
        uint64_t v22 = v48;
      }
      *(void *)(v22 + 16) = v32 + 1;
      uint64_t v33 = v22 + 40 * v32;
      *(void *)(v33 + 32) = v30;
      *(_OWORD *)(v33 + 40) = v41;
      *(_OWORD *)(v33 + 56) = v40;
      a2 = v26;
      sub_251BA633C((uint64_t)&v45, a1, (uint64_t (*)(void))v26);
      if (!--v21)
      {
        sub_251A4ECE4(v45, v46, v47);
        return v22;
      }
    }
    sub_251A4ECE4(v22, v27, v28);
    swift_release();
    return v22;
  }
  __break(1u);
  return result;
}

uint64_t sub_251BA7DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_beginAccess();
  uint64_t v5 = (void *)MEMORY[0x263F8EE78];
  uint64_t v6 = 32;
  uint64_t v20 = a2;
  while (1)
  {
    uint64_t v21 = v6;
    uint64_t v22 = v2;
    uint64_t v7 = *(os_unfair_lock_s **)(a2 + 152);
    MEMORY[0x270FA5388](v4);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v7 + 6);
    sub_251BAD534((unint64_t)&v7[4], &v24);
    uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)&v7[6];
    if (v23) {
      break;
    }
    os_unfair_lock_unlock((os_unfair_lock_t)isUniquelyReferenced_nonNull_native);
    uint64_t v9 = v24;
    swift_release();
    swift_release();
    swift_release();
    uint64_t isUniquelyReferenced_nonNull_native = swift_release();
    uint64_t v10 = *(void *)(v9 + 16);
    int64_t v11 = v5[2];
    int64_t v12 = v11 + v10;
    if (__OFADD__(v11, v10))
    {
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
      break;
    }
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v12 <= v5[3] >> 1)
    {
      if (!*(void *)(v9 + 16)) {
        goto LABEL_3;
      }
    }
    else
    {
      if (v11 <= v12) {
        int64_t v13 = v11 + v10;
      }
      else {
        int64_t v13 = v11;
      }
      uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_251F103F4((void *)isUniquelyReferenced_nonNull_native, v13, 1, v5);
      uint64_t v5 = (void *)isUniquelyReferenced_nonNull_native;
      if (!*(void *)(v9 + 16))
      {
LABEL_3:
        if (v10) {
          goto LABEL_25;
        }
        goto LABEL_4;
      }
    }
    uint64_t v14 = v5[2];
    if ((v5[3] >> 1) - v14 < v10) {
      goto LABEL_26;
    }
    unint64_t v15 = (unint64_t)&v5[5 * v14 + 4];
    if (v9 + 32 < v15 + 40 * v10 && v15 < v9 + 32 + 40 * v10) {
      goto LABEL_29;
    }
    uint64_t isUniquelyReferenced_nonNull_native = swift_arrayInitWithCopy();
    if (v10)
    {
      uint64_t v16 = v5[2];
      BOOL v17 = __OFADD__(v16, v10);
      uint64_t v18 = v16 + v10;
      if (v17) {
        goto LABEL_27;
      }
      v5[2] = v18;
    }
LABEL_4:
    uint64_t v4 = swift_bridgeObjectRelease();
    uint64_t v6 = v21 + 16;
    uint64_t v2 = v22 - 1;
    a2 = v20;
    if (v22 == 1)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v5;
    }
  }
  os_unfair_lock_unlock((os_unfair_lock_t)isUniquelyReferenced_nonNull_native);
  __break(1u);
LABEL_29:
  swift_release();
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for WidgetSnapshotModerator.UpdateType()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_251BA80AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F120);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_251BA8114()
{
  unint64_t result = qword_269B9F150;
  if (!qword_269B9F150)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9DFF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F150);
  }
  return result;
}

uint64_t sub_251BA8170(uint64_t a1, uint64_t a2)
{
  return sub_251BAD3DC(&qword_269B9F158, a2, (void (*)(uint64_t))type metadata accessor for WidgetActor);
}

uint64_t type metadata accessor for WidgetActor()
{
  return self;
}

unint64_t sub_251BA81E0()
{
  unint64_t result = qword_269B9F160;
  if (!qword_269B9F160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F160);
  }
  return result;
}

unint64_t sub_251BA8238()
{
  unint64_t result = qword_269B9F168;
  if (!qword_269B9F168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F168);
  }
  return result;
}

unint64_t sub_251BA8290()
{
  unint64_t result = qword_269B9F170;
  if (!qword_269B9F170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F170);
  }
  return result;
}

unint64_t sub_251BA82E8()
{
  unint64_t result = qword_269B9F178;
  if (!qword_269B9F178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F178);
  }
  return result;
}

uint64_t sub_251BA833C()
{
  return sub_251BAD3DC(qword_269B9F180, 255, (void (*)(uint64_t))type metadata accessor for WidgetSnapshotModerator.Error);
}

uint64_t method lookup function for WidgetActor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for WidgetActor);
}

uint64_t dispatch thunk of HomeWidgetIdentifiable.uniqueIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HomeWidgetIdentifiable.widgetKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of UniquelyHashing.init(ids:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

ValueMetadata *type metadata accessor for BasicIdentity()
{
  return &type metadata for BasicIdentity;
}

ValueMetadata *type metadata accessor for WidgetRefreshOptions()
{
  return &type metadata for WidgetRefreshOptions;
}

uint64_t sub_251BA83FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

void sub_251BA8404()
{
  sub_251A24BB4();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_251BA84DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(uint64_t (**)(uint64_t))(*(void *)(v6 - 8) + 8);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v9 = *(void *)(v5 + 64) + a1;
  if (!*(_DWORD *)(v5 + 84)) {
    ++v9;
  }
  return v7((v9 + v8) & ~v8);
}

void *sub_251BA85EC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    int v8 = *(_DWORD *)(v7 + 84);
    size_t v9 = *(void *)(v7 + 64);
    if (v8) {
      size_t v10 = v9;
    }
    else {
      size_t v10 = v9 + 1;
    }
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    int64_t v12 = *(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56);
    uint64_t v11 = v7 + 56;
    v12(a1, 0, 1, v6);
    int v8 = *(_DWORD *)(v11 + 28);
    size_t v9 = *(void *)(v11 + 8);
  }
  if (v8) {
    size_t v13 = v9;
  }
  else {
    size_t v13 = v9 + 1;
  }
  uint64_t v14 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v15 = v14 + 32;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  unint64_t v18 = ((unint64_t)a1 + v17) & ~v16;
  unint64_t v19 = ((unint64_t)a2 + v17) & ~v16;
  (*(void (**)(unint64_t, unint64_t))(v14 + 32))(v18, v19);
  *(_DWORD *)((*(void *)(v15 + 32) + 3 + v18) & 0xFFFFFFFFFFFFFFFCLL) = *(_DWORD *)((*(void *)(v15 + 32)
                                                                                       + 3
                                                                                       + v19) & 0xFFFFFFFFFFFFFFFCLL);
  return a1;
}

void *sub_251BA8774(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_12;
    }
    int v11 = *(_DWORD *)(v7 + 84);
    size_t v12 = *(void *)(v7 + 64);
  }
  else
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    int v11 = *(_DWORD *)(v7 + 84);
    size_t v12 = *(void *)(v7 + 64);
  }
  if (v11) {
    size_t v13 = v12;
  }
  else {
    size_t v13 = v12 + 1;
  }
  memcpy(a1, a2, v13);
LABEL_12:
  if (*(_DWORD *)(v7 + 84)) {
    uint64_t v14 = *(void *)(v7 + 64);
  }
  else {
    uint64_t v14 = *(void *)(v7 + 64) + 1;
  }
  uint64_t v15 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v16 = v15 + 40;
  uint64_t v17 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = v14 + v17;
  unint64_t v19 = ((unint64_t)a1 + v18) & ~v17;
  unint64_t v20 = ((unint64_t)a2 + v18) & ~v17;
  (*(void (**)(unint64_t, unint64_t))(v15 + 40))(v19, v20);
  *(_DWORD *)((*(void *)(v16 + 24) + 3 + v19) & 0xFFFFFFFFFFFFFFFCLL) = *(_DWORD *)((*(void *)(v16 + 24)
                                                                                       + 3
                                                                                       + v20) & 0xFFFFFFFFFFFFFFFCLL);
  return a1;
}

uint64_t sub_251BA8978(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(sub_251F34DA0() - 8);
  uint64_t v7 = v6;
  int v8 = *(_DWORD *)(v6 + 84);
  if (v8) {
    unsigned int v9 = v8 - 1;
  }
  else {
    unsigned int v9 = 0;
  }
  uint64_t v10 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v9) {
    unsigned int v12 = v9;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v13 = *(void *)(v6 + 64);
  uint64_t v14 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = *(void *)(v10 + 64);
  if (v8) {
    uint64_t v16 = v13;
  }
  else {
    uint64_t v16 = v13 + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v17 = v16 + v14;
  if (v12 < a2)
  {
    unint64_t v18 = ((v15 + (v17 & ~v14) + 3) & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((v18 & 0xFFFFFFFC) != 0) {
      unsigned int v19 = 2;
    }
    else {
      unsigned int v19 = a2 - v12 + 1;
    }
    if (v19 >= 0x10000) {
      unsigned int v20 = 4;
    }
    else {
      unsigned int v20 = 2;
    }
    if (v19 < 0x100) {
      unsigned int v20 = 1;
    }
    if (v19 >= 2) {
      uint64_t v21 = v20;
    }
    else {
      uint64_t v21 = 0;
    }
    switch(v21)
    {
      case 1:
        int v22 = *((unsigned __int8 *)a1 + v18);
        if (!*((unsigned char *)a1 + v18)) {
          break;
        }
        goto LABEL_27;
      case 2:
        int v22 = *(unsigned __int16 *)((char *)a1 + v18);
        if (*(_WORD *)((char *)a1 + v18)) {
          goto LABEL_27;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x251BA8B94);
      case 4:
        int v22 = *(_DWORD *)((char *)a1 + v18);
        if (!v22) {
          break;
        }
LABEL_27:
        int v23 = v22 - 1;
        if ((v18 & 0xFFFFFFFC) != 0)
        {
          int v23 = 0;
          int v24 = *a1;
        }
        else
        {
          int v24 = 0;
        }
        return v12 + (v24 | v23) + 1;
      default:
        break;
    }
  }
  if (!v12) {
    return 0;
  }
  if (v9 >= v11)
  {
    unsigned int v27 = (*(uint64_t (**)(_DWORD *))(v7 + 48))(a1);
    if (v27 >= 2) {
      return v27 - 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    char v25 = *(uint64_t (**)(unint64_t, uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 48);
    return v25(((unint64_t)a1 + v17) & ~v14, v11);
  }
}

void sub_251BA8BA8(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  int v8 = 0;
  uint64_t v9 = *(void *)(sub_251F34DA0() - 8);
  uint64_t v10 = v9;
  int v11 = *(_DWORD *)(v9 + 84);
  if (v11) {
    unsigned int v12 = v11 - 1;
  }
  else {
    unsigned int v12 = 0;
  }
  uint64_t v13 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v14 = *(unsigned int *)(v13 + 84);
  size_t v15 = *(void *)(v9 + 64);
  uint64_t v16 = *(unsigned __int8 *)(v13 + 80);
  if (v14 <= v12) {
    unsigned int v17 = v12;
  }
  else {
    unsigned int v17 = *(_DWORD *)(v13 + 84);
  }
  if (v11) {
    size_t v18 = v15;
  }
  else {
    size_t v18 = v15 + 1;
  }
  size_t v19 = ((*(void *)(v13 + 64) + ((v18 + v16) & ~v16) + 3) & 0xFFFFFFFFFFFFFFFCLL) + 4;
  if (v17 < a3)
  {
    if (((*(_DWORD *)(v13 + 64) + ((v18 + v16) & ~v16) + 3) & 0xFFFFFFFC) == 0xFFFFFFFC) {
      unsigned int v20 = a3 - v17 + 1;
    }
    else {
      unsigned int v20 = 2;
    }
    if (v20 >= 0x10000) {
      int v21 = 4;
    }
    else {
      int v21 = 2;
    }
    if (v20 < 0x100) {
      int v21 = 1;
    }
    if (v20 >= 2) {
      int v8 = v21;
    }
    else {
      int v8 = 0;
    }
  }
  if (a2 > v17)
  {
    if (((*(_DWORD *)(v13 + 64) + ((v18 + v16) & ~v16) + 3) & 0xFFFFFFFC) == 0xFFFFFFFC) {
      int v22 = a2 - v17;
    }
    else {
      int v22 = 1;
    }
    if (((*(_DWORD *)(v13 + 64) + ((v18 + v16) & ~v16) + 3) & 0xFFFFFFFC) != 0xFFFFFFFC)
    {
      int v23 = ~v17 + a2;
      bzero(a1, v19);
      *(_DWORD *)a1 = v23;
    }
    switch(v8)
    {
      case 1:
        a1[v19] = v22;
        return;
      case 2:
        *(_WORD *)&a1[v19] = v22;
        return;
      case 3:
        goto LABEL_60;
      case 4:
        *(_DWORD *)&a1[v19] = v22;
        return;
      default:
        return;
    }
  }
  switch(v8)
  {
    case 1:
      a1[v19] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_37;
    case 2:
      *(_WORD *)&a1[v19] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_37;
    case 3:
LABEL_60:
      __break(1u);
      JUMPOUT(0x251BA8EB0);
    case 4:
      *(_DWORD *)&a1[v19] = 0;
      goto LABEL_36;
    default:
LABEL_36:
      if (a2)
      {
LABEL_37:
        if (v12 >= v14)
        {
          if (v12 >= a2)
          {
            char v28 = *(void (**)(unsigned char *, void))(v10 + 56);
            v28(a1, (a2 + 1));
          }
          else
          {
            if (v18 <= 3) {
              int v25 = ~(-1 << (8 * v18));
            }
            else {
              int v25 = -1;
            }
            if (v18)
            {
              int v26 = v25 & (~v12 + a2);
              if (v18 <= 3) {
                int v27 = v18;
              }
              else {
                int v27 = 4;
              }
              bzero(a1, v18);
              switch(v27)
              {
                case 2:
                  *(_WORD *)a1 = v26;
                  break;
                case 3:
                  *(_WORD *)a1 = v26;
                  a1[2] = BYTE2(v26);
                  break;
                case 4:
                  *(_DWORD *)a1 = v26;
                  break;
                default:
                  *a1 = v26;
                  break;
              }
            }
          }
        }
        else
        {
          int v24 = *(void (**)(unint64_t, uint64_t, uint64_t))(v13 + 56);
          v24((unint64_t)&a1[v18 + v16] & ~v16, a2, v14);
        }
      }
      return;
  }
}

void sub_251BA8EE8()
{
  sub_251A24BB4();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_251BA8FDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(void *)(v5 + 64);
  if (!*(_DWORD *)(v5 + 84)) {
    ++v6;
  }
  unint64_t v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v9 = *(uint64_t (**)(unint64_t))(v8 + 8);
  unint64_t v10 = ((v7 & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  return v9(v10);
}

void *sub_251BA910C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    int v8 = *(_DWORD *)(v7 + 84);
    size_t v9 = *(void *)(v7 + 64);
    if (v8) {
      size_t v10 = v9;
    }
    else {
      size_t v10 = v9 + 1;
    }
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    unsigned int v12 = *(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56);
    uint64_t v11 = v7 + 56;
    v12(a1, 0, 1, v6);
    int v8 = *(_DWORD *)(v11 + 28);
    size_t v9 = *(void *)(v11 + 8);
  }
  if (v8) {
    size_t v13 = v9;
  }
  else {
    size_t v13 = v9 + 1;
  }
  size_t v14 = v13 + 7;
  size_t v15 = (void *)(((unint64_t)a1 + v14) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)(((unint64_t)a2 + v14) & 0xFFFFFFFFFFFFFFF8);
  void *v15 = *v16;
  unsigned int v17 = (void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  size_t v18 = (void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v17 = *v18;
  uint64_t v19 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v20 = v19 + 32;
  uint64_t v21 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v22 = ((unint64_t)v17 + v21 + 8) & ~v21;
  uint64_t v23 = ((unint64_t)v18 + v21 + 8) & ~v21;
  (*(void (**)(uint64_t, uint64_t))(v19 + 32))(v22, v23);
  uint64_t v24 = *(void *)(v20 + 32) + 3;
  unint64_t v25 = (v24 + v22) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v26 = (v24 + v23) & 0xFFFFFFFFFFFFFFFCLL;
  *(_DWORD *)unint64_t v25 = *(_DWORD *)v26;
  *(unsigned char *)(v25 + 4) = *(unsigned char *)(v26 + 4);
  return a1;
}

void *sub_251BA92C8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_12;
    }
    int v11 = *(_DWORD *)(v7 + 84);
    size_t v12 = *(void *)(v7 + 64);
  }
  else
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    int v11 = *(_DWORD *)(v7 + 84);
    size_t v12 = *(void *)(v7 + 64);
  }
  if (v11) {
    size_t v13 = v12;
  }
  else {
    size_t v13 = v12 + 1;
  }
  memcpy(a1, a2, v13);
LABEL_12:
  if (*(_DWORD *)(v7 + 84)) {
    uint64_t v14 = *(void *)(v7 + 64);
  }
  else {
    uint64_t v14 = *(void *)(v7 + 64) + 1;
  }
  uint64_t v15 = v14 + 7;
  uint64_t v16 = (void *)(((unint64_t)a1 + v15) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v17 = (void *)(((unint64_t)a2 + v15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v16 = *v17;
  swift_bridgeObjectRelease();
  size_t v18 = (void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = (void *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  *size_t v18 = *v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v21 = v20 + 40;
  uint64_t v22 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v23 = ((unint64_t)v18 + v22 + 8) & ~v22;
  uint64_t v24 = ((unint64_t)v19 + v22 + 8) & ~v22;
  (*(void (**)(uint64_t, uint64_t))(v20 + 40))(v23, v24);
  uint64_t v25 = *(void *)(v21 + 24) + 3;
  unint64_t v26 = (v25 + v23) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v27 = (v25 + v24) & 0xFFFFFFFFFFFFFFFCLL;
  *(_DWORD *)unint64_t v26 = *(_DWORD *)v27;
  *(unsigned char *)(v26 + 4) = *(unsigned char *)(v27 + 4);
  return a1;
}

uint64_t sub_251BA9510(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(sub_251F34DA0() - 8);
  uint64_t v7 = v6;
  unsigned int v8 = *(_DWORD *)(v6 + 84);
  if (v8) {
    unsigned int v9 = v8 - 1;
  }
  else {
    unsigned int v9 = 0;
  }
  uint64_t v10 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  uint64_t v12 = *(void *)(v6 + 64);
  uint64_t v13 = *(unsigned __int8 *)(v10 + 80);
  if (v9 <= v11) {
    unsigned int v14 = *(_DWORD *)(v10 + 84);
  }
  else {
    unsigned int v14 = v9;
  }
  if (v14 <= 0x7FFFFFFF) {
    unsigned int v15 = 0x7FFFFFFF;
  }
  else {
    unsigned int v15 = v14;
  }
  if (!v8) {
    ++v12;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v16 = v13 + 8;
  if (v15 < a2)
  {
    unint64_t v17 = ((*(void *)(v10 + 64)
          + ((v16 + ((((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v13)
          + 3) & 0xFFFFFFFFFFFFFFFCLL)
        + 5;
    if (v17 < 4) {
      unsigned int v18 = ((a2 - v15 + 255) >> (8 * v17)) + 1;
    }
    else {
      unsigned int v18 = 2;
    }
    if (v18 >= 0x10000) {
      unsigned int v19 = 4;
    }
    else {
      unsigned int v19 = 2;
    }
    if (v18 < 0x100) {
      unsigned int v19 = 1;
    }
    if (v18 >= 2) {
      uint64_t v20 = v19;
    }
    else {
      uint64_t v20 = 0;
    }
    switch(v20)
    {
      case 1:
        int v21 = a1[v17];
        if (!a1[v17]) {
          break;
        }
        goto LABEL_29;
      case 2:
        int v21 = *(unsigned __int16 *)&a1[v17];
        if (*(_WORD *)&a1[v17]) {
          goto LABEL_29;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x251BA9794);
      case 4:
        int v21 = *(_DWORD *)&a1[v17];
        if (!v21) {
          break;
        }
LABEL_29:
        int v22 = (v21 - 1) << (8 * v17);
        if (v17 >= 4) {
          int v22 = 0;
        }
        if (((*(_DWORD *)(v10 + 64)
             + ((v16 + ((((v12 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)) & ~v13)
             + 3) & 0xFFFFFFFC) == 0xFFFFFFFC)
          int v23 = *a1;
        else {
          int v23 = *(_DWORD *)a1;
        }
        return v15 + (v23 | v22) + 1;
      default:
        break;
    }
  }
  if (v9 == v15)
  {
    if (v8 < 2) {
      return 0;
    }
    unsigned int v27 = (*(uint64_t (**)(unsigned __int8 *))(v7 + 48))(a1);
    if (v27 >= 2) {
      return v27 - 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v25 = (unint64_t *)((unint64_t)&a1[v12 + 7] & 0xFFFFFFFFFFFFFFF8);
    if ((v14 & 0x80000000) != 0)
    {
      char v28 = *(uint64_t (**)(unint64_t, uint64_t))(v10 + 48);
      return v28((v16 + (((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v13, v11);
    }
    else
    {
      unint64_t v26 = *v25;
      if (v26 >= 0xFFFFFFFF) {
        LODWORD(v26) = -1;
      }
      return (v26 + 1);
    }
  }
}

void sub_251BA97A8(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  int v8 = 0;
  uint64_t v9 = *(void *)(sub_251F34DA0() - 8);
  uint64_t v10 = v9;
  int v11 = *(_DWORD *)(v9 + 84);
  uint64_t v12 = *(void *)(*(void *)(a4 + 16) - 8);
  if (v11) {
    unsigned int v13 = v11 - 1;
  }
  else {
    unsigned int v13 = 0;
  }
  uint64_t v14 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v15 = *(unsigned int *)(v12 + 84);
  uint64_t v16 = *(void *)(v9 + 64);
  uint64_t v17 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v18 = *(void *)(v12 + 64);
  if (v13 <= v15) {
    unsigned int v19 = *(_DWORD *)(v12 + 84);
  }
  else {
    unsigned int v19 = v13;
  }
  if (v19 <= 0x7FFFFFFF) {
    unsigned int v20 = 0x7FFFFFFF;
  }
  else {
    unsigned int v20 = v19;
  }
  if (!v11) {
    ++v16;
  }
  uint64_t v21 = v17 + 8;
  size_t v22 = ((v18 + ((v17 + 8 + ((((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v17) + 3) & 0xFFFFFFFFFFFFFFFCLL)
      + 5;
  char v23 = 8 * v22;
  if (v20 < a3)
  {
    if (v22 <= 3) {
      unsigned int v24 = ((a3 - v20 + 255) >> v23) + 1;
    }
    else {
      unsigned int v24 = 2;
    }
    if (v24 >= 0x10000) {
      int v25 = 4;
    }
    else {
      int v25 = 2;
    }
    if (v24 < 0x100) {
      int v25 = 1;
    }
    if (v24 >= 2) {
      int v8 = v25;
    }
    else {
      int v8 = 0;
    }
  }
  if (v20 < a2)
  {
    unsigned int v26 = ~v20 + a2;
    unsigned int v27 = (~(_BYTE)v20 + a2);
    if (v22 < 4) {
      int v28 = (v26 >> v23) + 1;
    }
    else {
      int v28 = 1;
    }
    if (v22 >= 4) {
      unsigned int v29 = v26;
    }
    else {
      unsigned int v29 = v27;
    }
    bzero(a1, v22);
    if (v22 == 1) {
      *a1 = v29;
    }
    else {
      *(_DWORD *)a1 = v29;
    }
    switch(v8)
    {
      case 1:
        a1[v22] = v28;
        return;
      case 2:
        *(_WORD *)&a1[v22] = v28;
        return;
      case 3:
        goto LABEL_58;
      case 4:
        *(_DWORD *)&a1[v22] = v28;
        return;
      default:
        return;
    }
  }
  uint64_t v30 = ~v17;
  switch(v8)
  {
    case 1:
      a1[v22] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_41;
    case 2:
      *(_WORD *)&a1[v22] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_41;
    case 3:
LABEL_58:
      __break(1u);
      JUMPOUT(0x251BA9A9CLL);
    case 4:
      *(_DWORD *)&a1[v22] = 0;
      goto LABEL_40;
    default:
LABEL_40:
      if (a2)
      {
LABEL_41:
        if (v13 == v20)
        {
          unint64_t v31 = *(void (**)(unsigned char *, void))(v10 + 56);
          v31(a1, (a2 + 1));
        }
        else
        {
          unint64_t v32 = (void *)((unint64_t)&a1[v16 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((v19 & 0x80000000) != 0)
          {
            uint64_t v34 = *(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 56);
            v34((v21 + (((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8)) & v30, a2, v15);
          }
          else
          {
            if ((a2 & 0x80000000) != 0) {
              uint64_t v33 = a2 ^ 0x80000000;
            }
            else {
              uint64_t v33 = (a2 - 1);
            }
            *unint64_t v32 = v33;
          }
        }
      }
      return;
  }
}

uint64_t sub_251BA9AC4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_251BA9B70(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return v5(v6);
}

void *sub_251BA9BE4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 32;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v7, v8);
  *(_DWORD *)((*(void *)(v5 + 32) + 3 + v7) & 0xFFFFFFFFFFFFFFFCLL) = *(_DWORD *)((*(void *)(v5 + 32) + 3 + v8) & 0xFFFFFFFFFFFFFFFCLL);
  return a1;
}

void *sub_251BA9C84(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 40;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 8) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 8) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 40))(v9, v10);
  *(_DWORD *)((*(void *)(v7 + 24) + 3 + v9) & 0xFFFFFFFFFFFFFFFCLL) = *(_DWORD *)((*(void *)(v7 + 24) + 3 + v10) & 0xFFFFFFFFFFFFFFFCLL);
  return a1;
}

uint64_t sub_251BA9D34(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + ((v6 + 8) & ~v6) + 3) & 0xFFFFFFFFFFFFFFFCLL)
       + 4;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFFC;
    if ((v8 & 0xFFFFFFFC) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x251BA9E8CLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if ((v5 & 0x80000000) != 0) {
    return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 8) & ~v6);
  }
  uint64_t v17 = *(void *)a1;
  if (*(void *)a1 >= 0xFFFFFFFFuLL) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_251BA9EA0(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 8) & ~v9) + 3) & 0xFFFFFFFFFFFFFFFCLL)
      + 4;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if ((v7 & 0x80000000) != 0)
            {
              unint64_t v19 = (unint64_t)&a1[v9 + 8] & ~v9;
              unsigned int v20 = *(void (**)(unint64_t))(v6 + 56);
              v20(v19);
            }
            else
            {
              if ((a2 & 0x80000000) != 0) {
                uint64_t v18 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v18 = a2 - 1;
              }
              *(void *)a1 = v18;
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 8) & ~v9) + 3) & 0xFFFFFFFC) == 0xFFFFFFFC) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 8) & ~v9) + 3) & 0xFFFFFFFC) == 0xFFFFFFFC) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 8) & ~v9) + 3) & 0xFFFFFFFC) != 0xFFFFFFFC)
  {
    int v17 = ~v8 + a2;
    bzero(a1, v10);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x251BAA090);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for WidgetSnapshotModerator()
{
  return self;
}

uint64_t method lookup function for WidgetSnapshotModerator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for WidgetSnapshotModerator);
}

ValueMetadata *sub_251BAA0F4()
{
  if (MEMORY[0x263F8EEE0]) {
    return &type metadata for WidgetManager;
  }
  else {
    return (ValueMetadata *)(MEMORY[0x263F8EE60] + 8);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for WidgetSnapshotModerator.Error(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 3, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = sub_251F34DA0();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        memcpy(a1, a2, *(void *)(v8 + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v11 + 16))(a1, a2, v10);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 3, v7);
    }
  }
  return a1;
}

uint64_t destroy for WidgetSnapshotModerator.Error(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 3, v2);
  if (!result)
  {
    uint64_t v4 = sub_251F34DA0();
    uint64_t v6 = *(void *)(v4 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v4);
    if (!result)
    {
      int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
      return v5(a1, v4);
    }
  }
  return result;
}

void *initializeWithCopy for WidgetSnapshotModerator.Error(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_251F34DA0();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      memcpy(a1, a2, *(void *)(v7 + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(a1, a2, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

void *assignWithCopy for WidgetSnapshotModerator.Error(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 3, v6);
  int v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v14 = sub_251F34DA0();
      uint64_t v15 = *(void *)(v14 - 8);
      int v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
      int v17 = v16(a1, 1, v14);
      int v18 = v16(a2, 1, v14);
      if (v17)
      {
        if (!v18)
        {
          (*(void (**)(void *, void *, uint64_t))(v15 + 16))(a1, a2, v14);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
          return a1;
        }
      }
      else
      {
        if (!v18)
        {
          (*(void (**)(void *, void *, uint64_t))(v15 + 24))(a1, a2, v14);
          return a1;
        }
        (*(void (**)(void *, uint64_t))(v15 + 8))(a1, v14);
      }
      size_t v13 = *(void *)(v7 + 64);
      goto LABEL_8;
    }
    sub_251A1B064((uint64_t)a1, &qword_26B21FF90);
LABEL_7:
    size_t v13 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v13);
    return a1;
  }
  if (v10) {
    goto LABEL_7;
  }
  uint64_t v11 = sub_251F34DA0();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    memcpy(a1, a2, *(void *)(v7 + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v12 + 16))(a1, a2, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

void *initializeWithTake for WidgetSnapshotModerator.Error(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_251F34DA0();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      memcpy(a1, a2, *(void *)(v7 + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

void *assignWithTake for WidgetSnapshotModerator.Error(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 3, v6);
  int v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v14 = sub_251F34DA0();
      uint64_t v15 = *(void *)(v14 - 8);
      int v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
      int v17 = v16(a1, 1, v14);
      int v18 = v16(a2, 1, v14);
      if (v17)
      {
        if (!v18)
        {
          (*(void (**)(void *, void *, uint64_t))(v15 + 32))(a1, a2, v14);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
          return a1;
        }
      }
      else
      {
        if (!v18)
        {
          (*(void (**)(void *, void *, uint64_t))(v15 + 40))(a1, a2, v14);
          return a1;
        }
        (*(void (**)(void *, uint64_t))(v15 + 8))(a1, v14);
      }
      size_t v13 = *(void *)(v7 + 64);
      goto LABEL_8;
    }
    sub_251A1B064((uint64_t)a1, &qword_26B21FF90);
LABEL_7:
    size_t v13 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v13);
    return a1;
  }
  if (v10) {
    goto LABEL_7;
  }
  uint64_t v11 = sub_251F34DA0();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    memcpy(a1, a2, *(void *)(v7 + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v12 + 32))(a1, a2, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetSnapshotModerator.Error(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251BAADC0);
}

uint64_t sub_251BAADC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 4) {
    return v5 - 3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for WidgetSnapshotModerator.Error(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251BAAE44);
}

uint64_t sub_251BAAE44(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 3);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_251BAAECC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 3, v2);
}

uint64_t sub_251BAAF38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 3, v4);
}

void sub_251BAAFAC()
{
  sub_251A24BB4();
  if (v0 <= 0x3F) {
    swift_initEnumMetadataSinglePayload();
  }
}

uint64_t sub_251BAB024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_251BAB02C()
{
  uint64_t result = type metadata accessor for WidgetRefresh();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for WidgetDetailUpdate();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for WidgetWriteRequests();
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_251BAB150(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(void *)(v4 - 8);
  if (*(_DWORD *)(v5 + 84)) {
    uint64_t v6 = *(void *)(v5 + 64);
  }
  else {
    uint64_t v6 = *(void *)(v5 + 64) + 1;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v9 = *(void *)(*(void *)(v7 - 8) + 64) + 3;
  unint64_t v10 = ((v9 + ((v6 + v8) & ~v8)) & 0xFFFFFFFFFFFFFFFCLL) + 4;
  unint64_t v11 = ((v9 + ((v8 + 8) & ~v8)) & 0xFFFFFFFFFFFFFFFCLL) + 4;
  unint64_t v12 = ((v9 + ((v8 + 8 + ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v8)) & 0xFFFFFFFFFFFFFFFCLL)
      + 5;
  if (v12 <= v10) {
    unint64_t v12 = v10;
  }
  if (v11 > v12) {
    unint64_t v12 = v11;
  }
  unsigned int v13 = a1[v12];
  unsigned int v14 = v13 - 3;
  if (v13 >= 3)
  {
    int v15 = v12 <= 3 ? v12 : 4;
    if (v15)
    {
      if (v15 == 4)
      {
        int v16 = *(_DWORD *)a1;
        if (v12 < 4)
        {
LABEL_15:
          unsigned int v13 = (v16 | (v14 << (8 * v12))) + 3;
          goto LABEL_18;
        }
      }
      else
      {
        int v16 = *a1;
        if (v12 < 4) {
          goto LABEL_15;
        }
      }
      unsigned int v13 = v16 + 3;
    }
  }
LABEL_18:
  uint64_t v21 = *(void *)(v7 - 8);
  if (v13 == 2)
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = v21;
    uint64_t v17 = (uint64_t)&a1[v8 + 8];
  }
  else
  {
    if (v13 == 1)
    {
      if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, v4);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v17 = ((((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v8 + 8;
    }
    else
    {
      if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, v4);
      }
      uint64_t v17 = (uint64_t)&a1[v6 + v8];
    }
    uint64_t v18 = v21;
  }
  unint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8);
  return v19(v17 & ~v8, v7);
}

void *sub_251BAB3EC(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = sub_251F34DA0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  size_t v11 = v7 + v10;
  uint64_t v12 = *(void *)(v9 + 64) + 3;
  unint64_t v13 = ((v12 + ((v7 + v10) & ~v10)) & 0xFFFFFFFFFFFFFFFCLL) + 4;
  unint64_t v14 = (((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  if (((v12 + ((v10 + 8 + v14) & ~v10)) & 0xFFFFFFFFFFFFFFFCLL) + 5 > v13) {
    unint64_t v13 = ((v12 + ((v10 + 8 + v14) & ~v10)) & 0xFFFFFFFFFFFFFFFCLL) + 5;
  }
  if (((v12 + ((v10 + 8) & ~v10)) & 0xFFFFFFFFFFFFFFFCLL) + 4 <= v13) {
    unint64_t v15 = v13;
  }
  else {
    unint64_t v15 = ((v12 + ((v10 + 8) & ~v10)) & 0xFFFFFFFFFFFFFFFCLL) + 4;
  }
  unsigned int v16 = a2[v15];
  unsigned int v17 = v16 - 3;
  if (v16 >= 3)
  {
    int v18 = v15 <= 3 ? v15 : 4;
    if (v18)
    {
      if (v18 == 4)
      {
        int v19 = *(_DWORD *)a2;
        if (v15 >= 4) {
          goto LABEL_19;
        }
      }
      else
      {
        int v19 = *a2;
        if (v15 >= 4)
        {
LABEL_19:
          unsigned int v16 = v19 + 3;
          goto LABEL_20;
        }
      }
      v19 |= v17 << (8 * v15);
      goto LABEL_19;
    }
  }
LABEL_20:
  uint64_t v20 = ~v10;
  if (v16 == 2)
  {
    uint64_t v21 = a1;
    *a1 = *(void *)a2;
    (*(void (**)(unint64_t, unint64_t))(v9 + 32))(((unint64_t)a1 + v10 + 8) & v20, (unint64_t)&a2[v10 + 8] & v20);
    *(_DWORD *)((v12 + (((unint64_t)a1 + v10 + 8) & v20)) & 0xFFFFFFFFFFFFFFFCLL) = *(_DWORD *)((v12 + ((unint64_t)&a2[v10 + 8] & v20)) & 0xFFFFFFFFFFFFFFFCLL);
    char v22 = 2;
  }
  else if (v16 == 1)
  {
    uint64_t v34 = v8;
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
    {
      uint64_t v21 = a1;
      memcpy(a1, a2, v7);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      uint64_t v21 = a1;
    }
    unsigned int v24 = (void *)(((unint64_t)v21 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    int v25 = (void *)((unint64_t)&a2[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
    *unsigned int v24 = *v25;
    unsigned int v26 = (void *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
    unsigned int v27 = (void *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
    *unsigned int v26 = *v27;
    uint64_t v28 = ((unint64_t)v26 + v10 + 8) & v20;
    uint64_t v29 = ((unint64_t)v27 + v10 + 8) & v20;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v28, v29, v34);
    unint64_t v30 = (v12 + v28) & 0xFFFFFFFFFFFFFFFCLL;
    unint64_t v31 = (v12 + v29) & 0xFFFFFFFFFFFFFFFCLL;
    *(_DWORD *)unint64_t v30 = *(_DWORD *)v31;
    *(unsigned char *)(v30 + 4) = *(unsigned char *)(v31 + 4);
    char v22 = 1;
  }
  else
  {
    uint64_t v23 = v8;
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
    {
      uint64_t v21 = a1;
      memcpy(a1, a2, v7);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      uint64_t v21 = a1;
    }
    unint64_t v32 = (unint64_t)&a2[v11] & v20;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 32))(((unint64_t)v21 + v11) & v20, v32, v23);
    char v22 = 0;
    *(_DWORD *)((v12 + (((unint64_t)v21 + v11) & v20)) & 0xFFFFFFFFFFFFFFFCLL) = *(_DWORD *)((v12 + v32) & 0xFFFFFFFFFFFFFFFCLL);
  }
  *((unsigned char *)v21 + v15) = v22;
  return v21;
}

void *sub_251BAB7F0(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != (void *)a2)
  {
    uint64_t v6 = sub_251F34DA0();
    uint64_t v7 = *(void *)(v6 - 8);
    if (*(_DWORD *)(v7 + 84)) {
      uint64_t v8 = *(void *)(v7 + 64);
    }
    else {
      uint64_t v8 = *(void *)(v7 + 64) + 1;
    }
    uint64_t v9 = *(void *)(a3 + 16);
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v40 = v8 + v11;
    uint64_t v12 = *(void *)(v10 + 64) + 3;
    unint64_t v13 = ((v12 + ((v8 + v11) & ~v11)) & 0xFFFFFFFFFFFFFFFCLL) + 4;
    unint64_t v14 = (((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
    if (((v12 + ((v11 + 8 + v14) & ~v11)) & 0xFFFFFFFFFFFFFFFCLL) + 5 > v13) {
      unint64_t v13 = ((v12 + ((v11 + 8 + v14) & ~v11)) & 0xFFFFFFFFFFFFFFFCLL) + 5;
    }
    if (((v12 + ((v11 + 8) & ~v11)) & 0xFFFFFFFFFFFFFFFCLL) + 4 <= v13) {
      unint64_t v15 = v13;
    }
    else {
      unint64_t v15 = ((v12 + ((v11 + 8) & ~v11)) & 0xFFFFFFFFFFFFFFFCLL) + 4;
    }
    unsigned int v16 = *((unsigned __int8 *)a1 + v15);
    unsigned int v17 = v16 - 3;
    if (v16 < 3 || (v15 <= 3 ? (int v18 = v15) : (int v18 = 4), !v18))
    {
LABEL_21:
      uint64_t v20 = ~v11;
      size_t __n = v8;
      if (v16 == 2)
      {
        uint64_t v21 = v6;
        swift_bridgeObjectRelease();
        uint64_t v22 = (uint64_t)a1 + v11 + 8;
      }
      else if (v16 == 1)
      {
        uint64_t v21 = v6;
        if (!(*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6)) {
          (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v21);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v22 = (((((unint64_t)a1 + __n + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v11 + 8;
      }
      else
      {
        uint64_t v21 = v6;
        if (!(*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6)) {
          (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v21);
        }
        uint64_t v22 = (uint64_t)a1 + v40;
      }
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v22 & v20, v9);
      unsigned int v23 = a2[v15];
      unsigned int v24 = v23 - 3;
      if (v23 < 3 || (v15 <= 3 ? (int v25 = v15) : (int v25 = 4), !v25))
      {
LABEL_38:
        if (v23 != 2) {
          goto LABEL_39;
        }
        goto LABEL_46;
      }
      if (v25 == 4)
      {
        int v26 = *(_DWORD *)a2;
        if (v15 < 4)
        {
LABEL_37:
          unsigned int v23 = (v26 | (v24 << (8 * v15))) + 3;
          goto LABEL_38;
        }
      }
      else
      {
        int v26 = *a2;
        if (v15 < 4) {
          goto LABEL_37;
        }
      }
      unsigned int v23 = v26 + 3;
      if (v23 != 2)
      {
LABEL_39:
        if (v23 == 1)
        {
          uint64_t v39 = v9;
          if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v21))
          {
            size_t v27 = __n;
            memcpy(a1, a2, __n);
          }
          else
          {
            (*(void (**)(void *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v21);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v21);
            size_t v27 = __n;
          }
          uint64_t v29 = (void *)(((unint64_t)a1 + v27 + 7) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v30 = (void *)((unint64_t)&a2[v27 + 7] & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v29 = *v30;
          unint64_t v31 = (void *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v32 = (void *)(((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8);
          void *v31 = *v32;
          uint64_t v33 = ((unint64_t)v31 + v11 + 8) & v20;
          uint64_t v34 = ((unint64_t)v32 + v11 + 8) & v20;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v33, v34, v39);
          unint64_t v35 = (v12 + v33) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v36 = (v12 + v34) & 0xFFFFFFFFFFFFFFFCLL;
          *(_DWORD *)unint64_t v35 = *(_DWORD *)v36;
          *(unsigned char *)(v35 + 4) = *(unsigned char *)(v36 + 4);
          char v28 = 1;
        }
        else
        {
          if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v21))
          {
            memcpy(a1, a2, __n);
          }
          else
          {
            (*(void (**)(void *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v21);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v21);
          }
          unint64_t v37 = (unint64_t)&a2[v40] & v20;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 32))(((unint64_t)a1 + v40) & v20, v37, v9);
          char v28 = 0;
          *(_DWORD *)((v12 + (((unint64_t)a1 + v40) & v20)) & 0xFFFFFFFFFFFFFFFCLL) = *(_DWORD *)((v12 + v37) & 0xFFFFFFFFFFFFFFFCLL);
        }
        goto LABEL_51;
      }
LABEL_46:
      *a1 = *(void *)a2;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 32))(((unint64_t)a1 + v11 + 8) & v20, (unint64_t)&a2[v11 + 8] & v20, v9);
      *(_DWORD *)((v12 + (((unint64_t)a1 + v11 + 8) & v20)) & 0xFFFFFFFFFFFFFFFCLL) = *(_DWORD *)((v12 + ((unint64_t)&a2[v11 + 8] & v20)) & 0xFFFFFFFFFFFFFFFCLL);
      char v28 = 2;
LABEL_51:
      *((unsigned char *)a1 + v15) = v28;
      return a1;
    }
    if (v18 == 4)
    {
      int v19 = *(_DWORD *)a1;
      if (v15 >= 4) {
        goto LABEL_20;
      }
    }
    else
    {
      int v19 = *(unsigned __int8 *)a1;
      if (v15 >= 4)
      {
LABEL_20:
        unsigned int v16 = v19 + 3;
        goto LABEL_21;
      }
    }
    v19 |= v17 << (8 * v15);
    goto LABEL_20;
  }
  return a1;
}

uint64_t sub_251BABD58(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(sub_251F34DA0() - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64) + 3;
  unint64_t v11 = ((v10 + ((v9 + 8) & ~v9)) & 0xFFFFFFFFFFFFFFFCLL) + 4;
  if (!*(_DWORD *)(v6 + 84)) {
    ++v7;
  }
  unint64_t v12 = ((v10 + ((v7 + v9) & ~v9)) & 0xFFFFFFFFFFFFFFFCLL) + 4;
  unint64_t v13 = ((v10 + ((v9 + 8 + ((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFFCLL)
      + 5;
  if (v13 <= v12) {
    unint64_t v13 = v12;
  }
  if (v11 <= v13) {
    unint64_t v14 = v13;
  }
  else {
    unint64_t v14 = v11;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_27;
  }
  unint64_t v15 = v14 + 1;
  char v16 = 8 * (v14 + 1);
  if ((v14 + 1) <= 3)
  {
    unsigned int v19 = ((a2 + ~(-1 << v16) - 253) >> v16) + 1;
    if (HIWORD(v19))
    {
      int v17 = *(_DWORD *)((char *)a1 + v15);
      if (!v17) {
        goto LABEL_27;
      }
      goto LABEL_19;
    }
    if (v19 > 0xFF)
    {
      int v17 = *(unsigned __int16 *)((char *)a1 + v15);
      if (!*(unsigned __int16 *)((char *)a1 + v15)) {
        goto LABEL_27;
      }
      goto LABEL_19;
    }
    if (v19 < 2)
    {
LABEL_27:
      unsigned int v21 = *((unsigned __int8 *)a1 + v14);
      if (v21 >= 3) {
        return (v21 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v17 = *((unsigned __int8 *)a1 + v15);
  if (!*((unsigned char *)a1 + v15)) {
    goto LABEL_27;
  }
LABEL_19:
  int v20 = (v17 - 1) << v16;
  if (v15 > 3) {
    int v20 = 0;
  }
  if (v15)
  {
    if (v15 > 3) {
      LODWORD(v15) = 4;
    }
    switch((int)v15)
    {
      case 2:
        LODWORD(v15) = *a1;
        break;
      case 3:
        LODWORD(v15) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v15) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v15) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v15 | v20) + 254;
}

void sub_251BABF90(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(sub_251F34DA0() - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = *(void *)(v10 + 64) + 3;
  unint64_t v13 = ((v12 + ((v11 + 8) & ~v11)) & 0xFFFFFFFFFFFFFFFCLL) + 4;
  if (!*(_DWORD *)(v8 + 84)) {
    ++v9;
  }
  unint64_t v14 = ((v12 + ((v9 + v11) & ~v11)) & 0xFFFFFFFFFFFFFFFCLL) + 4;
  unint64_t v15 = ((v12 + ((v11 + 8 + ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v11)) & 0xFFFFFFFFFFFFFFFCLL)
      + 5;
  if (v15 <= v14) {
    unint64_t v15 = v14;
  }
  if (v13 > v15) {
    unint64_t v15 = v13;
  }
  size_t v16 = v15 + 1;
  if (a3 < 0xFE)
  {
    int v17 = 0;
  }
  else if (v16 <= 3)
  {
    unsigned int v20 = ((a3 + ~(-1 << (8 * v16)) - 253) >> (8 * v16)) + 1;
    if (HIWORD(v20))
    {
      int v17 = 4;
    }
    else if (v20 >= 0x100)
    {
      int v17 = 2;
    }
    else
    {
      int v17 = v20 > 1;
    }
  }
  else
  {
    int v17 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v18 = a2 - 254;
    if (v16 < 4)
    {
      int v19 = (v18 >> (8 * v16)) + 1;
      if (v15 != -1)
      {
        int v21 = v18 & ~(-1 << (8 * v16));
        bzero(a1, v16);
        if (v16 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v16 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v15 + 1);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v16] = v19;
        break;
      case 2:
        *(_WORD *)&a1[v16] = v19;
        break;
      case 3:
LABEL_38:
        __break(1u);
        JUMPOUT(0x251BAC23CLL);
      case 4:
        *(_DWORD *)&a1[v16] = v19;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v17)
    {
      case 1:
        a1[v16] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_27;
      case 2:
        *(_WORD *)&a1[v16] = 0;
        goto LABEL_26;
      case 3:
        goto LABEL_38;
      case 4:
        *(_DWORD *)&a1[v16] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_27;
      default:
LABEL_26:
        if (a2) {
LABEL_27:
        }
          a1[v15] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_251BAC264(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(sub_251F34DA0() - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  if (!*(_DWORD *)(v4 + 84)) {
    ++v5;
  }
  uint64_t v6 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64) + 3;
  unint64_t v9 = ((v8 + ((v5 + v7) & ~v7)) & 0xFFFFFFFFFFFFFFFCLL) + 4;
  unint64_t v10 = ((v8 + ((v7 + 8) & ~v7)) & 0xFFFFFFFFFFFFFFFCLL) + 4;
  unint64_t v11 = ((v8 + ((v7 + 8 + ((((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v7)) & 0xFFFFFFFFFFFFFFFCLL)
      + 5;
  if (v11 <= v9) {
    unint64_t v11 = v9;
  }
  if (v10 > v11) {
    unint64_t v11 = v10;
  }
  uint64_t result = a1[v11];
  if (result >= 3)
  {
    int v13 = v11 <= 3 ? v11 : 4;
    if (v13)
    {
      if (v13 == 4)
      {
        int v14 = *(_DWORD *)a1;
        if (v11 < 4) {
          return (v14 | ((result - 3) << (8 * v11))) + 3;
        }
      }
      else
      {
        int v14 = *a1;
        if (v11 < 4) {
          return (v14 | ((result - 3) << (8 * v11))) + 3;
        }
      }
      return (v14 + 3);
    }
  }
  return result;
}

void sub_251BAC3D4(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(sub_251F34DA0() - 8);
  if (*(_DWORD *)(v6 + 84)) {
    uint64_t v7 = *(void *)(v6 + 64);
  }
  else {
    uint64_t v7 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = ~v9;
  uint64_t v11 = *(void *)(v8 + 64) + 3;
  unint64_t v12 = ((v11 + ((v7 + v9) & ~v9)) & 0xFFFFFFFFFFFFFFFCLL) + 4;
  if (a2 > 2)
  {
    uint64_t v16 = v9 + 8;
    unint64_t v17 = ((v11 + ((v16 + ((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v10)) & 0xFFFFFFFFFFFFFFFCLL)
        + 5;
    if (v17 > v12) {
      unint64_t v12 = v17;
    }
    unint64_t v18 = ((v11 + (v16 & v10)) & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if (v18 <= v12) {
      size_t v19 = v12;
    }
    else {
      size_t v19 = v18;
    }
    if (v19 <= 3) {
      char v20 = ((a2 - 3) >> (8 * v19)) + 3;
    }
    else {
      char v20 = 3;
    }
    if (v19 <= 3) {
      int v21 = (a2 - 3) & ~(-1 << (8 * v19));
    }
    else {
      int v21 = a2 - 3;
    }
    a1[v19] = v20;
    if (v19 >= 4) {
      int v22 = 4;
    }
    else {
      int v22 = v19;
    }
    bzero(a1, v19);
    if (v22 == 1) {
      *a1 = v21;
    }
    else {
      *(_DWORD *)a1 = v21;
    }
  }
  else
  {
    uint64_t v13 = v9 + 8;
    unint64_t v14 = ((v11 + (v13 & v10)) & 0xFFFFFFFFFFFFFFFCLL) + 4;
    unint64_t v15 = ((v11 + ((v13 + ((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v10)) & 0xFFFFFFFFFFFFFFFCLL)
        + 5;
    if (v15 <= v12) {
      unint64_t v15 = v12;
    }
    if (v14 > v15) {
      unint64_t v15 = v14;
    }
    a1[v15] = a2;
  }
}

uint64_t sub_251BAC5B0()
{
  if (MEMORY[0x263F8EEE0]) {
    return type metadata accessor for WidgetRefresh();
  }
  else {
    return MEMORY[0x263F8EE60] + 8;
  }
}

uint64_t sub_251BAC5F0()
{
  if (MEMORY[0x263F8EEE0]) {
    return type metadata accessor for WidgetDetailUpdate();
  }
  else {
    return MEMORY[0x263F8EE60] + 8;
  }
}

uint64_t sub_251BAC630()
{
  if (MEMORY[0x263F8EEE0]) {
    return type metadata accessor for WidgetWriteRequests();
  }
  else {
    return MEMORY[0x263F8EE60] + 8;
  }
}

uint64_t type metadata accessor for HomeAppSettings()
{
  return self;
}

uint64_t dispatch thunk of WidgetSnapshotModeratorConfiguration.dataModelWantsHomeManager()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 8) + **(int **)(a2 + 8));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_251AD8F68;
  return v7(a1, a2);
}

uint64_t type metadata accessor for WidgetDataModel()
{
  return self;
}

uint64_t method lookup function for WidgetDataModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for WidgetDataModel);
}

uint64_t destroy for MatterDeviceCache()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void *initializeWithCopy for MatterDeviceCache(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for MatterDeviceCache(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for MatterDeviceCache(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for MatterDeviceCache()
{
  return &type metadata for MatterDeviceCache;
}

unsigned char *storeEnumTagSinglePayload for WidgetSnapshotModerator.Error.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251BACA28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetSnapshotModerator.Error.CodingKeys()
{
  return &type metadata for WidgetSnapshotModerator.Error.CodingKeys;
}

ValueMetadata *type metadata accessor for WidgetSnapshotModerator.Error.NoHomesCodingKeys()
{
  return &type metadata for WidgetSnapshotModerator.Error.NoHomesCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for WidgetSnapshotModerator.Error.MissingHomeCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x251BACB0CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetSnapshotModerator.Error.MissingHomeCodingKeys()
{
  return &type metadata for WidgetSnapshotModerator.Error.MissingHomeCodingKeys;
}

ValueMetadata *type metadata accessor for WidgetSnapshotModerator.Error.InvalidTypeCodingKeys()
{
  return &type metadata for WidgetSnapshotModerator.Error.InvalidTypeCodingKeys;
}

ValueMetadata *type metadata accessor for WidgetSnapshotModerator.Error.TimeoutCodingKeys()
{
  return &type metadata for WidgetSnapshotModerator.Error.TimeoutCodingKeys;
}

unint64_t sub_251BACB68()
{
  unint64_t result = qword_269B9F3A0;
  if (!qword_269B9F3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F3A0);
  }
  return result;
}

unint64_t sub_251BACBC0()
{
  unint64_t result = qword_269B9F3A8;
  if (!qword_269B9F3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F3A8);
  }
  return result;
}

unint64_t sub_251BACC18()
{
  unint64_t result = qword_269B9F3B0;
  if (!qword_269B9F3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F3B0);
  }
  return result;
}

unint64_t sub_251BACC70()
{
  unint64_t result = qword_269B9F3B8;
  if (!qword_269B9F3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F3B8);
  }
  return result;
}

unint64_t sub_251BACCC8()
{
  unint64_t result = qword_269B9F3C0;
  if (!qword_269B9F3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F3C0);
  }
  return result;
}

unint64_t sub_251BACD20()
{
  unint64_t result = qword_269B9F3C8;
  if (!qword_269B9F3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F3C8);
  }
  return result;
}

unint64_t sub_251BACD78()
{
  unint64_t result = qword_269B9F3D0;
  if (!qword_269B9F3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F3D0);
  }
  return result;
}

unint64_t sub_251BACDD0()
{
  unint64_t result = qword_269B9F3D8;
  if (!qword_269B9F3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F3D8);
  }
  return result;
}

unint64_t sub_251BACE28()
{
  unint64_t result = qword_269B9F3E0;
  if (!qword_269B9F3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F3E0);
  }
  return result;
}

unint64_t sub_251BACE80()
{
  unint64_t result = qword_269B9F3E8;
  if (!qword_269B9F3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F3E8);
  }
  return result;
}

unint64_t sub_251BACED8()
{
  unint64_t result = qword_269B9F3F0;
  if (!qword_269B9F3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F3F0);
  }
  return result;
}

unint64_t sub_251BACF30()
{
  unint64_t result = qword_269B9F3F8;
  if (!qword_269B9F3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269B9F3F8);
  }
  return result;
}

uint64_t sub_251BACF84(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73656D6F486F6ELL && a2 == 0xE700000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x48676E697373696DLL && a2 == 0xEB00000000656D6FLL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x5464696C61766E69 && a2 == 0xEB00000000657079 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74756F656D6974 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_251BAD15C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  id v23 = a5;
  uint64_t v24 = a2;
  uint64_t v21 = a1;
  uint64_t v7 = type metadata accessor for StaticHome();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t result = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v22 = a4;
  int64_t v12 = a4 >> 1;
  uint64_t v13 = a3;
  if (a4 >> 1 != a3)
  {
    uint64_t v20 = a3;
    uint64_t v13 = a3;
    while (1)
    {
      if (v13 >= v12)
      {
        __break(1u);
        goto LABEL_13;
      }
      sub_251BAD6EC(v24 + *(void *)(v8 + 72) * v13, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticHome);
      id v14 = objc_msgSend(v23, sel_uniqueIdentifier);
      uint64_t v15 = sub_251F34DA0();
      uint64_t v16 = *(void *)(v15 - 8);
      MEMORY[0x270FA5388](v15);
      unint64_t v18 = (char *)&v19 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_251F34D80();

      LOBYTE(v14) = sub_251F34D70();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      uint64_t result = sub_251BAD68C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticHome);
      if ((v14 & 1) == 0) {
        break;
      }
      if (v12 == ++v13)
      {
        uint64_t v13 = v12;
        break;
      }
    }
    a3 = v20;
    if (v13 >= v20) {
      goto LABEL_8;
    }
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
LABEL_8:
  if (v12 < a3)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v12 < v13)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if ((v13 & 0x8000000000000000) == 0) {
    return v21;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_251BAD3BC(id *a1)
{
  return sub_251AC7D00(a1) & 1;
}

uint64_t sub_251BAD3DC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_251BAD424(uint64_t a1)
{
  sub_251B9D6B0(a1, *(void **)(v1 + 16));
}

uint64_t sub_251BAD42C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAD0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_251BAD4C0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAD0);
  return sub_251B9D858();
}

unint64_t sub_251BAD534@<X0>(unint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_251B94B9C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_251BAD550()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

BOOL sub_251BAD588(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = type metadata accessor for StaticEndpoint();
  return (sub_251B84AB0(v3, *(void *)(a1 + *(int *)(v4 + 32))) & 1) == 0;
}

uint64_t sub_251BAD5CC(uint64_t *a1)
{
  return sub_251B94C04(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_251BAD5E8(uint64_t a1)
{
  return sub_251B94AEC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_251BAD604(uint64_t *a1)
{
  return sub_251B948B8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_251BAD624(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251BAD68C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251BAD6EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251BAD754@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 16);
  char v5 = *a1;
  uint64_t result = type metadata accessor for StaticEndpoint();
  uint64_t v7 = (uint64_t *)(v4 + *(int *)(result + 20));
  uint64_t v8 = *v7;
  LOWORD(v7) = *((_WORD *)v7 + 4);
  *(void *)a2 = v8;
  *(_WORD *)(a2 + 8) = (_WORD)v7;
  *(unsigned char *)(a2 + 10) = v5;
  return result;
}

void sub_251BAD7B0(id a1)
{
  if (a1 != (id)1) {
}
  }

uint64_t sub_251BAD7C0(id *a1)
{
  return sub_251B99ED4(a1) & 1;
}

uint64_t sub_251BAD7E4(id *a1)
{
  return sub_251BAD3BC(a1) & 1;
}

unint64_t sub_251BAD80C@<X0>(unint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_251BA7A94(a1, a2);
}

uint64_t sub_251BAD824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[11] = a4;
  v5[12] = v4;
  v5[9] = a2;
  v5[10] = a3;
  v5[8] = a1;
  v5[13] = *(void *)(a3 - 8);
  v5[14] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for WidgetDetailUpdate();
  v5[15] = v6;
  v5[16] = *(void *)(v6 - 8);
  v5[17] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251BAD958, v4, 0);
}

uint64_t sub_251BAD958()
{
  uint64_t v19 = v0;
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v17 = v0[17];
  uint64_t v4 = v0[9];
  uint64_t v3 = v0[10];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  swift_beginAccess();
  uint64_t v7 = swift_bridgeObjectRetain();
  size_t v8 = sub_251A91CF8(v7);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v9 = swift_bridgeObjectRetain();
  size_t v10 = sub_251A91CF8(v9);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v4, v3);
  int v18 = dword_270262888;
  WidgetDetailUpdate.init(homeID:characteristics:actionSets:configuration:isMonitoring:filtered:)(v5, v8, v10, v2, 0, &v18, v3, v17);
  swift_task_dealloc();
  uint64_t v11 = (void *)swift_task_alloc();
  v0[18] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_251BADB58;
  uint64_t v12 = v0[17];
  uint64_t v13 = v0[11];
  uint64_t v14 = v0[10];
  uint64_t v15 = v0[8];
  return sub_251B9E0AC(v15, v12, v14, v13);
}

uint64_t sub_251BADB58()
{
  uint64_t v2 = (void *)*v1;
  v2[19] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[12];
    return MEMORY[0x270FA2498](sub_251BADCBC, v3, 0);
  }
  else
  {
    (*(void (**)(void, void))(v2[16] + 8))(v2[17], v2[15]);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_251BADCBC()
{
  (*(void (**)(void, void))(v0[16] + 8))(v0[17], v0[15]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t WidgetDataModel.toggle<A>(configuration:targetID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[97] = a4;
  v4[96] = a3;
  v4[95] = a2;
  v4[94] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F460);
  v4[98] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for StaticServiceGroup();
  v4[99] = v5;
  v4[100] = *(void *)(v5 - 8);
  v4[101] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E708);
  v4[102] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for StaticActionSet();
  v4[103] = v6;
  v4[104] = *(void *)(v6 - 8);
  v4[105] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F108);
  v4[106] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2203A0);
  v4[107] = swift_task_alloc();
  v4[108] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  v4[109] = swift_task_alloc();
  v4[110] = swift_task_alloc();
  v4[111] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for StaticService();
  v4[112] = v7;
  v4[113] = *(void *)(v7 - 8);
  v4[114] = swift_task_alloc();
  v4[115] = swift_task_alloc();
  v4[116] = swift_task_alloc();
  v4[117] = swift_task_alloc();
  v4[118] = swift_task_alloc();
  v4[119] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F240);
  v4[120] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for StaticAccessory(0);
  v4[121] = v8;
  v4[122] = *(void *)(v8 - 8);
  v4[123] = swift_task_alloc();
  type metadata accessor for AnyTileInfoBearer();
  v4[124] = swift_task_alloc();
  type metadata accessor for StateSnapshot(0);
  v4[125] = swift_task_alloc();
  if (qword_269B9C2E8 != -1) {
    swift_once();
  }
  v4[126] = qword_269B9F038;
  uint64_t v11 = (uint64_t (*)(void))((char *)&dword_269B9F070 + dword_269B9F070);
  uint64_t v9 = (void *)swift_task_alloc();
  v4[127] = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_251BAE188;
  return v11();
}

uint64_t sub_251BAE188(uint64_t a1)
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  v2[128] = a1;
  swift_task_dealloc();
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  v2[129] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_251BAE324;
  uint64_t v5 = v2[125];
  uint64_t v6 = v2[97];
  uint64_t v7 = v2[96];
  uint64_t v8 = v2[94];
  return sub_251BAD824(v5, v8, v7, v6);
}

uint64_t sub_251BAE324()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 1008);
  *(void *)(*(void *)v1 + 1040) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_251BB152C;
  }
  else
  {
    swift_release();
    uint64_t v3 = sub_251BAE460;
  }
  return MEMORY[0x270FA2498](v3, v2, 0);
}

uint64_t sub_251BAE460()
{
  uint64_t v187 = v0;
  uint64_t v1 = (uint64_t *)(v0 + 736);
  StateSnapshot.tileInfo(for:)(*(void *)(v0 + 760), (uint64_t *)(v0 + 56));
  if (!*(void *)(v0 + 80))
  {
    sub_251A1B064(v0 + 56, &qword_269B9D150);
    if (qword_269B9C2E0 != -1) {
      swift_once();
    }
    uint64_t v13 = *(void *)(v0 + 760);
    uint64_t v14 = sub_251F350A0();
    __swift_project_value_buffer(v14, (uint64_t)qword_269BF30A8);
    uint64_t v15 = sub_251F34DA0();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = swift_task_alloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v17, v13, v15);
    int v18 = sub_251F35080();
    os_log_type_t v19 = sub_251F35FB0();
    BOOL v20 = os_log_type_enabled(v18, v19);
    uint64_t v21 = *(void *)(v0 + 1000);
    if (v20)
    {
      unint64_t v22 = (uint64_t *)(v0 + 712);
      uint64_t v185 = v0;
      uint64_t v23 = swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      v186[0] = v24;
      *(_DWORD *)uint64_t v23 = 136315394;
      *uint64_t v1 = sub_251A00E84(0xD00000000000001FLL, 0x8000000251F6B750, v186);
      sub_251F361D0();
      *(_WORD *)(v23 + 12) = 2080;
      sub_251AF752C();
      uint64_t v25 = sub_251F36AB0();
      *unint64_t v22 = sub_251A00E84(v25, v26, v186);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v15);
      _os_log_impl(&dword_2519F3000, v18, v19, "%s - tile info not found for id %s cannot be toggled", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v24, -1, -1);
      uint64_t v0 = v185;
      MEMORY[0x2533AC760](v23, -1, -1);

      sub_251BB1914(v21, type metadata accessor for StateSnapshot);
      swift_task_dealloc();
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v15);
      swift_task_dealloc();
      sub_251BB1914(v21, type metadata accessor for StateSnapshot);
    }
    goto LABEL_30;
  }
  uint64_t v2 = v0 + 16;
  sub_251A1A444((long long *)(v0 + 56), v0 + 16);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v3);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 160))(v3, v4) & 1) == 0)
  {
    if (qword_269B9C2E0 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_251F350A0();
    __swift_project_value_buffer(v27, (uint64_t)qword_269BF30A8);
    sub_251A1A4EC(v0 + 16, v0 + 176);
    char v28 = sub_251F35080();
    os_log_type_t v29 = sub_251F35FD0();
    BOOL v30 = os_log_type_enabled(v28, v29);
    uint64_t v31 = *(void *)(v0 + 1000);
    if (v30)
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 136315394;
      v186[0] = v33;
      *(void *)(v0 + 680) = sub_251A00E84(0xD00000000000001FLL, 0x8000000251F6B750, v186);
      sub_251F361D0();
      *(_WORD *)(v32 + 12) = 2080;
      sub_251A1A4EC(v0 + 176, v0 + 256);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF78);
      uint64_t v34 = sub_251F35790();
      *(void *)(v0 + 656) = sub_251A00E84(v34, v35, v186);
      sub_251F361D0();
      uint64_t v2 = v0 + 16;
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0(v0 + 176);
      _os_log_impl(&dword_2519F3000, v28, v29, "%s - tile %s cannot be toggled", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v33, -1, -1);
      MEMORY[0x2533AC760](v32, -1, -1);
    }
    else
    {

      __swift_destroy_boxed_opaque_existential_0(v0 + 176);
    }
    sub_251BB1914(v31, type metadata accessor for StateSnapshot);
    __swift_destroy_boxed_opaque_existential_0(v2);
LABEL_30:
    unsigned int v178 = 1;
    goto LABEL_31;
  }
  uint64_t v5 = v0 + 336;
  uint64_t v184 = v0;
  if (qword_269B9C2E0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_251F350A0();
  __swift_project_value_buffer(v6, (uint64_t)qword_269BF30A8);
  sub_251A1A4EC(v0 + 16, v0 + 336);
  uint64_t v7 = sub_251F35080();
  os_log_type_t v8 = sub_251F35FD0();
  v183 = (void *)(v0 + 16);
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    v186[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    *(void *)(v0 + 728) = sub_251A00E84(0xD00000000000001FLL, 0x8000000251F6B750, v186);
    sub_251F361D0();
    *(_WORD *)(v9 + 12) = 2080;
    sub_251A1A4EC(v5, v0 + 96);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF78);
    uint64_t v11 = sub_251F35790();
    *(void *)(v0 + 744) = sub_251A00E84(v11, v12, v186);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0(v5);
    _os_log_impl(&dword_2519F3000, v7, v8, "%s - tileInfo is %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v10, -1, -1);
    MEMORY[0x2533AC760](v9, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(v0 + 336);
  }
  unint64_t v36 = *(uint64_t ***)(v0 + 992);
  uint64_t v37 = *(void *)(v0 + 976);
  uint64_t v38 = *(void *)(v0 + 968);
  uint64_t v39 = *(void *)(v0 + 960);
  uint64_t v40 = *(void *)(v0 + 776);
  uint64_t v41 = *(void *)(v0 + 768);
  uint64_t v42 = unk_270262968;
  if ((unk_270262968 & ~qword_270262960) == 0) {
    uint64_t v42 = 0;
  }
  uint64_t v43 = qword_270262970;
  if ((qword_270262970 & ~(v42 | qword_270262960)) == 0) {
    uint64_t v43 = 0;
  }
  uint64_t v175 = v43 | v42 | qword_270262960;
  uint64_t v179 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8))(v41, v40);
  uint64_t v180 = v44;
  *(void *)(v0 + 1048) = v44;
  uint64_t v177 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 16))(v41, v40);
  uint64_t v181 = v45;
  *(void *)(v0 + 1056) = v45;
  uint64_t v47 = *(void *)(v0 + 40);
  uint64_t v46 = *(void *)(v0 + 48);
  uint64_t v48 = __swift_project_boxed_opaque_existential_1(v183, v47);
  uint64_t v49 = *(void *)(v47 - 8);
  uint64_t v50 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v49 + 16))(v50, v48, v47);
  AnyTileInfoBearer.init<A>(_:)(v50, v47, v46, v36);
  swift_task_dealloc();
  sub_251A1A4EC((uint64_t)(*v36 + 2), v0 + 376);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF78);
  int v51 = swift_dynamicCast();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v39, v51 ^ 1u, 1, v38);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v39, 1, v38) == 1)
  {
    unint64_t v52 = *(void **)(v0 + 992);
    uint64_t v53 = *(void *)(v0 + 832);
    uint64_t v54 = *(void *)(v0 + 824);
    uint64_t v55 = *(void *)(v0 + 816);
    sub_251A1B064(*(void *)(v0 + 960), &qword_26B21F240);
    sub_251A1A4EC(*v52 + 16, v0 + 296);
    int v56 = swift_dynamicCast();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v53 + 56))(v55, v56 ^ 1u, 1, v54);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v55, 1, v54) != 1)
    {
      sub_251BB18AC(*(void *)(v0 + 816), *(void *)(v0 + 840), (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      v128 = sub_251F35080();
      os_log_type_t v129 = sub_251F35FD0();
      if (os_log_type_enabled(v128, v129))
      {
        v130 = (uint8_t *)swift_slowAlloc();
        uint64_t v131 = swift_slowAlloc();
        v186[0] = v131;
        *(_DWORD *)v130 = 136315138;
        *(void *)(v0 + 648) = sub_251A00E84(0xD00000000000001FLL, 0x8000000251F6B750, v186);
        sub_251F361D0();
        _os_log_impl(&dword_2519F3000, v128, v129, "%s - is actionSet", v130, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v131, -1, -1);
        MEMORY[0x2533AC760](v130, -1, -1);
      }

      *(void *)(v0 + 480) = v179;
      *(void *)(v0 + 488) = v180;
      *(void *)(v0 + 496) = v177;
      *(void *)(v0 + 504) = v181;
      uint64_t v132 = unk_2702629A0;
      if ((unk_2702629A0 & ~qword_270262998) == 0) {
        uint64_t v132 = 0;
      }
      *(void *)(v0 + 640) = v132 | qword_270262998;
      v133 = (void *)swift_task_alloc();
      *(void *)(v0 + 1080) = v133;
      void *v133 = v0;
      v133[1] = sub_251BB0B30;
      uint64_t v134 = *(void *)(v0 + 856);
      return StaticActionSet.toggle(options:context:)(v134, (uint64_t *)(v0 + 640), (_OWORD *)(v0 + 480));
    }
    unint64_t v57 = *(void **)(v0 + 992);
    uint64_t v58 = *(void *)(v0 + 904);
    uint64_t v59 = *(void *)(v0 + 896);
    uint64_t v60 = *(void *)(v0 + 872);
    sub_251A1B064(*(void *)(v0 + 816), &qword_26B21E708);
    sub_251A1A4EC(*v57 + 16, v0 + 216);
    int v61 = swift_dynamicCast();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56))(v60, v61 ^ 1u, 1, v59);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v60, 1, v59) == 1)
    {
      v62 = *(void **)(v0 + 992);
      uint64_t v63 = *(void *)(v0 + 800);
      uint64_t v64 = *(void *)(v0 + 792);
      uint64_t v65 = *(void *)(v0 + 784);
      sub_251A1B064(*(void *)(v0 + 872), qword_26B21EE20);
      sub_251A1A4EC(*v62 + 16, v0 + 136);
      int v66 = swift_dynamicCast();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v63 + 56))(v65, v66 ^ 1u, 1, v64);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v65, 1, v64) == 1)
      {
        uint64_t v67 = *(void *)(v0 + 784);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_251A1B064(v67, &qword_269B9F460);
        v68 = sub_251F35080();
        os_log_type_t v69 = sub_251F35FD0();
        BOOL v70 = os_log_type_enabled(v68, v69);
        uint64_t v71 = *(void *)(v0 + 1000);
        uint64_t v72 = *(void *)(v0 + 992);
        if (v70)
        {
          v73 = (uint8_t *)swift_slowAlloc();
          uint64_t v74 = swift_slowAlloc();
          v186[0] = v74;
          *(_DWORD *)v73 = 136315138;
          *(void *)(v0 + 632) = sub_251A00E84(0xD00000000000001FLL, 0x8000000251F6B750, v186);
          sub_251F361D0();
          _os_log_impl(&dword_2519F3000, v68, v69, "%s - is unknown", v73, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2533AC760](v74, -1, -1);
          MEMORY[0x2533AC760](v73, -1, -1);
        }

        uint64_t v75 = v72;
        goto LABEL_109;
      }
      sub_251BB18AC(*(void *)(v0 + 784), *(void *)(v0 + 808), (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      v143 = sub_251F35080();
      os_log_type_t v144 = sub_251F35FD0();
      if (os_log_type_enabled(v143, v144))
      {
        v145 = (uint8_t *)swift_slowAlloc();
        uint64_t v146 = swift_slowAlloc();
        v186[0] = v146;
        *(_DWORD *)v145 = 136315138;
        *(void *)(v0 + 600) = sub_251A00E84(0xD00000000000001FLL, 0x8000000251F6B750, v186);
        sub_251F361D0();
        _os_log_impl(&dword_2519F3000, v143, v144, "%s - is serviceGroup", v145, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v146, -1, -1);
        MEMORY[0x2533AC760](v145, -1, -1);
      }

      *(void *)(v0 + 616) = v175;
      *(void *)(v0 + 544) = v179;
      *(void *)(v0 + 552) = v180;
      *(void *)(v0 + 560) = v177;
      *(void *)(v0 + 568) = v181;
      v147 = (void *)swift_task_alloc();
      *(void *)(v0 + 1104) = v147;
      void *v147 = v0;
      v147[1] = sub_251BB11D4;
      uint64_t v148 = *(void *)(v0 + 864);
      return StaticServiceGroup.toggle(options:context:)(v148, (void *)(v0 + 616), (_OWORD *)(v0 + 544));
    }
    sub_251BB18AC(*(void *)(v0 + 872), *(void *)(v0 + 912), (uint64_t (*)(void))type metadata accessor for StaticService);
    v138 = sub_251F35080();
    os_log_type_t v139 = sub_251F35FD0();
    if (os_log_type_enabled(v138, v139))
    {
      v140 = (uint8_t *)swift_slowAlloc();
      uint64_t v141 = swift_slowAlloc();
      v186[0] = v141;
      *(_DWORD *)v140 = 136315138;
      *(void *)(v0 + 624) = sub_251A00E84(0xD00000000000001FLL, 0x8000000251F6B750, v186);
      sub_251F361D0();
      _os_log_impl(&dword_2519F3000, v138, v139, "%s - is service", v140, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v141, -1, -1);
      MEMORY[0x2533AC760](v140, -1, -1);
    }

    v135 = (void *)(v0 + 608);
    v136 = (_OWORD *)(v0 + 512);
    *(void *)(v0 + 608) = v175;
    *(void *)(v0 + 512) = v179;
    *(void *)(v0 + 520) = v180;
    *(void *)(v0 + 528) = v177;
    *(void *)(v0 + 536) = v181;
    v142 = (void *)swift_task_alloc();
    *(void *)(v0 + 1096) = v142;
    void *v142 = v0;
    v142[1] = sub_251BB0E7C;
LABEL_114:
    uint64_t v171 = *(void *)(v0 + 864);
    return StaticService.toggle(options:context:)(v171, v135, v136);
  }
  sub_251BB18AC(*(void *)(v0 + 960), *(void *)(v0 + 984), type metadata accessor for StaticAccessory);
  v78 = sub_251F35080();
  os_log_type_t v79 = sub_251F35FD0();
  if (os_log_type_enabled(v78, v79))
  {
    v80 = (uint8_t *)swift_slowAlloc();
    uint64_t v81 = swift_slowAlloc();
    v186[0] = v81;
    *(_DWORD *)v80 = 136315138;
    *(void *)(v0 + 720) = sub_251A00E84(0xD00000000000001FLL, 0x8000000251F6B750, v186);
    sub_251F361D0();
    _os_log_impl(&dword_2519F3000, v78, v79, "%s - is accessory", v80, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v81, -1, -1);
    MEMORY[0x2533AC760](v80, -1, -1);
  }

  uint64_t v82 = *(void *)(v0 + 904);
  uint64_t v83 = *(void *)(v0 + 896);
  uint64_t v84 = *(void *)(v0 + 888);
  StaticAccessory.primaryStaticService.getter(v84);
  v85 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48);
  if (v85(v84, 1, v83) != 1)
  {
    v135 = (void *)(v0 + 704);
    v136 = (_OWORD *)(v0 + 448);
    sub_251BB18AC(*(void *)(v0 + 888), *(void *)(v0 + 952), (uint64_t (*)(void))type metadata accessor for StaticService);
    *(void *)(v0 + 704) = v175;
    *(void *)(v0 + 448) = v179;
    *(void *)(v0 + 456) = v180;
    *(void *)(v0 + 464) = v177;
    *(void *)(v0 + 472) = v181;
    v137 = (void *)swift_task_alloc();
    *(void *)(v0 + 1064) = v137;
    void *v137 = v0;
    v137[1] = sub_251BB0440;
    goto LABEL_114;
  }
  v172 = v85;
  uint64_t v86 = *(void *)(v0 + 904);
  uint64_t v182 = *(void *)(v0 + 896);
  sub_251A1B064(*(void *)(v0 + 888), qword_26B21EE20);
  uint64_t v87 = swift_bridgeObjectRetain();
  uint64_t v88 = sub_251B83C30(v87);
  uint64_t v89 = sub_251EE10DC(v88);
  swift_bridgeObjectRelease();
  uint64_t v173 = v89 + 56;
  uint64_t v90 = -1;
  uint64_t v91 = -1 << *(unsigned char *)(v89 + 32);
  if (-v91 < 64) {
    uint64_t v90 = ~(-1 << -(char)v91);
  }
  unint64_t v92 = v90 & *(void *)(v89 + 56);
  int64_t v174 = (unint64_t)(63 - v91) >> 6;
  swift_bridgeObjectRetain();
  int64_t v93 = 0;
  uint64_t v176 = v89;
  if (!v92) {
    goto LABEL_41;
  }
  while (2)
  {
    unint64_t v94 = __clz(__rbit64(v92));
    v92 &= v92 - 1;
    unint64_t v95 = v94 | (v93 << 6);
LABEL_59:
    uint64_t v99 = *(void *)(v0 + 936);
    uint64_t v100 = *(void *)(v0 + 928);
    sub_251BB1974(*(void *)(v89 + 48) + *(void *)(v86 + 72) * v95, v99, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251BB18AC(v99, v100, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v101 = *(unsigned __int8 *)(v100 + *(int *)(v182 + 88));
    switch(*(unsigned char *)(v100 + *(int *)(v182 + 88)))
    {
      case 3:
      case 0x10:
      case 0x11:
      case 0x14:
      case 0x15:
      case 0x18:
      case 0x1C:
      case 0x1F:
      case 0x22:
      case 0x26:
      case 0x29:
      case 0x2A:
      case 0x2C:
      case 0x2F:
      case 0x30:
        goto LABEL_104;
      default:
        if (qword_269B9C310 != -1) {
          swift_once();
        }
        swift_beginAccess();
        v102 = off_269B9F948;
        swift_bridgeObjectRetain();
        char v103 = sub_251DB3C0C(v101, (uint64_t)v102);
        swift_bridgeObjectRelease();
        if (v103) {
          goto LABEL_104;
        }
        uint64_t v104 = v86;
        LOBYTE(v186[0]) = v101;
        if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v105 == 0x8000000251F64EF0)
        {
          swift_bridgeObjectRelease();
          uint64_t v0 = v184;
        }
        else
        {
          char v106 = sub_251F36B10();
          swift_bridgeObjectRelease();
          uint64_t v0 = v184;
          if ((v106 & 1) == 0) {
            goto LABEL_74;
          }
        }
        uint64_t v107 = *(void *)(*(void *)(v0 + 928) + *(int *)(v182 + 112));
        if (!*(void *)(v107 + 16))
        {
          uint64_t v115 = *(void *)(v0 + 848);
          uint64_t v116 = type metadata accessor for StaticCharacteristic();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 56))(v115, 1, 1, v116);
LABEL_73:
          sub_251A1B064(*(void *)(v0 + 848), &qword_26B21F108);
          goto LABEL_74;
        }
        swift_bridgeObjectRetain();
        unint64_t v108 = sub_2519FE568(160);
        uint64_t v109 = *(void *)(v0 + 848);
        if (v110)
        {
          unint64_t v111 = v108;
          uint64_t v112 = *(void *)(v107 + 56);
          uint64_t v113 = type metadata accessor for StaticCharacteristic();
          uint64_t v114 = *(void *)(v113 - 8);
          sub_251BB1974(v112 + *(void *)(v114 + 72) * v111, v109, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v114 + 56))(v109, 0, 1, v113);
        }
        else
        {
          uint64_t v113 = type metadata accessor for StaticCharacteristic();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 56))(v109, 1, 1, v113);
        }
        uint64_t v0 = v184;
        uint64_t v117 = *(void *)(v184 + 848);
        swift_bridgeObjectRelease();
        type metadata accessor for StaticCharacteristic();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 48))(v117, 1, v113) == 1) {
          goto LABEL_73;
        }
        uint64_t v118 = *(void *)(v184 + 848);
        v119 = (uint64_t *)(v118 + *(int *)(v113 + 44));
        uint64_t v120 = *v119;
        uint64_t v121 = v119[1];
        uint64_t v122 = v119[2];
        unint64_t v123 = v119[3];
        uint64_t v124 = v119[4];
        sub_251A11E3C(*v119, v121, v122, v123);
        sub_251BB1914(v118, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
        if (v123 >> 8 == 0xFFFFFFFF) {
          goto LABEL_74;
        }
        if (v123 >> 62)
        {
          sub_251A11E60(v120, v121, v122, v123);
          uint64_t v0 = v184;
          goto LABEL_74;
        }
        if (!v124)
        {
          if (v122 <= 1) {
            uint64_t v125 = 1;
          }
          else {
            uint64_t v125 = v122;
          }
          uint64_t v124 = sub_251A1815C(v121, v120, v125);
        }
        uint64_t v126 = *(void *)(v124 + 16);
        swift_bridgeObjectRelease();
        BOOL v127 = v126 == 2;
        uint64_t v0 = v184;
        if (!v127)
        {
LABEL_74:
          sub_251BB1914(*(void *)(v0 + 928), (uint64_t (*)(void))type metadata accessor for StaticService);
          uint64_t v86 = v104;
          uint64_t v89 = v176;
          if (v92) {
            continue;
          }
LABEL_41:
          int64_t v96 = v93 + 1;
          if (__OFADD__(v93, 1))
          {
            __break(1u);
            goto LABEL_118;
          }
          if (v96 >= v174) {
            goto LABEL_103;
          }
          unint64_t v97 = *(void *)(v173 + 8 * v96);
          ++v93;
          if (!v97)
          {
            int64_t v93 = v96 + 1;
            if (v96 + 1 >= v174) {
              goto LABEL_103;
            }
            unint64_t v97 = *(void *)(v173 + 8 * v93);
            if (!v97)
            {
              int64_t v93 = v96 + 2;
              if (v96 + 2 >= v174) {
                goto LABEL_103;
              }
              unint64_t v97 = *(void *)(v173 + 8 * v93);
              if (!v97)
              {
                int64_t v93 = v96 + 3;
                if (v96 + 3 >= v174) {
                  goto LABEL_103;
                }
                unint64_t v97 = *(void *)(v173 + 8 * v93);
                if (!v97)
                {
                  int64_t v93 = v96 + 4;
                  if (v96 + 4 >= v174) {
                    goto LABEL_103;
                  }
                  unint64_t v97 = *(void *)(v173 + 8 * v93);
                  if (!v97)
                  {
                    int64_t v98 = v96 + 5;
                    if (v98 >= v174)
                    {
LABEL_103:
                      swift_release();
                      uint64_t v149 = 1;
                      goto LABEL_105;
                    }
                    unint64_t v97 = *(void *)(v173 + 8 * v98);
                    if (!v97)
                    {
                      while (1)
                      {
                        int64_t v93 = v98 + 1;
                        if (__OFADD__(v98, 1)) {
                          break;
                        }
                        if (v93 >= v174) {
                          goto LABEL_103;
                        }
                        unint64_t v97 = *(void *)(v173 + 8 * v93);
                        ++v98;
                        if (v97) {
                          goto LABEL_58;
                        }
                      }
LABEL_118:
                      __break(1u);
                      JUMPOUT(0x251BB0388);
                    }
                    int64_t v93 = v98;
                  }
                }
              }
            }
          }
LABEL_58:
          unint64_t v92 = (v97 - 1) & v97;
          unint64_t v95 = __clz(__rbit64(v97)) + (v93 << 6);
          goto LABEL_59;
        }
LABEL_104:
        swift_release();
        sub_251BB18AC(*(void *)(v0 + 928), *(void *)(v0 + 880), (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v149 = 0;
LABEL_105:
        uint64_t v150 = *(void *)(v0 + 896);
        uint64_t v151 = *(void *)(v0 + 880);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 904) + 56))(v151, v149, 1, v150);
        swift_bridgeObjectRelease();
        if (v172(v151, 1, v150) != 1)
        {
          uint64_t v160 = *(void *)(v0 + 944);
          uint64_t v161 = *(void *)(v0 + 920);
          sub_251BB18AC(*(void *)(v0 + 880), v160, (uint64_t (*)(void))type metadata accessor for StaticService);
          sub_251BB1974(v160, v161, (uint64_t (*)(void))type metadata accessor for StaticService);
          v162 = sub_251F35080();
          os_log_type_t v163 = sub_251F35FD0();
          BOOL v164 = os_log_type_enabled(v162, v163);
          uint64_t v165 = *(void *)(v0 + 920);
          if (v164)
          {
            uint64_t v166 = swift_slowAlloc();
            uint64_t v167 = swift_slowAlloc();
            v186[0] = v167;
            *(_DWORD *)uint64_t v166 = 136315394;
            *(void *)(v0 + 688) = sub_251A00E84(0xD00000000000001FLL, 0x8000000251F6B750, v186);
            sub_251F361D0();
            *(_WORD *)(v166 + 12) = 2080;
            uint64_t v168 = StaticService.description.getter();
            *(void *)(v0 + 696) = sub_251A00E84(v168, v169, v186);
            sub_251F361D0();
            swift_bridgeObjectRelease();
            sub_251BB1914(v165, (uint64_t (*)(void))type metadata accessor for StaticService);
            _os_log_impl(&dword_2519F3000, v162, v163, "%s - service found: %s", (uint8_t *)v166, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x2533AC760](v167, -1, -1);
            MEMORY[0x2533AC760](v166, -1, -1);
          }
          else
          {
            sub_251BB1914(*(void *)(v0 + 920), (uint64_t (*)(void))type metadata accessor for StaticService);
          }

          v135 = (void *)(v0 + 672);
          v136 = (_OWORD *)(v0 + 416);
          *(void *)(v0 + 672) = v175;
          *(void *)(v0 + 416) = v179;
          *(void *)(v0 + 424) = v180;
          *(void *)(v0 + 432) = v177;
          *(void *)(v0 + 440) = v181;
          v170 = (void *)swift_task_alloc();
          *(void *)(v0 + 1072) = v170;
          void *v170 = v0;
          v170[1] = sub_251BB07B8;
          goto LABEL_114;
        }
        uint64_t v152 = *(void *)(v0 + 880);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_251A1B064(v152, qword_26B21EE20);
        v153 = sub_251F35080();
        os_log_type_t v154 = sub_251F35FD0();
        BOOL v155 = os_log_type_enabled(v153, v154);
        uint64_t v71 = *(void *)(v0 + 1000);
        uint64_t v156 = *(void *)(v0 + 992);
        uint64_t v157 = *(void *)(v0 + 984);
        if (v155)
        {
          v158 = (uint8_t *)swift_slowAlloc();
          uint64_t v159 = swift_slowAlloc();
          v186[0] = v159;
          *(_DWORD *)v158 = 136315138;
          *(void *)(v184 + 664) = sub_251A00E84(0xD00000000000001FLL, 0x8000000251F6B750, v186);
          uint64_t v0 = v184;
          sub_251F361D0();
          _os_log_impl(&dword_2519F3000, v153, v154, "%s - no possible services to toggle", v158, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2533AC760](v159, -1, -1);
          MEMORY[0x2533AC760](v158, -1, -1);
        }

        sub_251BB1914(v157, type metadata accessor for StaticAccessory);
        uint64_t v75 = v156;
LABEL_109:
        sub_251BB1914(v75, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
        sub_251BB1914(v71, type metadata accessor for StateSnapshot);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v183);
        unsigned int v178 = 0;
LABEL_31:
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        v76 = *(uint64_t (**)(void))(v0 + 8);
        return v76(v178);
    }
  }
}

uint64_t sub_251BB0440()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1008);
  uint64_t v2 = *(void *)(*(void *)v0 + 864);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251A1B064(v2, &qword_26B2203A0);
  return MEMORY[0x270FA2498](sub_251BB05B4, v1, 0);
}

uint64_t sub_251BB05B4()
{
  uint64_t v1 = v0[123];
  sub_251BB1914(v0[119], (uint64_t (*)(void))type metadata accessor for StaticService);
  sub_251BB1914(v1, type metadata accessor for StaticAccessory);
  uint64_t v2 = v0[125];
  sub_251BB1914(v0[124], (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
  sub_251BB1914(v2, type metadata accessor for StateSnapshot);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(uint64_t))v0[1];
  return v3(1);
}

uint64_t sub_251BB07B8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1008);
  uint64_t v2 = *(void *)(*(void *)v0 + 864);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251A1B064(v2, &qword_26B2203A0);
  return MEMORY[0x270FA2498](sub_251BB092C, v1, 0);
}

uint64_t sub_251BB092C()
{
  uint64_t v1 = v0[123];
  sub_251BB1914(v0[118], (uint64_t (*)(void))type metadata accessor for StaticService);
  sub_251BB1914(v1, type metadata accessor for StaticAccessory);
  uint64_t v2 = v0[125];
  sub_251BB1914(v0[124], (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
  sub_251BB1914(v2, type metadata accessor for StateSnapshot);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(uint64_t))v0[1];
  return v3(1);
}

uint64_t sub_251BB0B30()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1088) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 1008);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_251BB16BC;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 1008);
    uint64_t v7 = *(void *)(v2 + 856);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_251A1B064(v7, &qword_26B2203A0);
    uint64_t v4 = sub_251BB0C98;
    uint64_t v5 = v6;
  }
  return MEMORY[0x270FA2498](v4, v5, 0);
}

uint64_t sub_251BB0C98()
{
  sub_251BB1914(v0[105], (uint64_t (*)(void))type metadata accessor for StaticActionSet);
  uint64_t v1 = v0[125];
  sub_251BB1914(v0[124], (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
  sub_251BB1914(v1, type metadata accessor for StateSnapshot);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  return v2(1);
}

uint64_t sub_251BB0E7C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1008);
  uint64_t v2 = *(void *)(*(void *)v0 + 864);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251A1B064(v2, &qword_26B2203A0);
  return MEMORY[0x270FA2498](sub_251BB0FF0, v1, 0);
}

uint64_t sub_251BB0FF0()
{
  sub_251BB1914(v0[114], (uint64_t (*)(void))type metadata accessor for StaticService);
  uint64_t v1 = v0[125];
  sub_251BB1914(v0[124], (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
  sub_251BB1914(v1, type metadata accessor for StateSnapshot);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  return v2(1);
}

uint64_t sub_251BB11D4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1008);
  uint64_t v2 = *(void *)(*(void *)v0 + 864);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251A1B064(v2, &qword_26B2203A0);
  return MEMORY[0x270FA2498](sub_251BB1348, v1, 0);
}

uint64_t sub_251BB1348()
{
  sub_251BB1914(v0[101], (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  uint64_t v1 = v0[125];
  sub_251BB1914(v0[124], (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
  sub_251BB1914(v1, type metadata accessor for StateSnapshot);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  return v2(1);
}

uint64_t sub_251BB152C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_251BB16BC()
{
  uint64_t v1 = v0[125];
  uint64_t v2 = v0[124];
  sub_251BB1914(v0[105], (uint64_t (*)(void))type metadata accessor for StaticActionSet);
  sub_251BB1914(v2, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
  sub_251BB1914(v1, type metadata accessor for StateSnapshot);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3(0);
}

uint64_t sub_251BB18AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251BB1914(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251BB1974(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t dispatch thunk of HMHomeRefresh.notifyHomeObserversOfChanged(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of HMHomeRefresh.notifyHomeObserversOfNewRoom(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of HMHomeRefresh.notifyHomeObserversOfRoomChanged(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of HMAccessoryRefresh.notifyAccessoryObserversOfNameChange()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HMAccessoryRefresh.notifyAccessoryObserversOfApplicationDataChange()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_251BB1A40(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E5C0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(a1, sel_home);
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = sub_251F35F60();
    if ((v9 & 1) == 0)
    {
      uint64_t v10 = v8;
      if (qword_26B21FD70 != -1) {
        swift_once();
      }
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF00);
      __swift_project_value_buffer(v11, (uint64_t)qword_26B21FCF8);
      v19[0] = v10;
      v19[1] = v7;
      char v20 = 1;
      id v12 = v7;
      sub_251F35CF0();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    uint64_t v23 = a1;
    sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
    id v13 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F478);
    if (swift_dynamicCast())
    {
      sub_251A1A444(v17, (uint64_t)v19);
      swift_beginAccess();
      if (!qword_26B21F248)
      {
        uint64_t v14 = v21;
        uint64_t v15 = v22;
        __swift_project_boxed_opaque_existential_1(v19, v21);
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15);
      }

      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
    }
    else
    {
      uint64_t v18 = 0;
      memset(v17, 0, sizeof(v17));

      return sub_251A1B064((uint64_t)v17, &qword_269B9F480);
    }
  }
  else
  {
    sub_251BB2208();
    swift_allocError();
    return swift_willThrow();
  }
}

uint64_t sub_251BB1CD0(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E5C0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(a1, sel_home);
  if (v8)
  {
    char v9 = v8;
    uint64_t v10 = sub_251F35F60();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = v10;
      uint64_t v20 = a2;
      if (qword_26B21FD70 != -1) {
        swift_once();
      }
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF00);
      __swift_project_value_buffer(v13, (uint64_t)qword_26B21FCF8);
      v23[0] = v12;
      v23[1] = v9;
      char v24 = 1;
      id v14 = v9;
      sub_251F35CF0();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      a2 = v20;
    }
    uint64_t v27 = v9;
    sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
    id v15 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DA30);
    if (swift_dynamicCast())
    {
      sub_251A1A444(v21, (uint64_t)v23);
      swift_beginAccess();
      if (!qword_26B21F248)
      {
        uint64_t v16 = v25;
        uint64_t v17 = v26;
        __swift_project_boxed_opaque_existential_1(v23, v25);
        (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v17 + 24))(a2, a1, v16, v17);
      }

      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
    }
    else
    {
      uint64_t v22 = 0;
      memset(v21, 0, sizeof(v21));

      return sub_251A1B064((uint64_t)v21, &qword_269B9DA38);
    }
  }
  else
  {
    sub_251BB2208();
    swift_allocError();
    return swift_willThrow();
  }
}

uint64_t sub_251BB1F78(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E5C0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(a1, sel_home);
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = sub_251F35F60();
    if ((v9 & 1) == 0)
    {
      uint64_t v10 = v8;
      if (qword_26B21FD70 != -1) {
        swift_once();
      }
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF00);
      __swift_project_value_buffer(v11, (uint64_t)qword_26B21FCF8);
      v19[0] = v10;
      v19[1] = v7;
      char v20 = 1;
      id v12 = v7;
      sub_251F35CF0();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    uint64_t v23 = a1;
    sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
    id v13 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F478);
    if (swift_dynamicCast())
    {
      sub_251A1A444(v17, (uint64_t)v19);
      swift_beginAccess();
      if (!qword_26B21F248)
      {
        uint64_t v14 = v21;
        uint64_t v15 = v22;
        __swift_project_boxed_opaque_existential_1(v19, v21);
        (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
      }

      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
    }
    else
    {
      uint64_t v18 = 0;
      memset(v17, 0, sizeof(v17));

      return sub_251A1B064((uint64_t)v17, &qword_269B9F480);
    }
  }
  else
  {
    sub_251BB2208();
    swift_allocError();
    return swift_willThrow();
  }
}

unint64_t sub_251BB2208()
{
  unint64_t result = qword_269B9F470;
  if (!qword_269B9F470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F470);
  }
  return result;
}

uint64_t MTRDeviceState.description.getter(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      return 0x6E776F6E6B6E75;
    case 2:
      return 0x6168636165726E75;
    case 1:
      return 0x6C62616863616572;
  }
  type metadata accessor for MTRDeviceState(0);
  uint64_t result = sub_251F36B70();
  __break(1u);
  return result;
}

uint64_t sub_251BB2300()
{
  return sub_251F35A50();
}

uint64_t sub_251BB2390()
{
  return sub_251F359F0();
}

uint64_t sub_251BB2410()
{
  uint64_t v1 = *v0;
  if (!*v0) {
    return 0x6E776F6E6B6E75;
  }
  if (v1 == 2) {
    return 0x6168636165726E75;
  }
  if (v1 == 1) {
    return 0x6C62616863616572;
  }
  uint64_t result = sub_251F36B70();
  __break(1u);
  return result;
}

uint64_t sub_251BB24B0()
{
  return sub_251F35A60();
}

uint64_t sub_251BB2540()
{
  return sub_251F35A00();
}

uint64_t sub_251BB25C0()
{
  return sub_251F35A60();
}

uint64_t sub_251BB2650()
{
  return sub_251F35A00();
}

uint64_t sub_251BB26D0()
{
  return sub_251F35A60();
}

uint64_t sub_251BB2760()
{
  return sub_251F35A00();
}

uint64_t sub_251BB27E0()
{
  return sub_251F35A80();
}

uint64_t sub_251BB2870()
{
  return sub_251F35A20();
}

uint64_t sub_251BB28F0()
{
  return sub_251BB2A48(&qword_269B9C778, type metadata accessor for MTRPowerSourceFeature);
}

uint64_t sub_251BB2938()
{
  return sub_251F35A80();
}

uint64_t sub_251BB29C8()
{
  return sub_251F35A20();
}

uint64_t sub_251BB2A48(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t ActionMatterDevice.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t ActionMatterDevice.nodeId.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ActionMatterDevice() + 20));
}

uint64_t type metadata accessor for ActionMatterDevice()
{
  uint64_t result = qword_269B9F538;
  if (!qword_269B9F538) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ActionMatterDevice.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ActionMatterDevice() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ActionMatterDevice.state.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ActionMatterDevice() + 28));
}

BOOL ActionMatterDevice.isReachable.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ActionMatterDevice() + 28)) == 1;
}

uint64_t ActionMatterDevice.deviceTypes.getter()
{
  type metadata accessor for ActionMatterDevice();
  return swift_bridgeObjectRetain();
}

uint64_t ActionMatterDevice.homeId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ActionMatterDevice() + 36);
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t ActionMatterDevice.roomId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ActionMatterDevice() + 40);
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t ActionMatterDevice.actionEndpoints.getter()
{
  type metadata accessor for ActionMatterDevice();
  return swift_bridgeObjectRetain();
}

uint64_t ActionMatterDevice.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ActionMatterDevice();
  return sub_251BB6D70(v1 + *(int *)(v3 + 48), a1, (uint64_t (*)(void))type metadata accessor for MatterTileMetadata);
}

uint64_t ActionMatterDevice.primaryDeviceType.getter@<X0>(char *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for ActionMatterDevice() + 32));
  return sub_251ABD888(v3, a1);
}

uint64_t ActionMatterDevice.mainActionEndpoint.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ActionMatterDevice();
  MEMORY[0x270FA5388](v4);
  id v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CA50);
  MEMORY[0x270FA5388](v7 - 8);
  char v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = *(void *)(v2 + *(int *)(v4 + 44));
  uint64_t v15 = v2;
  swift_bridgeObjectRetain();
  sub_251A959B0((uint64_t (*)(char *))sub_251BB4BF0, v10, (uint64_t)v9);
  swift_bridgeObjectRelease();
  sub_251BB6D70(v2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ActionMatterDevice);
  uint64_t v11 = type metadata accessor for ActionEndpoint();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) == 1)
  {
    sub_251ABDAB4(*(void *)&v6[*(int *)(v4 + 44)], a1);
    sub_251A1B064((uint64_t)v9, &qword_269B9CA50);
  }
  else
  {
    sub_251BB6EA0((uint64_t)v9, a1, (uint64_t (*)(void))type metadata accessor for ActionEndpoint);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  return sub_251BB6E40((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ActionMatterDevice);
}

BOOL sub_251BB2FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for ActionEndpoint() + 48));
  uint64_t v4 = *(void *)(a2 + *(int *)(type metadata accessor for ActionMatterDevice() + 32));
  swift_bridgeObjectRetain();
  uint64_t v5 = *(void *)(sub_251D67BDC(v4, v3) + 16);
  swift_release();
  return v5 != 0;
}

uint64_t ActionMatterDevice.init(staticDevice:overridingEndpoints:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a3, a1, v6);
  uint64_t v8 = (int *)type metadata accessor for StaticMatterDevice();
  uint64_t v9 = *(void *)(a1 + v8[5]);
  uint64_t v10 = (int *)type metadata accessor for ActionMatterDevice();
  *(void *)(a3 + v10[5]) = v9;
  uint64_t v11 = (uint64_t *)(a1 + v8[6]);
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  uint64_t v14 = (void *)(a3 + v10[6]);
  *uint64_t v14 = v12;
  v14[1] = v13;
  *(void *)(a3 + v10[7]) = 1;
  *(void *)(a3 + v10[8]) = *(void *)(a1 + v8[8]);
  v7(a3 + v10[9], a1 + v8[9], v6);
  v7(a3 + v10[10], a1 + v8[10], v6);
  sub_251BB6D70(a1 + v8[13], a3 + v10[12], (uint64_t (*)(void))type metadata accessor for MatterTileMetadata);
  uint64_t v15 = *(void *)(a1 + v8[12]);
  unint64_t v16 = sub_251A19F80(MEMORY[0x263F8EE78]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_251BB4D24(v16, v15, a2);
  sub_251BB6E40(a1, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a3 + v10[11]) = v17;
  return result;
}

uint64_t ActionMatterDevice.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  uint64_t v4 = type metadata accessor for ActionMatterDevice();
  sub_251F36CF0();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  sub_251F36CB0();
  uint64_t v5 = *(void *)(v1 + *(int *)(v4 + 32));
  swift_bridgeObjectRetain();
  sub_251A54ED8(a1, v5);
  swift_bridgeObjectRelease();
  sub_251F35610();
  sub_251F35610();
  uint64_t v6 = *(void *)(v2 + *(int *)(v4 + 44));
  swift_bridgeObjectRetain();
  sub_251A46EC4(a1, v6);
  swift_bridgeObjectRelease();
  return MatterTileMetadata.hash(into:)();
}

uint64_t sub_251BB3398(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x644965646F6ELL;
      break;
    case 2:
      uint64_t result = 1701667182;
      break;
    case 3:
      uint64_t result = 0x6574617473;
      break;
    case 4:
      uint64_t result = 0x7954656369766564;
      break;
    case 5:
      uint64_t result = 0x6449656D6F68;
      break;
    case 6:
      uint64_t result = 0x64496D6F6F72;
      break;
    case 7:
      uint64_t result = 0x6E456E6F69746361;
      break;
    case 8:
      uint64_t result = 0x617461646174656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251BB34A8()
{
  return sub_251BB3398(*v0);
}

uint64_t sub_251BB34B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251BB69CC(a1, a2);
  *a3 = result;
  return result;
}

void sub_251BB34D8(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_251BB34E4(uint64_t a1)
{
  unint64_t v2 = sub_251BB5230();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251BB3520(uint64_t a1)
{
  unint64_t v2 = sub_251BB5230();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ActionMatterDevice.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F4B0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251BB5230();
  sub_251F36DA0();
  LOBYTE(v13) = 0;
  sub_251F34DA0();
  sub_251A1A8EC(&qword_26B21E348);
  sub_251F36A20();
  if (!v2)
  {
    uint64_t v9 = (int *)type metadata accessor for ActionMatterDevice();
    LOBYTE(v13) = 1;
    sub_251F36A70();
    LOBYTE(v13) = 2;
    sub_251F369D0();
    uint64_t v13 = *(void *)(v3 + v9[7]);
    char v12 = 3;
    type metadata accessor for MTRDeviceState(0);
    sub_251BB5570(&qword_269B9D880, type metadata accessor for MTRDeviceState);
    sub_251F36A20();
    uint64_t v13 = *(void *)(v3 + v9[8]);
    char v12 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D888);
    sub_251AC5B7C(&qword_269B9D890, (void (*)(void))sub_251AC5A7C);
    sub_251F36A20();
    LOBYTE(v13) = 5;
    sub_251F36A20();
    LOBYTE(v13) = 6;
    sub_251F36A20();
    uint64_t v13 = *(void *)(v3 + v9[11]);
    char v12 = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F4C0);
    sub_251BB5284();
    sub_251F36A20();
    LOBYTE(v13) = 8;
    type metadata accessor for MatterTileMetadata();
    sub_251BB5570(&qword_269B9D8B0, (void (*)(uint64_t))type metadata accessor for MatterTileMetadata);
    sub_251F36A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ActionMatterDevice.hashValue.getter()
{
  sub_251F36CA0();
  ActionMatterDevice.hash(into:)((uint64_t)v1);
  return sub_251F36D00();
}

uint64_t ActionMatterDevice.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v3 = type metadata accessor for MatterTileMetadata();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F4D8);
  uint64_t v43 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ActionMatterDevice();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251BB5230();
  uint64_t v44 = v7;
  uint64_t v11 = (uint64_t)v46;
  sub_251F36D90();
  if (v11) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v38 = v5;
  uint64_t v39 = v3;
  uint64_t v46 = a1;
  uint64_t v41 = (int *)v8;
  uint64_t v12 = sub_251F34DA0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12);
  LOBYTE(v48) = 0;
  uint64_t v15 = sub_251A1A8EC(&qword_269B9CC80);
  sub_251F36880();
  uint64_t v36 = v15;
  uint64_t v37 = v13;
  unint64_t v16 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v16(v10, (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  LOBYTE(v48) = 1;
  uint64_t v17 = sub_251F368D0();
  uint64_t v40 = v12;
  uint64_t v35 = v13 + 32;
  uint64_t v18 = v41;
  *(void *)&v10[v41[5]] = v17;
  LOBYTE(v48) = 2;
  uint64_t v19 = sub_251F36830();
  uint64_t v20 = v43;
  uint64_t v34 = (uint64_t (*)(char *, char *, uint64_t))v16;
  uint64_t v21 = (uint64_t *)&v10[v18[6]];
  *uint64_t v21 = v19;
  v21[1] = v22;
  type metadata accessor for MTRDeviceState(0);
  char v47 = 3;
  sub_251BB5570(&qword_269B9D8C0, type metadata accessor for MTRDeviceState);
  sub_251F36880();
  *(void *)&v10[v18[7]] = v48;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D888);
  char v47 = 4;
  sub_251AC5B7C(&qword_269B9D8C8, (void (*)(void))sub_251AC5BEC);
  uint64_t v23 = sub_251F36880();
  *(void *)&v10[v18[8]] = v48;
  MEMORY[0x270FA5388](v23);
  uint64_t v33 = v10;
  unint64_t v24 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v25 = v12;
  LOBYTE(v48) = 5;
  sub_251F36880();
  uint64_t v26 = v34(&v33[v41[9]], (char *)&v32 - v24, v12);
  MEMORY[0x270FA5388](v26);
  uint64_t v27 = (char *)&v32 - v24;
  LOBYTE(v48) = 6;
  uint64_t v28 = v45;
  sub_251F36880();
  uint64_t v29 = (uint64_t)v33;
  v34(&v33[v41[10]], v27, v25);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F4C0);
  char v47 = 7;
  sub_251BB5330();
  sub_251F36880();
  *(void *)(v29 + v41[11]) = v48;
  LOBYTE(v48) = 8;
  sub_251BB5570(&qword_269B9D8E0, (void (*)(uint64_t))type metadata accessor for MatterTileMetadata);
  uint64_t v30 = (uint64_t)v38;
  sub_251F36880();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v44, v28);
  sub_251BB6EA0(v30, v29 + v41[12], (uint64_t (*)(void))type metadata accessor for MatterTileMetadata);
  sub_251BB6D70(v29, v42, (uint64_t (*)(void))type metadata accessor for ActionMatterDevice);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v46);
  return sub_251BB6E40(v29, (uint64_t (*)(void))type metadata accessor for ActionMatterDevice);
}

uint64_t sub_251BB4270()
{
  sub_251F36CA0();
  ActionMatterDevice.hash(into:)((uint64_t)v1);
  return sub_251F36D00();
}

uint64_t sub_251BB42B4()
{
  sub_251F36CA0();
  ActionMatterDevice.hash(into:)((uint64_t)v1);
  return sub_251F36D00();
}

uint64_t sub_251BB42F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ActionMatterDevice.init(from:)(a1, a2);
}

uint64_t sub_251BB430C(void *a1)
{
  return ActionMatterDevice.encode(to:)(a1);
}

uint64_t ActionMatterDevice.tileStatusString.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CA50);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  ActionMatterDevice.mainActionEndpoint.getter((uint64_t)v2);
  uint64_t v3 = type metadata accessor for ActionEndpoint();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3) == 1)
  {
    sub_251A1B064((uint64_t)v2, &qword_269B9CA50);
    return 0;
  }
  else
  {
    uint64_t v4 = ActionEndpoint.statusString.getter();
    sub_251BB6E40((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for ActionEndpoint);
  }
  return v4;
}

uint64_t ActionMatterDevice.statusString.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CA50);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  ActionMatterDevice.mainActionEndpoint.getter((uint64_t)v2);
  uint64_t v3 = type metadata accessor for ActionEndpoint();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3) == 1)
  {
    sub_251A1B064((uint64_t)v2, &qword_269B9CA50);
    return 0;
  }
  else
  {
    uint64_t v4 = ActionEndpoint.statusString.getter();
    sub_251BB6E40((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for ActionEndpoint);
  }
  return v4;
}

uint64_t ActionMatterDevice.dateAdded.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_251F34D20();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 1, 1, v2);
}

uint64_t ActionMatterDevice.foregroundColor.getter()
{
  return sub_251F35370();
}

uint64_t ActionMatterDevice.isDoubleHigh.getter()
{
  return 0;
}

void ActionMatterDevice.primaryServiceKind.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t ActionMatterDevice.isFavorite.getter()
{
  return 0;
}

uint64_t ActionMatterDevice.shouldShowInDashboard.getter()
{
  return 0;
}

uint64_t ActionMatterDevice.roomIds.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB80);
  uint64_t v1 = sub_251F34DA0();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_251F38650;
  uint64_t v5 = type metadata accessor for ActionMatterDevice();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 16))(v4 + v3, v0 + *(int *)(v5 + 40), v1);
  uint64_t v6 = sub_251C08E40(v4);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v6;
}

uint64_t ActionMatterDevice.roomName.getter()
{
  return 0;
}

uint64_t ActionMatterDevice.canBeToggled.getter()
{
  return 0;
}

uint64_t ActionMatterDevice.toggle()(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x270FA2498](sub_251AC2104, 0, 0);
}

uint64_t ActionMatterDevice.tileIcon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for ActionMatterDevice() + 32));
  uint64_t result = sub_251A53EB8(v3);
  if (v6)
  {
    __break(1u);
    return result;
  }
  if (*(_DWORD *)(v3 + 36) != v5)
  {
    __break(1u);
LABEL_11:
    swift_once();
    goto LABEL_5;
  }
  if (result != 1 << *(unsigned char *)(v3 + 32))
  {
    sub_251A54058(result, v5, 0, v3, &v20);
    uint64_t v18 = IconSymbol.rawValue.getter();
    *(void *)a1 = v18;
    *(void *)(a1 + 8) = v19;
    *(unsigned char *)(a1 + 16) = 2;
    *(void *)(a1 + 24) = v18;
    *(void *)(a1 + 32) = v19;
    *(unsigned char *)(a1 + 40) = 2;
    *(void *)(a1 + 48) = v18;
    *(void *)(a1 + 56) = v19;
    *(unsigned char *)(a1 + 64) = 2;
    *(unsigned char *)(a1 + 88) = 2;
    *(void *)(a1 + 72) = v18;
    *(void *)(a1 + 80) = v19;
    goto LABEL_7;
  }
  if (qword_269B9C360 != -1) {
    goto LABEL_11;
  }
LABEL_5:
  uint64_t v7 = *(void *)algn_269BA00F8;
  char v8 = byte_269BA0100;
  uint64_t v9 = qword_269BA0108;
  uint64_t v10 = unk_269BA0110;
  char v11 = byte_269BA0118;
  uint64_t v12 = qword_269BA0120;
  uint64_t v13 = unk_269BA0128;
  char v14 = byte_269BA0130;
  uint64_t v15 = qword_269BA0138;
  uint64_t v16 = unk_269BA0140;
  char v17 = byte_269BA0148;
  *(void *)a1 = qword_269BA00F0;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  *(unsigned char *)(a1 + 40) = v11;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v13;
  *(unsigned char *)(a1 + 64) = v14;
  *(void *)(a1 + 72) = v15;
  *(void *)(a1 + 80) = v16;
  *(unsigned char *)(a1 + 88) = v17;
  swift_bridgeObjectRetain();
LABEL_7:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ActionMatterDevice.isActivated.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CA50);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  ActionMatterDevice.mainActionEndpoint.getter((uint64_t)v2);
  uint64_t v3 = type metadata accessor for ActionEndpoint();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3) == 1)
  {
    sub_251A1B064((uint64_t)v2, &qword_269B9CA50);
    char v4 = 0;
  }
  else
  {
    char v4 = ActionEndpoint.isActivated.getter();
    sub_251BB6E40((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for ActionEndpoint);
  }
  return v4 & 1;
}

uint64_t sub_251BB49D0()
{
  return sub_251F35370();
}

uint64_t sub_251BB49E8()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CA50);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  ActionMatterDevice.mainActionEndpoint.getter((uint64_t)v2);
  uint64_t v3 = type metadata accessor for ActionEndpoint();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3) == 1)
  {
    sub_251A1B064((uint64_t)v2, &qword_269B9CA50);
    char v4 = 0;
  }
  else
  {
    char v4 = ActionEndpoint.isActivated.getter();
    sub_251BB6E40((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for ActionEndpoint);
  }
  return v4 & 1;
}

uint64_t sub_251BB4AE0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CA50);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  ActionMatterDevice.mainActionEndpoint.getter((uint64_t)v2);
  uint64_t v3 = type metadata accessor for ActionEndpoint();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3) == 1)
  {
    sub_251A1B064((uint64_t)v2, &qword_269B9CA50);
    return 0;
  }
  else
  {
    uint64_t v4 = ActionEndpoint.statusString.getter();
    sub_251BB6E40((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for ActionEndpoint);
  }
  return v4;
}

BOOL sub_251BB4BF0(uint64_t a1)
{
  return sub_251BB2FFC(a1, *(void *)(v1 + 16));
}

uint64_t _s13HomeDataModel18ActionMatterDeviceV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_251F34D70() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for ActionMatterDevice();
  if (*(void *)(a1 + *(int *)(v4 + 20)) != *(void *)(a2 + *(int *)(v4 + 20))) {
    return 0;
  }
  int v5 = (int *)v4;
  uint64_t v6 = *(int *)(v4 + 24);
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a1 + v6 + 8);
  uint64_t v9 = (void *)(a2 + v6);
  BOOL v10 = v7 == *v9 && v8 == v9[1];
  if (!v10 && (sub_251F36B10() & 1) == 0
    || *(void *)(a1 + v5[7]) != *(void *)(a2 + v5[7])
    || (sub_251B05988(*(void *)(a1 + v5[8]), *(void *)(a2 + v5[8])) & 1) == 0
    || (sub_251F34D70() & 1) == 0
    || (sub_251F34D70() & 1) == 0
    || (sub_251AFC61C(*(void *)(a1 + v5[11]), *(void *)(a2 + v5[11])) & 1) == 0)
  {
    return 0;
  }
  uint64_t v11 = v5[12];
  return static MatterTileMetadata.== infix(_:_:)(a1 + v11, a2 + v11);
}

uint64_t sub_251BB4D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v53 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CA50);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v52 = (uint64_t)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticEndpoint();
  uint64_t v51 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v50 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v55 = (uint64_t)&v44 - v10;
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F4C8);
  uint64_t v11 = MEMORY[0x270FA5388](v49);
  uint64_t v48 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (__int16 *)((char *)&v44 - v14);
  MEMORY[0x270FA5388](v13);
  char v47 = (char *)&v44 - v16;
  uint64_t v56 = a1;
  uint64_t v17 = *(void *)(a2 + 64);
  uint64_t v45 = a2 + 64;
  uint64_t v18 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  int64_t v46 = (unint64_t)(v18 + 63) >> 6;
  uint64_t v54 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v22 = 0;
  unint64_t v24 = (__int16 *)v48;
  uint64_t v23 = v49;
  while (v20)
  {
    unint64_t v29 = __clz(__rbit64(v20));
    v20 &= v20 - 1;
    unint64_t v30 = v29 | (v22 << 6);
LABEL_25:
    __int16 v34 = *(_WORD *)(*(void *)(v54 + 48) + 2 * v30);
    uint64_t v35 = v47;
    sub_251BB6D70(*(void *)(v54 + 56) + *(void *)(v51 + 72) * v30, (uint64_t)&v47[*(int *)(v23 + 48)], (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    *uint64_t v35 = v34;
    sub_251BB6DD8((uint64_t)v35, (uint64_t)v15);
    uint64_t v36 = *(int *)(v23 + 48);
    uint64_t v37 = (uint64_t)v24 + v36;
    uint64_t v38 = (uint64_t)v15 + v36;
    __int16 v39 = *v15;
    *unint64_t v24 = *v15;
    sub_251BB6D70((uint64_t)v15 + v36, (uint64_t)v24 + v36, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    sub_251BB6E40(v37, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    uint64_t v40 = (uint64_t)v24 + *(int *)(v23 + 48);
    sub_251BB6D70(v38, v40, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    sub_251BB6EA0(v40, v55, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    uint64_t v41 = v53;
    if (!*(void *)(v53 + 16) || (unint64_t v42 = sub_2519FE5CC(v39), (v43 & 1) == 0))
    {
      uint64_t v25 = v50;
      sub_251BB6D70(v55, v50, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
LABEL_5:
      unint64_t v26 = sub_251A19984(MEMORY[0x263F8EE78]);
      goto LABEL_6;
    }
    unint64_t v26 = *(void *)(*(void *)(v41 + 56) + 8 * v42);
    swift_bridgeObjectRetain();
    uint64_t v25 = v50;
    sub_251BB6D70(v55, v50, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    if (!v26) {
      goto LABEL_5;
    }
LABEL_6:
    uint64_t v27 = v52;
    ActionEndpoint.init(staticEndpoint:overridingAttributes:)(v25, v26, v52);
    uint64_t v28 = type metadata accessor for ActionEndpoint();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 0, 1, v28);
    sub_2519F8A64(v27, v39);
    sub_251BB6E40(v55, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    uint64_t result = sub_251A1B064((uint64_t)v15, &qword_26B21F4C8);
  }
  int64_t v31 = v22 + 1;
  if (__OFADD__(v22, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v31 >= v46) {
    goto LABEL_29;
  }
  unint64_t v32 = *(void *)(v45 + 8 * v31);
  ++v22;
  if (v32) {
    goto LABEL_24;
  }
  int64_t v22 = v31 + 1;
  if (v31 + 1 >= v46) {
    goto LABEL_29;
  }
  unint64_t v32 = *(void *)(v45 + 8 * v22);
  if (v32) {
    goto LABEL_24;
  }
  int64_t v22 = v31 + 2;
  if (v31 + 2 >= v46) {
    goto LABEL_29;
  }
  unint64_t v32 = *(void *)(v45 + 8 * v22);
  if (v32) {
    goto LABEL_24;
  }
  int64_t v22 = v31 + 3;
  if (v31 + 3 >= v46) {
    goto LABEL_29;
  }
  unint64_t v32 = *(void *)(v45 + 8 * v22);
  if (v32)
  {
LABEL_24:
    unint64_t v20 = (v32 - 1) & v32;
    unint64_t v30 = __clz(__rbit64(v32)) + (v22 << 6);
    goto LABEL_25;
  }
  int64_t v33 = v31 + 4;
  if (v33 >= v46)
  {
LABEL_29:
    swift_release();
    return v56;
  }
  unint64_t v32 = *(void *)(v45 + 8 * v33);
  if (v32)
  {
    int64_t v22 = v33;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v22 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v22 >= v46) {
      goto LABEL_29;
    }
    unint64_t v32 = *(void *)(v45 + 8 * v22);
    ++v33;
    if (v32) {
      goto LABEL_24;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

unint64_t sub_251BB5230()
{
  unint64_t result = qword_269B9F4B8;
  if (!qword_269B9F4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F4B8);
  }
  return result;
}

unint64_t sub_251BB5284()
{
  unint64_t result = qword_269B9F4C8;
  if (!qword_269B9F4C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9F4C0);
    sub_251BB5570(&qword_269B9F4D0, (void (*)(uint64_t))type metadata accessor for ActionEndpoint);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F4C8);
  }
  return result;
}

unint64_t sub_251BB5330()
{
  unint64_t result = qword_269B9F4E0;
  if (!qword_269B9F4E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9F4C0);
    sub_251BB5570(&qword_269B9F4E8, (void (*)(uint64_t))type metadata accessor for ActionEndpoint);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F4E0);
  }
  return result;
}

uint64_t sub_251BB53DC()
{
  return sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
}

uint64_t sub_251BB5404()
{
  return sub_251BB5570((unint64_t *)&unk_269B9F4F8, (void (*)(uint64_t))type metadata accessor for ActionMatterDevice);
}

uint64_t sub_251BB544C(void *a1)
{
  a1[1] = sub_251BB5570(&qword_269B9F508, (void (*)(uint64_t))type metadata accessor for ActionMatterDevice);
  a1[2] = sub_251BB5570(&qword_269B9F510, (void (*)(uint64_t))type metadata accessor for ActionMatterDevice);
  a1[3] = sub_251BB5570(&qword_269B9F518, (void (*)(uint64_t))type metadata accessor for ActionMatterDevice);
  a1[4] = sub_251BB5570(&qword_269B9F520, (void (*)(uint64_t))type metadata accessor for ActionMatterDevice);
  a1[5] = sub_251BB5570(&qword_269B9F528, (void (*)(uint64_t))type metadata accessor for ActionMatterDevice);
  uint64_t result = sub_251BB5570(&qword_269B9F530, (void (*)(uint64_t))type metadata accessor for ActionMatterDevice);
  a1[6] = result;
  return result;
}

uint64_t sub_251BB5570(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ActionMatterDevice(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v13) = *(uint64_t *)((char *)a2 + v13);
    uint64_t v14 = a3[9];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8((uint64_t *)v15, (uint64_t *)v16, v7);
    v8((uint64_t *)((char *)a1 + a3[10]), (uint64_t *)((char *)a2 + a3[10]), v7);
    uint64_t v17 = a3[12];
    *(uint64_t *)((char *)a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = *(uint64_t *)((char *)a2 + v17 + 8);
    *(void *)uint64_t v18 = *(uint64_t *)((char *)a2 + v17);
    *((void *)v18 + 1) = v20;
    uint64_t v21 = *(uint64_t *)((char *)a2 + v17 + 24);
    *((void *)v18 + 2) = *(uint64_t *)((char *)a2 + v17 + 16);
    *((void *)v18 + 3) = v21;
    uint64_t v22 = *(uint64_t *)((char *)a2 + v17 + 40);
    *((void *)v18 + 4) = *(uint64_t *)((char *)a2 + v17 + 32);
    *((void *)v18 + 5) = v22;
    *((_DWORD *)v18 + 12) = *(_DWORD *)((char *)a2 + v17 + 48);
    uint64_t v23 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
    __dst = &v18[v23];
    unint64_t v24 = &v19[v23];
    uint64_t v25 = sub_251F34D20();
    uint64_t v26 = *(void *)(v25 - 8);
    uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v27(v24, 1, v25))
    {
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
      memcpy(__dst, v24, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(__dst, v24, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
    }
  }
  return a1;
}

uint64_t destroy for ActionMatterDevice(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_251F34DA0();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5(a1 + a2[9], v4);
  v5(a1 + a2[10], v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + a2[12];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  uint64_t v8 = sub_251F34D20();
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

uint64_t initializeWithCopy for ActionMatterDevice(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[9];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7(v14, v15, v6);
  v7(a1 + a3[10], a2 + a3[10], v6);
  uint64_t v16 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = *(void *)(a2 + v16 + 8);
  *(void *)uint64_t v17 = *(void *)(a2 + v16);
  *(void *)(v17 + 8) = v19;
  uint64_t v20 = *(void *)(a2 + v16 + 24);
  *(void *)(v17 + 16) = *(void *)(a2 + v16 + 16);
  *(void *)(v17 + 24) = v20;
  uint64_t v21 = *(void *)(a2 + v16 + 40);
  *(void *)(v17 + 32) = *(void *)(a2 + v16 + 32);
  *(void *)(v17 + 40) = v21;
  *(_DWORD *)(v17 + 48) = *(_DWORD *)(a2 + v16 + 48);
  uint64_t v22 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  __dst = (void *)(v17 + v22);
  uint64_t v23 = (const void *)(v18 + v22);
  uint64_t v24 = sub_251F34D20();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v26(v23, 1, v24))
  {
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(__dst, v23, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v25 + 16))(__dst, v23, v24);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
  }
  return a1;
}

uint64_t assignWithCopy for ActionMatterDevice(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7(a1 + a3[9], a2 + a3[9], v6);
  v7(a1 + a3[10], a2 + a3[10], v6);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[12];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = *(void *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  *(void *)(v12 + 24) = *(void *)(v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  *(void *)(v12 + 40) = *(void *)(v13 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 48) = *(unsigned char *)(v13 + 48);
  *(unsigned char *)(v12 + 49) = *(unsigned char *)(v13 + 49);
  *(unsigned char *)(v12 + 50) = *(unsigned char *)(v13 + 50);
  *(unsigned char *)(v12 + 51) = *(unsigned char *)(v13 + 51);
  uint64_t v14 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  uint64_t v15 = (void *)(v12 + v14);
  uint64_t v16 = (void *)(v13 + v14);
  uint64_t v17 = sub_251F34D20();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (!v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 24))(v15, v16, v17);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
    goto LABEL_6;
  }
  if (v21)
  {
LABEL_6:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v15, v16, *(void *)(*(void *)(v22 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 16))(v15, v16, v17);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  return a1;
}

uint64_t initializeWithTake for ActionMatterDevice(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v9 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  v7(a1 + a3[9], a2 + a3[9], v6);
  v7(a1 + a3[10], a2 + a3[10], v6);
  uint64_t v10 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  long long v13 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v13;
  *(_OWORD *)(v11 + 32) = *(_OWORD *)(v12 + 32);
  *(_DWORD *)(v11 + 48) = *(_DWORD *)(v12 + 48);
  uint64_t v14 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  uint64_t v15 = (void *)(v11 + v14);
  uint64_t v16 = (const void *)(v12 + v14);
  uint64_t v17 = sub_251F34D20();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

uint64_t assignWithTake for ActionMatterDevice(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  swift_bridgeObjectRelease();
  v7(a1 + a3[9], a2 + a3[9], v6);
  v7(a1 + a3[10], a2 + a3[10], v6);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[12];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)(a2 + v14 + 8);
  *(void *)uint64_t v15 = *(void *)(a2 + v14);
  *(void *)(v15 + 8) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(v16 + 24);
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  *(void *)(v15 + 24) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(v16 + 40);
  *(void *)(v15 + 32) = *(void *)(v16 + 32);
  *(void *)(v15 + 40) = v19;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v15 + 48) = *(_DWORD *)(v16 + 48);
  uint64_t v20 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  int v21 = (void *)(v15 + v20);
  uint64_t v22 = (void *)(v16 + v20);
  uint64_t v23 = sub_251F34D20();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  LODWORD(v7) = v25(v21, 1, v23);
  int v26 = v25(v22, 1, v23);
  if (!v7)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 40))(v21, v22, v23);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v24 + 8))(v21, v23);
    goto LABEL_6;
  }
  if (v26)
  {
LABEL_6:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v21, v22, *(void *)(*(void *)(v27 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v24 + 32))(v21, v22, v23);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionMatterDevice(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251BB63C8);
}

uint64_t sub_251BB63C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for MatterTileMetadata();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 48);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for ActionMatterDevice(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251BB650C);
}

uint64_t sub_251BB650C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_251F34DA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for MatterTileMetadata();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 48);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_251BB663C()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for MatterTileMetadata();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t _s10ErrorStateO3RVCOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ActionMatterDevice.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251BB688CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionMatterDevice.CodingKeys()
{
  return &type metadata for ActionMatterDevice.CodingKeys;
}

unint64_t sub_251BB68C8()
{
  unint64_t result = qword_269B9F548;
  if (!qword_269B9F548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F548);
  }
  return result;
}

unint64_t sub_251BB6920()
{
  unint64_t result = qword_269B9F550;
  if (!qword_269B9F550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F550);
  }
  return result;
}

unint64_t sub_251BB6978()
{
  unint64_t result = qword_269B9F558;
  if (!qword_269B9F558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F558);
  }
  return result;
}

uint64_t sub_251BB69CC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x644965646F6ELL && a2 == 0xE600000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7954656369766564 && a2 == 0xEB00000000736570 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6449656D6F68 && a2 == 0xE600000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x64496D6F6F72 && a2 == 0xE600000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6E456E6F69746361 && a2 == 0xEF73746E696F7064 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_251BB6D70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251BB6DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F4C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251BB6E40(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251BB6EA0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251BB6F0C@<X0>(uint64_t a1@<X8>)
{
  sub_251F34CF0();
  uint64_t v2 = sub_251F34D20();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 0, 1, v2);
}

uint64_t AnalyticsEvent.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  sub_251F34CF0();
  uint64_t v2 = sub_251F34D20();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 0, 1, v2);
}

uint64_t sub_251BB6FEC()
{
  return sub_251B3F5AC();
}

uint64_t AnalyticsEvent.payload()(uint64_t a1, uint64_t a2)
{
  v34[4] = *(id *)MEMORY[0x263EF8340];
  sub_251F345B0();
  swift_allocObject();
  sub_251F345A0();
  uint64_t v5 = sub_251F34590();
  unint64_t v7 = v6;
  uint64_t result = swift_release();
  if (v2) {
    return result;
  }
  uint64_t v9 = self;
  unint64_t v10 = (void *)sub_251F34BF0();
  v34[0] = 0;
  id v11 = objc_msgSend(v9, sel_JSONObjectWithData_options_error_, v10, 4, v34);

  if (!v11)
  {
    id v22 = v34[0];
    sub_251F34A30();

LABEL_9:
    swift_willThrow();
    return sub_251A1AD94(v5, v7);
  }
  id v12 = v34[0];
  sub_251F36240();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ECE0);
  if (!swift_dynamicCast())
  {
    objc_msgSend(objc_allocWithZone(MEMORY[0x263F087E0]), sel_init);
    goto LABEL_9;
  }
  id v33 = v32;

  uint64_t v13 = sub_251F34D20();
  int64_t v31 = &v27;
  uint64_t v29 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v28 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  unint64_t v30 = &v27;
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v13;
  uint64_t v19 = a1;
  uint64_t v20 = v29;
  (*(void (**)(uint64_t, uint64_t))(a2 + 32))(v19, a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v13) == 1)
  {
    sub_251BB8758((uint64_t)v17);
    int v21 = (void *)sub_251BB8688(0x6D617473656D6974, 0xE900000000000070);
    sub_251A1AD94(v5, v7);
  }
  else
  {
    uint64_t v23 = v28;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v28, v17, v18);
    sub_251F34CC0();
    uint64_t v24 = sub_251F35DC0();
    uint64_t v25 = v33;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v34[0] = v25;
    sub_251A0D588(v24, 0x6D617473656D6974, 0xE900000000000070, isUniquelyReferenced_nonNull_native);
    id v33 = v34[0];
    swift_bridgeObjectRelease();
    sub_251A1AD94(v5, v7);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v18);
  }
  return (uint64_t)v33;
}

Swift::Void __swiftcall AnalyticsEvent.sendLazy()()
{
  uint64_t v3 = v1;
  uint64_t v4 = v0;
  uint64_t v5 = *(void *)(v0 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = ((uint64_t (*)())MEMORY[0x270FA5388])();
  int v8 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)aBlock - v9;
  id v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)aBlock - v9, v2, v4);
  v11(v8, (uint64_t)v10, v4);
  unint64_t v12 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v4;
  *(void *)(v13 + 24) = v3;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v13 + v12, v10, v4);
  if (qword_26B21EC68 != -1) {
    swift_once();
  }
  if (byte_26B220CB8 == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    AnalyticsEvent.effectiveEventName.getter(v4, v3);
    uint64_t v14 = (void *)sub_251F356C0();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_251BB9394;
    aBlock[5] = v13;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_251BB7CC4;
    aBlock[3] = &block_descriptor_28;
    uint64_t v15 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    AnalyticsSendEventLazy();
    swift_release();
    _Block_release(v15);
  }
  else
  {
    sub_251BB7EB4((uint64_t)v8, v4, v3);
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
}

uint64_t sub_251BB7738()
{
  return 0x6C7070612E6D6F63;
}

uint64_t AnalyticsEvent.domainPrefix.getter()
{
  return 0x6C7070612E6D6F63;
}

uint64_t sub_251BB7780@<X0>(uint64_t a1@<X8>)
{
  return AnalyticsEvent.timestamp.getter(a1);
}

uint64_t sub_251BB7798(uint64_t a1, uint64_t a2)
{
  return AnalyticsEvent.payload()(a1, a2);
}

uint64_t AnalyticsEvent.effectiveEventName.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (*(uint64_t (**)(void))(a2 + 24))();
  if (!v5) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  }
  uint64_t v7 = v4;
  swift_bridgeObjectRetain();
  sub_251F35800();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  swift_bridgeObjectRetain();
  sub_251F35800();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AnalyticsEvent.send()()
{
  uint64_t v3 = v1;
  uint64_t v4 = v0;
  uint64_t v5 = (*(uint64_t (**)(void))(v1 + 40))();
  if (v2)
  {
    sub_251BB7D60(v2, v4, v3);
    swift_willThrow();
  }
  else
  {
    uint64_t v6 = v5;
    sub_251BB7A40(v5, v4, v3);
    if (qword_26B21EC68 != -1) {
      swift_once();
    }
    if (byte_26B220CB8 == 1)
    {
      AnalyticsEvent.effectiveEventName.getter(v4, v3);
      uint64_t v7 = (void *)sub_251F356C0();
      swift_bridgeObjectRelease();
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = v6;
      v10[4] = sub_251BB940C;
      v10[5] = v8;
      v10[0] = MEMORY[0x263EF8330];
      v10[1] = 1107296256;
      v10[2] = sub_251BB7CC4;
      v10[3] = &block_descriptor_6;
      uint64_t v9 = _Block_copy(v10);
      swift_release();
      AnalyticsSendEventLazy();
      _Block_release(v9);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_251BB7A40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_26B21EC68 != -1) {
    swift_once();
  }
  if (byte_26B220CB8 != 1)
  {
    if (qword_26B21ED00 == -1) {
      goto LABEL_7;
    }
    goto LABEL_10;
  }
  if (qword_26B21ED00 != -1) {
LABEL_10:
  }
    swift_once();
LABEL_7:
  sub_251F35FD0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_251F3DAB0;
  uint64_t v7 = sub_251F36E70();
  uint64_t v9 = v8;
  uint64_t v10 = MEMORY[0x263F8D310];
  *(void *)(v6 + 56) = MEMORY[0x263F8D310];
  unint64_t v11 = sub_251B44770();
  *(void *)(v6 + 64) = v11;
  *(void *)(v6 + 32) = v7;
  *(void *)(v6 + 40) = v9;
  uint64_t v12 = AnalyticsEvent.effectiveEventName.getter(a2, a3);
  *(void *)(v6 + 96) = v10;
  *(void *)(v6 + 104) = v11;
  *(void *)(v6 + 72) = v12;
  *(void *)(v6 + 80) = v13;
  *(void *)(v6 + 136) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ECE0);
  *(void *)(v6 + 144) = sub_251B447B8();
  *(void *)(v6 + 112) = a1;
  swift_bridgeObjectRetain();
  sub_251F34FB0();
  return swift_bridgeObjectRelease();
}

id sub_251BB7CC4(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_251A1A568(0, (unint64_t *)&qword_26B21ECF8);
    uint64_t v4 = (void *)sub_251F35540();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = 0;
  }
  return v4;
}

uint64_t sub_251BB7D60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_26B21ED00 != -1) {
    swift_once();
  }
  sub_251F35FB0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_251F3DAB0;
  uint64_t v6 = sub_251F36E70();
  uint64_t v8 = v7;
  uint64_t v9 = MEMORY[0x263F8D310];
  *(void *)(v5 + 56) = MEMORY[0x263F8D310];
  unint64_t v10 = sub_251B44770();
  *(void *)(v5 + 64) = v10;
  *(void *)(v5 + 32) = v6;
  *(void *)(v5 + 40) = v8;
  uint64_t v11 = AnalyticsEvent.effectiveEventName.getter(a2, a3);
  *(void *)(v5 + 96) = v9;
  *(void *)(v5 + 104) = v10;
  *(void *)(v5 + 72) = v11;
  *(void *)(v5 + 80) = v12;
  swift_getErrorValue();
  uint64_t v13 = sub_251F36BF0();
  *(void *)(v5 + 136) = v9;
  *(void *)(v5 + 144) = v10;
  *(void *)(v5 + 112) = v13;
  *(void *)(v5 + 120) = v14;
  sub_251F34FB0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251BB7EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 40))(a2, a3);
  sub_251BB7A40(v5, a2, a3);
  return v5;
}

uint64_t sub_251BB7F4C()
{
  uint64_t v0 = sub_251F350A0();
  __swift_allocate_value_buffer(v0, qword_269B9F560);
  __swift_project_value_buffer(v0, (uint64_t)qword_269B9F560);
  return sub_251F35090();
}

uint64_t static Logger.analytics.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_269B9C300 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_251F350A0();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269B9F560);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_251BB8074()
{
  uint64_t result = sub_251BB8098();
  byte_26B220CB8 = result & 1;
  return result;
}

uint64_t sub_251BB8098()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    uint64_t v2 = sub_251F356F0();
    uint64_t v4 = v3;

    if (v2 == 0xD00000000000001DLL && v4 == 0x8000000251F6B770)
    {
      swift_bridgeObjectRelease();
      char v5 = 0;
    }
    else
    {
      char v6 = sub_251F36B10();
      swift_bridgeObjectRelease();
      char v5 = v6 ^ 1;
    }
  }
  else
  {
    char v5 = 1;
  }
  return v5 & 1;
}

uint64_t HMHome.analyticsTileCountValue.getter()
{
  id v1 = objc_msgSend(v0, sel_accessories);
  sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
  unint64_t v2 = sub_251F35AC0();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_251F366C0();
    swift_bridgeObjectRelease_n();
    if (v3 < 0) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
  }
  id v4 = objc_msgSend(v0, sel_actionSets);
  sub_251A1A568(0, &qword_26B21EB00);
  unint64_t v5 = sub_251F35AC0();

  if (!(v5 >> 62))
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
    return v6 + v3;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_251F366C0();
  swift_bridgeObjectRelease_n();
  if ((v6 & 0x8000000000000000) == 0) {
    return v6 + v3;
  }
LABEL_9:
  uint64_t result = sub_251F36670();
  __break(1u);
  return result;
}

uint64_t sub_251BB8324()
{
  return sub_251B3FA08();
}

uint64_t sub_251BB8360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251BB8408(a1, (uint64_t (*)(void))type metadata accessor for StaticService, (uint64_t (*)(void))type metadata accessor for StaticService, (void (*)(unint64_t, uint64_t))sub_251E39FD4, (void (*)(void))sub_251A12304, a2);
}

uint64_t sub_251BB83B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251BB8408(a1, type metadata accessor for StaticAccessory, type metadata accessor for StaticAccessory, (void (*)(unint64_t, uint64_t))sub_251E39FEC, (void (*)(void))sub_251A123DC, a2);
}

uint64_t sub_251BB8408@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, void (*a4)(unint64_t, uint64_t)@<X3>, void (*a5)(void)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11 = v6;
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_2519FE584(a1);
  LOBYTE(a1) = v15;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v11;
    uint64_t v29 = *v11;
    *uint64_t v11 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      a5();
      uint64_t v17 = v29;
    }
    uint64_t v18 = *(void *)(v17 + 48);
    uint64_t v19 = sub_251F34DA0();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v14, v19);
    uint64_t v20 = *(void *)(v17 + 56);
    uint64_t v21 = a2(0);
    uint64_t v28 = *(void *)(v21 - 8);
    sub_251BB94F8(v20 + *(void *)(v28 + 72) * v14, a6, a3);
    a4(v14, v17);
    *uint64_t v11 = v17;
    swift_bridgeObjectRelease();
    id v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
    uint64_t v23 = a6;
    uint64_t v24 = 0;
    uint64_t v25 = v21;
  }
  else
  {
    uint64_t v26 = a2(0);
    id v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
    uint64_t v25 = v26;
    uint64_t v23 = a6;
    uint64_t v24 = 1;
  }
  return v22(v23, v24, 1, v25);
}

uint64_t sub_251BB85F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251BB8408(a1, type metadata accessor for StateSnapshot, type metadata accessor for StateSnapshot, (void (*)(unint64_t, uint64_t))sub_251E3A318, (void (*)(void))sub_251A124FC, a2);
}

double sub_251BB8648@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_251BB890C(a1, (uint64_t (*)(uint64_t))sub_2519FE568, (void (*)(uint64_t, uint64_t))sub_251E3A514, (void (*)(void))sub_251A11E30, a2);
}

uint64_t sub_251BB8688(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_2519FE798(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_251A12C40();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_251E3A6F0(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_251BB8758(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_251BB87B8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_2519FE798(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v15 = *v4;
    *id v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_251A137FC();
      uint64_t v11 = v15;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56) + 32 * v8;
    uint64_t v13 = *(void *)(v12 + 24);
    *(void *)a3 = *(void *)v12;
    *(_OWORD *)(a3 + 8) = *(_OWORD *)(v12 + 8);
    *(void *)(a3 + 24) = v13;
    sub_251E3AC54(v8, v11);
    *id v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

double sub_251BB88CC@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_251BB890C(a1, (uint64_t (*)(uint64_t))sub_2519FEA08, (void (*)(uint64_t, uint64_t))sub_251E3AE2C, (void (*)(void))sub_251A13A50, a2);
}

double sub_251BB890C@<D0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, void (*a3)(uint64_t, uint64_t)@<X2>, void (*a4)(void)@<X3>, _OWORD *a5@<X8>)
{
  char v9 = v5;
  swift_bridgeObjectRetain();
  uint64_t v12 = a2(a1);
  LOBYTE(a1) = v13;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v9;
    uint64_t v17 = *v9;
    *char v9 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      a4();
      uint64_t v15 = v17;
    }
    sub_251A0D578((_OWORD *)(*(void *)(v15 + 56) + 32 * v12), a5);
    a3(v12, v15);
    *char v9 = v15;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a5 = 0u;
    a5[1] = 0u;
  }
  return result;
}

double sub_251BB8A1C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  id v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_2519FE798(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *id v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_251A13F94();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_251A0D578((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    sub_251E3AC54(v8, v11);
    *id v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_251BB8B20(uint64_t a1)
{
  return sub_251BB8FA0(a1, (void (*)(unint64_t, uint64_t))sub_251E39FD0, (void (*)(void))sub_251A14AB8);
}

uint64_t sub_251BB8B4C(uint64_t a1)
{
  return sub_251BB8FA0(a1, (void (*)(unint64_t, uint64_t))sub_251E39FD0, (void (*)(void))sub_251A14AE4);
}

uint64_t sub_251BB8B78@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_2519FE584(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    *(void *)&v13[0] = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_251A14DBC();
      uint64_t v9 = *(void *)&v13[0];
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_251F34DA0();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    memmove(a2, (const void *)(*(void *)(v9 + 56) + (v6 << 7)), 0x80uLL);
    sub_251E3BD48(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    return nullsub_1(a2);
  }
  else
  {
    sub_251BB9478(v13);
    return sub_251BB9490((uint64_t)v13, (uint64_t)a2);
  }
}

uint64_t sub_251BB8C9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251BB8408(a1, (uint64_t (*)(void))type metadata accessor for StaticActionSet, (uint64_t (*)(void))type metadata accessor for StaticActionSet, (void (*)(unint64_t, uint64_t))sub_251E3C014, (void (*)(void))sub_251A11E84, a2);
}

uint64_t sub_251BB8CF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_2519FE568(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v19 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_251A154F8();
      uint64_t v9 = v19;
    }
    uint64_t v10 = *(void *)(v9 + 56);
    uint64_t v11 = type metadata accessor for StaticCharacteristic();
    uint64_t v18 = *(void *)(v11 - 8);
    sub_251BB94F8(v10 + *(void *)(v18 + 72) * v6, a2, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    sub_251E3C02C(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    uint64_t v13 = a2;
    uint64_t v14 = 0;
    uint64_t v15 = v11;
  }
  else
  {
    uint64_t v16 = type metadata accessor for StaticCharacteristic();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    uint64_t v15 = v16;
    uint64_t v13 = a2;
    uint64_t v14 = 1;
  }
  return v12(v13, v14, 1, v15);
}

uint64_t sub_251BB8E7C(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_2519FE584(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v12 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_251A16840();
    uint64_t v7 = v12;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = sub_251F34DA0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4, v9);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_251E39FD0(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_251BB8F74(uint64_t a1)
{
  return sub_251BB8FA0(a1, (void (*)(unint64_t, uint64_t))sub_251E39FD0, (void (*)(void))sub_251A16B0C);
}

uint64_t sub_251BB8FA0(uint64_t a1, void (*a2)(unint64_t, uint64_t), void (*a3)(void))
{
  unint64_t v6 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_2519FE584(a1);
  LOBYTE(a1) = v9;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *v6;
  uint64_t v16 = *v6;
  *unint64_t v6 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a3();
    uint64_t v11 = v16;
  }
  uint64_t v12 = *(void *)(v11 + 48);
  uint64_t v13 = sub_251F34DA0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12 + *(void *)(*(void *)(v13 - 8) + 72) * v8, v13);
  uint64_t v14 = *(void *)(*(void *)(v11 + 56) + 8 * v8);
  a2(v8, v11);
  *unint64_t v6 = v11;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_251BB90B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251BB8408(a1, type metadata accessor for ScrubberElement, type metadata accessor for ScrubberElement, (void (*)(unint64_t, uint64_t))sub_251E3C5D4, (void (*)(void))sub_251A17358, a2);
}

uint64_t sub_251BB9104@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251BB8408(a1, (uint64_t (*)(void))type metadata accessor for StaticLightProfile, (uint64_t (*)(void))type metadata accessor for StaticLightProfile, (void (*)(unint64_t, uint64_t))sub_251E3C5EC, (void (*)(void))sub_251A17664, a2);
}

uint64_t sub_251BB9158@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_2519FEFC8(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_251A16B18();
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
    sub_251A4F584(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6);
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t v13 = type metadata accessor for IconTextValueStringDataHolder();
    uint64_t v20 = *(void *)(v13 - 8);
    sub_251BB94F8(v12 + *(void *)(v20 + 72) * v6, a2, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    sub_251E3C604(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for IconTextValueStringDataHolder();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }
  return v14(v15, v16, 1, v17);
}

uint64_t sub_251BB930C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_251BB9394()
{
  return sub_251BB7EB4(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)), *(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_251BB93D4()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_251BB940C()
{
  return swift_bridgeObjectRetain();
}

uint64_t dispatch thunk of AnalyticsEvent.eventName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AnalyticsEvent.domainPrefix.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of AnalyticsEvent.timestamp.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of AnalyticsEvent.payload()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

double sub_251BB9478(_OWORD *a1)
{
  double result = 0.0;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_251BB9490(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F578);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251BB94F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t StaticCameraSnapshotControl.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t StaticCameraSnapshotControl.mostRecentCaptureDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StaticCameraSnapshotControl() + 20);
  return sub_251BB9660(v3, a1);
}

uint64_t type metadata accessor for StaticCameraSnapshotControl()
{
  uint64_t result = qword_26B220BF8;
  if (!qword_26B220BF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_251BB9660(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id StaticCameraSnapshotControl.mostRecentSnapshot.getter()
{
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26B21FF50;
  uint64_t v1 = (void *)sub_251F34D50();
  id v2 = objc_msgSend(v0, sel_cameraProfileFor_, v1);

  id v3 = objc_msgSend(v2, sel_snapshotControl);
  id v4 = objc_msgSend(v3, sel_mostRecentSnapshot);

  return v4;
}

Swift::Void __swiftcall StaticCameraSnapshotControl.takeSnapshot()()
{
  uint64_t v1 = type metadata accessor for StaticCameraSnapshotControl();
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  id v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v25 - v5;
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  char v7 = (void *)qword_26B21FF50;
  unint64_t v8 = (void *)sub_251F34D50();
  id v9 = objc_msgSend(v7, sel_cameraProfileFor_, v8);

  id v10 = objc_msgSend(v9, sel_snapshotControl);
  if (v10)
  {
    if (qword_269B9C348 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_251F350A0();
    __swift_project_value_buffer(v11, (uint64_t)qword_269B9FFA8);
    sub_251BBACB0(v0, (uint64_t)v6);
    uint64_t v12 = sub_251F35080();
    os_log_type_t v13 = sub_251F35FD0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v26 = v15;
      *(_DWORD *)uint64_t v14 = 136315138;
      sub_251F34DA0();
      sub_251BBC19C((unint64_t *)&qword_26B21E6B0, MEMORY[0x270FA96B8]);
      uint64_t v16 = sub_251F36AB0();
      uint64_t v25 = sub_251A00E84(v16, v17, &v26);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      sub_251BBAD14((uint64_t)v6);
      _os_log_impl(&dword_2519F3000, v12, v13, "[%s] Taking snapshot", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v15, -1, -1);
      MEMORY[0x2533AC760](v14, -1, -1);
    }
    else
    {
      sub_251BBAD14((uint64_t)v6);
    }

    objc_msgSend(v10, sel_takeSnapshot);
  }
  else
  {
    if (qword_269B9C348 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_251F350A0();
    __swift_project_value_buffer(v18, (uint64_t)qword_269B9FFA8);
    sub_251BBACB0(v0, (uint64_t)v4);
    uint64_t v19 = sub_251F35080();
    os_log_type_t v20 = sub_251F35FB0();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v26 = v22;
      *(_DWORD *)uint64_t v21 = 136315138;
      sub_251F34DA0();
      sub_251BBC19C((unint64_t *)&qword_26B21E6B0, MEMORY[0x270FA96B8]);
      uint64_t v23 = sub_251F36AB0();
      uint64_t v25 = sub_251A00E84(v23, v24, &v26);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      sub_251BBAD14((uint64_t)v4);
      _os_log_impl(&dword_2519F3000, v19, v20, "[%s] Tried to take a snapshot but HMCameraSnapshotControl is nil", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v22, -1, -1);
      MEMORY[0x2533AC760](v21, -1, -1);
    }
    else
    {
      sub_251BBAD14((uint64_t)v4);
    }
  }
}

uint64_t StaticCameraSnapshotControl.hash(into:)()
{
  sub_251F34DA0();
  sub_251BBC19C((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA96B8]);
  sub_251F35610();
  uint64_t v1 = v0 + *(int *)(type metadata accessor for StaticCameraSnapshotControl() + 20);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  MEMORY[0x270FA5388](v2 - 8);
  id v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251BB9660(v1, (uint64_t)v4);
  uint64_t v5 = sub_251F34D20();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (v7 == 1) {
    return sub_251F36CC0();
  }
  MEMORY[0x270FA5388](v7);
  id v10 = (char *)&v11 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v10, v4, v5);
  sub_251F36CC0();
  sub_251BBC19C(&qword_269B9CF80, MEMORY[0x270FA9228]);
  sub_251F35610();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v10, v5);
}

uint64_t sub_251BB9DD4()
{
  if (*v0) {
    return 0xD000000000000015;
  }
  else {
    return 25705;
  }
}

uint64_t sub_251BB9E08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251BBC0C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251BB9E30(uint64_t a1)
{
  unint64_t v2 = sub_251BBB17C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251BB9E6C(uint64_t a1)
{
  unint64_t v2 = sub_251BBB17C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticCameraSnapshotControl.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F580);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251BBB17C();
  sub_251F36DA0();
  v8[15] = 0;
  sub_251F34DA0();
  sub_251BBC19C(&qword_26B21E348, MEMORY[0x270FA96B8]);
  sub_251F36A20();
  if (!v1)
  {
    type metadata accessor for StaticCameraSnapshotControl();
    v8[14] = 1;
    sub_251F34D20();
    sub_251BBC19C(&qword_269B9F590, MEMORY[0x270FA9228]);
    sub_251F36970();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t StaticCameraSnapshotControl.hashValue.getter()
{
  sub_251F36CA0();
  sub_251F34DA0();
  sub_251BBC19C((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA96B8]);
  sub_251F35610();
  uint64_t v1 = v0 + *(int *)(type metadata accessor for StaticCameraSnapshotControl() + 20);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251BB9660(v1, (uint64_t)v4);
  uint64_t v5 = sub_251F34D20();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (v7 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v7);
    uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
    sub_251F36CC0();
    sub_251BBC19C(&qword_269B9CF80, MEMORY[0x270FA9228]);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return sub_251F36D00();
}

uint64_t StaticCameraSnapshotControl.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F598);
  uint64_t v4 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticCameraSnapshotControl();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251BBB17C();
  sub_251F36D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v22 = v9;
  uint64_t v24 = v4;
  uint64_t v10 = sub_251F34DA0();
  uint64_t v23 = &v21;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  os_log_type_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v28 = 0;
  sub_251BBC19C(&qword_269B9CC80, MEMORY[0x270FA96B8]);
  uint64_t v14 = v26;
  sub_251F36880();
  uint64_t v21 = v11;
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v16 = (uint64_t)v22;
  v15(v22, v13, v10);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  uint64_t v23 = &v21;
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D20();
  char v27 = 1;
  sub_251BBC19C(&qword_269B9DBE8, MEMORY[0x270FA9228]);
  sub_251F367D0();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v14);
  sub_251BBB1D0((uint64_t)v19, v16 + *(int *)(v7 + 20));
  sub_251BBACB0(v16, v25);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_251BBAD14(v16);
}

uint64_t sub_251BBA658(uint64_t a1, uint64_t a2)
{
  sub_251F34DA0();
  sub_251BBC19C((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA96B8]);
  sub_251F35610();
  uint64_t v4 = v2 + *(int *)(a2 + 20);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251BB9660(v4, (uint64_t)v7);
  uint64_t v8 = sub_251F34D20();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if (v10 == 1) {
    return sub_251F36CC0();
  }
  MEMORY[0x270FA5388](v10);
  os_log_type_t v13 = (char *)&v14 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v13, v7, v8);
  sub_251F36CC0();
  sub_251BBC19C(&qword_269B9CF80, MEMORY[0x270FA9228]);
  sub_251F35610();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v13, v8);
}

uint64_t sub_251BBA83C(uint64_t a1, uint64_t a2)
{
  sub_251F36CA0();
  sub_251F34DA0();
  sub_251BBC19C((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA96B8]);
  sub_251F35610();
  uint64_t v4 = v2 + *(int *)(a2 + 20);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251BB9660(v4, (uint64_t)v7);
  uint64_t v8 = sub_251F34D20();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if (v10 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v10);
    uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v7, v8);
    sub_251F36CC0();
    sub_251BBC19C(&qword_269B9CF80, MEMORY[0x270FA9228]);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  return sub_251F36D00();
}

uint64_t sub_251BBAA30@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticCameraSnapshotControl.init(from:)(a1, a2);
}

uint64_t sub_251BBAA48(void *a1)
{
  return StaticCameraSnapshotControl.encode(to:)(a1);
}

uint64_t sub_251BBAA60@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for StaticCameraSnapshotControl();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(a1, sel_uniqueIdentifier);
  sub_251F34D80();

  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = objc_msgSend(a1, sel_snapshotControl);
  if (v12
    && (os_log_type_t v13 = v12,
        id v14 = objc_msgSend(v12, sel_mostRecentSnapshot),
        v13,
        v14))
  {
    id v15 = objc_msgSend(v14, sel_captureDate);

    sub_251F34CE0();
    uint64_t v16 = sub_251F34D20();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v11, 0, 1, v16);
  }
  else
  {

    uint64_t v17 = sub_251F34D20();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 1, 1, v17);
  }
  sub_251BBB1D0((uint64_t)v11, (uint64_t)&v7[*(int *)(v4 + 20)]);
  sub_251BBC1E4((uint64_t)v7, a2);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
}

uint64_t sub_251BBACB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticCameraSnapshotControl();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_251BBAD14(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticCameraSnapshotControl();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL _s13HomeDataModel27StaticCameraSnapshotControlV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_251F34D70() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for StaticCameraSnapshotControl();
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  v28[3] = v28;
  uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v9 = (char *)v28 - v8;
  sub_251BB9660(v5, (uint64_t)v28 - v8);
  v28[2] = v28;
  uint64_t v10 = MEMORY[0x270FA5388](a2 + *(int *)(v4 + 20));
  uint64_t v11 = (char *)v28 - v8;
  sub_251BB9660(v10, (uint64_t)v28 - v8);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EFF8);
  v28[1] = v28;
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  id v15 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)&v15[*(int *)(v13 + 56)];
  sub_251BB9660((uint64_t)v28 - v8, (uint64_t)v15);
  sub_251BB9660((uint64_t)v28 - v8, v16);
  uint64_t v17 = sub_251F34D20();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  uint64_t v20 = v19(v15, 1, v17);
  if (v20 == 1)
  {
    sub_251A1B064((uint64_t)v28 - v8, &qword_26B21EC20);
    sub_251A1B064((uint64_t)v28 - v8, &qword_26B21EC20);
    if (v19((char *)v16, 1, v17) == 1)
    {
      sub_251A1B064((uint64_t)v15, &qword_26B21EC20);
      return 1;
    }
    goto LABEL_7;
  }
  v28[0] = v28;
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)v28 - v8;
  sub_251BB9660((uint64_t)v15, (uint64_t)v28 - v8);
  uint64_t v23 = v19((char *)v16, 1, v17);
  if (v23 == 1)
  {
    sub_251A1B064((uint64_t)v28 - v8, &qword_26B21EC20);
    sub_251A1B064((uint64_t)v28 - v8, &qword_26B21EC20);
    (*(void (**)(char *, uint64_t))(v18 + 8))((char *)v28 - v8, v17);
LABEL_7:
    sub_251A1B064((uint64_t)v15, &qword_26B21EFF8);
    return 0;
  }
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)v28 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(v25, v16, v17);
  sub_251BBC19C((unint64_t *)&qword_269B9F5C0, MEMORY[0x270FA9228]);
  char v26 = sub_251F35650();
  char v27 = *(void (**)(char *, uint64_t))(v18 + 8);
  v27(v25, v17);
  sub_251A1B064((uint64_t)v11, &qword_26B21EC20);
  sub_251A1B064((uint64_t)v9, &qword_26B21EC20);
  v27(v22, v17);
  sub_251A1B064((uint64_t)v15, &qword_26B21EC20);
  return (v26 & 1) != 0;
}

unint64_t sub_251BBB17C()
{
  unint64_t result = qword_269B9F588;
  if (!qword_269B9F588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F588);
  }
  return result;
}

uint64_t sub_251BBB1D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_251BBB23C()
{
  unint64_t result = qword_269B9F5A0;
  if (!qword_269B9F5A0)
  {
    type metadata accessor for StaticCameraSnapshotControl();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F5A0);
  }
  return result;
}

uint64_t sub_251BBB294()
{
  return sub_251BBC19C((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA96B8]);
}

uint64_t *initializeBufferWithCopyOfBuffer for StaticCameraSnapshotControl(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_251F34D20();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t destroy for StaticCameraSnapshotControl(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_251F34D20();
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v5, 1, v6);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    return v8(v5, v6);
  }
  return result;
}

uint64_t initializeWithCopy for StaticCameraSnapshotControl(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_251F34D20();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithCopy for StaticCameraSnapshotControl(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_251F34D20();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t initializeWithTake for StaticCameraSnapshotControl(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_251F34D20();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithTake for StaticCameraSnapshotControl(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_251F34D20();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticCameraSnapshotControl(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251BBBB80);
}

uint64_t sub_251BBBB80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for StaticCameraSnapshotControl(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251BBBC90);
}

uint64_t sub_251BBBC90(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_251F34DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_251BBBD98()
{
  sub_251F34DA0();
  if (v0 <= 0x3F)
  {
    sub_251BBBE60();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_251BBBE60()
{
  if (!qword_26B21FD28)
  {
    sub_251F34D20();
    unint64_t v0 = sub_251F36190();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B21FD28);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for StaticCameraSnapshotControl.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251BBBF84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticCameraSnapshotControl.CodingKeys()
{
  return &type metadata for StaticCameraSnapshotControl.CodingKeys;
}

unint64_t sub_251BBBFC0()
{
  unint64_t result = qword_269B9F5A8;
  if (!qword_269B9F5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F5A8);
  }
  return result;
}

unint64_t sub_251BBC018()
{
  unint64_t result = qword_269B9F5B0;
  if (!qword_269B9F5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F5B0);
  }
  return result;
}

unint64_t sub_251BBC070()
{
  unint64_t result = qword_269B9F5B8;
  if (!qword_269B9F5B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F5B8);
  }
  return result;
}

uint64_t sub_251BBC0C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000251F6B790)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_251BBC19C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251BBC1E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticCameraSnapshotControl();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *static ServiceArea.Progress.OperationalStatus.mockCases.getter()
{
  return &unk_2702629D0;
}

HomeDataModel::CharacteristicKind_optional __swiftcall CharacteristicKind.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_251F36B50();
  result.value = swift_bridgeObjectRelease();
  unint64_t v5 = v3 - 128;
  if (v3 >= 0x80)
  {
    char v6 = -100;
    LOBYTE(v3) = 0x80;
    switch(v5)
    {
      case 0uLL:
        goto LABEL_2;
      case 1uLL:
        LOBYTE(v3) = -127;
        goto LABEL_2;
      case 2uLL:
        LOBYTE(v3) = -126;
        goto LABEL_2;
      case 3uLL:
        LOBYTE(v3) = -125;
        goto LABEL_2;
      case 4uLL:
        LOBYTE(v3) = -124;
        goto LABEL_2;
      case 5uLL:
        LOBYTE(v3) = -123;
        goto LABEL_2;
      case 6uLL:
        LOBYTE(v3) = -122;
        goto LABEL_2;
      case 7uLL:
        LOBYTE(v3) = -121;
        goto LABEL_2;
      case 8uLL:
        LOBYTE(v3) = -120;
        goto LABEL_2;
      case 9uLL:
        LOBYTE(v3) = -119;
        goto LABEL_2;
      case 0xAuLL:
        LOBYTE(v3) = -118;
        goto LABEL_2;
      case 0xBuLL:
        LOBYTE(v3) = -117;
        goto LABEL_2;
      case 0xCuLL:
        LOBYTE(v3) = -116;
        goto LABEL_2;
      case 0xDuLL:
        LOBYTE(v3) = -115;
        goto LABEL_2;
      case 0xEuLL:
        LOBYTE(v3) = -114;
        goto LABEL_2;
      case 0xFuLL:
        LOBYTE(v3) = -113;
        goto LABEL_2;
      case 0x10uLL:
        LOBYTE(v3) = -112;
        goto LABEL_2;
      case 0x11uLL:
        LOBYTE(v3) = -111;
        goto LABEL_2;
      case 0x12uLL:
        LOBYTE(v3) = -110;
        goto LABEL_2;
      case 0x13uLL:
        LOBYTE(v3) = -109;
        goto LABEL_2;
      case 0x14uLL:
        LOBYTE(v3) = -108;
        goto LABEL_2;
      case 0x15uLL:
        LOBYTE(v3) = -107;
        goto LABEL_2;
      case 0x16uLL:
        LOBYTE(v3) = -106;
        goto LABEL_2;
      case 0x17uLL:
        LOBYTE(v3) = -105;
        goto LABEL_2;
      case 0x18uLL:
        LOBYTE(v3) = -104;
        goto LABEL_2;
      case 0x19uLL:
        LOBYTE(v3) = -103;
        goto LABEL_2;
      case 0x1AuLL:
        LOBYTE(v3) = -102;
        goto LABEL_2;
      case 0x1BuLL:
        LOBYTE(v3) = -101;
        goto LABEL_2;
      case 0x1CuLL:
        break;
      case 0x1DuLL:
        char v6 = -99;
        break;
      case 0x1EuLL:
        char v6 = -98;
        break;
      case 0x1FuLL:
        char v6 = -97;
        break;
      case 0x20uLL:
        char v6 = -96;
        break;
      case 0x21uLL:
        char v6 = -95;
        break;
      case 0x22uLL:
        char v6 = -94;
        break;
      case 0x23uLL:
        char v6 = -93;
        break;
      case 0x24uLL:
        char v6 = -92;
        break;
      case 0x25uLL:
        char v6 = -91;
        break;
      case 0x26uLL:
        char v6 = -90;
        break;
      case 0x27uLL:
        char v6 = -89;
        break;
      case 0x28uLL:
        char v6 = -88;
        break;
      case 0x29uLL:
        char v6 = -87;
        break;
      case 0x2AuLL:
        char v6 = -86;
        break;
      case 0x2BuLL:
        char v6 = -85;
        break;
      case 0x2CuLL:
        char v6 = -84;
        break;
      case 0x2DuLL:
        char v6 = -83;
        break;
      default:
        char v6 = -82;
        break;
    }
  }
  else
  {
LABEL_2:
    char v6 = v3;
  }
  *BOOL v2 = v6;
  return result;
}

HomeDataModel::CharacteristicKind::Format_optional __swiftcall CharacteristicKind.Format.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_251F36750();
  result.value = swift_bridgeObjectRelease();
  char v5 = 11;
  if (v3 < 0xB) {
    char v5 = v3;
  }
  *BOOL v2 = v5;
  return result;
}

void static CharacteristicKind.Value.typedValue(for:value:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v6 = objc_msgSend(a1, sel_metadata);
  if (v6)
  {
    uint64_t v7 = v6;
    id v8 = objc_msgSend(v6, sel_format);
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = sub_251F356F0();
      uint64_t v12 = v11;

      v13._countAndFlagsBits = v10;
      v13._object = v12;
      CharacteristicKind.Format.init(rawValue:)(v13);
      if (v23 != 11)
      {
        static CharacteristicKind.Value.typedValue(for:valueFormat:)(a2, (unsigned __int8 *)&v23, a3);

        return;
      }
    }
  }
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_251F350A0();
  __swift_project_value_buffer(v14, (uint64_t)qword_26B21F290);
  id v15 = a1;
  uint64_t v16 = sub_251F35080();
  os_log_type_t v17 = sub_251F35FB0();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = (void *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = v22;
    *(_DWORD *)uint64_t v18 = 136315394;
    sub_251A00E84(0xD000000000000016, 0x8000000251F6B7B0, &v23);
    sub_251F361D0();
    *(_WORD *)(v18 + 12) = 2112;
    uint64_t v20 = a3;
    id v21 = v15;
    sub_251F361D0();
    *uint64_t v19 = v15;

    a3 = v20;
    _os_log_impl(&dword_2519F3000, v16, v17, "%s unable to slurp value for characteristic %@", (uint8_t *)v18, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v19, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v22, -1, -1);
    MEMORY[0x2533AC760](v18, -1, -1);
  }
  else
  {
  }
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = -1;
}

uint64_t CharacteristicKind.Value.rawObjectValue.getter()
{
  uint64_t v2 = *(void *)v0;
  unint64_t v1 = *(void *)(v0 + 8);
  uint64_t v3 = 0;
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
      uint64_t v3 = sub_251F36C50();
      break;
    case 2:
      uint64_t v3 = sub_251F36D40();
      break;
    case 3:
      uint64_t v3 = sub_251F36D60();
      break;
    case 4:
      uint64_t v3 = sub_251F36D70();
      break;
    case 5:
    case 6:
      uint64_t v3 = sub_251F36C40();
      break;
    case 7:
      uint64_t v3 = sub_251F35DC0();
      break;
    case 8:
      uint64_t v3 = sub_251F356C0();
      break;
    case 9:
      sub_251A1A894(*(void *)v0, *(void *)(v0 + 8));
      uint64_t v3 = sub_251F34BF0();
      uint64_t v4 = v2;
      unint64_t v5 = v1;
      char v6 = 9;
      goto LABEL_12;
    case 0xA:
      sub_251A1A894(*(void *)v0, *(void *)(v0 + 8));
      uint64_t v3 = sub_251F34BF0();
      uint64_t v4 = v2;
      unint64_t v5 = v1;
      char v6 = 10;
LABEL_12:
      sub_251A580B4(v4, v5, v6);
      break;
    case 0xB:
      return v3;
    default:
      uint64_t v3 = sub_251F35BF0();
      break;
  }
  return v3;
}

void *static CharacteristicKind.allCases.getter()
{
  return &unk_2702629F8;
}

unint64_t CharacteristicKind.rawValue.getter()
{
  return 0xD000000000000024;
}

HomeDataModel::CharacteristicKind_optional sub_251BBD4AC(Swift::String *a1)
{
  return CharacteristicKind.init(rawValue:)(*a1);
}

unint64_t sub_251BBD4B8@<X0>(void *a1@<X8>)
{
  unint64_t result = CharacteristicKind.rawValue.getter();
  *a1 = 0xD000000000000024;
  a1[1] = v3;
  return result;
}

uint64_t sub_251BBD4E8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_251DB1CB0(*a1, *a2);
}

void sub_251BBD4F4(void *a1@<X8>)
{
  *a1 = &unk_2702629F8;
}

uint64_t sub_251BBD50C()
{
  return sub_251E71D5C();
}

uint64_t sub_251BBD518()
{
  return sub_251E71F24();
}

uint64_t sub_251BBD524()
{
  return sub_251E720EC();
}

uint64_t sub_251BBD530()
{
  return sub_251F36D00();
}

uint64_t sub_251BBD598()
{
  CharacteristicKind.rawValue.getter();
  sub_251F357B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251BBD5FC()
{
  return sub_251F36D00();
}

uint64_t sub_251BBD660()
{
  return sub_251F35A30();
}

uint64_t sub_251BBD6C0()
{
  return sub_251F359D0();
}

uint64_t CharacteristicKind.Value.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  unint64_t v3 = *(void *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_251B2ED7C(v2, v3, v4);
}

uint64_t static CharacteristicKind.Value.typedValue(for:valueFormat:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  int v4 = *a2;
  sub_251AA82A4(a1, (uint64_t)&v39);
  if (!v40)
  {
    uint64_t result = sub_251A9090C((uint64_t)&v39);
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(unsigned char *)(a3 + 16) = -1;
    return result;
  }
  sub_251A0D578(&v39, v41);
  sub_251A0D51C((uint64_t)v41, (uint64_t)&v39);
  if (!swift_dynamicCast())
  {
    if (swift_dynamicCast())
    {
      sub_251A0D51C((uint64_t)v41, (uint64_t)v36);
      int v9 = swift_dynamicCast();
      int v10 = v34;
      if (!v9) {
        int v10 = 0;
      }
      sub_251BBDE14(v10 | ((v9 ^ 1u) << 8), v4, a3);
      goto LABEL_57;
    }
    if (swift_dynamicCast())
    {
      sub_251A0D51C((uint64_t)v41, (uint64_t)v36);
      int v11 = swift_dynamicCast();
      int v12 = (unsigned __int16)v34;
      if (!v11) {
        int v12 = 0;
      }
      sub_251BBDFA0(v12 | ((v11 ^ 1u) << 16), v4, a3);
      goto LABEL_57;
    }
    if (swift_dynamicCast())
    {
      sub_251A0D51C((uint64_t)v41, (uint64_t)v36);
      int v13 = swift_dynamicCast();
      uint64_t v14 = v34;
      LOBYTE(v34) = v13 ^ 1;
      if (!v13) {
        uint64_t v14 = 0;
      }
      sub_251BBE140(v14 | ((unint64_t)(v13 ^ 1u) << 32), v4, a3);
      goto LABEL_57;
    }
    if (swift_dynamicCast())
    {
      sub_251A0D51C((uint64_t)v41, (uint64_t)v36);
      int v15 = swift_dynamicCast();
      if (v15) {
        uint64_t v6 = v34;
      }
      else {
        uint64_t v6 = 0;
      }
      char v7 = v15 ^ 1;
      goto LABEL_7;
    }
    if (swift_dynamicCast())
    {
      sub_251A0D51C((uint64_t)v41, (uint64_t)v36);
      int v16 = swift_dynamicCast();
      int v17 = v34;
      if (!v16) {
        int v17 = 0;
      }
      sub_251BBE484(v17 | ((v16 ^ 1u) << 8), v4, a3);
      goto LABEL_57;
    }
    if (swift_dynamicCast())
    {
      sub_251A0D51C((uint64_t)v41, (uint64_t)v36);
      int v18 = swift_dynamicCast();
      int v19 = (unsigned __int16)v34;
      if (!v18) {
        int v19 = 0;
      }
      sub_251BBE5B4(v19 | ((v18 ^ 1u) << 16), v4, a3);
      goto LABEL_57;
    }
    if (swift_dynamicCast())
    {
      sub_251A0D51C((uint64_t)v41, (uint64_t)v36);
      int v20 = swift_dynamicCast();
      uint64_t v21 = v34;
      LOBYTE(v34) = v20 ^ 1;
      if (!v20) {
        uint64_t v21 = 0;
      }
      sub_251BBE6F0(v21 | ((unint64_t)(v20 ^ 1u) << 32), v4, a3);
      goto LABEL_57;
    }
    if (swift_dynamicCast())
    {
      sub_251A0D51C((uint64_t)v41, (uint64_t)v36);
      int v22 = swift_dynamicCast();
      if (v22) {
        unint64_t v23 = v34;
      }
      else {
        unint64_t v23 = 0;
      }
      sub_251BBE840(v23, v22 ^ 1, v4, a3);
      goto LABEL_57;
    }
    if (swift_dynamicCast())
    {
      sub_251A0D51C((uint64_t)v41, (uint64_t)v36);
      int v24 = swift_dynamicCast();
      uint64_t v25 = v34;
      LOBYTE(v34) = v24 ^ 1;
      if (!v24) {
        uint64_t v25 = 0;
      }
      sub_251BBE984(v25 | ((unint64_t)(v24 ^ 1u) << 32), v4, a3);
      goto LABEL_57;
    }
    if (swift_dynamicCast())
    {
      sub_251A0D51C((uint64_t)v41, (uint64_t)v36);
      int v26 = swift_dynamicCast();
      if (v26) {
        uint64_t v27 = v34;
      }
      else {
        uint64_t v27 = 0;
      }
      sub_251BBEC2C(v27, v26 ^ 1, v4, a3);
      goto LABEL_57;
    }
    if (swift_dynamicCast())
    {
      sub_251A0D51C((uint64_t)v41, (uint64_t)v36);
      if (swift_dynamicCast()) {
        unsigned __int8 v28 = v34;
      }
      else {
        unsigned __int8 v28 = 2;
      }
      LOBYTE(v34) = v4;
      sub_251BBEECC(v28, (unsigned __int8 *)&v34, a3);
      goto LABEL_57;
    }
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      sub_251A0D578(v41, v36);
      if (swift_dynamicCast())
      {
        uint64_t v29 = v34;
        unint64_t v30 = v35;
        char v31 = 8;
      }
      else
      {
        uint64_t v29 = 0;
        unint64_t v30 = 0;
        char v31 = -1;
      }
      *(void *)a3 = v29;
      *(void *)(a3 + 8) = v30;
      *(unsigned char *)(a3 + 16) = v31;
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v39);
    }
    if (swift_dynamicCast())
    {
      sub_251A1AD94(v37, v38);
      sub_251A0D578(v41, v36);
      if (swift_dynamicCast())
      {
        unint64_t v32 = v35;
        if (v4 == 9)
        {
          *(void *)a3 = v34;
          *(void *)(a3 + 8) = v32;
          char v33 = 9;
          goto LABEL_71;
        }
        if (v4 == 10)
        {
          *(void *)a3 = v34;
          *(void *)(a3 + 8) = v32;
          char v33 = 10;
LABEL_71:
          *(unsigned char *)(a3 + 16) = v33;
          return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v39);
        }
        sub_251A1AD94(v34, v35);
      }
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v41);
    }
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    char v33 = -1;
    goto LABEL_71;
  }
  sub_251A0D51C((uint64_t)v41, (uint64_t)v36);
  int v5 = swift_dynamicCast();
  if (v5) {
    uint64_t v6 = v34;
  }
  else {
    uint64_t v6 = 0;
  }
  char v7 = v5 ^ 1;
LABEL_7:
  sub_251BBE2E0(v6, v7, v4, a3);
LABEL_57:
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v41);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v39);
}

uint64_t sub_251BBDE14@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  if ((result & 0x100) != 0)
  {
LABEL_4:
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    char v4 = -1;
LABEL_5:
    *(unsigned char *)(a3 + 16) = v4;
  }
  else
  {
    switch(a2)
    {
      case 1:
        *(void *)a3 = (char)result & ~((char)result >> 31);
        *(void *)(a3 + 8) = 0;
        char v4 = 1;
        goto LABEL_5;
      case 2:
        *(void *)a3 = (char)result & ~((char)result >> 31);
        *(void *)(a3 + 8) = 0;
        char v4 = 2;
        goto LABEL_5;
      case 3:
        *(void *)a3 = (char)result & ~((char)result >> 31);
        *(void *)(a3 + 8) = 0;
        char v4 = 3;
        goto LABEL_5;
      case 4:
        if ((result & 0x80) != 0)
        {
          sub_251F36670();
          __break(1u);
          JUMPOUT(0x251BBDF74);
        }
        *(void *)a3 = result;
        *(void *)(a3 + 8) = 0;
        char v4 = 4;
        goto LABEL_5;
      case 5:
      case 6:
        *(void *)a3 = (char)result;
        *(void *)(a3 + 8) = 0;
        char v4 = 5;
        goto LABEL_5;
      case 7:
        *(double *)a3 = (double)(char)result;
        *(void *)(a3 + 8) = 0;
        char v4 = 7;
        goto LABEL_5;
      case 8:
        uint64_t result = sub_251F36AB0();
        *(void *)a3 = result;
        *(void *)(a3 + 8) = v5;
        char v4 = 8;
        goto LABEL_5;
      case 9:
      case 10:
        goto LABEL_4;
      default:
        *(void *)a3 = result == 1;
        *(void *)(a3 + 8) = 0;
        *(unsigned char *)(a3 + 16) = 0;
        break;
    }
  }
  return result;
}

uint64_t sub_251BBDFA0@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  if ((result & 0x10000) != 0)
  {
LABEL_4:
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    char v4 = -1;
LABEL_5:
    *(unsigned char *)(a3 + 16) = v4;
  }
  else
  {
    switch(a2)
    {
      case 1:
        uint64_t v6 = result;
        if ((unsigned __int16)result >= 0x100u) {
          uint64_t v6 = 255;
        }
        if ((result & 0x8000) != 0) {
          uint64_t v6 = 0;
        }
        *(void *)a3 = v6;
        *(void *)(a3 + 8) = 0;
        char v4 = 1;
        goto LABEL_5;
      case 2:
        *(void *)a3 = (__int16)result & ~((__int16)result >> 31);
        *(void *)(a3 + 8) = 0;
        char v4 = 2;
        goto LABEL_5;
      case 3:
        uint64_t v5 = (__int16)result;
        if ((int)v5 < 0) {
          uint64_t v5 = 0;
        }
        *(void *)a3 = v5;
        *(void *)(a3 + 8) = 0;
        char v4 = 3;
        goto LABEL_5;
      case 4:
        if ((result & 0x8000) != 0)
        {
          sub_251F36670();
          __break(1u);
          JUMPOUT(0x251BBE114);
        }
        *(void *)a3 = (unsigned __int16)result;
        *(void *)(a3 + 8) = 0;
        char v4 = 4;
        goto LABEL_5;
      case 5:
      case 6:
        *(void *)a3 = (__int16)result;
        *(void *)(a3 + 8) = 0;
        char v4 = 5;
        goto LABEL_5;
      case 7:
        *(double *)a3 = (double)(__int16)result;
        *(void *)(a3 + 8) = 0;
        char v4 = 7;
        goto LABEL_5;
      case 8:
        uint64_t result = sub_251F36AB0();
        *(void *)a3 = result;
        *(void *)(a3 + 8) = v7;
        char v4 = 8;
        goto LABEL_5;
      case 9:
      case 10:
        goto LABEL_4;
      default:
        *(void *)a3 = (unsigned __int16)result == 1;
        *(void *)(a3 + 8) = 0;
        *(unsigned char *)(a3 + 16) = 0;
        break;
    }
  }
  return result;
}

uint64_t sub_251BBE140@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  if ((result & 0x100000000) != 0)
  {
LABEL_4:
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    char v4 = -1;
LABEL_5:
    *(unsigned char *)(a3 + 16) = v4;
  }
  else
  {
    switch(a2)
    {
      case 1:
        uint64_t v6 = result;
        if ((int)result > 255) {
          uint64_t v6 = 255;
        }
        if ((int)result < 0) {
          uint64_t v6 = 0;
        }
        *(void *)a3 = v6;
        *(void *)(a3 + 8) = 0;
        char v4 = 1;
        goto LABEL_5;
      case 2:
        uint64_t v5 = (unsigned __int16)result;
        if ((int)result >= 0x10000) {
          uint64_t v5 = 0xFFFFLL;
        }
        if ((int)result < 0) {
          uint64_t v5 = 0;
        }
        *(void *)a3 = v5;
        *(void *)(a3 + 8) = 0;
        char v4 = 2;
        goto LABEL_5;
      case 3:
        *(void *)a3 = result & ~((int)result >> 31);
        *(void *)(a3 + 8) = 0;
        char v4 = 3;
        goto LABEL_5;
      case 4:
        if ((result & 0x80000000) != 0)
        {
          sub_251F36670();
          __break(1u);
          JUMPOUT(0x251BBE2B4);
        }
        *(void *)a3 = result;
        *(void *)(a3 + 8) = 0;
        char v4 = 4;
        goto LABEL_5;
      case 5:
      case 6:
        *(void *)a3 = result;
        *(void *)(a3 + 8) = 0;
        char v4 = 5;
        goto LABEL_5;
      case 7:
        *(double *)a3 = (double)(int)result;
        *(void *)(a3 + 8) = 0;
        char v4 = 7;
        goto LABEL_5;
      case 8:
        uint64_t result = sub_251F36AB0();
        *(void *)a3 = result;
        *(void *)(a3 + 8) = v7;
        char v4 = 8;
        goto LABEL_5;
      case 9:
      case 10:
        goto LABEL_4;
      default:
        *(void *)a3 = result == 1;
        *(void *)(a3 + 8) = 0;
        *(unsigned char *)(a3 + 16) = 0;
        break;
    }
  }
  return result;
}

uint64_t sub_251BBE2E0@<X0>(uint64_t result@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>)
{
  if (a2)
  {
LABEL_8:
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    char v6 = -1;
LABEL_9:
    *(unsigned char *)(a4 + 16) = v6;
  }
  else
  {
    switch(a3)
    {
      case 1:
        uint64_t v9 = 255;
        if (result < 255) {
          uint64_t v9 = result;
        }
        *(void *)a4 = v9 & ~(v9 >> 63);
        *(void *)(a4 + 8) = 0;
        char v6 = 1;
        goto LABEL_9;
      case 2:
        uint64_t v7 = 0xFFFFLL;
        if (result < 0xFFFF) {
          uint64_t v7 = result;
        }
        *(void *)a4 = v7 & ~(v7 >> 63);
        *(void *)(a4 + 8) = 0;
        char v6 = 2;
        goto LABEL_9;
      case 3:
        uint64_t v8 = 0xFFFFFFFFLL;
        if (result < 0xFFFFFFFFLL) {
          uint64_t v8 = result;
        }
        *(void *)a4 = v8 & ~(v8 >> 63);
        *(void *)(a4 + 8) = 0;
        char v6 = 3;
        goto LABEL_9;
      case 4:
        if (result < 0)
        {
          sub_251F36670();
          __break(1u);
          JUMPOUT(0x251BBE458);
        }
        *(void *)a4 = result;
        *(void *)(a4 + 8) = 0;
        char v6 = 4;
        goto LABEL_9;
      case 5:
      case 6:
        int64_t v5 = 0x7FFFFFFFLL;
        if (result < 0x7FFFFFFF) {
          int64_t v5 = result;
        }
        if (v5 <= (uint64_t)0xFFFFFFFF80000000) {
          LODWORD(v5) = 0x80000000;
        }
        *(void *)a4 = v5;
        *(void *)(a4 + 8) = 0;
        char v6 = 5;
        goto LABEL_9;
      case 7:
        *(double *)a4 = (double)result;
        *(void *)(a4 + 8) = 0;
        char v6 = 7;
        goto LABEL_9;
      case 8:
        uint64_t result = sub_251F36AB0();
        *(void *)a4 = result;
        *(void *)(a4 + 8) = v10;
        char v6 = 8;
        goto LABEL_9;
      case 9:
      case 10:
        goto LABEL_8;
      default:
        *(void *)a4 = result == 1;
        *(void *)(a4 + 8) = 0;
        *(unsigned char *)(a4 + 16) = 0;
        break;
    }
  }
  return result;
}

uint64_t sub_251BBE484@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  if ((result & 0x100) != 0)
  {
LABEL_4:
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    char v4 = -1;
LABEL_5:
    *(unsigned char *)(a3 + 16) = v4;
  }
  else
  {
    switch(a2)
    {
      case 1:
        *(void *)a3 = result;
        *(void *)(a3 + 8) = 0;
        char v4 = 1;
        goto LABEL_5;
      case 2:
        *(void *)a3 = result;
        *(void *)(a3 + 8) = 0;
        char v4 = 2;
        goto LABEL_5;
      case 3:
        *(void *)a3 = result;
        *(void *)(a3 + 8) = 0;
        char v4 = 3;
        goto LABEL_5;
      case 4:
        *(void *)a3 = result;
        *(void *)(a3 + 8) = 0;
        char v4 = 4;
        goto LABEL_5;
      case 5:
      case 6:
        *(void *)a3 = result;
        *(void *)(a3 + 8) = 0;
        char v4 = 5;
        goto LABEL_5;
      case 7:
        *(double *)a3 = (double)result;
        *(void *)(a3 + 8) = 0;
        char v4 = 7;
        goto LABEL_5;
      case 8:
        uint64_t result = sub_251F36AB0();
        *(void *)a3 = result;
        *(void *)(a3 + 8) = v5;
        char v4 = 8;
        goto LABEL_5;
      case 9:
      case 10:
        goto LABEL_4;
      default:
        *(void *)a3 = result == 1;
        *(void *)(a3 + 8) = 0;
        *(unsigned char *)(a3 + 16) = 0;
        break;
    }
  }
  return result;
}

uint64_t sub_251BBE5B4@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  if ((result & 0x10000) != 0)
  {
LABEL_4:
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    char v4 = -1;
LABEL_5:
    *(unsigned char *)(a3 + 16) = v4;
  }
  else
  {
    switch(a2)
    {
      case 1:
        uint64_t v5 = result;
        if ((result & 0xFF00) != 0) {
          uint64_t v5 = 255;
        }
        *(void *)a3 = v5;
        *(void *)(a3 + 8) = 0;
        char v4 = 1;
        goto LABEL_5;
      case 2:
        *(void *)a3 = (unsigned __int16)result;
        *(void *)(a3 + 8) = 0;
        char v4 = 2;
        goto LABEL_5;
      case 3:
        *(void *)a3 = (unsigned __int16)result;
        *(void *)(a3 + 8) = 0;
        char v4 = 3;
        goto LABEL_5;
      case 4:
        *(void *)a3 = (unsigned __int16)result;
        *(void *)(a3 + 8) = 0;
        char v4 = 4;
        goto LABEL_5;
      case 5:
      case 6:
        *(void *)a3 = (unsigned __int16)result;
        *(void *)(a3 + 8) = 0;
        char v4 = 5;
        goto LABEL_5;
      case 7:
        *(double *)a3 = (double)(unsigned __int16)result;
        *(void *)(a3 + 8) = 0;
        char v4 = 7;
        goto LABEL_5;
      case 8:
        uint64_t result = sub_251F36AB0();
        *(void *)a3 = result;
        *(void *)(a3 + 8) = v6;
        char v4 = 8;
        goto LABEL_5;
      case 9:
      case 10:
        goto LABEL_4;
      default:
        *(void *)a3 = (unsigned __int16)result == 1;
        *(void *)(a3 + 8) = 0;
        *(unsigned char *)(a3 + 16) = 0;
        break;
    }
  }
  return result;
}

uint64_t sub_251BBE6F0@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  if ((result & 0x100000000) != 0)
  {
LABEL_7:
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    char v5 = -1;
LABEL_8:
    *(unsigned char *)(a3 + 16) = v5;
  }
  else
  {
    switch(a2)
    {
      case 1:
        uint64_t v6 = result;
        if (result > 0xFF) {
          uint64_t v6 = 255;
        }
        *(void *)a3 = v6;
        *(void *)(a3 + 8) = 0;
        char v5 = 1;
        goto LABEL_8;
      case 2:
        uint64_t v7 = (unsigned __int16)result;
        if (WORD1(result)) {
          uint64_t v7 = 0xFFFFLL;
        }
        *(void *)a3 = v7;
        *(void *)(a3 + 8) = 0;
        char v5 = 2;
        goto LABEL_8;
      case 3:
        *(void *)a3 = result;
        *(void *)(a3 + 8) = 0;
        char v5 = 3;
        goto LABEL_8;
      case 4:
        *(void *)a3 = result;
        *(void *)(a3 + 8) = 0;
        char v5 = 4;
        goto LABEL_8;
      case 5:
      case 6:
        if (result >= 0x7FFFFFFF) {
          uint64_t v4 = 0x7FFFFFFFLL;
        }
        else {
          uint64_t v4 = result;
        }
        *(void *)a3 = v4;
        *(void *)(a3 + 8) = 0;
        char v5 = 5;
        goto LABEL_8;
      case 7:
        *(double *)a3 = (double)result;
        *(void *)(a3 + 8) = 0;
        char v5 = 7;
        goto LABEL_8;
      case 8:
        uint64_t result = sub_251F36AB0();
        *(void *)a3 = result;
        *(void *)(a3 + 8) = v8;
        char v5 = 8;
        goto LABEL_8;
      case 9:
      case 10:
        goto LABEL_7;
      default:
        *(void *)a3 = result == 1;
        *(void *)(a3 + 8) = 0;
        *(unsigned char *)(a3 + 16) = 0;
        break;
    }
  }
  return result;
}

unint64_t sub_251BBE840@<X0>(unint64_t result@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>)
{
  if (a2)
  {
LABEL_6:
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    char v6 = -1;
LABEL_7:
    *(unsigned char *)(a4 + 16) = v6;
  }
  else
  {
    switch(a3)
    {
      case 1:
        uint64_t v7 = 255;
        if (result < 0xFF) {
          uint64_t v7 = result;
        }
        *(void *)a4 = v7;
        *(void *)(a4 + 8) = 0;
        char v6 = 1;
        goto LABEL_7;
      case 2:
        uint64_t v8 = 0xFFFFLL;
        if (result < 0xFFFF) {
          uint64_t v8 = result;
        }
        *(void *)a4 = v8;
        *(void *)(a4 + 8) = 0;
        char v6 = 2;
        goto LABEL_7;
      case 3:
        uint64_t v9 = 0xFFFFFFFFLL;
        if (result < 0xFFFFFFFF) {
          uint64_t v9 = result;
        }
        *(void *)a4 = v9;
        *(void *)(a4 + 8) = 0;
        char v6 = 3;
        goto LABEL_7;
      case 4:
        *(void *)a4 = result;
        *(void *)(a4 + 8) = 0;
        char v6 = 4;
        goto LABEL_7;
      case 5:
      case 6:
        uint64_t v5 = 0x7FFFFFFFLL;
        if (result < 0x7FFFFFFF) {
          uint64_t v5 = result;
        }
        *(void *)a4 = v5;
        *(void *)(a4 + 8) = 0;
        char v6 = 5;
        goto LABEL_7;
      case 7:
        *(double *)a4 = (double)result;
        *(void *)(a4 + 8) = 0;
        char v6 = 7;
        goto LABEL_7;
      case 8:
        uint64_t result = sub_251F36AB0();
        *(void *)a4 = result;
        *(void *)(a4 + 8) = v10;
        char v6 = 8;
        goto LABEL_7;
      case 9:
      case 10:
        goto LABEL_6;
      default:
        *(void *)a4 = result == 1;
        *(void *)(a4 + 8) = 0;
        *(unsigned char *)(a4 + 16) = 0;
        break;
    }
  }
  return result;
}

uint64_t sub_251BBE984@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  if ((result & 0x100000000) != 0)
  {
LABEL_9:
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    char v5 = -1;
LABEL_10:
    *(unsigned char *)(a3 + 16) = v5;
  }
  else
  {
    switch(a2)
    {
      case 1:
        uint64_t result = sub_251BC2FB8((uint64_t)&v9, *(float *)&result);
        if (v10) {
          goto LABEL_29;
        }
        uint64_t v8 = v9;
        if (v9 >= 255) {
          uint64_t v8 = 255;
        }
        *(void *)a3 = v8 & ~(v8 >> 63);
        *(void *)(a3 + 8) = 0;
        char v5 = 1;
        goto LABEL_10;
      case 2:
        uint64_t result = sub_251BC2FB8((uint64_t)&v9, *(float *)&result);
        if (v10) {
          goto LABEL_29;
        }
        uint64_t v6 = v9;
        if (v9 >= 0xFFFF) {
          uint64_t v6 = 0xFFFFLL;
        }
        *(void *)a3 = v6 & ~(v6 >> 63);
        *(void *)(a3 + 8) = 0;
        char v5 = 2;
        goto LABEL_10;
      case 3:
        uint64_t result = sub_251BC2FB8((uint64_t)&v9, *(float *)&result);
        if (v10) {
          goto LABEL_29;
        }
        uint64_t v7 = v9;
        if (v9 >= 0xFFFFFFFFLL) {
          uint64_t v7 = 0xFFFFFFFFLL;
        }
        *(void *)a3 = v7 & ~(v7 >> 63);
        *(void *)(a3 + 8) = 0;
        char v5 = 3;
        goto LABEL_10;
      case 4:
        uint64_t result = sub_251BC2FB8((uint64_t)&v9, *(float *)&result);
        if (v10) {
          goto LABEL_29;
        }
        *(void *)a3 = v9 & ~(v9 >> 63);
        *(void *)(a3 + 8) = 0;
        char v5 = 4;
        goto LABEL_10;
      case 5:
      case 6:
        uint64_t result = sub_251BC2FB8((uint64_t)&v9, *(float *)&result);
        if (v10)
        {
LABEL_29:
          uint64_t v9 = 0;
          unint64_t v10 = 0xE000000000000000;
          sub_251F36400();
          sub_251F35800();
          sub_251F35800();
          sub_251F35800();
          sub_251F35800();
          sub_251F36680();
          __break(1u);
          JUMPOUT(0x251BBEC00);
        }
        int64_t v4 = v9;
        if (v9 >= 0x7FFFFFFF) {
          int64_t v4 = 0x7FFFFFFFLL;
        }
        if (v4 <= (uint64_t)0xFFFFFFFF80000000) {
          LODWORD(v4) = 0x80000000;
        }
        *(void *)a3 = v4;
        *(void *)(a3 + 8) = 0;
        char v5 = 6;
        goto LABEL_10;
      case 7:
        *(double *)a3 = *(float *)&result;
        *(void *)(a3 + 8) = 0;
        char v5 = 7;
        goto LABEL_10;
      case 8:
        uint64_t result = sub_251F36640();
        *(void *)a3 = 0;
        *(void *)(a3 + 8) = 0xE000000000000000;
        char v5 = 8;
        goto LABEL_10;
      case 9:
      case 10:
        goto LABEL_9;
      default:
        *(void *)a3 = *(float *)&result != 0.0;
        *(void *)(a3 + 8) = 0;
        *(unsigned char *)(a3 + 16) = 0;
        break;
    }
  }
  return result;
}

uint64_t sub_251BBEC2C@<X0>(uint64_t result@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>)
{
  if (a2)
  {
LABEL_9:
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    char v6 = -1;
LABEL_10:
    *(unsigned char *)(a4 + 16) = v6;
  }
  else
  {
    switch(a3)
    {
      case 1:
        uint64_t result = sub_251BC2E30((uint64_t)&v10, *(double *)&result);
        if (v11) {
          goto LABEL_29;
        }
        uint64_t v9 = v10;
        if (v10 >= 255) {
          uint64_t v9 = 255;
        }
        *(void *)a4 = v9 & ~(v9 >> 63);
        *(void *)(a4 + 8) = 0;
        char v6 = 1;
        goto LABEL_10;
      case 2:
        uint64_t result = sub_251BC2E30((uint64_t)&v10, *(double *)&result);
        if (v11) {
          goto LABEL_29;
        }
        uint64_t v7 = v10;
        if (v10 >= 0xFFFF) {
          uint64_t v7 = 0xFFFFLL;
        }
        *(void *)a4 = v7 & ~(v7 >> 63);
        *(void *)(a4 + 8) = 0;
        char v6 = 2;
        goto LABEL_10;
      case 3:
        uint64_t result = sub_251BC2E30((uint64_t)&v10, *(double *)&result);
        if (v11) {
          goto LABEL_29;
        }
        uint64_t v8 = v10;
        if (v10 >= 0xFFFFFFFFLL) {
          uint64_t v8 = 0xFFFFFFFFLL;
        }
        *(void *)a4 = v8 & ~(v8 >> 63);
        *(void *)(a4 + 8) = 0;
        char v6 = 3;
        goto LABEL_10;
      case 4:
        uint64_t result = sub_251BC2E30((uint64_t)&v10, *(double *)&result);
        if (v11) {
          goto LABEL_29;
        }
        *(void *)a4 = v10 & ~(v10 >> 63);
        *(void *)(a4 + 8) = 0;
        char v6 = 4;
        goto LABEL_10;
      case 5:
      case 6:
        uint64_t result = sub_251BC2E30((uint64_t)&v10, *(double *)&result);
        if (v11)
        {
LABEL_29:
          uint64_t v10 = 0;
          unint64_t v11 = 0xE000000000000000;
          sub_251F36400();
          sub_251F35800();
          sub_251F35800();
          sub_251F35800();
          sub_251F35800();
          sub_251F36680();
          __break(1u);
          JUMPOUT(0x251BBEEA0);
        }
        int64_t v5 = v10;
        if (v10 >= 0x7FFFFFFF) {
          int64_t v5 = 0x7FFFFFFFLL;
        }
        if (v5 <= (uint64_t)0xFFFFFFFF80000000) {
          LODWORD(v5) = 0x80000000;
        }
        *(void *)a4 = v5;
        *(void *)(a4 + 8) = 0;
        char v6 = 6;
        goto LABEL_10;
      case 7:
        *(double *)a4 = *(double *)&result;
        *(void *)(a4 + 8) = 0;
        char v6 = 7;
        goto LABEL_10;
      case 8:
        *(double *)&uint64_t result = COERCE_DOUBLE(sub_251F36640());
        *(void *)a4 = 0;
        *(void *)(a4 + 8) = 0xE000000000000000;
        char v6 = 8;
        goto LABEL_10;
      case 9:
      case 10:
        goto LABEL_9;
      default:
        *(void *)a4 = *(double *)&result != 0.0;
        *(void *)(a4 + 8) = 0;
        *(unsigned char *)(a4 + 16) = 0;
        break;
    }
  }
  return result;
}

void sub_251BBEECC(unsigned __int8 a1@<W0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a2;
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  int v6 = a1;
  uint64_t v7 = sub_251F350A0();
  __swift_project_value_buffer(v7, (uint64_t)qword_26B21F290);
  uint64_t v8 = sub_251F35080();
  os_log_type_t v9 = sub_251F35FD0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = v22;
    *(_DWORD *)uint64_t v10 = 136315650;
    sub_251A00E84(0xD000000000000020, 0x8000000251F6B820, &v23);
    sub_251F361D0();
    *(_WORD *)(v10 + 12) = 2080;
    uint64_t v11 = 1702195828;
    if ((v6 & 1) == 0) {
      uint64_t v11 = 0x65736C6166;
    }
    unint64_t v12 = 0xE400000000000000;
    unint64_t v13 = 0xE500000000000000;
    if (v6) {
      unint64_t v13 = 0xE400000000000000;
    }
    if (v6 == 2) {
      uint64_t v14 = 1280070990;
    }
    else {
      uint64_t v14 = v11;
    }
    if (v6 == 2) {
      unint64_t v15 = 0xE400000000000000;
    }
    else {
      unint64_t v15 = v13;
    }
    sub_251A00E84(v14, v15, &v23);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 22) = 2080;
    uint64_t v16 = 1819242338;
    switch(v5)
    {
      case 1:
        unint64_t v12 = 0xE500000000000000;
        uint64_t v16 = 0x38746E6975;
        break;
      case 2:
        unint64_t v12 = 0xE600000000000000;
        uint64_t v16 = 0x3631746E6975;
        break;
      case 3:
        unint64_t v12 = 0xE600000000000000;
        uint64_t v16 = 0x3233746E6975;
        break;
      case 4:
        unint64_t v12 = 0xE600000000000000;
        uint64_t v16 = 0x3436746E6975;
        break;
      case 5:
        unint64_t v12 = 0xE300000000000000;
        uint64_t v16 = 7630441;
        break;
      case 6:
        unint64_t v12 = 0xE500000000000000;
        uint64_t v16 = 0x3233746E69;
        break;
      case 7:
        unint64_t v12 = 0xE500000000000000;
        uint64_t v16 = 0x74616F6C66;
        break;
      case 8:
        unint64_t v12 = 0xE600000000000000;
        uint64_t v16 = 0x676E69727473;
        break;
      case 9:
        uint64_t v16 = 947285108;
        break;
      case 10:
        uint64_t v16 = 1635017060;
        break;
      default:
        break;
    }
    sub_251A00E84(v16, v12, &v23);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v8, v9, "%s Returning BOOLTypedValue for BOOLValue = %s with valueFormat: %s", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v22, -1, -1);
    MEMORY[0x2533AC760](v10, -1, -1);
  }

  if (v6 == 2)
  {
LABEL_27:
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    char v17 = -1;
LABEL_28:
    *(unsigned char *)(a3 + 16) = v17;
  }
  else
  {
    uint64_t v18 = v6 & 1;
    switch(v5)
    {
      case 1:
        *(void *)a3 = v18;
        *(void *)(a3 + 8) = 0;
        char v17 = 1;
        goto LABEL_28;
      case 2:
        *(void *)a3 = v18;
        *(void *)(a3 + 8) = 0;
        char v17 = 2;
        goto LABEL_28;
      case 3:
        *(void *)a3 = v18;
        *(void *)(a3 + 8) = 0;
        char v17 = 3;
        goto LABEL_28;
      case 4:
        *(void *)a3 = v18;
        *(void *)(a3 + 8) = 0;
        char v17 = 4;
        goto LABEL_28;
      case 5:
      case 6:
        *(void *)a3 = v18;
        *(void *)(a3 + 8) = 0;
        char v17 = 5;
        goto LABEL_28;
      case 7:
        BOOL v19 = v18 == 0;
        uint64_t v20 = 0x3FF0000000000000;
        if (v19) {
          uint64_t v20 = 0;
        }
        *(void *)a3 = v20;
        *(void *)(a3 + 8) = 0;
        char v17 = 7;
        goto LABEL_28;
      case 8:
        uint64_t v23 = 0;
        unint64_t v24 = 0xE000000000000000;
        sub_251F35800();
        swift_bridgeObjectRelease();
        unint64_t v21 = v24;
        *(void *)a3 = v23;
        *(void *)(a3 + 8) = v21;
        char v17 = 8;
        goto LABEL_28;
      case 9:
      case 10:
        goto LABEL_27;
      default:
        *(void *)a3 = v18;
        *(void *)(a3 + 8) = 0;
        *(unsigned char *)(a3 + 16) = 0;
        break;
    }
  }
}

uint64_t CharacteristicKind.Value.description.getter()
{
  uint64_t v1 = *(void *)v0;
  unint64_t v2 = *(void *)(v0 + 8);
  uint64_t result = 0x6C6C756E2ELL;
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
      uint64_t v8 = 0x2838746E69752ELL;
      goto LABEL_10;
    case 2:
      uint64_t v8 = 0x283631746E69752ELL;
      goto LABEL_10;
    case 3:
      uint64_t v8 = 0x283233746E69752ELL;
      goto LABEL_10;
    case 4:
      uint64_t v8 = 0x283436746E69752ELL;
      goto LABEL_10;
    case 5:
      uint64_t v4 = 0x28746E692ELL;
      goto LABEL_9;
    case 6:
      uint64_t v4 = 0x283233746E692ELL;
LABEL_9:
      uint64_t v8 = v4;
LABEL_10:
      sub_251F36AB0();
      goto LABEL_11;
    case 7:
      uint64_t v8 = 0;
      sub_251F35800();
      sub_251F35DF0();
      goto LABEL_12;
    case 8:
      uint64_t v8 = 0x28676E697274732ELL;
      sub_251F35800();
      goto LABEL_12;
    case 9:
      uint64_t v8 = 0x2838766C742ELL;
      sub_251B2ED7C(v1, v2, 9);
      sub_251F34BA0();
      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
      uint64_t v5 = v1;
      unint64_t v6 = v2;
      char v7 = 9;
      goto LABEL_18;
    case 0xA:
      uint64_t v8 = 0x28617461642ELL;
      sub_251B2ED7C(v1, v2, 10);
      sub_251F34BA0();
      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
      uint64_t v5 = v1;
      unint64_t v6 = v2;
      char v7 = 10;
LABEL_18:
      sub_251A580B4(v5, v6, v7);
      return v8;
    case 0xB:
      return result;
    default:
      uint64_t v8 = 0x286C6F6F622ELL;
LABEL_11:
      sub_251F35800();
      swift_bridgeObjectRelease();
LABEL_12:
      sub_251F35800();
      return v8;
  }
}

uint64_t CharacteristicKind.Value.hash(into:)()
{
  uint64_t v1 = *(void *)v0;
  unint64_t v2 = *(void *)(v0 + 8);
  switch(*(unsigned char *)(v0 + 16))
  {
    case 2:
      sub_251F36CB0();
      uint64_t result = sub_251F36CD0();
      break;
    case 3:
    case 5:
    case 6:
      sub_251F36CB0();
      uint64_t result = sub_251F36CE0();
      break;
    case 4:
    case 7:
      sub_251F36CB0();
      uint64_t result = sub_251F36CF0();
      break;
    case 8:
      sub_251F36CB0();
      uint64_t result = sub_251F357B0();
      break;
    case 9:
      sub_251F36CB0();
      sub_251A1A894(v1, v2);
      sub_251F34C30();
      uint64_t v4 = v1;
      unint64_t v5 = v2;
      char v6 = 9;
      goto LABEL_11;
    case 0xA:
      sub_251F36CB0();
      sub_251A1A894(v1, v2);
      sub_251F34C30();
      uint64_t v4 = v1;
      unint64_t v5 = v2;
      char v6 = 10;
LABEL_11:
      uint64_t result = sub_251A580B4(v4, v5, v6);
      break;
    case 0xB:
      uint64_t result = sub_251F36CB0();
      break;
    default:
      sub_251F36CB0();
      uint64_t result = sub_251F36CC0();
      break;
  }
  return result;
}

uint64_t sub_251BBF858(char a1)
{
  uint64_t result = 1819047278;
  switch(a1)
  {
    case 1:
      uint64_t result = 1819242338;
      break;
    case 2:
      uint64_t result = 0x38746E6975;
      break;
    case 3:
      uint64_t result = 0x3631746E6975;
      break;
    case 4:
      uint64_t result = 0x3233746E6975;
      break;
    case 5:
      uint64_t result = 0x3436746E6975;
      break;
    case 6:
      uint64_t result = 7630441;
      break;
    case 7:
      uint64_t result = 0x3233746E69;
      break;
    case 8:
      uint64_t result = 0x656C62756F64;
      break;
    case 9:
      uint64_t result = 0x676E69727473;
      break;
    case 10:
      uint64_t result = 947285108;
      break;
    case 11:
      uint64_t result = 1635017060;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251BBF97C(uint64_t a1)
{
  unint64_t v2 = sub_251BC39EC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251BBF9B8(uint64_t a1)
{
  unint64_t v2 = sub_251BC39EC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251BBF9F4()
{
  return sub_251BBF858(*v0);
}

uint64_t sub_251BBF9FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251BC541C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251BBFA24(uint64_t a1)
{
  unint64_t v2 = sub_251BC3608();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251BBFA60(uint64_t a1)
{
  unint64_t v2 = sub_251BC3608();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251BBFA9C(uint64_t a1)
{
  unint64_t v2 = sub_251BC365C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251BBFAD8(uint64_t a1)
{
  unint64_t v2 = sub_251BC365C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251BBFB14(uint64_t a1)
{
  unint64_t v2 = sub_251BC37A0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251BBFB50(uint64_t a1)
{
  unint64_t v2 = sub_251BC37A0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251BBFB8C(uint64_t a1)
{
  unint64_t v2 = sub_251BC37F4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251BBFBC8(uint64_t a1)
{
  unint64_t v2 = sub_251BC37F4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251BBFC04(uint64_t a1)
{
  unint64_t v2 = sub_251BC3848();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251BBFC40(uint64_t a1)
{
  unint64_t v2 = sub_251BC3848();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251BBFC7C(uint64_t a1)
{
  unint64_t v2 = sub_251BC3A40();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251BBFCB8(uint64_t a1)
{
  unint64_t v2 = sub_251BC3A40();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251BBFCF4(uint64_t a1)
{
  unint64_t v2 = sub_251BC374C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251BBFD30(uint64_t a1)
{
  unint64_t v2 = sub_251BC374C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251BBFD6C(uint64_t a1)
{
  unint64_t v2 = sub_251BC36F8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251BBFDA8(uint64_t a1)
{
  unint64_t v2 = sub_251BC36F8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251BBFDE4(uint64_t a1)
{
  unint64_t v2 = sub_251BC3944();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251BBFE20(uint64_t a1)
{
  unint64_t v2 = sub_251BC3944();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251BBFE5C(uint64_t a1)
{
  unint64_t v2 = sub_251BC38F0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251BBFE98(uint64_t a1)
{
  unint64_t v2 = sub_251BC38F0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251BBFED4(uint64_t a1)
{
  unint64_t v2 = sub_251BC389C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251BBFF10(uint64_t a1)
{
  unint64_t v2 = sub_251BC389C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251BBFF4C(uint64_t a1)
{
  unint64_t v2 = sub_251BC3998();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251BBFF88(uint64_t a1)
{
  unint64_t v2 = sub_251BC3998();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CharacteristicKind.Value.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F5D0);
  uint64_t v79 = *(void *)(v3 - 8);
  uint64_t v80 = v3;
  MEMORY[0x270FA5388](v3);
  v78 = (char *)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F5D8);
  uint64_t v76 = *(void *)(v5 - 8);
  uint64_t v77 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v75 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F5E0);
  v48[1] = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  v73 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F5E8);
  uint64_t v71 = *(void *)(v8 - 8);
  uint64_t v72 = v8;
  MEMORY[0x270FA5388](v8);
  BOOL v70 = (char *)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F5F0);
  uint64_t v68 = *(void *)(v10 - 8);
  uint64_t v69 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v67 = (char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F5F8);
  uint64_t v65 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  uint64_t v64 = (char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F600);
  uint64_t v62 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  int v61 = (char *)v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F608);
  uint64_t v59 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v58 = (char *)v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F610);
  uint64_t v56 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v55 = (char *)v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F618);
  uint64_t v53 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v52 = (char *)v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F620);
  uint64_t v50 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v18 = (char *)v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F628);
  uint64_t v49 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  unint64_t v21 = (char *)v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F630);
  uint64_t v82 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  uint64_t v23 = (char *)v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v24 = *(void *)(v1 + 8);
  uint64_t v81 = *(void *)v1;
  uint64_t v25 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251BC3608();
  uint64_t v83 = v23;
  sub_251F36DA0();
  switch(v25)
  {
    case 1:
      LOBYTE(v86) = 2;
      sub_251BC3998();
      unint64_t v30 = v52;
      unint64_t v32 = v83;
      uint64_t v31 = v84;
      sub_251F36900();
      uint64_t v33 = v54;
      sub_251F36A40();
      unint64_t v34 = &v85;
      goto LABEL_11;
    case 2:
      LOBYTE(v86) = 3;
      sub_251BC3944();
      unint64_t v30 = v55;
      unint64_t v32 = v83;
      uint64_t v31 = v84;
      sub_251F36900();
      uint64_t v33 = v57;
      sub_251F36A50();
      unint64_t v34 = (uint64_t *)&v88;
      goto LABEL_11;
    case 3:
      LOBYTE(v86) = 4;
      sub_251BC38F0();
      unint64_t v30 = v58;
      unint64_t v32 = v83;
      uint64_t v31 = v84;
      sub_251F36900();
      uint64_t v33 = v60;
      sub_251F36A60();
      unint64_t v34 = &v89;
      goto LABEL_11;
    case 4:
      LOBYTE(v86) = 5;
      sub_251BC389C();
      unint64_t v30 = v61;
      unint64_t v32 = v83;
      uint64_t v31 = v84;
      sub_251F36900();
      uint64_t v33 = v63;
      sub_251F36A70();
      unint64_t v34 = &v90;
      goto LABEL_11;
    case 5:
      LOBYTE(v86) = 6;
      sub_251BC3848();
      unint64_t v30 = v64;
      unint64_t v32 = v83;
      uint64_t v31 = v84;
      sub_251F36900();
      uint64_t v33 = v66;
      sub_251F36A30();
      unint64_t v34 = &v91;
      goto LABEL_11;
    case 6:
      LOBYTE(v86) = 7;
      sub_251BC37F4();
      unint64_t v30 = v67;
      unint64_t v32 = v83;
      uint64_t v31 = v84;
      sub_251F36900();
      uint64_t v33 = v69;
      sub_251F36A30();
      uint64_t v35 = v68;
      goto LABEL_12;
    case 7:
      LOBYTE(v86) = 8;
      sub_251BC37A0();
      unint64_t v30 = v70;
      unint64_t v32 = v83;
      uint64_t v31 = v84;
      sub_251F36900();
      uint64_t v33 = v72;
      sub_251F369F0();
      uint64_t v35 = v71;
      goto LABEL_12;
    case 8:
      LOBYTE(v86) = 9;
      sub_251BC374C();
      unint64_t v30 = v73;
      unint64_t v32 = v83;
      uint64_t v31 = v84;
      sub_251F36900();
      uint64_t v33 = v74;
      sub_251F369D0();
      unint64_t v34 = &v80;
LABEL_11:
      uint64_t v35 = *(v34 - 32);
LABEL_12:
      (*(void (**)(char *, uint64_t))(v35 + 8))(v30, v33);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v32, v31);
      break;
    case 9:
      LOBYTE(v86) = 10;
      uint64_t v36 = v81;
      sub_251A1A894(v81, v24);
      sub_251BC36F8();
      uint64_t v37 = v75;
      long long v39 = v83;
      uint64_t v38 = v84;
      sub_251F36900();
      uint64_t v86 = v36;
      unint64_t v87 = v24;
      sub_251BC36B0();
      uint64_t v40 = v77;
      sub_251F36A20();
      (*(void (**)(char *, uint64_t))(v76 + 8))(v37, v40);
      (*(void (**)(char *, uint64_t))(v82 + 8))(v39, v38);
      uint64_t result = sub_251A580B4(v36, v24, 9);
      break;
    case 10:
      LOBYTE(v86) = 11;
      uint64_t v41 = v81;
      sub_251A1A894(v81, v24);
      sub_251BC365C();
      unint64_t v42 = v78;
      uint64_t v44 = v83;
      uint64_t v43 = v84;
      sub_251F36900();
      uint64_t v86 = v41;
      unint64_t v87 = v24;
      sub_251BC36B0();
      uint64_t v45 = v80;
      sub_251F36A20();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v42, v45);
      (*(void (**)(char *, uint64_t))(v82 + 8))(v44, v43);
      uint64_t result = sub_251A580B4(v41, v24, 10);
      break;
    case 11:
      LOBYTE(v86) = 0;
      sub_251BC3A40();
      int64_t v46 = v83;
      uint64_t v47 = v84;
      sub_251F36900();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v21, v19);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v46, v47);
      break;
    default:
      LOBYTE(v86) = 1;
      sub_251BC39EC();
      uint64_t v27 = v83;
      uint64_t v26 = v84;
      sub_251F36900();
      uint64_t v28 = v51;
      sub_251F369E0();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v18, v28);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v27, v26);
      break;
  }
  return result;
}

uint64_t CharacteristicKind.Value.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t CharacteristicKind.Value.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v125 = a2;
  uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F6A8);
  uint64_t v113 = *(void *)(v124 - 8);
  MEMORY[0x270FA5388](v124);
  v119 = (char *)&v87 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F6B0);
  uint64_t v111 = *(void *)(v4 - 8);
  uint64_t v112 = v4;
  MEMORY[0x270FA5388](v4);
  unint64_t v123 = (char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F6B8);
  uint64_t v109 = *(void *)(v6 - 8);
  uint64_t v110 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v118 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F6C0);
  uint64_t v107 = *(void *)(v108 - 8);
  MEMORY[0x270FA5388](v108);
  uint64_t v117 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F6C8);
  uint64_t v105 = *(void *)(v106 - 8);
  MEMORY[0x270FA5388](v106);
  uint64_t v116 = (char *)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F6D0);
  uint64_t v104 = *(void *)(v103 - 8);
  MEMORY[0x270FA5388](v103);
  uint64_t v122 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F6D8);
  uint64_t v102 = *(void *)(v101 - 8);
  MEMORY[0x270FA5388](v101);
  uint64_t v121 = (char *)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F6E0);
  uint64_t v99 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100);
  uint64_t v120 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F6E8);
  uint64_t v97 = *(void *)(v98 - 8);
  MEMORY[0x270FA5388](v98);
  uint64_t v115 = (char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F6F0);
  uint64_t v95 = *(void *)(v96 - 8);
  MEMORY[0x270FA5388](v96);
  uint64_t v114 = (char *)&v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F6F8);
  uint64_t v93 = *(void *)(v94 - 8);
  MEMORY[0x270FA5388](v94);
  uint64_t v16 = (char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F700);
  uint64_t v92 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v87 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F708);
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v87 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a1[3];
  uint64_t v126 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v24);
  sub_251BC3608();
  uint64_t v25 = v127;
  sub_251F36D90();
  if (v25)
  {
LABEL_28:
    uint64_t v66 = (uint64_t)v126;
    return __swift_destroy_boxed_opaque_existential_0(v66);
  }
  uint64_t v89 = v19;
  uint64_t v88 = v17;
  uint64_t v90 = v16;
  uint64_t v27 = v120;
  uint64_t v26 = v121;
  uint64_t v28 = v122;
  uint64_t v29 = v123;
  uint64_t v91 = 0;
  uint64_t v127 = v21;
  uint64_t v31 = v124;
  uint64_t v30 = v125;
  uint64_t v32 = sub_251F368E0();
  if (*(void *)(v32 + 16) != 1)
  {
    uint64_t v36 = sub_251F36490();
    swift_allocError();
    uint64_t v38 = v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
    *uint64_t v38 = &type metadata for CharacteristicKind.Value;
    sub_251F36780();
    sub_251F36480();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v36 - 8) + 104))(v38, *MEMORY[0x263F8DCB0], v36);
    swift_willThrow();
LABEL_27:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v127 + 8))(v23, v20);
    goto LABEL_28;
  }
  switch(*(unsigned char *)(v32 + 32))
  {
    case 1:
      LOBYTE(v128) = 1;
      sub_251BC39EC();
      long long v39 = v90;
      uint64_t v40 = v91;
      sub_251F36770();
      if (v40) {
        goto LABEL_27;
      }
      uint64_t v70 = v94;
      uint64_t v71 = v23;
      char v72 = sub_251F36840();
      (*(void (**)(char *, uint64_t))(v93 + 8))(v39, v70);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v127 + 8))(v71, v20);
      uint64_t v66 = (uint64_t)v126;
      uint64_t v77 = 0;
      char v79 = 0;
      uint64_t v78 = v72 & 1;
      uint64_t v33 = v30;
      goto LABEL_38;
    case 2:
      uint64_t v41 = v30;
      LOBYTE(v128) = 2;
      sub_251BC3998();
      unint64_t v42 = v114;
      uint64_t v43 = v91;
      sub_251F36770();
      if (v43) {
        goto LABEL_27;
      }
      uint64_t v44 = v96;
      unsigned __int8 v76 = sub_251F368A0();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v42, v44);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v127 + 8))(v23, v20);
      uint64_t v77 = 0;
      uint64_t v78 = v76;
      char v79 = 1;
      goto LABEL_36;
    case 3:
      uint64_t v41 = v30;
      LOBYTE(v128) = 3;
      sub_251BC3944();
      uint64_t v45 = v115;
      uint64_t v46 = v91;
      sub_251F36770();
      if (v46) {
        goto LABEL_27;
      }
      uint64_t v47 = v98;
      unsigned __int16 v80 = sub_251F368B0();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v45, v47);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v127 + 8))(v23, v20);
      uint64_t v77 = 0;
      uint64_t v78 = v80;
      char v79 = 2;
      goto LABEL_36;
    case 4:
      uint64_t v41 = v30;
      LOBYTE(v128) = 4;
      sub_251BC38F0();
      uint64_t v48 = v91;
      sub_251F36770();
      if (v48) {
        goto LABEL_27;
      }
      uint64_t v49 = v100;
      unsigned int v81 = sub_251F368C0();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v27, v49);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v127 + 8))(v23, v20);
      uint64_t v77 = 0;
      uint64_t v78 = v81;
      char v79 = 3;
      goto LABEL_36;
    case 5:
      uint64_t v41 = v30;
      LOBYTE(v128) = 5;
      sub_251BC389C();
      uint64_t v50 = v26;
      uint64_t v51 = v91;
      sub_251F36770();
      if (v51) {
        goto LABEL_27;
      }
      uint64_t v52 = v101;
      uint64_t v78 = sub_251F368D0();
      (*(void (**)(char *, uint64_t))(v102 + 8))(v50, v52);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v127 + 8))(v23, v20);
      uint64_t v77 = 0;
      char v79 = 4;
      goto LABEL_36;
    case 6:
      uint64_t v41 = v30;
      LOBYTE(v128) = 6;
      sub_251BC3848();
      uint64_t v53 = v91;
      sub_251F36770();
      if (v53) {
        goto LABEL_27;
      }
      uint64_t v54 = v103;
      unsigned int v82 = sub_251F36890();
      (*(void (**)(char *, uint64_t))(v104 + 8))(v28, v54);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v127 + 8))(v23, v20);
      uint64_t v77 = 0;
      uint64_t v78 = v82;
      char v79 = 5;
      goto LABEL_36;
    case 7:
      uint64_t v41 = v30;
      LOBYTE(v128) = 7;
      sub_251BC37F4();
      uint64_t v55 = v116;
      uint64_t v56 = v91;
      sub_251F36770();
      if (v56) {
        goto LABEL_27;
      }
      uint64_t v57 = v106;
      unsigned int v83 = sub_251F36890();
      (*(void (**)(char *, uint64_t))(v105 + 8))(v55, v57);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v127 + 8))(v23, v20);
      uint64_t v77 = 0;
      uint64_t v78 = v83;
      char v79 = 6;
      goto LABEL_36;
    case 8:
      uint64_t v41 = v30;
      LOBYTE(v128) = 8;
      sub_251BC37A0();
      uint64_t v58 = v117;
      uint64_t v59 = v91;
      sub_251F36770();
      if (v59) {
        goto LABEL_27;
      }
      uint64_t v60 = v108;
      sub_251F36850();
      uint64_t v61 = v127;
      uint64_t v85 = v84;
      (*(void (**)(char *, uint64_t))(v107 + 8))(v58, v60);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v23, v20);
      uint64_t v77 = 0;
      uint64_t v78 = v85;
      char v79 = 7;
      goto LABEL_36;
    case 9:
      uint64_t v41 = v30;
      LOBYTE(v128) = 9;
      sub_251BC374C();
      uint64_t v62 = v118;
      uint64_t v63 = v91;
      sub_251F36770();
      if (v63) {
        goto LABEL_27;
      }
      uint64_t v64 = v110;
      uint64_t v78 = sub_251F36830();
      uint64_t v77 = v86;
      (*(void (**)(char *, uint64_t))(v109 + 8))(v62, v64);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v127 + 8))(v23, v20);
      char v79 = 8;
LABEL_36:
      uint64_t v66 = (uint64_t)v126;
      uint64_t v33 = v41;
      goto LABEL_38;
    case 0xA:
      LOBYTE(v128) = 10;
      sub_251BC36F8();
      uint64_t v65 = v91;
      sub_251F36770();
      if (v65) {
        goto LABEL_27;
      }
      sub_251BC3A94();
      uint64_t v73 = v112;
      sub_251F36880();
      uint64_t v74 = v127;
      (*(void (**)(char *, uint64_t))(v111 + 8))(v29, v73);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v23, v20);
      uint64_t v78 = v128;
      uint64_t v77 = v129;
      char v79 = 9;
      goto LABEL_37;
    case 0xB:
      LOBYTE(v128) = 11;
      sub_251BC365C();
      uint64_t v68 = v119;
      uint64_t v69 = v91;
      sub_251F36770();
      if (v69)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v127 + 8))(v23, v20);
        uint64_t v66 = (uint64_t)v126;
      }
      else
      {
        sub_251BC3A94();
        sub_251F36880();
        uint64_t v75 = v127;
        (*(void (**)(char *, uint64_t))(v113 + 8))(v68, v31);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v75 + 8))(v23, v20);
        uint64_t v78 = v128;
        uint64_t v77 = v129;
        char v79 = 10;
LABEL_37:
        uint64_t v33 = v125;
        uint64_t v66 = (uint64_t)v126;
LABEL_38:
        *(void *)uint64_t v33 = v78;
        *(void *)(v33 + 8) = v77;
        *(unsigned char *)(v33 + 16) = v79;
      }
      break;
    default:
      uint64_t v33 = v30;
      LOBYTE(v128) = 0;
      sub_251BC3A40();
      unint64_t v34 = v89;
      uint64_t v35 = v91;
      sub_251F36770();
      if (v35) {
        goto LABEL_27;
      }
      (*(void (**)(char *, uint64_t))(v92 + 8))(v34, v88);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v127 + 8))(v23, v20);
      uint64_t v78 = 0;
      uint64_t v77 = 0;
      char v79 = 11;
      uint64_t v66 = (uint64_t)v126;
      goto LABEL_38;
  }
  return __swift_destroy_boxed_opaque_existential_0(v66);
}

uint64_t sub_251BC20CC()
{
  return sub_251F36D00();
}

uint64_t sub_251BC2124()
{
  return sub_251F36D00();
}

uint64_t sub_251BC2174@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  unint64_t v3 = *(void *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_251B2ED7C(v2, v3, v4);
}

uint64_t sub_251BC2188@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CharacteristicKind.Value.init(from:)(a1, a2);
}

uint64_t sub_251BC21A0(void *a1)
{
  return CharacteristicKind.Value.encode(to:)(a1);
}

uint64_t CharacteristicKind.Properties.id.getter()
{
  return *(void *)v0;
}

uint64_t CharacteristicKind.Properties.rawValue.getter()
{
  return *(void *)v0;
}

HomeDataModel::CharacteristicKind::Properties __swiftcall CharacteristicKind.Properties.init(rawValue:)(HomeDataModel::CharacteristicKind::Properties rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static CharacteristicKind.Properties.supportsEventNotification.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static CharacteristicKind.Properties.readable.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void static CharacteristicKind.Properties.writable.getter(void *a1@<X8>)
{
  *a1 = 4;
}

void static CharacteristicKind.Properties.hidden.getter(void *a1@<X8>)
{
  *a1 = 8;
}

void static CharacteristicKind.Properties.requiresAuthorizationData.getter(void *a1@<X8>)
{
  *a1 = 16;
}

void sub_251BC220C()
{
  qword_269B9F5C8 = (uint64_t)&unk_270262AC8;
}

uint64_t static CharacteristicKind.Properties.allProperties.getter()
{
  if (qword_269B9C308 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_251BC227C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v3 = a2[1];
  if (sub_251F35150() == v4 && v5 == v3)
  {
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  char v7 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v7)
  {
LABEL_20:
    if (*a1) {
      return result;
    }
    uint64_t v16 = *a1 | 1;
    goto LABEL_22;
  }
  if (sub_251F356F0() == v4 && v9 == v3)
  {
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  char v11 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v11)
  {
LABEL_25:
    if ((*a1 & 2) != 0) {
      return result;
    }
    uint64_t v16 = *a1 | 2;
    goto LABEL_22;
  }
  if (sub_251F356F0() == v4 && v12 == v3)
  {
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  char v14 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v14)
  {
LABEL_28:
    if ((*a1 & 4) != 0) {
      return result;
    }
    uint64_t v16 = *a1 | 4;
LABEL_22:
    *a1 = v16;
    return result;
  }
  if (sub_251F356F0() == v4 && v15 == v3)
  {
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  char v17 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v17)
  {
LABEL_31:
    if ((*a1 & 8) == 0)
    {
      uint64_t v16 = *a1 | 8;
      goto LABEL_22;
    }
    return result;
  }
  if (sub_251F356F0() == v4 && v18 == v3)
  {
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    char v19 = sub_251F36B10();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v19 & 1) == 0) {
      return result;
    }
  }
  if ((*a1 & 0x10) == 0)
  {
    uint64_t v16 = *a1 | 0x10;
    goto LABEL_22;
  }
  return result;
}

uint64_t sub_251BC247C()
{
  return sub_251F35A40();
}

uint64_t sub_251BC24DC()
{
  return sub_251F359E0();
}

uint64_t CharacteristicKind.Format.rawValue.getter()
{
  uint64_t result = 1819242338;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x38746E6975;
      break;
    case 2:
      uint64_t result = 0x3631746E6975;
      break;
    case 3:
      uint64_t result = 0x3233746E6975;
      break;
    case 4:
      uint64_t result = 0x3436746E6975;
      break;
    case 5:
      uint64_t result = 7630441;
      break;
    case 6:
      uint64_t result = 0x3233746E69;
      break;
    case 7:
      uint64_t result = 0x74616F6C66;
      break;
    case 8:
      uint64_t result = 0x676E69727473;
      break;
    case 9:
      uint64_t result = 947285108;
      break;
    case 0xA:
      uint64_t result = 1635017060;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t _s13HomeDataModel18CharacteristicKindO6FormatO2idSSvg_0()
{
  uint64_t result = 1819242338;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x38746E6975;
      break;
    case 2:
      uint64_t result = 0x3631746E6975;
      break;
    case 3:
      uint64_t result = 0x3233746E6975;
      break;
    case 4:
      uint64_t result = 0x3436746E6975;
      break;
    case 5:
      uint64_t result = 7630441;
      break;
    case 6:
      uint64_t result = 0x3233746E69;
      break;
    case 7:
      uint64_t result = 0x74616F6C66;
      break;
    case 8:
      uint64_t result = 0x676E69727473;
      break;
    case 9:
      uint64_t result = 947285108;
      break;
    case 0xA:
      uint64_t result = 1635017060;
      break;
    default:
      return result;
  }
  return result;
}

void *static CharacteristicKind.Format.allCases.getter()
{
  return &unk_270262B10;
}

HomeDataModel::CharacteristicKind::Format_optional sub_251BC2764(Swift::String *a1)
{
  return CharacteristicKind.Format.init(rawValue:)(*a1);
}

uint64_t sub_251BC2770@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CharacteristicKind.Format.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_251BC279C(void *a1@<X8>)
{
  *a1 = &unk_270262B10;
}

uint64_t sub_251BC27AC(unsigned __int8 *a1, char *a2)
{
  return sub_251DB287C(*a1, *a2);
}

uint64_t sub_251BC27B8()
{
  return sub_251F36D00();
}

uint64_t sub_251BC2800()
{
  return sub_251AA99E0();
}

uint64_t sub_251BC2808()
{
  return sub_251F36D00();
}

uint64_t sub_251BC284C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CharacteristicKind.Format.description.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_251BC2874()
{
  return sub_251F35A30();
}

uint64_t sub_251BC28D4()
{
  return sub_251F359D0();
}

HomeDataModel::CharacteristicKind::Unit_optional __swiftcall CharacteristicKind.Unit.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_251F36750();
  result.value = swift_bridgeObjectRelease();
  char v5 = 7;
  if (v3 < 7) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static CharacteristicKind.Unit.allCases.getter()
{
  return &unk_270262C08;
}

uint64_t CharacteristicKind.Unit.rawValue.getter()
{
  uint64_t result = 0x737569736C6563;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65686E6572686166;
      break;
    case 2:
      uint64_t result = 0x61746E6563726570;
      break;
    case 3:
      uint64_t result = 0x6572676564637261;
      break;
    case 4:
      uint64_t result = 0x73646E6F636573;
      break;
    case 5:
      uint64_t result = 7894380;
      break;
    case 6:
      uint64_t result = 0x7373656C74696E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251BC2A78(unsigned __int8 *a1, char *a2)
{
  return sub_251DB2B40(*a1, *a2);
}

uint64_t sub_251BC2A84()
{
  return sub_251EAE3D0();
}

uint64_t sub_251BC2A90()
{
  sub_251F357B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251BC2BB0()
{
  return sub_251EAE3D0();
}

HomeDataModel::CharacteristicKind::Unit_optional sub_251BC2BB8(Swift::String *a1)
{
  return CharacteristicKind.Unit.init(rawValue:)(*a1);
}

void sub_251BC2BC4(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x737569736C6563;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEA00000000007469;
      uint64_t v3 = 0x65686E6572686166;
      goto LABEL_3;
    case 2:
      *a1 = 0x61746E6563726570;
      a1[1] = 0xEA00000000006567;
      break;
    case 3:
      *a1 = 0x6572676564637261;
      a1[1] = 0xEA00000000007365;
      break;
    case 4:
      *a1 = 0x73646E6F636573;
      a1[1] = 0xE700000000000000;
      break;
    case 5:
      *a1 = 7894380;
      a1[1] = 0xE300000000000000;
      break;
    case 6:
      *a1 = 0x7373656C74696E75;
      a1[1] = 0xE800000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

void sub_251BC2CC8(void *a1@<X8>)
{
  *a1 = &unk_270262C08;
}

uint64_t sub_251BC2CD8()
{
  return sub_251F35A30();
}

uint64_t sub_251BC2D38()
{
  return sub_251F359D0();
}

uint64_t CharacteristicKind.humanReadableDescription.getter()
{
  uint64_t v0 = self;
  CharacteristicKind.rawValue.getter();
  uint64_t v1 = (void *)sub_251F356C0();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_localizedDescriptionForCharacteristicType_, v1);

  uint64_t v3 = sub_251F356F0();
  return v3;
}

BOOL sub_251BC2E30(uint64_t a1, double a2)
{
  uint64_t v4 = (*(void *)&a2 >> 52) & 0x7FFLL;
  unint64_t v5 = *(void *)&a2 & 0xFFFFFFFFFFFFFLL;
  uint64_t v6 = v4 | *(void *)&a2 & 0xFFFFFFFFFFFFFLL;
  if (!v6)
  {
    uint64_t v12 = 0;
    BOOL result = 1;
    goto LABEL_25;
  }
  if (v4 == 2047) {
    goto LABEL_28;
  }
  uint64_t v7 = sub_251F35E00();
  if (v7 > 63) {
    goto LABEL_28;
  }
  uint64_t v8 = v7;
  uint64_t v9 = sub_251F35DE0();
  BOOL result = v8 >= v9;
  uint64_t v11 = v9 + __clz(__rbit64(v5));
  uint64_t v12 = v8 - v11;
  if (__OFSUB__(v8, v11))
  {
    __break(1u);
LABEL_27:
    if (a2 < 0.0)
    {
LABEL_36:
      LOBYTE(v6) = 0;
      uint64_t v12 = 0x8000000000000000;
      goto LABEL_25;
    }
LABEL_28:
    uint64_t v12 = 0;
    BOOL result = 0;
    LOBYTE(v6) = 1;
    goto LABEL_25;
  }
  if (v11 > 63)
  {
    if (v12 < -64 || v12 > 64) {
      goto LABEL_11;
    }
  }
  else if (v12 < -64 || v12 > 64)
  {
    goto LABEL_11;
  }
  if (v12 < 0) {
    goto LABEL_32;
  }
  if ((unint64_t)v12 < 0x40)
  {
    unint64_t v14 = v5 << v12;
    if (v8 != 63) {
      goto LABEL_17;
    }
LABEL_34:
    if (a2 < 0.0 && !v14) {
      goto LABEL_36;
    }
    goto LABEL_28;
  }
LABEL_11:
  if (v8 == 63) {
    goto LABEL_27;
  }
  uint64_t v13 = 0;
  unint64_t v14 = 0;
  if (v8 < 0) {
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v13 = 1 << v8;
LABEL_20:
  while (1)
  {
    uint64_t v12 = v14 | v13;
    if (a2 >= 0.0) {
      break;
    }
    if ((v12 & 0x8000000000000000) == 0)
    {
      LOBYTE(v6) = 0;
      uint64_t v12 = -v12;
      goto LABEL_25;
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    if ((unint64_t)v12 <= 0xFFFFFFFFFFFFFFC0) {
      goto LABEL_11;
    }
    unint64_t v14 = v5 >> -(char)v12;
    if (v8 == 63) {
      goto LABEL_34;
    }
LABEL_17:
    if ((v8 & 0x8000000000000000) == 0) {
      goto LABEL_19;
    }
    uint64_t v13 = 0;
  }
  if (v12 < 0) {
    goto LABEL_31;
  }
  LOBYTE(v6) = 0;
LABEL_25:
  *(void *)a1 = v12;
  *(unsigned char *)(a1 + 8) = v6;
  return result;
}

BOOL sub_251BC2FB8(uint64_t a1, float a2)
{
  int v4 = (LODWORD(a2) >> 23);
  unint64_t v5 = LODWORD(a2) & 0x7FFFFF;
  char v6 = v4 | LOBYTE(a2);
  if (!(v4 | v5))
  {
    unint64_t v14 = 0;
    BOOL result = 1;
    goto LABEL_26;
  }
  if (v4 == 255 || (uint64_t v7 = sub_251F35E20(), v7 > 63))
  {
LABEL_38:
    unint64_t v14 = 0;
    BOOL result = 0;
    char v6 = 1;
    goto LABEL_26;
  }
  uint64_t v8 = v7;
  uint64_t v9 = sub_251F35E10();
  BOOL result = v8 >= v9;
  uint64_t v11 = v9 + __clz(__rbit32(v5));
  uint64_t v12 = v8 - v11;
  if (__OFSUB__(v8, v11))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v11 > 63)
  {
    if ((unint64_t)(v12 - 33) < 0xFFFFFFFFFFFFFFBFLL) {
      goto LABEL_12;
    }
    if (v12 < 0)
    {
      if ((unint64_t)v12 <= 0xFFFFFFFFFFFFFFE0) {
        LODWORD(v12) = 0;
      }
      else {
        LODWORD(v12) = v5 >> (v11 - v8);
      }
      goto LABEL_16;
    }
    if ((unint64_t)v12 >= 0x20) {
LABEL_12:
    }
      LODWORD(v12) = 0;
    else {
      LODWORD(v12) = v5 << v12;
    }
LABEL_16:
    uint64_t v12 = v12;
LABEL_17:
    if (v8 != 63)
    {
      if (v8 < 0)
      {
        uint64_t v13 = 0;
        goto LABEL_21;
      }
      goto LABEL_20;
    }
LABEL_31:
    if (a2 >= 0.0 || v12) {
      goto LABEL_38;
    }
    goto LABEL_33;
  }
  if (v12 >= -64 && v12 <= 64)
  {
    if (v12 < 0)
    {
      if ((unint64_t)v12 <= 0xFFFFFFFFFFFFFFC0) {
        goto LABEL_8;
      }
      uint64_t v12 = v5 >> (v11 - v8);
    }
    else
    {
      if ((unint64_t)v12 >= 0x40) {
        goto LABEL_8;
      }
      uint64_t v12 = v5 << v12;
    }
    goto LABEL_17;
  }
LABEL_8:
  if (v8 == 63) {
    goto LABEL_37;
  }
  uint64_t v13 = 0;
  uint64_t v12 = 0;
  if ((v8 & 0x8000000000000000) == 0) {
LABEL_20:
  }
    uint64_t v13 = 1 << v8;
LABEL_21:
  unint64_t v14 = v12 | v13;
  if (a2 >= 0.0)
  {
    if ((v14 & 0x8000000000000000) == 0)
    {
      char v6 = 0;
      goto LABEL_26;
    }
    goto LABEL_36;
  }
  if ((v14 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    if (a2 >= 0.0) {
      goto LABEL_38;
    }
LABEL_33:
    char v6 = 0;
    unint64_t v14 = 0x8000000000000000;
    goto LABEL_26;
  }
  char v6 = 0;
  unint64_t v14 = -(uint64_t)v14;
LABEL_26:
  *(void *)a1 = v14;
  *(unsigned char *)(a1 + 8) = v6;
  return result;
}

uint64_t _s13HomeDataModel18CharacteristicKindO5ValueO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t *)a1;
  unint64_t v3 = *(void *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  uint64_t v5 = *(uint64_t *)a2;
  unint64_t v6 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  switch(v4)
  {
    case 1:
      if (v7 != 1) {
        goto LABEL_37;
      }
      int v9 = *(void *)a1;
      sub_251A580B4(*(void *)a1, v3, 1);
      sub_251A580B4(v5, v6, 1);
      char v8 = v9 == v5;
      return v8 & 1;
    case 2:
      if (v7 != 2) {
        goto LABEL_37;
      }
      int v10 = (unsigned __int16)*(void *)a1;
      sub_251A580B4(*(void *)a1, v3, 2);
      sub_251A580B4(v5, v6, 2);
      char v8 = v10 == (unsigned __int16)v5;
      return v8 & 1;
    case 3:
      if (v7 != 3) {
        goto LABEL_37;
      }
      sub_251A580B4(*(void *)a1, v3, 3);
      uint64_t v11 = v5;
      unint64_t v12 = v6;
      char v13 = 3;
      goto LABEL_16;
    case 4:
      if (v7 != 4) {
        goto LABEL_37;
      }
      sub_251A580B4(*(void *)a1, v3, 4);
      sub_251A580B4(v5, v6, 4);
      char v8 = v2 == v5;
      return v8 & 1;
    case 5:
      if (v7 != 5) {
        goto LABEL_37;
      }
      sub_251A580B4(*(void *)a1, v3, 5);
      uint64_t v11 = v5;
      unint64_t v12 = v6;
      char v13 = 5;
      goto LABEL_16;
    case 6:
      if (v7 != 6) {
        goto LABEL_37;
      }
      sub_251A580B4(*(void *)a1, v3, 6);
      uint64_t v11 = v5;
      unint64_t v12 = v6;
      char v13 = 6;
LABEL_16:
      sub_251A580B4(v11, v12, v13);
      char v8 = v2 == v5;
      return v8 & 1;
    case 7:
      if (v7 != 7) {
        goto LABEL_37;
      }
      sub_251A580B4(*(void *)a1, v3, 7);
      sub_251A580B4(v5, v6, 7);
      char v8 = *(double *)&v2 == *(double *)&v5;
      return v8 & 1;
    case 8:
      if (v7 != 8)
      {
        swift_bridgeObjectRetain();
        goto LABEL_37;
      }
      if (v2 == v5 && v3 == v6) {
        char v8 = 1;
      }
      else {
        char v8 = sub_251F36B10();
      }
      sub_251B2ED7C(v5, v6, 8);
      sub_251B2ED7C(v2, v3, 8);
      sub_251A580B4(v2, v3, 8);
      sub_251A580B4(v5, v6, 8);
      break;
    case 9:
      if (v7 != 9) {
        goto LABEL_29;
      }
      sub_251B2ED7C(*(void *)a2, *(void *)(a2 + 8), 9);
      sub_251B2ED7C(v2, v3, 9);
      char v8 = sub_251D97ECC(v2, v3, v5, v6);
      sub_251A580B4(v2, v3, 9);
      sub_251A580B4(v5, v6, 9);
      return v8 & 1;
    case 10:
      if (v7 == 10)
      {
        sub_251B2ED7C(*(void *)a2, *(void *)(a2 + 8), 10);
        sub_251B2ED7C(v2, v3, 10);
        char v8 = sub_251D97ECC(v2, v3, v5, v6);
        sub_251A580B4(v2, v3, 10);
        sub_251A580B4(v5, v6, 10);
      }
      else
      {
LABEL_29:
        sub_251A1A894(*(void *)a1, v3);
LABEL_37:
        sub_251B2ED7C(v5, v6, v7);
        sub_251A580B4(v2, v3, v4);
        sub_251A580B4(v5, v6, v7);
        char v8 = 0;
      }
      break;
    case 11:
      if (v7 != 11 || (v6 | v5) != 0) {
        goto LABEL_37;
      }
      sub_251A580B4(*(void *)a1, v3, 11);
      sub_251A580B4(0, 0, 11);
      char v8 = 1;
      return v8 & 1;
    default:
      if (*(unsigned char *)(a2 + 16)) {
        goto LABEL_37;
      }
      sub_251A580B4(*(void *)a1, v3, 0);
      sub_251A580B4(v5, v6, 0);
      char v8 = ((v2 & 1) == 0) ^ v5;
      return v8 & 1;
  }
  return v8 & 1;
}

uint64_t _s13HomeDataModel18CharacteristicKindO1loiySbAC_ACtFZ_0()
{
  CharacteristicKind.rawValue.getter();
  uint64_t v1 = v0;
  CharacteristicKind.rawValue.getter();
  if (v1 == v2) {
    char v3 = 0;
  }
  else {
    char v3 = sub_251F36B10();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

unint64_t sub_251BC3608()
{
  unint64_t result = qword_269B9F638;
  if (!qword_269B9F638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F638);
  }
  return result;
}

unint64_t sub_251BC365C()
{
  unint64_t result = qword_269B9F640;
  if (!qword_269B9F640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F640);
  }
  return result;
}

unint64_t sub_251BC36B0()
{
  unint64_t result = qword_269B9F648;
  if (!qword_269B9F648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F648);
  }
  return result;
}

unint64_t sub_251BC36F8()
{
  unint64_t result = qword_269B9F650;
  if (!qword_269B9F650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F650);
  }
  return result;
}

unint64_t sub_251BC374C()
{
  unint64_t result = qword_269B9F658;
  if (!qword_269B9F658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F658);
  }
  return result;
}

unint64_t sub_251BC37A0()
{
  unint64_t result = qword_269B9F660;
  if (!qword_269B9F660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F660);
  }
  return result;
}

unint64_t sub_251BC37F4()
{
  unint64_t result = qword_269B9F668;
  if (!qword_269B9F668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F668);
  }
  return result;
}

unint64_t sub_251BC3848()
{
  unint64_t result = qword_269B9F670;
  if (!qword_269B9F670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F670);
  }
  return result;
}

unint64_t sub_251BC389C()
{
  unint64_t result = qword_269B9F678;
  if (!qword_269B9F678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F678);
  }
  return result;
}

unint64_t sub_251BC38F0()
{
  unint64_t result = qword_269B9F680;
  if (!qword_269B9F680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F680);
  }
  return result;
}

unint64_t sub_251BC3944()
{
  unint64_t result = qword_269B9F688;
  if (!qword_269B9F688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F688);
  }
  return result;
}

unint64_t sub_251BC3998()
{
  unint64_t result = qword_269B9F690;
  if (!qword_269B9F690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F690);
  }
  return result;
}

unint64_t sub_251BC39EC()
{
  unint64_t result = qword_269B9F698;
  if (!qword_269B9F698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F698);
  }
  return result;
}

unint64_t sub_251BC3A40()
{
  unint64_t result = qword_269B9F6A0;
  if (!qword_269B9F6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F6A0);
  }
  return result;
}

unint64_t sub_251BC3A94()
{
  unint64_t result = qword_269B9F710;
  if (!qword_269B9F710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F710);
  }
  return result;
}

uint64_t sub_251BC3ADC()
{
  return sub_251A95228(&qword_269B9F718, &qword_269B9F720);
}

unint64_t sub_251BC3B08()
{
  unint64_t result = qword_26B21F0D0;
  if (!qword_26B21F0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21F0D0);
  }
  return result;
}

unint64_t sub_251BC3B60()
{
  unint64_t result = qword_269B9F728;
  if (!qword_269B9F728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F728);
  }
  return result;
}

unint64_t sub_251BC3BB8()
{
  unint64_t result = qword_269B9F730;
  if (!qword_269B9F730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F730);
  }
  return result;
}

unint64_t sub_251BC3C10()
{
  unint64_t result = qword_269B9F738;
  if (!qword_269B9F738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F738);
  }
  return result;
}

unint64_t sub_251BC3C68()
{
  unint64_t result = qword_269B9F740;
  if (!qword_269B9F740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F740);
  }
  return result;
}

unint64_t sub_251BC3CC0()
{
  unint64_t result = qword_269B9F748;
  if (!qword_269B9F748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F748);
  }
  return result;
}

uint64_t sub_251BC3D14()
{
  return MEMORY[0x263F8D6D8];
}

unint64_t sub_251BC3D24()
{
  unint64_t result = qword_269B9F750;
  if (!qword_269B9F750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F750);
  }
  return result;
}

uint64_t sub_251BC3D78()
{
  return sub_251A95228(&qword_269B9F758, &qword_269B9F760);
}

unint64_t sub_251BC3DA4()
{
  unint64_t result = qword_269B9F768;
  if (!qword_269B9F768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F768);
  }
  return result;
}

unint64_t sub_251BC3DFC()
{
  unint64_t result = qword_269B9F770;
  if (!qword_269B9F770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F770);
  }
  return result;
}

uint64_t sub_251BC3E50()
{
  return sub_251A95228(&qword_269B9F778, &qword_269B9F780);
}

uint64_t getEnumTagSinglePayload for CharacteristicKind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x53) {
    goto LABEL_17;
  }
  if (a2 + 173 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 173) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 173;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 173;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 173;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xAE;
  int v8 = v6 - 174;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CharacteristicKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 173 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 173) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x53) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x52)
  {
    unsigned int v6 = ((a2 - 83) >> 8) + 1;
    *unint64_t result = a2 - 83;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251BC3FD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 - 83;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CharacteristicKind()
{
  return &type metadata for CharacteristicKind;
}

uint64_t destroy for CharacteristicKind.Value(uint64_t a1)
{
  return sub_251A580B4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s13HomeDataModel18CharacteristicKindO5ValueOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_251B2ED7C(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CharacteristicKind.Value(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_251B2ED7C(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_251A580B4(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for CharacteristicKind.Value(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_251A580B4(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CharacteristicKind.Value(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF5 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 245);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 0xB) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CharacteristicKind.Value(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF4)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 245;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xF5) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF5) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_251BC4198(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 0xAu) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 11);
  }
}

uint64_t sub_251BC41B0(uint64_t result, unsigned int a2)
{
  if (a2 >= 0xB)
  {
    *(void *)unint64_t result = a2 - 11;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 11;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value()
{
  return &type metadata for CharacteristicKind.Value;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Properties()
{
  return &type metadata for CharacteristicKind.Properties;
}

uint64_t getEnumTagSinglePayload for CharacteristicKind.Format(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CharacteristicKind.Format(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251BC4344);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Format()
{
  return &type metadata for CharacteristicKind.Format;
}

unsigned char *storeEnumTagSinglePayload for CharacteristicKind.Unit(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251BC4448);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Unit()
{
  return &type metadata for CharacteristicKind.Unit;
}

unsigned char *storeEnumTagSinglePayload for CharacteristicKind.Value.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251BC454CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.CodingKeys()
{
  return &type metadata for CharacteristicKind.Value.CodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.NullCodingKeys()
{
  return &type metadata for CharacteristicKind.Value.NullCodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.BoolCodingKeys()
{
  return &type metadata for CharacteristicKind.Value.BoolCodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.Uint8CodingKeys()
{
  return &type metadata for CharacteristicKind.Value.Uint8CodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.Uint16CodingKeys()
{
  return &type metadata for CharacteristicKind.Value.Uint16CodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.Uint32CodingKeys()
{
  return &type metadata for CharacteristicKind.Value.Uint32CodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.Uint64CodingKeys()
{
  return &type metadata for CharacteristicKind.Value.Uint64CodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.IntCodingKeys()
{
  return &type metadata for CharacteristicKind.Value.IntCodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.Int32CodingKeys()
{
  return &type metadata for CharacteristicKind.Value.Int32CodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.DoubleCodingKeys()
{
  return &type metadata for CharacteristicKind.Value.DoubleCodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.StringCodingKeys()
{
  return &type metadata for CharacteristicKind.Value.StringCodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.Tlv8CodingKeys()
{
  return &type metadata for CharacteristicKind.Value.Tlv8CodingKeys;
}

unsigned char *_s13HomeDataModel18CharacteristicKindO5ValueO14BoolCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x251BC46D4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.DataCodingKeys()
{
  return &type metadata for CharacteristicKind.Value.DataCodingKeys;
}

unint64_t sub_251BC4710()
{
  unint64_t result = qword_269B9F788;
  if (!qword_269B9F788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F788);
  }
  return result;
}

unint64_t sub_251BC4768()
{
  unint64_t result = qword_269B9F790;
  if (!qword_269B9F790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F790);
  }
  return result;
}

unint64_t sub_251BC47C0()
{
  unint64_t result = qword_269B9F798;
  if (!qword_269B9F798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F798);
  }
  return result;
}

unint64_t sub_251BC4818()
{
  unint64_t result = qword_269B9F7A0;
  if (!qword_269B9F7A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F7A0);
  }
  return result;
}

unint64_t sub_251BC4870()
{
  unint64_t result = qword_269B9F7A8;
  if (!qword_269B9F7A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F7A8);
  }
  return result;
}

unint64_t sub_251BC48C8()
{
  unint64_t result = qword_269B9F7B0;
  if (!qword_269B9F7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F7B0);
  }
  return result;
}

unint64_t sub_251BC4920()
{
  unint64_t result = qword_269B9F7B8;
  if (!qword_269B9F7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F7B8);
  }
  return result;
}

unint64_t sub_251BC4978()
{
  unint64_t result = qword_269B9F7C0;
  if (!qword_269B9F7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F7C0);
  }
  return result;
}

unint64_t sub_251BC49D0()
{
  unint64_t result = qword_269B9F7C8;
  if (!qword_269B9F7C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F7C8);
  }
  return result;
}

unint64_t sub_251BC4A28()
{
  unint64_t result = qword_269B9F7D0;
  if (!qword_269B9F7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F7D0);
  }
  return result;
}

unint64_t sub_251BC4A80()
{
  unint64_t result = qword_269B9F7D8;
  if (!qword_269B9F7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F7D8);
  }
  return result;
}

unint64_t sub_251BC4AD8()
{
  unint64_t result = qword_269B9F7E0;
  if (!qword_269B9F7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F7E0);
  }
  return result;
}

unint64_t sub_251BC4B30()
{
  unint64_t result = qword_269B9F7E8;
  if (!qword_269B9F7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F7E8);
  }
  return result;
}

unint64_t sub_251BC4B88()
{
  unint64_t result = qword_269B9F7F0;
  if (!qword_269B9F7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F7F0);
  }
  return result;
}

unint64_t sub_251BC4BE0()
{
  unint64_t result = qword_269B9F7F8;
  if (!qword_269B9F7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F7F8);
  }
  return result;
}

unint64_t sub_251BC4C38()
{
  unint64_t result = qword_269B9F800;
  if (!qword_269B9F800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F800);
  }
  return result;
}

unint64_t sub_251BC4C90()
{
  unint64_t result = qword_269B9F808;
  if (!qword_269B9F808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F808);
  }
  return result;
}

unint64_t sub_251BC4CE8()
{
  unint64_t result = qword_269B9F810;
  if (!qword_269B9F810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F810);
  }
  return result;
}

unint64_t sub_251BC4D40()
{
  unint64_t result = qword_269B9F818;
  if (!qword_269B9F818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F818);
  }
  return result;
}

unint64_t sub_251BC4D98()
{
  unint64_t result = qword_269B9F820;
  if (!qword_269B9F820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F820);
  }
  return result;
}

unint64_t sub_251BC4DF0()
{
  unint64_t result = qword_269B9F828;
  if (!qword_269B9F828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F828);
  }
  return result;
}

unint64_t sub_251BC4E48()
{
  unint64_t result = qword_269B9F830;
  if (!qword_269B9F830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F830);
  }
  return result;
}

unint64_t sub_251BC4EA0()
{
  unint64_t result = qword_269B9F838;
  if (!qword_269B9F838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F838);
  }
  return result;
}

unint64_t sub_251BC4EF8()
{
  unint64_t result = qword_269B9F840;
  if (!qword_269B9F840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F840);
  }
  return result;
}

unint64_t sub_251BC4F50()
{
  unint64_t result = qword_269B9F848;
  if (!qword_269B9F848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F848);
  }
  return result;
}

unint64_t sub_251BC4FA8()
{
  unint64_t result = qword_269B9F850;
  if (!qword_269B9F850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F850);
  }
  return result;
}

unint64_t sub_251BC5000()
{
  unint64_t result = qword_269B9F858;
  if (!qword_269B9F858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F858);
  }
  return result;
}

unint64_t sub_251BC5058()
{
  unint64_t result = qword_269B9F860;
  if (!qword_269B9F860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F860);
  }
  return result;
}

unint64_t sub_251BC50B0()
{
  unint64_t result = qword_269B9F868;
  if (!qword_269B9F868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F868);
  }
  return result;
}

unint64_t sub_251BC5108()
{
  unint64_t result = qword_269B9F870;
  if (!qword_269B9F870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F870);
  }
  return result;
}

unint64_t sub_251BC5160()
{
  unint64_t result = qword_269B9F878;
  if (!qword_269B9F878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F878);
  }
  return result;
}

unint64_t sub_251BC51B8()
{
  unint64_t result = qword_269B9F880;
  if (!qword_269B9F880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F880);
  }
  return result;
}

unint64_t sub_251BC5210()
{
  unint64_t result = qword_269B9F888;
  if (!qword_269B9F888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F888);
  }
  return result;
}

unint64_t sub_251BC5268()
{
  unint64_t result = qword_269B9F890;
  if (!qword_269B9F890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F890);
  }
  return result;
}

unint64_t sub_251BC52C0()
{
  unint64_t result = qword_269B9F898;
  if (!qword_269B9F898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F898);
  }
  return result;
}

unint64_t sub_251BC5318()
{
  unint64_t result = qword_269B9F8A0;
  if (!qword_269B9F8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F8A0);
  }
  return result;
}

unint64_t sub_251BC5370()
{
  unint64_t result = qword_269B9F8A8;
  if (!qword_269B9F8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F8A8);
  }
  return result;
}

unint64_t sub_251BC53C8()
{
  unint64_t result = qword_269B9F8B0;
  if (!qword_269B9F8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F8B0);
  }
  return result;
}

uint64_t sub_251BC541C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1819047278 && a2 == 0xE400000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1819242338 && a2 == 0xE400000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x38746E6975 && a2 == 0xE500000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x3631746E6975 && a2 == 0xE600000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x3233746E6975 && a2 == 0xE600000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x3436746E6975 && a2 == 0xE600000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 7630441 && a2 == 0xE300000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x3233746E69 && a2 == 0xE500000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x656C62756F64 && a2 == 0xE600000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x676E69727473 && a2 == 0xE600000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 947285108 && a2 == 0xE400000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 11;
    }
    else {
      return 12;
    }
  }
}

unint64_t sub_251BC5870()
{
  unint64_t result = qword_269B9F8B8;
  if (!qword_269B9F8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F8B8);
  }
  return result;
}

unint64_t sub_251BC58C4()
{
  unint64_t result = qword_269B9F8C0;
  if (!qword_269B9F8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F8C0);
  }
  return result;
}

unint64_t sub_251BC5918()
{
  unint64_t result = qword_269B9F8C8;
  if (!qword_269B9F8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F8C8);
  }
  return result;
}

HomeDataModel::CharacteristicKind_optional HMCharacteristic.characteristicKind.getter@<W0>(unsigned __int8 *a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_characteristicType);
  uint64_t v4 = sub_251F356F0();
  char v6 = v5;

  v7._countAndFlagsBits = v4;
  v7._object = v6;
  result.value = CharacteristicKind.init(rawValue:)(v7).value;
  unsigned __int8 v9 = v10;
  if (v10 == 174) {
    unsigned __int8 v9 = 0;
  }
  *a1 = v9;
  return result;
}

uint64_t sub_251BC59E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(a2 + 8))();
  if (result)
  {
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
    *(void *)a3 = 1;
    *(unsigned char *)(a3 + 24) = 0;
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
    if (result)
    {
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)a3 = 1;
      *(unsigned char *)(a3 + 24) = 1;
    }
    else
    {
      uint64_t result = (uint64_t)(*(void *(**)(long long *__return_ptr, uint64_t, uint64_t))(a2 + 24))(&v9, a1, a2);
      uint64_t v7 = v10;
      if (v10)
      {
        *(_OWORD *)a3 = v9;
        *(void *)(a3 + 16) = v7;
        char v8 = 2;
      }
      else
      {
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
        if (result)
        {
          *(void *)(a3 + 8) = 0;
          *(void *)(a3 + 16) = 0;
          *(void *)a3 = 1;
          char v8 = 3;
        }
        else
        {
          *(void *)a3 = 0;
          *(void *)(a3 + 8) = 0;
          *(void *)(a3 + 16) = 0;
          char v8 = -1;
        }
      }
      *(unsigned char *)(a3 + 24) = v8;
    }
  }
  return result;
}

id sub_251BC5B00(void *a1)
{
  id v1 = a1;
  HMCharacteristic.description.getter();

  BOOL v2 = (void *)sub_251F356C0();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t HMCharacteristic.description.getter()
{
  id v1 = v0;
  id v2 = objc_msgSend(v0, sel_service);
  id v3 = v2;
  if (v2)
  {
    id v4 = objc_msgSend(v2, sel_accessory);

    if (v4)
    {
      id v5 = objc_msgSend(v4, sel_home);

      if (v5)
      {
        id v6 = objc_msgSend(v5, sel_name);

        sub_251F356F0();
      }
    }
  }
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  id v7 = objc_msgSend(v1, sel_service);
  if (v7)
  {
    char v8 = v7;
    id v9 = objc_msgSend(v7, sel_accessory);

    if (v9)
    {
      id v10 = objc_msgSend(v9, sel_name);

      sub_251F356F0();
    }
  }
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  id v11 = objc_msgSend(v1, sel_service);
  if (v11)
  {
    unint64_t v12 = v11;
    id v13 = objc_msgSend(v11, sel_serviceType);
    uint64_t v14 = sub_251F356F0();
    uint64_t v16 = v15;

    v17._countAndFlagsBits = v14;
    v17._object = v16;
    ServiceKind.init(rawValue:)(v17);

    ServiceKind.localizedDescription.getter();
  }
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  id v18 = objc_msgSend(v1, sel_metadata);
  if (v18)
  {
    char v19 = v18;
    id v20 = objc_msgSend(v18, sel_manufacturerDescription);

    if (v20)
    {
      sub_251F356F0();
    }
  }
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  if (objc_msgSend(v1, sel_value))
  {
    sub_251F36240();
    swift_unknownObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E190);
  sub_251F35770();
  sub_251F35800();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t HMCharacteristic.bestNameForAccessory.getter()
{
  uint64_t v1 = 0x6E776F6E6B6E75;
  id v2 = objc_msgSend(v0, sel_service);
  if (v2)
  {
    id v3 = v2;
    id v4 = objc_msgSend(v2, sel_accessory);

    if (v4)
    {
      id v5 = objc_msgSend(v4, sel_name);

      uint64_t v1 = sub_251F356F0();
    }
  }
  return v1;
}

uint64_t HMCharacteristic.fetchedValue()(uint64_t a1)
{
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = v1;
  return MEMORY[0x270FA2498](sub_251BC5F98, 0, 0);
}

uint64_t sub_251BC5F98()
{
  uint64_t v1 = (void *)v0[16];
  v0[2] = v0;
  v0[3] = sub_251BC608C;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_251A5B804;
  v0[13] = &block_descriptor_5;
  v0[14] = v2;
  objc_msgSend(v1, sel_readValueWithCompletionHandler_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_251BC608C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 136) = v1;
  if (v1) {
    uint64_t v2 = sub_251BC6230;
  }
  else {
    uint64_t v2 = sub_251BC619C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251BC619C()
{
  id v1 = objc_msgSend(*(id *)(v0 + 128), sel_value);
  uint64_t v2 = *(_OWORD **)(v0 + 120);
  if (v1)
  {
    sub_251F36240();
    swift_unknownObjectRelease();
  }
  else
  {
    *uint64_t v2 = 0u;
    v2[1] = 0u;
  }
  id v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_251BC6230()
{
  id v1 = *(void **)(v0 + 136);
  swift_willThrow();

  id v2 = objc_msgSend(*(id *)(v0 + 128), sel_value);
  id v3 = *(_OWORD **)(v0 + 120);
  if (v2)
  {
    sub_251F36240();
    swift_unknownObjectRelease();
  }
  else
  {
    *id v3 = 0u;
    v3[1] = 0u;
  }
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

double HMCharacteristic.cachedValue.getter@<D0>(_OWORD *a1@<X8>)
{
  if (objc_msgSend(v1, sel_value))
  {
    sub_251F36240();
    swift_unknownObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a1 = 0u;
    a1[1] = 0u;
  }
  return result;
}

uint64_t HMCharacteristic.BOOL.getter()
{
  id v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 48) = v2;
  *id v2 = v1;
  v2[1] = sub_251BC63FC;
  v2[15] = v1 + 16;
  v2[16] = v0;
  return MEMORY[0x270FA2498](sub_251BC5F98, 0, 0);
}

uint64_t sub_251BC63FC()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251BC64F8, 0, 0);
}

uint64_t sub_251BC64F8()
{
  if (*(void *)(v0 + 40))
  {
    if (swift_dynamicCast()) {
      uint64_t v1 = *(unsigned __int8 *)(v0 + 56);
    }
    else {
      uint64_t v1 = 2;
    }
  }
  else
  {
    sub_251A9090C(v0 + 16);
    uint64_t v1 = 2;
  }
  id v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t HMCharacteristic.cachedBool.getter()
{
  if (objc_msgSend(v0, sel_value))
  {
    sub_251F36240();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v2, 0, sizeof(v2));
  }
  sub_251ABBD00((uint64_t)v2, (uint64_t)v3);
  if (v4)
  {
    if (swift_dynamicCast()) {
      return LOBYTE(v2[0]);
    }
    else {
      return 2;
    }
  }
  else
  {
    sub_251A9090C((uint64_t)v3);
    return 2;
  }
}

uint64_t HMCharacteristic.int.getter()
{
  id v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 56) = v2;
  *id v2 = v1;
  v2[1] = sub_251BC6700;
  v2[15] = v1 + 16;
  v2[16] = v0;
  return MEMORY[0x270FA2498](sub_251BC5F98, 0, 0);
}

uint64_t sub_251BC6700()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251BC67FC, 0, 0);
}

uint64_t sub_251BC67FC()
{
  if (v0[5])
  {
    int v1 = swift_dynamicCast();
    if (v1) {
      uint64_t v2 = v0[6];
    }
    else {
      uint64_t v2 = 0;
    }
    uint64_t v3 = v1 ^ 1u;
  }
  else
  {
    sub_251A9090C((uint64_t)(v0 + 2));
    uint64_t v2 = 0;
    uint64_t v3 = 1;
  }
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v4(v2, v3);
}

uint64_t HMCharacteristic.cachedInt.getter()
{
  if (objc_msgSend(v0, sel_value))
  {
    sub_251F36240();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v2, 0, sizeof(v2));
  }
  sub_251ABBD00((uint64_t)v2, (uint64_t)v3);
  if (v4)
  {
    if (swift_dynamicCast()) {
      return *(void *)&v2[0];
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_251A9090C((uint64_t)v3);
    return 0;
  }
}

uint64_t HMCharacteristic.float.getter()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 56) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_251BC6A14;
  v2[15] = v1 + 16;
  v2[16] = v0;
  return MEMORY[0x270FA2498](sub_251BC5F98, 0, 0);
}

uint64_t sub_251BC6A14()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251BC6B10, 0, 0);
}

uint64_t sub_251BC6B10()
{
  if (v0[5])
  {
    int v1 = swift_dynamicCast();
    if (v1) {
      uint64_t v2 = v0[6];
    }
    else {
      uint64_t v2 = 0;
    }
    uint64_t v3 = v1 ^ 1u;
  }
  else
  {
    sub_251A9090C((uint64_t)(v0 + 2));
    uint64_t v2 = 0;
    uint64_t v3 = 1;
  }
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v4(v2, v3);
}

uint64_t HMCharacteristic.cachedFloat.getter()
{
  if (objc_msgSend(v0, sel_value))
  {
    sub_251F36240();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v2, 0, sizeof(v2));
  }
  sub_251ABBD00((uint64_t)v2, (uint64_t)v3);
  if (v4)
  {
    if (swift_dynamicCast()) {
      return *(void *)&v2[0];
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_251A9090C((uint64_t)v3);
    return 0;
  }
}

uint64_t HMCharacteristic.data.getter()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 64) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_251BC6D28;
  v2[15] = v1 + 16;
  v2[16] = v0;
  return MEMORY[0x270FA2498](sub_251BC5F98, 0, 0);
}

uint64_t sub_251BC6D28()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251BC6E24, 0, 0);
}

uint64_t sub_251BC6E24()
{
  if (v0[5])
  {
    int v1 = swift_dynamicCast();
    BOOL v2 = v1 == 0;
    if (v1) {
      uint64_t v3 = v0[6];
    }
    else {
      uint64_t v3 = 0;
    }
    if (v2) {
      unint64_t v4 = 0xF000000000000000;
    }
    else {
      unint64_t v4 = v0[7];
    }
  }
  else
  {
    sub_251A9090C((uint64_t)(v0 + 2));
    uint64_t v3 = 0;
    unint64_t v4 = 0xF000000000000000;
  }
  uint64_t v5 = (uint64_t (*)(uint64_t, unint64_t))v0[1];
  return v5(v3, v4);
}

uint64_t HMCharacteristic.tlv8.getter()
{
  BOOL v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 64) = v2;
  *BOOL v2 = v1;
  v2[1] = sub_251BC6F80;
  v2[15] = v1 + 16;
  v2[16] = v0;
  return MEMORY[0x270FA2498](sub_251BC5F98, 0, 0);
}

uint64_t sub_251BC6F80()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251BC7638, 0, 0);
}

uint64_t _sSo16HMCharacteristicC13HomeDataModelE06cachedC010Foundation0C0VSgvg_0()
{
  if (objc_msgSend(v0, sel_value))
  {
    sub_251F36240();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v2, 0, sizeof(v2));
  }
  sub_251ABBD00((uint64_t)v2, (uint64_t)v3);
  if (v4)
  {
    if (swift_dynamicCast()) {
      return *(void *)&v2[0];
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_251A9090C((uint64_t)v3);
    return 0;
  }
}

uint64_t HMCharacteristic.currentValue<A>()(uint64_t a1, uint64_t a2)
{
  v3[15] = a2;
  v3[16] = v2;
  v3[14] = a1;
  return MEMORY[0x270FA2498](sub_251BC7164, 0, 0);
}

uint64_t sub_251BC7164()
{
  uint64_t v1 = *(void **)(v0 + 128);
  id v2 = objc_msgSend(v1, sel_valueUpdatedTime);
  uint64_t v3 = sub_251F34D20();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = swift_task_alloc();
  sub_251F34CE0();

  id v6 = objc_msgSend(v1, sel_notificationEnabledTime);
  uint64_t v7 = swift_task_alloc();
  sub_251F34CE0();

  LOBYTE(v6) = sub_251F34C80();
  char v8 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v8(v7, v3);
  v8(v5, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  if (v6)
  {
    if (objc_msgSend(*(id *)(v0 + 128), sel_value))
    {
      sub_251F36240();
      swift_unknownObjectRelease();
    }
    else
    {
      *(_OWORD *)(v0 + 80) = 0u;
      *(_OWORD *)(v0 + 96) = 0u;
    }
    uint64_t v12 = *(void *)(v0 + 112);
    uint64_t v11 = *(void *)(v0 + 120);
    sub_251ABBD00(v0 + 80, v0 + 48);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E190);
    int v13 = swift_dynamicCast();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v12, v13 ^ 1u, 1, v11);
    uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
    return v14();
  }
  else
  {
    id v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v9;
    *id v9 = v0;
    v9[1] = sub_251BC7428;
    uint64_t v10 = *(void *)(v0 + 128);
    v9[15] = v0 + 16;
    v9[16] = v10;
    return MEMORY[0x270FA2498](sub_251BC5F98, 0, 0);
  }
}

uint64_t sub_251BC7428()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251BC7524, 0, 0);
}

uint64_t sub_251BC7524()
{
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E190);
  int v3 = swift_dynamicCast();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v1 - 8) + 56))(v2, v3 ^ 1u, 1, v1);
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t dispatch thunk of HMCharacteristicValueLoadingStateHelper.hasReadInProgress.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HMCharacteristicValueLoadingStateHelper.hasWriteInProgress.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of HMCharacteristicValueLoadingStateHelper.error.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of HMCharacteristicValueLoadingStateHelper.hasValidRead.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t ScrubberElement.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ReachabilityEvent();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CameraClip();
  MEMORY[0x270FA5388](v7 - 8);
  id v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ScrubberElement(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251BC796C(v2, (uint64_t)v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_251BC79D0((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ReachabilityEvent);
    uint64_t v13 = sub_251F34DA0();
    uint64_t v14 = *(void *)(v13 - 8);
    MEMORY[0x270FA5388](v13);
    uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v6, v13);
    sub_251BC7A38((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ReachabilityEvent);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a1, v16, v13);
  }
  else
  {
    sub_251BC79D0((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CameraClip);
    uint64_t v18 = sub_251F34DA0();
    uint64_t v19 = *(void *)(v18 - 8);
    MEMORY[0x270FA5388](v18);
    uint64_t v21 = (char *)&v22 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v21, v9, v18);
    sub_251BC7A38((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CameraClip);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v19 + 32))(a1, v21, v18);
  }
}

uint64_t type metadata accessor for ScrubberElement(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269B9F920);
}

uint64_t sub_251BC796C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScrubberElement(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_251BC79D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251BC7A38(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t ScrubberElement.significantEvents.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CameraClip();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ScrubberElement(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251BC796C(v1, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_251BC7A38((uint64_t)v7, type metadata accessor for ScrubberElement);
    return MEMORY[0x263F8EE78];
  }
  else
  {
    sub_251BC79D0((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for CameraClip);
    uint64_t v8 = *(void *)&v4[*(int *)(v2 + 40)];
    swift_bridgeObjectRetain();
    sub_251BC7A38((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for CameraClip);
  }
  return v8;
}

uint64_t ScrubberElement.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ReachabilityEvent();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CameraClip();
  MEMORY[0x270FA5388](v7);
  id v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ScrubberElement(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251BC796C(v2, (uint64_t)v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_251BC79D0((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ReachabilityEvent);
    uint64_t v13 = &v6[*(int *)(v4 + 24)];
    uint64_t v14 = sub_251F34D20();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, v13, v14);
    uint64_t v15 = type metadata accessor for ReachabilityEvent;
    uint64_t v16 = (uint64_t)v6;
  }
  else
  {
    sub_251BC79D0((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CameraClip);
    Swift::String v17 = &v9[*(int *)(v7 + 24)];
    uint64_t v18 = sub_251F34D20();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, v17, v18);
    uint64_t v15 = type metadata accessor for CameraClip;
    uint64_t v16 = (uint64_t)v9;
  }
  return sub_251BC7A38(v16, (uint64_t (*)(void))v15);
}

uint64_t ScrubberElement.timelapseQualityAssetURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CameraClip();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ScrubberElement(0);
  MEMORY[0x270FA5388](v7);
  id v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251BC796C(v2, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_251F34B70();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a1, 1, 1, v10);
    uint64_t v11 = type metadata accessor for ScrubberElement;
    uint64_t v12 = (uint64_t)v9;
  }
  else
  {
    sub_251BC79D0((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CameraClip);
    sub_251A1B128((uint64_t)&v6[*(int *)(v4 + 56)], a1, &qword_269B9DB68);
    uint64_t v11 = (uint64_t (*)(void))type metadata accessor for CameraClip;
    uint64_t v12 = (uint64_t)v6;
  }
  return sub_251BC7A38(v12, v11);
}

double ScrubberElement.timelapseOffset.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CameraClip();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ScrubberElement(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251BC796C(v1, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_251BC7A38((uint64_t)v7, type metadata accessor for ScrubberElement);
    return 0.0;
  }
  else
  {
    sub_251BC79D0((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for CameraClip);
    double v8 = *(double *)&v4[*(int *)(v2 + 52)];
    sub_251BC7A38((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for CameraClip);
  }
  return v8;
}

uint64_t ScrubberElement.ID.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t static ScrubberElement.ID.== infix(_:_:)()
{
  return sub_251F34D70() & 1;
}

uint64_t ScrubberElement.ID.hash(into:)()
{
  sub_251F34DA0();
  sub_251BC96A0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA95C8]);
  return sub_251F35610();
}

uint64_t ScrubberElement.ID.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t sub_251BC82A0()
{
  return sub_251F34D70() & 1;
}

uint64_t sub_251BC82BC()
{
  return sub_251F36D00();
}

uint64_t sub_251BC832C()
{
  sub_251F34DA0();
  sub_251BC96A0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA95C8]);
  return sub_251F35610();
}

uint64_t sub_251BC8398()
{
  return sub_251F36D00();
}

uint64_t ScrubberElement.eventID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CameraClip();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ScrubberElement(0);
  MEMORY[0x270FA5388](v7);
  id v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251BC796C(v2, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a1, 1, 1, v10);
    uint64_t v11 = type metadata accessor for ScrubberElement;
    uint64_t v12 = (uint64_t)v9;
  }
  else
  {
    sub_251BC79D0((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CameraClip);
    sub_251A1B128((uint64_t)&v6[*(int *)(v4 + 20)], a1, &qword_269B9DB88);
    uint64_t v11 = (uint64_t (*)(void))type metadata accessor for CameraClip;
    uint64_t v12 = (uint64_t)v6;
  }
  return sub_251BC7A38(v12, v11);
}

uint64_t ScrubberElement.creationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ReachabilityEvent();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CameraClip();
  MEMORY[0x270FA5388](v7);
  id v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ScrubberElement(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251BC796C(v2, (uint64_t)v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_251BC79D0((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ReachabilityEvent);
    uint64_t v13 = &v6[*(int *)(v4 + 28)];
    uint64_t v14 = sub_251F34D20();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, v13, v14);
    uint64_t v15 = type metadata accessor for ReachabilityEvent;
    uint64_t v16 = (uint64_t)v6;
  }
  else
  {
    sub_251BC79D0((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CameraClip);
    Swift::String v17 = &v9[*(int *)(v7 + 28)];
    uint64_t v18 = sub_251F34D20();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, v17, v18);
    uint64_t v15 = type metadata accessor for CameraClip;
    uint64_t v16 = (uint64_t)v9;
  }
  return sub_251BC7A38(v16, (uint64_t (*)(void))v15);
}

uint64_t ScrubberElement.isComplete.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CameraClip();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ScrubberElement(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251BC796C(v1, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_251BC7A38((uint64_t)v7, type metadata accessor for ScrubberElement);
    return 0;
  }
  else
  {
    sub_251BC79D0((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for CameraClip);
    uint64_t v8 = v4[*(int *)(v2 + 32)];
    sub_251BC7A38((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for CameraClip);
  }
  return v8;
}

uint64_t ScrubberElement.duration.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CameraClip();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ScrubberElement(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251BC796C(v1, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_251BC7A38((uint64_t)v7, type metadata accessor for ScrubberElement);
    return 0;
  }
  else
  {
    sub_251BC79D0((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for CameraClip);
    uint64_t v8 = *(void *)&v4[*(int *)(v2 + 36)];
    sub_251BC7A38((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for CameraClip);
  }
  return v8;
}

uint64_t ScrubberElement.posterFrameURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CameraClip();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ScrubberElement(0);
  MEMORY[0x270FA5388](v7);
  id v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251BC796C(v2, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_251F34B70();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a1, 1, 1, v10);
    uint64_t v11 = type metadata accessor for ScrubberElement;
    uint64_t v12 = (uint64_t)v9;
  }
  else
  {
    sub_251BC79D0((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CameraClip);
    sub_251A1B128((uint64_t)&v6[*(int *)(v4 + 44)], a1, &qword_269B9DB68);
    uint64_t v11 = (uint64_t (*)(void))type metadata accessor for CameraClip;
    uint64_t v12 = (uint64_t)v6;
  }
  return sub_251BC7A38(v12, v11);
}

uint64_t ScrubberElement.timelapseID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CameraClip();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ScrubberElement(0);
  MEMORY[0x270FA5388](v7);
  id v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251BC796C(v2, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a1, 1, 1, v10);
    uint64_t v11 = type metadata accessor for ScrubberElement;
    uint64_t v12 = (uint64_t)v9;
  }
  else
  {
    sub_251BC79D0((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CameraClip);
    sub_251A1B128((uint64_t)&v6[*(int *)(v4 + 48)], a1, &qword_269B9DB88);
    uint64_t v11 = (uint64_t (*)(void))type metadata accessor for CameraClip;
    uint64_t v12 = (uint64_t)v6;
  }
  return sub_251BC7A38(v12, v11);
}

uint64_t ScrubberElement.highQualityAssetURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CameraClip();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ScrubberElement(0);
  MEMORY[0x270FA5388](v7);
  id v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251BC796C(v2, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_251F34B70();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a1, 1, 1, v10);
    uint64_t v11 = type metadata accessor for ScrubberElement;
    uint64_t v12 = (uint64_t)v9;
  }
  else
  {
    sub_251BC79D0((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CameraClip);
    sub_251A1B128((uint64_t)&v6[*(int *)(v4 + 60)], a1, &qword_269B9DB68);
    uint64_t v11 = (uint64_t (*)(void))type metadata accessor for CameraClip;
    uint64_t v12 = (uint64_t)v6;
  }
  return sub_251BC7A38(v12, v11);
}

uint64_t ScrubberElement.hash(into:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ReachabilityEvent();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CameraClip();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ScrubberElement(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251BC796C(v1, (uint64_t)v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_251BC79D0((uint64_t)v11, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ReachabilityEvent);
    sub_251F36CB0();
    sub_251F34DA0();
    sub_251BC96A0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA95C8]);
    sub_251F35610();
    sub_251F36CC0();
    sub_251F34D20();
    sub_251BC96A0(&qword_269B9CF80, MEMORY[0x270FA9220]);
    sub_251F35610();
    sub_251F35610();
    uint64_t v12 = type metadata accessor for ReachabilityEvent;
    uint64_t v13 = (uint64_t)v5;
  }
  else
  {
    sub_251BC79D0((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CameraClip);
    sub_251F36CB0();
    CameraClip.hash(into:)(a1);
    uint64_t v12 = type metadata accessor for CameraClip;
    uint64_t v13 = (uint64_t)v8;
  }
  return sub_251BC7A38(v13, (uint64_t (*)(void))v12);
}

uint64_t ScrubberElement.hashValue.getter()
{
  sub_251F36CA0();
  ScrubberElement.hash(into:)((uint64_t)v1);
  return sub_251F36D00();
}

uint64_t sub_251BC9250()
{
  sub_251F36CA0();
  ScrubberElement.hash(into:)((uint64_t)v1);
  return sub_251F36D00();
}

uint64_t sub_251BC9294()
{
  sub_251F36CA0();
  ScrubberElement.hash(into:)((uint64_t)v1);
  return sub_251F36D00();
}

BOOL _s13HomeDataModel15ScrubberElementO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReachabilityEvent();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CameraClip();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ScrubberElement(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (uint64_t *)((char *)&v25 - v14);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F940);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t)&v19[*(int *)(v17 + 56)];
  sub_251BC796C(a1, (uint64_t)v19);
  sub_251BC796C(a2, v20);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_251BC796C((uint64_t)v19, (uint64_t)v15);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_251BC79D0(v20, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CameraClip);
      BOOL v21 = _s13HomeDataModel10CameraClipV2eeoiySbAC_ACtFZ_0(v15, (uint64_t)v9);
      sub_251BC7A38((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CameraClip);
      sub_251BC7A38((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for CameraClip);
      sub_251BC7A38((uint64_t)v19, type metadata accessor for ScrubberElement);
      return v21;
    }
    uint64_t v22 = type metadata accessor for CameraClip;
    uint64_t v23 = (uint64_t)v15;
    goto LABEL_11;
  }
  sub_251BC796C((uint64_t)v19, (uint64_t)v13);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v22 = type metadata accessor for ReachabilityEvent;
    uint64_t v23 = (uint64_t)v13;
LABEL_11:
    sub_251BC7A38(v23, (uint64_t (*)(void))v22);
    sub_251BCC168((uint64_t)v19);
    return 0;
  }
  sub_251BC79D0(v20, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ReachabilityEvent);
  if ((sub_251F34D70() & 1) == 0
    || v13[*(int *)(v4 + 20)] != v6[*(int *)(v4 + 20)]
    || (sub_251F34CD0() & 1) == 0
    || (sub_251F34CD0() & 1) == 0)
  {
    sub_251BC7A38((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ReachabilityEvent);
    sub_251BC7A38((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ReachabilityEvent);
    sub_251BC7A38((uint64_t)v19, type metadata accessor for ScrubberElement);
    return 0;
  }
  sub_251BC7A38((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ReachabilityEvent);
  sub_251BC7A38((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ReachabilityEvent);
  sub_251BC7A38((uint64_t)v19, type metadata accessor for ScrubberElement);
  return 1;
}

uint64_t sub_251BC96A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251BC96E8()
{
  return sub_251BC9798(&qword_269B9F908, (void (*)(uint64_t))type metadata accessor for ScrubberElement.ID);
}

uint64_t type metadata accessor for ScrubberElement.ID(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269B9F930);
}

uint64_t sub_251BC9750()
{
  return sub_251BC9798(&qword_269B9F910, (void (*)(uint64_t))type metadata accessor for ScrubberElement);
}

uint64_t sub_251BC9798(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251BC97E0()
{
  return sub_251BC9798(&qword_269B9F918, (void (*)(uint64_t))type metadata accessor for ScrubberElement.ID);
}

char *initializeBufferWithCopyOfBuffer for ScrubberElement(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = sub_251F34DA0();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = (int *)type metadata accessor for ReachabilityEvent();
      a1[v10[5]] = a2[v10[5]];
      uint64_t v11 = v10[6];
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      uint64_t v14 = sub_251F34D20();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      v15(v12, v13, v14);
      v15(&a1[v10[7]], &a2[v10[7]], v14);
    }
    else
    {
      uint64_t v17 = (int *)type metadata accessor for CameraClip();
      uint64_t v18 = v17[5];
      uint64_t v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      uint64_t v52 = *(void *)(v55 - 8);
      uint64_t v53 = *(unsigned int (**)(char *, uint64_t))(v52 + 48);
      uint64_t v50 = v7;
      uint64_t v51 = v8;
      if (v53(v20, 1))
      {
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
        memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v20, 1, v7))
        {
          uint64_t v22 = v19;
          uint64_t v23 = v52;
          memcpy(v22, v20, *(void *)(v52 + 64));
        }
        else
        {
          v9(v19, v20, v7);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v19, 0, 1, v7);
          uint64_t v22 = v19;
          uint64_t v23 = v52;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v22, 0, 1, v55);
      }
      uint64_t v24 = v17[6];
      uint64_t v25 = &a1[v24];
      uint64_t v26 = &a2[v24];
      uint64_t v27 = sub_251F34D20();
      uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
      v28(v25, v26, v27);
      v28(&a1[v17[7]], &a2[v17[7]], v27);
      a1[v17[8]] = a2[v17[8]];
      *(void *)&a1[v17[9]] = *(void *)&a2[v17[9]];
      *(void *)&a1[v17[10]] = *(void *)&a2[v17[10]];
      uint64_t v29 = v17[11];
      uint64_t v30 = &a1[v29];
      uint64_t v31 = &a2[v29];
      uint64_t v32 = sub_251F34B70();
      uint64_t v33 = *(void *)(v32 - 8);
      unint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
      swift_bridgeObjectRetain();
      uint64_t v54 = v34;
      if (v34(v31, 1, v32))
      {
        uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
        memcpy(v30, v31, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
      uint64_t v36 = v17[12];
      uint64_t v37 = &a1[v36];
      uint64_t v38 = &a2[v36];
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v53)(&a2[v36], 1, v55))
      {
        uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
        memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v38, 1, v50))
        {
          uint64_t v40 = v52;
          memcpy(v37, v38, *(void *)(v52 + 64));
        }
        else
        {
          v9(v37, v38, v50);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v37, 0, 1, v50);
          uint64_t v40 = v52;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v55);
      }
      *(void *)&a1[v17[13]] = *(void *)&a2[v17[13]];
      uint64_t v41 = v17[14];
      unint64_t v42 = &a1[v41];
      uint64_t v43 = &a2[v41];
      if (v54(&a2[v41], 1, v32))
      {
        uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
        memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v42, v43, v32);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v42, 0, 1, v32);
      }
      uint64_t v45 = v17[15];
      uint64_t v46 = &a1[v45];
      uint64_t v47 = &a2[v45];
      if (v54(v47, 1, v32))
      {
        uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
        memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v46, v47, v32);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v46, 0, 1, v32);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ScrubberElement(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(void *)(v3 - 8);
  int v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v5(a1, v3);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = type metadata accessor for ReachabilityEvent();
    uint64_t v7 = a1 + *(int *)(v6 + 24);
    uint64_t v8 = sub_251F34D20();
    uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    ((void (*)(void *__return_ptr, uint64_t, uint64_t))v27)((void *)(v8 - 8), v7, v8);
    uint64_t v9 = a1 + *(int *)(v6 + 28);
    uint64_t v10 = v8;
    uint64_t v11 = v27;
LABEL_15:
    return v11(v9, v10);
  }
  uint64_t v12 = (int *)type metadata accessor for CameraClip();
  uint64_t v13 = a1 + v12[5];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  if (!v26(v13, 1, v14) && !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v13, 1, v3)) {
    v5(v13, v3);
  }
  uint64_t v25 = v5;
  uint64_t v15 = a1 + v12[6];
  uint64_t v16 = sub_251F34D20();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);
  v17(v15, v16);
  v17(a1 + v12[7], v16);
  swift_bridgeObjectRelease();
  uint64_t v18 = a1 + v12[11];
  uint64_t v19 = sub_251F34B70();
  uint64_t v28 = *(void *)(v19 - 8);
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  if (!v20(v18, 1, v19)) {
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v18, v19);
  }
  uint64_t v21 = a1 + v12[12];
  if (!v26(v21, 1, v14) && !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v21, 1, v3)) {
    v25(v21, v3);
  }
  uint64_t v22 = a1 + v12[14];
  if (!v20(v22, 1, v19)) {
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v22, v19);
  }
  uint64_t v23 = a1 + v12[15];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v20)(v23, 1, v19);
  if (!result)
  {
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 8);
    uint64_t v9 = v23;
    uint64_t v10 = v19;
    goto LABEL_15;
  }
  return result;
}

char *initializeWithCopy for ScrubberElement(char *a1, char *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = sub_251F34DA0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = (int *)type metadata accessor for ReachabilityEvent();
    a1[v8[5]] = a2[v8[5]];
    uint64_t v9 = v8[6];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = sub_251F34D20();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    v13(v10, v11, v12);
    v13(&a1[v8[7]], &a2[v8[7]], v12);
  }
  else
  {
    uint64_t v50 = v7;
    uint64_t v14 = (int *)type metadata accessor for CameraClip();
    uint64_t v15 = v14[5];
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v51 = *(void *)(v18 - 8);
    uint64_t v52 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v51 + 48);
    uint64_t v56 = v18;
    uint64_t v54 = v5;
    if (v52(v17, 1, v18))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
      memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v17, 1, v5))
      {
        uint64_t v20 = v51;
        memcpy(v16, v17, *(void *)(v51 + 64));
      }
      else
      {
        v7(v16, v17, v5);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v16, 0, 1, v5);
        uint64_t v20 = v51;
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v16, 0, 1, v18);
    }
    uint64_t v21 = v14[6];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    uint64_t v24 = sub_251F34D20();
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
    v25(v22, v23, v24);
    v25(&a1[v14[7]], &a2[v14[7]], v24);
    a1[v14[8]] = a2[v14[8]];
    *(void *)&a1[v14[9]] = *(void *)&a2[v14[9]];
    *(void *)&a1[v14[10]] = *(void *)&a2[v14[10]];
    uint64_t v26 = v14[11];
    uint64_t v27 = &a1[v26];
    uint64_t v28 = &a2[v26];
    uint64_t v29 = sub_251F34B70();
    uint64_t v30 = *(void *)(v29 - 8);
    uint64_t v31 = *(unsigned int (**)(void, uint64_t, uint64_t))(v30 + 48);
    swift_bridgeObjectRetain();
    uint64_t v53 = (unsigned int (*)(char *, uint64_t, uint64_t))v31;
    uint64_t v55 = v30;
    if (v31(v28, 1, v29))
    {
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
      memcpy(v27, v28, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    uint64_t v33 = v29;
    uint64_t v34 = v14[12];
    uint64_t v35 = &a1[v34];
    uint64_t v36 = &a2[v34];
    if (v52(&a2[v34], 1, v56))
    {
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v36, 1, v54))
      {
        uint64_t v38 = v51;
        memcpy(v35, v36, *(void *)(v51 + 64));
      }
      else
      {
        v50(v35, v36, v54);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v35, 0, 1, v54);
        uint64_t v38 = v51;
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v56);
    }
    *(void *)&a1[v14[13]] = *(void *)&a2[v14[13]];
    uint64_t v39 = v14[14];
    uint64_t v40 = &a1[v39];
    uint64_t v41 = &a2[v39];
    if (v53(&a2[v39], 1, v33))
    {
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
      uint64_t v43 = v55;
    }
    else
    {
      uint64_t v44 = v41;
      uint64_t v43 = v55;
      (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v40, v44, v33);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v40, 0, 1, v33);
    }
    uint64_t v45 = v14[15];
    uint64_t v46 = &a1[v45];
    uint64_t v47 = &a2[v45];
    if (v53(v47, 1, v33))
    {
      uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
      memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v46, v47, v33);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v46, 0, 1, v33);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for ScrubberElement(uint64_t a1, char *a2)
{
  if ((char *)a1 != a2)
  {
    sub_251BC7A38(a1, type metadata accessor for ScrubberElement);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = sub_251F34DA0();
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(v6 + 16);
    v7((void *)a1, a2, v5);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = (int *)type metadata accessor for ReachabilityEvent();
      *(unsigned char *)(a1 + v8[5]) = a2[v8[5]];
      uint64_t v9 = v8[6];
      uint64_t v10 = a1 + v9;
      uint64_t v11 = &a2[v9];
      uint64_t v12 = sub_251F34D20();
      uint64_t v13 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      v13(v10, v11, v12);
      v13(a1 + v8[7], &a2[v8[7]], v12);
    }
    else
    {
      uint64_t v50 = v7;
      uint64_t v14 = (int *)type metadata accessor for CameraClip();
      uint64_t v15 = v14[5];
      uint64_t v16 = (void *)(a1 + v15);
      uint64_t v17 = &a2[v15];
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      uint64_t v51 = *(void *)(v18 - 8);
      uint64_t v52 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v51 + 48);
      uint64_t v56 = v18;
      uint64_t v54 = v5;
      if (v52(v17, 1, v18))
      {
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
        memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v17, 1, v5))
        {
          uint64_t v20 = v51;
          memcpy(v16, v17, *(void *)(v51 + 64));
        }
        else
        {
          v7(v16, v17, v5);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v16, 0, 1, v5);
          uint64_t v20 = v51;
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v16, 0, 1, v18);
      }
      uint64_t v21 = v14[6];
      uint64_t v22 = a1 + v21;
      uint64_t v23 = &a2[v21];
      uint64_t v24 = sub_251F34D20();
      uint64_t v25 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 16);
      v25(v22, v23, v24);
      v25(a1 + v14[7], &a2[v14[7]], v24);
      *(unsigned char *)(a1 + v14[8]) = a2[v14[8]];
      *(void *)(a1 + v14[9]) = *(void *)&a2[v14[9]];
      *(void *)(a1 + v14[10]) = *(void *)&a2[v14[10]];
      uint64_t v26 = v14[11];
      uint64_t v27 = (void *)(a1 + v26);
      uint64_t v28 = &a2[v26];
      uint64_t v29 = sub_251F34B70();
      uint64_t v30 = *(void *)(v29 - 8);
      uint64_t v31 = *(unsigned int (**)(void, uint64_t, uint64_t))(v30 + 48);
      swift_bridgeObjectRetain();
      uint64_t v53 = (unsigned int (*)(char *, uint64_t, uint64_t))v31;
      uint64_t v55 = v30;
      if (v31(v28, 1, v29))
      {
        uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
        memcpy(v27, v28, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      uint64_t v33 = v29;
      uint64_t v34 = v14[12];
      uint64_t v35 = (void *)(a1 + v34);
      uint64_t v36 = &a2[v34];
      if (v52(&a2[v34], 1, v56))
      {
        uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v36, 1, v54))
        {
          uint64_t v38 = v51;
          memcpy(v35, v36, *(void *)(v51 + 64));
        }
        else
        {
          v50(v35, v36, v54);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v35, 0, 1, v54);
          uint64_t v38 = v51;
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v56);
      }
      *(void *)(a1 + v14[13]) = *(void *)&a2[v14[13]];
      uint64_t v39 = v14[14];
      uint64_t v40 = (void *)(a1 + v39);
      uint64_t v41 = &a2[v39];
      if (v53(&a2[v39], 1, v33))
      {
        uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
        memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
        uint64_t v43 = v55;
      }
      else
      {
        uint64_t v44 = v41;
        uint64_t v43 = v55;
        (*(void (**)(void *, char *, uint64_t))(v55 + 16))(v40, v44, v33);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v55 + 56))(v40, 0, 1, v33);
      }
      uint64_t v45 = v14[15];
      uint64_t v46 = (void *)(a1 + v45);
      uint64_t v47 = &a2[v45];
      if (v53(v47, 1, v33))
      {
        uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
        memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v43 + 16))(v46, v47, v33);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v43 + 56))(v46, 0, 1, v33);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for ScrubberElement(char *a1, char *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = sub_251F34DA0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = (int *)type metadata accessor for ReachabilityEvent();
    a1[v8[5]] = a2[v8[5]];
    uint64_t v9 = v8[6];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = sub_251F34D20();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
    v13(v10, v11, v12);
    v13(&a1[v8[7]], &a2[v8[7]], v12);
  }
  else
  {
    uint64_t v14 = (int *)type metadata accessor for CameraClip();
    uint64_t v15 = v14[5];
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v51 = *(void *)(v55 - 8);
    uint64_t v52 = *(unsigned int (**)(const void *, uint64_t))(v51 + 48);
    uint64_t v49 = v7;
    uint64_t v50 = v6;
    if (v52(v17, 1))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      uint64_t v48 = v5;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v17, 1, v5))
      {
        uint64_t v19 = v16;
        uint64_t v20 = v51;
        memcpy(v19, v17, *(void *)(v51 + 64));
      }
      else
      {
        v7(v16, v17, v5);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v16, 0, 1, v5);
        uint64_t v19 = v16;
        uint64_t v20 = v51;
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v19, 0, 1, v55);
      uint64_t v5 = v48;
    }
    uint64_t v21 = v14[6];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    uint64_t v24 = sub_251F34D20();
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32);
    v25(v22, v23, v24);
    v25(&a1[v14[7]], &a2[v14[7]], v24);
    a1[v14[8]] = a2[v14[8]];
    *(void *)&a1[v14[9]] = *(void *)&a2[v14[9]];
    *(void *)&a1[v14[10]] = *(void *)&a2[v14[10]];
    uint64_t v26 = v14[11];
    uint64_t v27 = &a1[v26];
    uint64_t v28 = &a2[v26];
    uint64_t v29 = sub_251F34B70();
    uint64_t v30 = *(void *)(v29 - 8);
    uint64_t v53 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48);
    if (v53(v28, 1, v29))
    {
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
      memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    uint64_t v32 = v14[12];
    uint64_t v33 = &a1[v32];
    uint64_t v34 = &a2[v32];
    uint64_t v54 = v30;
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(&a2[v32], 1, v55))
    {
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v34, 1, v5))
      {
        uint64_t v36 = v51;
        memcpy(v33, v34, *(void *)(v51 + 64));
      }
      else
      {
        v49(v33, v34, v5);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v33, 0, 1, v5);
        uint64_t v36 = v51;
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v55);
    }
    *(void *)&a1[v14[13]] = *(void *)&a2[v14[13]];
    uint64_t v37 = v14[14];
    uint64_t v38 = &a1[v37];
    uint64_t v39 = &a2[v37];
    if (v53(&a2[v37], 1, v29))
    {
      uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
      uint64_t v41 = v54;
    }
    else
    {
      uint64_t v42 = v39;
      uint64_t v41 = v54;
      (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v38, v42, v29);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v38, 0, 1, v29);
    }
    uint64_t v43 = v14[15];
    uint64_t v44 = &a1[v43];
    uint64_t v45 = &a2[v43];
    if (v53(v45, 1, v29))
    {
      uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v44, v45, v29);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v44, 0, 1, v29);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for ScrubberElement(uint64_t a1, char *a2)
{
  if ((char *)a1 != a2)
  {
    sub_251BC7A38(a1, type metadata accessor for ScrubberElement);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = sub_251F34DA0();
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(v6 + 32);
    v7((void *)a1, a2, v5);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = (int *)type metadata accessor for ReachabilityEvent();
      *(unsigned char *)(a1 + v8[5]) = a2[v8[5]];
      uint64_t v9 = v8[6];
      uint64_t v10 = a1 + v9;
      uint64_t v11 = &a2[v9];
      uint64_t v12 = sub_251F34D20();
      uint64_t v13 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v12 - 8) + 32);
      v13(v10, v11, v12);
      v13(a1 + v8[7], &a2[v8[7]], v12);
    }
    else
    {
      uint64_t v14 = (int *)type metadata accessor for CameraClip();
      uint64_t v15 = v14[5];
      uint64_t v16 = (void *)(a1 + v15);
      uint64_t v17 = &a2[v15];
      uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      uint64_t v51 = *(void *)(v55 - 8);
      uint64_t v52 = *(unsigned int (**)(const void *, uint64_t))(v51 + 48);
      uint64_t v49 = v7;
      uint64_t v50 = v6;
      if (v52(v17, 1))
      {
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
        memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        uint64_t v48 = v5;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v17, 1, v5))
        {
          uint64_t v19 = v16;
          uint64_t v20 = v51;
          memcpy(v19, v17, *(void *)(v51 + 64));
        }
        else
        {
          v7(v16, v17, v5);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v16, 0, 1, v5);
          uint64_t v19 = v16;
          uint64_t v20 = v51;
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v19, 0, 1, v55);
        uint64_t v5 = v48;
      }
      uint64_t v21 = v14[6];
      uint64_t v22 = a1 + v21;
      uint64_t v23 = &a2[v21];
      uint64_t v24 = sub_251F34D20();
      uint64_t v25 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 32);
      v25(v22, v23, v24);
      v25(a1 + v14[7], &a2[v14[7]], v24);
      *(unsigned char *)(a1 + v14[8]) = a2[v14[8]];
      *(void *)(a1 + v14[9]) = *(void *)&a2[v14[9]];
      *(void *)(a1 + v14[10]) = *(void *)&a2[v14[10]];
      uint64_t v26 = v14[11];
      uint64_t v27 = (void *)(a1 + v26);
      uint64_t v28 = &a2[v26];
      uint64_t v29 = sub_251F34B70();
      uint64_t v30 = *(void *)(v29 - 8);
      uint64_t v53 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48);
      if (v53(v28, 1, v29))
      {
        uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
        memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      uint64_t v32 = v14[12];
      uint64_t v33 = (void *)(a1 + v32);
      uint64_t v34 = &a2[v32];
      uint64_t v54 = v30;
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(&a2[v32], 1, v55))
      {
        uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
        memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v34, 1, v5))
        {
          uint64_t v36 = v51;
          memcpy(v33, v34, *(void *)(v51 + 64));
        }
        else
        {
          v49(v33, v34, v5);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v50 + 56))(v33, 0, 1, v5);
          uint64_t v36 = v51;
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v55);
      }
      *(void *)(a1 + v14[13]) = *(void *)&a2[v14[13]];
      uint64_t v37 = v14[14];
      uint64_t v38 = (void *)(a1 + v37);
      uint64_t v39 = &a2[v37];
      if (v53(&a2[v37], 1, v29))
      {
        uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
        memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
        uint64_t v41 = v54;
      }
      else
      {
        uint64_t v42 = v39;
        uint64_t v41 = v54;
        (*(void (**)(void *, char *, uint64_t))(v54 + 32))(v38, v42, v29);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v54 + 56))(v38, 0, 1, v29);
      }
      uint64_t v43 = v14[15];
      uint64_t v44 = (void *)(a1 + v43);
      uint64_t v45 = &a2[v43];
      if (v53(v45, 1, v29))
      {
        uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
        memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v41 + 32))(v44, v45, v29);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v44, 0, 1, v29);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_251BCBD18()
{
  uint64_t result = type metadata accessor for CameraClip();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ReachabilityEvent();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ScrubberElement.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t initializeWithCopy for ScrubberElement.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for ScrubberElement.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for ScrubberElement.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for ScrubberElement.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScrubberElement.ID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251BCBFEC);
}

uint64_t sub_251BCBFEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ScrubberElement.ID(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251BCC06C);
}

uint64_t sub_251BCC06C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_251BCC0DC()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_251BCC168(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F940);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_251BCC1C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F4C8);
  uint64_t v32 = *(void *)(v40 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v40);
  uint64_t v36 = (_WORD *)((char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (_WORD *)((char *)&v32 - v6);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (_WORD *)((char *)&v32 - v8);
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v34 = a1 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v35 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v37 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v15 = 0;
  while (v13)
  {
    unint64_t v16 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    unint64_t v17 = v16 | (v15 << 6);
LABEL_23:
    uint64_t v21 = *(void *)(v37 + 56);
    __int16 v22 = *(_WORD *)(*(void *)(v37 + 48) + 2 * v17);
    uint64_t v23 = (int *)(type metadata accessor for StaticEndpoint() - 8);
    uint64_t v24 = v21 + *(void *)(*(void *)v23 + 72) * v17;
    uint64_t v25 = v40;
    sub_251BD0058(v24, (uint64_t)v9 + *(int *)(v40 + 48), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    *uint64_t v9 = v22;
    sub_251A4ECF0((uint64_t)v9, (uint64_t)v7, &qword_26B21F4C8);
    uint64_t v26 = *(int *)(v25 + 48);
    uint64_t v27 = (uint64_t)v36 + v26;
    *uint64_t v36 = *v7;
    sub_251BD0058((uint64_t)v7 + v26, v27, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    uint64_t v28 = *(void *)(v27 + v23[11]);
    if (*(void *)(v28 + 16))
    {
      unint64_t v29 = sub_2519FE614(2);
      if (v30)
      {
        sub_251A1A930(*(void *)(v28 + 56) + (v29 << 8), (uint64_t)v38);
        sub_251A1A930((uint64_t)v38, (uint64_t)v39);
        if (sub_251A4DB2C((uint64_t)v39) == 6)
        {
          sub_251A4E128((uint64_t)v39);
          sub_251BD00C0(v27, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
          swift_release();
          uint64_t v31 = v33;
          sub_251A4ECF0((uint64_t)v7, v33, &qword_26B21F4C8);
          return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(v31, 0, 1, v40);
        }
      }
    }
    sub_251BD00C0(v27, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    uint64_t result = sub_251A1B064((uint64_t)v7, &qword_26B21F4C8);
  }
  int64_t v18 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v18 >= v35) {
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v34 + 8 * v18);
  ++v15;
  if (v19) {
    goto LABEL_22;
  }
  int64_t v15 = v18 + 1;
  if (v18 + 1 >= v35) {
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v34 + 8 * v15);
  if (v19) {
    goto LABEL_22;
  }
  int64_t v15 = v18 + 2;
  if (v18 + 2 >= v35) {
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v34 + 8 * v15);
  if (v19) {
    goto LABEL_22;
  }
  int64_t v15 = v18 + 3;
  if (v18 + 3 >= v35) {
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v34 + 8 * v15);
  if (v19)
  {
LABEL_22:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v15 << 6);
    goto LABEL_23;
  }
  int64_t v20 = v18 + 4;
  if (v20 >= v35)
  {
LABEL_27:
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v33, 1, 1, v40);
  }
  unint64_t v19 = *(void *)(v34 + 8 * v20);
  if (v19)
  {
    int64_t v15 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v15 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v15 >= v35) {
      goto LABEL_27;
    }
    unint64_t v19 = *(void *)(v34 + 8 * v15);
    ++v20;
    if (v19) {
      goto LABEL_22;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_251BCC5A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F4C8);
  uint64_t v32 = *(void *)(v42 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v42);
  uint64_t v36 = (_WORD *)((char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (_WORD *)((char *)&v32 - v6);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (_WORD *)((char *)&v32 - v8);
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v34 = a1 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v35 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v37 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v15 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v16 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v17 = v16 | (v15 << 6);
      goto LABEL_23;
    }
    int64_t v18 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v18 >= v35) {
      goto LABEL_31;
    }
    unint64_t v19 = *(void *)(v34 + 8 * v18);
    ++v15;
    if (!v19)
    {
      int64_t v15 = v18 + 1;
      if (v18 + 1 >= v35) {
        goto LABEL_31;
      }
      unint64_t v19 = *(void *)(v34 + 8 * v15);
      if (!v19)
      {
        int64_t v15 = v18 + 2;
        if (v18 + 2 >= v35) {
          goto LABEL_31;
        }
        unint64_t v19 = *(void *)(v34 + 8 * v15);
        if (!v19)
        {
          int64_t v15 = v18 + 3;
          if (v18 + 3 >= v35) {
            goto LABEL_31;
          }
          unint64_t v19 = *(void *)(v34 + 8 * v15);
          if (!v19) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v15 << 6);
LABEL_23:
    uint64_t v21 = *(void *)(v37 + 56);
    __int16 v22 = *(_WORD *)(*(void *)(v37 + 48) + 2 * v17);
    uint64_t v23 = type metadata accessor for StaticEndpoint();
    uint64_t v24 = v21 + *(void *)(*(void *)(v23 - 8) + 72) * v17;
    uint64_t v25 = v42;
    sub_251BD0058(v24, (uint64_t)v9 + *(int *)(v42 + 48), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    *uint64_t v9 = v22;
    sub_251A4ECF0((uint64_t)v9, (uint64_t)v7, &qword_26B21F4C8);
    uint64_t v26 = *(int *)(v25 + 48);
    uint64_t v27 = (uint64_t)v36 + v26;
    *uint64_t v36 = *v7;
    sub_251BD0058((uint64_t)v7 + v26, v27, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    uint64_t v40 = &type metadata for HomeKitFeatures;
    unint64_t v41 = sub_251A4DA94();
    v39[0] = 4;
    LOBYTE(v21) = sub_251F34F60();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
    if (v21) {
      goto LABEL_36;
    }
    if (qword_269B9C4C0 != -1) {
      swift_once();
    }
    if (byte_269BA38B2 == 1)
    {
LABEL_36:
      uint64_t v28 = *(void *)(v27 + *(int *)(v23 + 36));
      if (*(void *)(v28 + 16))
      {
        unint64_t v29 = sub_2519FE614(23);
        if (v30)
        {
          sub_251A1A930(*(void *)(v28 + 56) + (v29 << 8), (uint64_t)v38);
          sub_251A1A930((uint64_t)v38, (uint64_t)v39);
          if (sub_251A4DB2C((uint64_t)v39) == 2)
          {
            sub_251A4E128((uint64_t)v39);
            sub_251BD00C0(v27, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
            swift_release();
            uint64_t v31 = v33;
            sub_251A4ECF0((uint64_t)v7, v33, &qword_26B21F4C8);
            return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(v31, 0, 1, v42);
          }
        }
      }
    }
    sub_251BD00C0(v27, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    uint64_t result = sub_251A1B064((uint64_t)v7, &qword_26B21F4C8);
  }
  int64_t v20 = v18 + 4;
  if (v20 >= v35)
  {
LABEL_31:
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v33, 1, 1, v42);
  }
  unint64_t v19 = *(void *)(v34 + 8 * v20);
  if (v19)
  {
    int64_t v15 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v15 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v15 >= v35) {
      goto LABEL_31;
    }
    unint64_t v19 = *(void *)(v34 + 8 * v15);
    ++v20;
    if (v19) {
      goto LABEL_22;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_251BCCA04(int a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  v119 = &v111[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v111[-v8];
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = &v111[-v10];
  uint64_t v120 = type metadata accessor for StaticService();
  unint64_t v123 = *(unsigned char **)(v120 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v120);
  uint64_t v117 = &v111[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  unint64_t v16 = &v111[-v15];
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  *(void *)&long long v122 = &v111[-v18];
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v21 = &v111[-v20];
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v121 = &v111[-v23];
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = &v111[-v24];
  uint64_t v26 = type metadata accessor for StaticAccessory(0);
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  unint64_t v29 = &v111[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v30 = *(unsigned __int16 *)(v2 + *(int *)(v27 + 88));
  uint64_t result = sub_251BD0058(v2, (uint64_t)v29, type metadata accessor for StaticAccessory);
  if ((~v30 & 0xFEFC) != 0)
  {
    int v32 = *(unsigned __int16 *)&v29[*(int *)(v26 + 88)];
    if ((~v32 & 0xFEFC) == 0) {
      goto LABEL_137;
    }
    sub_251BD00C0((uint64_t)v29, type metadata accessor for StaticAccessory);
    if ((v32 & 0xC000) != 0x4000)
    {
      uint64_t v35 = 0;
      unint64_t v123 = 0;
      return v35;
    }
  }
  else
  {
    sub_251BD00C0((uint64_t)v29, type metadata accessor for StaticAccessory);
  }
  StaticAccessory.primaryStaticService.getter((uint64_t)v11);
  uint64_t v33 = v123 + 48;
  uint64_t v34 = (unsigned int (*)(unsigned char *, uint64_t, uint64_t))*((void *)v123 + 6);
  if (v34(v11, 1, v120) == 1)
  {
    sub_251A1B064((uint64_t)v11, qword_26B21EE20);
    uint64_t v35 = sub_251BCD8F0();
    unint64_t v123 = v36;
    return v35;
  }
  uint64_t v115 = v34;
  uint64_t v118 = v33;
  sub_251BD0120((uint64_t)v11, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for StaticService);
  uint64_t v37 = swift_bridgeObjectRetain();
  uint64_t v38 = sub_251B83C30(v37);
  uint64_t v39 = (unsigned char *)sub_251EE10DC(v38);
  swift_bridgeObjectRelease();
  uint64_t v40 = v120;
  uint64_t v116 = v25;
  uint64_t v113 = v2;
  int v112 = a1;
  if ((a1 & 1) == 0) {
    goto LABEL_49;
  }
  StaticAccessory.primaryStaticService.getter((uint64_t)v9);
  if (v115(v9, 1, v40) == 1)
  {
    sub_251A1B064((uint64_t)v9, qword_26B21EE20);
    char v41 = 0;
  }
  else
  {
    char v41 = v9[*(int *)(v40 + 88)];
    sub_251BD00C0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  char v126 = v41;
  if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v42 == 0x8000000251F65100)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v43 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if ((v43 & 1) == 0) {
      goto LABEL_49;
    }
  }
  uint64_t v44 = v39 + 56;
  uint64_t v45 = 1 << v39[32];
  uint64_t v46 = -1;
  if (v45 < 64) {
    uint64_t v46 = ~(-1 << v45);
  }
  unint64_t v47 = v46 & *((void *)v39 + 7);
  int64_t v114 = (unint64_t)(v45 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v48 = 0;
  if (!v47) {
    goto LABEL_20;
  }
LABEL_19:
  unint64_t v49 = __clz(__rbit64(v47));
  v47 &= v47 - 1;
  for (unint64_t i = v49 | (v48 << 6); ; unint64_t i = __clz(__rbit64(v52)) + (v48 << 6))
  {
    uint64_t v54 = v121;
    sub_251BD0058(*((void *)v39 + 6) + *((void *)v123 + 9) * i, (uint64_t)v121, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251BD0120((uint64_t)v54, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for StaticService);
    char v55 = v21[*(int *)(v40 + 88)];
    char v125 = byte_2702623A8;
    char v124 = v55;
    unint64_t v56 = ServiceKind.rawValue.getter();
    uint64_t v58 = v57;
    if (v56 == ServiceKind.rawValue.getter() && v58 == v59) {
      goto LABEL_46;
    }
    char v60 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v60) {
      goto LABEL_47;
    }
    char v125 = byte_2702623A9;
    char v124 = v55;
    unint64_t v61 = ServiceKind.rawValue.getter();
    uint64_t v63 = v62;
    if (v61 == ServiceKind.rawValue.getter() && v63 == v64)
    {
LABEL_46:
      swift_bridgeObjectRelease_n();
LABEL_47:
      sub_251BD00C0((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for StaticService);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v35 = sub_251BCDDEC();
      unint64_t v123 = v66;
      sub_251BD00C0((uint64_t)v116, (uint64_t (*)(void))type metadata accessor for StaticService);
      return v35;
    }
    char v65 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v65) {
      goto LABEL_47;
    }
    uint64_t result = sub_251BD00C0((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v40 = v120;
    if (v47) {
      goto LABEL_19;
    }
LABEL_20:
    int64_t v51 = v48 + 1;
    if (__OFADD__(v48, 1)) {
      goto LABEL_134;
    }
    if (v51 >= v114) {
      goto LABEL_48;
    }
    unint64_t v52 = *(void *)&v44[8 * v51];
    ++v48;
    if (!v52)
    {
      int64_t v48 = v51 + 1;
      if (v51 + 1 >= v114) {
        goto LABEL_48;
      }
      unint64_t v52 = *(void *)&v44[8 * v48];
      if (!v52)
      {
        int64_t v48 = v51 + 2;
        if (v51 + 2 >= v114) {
          goto LABEL_48;
        }
        unint64_t v52 = *(void *)&v44[8 * v48];
        if (!v52)
        {
          int64_t v48 = v51 + 3;
          if (v51 + 3 >= v114) {
            goto LABEL_48;
          }
          unint64_t v52 = *(void *)&v44[8 * v48];
          if (!v52)
          {
            int64_t v48 = v51 + 4;
            if (v51 + 4 >= v114) {
              goto LABEL_48;
            }
            unint64_t v52 = *(void *)&v44[8 * v48];
            if (!v52) {
              break;
            }
          }
        }
      }
    }
LABEL_37:
    unint64_t v47 = (v52 - 1) & v52;
  }
  int64_t v53 = v51 + 5;
  if (v53 >= v114) {
    goto LABEL_48;
  }
  unint64_t v52 = *(void *)&v44[8 * v53];
  if (v52)
  {
    int64_t v48 = v53;
    goto LABEL_37;
  }
  while (1)
  {
    int64_t v48 = v53 + 1;
    if (__OFADD__(v53, 1)) {
      goto LABEL_136;
    }
    if (v48 >= v114) {
      break;
    }
    unint64_t v52 = *(void *)&v44[8 * v48];
    ++v53;
    if (v52) {
      goto LABEL_37;
    }
  }
LABEL_48:
  swift_release();
LABEL_49:
  uint64_t v67 = v119;
  sub_251ABD970((uint64_t)v39, (uint64_t)v119);
  if (v115(v67, 1, v40) == 1)
  {
    sub_251A1B064((uint64_t)v67, qword_26B21EE20);
    int v68 = 53;
  }
  else
  {
    int v68 = v67[*(int *)(v40 + 88)];
    sub_251BD00C0((uint64_t)v67, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  uint64_t v35 = (uint64_t)v117;
  uint64_t v69 = *((void *)v39 + 7);
  uint64_t v118 = v39 + 56;
  char v70 = 1;
  uint64_t v71 = 1 << v39[32];
  uint64_t v72 = -1;
  if (v71 < 64) {
    uint64_t v72 = ~(-1 << v71);
  }
  uint64_t v73 = v72 & v69;
  v119 = (unsigned char *)((unint64_t)(v71 + 63) >> 6);
  uint64_t v121 = v39;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v74 = 0;
  uint64_t v75 = 0;
  uint64_t v76 = 0;
  uint64_t v77 = 0;
  while (2)
  {
    if (v73)
    {
      unint64_t v78 = __clz(__rbit64(v73));
      v73 &= v73 - 1;
      unint64_t v79 = v78 | (v74 << 6);
LABEL_77:
      uint64_t v83 = v122;
      sub_251BD0058(*((void *)v121 + 6) + *((void *)v123 + 9) * v79, v122, (uint64_t (*)(void))type metadata accessor for StaticService);
      sub_251BD0120(v83, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t result = StaticService.isActivated.getter();
      if (result)
      {
        BOOL v84 = __OFADD__(v77++, 1);
        if (v84)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
          goto LABEL_135;
        }
      }
      else
      {
        BOOL v84 = __OFADD__(v76++, 1);
        if (v84) {
          goto LABEL_132;
        }
      }
      BOOL v84 = __OFADD__(v75++, 1);
      if (v84)
      {
        __break(1u);
LABEL_128:
        if (!v76)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v35 = v120;
          uint64_t v109 = v121;
          if ((v70 & 1) == 0)
          {
LABEL_130:
            swift_bridgeObjectRelease();
            uint64_t v35 = static String.hfLocalized(_:)(0xD00000000000001ALL, 0x8000000251F6B8F0);
            uint64_t v109 = v110;
          }
LABEL_131:
          sub_251BD00C0(v73, (uint64_t (*)(void))type metadata accessor for StaticService);
          unint64_t v123 = v109;
          return v35;
        }
LABEL_113:
        swift_bridgeObjectRelease();
LABEL_114:
        sub_251BD00C0(v73, (uint64_t (*)(void))type metadata accessor for StaticService);
        swift_bridgeObjectRelease();
        return v35;
      }
      sub_251BD0058((uint64_t)v16, v35, (uint64_t (*)(void))type metadata accessor for StaticService);
      if ((v70 & (v68 != 53)) == 1)
      {
        char v85 = *(unsigned char *)(v35 + *(int *)(v120 + 88));
        char v128 = v68;
        char v127 = v85;
        unint64_t v86 = ServiceKind.rawValue.getter();
        uint64_t v88 = v87;
        if (v86 == ServiceKind.rawValue.getter() && v88 == v89) {
          char v70 = 1;
        }
        else {
          char v70 = sub_251F36B10();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v35 = (uint64_t)v117;
      }
      else
      {
        char v70 = 0;
      }
      sub_251BD00C0(v35, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t result = sub_251BD00C0((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StaticService);
      continue;
    }
    break;
  }
  uint64_t v80 = v74 + 1;
  if (__OFADD__(v74, 1)) {
    goto LABEL_133;
  }
  if (v80 >= (uint64_t)v119)
  {
LABEL_89:
    uint64_t v90 = v121;
    swift_release();
    uint64_t v35 = sub_251BCE7BC((uint64_t)v90, v112 & 1, v113, (uint64_t)v116);
    unint64_t v123 = v91;
    swift_bridgeObjectRelease();
    static String.hfLocalized(_:)(0xD000000000000017, 0x8000000251F6AB50);
    uint64_t v92 = (unsigned char *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
    uint64_t v93 = swift_allocObject();
    long long v122 = xmmword_251F38650;
    uint64_t v94 = MEMORY[0x263F8D6C8];
    *(_OWORD *)(v93 + 16) = xmmword_251F38650;
    uint64_t v95 = MEMORY[0x263F8D750];
    *(void *)(v93 + 56) = v94;
    *(void *)(v93 + 64) = v95;
    *(void *)(v93 + 32) = v77;
    uint64_t v120 = sub_251F35710();
    uint64_t v121 = v96;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    static String.hfLocalized(_:)(0xD000000000000018, 0x8000000251F6B8B0);
    v119 = v92;
    uint64_t v97 = swift_allocObject();
    *(_OWORD *)(v97 + 16) = v122;
    *(void *)(v97 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v97 + 64) = v95;
    *(void *)(v97 + 32) = v76;
    uint64_t v98 = sub_251F35710();
    uint64_t v100 = v99;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v77 > 0)
    {
      if (v76 > 0)
      {
        uint64_t v101 = v98;
        uint64_t v73 = (uint64_t)v116;
        if (v75 != 1 && (v77 != 1) | v70 & 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v102 = swift_allocObject();
          *(_OWORD *)(v102 + 16) = xmmword_251F3A500;
          uint64_t v103 = MEMORY[0x263F8D310];
          *(void *)(v102 + 56) = MEMORY[0x263F8D310];
          unint64_t v104 = sub_251B44770();
          uint64_t v105 = v121;
          *(void *)(v102 + 32) = v120;
          *(void *)(v102 + 40) = v105;
          *(void *)(v102 + 96) = v103;
          *(void *)(v102 + 104) = v104;
          *(void *)(v102 + 64) = v104;
          *(void *)(v102 + 72) = v101;
          *(void *)(v102 + 80) = v100;
          uint64_t v35 = sub_251F35710();
          unint64_t v123 = v106;
LABEL_124:
          swift_bridgeObjectRelease();
          sub_251BD00C0(v73, (uint64_t (*)(void))type metadata accessor for StaticService);
          return v35;
        }
LABEL_123:
        swift_bridgeObjectRelease();
        goto LABEL_124;
      }
      uint64_t v73 = (uint64_t)v116;
      if (v75 < 4)
      {
        if (v75 == 1) {
          goto LABEL_123;
        }
        if (v75 != 2)
        {
          if (v77 != 1 || (v70 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            if (!v76)
            {
              swift_bridgeObjectRelease();
              goto LABEL_130;
            }
            goto LABEL_114;
          }
          goto LABEL_123;
        }
        if (v77 != 1) {
          goto LABEL_128;
        }
      }
      else if (v77 != 1)
      {
        goto LABEL_112;
      }
      if ((v70 & 1) == 0) {
        goto LABEL_123;
      }
LABEL_112:
      if (!v76)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v35 = v120;
        uint64_t v109 = v121;
        goto LABEL_131;
      }
      goto LABEL_113;
    }
    if (v76 < 1)
    {
      uint64_t v73 = (uint64_t)v116;
      if (v75 != 1) {
        goto LABEL_113;
      }
      goto LABEL_123;
    }
    uint64_t v107 = v98;
    uint64_t v73 = (uint64_t)v116;
    if (v75 > 3)
    {
      swift_bridgeObjectRelease();
      if (v77) {
        goto LABEL_114;
      }
      swift_bridgeObjectRelease();
LABEL_118:
      sub_251BD00C0(v73, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v35 = v107;
      unint64_t v123 = v100;
      return v35;
    }
    if (v75 == 1) {
      goto LABEL_123;
    }
    if (v75 == 2)
    {
      swift_bridgeObjectRelease();
      if (v77) {
        goto LABEL_114;
      }
      swift_bridgeObjectRelease();
      if (v70) {
        goto LABEL_118;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      if (v77) {
        goto LABEL_114;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v107 = static String.hfLocalized(_:)(0xD00000000000001BLL, 0x8000000251F6B8D0);
    uint64_t v100 = v108;
    goto LABEL_118;
  }
  unint64_t v81 = *(void *)&v118[8 * v80];
  ++v74;
  if (v81) {
    goto LABEL_76;
  }
  uint64_t v74 = v80 + 1;
  if (v80 + 1 >= (uint64_t)v119) {
    goto LABEL_89;
  }
  unint64_t v81 = *(void *)&v118[8 * v74];
  if (v81) {
    goto LABEL_76;
  }
  uint64_t v74 = v80 + 2;
  if (v80 + 2 >= (uint64_t)v119) {
    goto LABEL_89;
  }
  unint64_t v81 = *(void *)&v118[8 * v74];
  if (v81) {
    goto LABEL_76;
  }
  uint64_t v74 = v80 + 3;
  if (v80 + 3 >= (uint64_t)v119) {
    goto LABEL_89;
  }
  unint64_t v81 = *(void *)&v118[8 * v74];
  if (v81) {
    goto LABEL_76;
  }
  uint64_t v74 = v80 + 4;
  if (v80 + 4 >= (uint64_t)v119) {
    goto LABEL_89;
  }
  unint64_t v81 = *(void *)&v118[8 * v74];
  if (v81) {
    goto LABEL_76;
  }
  uint64_t v82 = v80 + 5;
  if (v82 >= (uint64_t)v119) {
    goto LABEL_89;
  }
  unint64_t v81 = *(void *)&v118[8 * v82];
  if (v81)
  {
    uint64_t v74 = v82;
LABEL_76:
    uint64_t v73 = (v81 - 1) & v81;
    unint64_t v79 = __clz(__rbit64(v81)) + (v74 << 6);
    goto LABEL_77;
  }
  while (1)
  {
    uint64_t v74 = v82 + 1;
    if (__OFADD__(v82, 1)) {
      break;
    }
    if (v74 >= (uint64_t)v119) {
      goto LABEL_89;
    }
    unint64_t v81 = *(void *)&v118[8 * v74];
    ++v82;
    if (v81) {
      goto LABEL_76;
    }
  }
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
  return result;
}

uint64_t sub_251BCD8F0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CB38);
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v33 - v5;
  uint64_t v7 = type metadata accessor for StaticEndpoint();
  uint64_t v36 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v34 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StaticMatterDevice();
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v33 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v33 - v16;
  uint64_t v18 = 0;
  uint64_t v19 = v0 + *(int *)(type metadata accessor for StaticAccessory(0) + 36);
  if ((*(unsigned char *)(v19 + 8) & 1) == 0)
  {
    uint64_t v33 = v6;
    uint64_t v20 = *(void *)v19;
    if (qword_26B2200E0 != -1) {
      swift_once();
    }
    uint64_t v21 = qword_26B21FF50;
    swift_getKeyPath();
    uint64_t v37 = v21;
    sub_251AD2C08();
    sub_251F34F10();
    swift_release();
    uint64_t v22 = v21 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentMatterSnapshot;
    swift_beginAccess();
    uint64_t v23 = *(void *)(v22 + 16);
    if (*(void *)(v23 + 16))
    {
      unint64_t v24 = sub_2519FE588(v20);
      if (v25)
      {
        sub_251BD0058(*(void *)(v23 + 56) + *(void *)(v35 + 72) * v24, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
        uint64_t v26 = sub_251BD0120((uint64_t)v15, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
        uint64_t v27 = *(void *)&v17[*(int *)(v9 + 48)];
        MEMORY[0x270FA5388](v26);
        *(&v33 - 2) = v17;
        swift_bridgeObjectRetain();
        sub_251A95970((uint64_t (*)(char *))sub_251BD0188, v27, (uint64_t)v4);
        swift_bridgeObjectRelease();
        sub_251BD0058((uint64_t)v17, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
        uint64_t v28 = v36;
        unint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
        if (v29(v4, 1, v7) == 1)
        {
          uint64_t v30 = (uint64_t)v33;
          sub_251ABD930(*(void *)&v12[*(int *)(v9 + 48)], (uint64_t)v33);
          sub_251A1B064((uint64_t)v4, &qword_269B9CB38);
        }
        else
        {
          uint64_t v30 = (uint64_t)v33;
          sub_251BD0120((uint64_t)v4, (uint64_t)v33, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v28 + 56))(v30, 0, 1, v7);
        }
        sub_251BD00C0((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
        if (v29((char *)v30, 1, v7) != 1)
        {
          uint64_t v32 = v34;
          sub_251BD0120(v30, v34, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
          uint64_t v18 = StaticEndpoint.statusString.getter();
          sub_251BD00C0(v32, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
          sub_251BD00C0((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
          return v18;
        }
        sub_251BD00C0((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
        sub_251A1B064(v30, &qword_269B9CB38);
      }
    }
    return 0;
  }
  return v18;
}

uint64_t sub_251BCDDEC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v102 = (uint64_t)&v95 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v95 - v4;
  uint64_t v6 = type metadata accessor for StaticService();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v104 = (int *)v6;
  uint64_t v105 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v103 = (unsigned int (*)(uint64_t, uint64_t, int *))((char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v95 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v95 - v13;
  uint64_t v15 = sub_251F34DA0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)&v95 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (int *)type metadata accessor for StaticAccessory(0);
  uint64_t v23 = v0;
  sub_251A1E280(v0 + v22[21], (uint64_t)v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v21, 1, v15) == 1)
  {
    sub_251A1B064((uint64_t)v21, &qword_26B21FF90);
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v105 + 56))(v5, 1, 1, v104);
    uint64_t v24 = (uint64_t)v5;
LABEL_11:
    sub_251A1B064(v24, qword_26B21EE20);
    return 0;
  }
  uint64_t v98 = v14;
  uint64_t v99 = v5;
  uint64_t v25 = v105;
  uint64_t v96 = v12;
  uint64_t v100 = v16;
  uint64_t v101 = v15;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v21, v15);
  uint64_t v26 = *(void *)(v0 + v22[19]);
  uint64_t v27 = *(void *)(v26 + 16);
  uint64_t v97 = v23;
  if (v27)
  {
    swift_bridgeObjectRetain();
    unint64_t v28 = sub_2519FE584((uint64_t)v18);
    unint64_t v29 = v18;
    uint64_t v31 = v25;
    if (v30)
    {
      uint64_t v32 = (uint64_t)v99;
      sub_251BD0058(*(void *)(v26 + 56) + *(void *)(v25 + 72) * v28, (uint64_t)v99, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(v25 + 56);
      uint64_t v34 = v32;
      uint64_t v35 = 0;
    }
    else
    {
      uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(v25 + 56);
      uint64_t v32 = (uint64_t)v99;
      uint64_t v34 = (uint64_t)v99;
      uint64_t v35 = 1;
    }
    uint64_t v36 = v104;
    v33(v34, v35, 1, v104);
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v29 = v18;
    uint64_t v31 = v25;
    uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(v25 + 56);
    uint64_t v32 = (uint64_t)v99;
    uint64_t v36 = v104;
    v33((uint64_t)v99, 1, 1, v104);
  }
  uint64_t v37 = (uint64_t)v103;
  (*(void (**)(char *, uint64_t))(v100 + 8))(v29, v101);
  uint64_t v38 = *(unsigned int (**)(uint64_t, uint64_t, int *))(v31 + 48);
  BOOL v39 = v38(v32, 1, v36) == 1;
  uint64_t v24 = v32;
  if (v39) {
    goto LABEL_11;
  }
  uint64_t v42 = v31;
  uint64_t v103 = v38;
  unint64_t v104 = (int *)v33;
  uint64_t v43 = (uint64_t)v98;
  uint64_t v44 = sub_251BD0120(v32, (uint64_t)v98, (uint64_t (*)(void))type metadata accessor for StaticService);
  uint64_t v45 = *(void *)(v97 + v22[20]);
  MEMORY[0x270FA5388](v44);
  *(&v95 - 2) = v46;
  swift_bridgeObjectRetain();
  unint64_t v47 = sub_251A51E88((void (*)(char *))sub_251AB3DF0, (uint64_t)(&v95 - 4), v45);
  swift_bridgeObjectRelease();
  uint64_t v48 = *(void *)(v47 + 16);
  if (v48)
  {
    unint64_t v49 = v47;
    uint64_t v50 = v47 + ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80));
    uint64_t v105 = *(void *)(v42 + 72);
    uint64_t v101 = v49;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_251BD0058(v50, v37, (uint64_t (*)(void))type metadata accessor for StaticService);
      unsigned __int8 v51 = *(unsigned char *)(v37 + v36[22]);
      LOBYTE(v106) = byte_270262358;
      v107[0] = v51;
      unint64_t v52 = ServiceKind.rawValue.getter();
      uint64_t v54 = v53;
      if (v52 == ServiceKind.rawValue.getter() && v54 == v55) {
        break;
      }
      char v56 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v56) {
        goto LABEL_27;
      }
      LOBYTE(v106) = byte_270262359;
      v107[0] = v51;
      unint64_t v57 = ServiceKind.rawValue.getter();
      uint64_t v59 = v58;
      if (v57 == ServiceKind.rawValue.getter() && v59 == v60) {
        break;
      }
      char v61 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v61) {
        goto LABEL_27;
      }
      sub_251BD00C0(v37, (uint64_t (*)(void))type metadata accessor for StaticService);
      v50 += v105;
      if (!--v48)
      {
        swift_bridgeObjectRelease();
        uint64_t v62 = 1;
        uint64_t v43 = (uint64_t)v98;
        goto LABEL_25;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_27:
    swift_bridgeObjectRelease();
    uint64_t v63 = v102;
    sub_251BD0120(v37, v102, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v62 = 0;
    uint64_t v43 = (uint64_t)v98;
  }
  else
  {
    uint64_t v62 = 1;
LABEL_25:
    uint64_t v63 = v102;
  }
  uint64_t v64 = v103;
  ((void (*)(uint64_t, uint64_t, uint64_t, int *))v104)(v63, v62, 1, v36);
  swift_bridgeObjectRelease();
  if (v64(v63, 1, v36) == 1)
  {
    sub_251BD00C0(v43, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v24 = v63;
    goto LABEL_11;
  }
  uint64_t v65 = (uint64_t)v96;
  sub_251BD0120(v63, (uint64_t)v96, (uint64_t (*)(void))type metadata accessor for StaticService);
  uint64_t v106 = *(void *)(v65 + v36[28]);
  v107[0] = 115;
  sub_251B46610(v107);
  if (v66)
  {
    sub_251BD00C0(v65, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v91 = v43;
LABEL_37:
    sub_251BD00C0(v91, (uint64_t (*)(void))type metadata accessor for StaticService);
    return 0;
  }
  uint64_t v67 = v36[28];
  uint64_t v68 = v43;
  uint64_t v69 = *(void *)(v43 + v67);
  uint64_t v106 = v69;
  v107[0] = 44;
  uint64_t v70 = sub_251B46610(v107);
  if (v71)
  {
    sub_251BD00C0(v65, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v91 = v68;
    goto LABEL_37;
  }
  uint64_t v72 = static ClimateSummarizer.temperatureAverageString(_:)(*(double *)&v70);
  uint64_t v74 = v73;
  sub_251B3F4F4();
  uint64_t v75 = (void *)sub_251F360F0();
  uint64_t v76 = (void *)sub_251F360F0();
  uint64_t v77 = (void *)sub_251F360F0();
  uint64_t v78 = sub_251D3B848(v75);
  uint64_t v80 = v79;

  uint64_t v106 = v69;
  v107[0] = 41;
  uint64_t v81 = sub_251B46610(v107);
  if (v82) {
    goto LABEL_38;
  }
  uint64_t v83 = v81;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CAB0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_251F38650;
  *(void *)(inited + 32) = v83;
  uint64_t v85 = _s13HomeDataModel17ClimateSummarizerV19humidityRangeString_17addPercentageSignSSSgSaySdG_SbtFZ_0(inited, 1);
  uint64_t v87 = v86;
  swift_setDeallocating();
  if (!v87)
  {
LABEL_38:
    static String.hfLocalized(_:)(0xD00000000000002FLL, 0x8000000251F6B910);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
    uint64_t v92 = swift_allocObject();
    *(_OWORD *)(v92 + 16) = xmmword_251F3A500;
    uint64_t v93 = MEMORY[0x263F8D310];
    *(void *)(v92 + 56) = MEMORY[0x263F8D310];
    unint64_t v94 = sub_251B44770();
    *(void *)(v92 + 32) = v72;
    *(void *)(v92 + 40) = v74;
    *(void *)(v92 + 96) = v93;
    *(void *)(v92 + 104) = v94;
    *(void *)(v92 + 64) = v94;
    *(void *)(v92 + 72) = v78;
    *(void *)(v92 + 80) = v80;
    uint64_t v40 = sub_251F35720();
  }
  else
  {
    static String.hfLocalized(_:)(0xD000000000000037, 0x8000000251F6B940);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
    uint64_t v88 = swift_allocObject();
    *(_OWORD *)(v88 + 16) = xmmword_251F3DAB0;
    uint64_t v89 = MEMORY[0x263F8D310];
    *(void *)(v88 + 56) = MEMORY[0x263F8D310];
    unint64_t v90 = sub_251B44770();
    *(void *)(v88 + 32) = v72;
    *(void *)(v88 + 40) = v74;
    *(void *)(v88 + 96) = v89;
    *(void *)(v88 + 104) = v90;
    *(void *)(v88 + 64) = v90;
    *(void *)(v88 + 72) = v85;
    *(void *)(v88 + 80) = v87;
    *(void *)(v88 + 136) = v89;
    *(void *)(v88 + 144) = v90;
    *(void *)(v88 + 112) = v78;
    *(void *)(v88 + 120) = v80;
    uint64_t v40 = sub_251F35720();
  }
  swift_bridgeObjectRelease();
  sub_251BD00C0((uint64_t)v96, (uint64_t (*)(void))type metadata accessor for StaticService);
  sub_251BD00C0((uint64_t)v98, (uint64_t (*)(void))type metadata accessor for StaticService);
  return v40;
}

uint64_t sub_251BCE7BC(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v142 = a4;
  uint64_t v143 = a3;
  int v144 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v132 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v132 - v9;
  uint64_t v11 = type metadata accessor for StaticService();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v132 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v145 = (uint64_t)&v132 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v141 = (uint64_t)&v132 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v137 = (uint64_t)&v132 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v132 - v23;
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v140 = (uint64_t)&v132 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  unint64_t v29 = (char *)&v132 - v28;
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  uint64_t v32 = (char *)&v132 - v31;
  uint64_t v33 = MEMORY[0x270FA5388](v30);
  uint64_t v138 = (uint64_t)&v132 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  os_log_type_t v139 = (char *)&v132 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  v136 = (char *)&v132 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  v135 = (char *)&v132 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v133 = (uint64_t)&v132 - v42;
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  uint64_t v134 = (uint64_t)&v132 - v44;
  MEMORY[0x270FA5388](v43);
  uint64_t v46 = (char *)&v132 - v45;
  uint64_t v146 = a1;
  if (*(void *)(a1 + 16) == 1)
  {
    uint64_t v132 = v15;
    sub_251ABD970(v146, (uint64_t)v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
    {
      uint64_t v50 = (uint64_t)v10;
      uint64_t v51 = (uint64_t)v46;
LABEL_39:
      sub_251BD0120(v50, v51, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (v144) {
        uint64_t v66 = StaticService.accessoryControlCharacteristicStateString.getter();
      }
      else {
        uint64_t v66 = StaticService.tileCharacteristicStateString.getter();
      }
      uint64_t v52 = v66;
      uint64_t v67 = (uint64_t)v46;
      goto LABEL_43;
    }
    sub_251A1B064((uint64_t)v10, qword_26B21EE20);
    uint64_t v15 = v132;
  }
  StaticAccessory.primaryStaticService.getter((uint64_t)v8);
  uint64_t v143 = v12;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11) != 1)
  {
    uint64_t v48 = v11;
    int v49 = v8[*(int *)(v11 + 88)];
    sub_251BD00C0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
    switch(v49)
    {
      case 14:
      case 16:
      case 51:
      case 52:
        uint64_t v53 = v146 + 56;
        uint64_t v54 = 1 << *(unsigned char *)(v146 + 32);
        uint64_t v55 = -1;
        if (v54 < 64) {
          uint64_t v55 = ~(-1 << v54);
        }
        unint64_t v56 = v55 & *(void *)(v146 + 56);
        int64_t v57 = (unint64_t)(v54 + 63) >> 6;
        swift_bridgeObjectRetain();
        int64_t v58 = 0;
        uint64_t v59 = v143;
        if (v56) {
          goto LABEL_16;
        }
LABEL_17:
        int64_t v62 = v58 + 1;
        if (__OFADD__(v58, 1))
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
        }
        else
        {
          if (v62 >= v57) {
            goto LABEL_100;
          }
          unint64_t v63 = *(void *)(v53 + 8 * v62);
          ++v58;
          if (v63) {
            goto LABEL_34;
          }
          int64_t v58 = v62 + 1;
          if (v62 + 1 >= v57) {
            goto LABEL_100;
          }
          unint64_t v63 = *(void *)(v53 + 8 * v58);
          if (v63) {
            goto LABEL_34;
          }
          int64_t v58 = v62 + 2;
          if (v62 + 2 >= v57) {
            goto LABEL_100;
          }
          unint64_t v63 = *(void *)(v53 + 8 * v58);
          if (v63) {
            goto LABEL_34;
          }
          int64_t v58 = v62 + 3;
          if (v62 + 3 >= v57) {
            goto LABEL_100;
          }
          unint64_t v63 = *(void *)(v53 + 8 * v58);
          if (v63) {
            goto LABEL_34;
          }
          int64_t v58 = v62 + 4;
          if (v62 + 4 >= v57) {
            goto LABEL_100;
          }
          unint64_t v63 = *(void *)(v53 + 8 * v58);
          if (v63) {
            goto LABEL_34;
          }
          int64_t v64 = v62 + 5;
          if (v64 >= v57)
          {
LABEL_100:
            swift_release();
            return 0;
          }
          unint64_t v63 = *(void *)(v53 + 8 * v64);
          if (v63)
          {
            int64_t v58 = v64;
LABEL_34:
            unint64_t v56 = (v63 - 1) & v63;
            for (unint64_t i = __clz(__rbit64(v63)) + (v58 << 6); ; unint64_t i = v60 | (v58 << 6))
            {
              sub_251BD0058(*(void *)(v146 + 48) + *(void *)(v59 + 72) * i, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for StaticService);
              sub_251BD0120((uint64_t)v32, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for StaticService);
              if (StaticService.isActivated.getter()) {
                break;
              }
              sub_251BD00C0((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for StaticService);
              if (!v56) {
                goto LABEL_17;
              }
LABEL_16:
              unint64_t v60 = __clz(__rbit64(v56));
              v56 &= v56 - 1;
            }
            swift_release();
            uint64_t v65 = v138;
            sub_251BD0120((uint64_t)v29, v138, (uint64_t (*)(void))type metadata accessor for StaticService);
            uint64_t v50 = v65;
            uint64_t v46 = v139;
            uint64_t v51 = (uint64_t)v139;
            goto LABEL_39;
          }
          while (1)
          {
            int64_t v58 = v64 + 1;
            if (__OFADD__(v64, 1)) {
              break;
            }
            if (v58 >= v57) {
              goto LABEL_100;
            }
            unint64_t v63 = *(void *)(v53 + 8 * v58);
            ++v64;
            if (v63) {
              goto LABEL_34;
            }
          }
        }
        __break(1u);
        goto LABEL_120;
      case 19:
      case 30:
      case 34:
      case 41:
      case 47:
        return static String.hfLocalized(_:)(0xD000000000000021, 0x8000000251F6B9C0);
      case 20:
      case 46:
        uint64_t v132 = v15;
        os_log_type_t v139 = v24;
        sub_251BD0058(v142, v140, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v69 = v146 + 56;
        uint64_t v70 = 1 << *(unsigned char *)(v146 + 32);
        uint64_t v71 = -1;
        if (v70 < 64) {
          uint64_t v71 = ~(-1 << v70);
        }
        unint64_t v72 = v71 & *(void *)(v146 + 56);
        int64_t v73 = (unint64_t)(v70 + 63) >> 6;
        swift_bridgeObjectRetain();
        int64_t v74 = 0;
        if (v72) {
          goto LABEL_48;
        }
LABEL_49:
        int64_t v77 = v74 + 1;
        if (__OFADD__(v74, 1)) {
          goto LABEL_118;
        }
        if (v77 >= v73) {
          goto LABEL_113;
        }
        unint64_t v78 = *(void *)(v69 + 8 * v77);
        ++v74;
        if (v78) {
          goto LABEL_66;
        }
        int64_t v74 = v77 + 1;
        if (v77 + 1 >= v73) {
          goto LABEL_113;
        }
        unint64_t v78 = *(void *)(v69 + 8 * v74);
        if (v78) {
          goto LABEL_66;
        }
        int64_t v74 = v77 + 2;
        if (v77 + 2 >= v73) {
          goto LABEL_113;
        }
        unint64_t v78 = *(void *)(v69 + 8 * v74);
        if (v78) {
          goto LABEL_66;
        }
        int64_t v74 = v77 + 3;
        if (v77 + 3 >= v73) {
          goto LABEL_113;
        }
        unint64_t v78 = *(void *)(v69 + 8 * v74);
        if (v78) {
          goto LABEL_66;
        }
        int64_t v74 = v77 + 4;
        if (v77 + 4 >= v73) {
          goto LABEL_113;
        }
        unint64_t v78 = *(void *)(v69 + 8 * v74);
        if (v78) {
          goto LABEL_66;
        }
        int64_t v79 = v77 + 5;
        if (v79 >= v73) {
          goto LABEL_113;
        }
        unint64_t v78 = *(void *)(v69 + 8 * v79);
        if (v78)
        {
          int64_t v74 = v79;
LABEL_66:
          unint64_t v72 = (v78 - 1) & v78;
          for (unint64_t j = __clz(__rbit64(v78)) + (v74 << 6); ; unint64_t j = v75 | (v74 << 6))
          {
            uint64_t v80 = v141;
            sub_251BD0058(*(void *)(v146 + 48) + *(void *)(v143 + 72) * j, v141, (uint64_t (*)(void))type metadata accessor for StaticService);
            uint64_t v81 = v80;
            uint64_t v82 = v145;
            sub_251BD0120(v81, v145, (uint64_t (*)(void))type metadata accessor for StaticService);
            unsigned __int8 v83 = *(unsigned char *)(v82 + *(int *)(v48 + 88));
            LOBYTE(v147) = byte_270262380;
            v148[0] = v83;
            unint64_t v84 = ServiceKind.rawValue.getter();
            uint64_t v86 = v85;
            if (v84 == ServiceKind.rawValue.getter() && v86 == v87) {
              break;
            }
            char v88 = sub_251F36B10();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v88) {
              goto LABEL_103;
            }
            LOBYTE(v147) = byte_270262381;
            v148[0] = v83;
            unint64_t v89 = ServiceKind.rawValue.getter();
            uint64_t v91 = v90;
            if (v89 == ServiceKind.rawValue.getter() && v91 == v92) {
              break;
            }
            char v93 = sub_251F36B10();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v93) {
              goto LABEL_103;
            }
            sub_251BD00C0(v145, (uint64_t (*)(void))type metadata accessor for StaticService);
            if (!v72) {
              goto LABEL_49;
            }
LABEL_48:
            unint64_t v75 = __clz(__rbit64(v72));
            v72 &= v72 - 1;
          }
          swift_bridgeObjectRelease_n();
LABEL_103:
          swift_release();
          uint64_t v108 = v137;
          sub_251BD0120(v145, v137, (uint64_t (*)(void))type metadata accessor for StaticService);
          uint64_t v109 = (uint64_t)v139;
          sub_251BD0120(v108, (uint64_t)v139, (uint64_t (*)(void))type metadata accessor for StaticService);
          BOOL v110 = StaticService.isActivated.getter();
          uint64_t v111 = (uint64_t)v132;
          sub_251BD0058(v109, (uint64_t)v132, (uint64_t (*)(void))type metadata accessor for StaticService);
          if (v110)
          {
            sub_251BD00C0(v111, (uint64_t (*)(void))type metadata accessor for StaticService);
          }
          else
          {
            BOOL v112 = StaticService.isActivated.getter();
            sub_251BD00C0(v111, (uint64_t (*)(void))type metadata accessor for StaticService);
            if (v112)
            {
              uint64_t v147 = *(void *)(v109 + *(int *)(v48 + 112));
              v148[0] = 115;
              sub_251B46610(v148);
              if ((v113 & 1) == 0)
              {
                sub_251B3F4F4();
                int64_t v114 = (void *)sub_251F360F0();
                uint64_t v115 = (void *)sub_251F360F0();
                uint64_t v116 = (void *)sub_251F360F0();
                uint64_t v117 = sub_251D3B848(v114);
                uint64_t v119 = v118;

                static String.hfLocalized(_:)(0xD00000000000001ALL, 0x8000000251F6B980);
                __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
                uint64_t v120 = swift_allocObject();
                *(_OWORD *)(v120 + 16) = xmmword_251F38650;
                *(void *)(v120 + 56) = MEMORY[0x263F8D310];
                *(void *)(v120 + 64) = sub_251B44770();
                *(void *)(v120 + 32) = v117;
                *(void *)(v120 + 40) = v119;
                uint64_t v52 = sub_251F35710();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_251BD00C0(v109, (uint64_t (*)(void))type metadata accessor for StaticService);
                uint64_t v67 = v140;
                goto LABEL_43;
              }
            }
          }
          sub_251BD00C0(v109, (uint64_t (*)(void))type metadata accessor for StaticService);
          if (v144) {
            goto LABEL_109;
          }
        }
        else
        {
          while (1)
          {
            int64_t v74 = v79 + 1;
            if (__OFADD__(v79, 1)) {
              goto LABEL_121;
            }
            if (v74 >= v73) {
              break;
            }
            unint64_t v78 = *(void *)(v69 + 8 * v74);
            ++v79;
            if (v78) {
              goto LABEL_66;
            }
          }
LABEL_113:
          swift_release();
          if (v144)
          {
LABEL_109:
            uint64_t v121 = StaticService.accessoryControlCharacteristicStateString.getter();
            goto LABEL_115;
          }
        }
        uint64_t v121 = StaticService.tileCharacteristicStateString.getter();
LABEL_115:
        uint64_t v52 = v121;
        uint64_t v67 = v140;
        goto LABEL_43;
      case 28:
        uint64_t v94 = v146 + 56;
        uint64_t v95 = 1 << *(unsigned char *)(v146 + 32);
        uint64_t v96 = -1;
        if (v95 < 64) {
          uint64_t v96 = ~(-1 << v95);
        }
        unint64_t v97 = v96 & *(void *)(v146 + 56);
        int64_t v98 = (unint64_t)(v95 + 63) >> 6;
        swift_bridgeObjectRetain();
        int64_t v99 = 0;
        uint64_t v100 = v143;
        uint64_t v102 = (uint64_t)v135;
        uint64_t v101 = (uint64_t)v136;
        if (v97) {
          goto LABEL_78;
        }
LABEL_79:
        int64_t v105 = v99 + 1;
        if (__OFADD__(v99, 1)) {
          goto LABEL_117;
        }
        if (v105 >= v98) {
          goto LABEL_100;
        }
        unint64_t v106 = *(void *)(v94 + 8 * v105);
        ++v99;
        if (v106) {
          goto LABEL_96;
        }
        int64_t v99 = v105 + 1;
        if (v105 + 1 >= v98) {
          goto LABEL_100;
        }
        unint64_t v106 = *(void *)(v94 + 8 * v99);
        if (v106) {
          goto LABEL_96;
        }
        int64_t v99 = v105 + 2;
        if (v105 + 2 >= v98) {
          goto LABEL_100;
        }
        unint64_t v106 = *(void *)(v94 + 8 * v99);
        if (v106) {
          goto LABEL_96;
        }
        int64_t v99 = v105 + 3;
        if (v105 + 3 >= v98) {
          goto LABEL_100;
        }
        unint64_t v106 = *(void *)(v94 + 8 * v99);
        if (v106) {
          goto LABEL_96;
        }
        int64_t v99 = v105 + 4;
        if (v105 + 4 >= v98) {
          goto LABEL_100;
        }
        unint64_t v106 = *(void *)(v94 + 8 * v99);
        if (v106) {
          goto LABEL_96;
        }
        int64_t v107 = v105 + 5;
        if (v107 >= v98) {
          goto LABEL_100;
        }
        unint64_t v106 = *(void *)(v94 + 8 * v107);
        if (!v106)
        {
          while (1)
          {
            int64_t v99 = v107 + 1;
            if (__OFADD__(v107, 1)) {
              break;
            }
            if (v99 >= v98) {
              goto LABEL_100;
            }
            unint64_t v106 = *(void *)(v94 + 8 * v99);
            ++v107;
            if (v106) {
              goto LABEL_96;
            }
          }
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
          JUMPOUT(0x251BCF69CLL);
        }
        int64_t v99 = v107;
LABEL_96:
        unint64_t v97 = (v106 - 1) & v106;
        for (unint64_t k = __clz(__rbit64(v106)) + (v99 << 6); ; unint64_t k = v103 | (v99 << 6))
        {
          sub_251BD0058(*(void *)(v146 + 48) + *(void *)(v100 + 72) * k, v102, (uint64_t (*)(void))type metadata accessor for StaticService);
          sub_251BD0120(v102, v101, (uint64_t (*)(void))type metadata accessor for StaticService);
          if (StaticService.isActivated.getter()) {
            break;
          }
          sub_251BD00C0(v101, (uint64_t (*)(void))type metadata accessor for StaticService);
          if (!v97) {
            goto LABEL_79;
          }
LABEL_78:
          unint64_t v103 = __clz(__rbit64(v97));
          v97 &= v97 - 1;
        }
        swift_release();
        uint64_t v122 = v101;
        uint64_t v123 = v133;
        sub_251BD0120(v122, v133, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v124 = v134;
        sub_251BD0120(v123, v134, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v147 = *(void *)(v124 + *(int *)(v11 + 112));
        v148[0] = 12;
        Swift::Int_optional v149 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)v148);
        if (!v149.is_nil)
        {
          sub_251B3F4F4();
          char v125 = (void *)sub_251F36100();
          char v126 = (void *)sub_251F36100();
          char v127 = (void *)sub_251F36100();
          uint64_t v128 = sub_251D3B848(v125);
          uint64_t v130 = v129;

          static String.hfLocalized(_:)(0xD00000000000001FLL, 0x8000000251F6B9A0);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
          uint64_t v131 = swift_allocObject();
          *(_OWORD *)(v131 + 16) = xmmword_251F38650;
          *(void *)(v131 + 56) = MEMORY[0x263F8D310];
          *(void *)(v131 + 64) = sub_251B44770();
          *(void *)(v131 + 32) = v128;
          *(void *)(v131 + 40) = v130;
          uint64_t v52 = sub_251F35710();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v67 = v124;
LABEL_43:
          sub_251BD00C0(v67, (uint64_t (*)(void))type metadata accessor for StaticService);
          return v52;
        }
        sub_251BD00C0(v124, (uint64_t (*)(void))type metadata accessor for StaticService);
        return 0;
      default:
        goto LABEL_6;
    }
  }
  sub_251A1B064((uint64_t)v8, qword_26B21EE20);
LABEL_6:
  if (v144) {
    return StaticService.accessoryControlCharacteristicStateString.getter();
  }
  else {
    return StaticService.tileCharacteristicStateString.getter();
  }
}

uint64_t sub_251BCF738(char a1)
{
  uint64_t v3 = type metadata accessor for StaticService();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = (int *)type metadata accessor for StaticAccessory(0);
  uint64_t result = sub_251C4862C(v1 + v7[28], a1);
  if (!v9)
  {
    uint64_t result = _s13HomeDataModel12SymptomErrorO12statusString4with21isForAccessoryControlSSSgShyACGSg_SbtFZ_0(*(void *)(v1 + v7[31]), a1 & 1);
    if (!v10)
    {
      BOOL v11 = sub_251BCF9A8();
      if (v11) {
        return static String.hfLocalized(_:)(0xD00000000000001ELL, 0x8000000251F6B890);
      }
      uint64_t v12 = *(void *)(v1 + v7[20]);
      MEMORY[0x270FA5388](v11);
      *(void *)&v20[-16] = v1;
      swift_bridgeObjectRetain();
      unint64_t v13 = sub_251A51E88((void (*)(char *))sub_251AB2CBC, (uint64_t)&v20[-32], v12);
      swift_bridgeObjectRelease();
      uint64_t v14 = *(void *)(v13 + 16);
      if (!v14)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
      uint64_t v15 = v13 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
      uint64_t v16 = *(void *)(v4 + 72);
      swift_bridgeObjectRetain();
      uint64_t v17 = 1;
      while (1)
      {
        sub_251BD0058(v15, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
        int v18 = v6[*(int *)(v3 + 40)];
        if (v18 == 2)
        {
          sub_251BD00C0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
        }
        else
        {
          sub_251BD00C0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
          if (v18)
          {
            swift_bridgeObjectRelease_n();
            if ((a1 & 1) == 0) {
              return 0;
            }
            return static String.hfLocalized(_:)(0xD00000000000001ELL, 0x8000000251F6B890);
          }
        }
        if (v14 == v17) {
          goto LABEL_14;
        }
        v15 += v16;
        if (__OFADD__(v17++, 1))
        {
          __break(1u);
LABEL_14:
          swift_bridgeObjectRelease_n();
          return 0;
        }
      }
    }
  }
  return result;
}

BOOL sub_251BCF9A8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE68);
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (__int16 *)((char *)&v55 - v5);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F4C8);
  uint64_t v60 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  int64_t v58 = (_WORD *)((char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v55 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (_WORD *)((char *)&v55 - v14);
  MEMORY[0x270FA5388](v13);
  uint64_t v59 = (__int16 *)((char *)&v55 - v16);
  uint64_t v17 = type metadata accessor for StaticMatterDevice();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v61 = (uint64_t)&v55 - v22;
  uint64_t v23 = v0 + *(int *)(type metadata accessor for StaticAccessory(0) + 36);
  if (*(unsigned char *)(v23 + 8)) {
    return 0;
  }
  unint64_t v56 = (__int16 *)v12;
  uint64_t v57 = v7;
  uint64_t v55 = (__int16 *)v4;
  uint64_t v24 = *(void *)v23;
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v25 = qword_26B21FF50;
  swift_getKeyPath();
  v63[0] = v25;
  sub_251AD2C08();
  sub_251F34F10();
  swift_release();
  uint64_t v26 = v25 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentMatterSnapshot;
  swift_beginAccess();
  uint64_t v27 = *(void *)(v26 + 16);
  if (!*(void *)(v27 + 16)) {
    return 0;
  }
  unint64_t v28 = sub_2519FE588(v24);
  if ((v29 & 1) == 0) {
    return 0;
  }
  sub_251BD0058(*(void *)(v27 + 56) + *(void *)(v18 + 72) * v28, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
  sub_251BD0120((uint64_t)v21, v61, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
  uint64_t v30 = swift_bridgeObjectRetain();
  sub_251BCC1C8(v30, (uint64_t)v6);
  swift_bridgeObjectRelease();
  uint64_t v31 = *(unsigned int (**)(__int16 *, uint64_t, uint64_t))(v60 + 48);
  uint64_t v32 = v57;
  if (v31(v6, 1, v57) == 1)
  {
    sub_251A1B064((uint64_t)v6, &qword_269B9CE68);
    uint64_t v33 = v56;
    goto LABEL_16;
  }
  uint64_t v34 = *(int *)(v32 + 48);
  uint64_t v35 = v59;
  uint64_t v36 = (uint64_t)v59 + v34;
  __int16 v37 = *v6;
  *uint64_t v59 = *v6;
  sub_251BD0120((uint64_t)v6 + v34, (uint64_t)v35 + v34, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  uint64_t v38 = (uint64_t)v15 + *(int *)(v32 + 48);
  _WORD *v15 = v37;
  sub_251BD0058(v36, v38, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  uint64_t v39 = *(void *)(v38 + *(int *)(type metadata accessor for StaticEndpoint() + 36));
  uint64_t v33 = v56;
  if (!*(void *)(v39 + 16)
    || (unint64_t v40 = sub_2519FE614(2), (v41 & 1) == 0)
    || (sub_251A1A930(*(void *)(v39 + 56) + (v40 << 8), (uint64_t)v62),
        sub_251A1A930((uint64_t)v62, (uint64_t)v63),
        sub_251A4DB2C((uint64_t)v63) != 6))
  {
    sub_251A1B064((uint64_t)v59, &qword_26B21F4C8);
    sub_251BD00C0(v38, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    goto LABEL_15;
  }
  uint64_t v42 = sub_251A4E128((uint64_t)v63);
  int v43 = *(unsigned __int8 *)(v42 + 29);
  char v44 = *(unsigned char *)(v42 + 30);
  sub_251A1B064((uint64_t)v59, &qword_26B21F4C8);
  sub_251BD00C0(v38, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  if (v44)
  {
LABEL_15:
    uint64_t v32 = v57;
    goto LABEL_16;
  }
  uint64_t v32 = v57;
  if (v43 == 1)
  {
    sub_251BD00C0(v61, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
    return 1;
  }
LABEL_16:
  uint64_t v46 = v61;
  uint64_t v47 = swift_bridgeObjectRetain();
  uint64_t v48 = v55;
  sub_251BCC5A8(v47, (uint64_t)v55);
  swift_bridgeObjectRelease();
  if (v31(v48, 1, v32) == 1)
  {
    sub_251BD00C0(v46, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
    sub_251A1B064((uint64_t)v48, &qword_269B9CE68);
    return 0;
  }
  uint64_t v49 = *(int *)(v32 + 48);
  uint64_t v50 = (uint64_t)v33 + v49;
  __int16 v51 = *v48;
  *uint64_t v33 = *v48;
  sub_251BD0120((uint64_t)v48 + v49, (uint64_t)v33 + v49, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  uint64_t v52 = *(int *)(v32 + 48);
  uint64_t v53 = v58;
  uint64_t v54 = (uint64_t)v58 + v52;
  *int64_t v58 = v51;
  sub_251BD0058(v50, (uint64_t)v53 + v52, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  StaticEndpoint.rvcClusterGroup.getter((uint64_t)v65);
  sub_251A1B064((uint64_t)v33, &qword_26B21F4C8);
  sub_251BD00C0(v46, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
  sub_251A4ECF0((uint64_t)v65, (uint64_t)v62, &qword_269B9ECC0);
  sub_251A4ECF0((uint64_t)v62, (uint64_t)v63, &qword_269B9ECC0);
  if (sub_251B72348((uint64_t)v63) == 1)
  {
    sub_251BD00C0(v54, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    return 0;
  }
  sub_251BD00C0(v54, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  sub_251B72360(v62);
  if ((v64 & 0x80) == 0) {
    return 0;
  }
  return (v64 & 0x7F) == 8;
}

uint64_t sub_251BD0058(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251BD00C0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251BD0120(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

BOOL sub_251BD0188(uint64_t a1)
{
  return sub_251D751F0(a1, *(void *)(v1 + 16));
}

uint64_t ServiceKind.stateStatusDependentCharaceristicKinds.getter()
{
  uint64_t v1 = &unk_270261E10;
  switch(*v0)
  {
    case 3:
      goto LABEL_4;
    case 4:
      uint64_t v1 = &unk_270261E38;
LABEL_4:
      uint64_t result = sub_251C0A024((uint64_t)v1);
      break;
    case 9:
      uint64_t result = sub_251C0A024((uint64_t)&unk_270261E60);
      break;
    case 0xA:
      uint64_t result = sub_251C0A024((uint64_t)&unk_270261E88);
      break;
    case 0xB:
      uint64_t result = sub_251C0A024((uint64_t)&unk_270261EB0);
      break;
    case 0xE:
      uint64_t result = sub_251C0A024((uint64_t)&unk_270261ED8);
      break;
    case 0x10:
      uint64_t result = sub_251C0A024((uint64_t)&unk_270261F00);
      break;
    case 0x11:
      uint64_t result = sub_251C0A024((uint64_t)&unk_270261F28);
      break;
    case 0x13:
      uint64_t result = sub_251C0A024((uint64_t)&unk_270261F50);
      break;
    case 0x14:
      uint64_t result = sub_251C0A024((uint64_t)&unk_270261F78);
      break;
    case 0x15:
      uint64_t result = sub_251C0A024((uint64_t)&unk_270261FA0);
      break;
    case 0x16:
      uint64_t result = sub_251C0A024((uint64_t)&unk_270261FC8);
      break;
    case 0x17:
      uint64_t result = sub_251C0A024((uint64_t)&unk_270261FF0);
      break;
    case 0x18:
      uint64_t result = sub_251C0A024((uint64_t)&unk_270262018);
      break;
    case 0x1A:
      uint64_t result = sub_251C0A024((uint64_t)&unk_270262040);
      break;
    case 0x1B:
      uint64_t result = sub_251C0A024((uint64_t)&unk_270262068);
      break;
    case 0x1C:
      uint64_t result = sub_251C0A024((uint64_t)&unk_270262090);
      break;
    case 0x1E:
      uint64_t result = sub_251C0A024((uint64_t)&unk_2702620B8);
      break;
    case 0x1F:
      uint64_t result = sub_251C0A024((uint64_t)&unk_2702620E0);
      break;
    case 0x20:
      uint64_t result = sub_251C0A024((uint64_t)&unk_270262108);
      break;
    case 0x21:
      uint64_t result = sub_251C0A024((uint64_t)&unk_270262130);
      break;
    case 0x22:
      uint64_t result = sub_251C0A024((uint64_t)&unk_270262158);
      break;
    case 0x23:
      uint64_t result = sub_251C0A024((uint64_t)&unk_270262180);
      break;
    case 0x25:
      uint64_t result = sub_251C0A024((uint64_t)&unk_2702621A8);
      break;
    case 0x26:
      uint64_t result = sub_251C0A024((uint64_t)&unk_2702621D0);
      break;
    case 0x29:
      uint64_t result = sub_251C0A024((uint64_t)&unk_2702621F8);
      break;
    case 0x2C:
      uint64_t result = sub_251C0A024((uint64_t)&unk_270262220);
      break;
    case 0x2D:
      uint64_t result = sub_251C0A024((uint64_t)&unk_270262248);
      break;
    case 0x2E:
      uint64_t result = sub_251C0A024((uint64_t)&unk_270262270);
      break;
    case 0x2F:
      uint64_t result = sub_251C0A024((uint64_t)&unk_270262298);
      break;
    case 0x30:
      uint64_t result = sub_251C0A024((uint64_t)&unk_2702622C0);
      break;
    case 0x33:
      uint64_t result = sub_251C0A024((uint64_t)&unk_2702622E8);
      break;
    case 0x34:
      uint64_t result = sub_251C0A024((uint64_t)&unk_270262310);
      break;
    default:
      uint64_t result = MEMORY[0x263F8EE88];
      break;
  }
  return result;
}

uint64_t ServiceKind.canBeToggled.getter()
{
  uint64_t v1 = *v0;
  if (v1 - 3) < 0x2E && ((0x32C892266001uLL >> (v1 - 3)))
  {
    char v3 = 1;
  }
  else
  {
    if (qword_269B9C310 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v2 = off_269B9F948;
    swift_bridgeObjectRetain();
    char v3 = sub_251DB3C0C(v1, (uint64_t)v2);
    swift_bridgeObjectRelease();
  }
  return v3 & 1;
}

uint64_t ServiceKind.localizedDescription.getter()
{
  uint64_t result = *v0;
  switch(*v0)
  {
    case 1:
      uint64_t v2 = 0xD000000000000032;
      char v3 = "AccessoryInformationService_ServiceTypeCapitalized";
      goto LABEL_55;
    case 2:
      uint64_t v2 = 0x7363697274654DLL;
      unint64_t v4 = 0xE700000000000000;
      goto LABEL_56;
    case 3:
      uint64_t v2 = 0xD000000000000022;
      char v3 = "AirPurifier_ServiceTypeCapitalized";
      goto LABEL_55;
    case 4:
      uint64_t v2 = 0xD000000000000027;
      char v3 = "AirQualitySensor_ServiceTypeCapitalized";
      goto LABEL_55;
    case 5:
      uint64_t v2 = 0xD00000000000001ELL;
      char v3 = "Battery_ServiceTypeCapitalized";
      goto LABEL_55;
    case 6:
      uint64_t v2 = 0xD000000000000024;
      char v3 = "CameraControl_ServiceTypeCapitalized";
      goto LABEL_55;
    case 7:
      uint64_t v2 = 0xD000000000000030;
      char v3 = "CameraRTPStreamManagement_ServiceTypeCapitalized";
      goto LABEL_55;
    case 8:
      uint64_t v2 = 0xD000000000000030;
      char v3 = "CameraRecordingManagement_ServiceTypeCapitalized";
      goto LABEL_55;
    case 9:
      uint64_t v2 = 0xD00000000000002ALL;
      char v3 = "CarbonDioxideSensor_ServiceTypeCapitalized";
      goto LABEL_55;
    case 0xA:
      uint64_t v2 = 0xD00000000000002BLL;
      char v3 = "CarbonMonoxideSensor_ServiceTypeCapitalized";
      goto LABEL_55;
    case 0xB:
      uint64_t v2 = 0xD000000000000024;
      char v3 = "ContactSensor_ServiceTypeCapitalized";
      goto LABEL_55;
    case 0xC:
      return 0x6C616E7265746E49;
    case 0xD:
      uint64_t v2 = 0x74736F6E67616944;
      unint64_t v4 = 0xEB00000000736369;
      goto LABEL_56;
    case 0xE:
      uint64_t v2 = 0xD00000000000001BLL;
      char v3 = "Door_ServiceTypeCapitalized";
      goto LABEL_55;
    case 0xF:
      uint64_t v5 = "VideoDoorbell_CategoryCapitalized";
      goto LABEL_48;
    case 0x10:
      uint64_t v2 = 0xD00000000000001ALL;
      char v3 = "Fan_ServiceTypeCapitalized";
      goto LABEL_55;
    case 0x11:
      uint64_t v2 = 0xD00000000000001DLL;
      char v3 = "Faucet_ServiceTypeCapitalized";
      goto LABEL_55;
    case 0x12:
      uint64_t v2 = 0xD000000000000028;
      char v3 = "FilterMaintenance_ServiceTypeCapitalized";
      goto LABEL_55;
    case 0x13:
      uint64_t v2 = 0xD000000000000027;
      char v3 = "GarageDoorOpener_ServiceTypeCapitalized";
      goto LABEL_55;
    case 0x14:
      uint64_t v2 = 0xD000000000000023;
      char v3 = "HeaterCooler_ServiceTypeCapitalized";
      goto LABEL_55;
    case 0x15:
      uint64_t v2 = 0xD00000000000002DLL;
      char v3 = "HumidifierDehumidifier_ServiceTypeCapitalized";
      goto LABEL_55;
    case 0x16:
      uint64_t v2 = 0xD000000000000025;
      char v3 = "HumiditySensor_ServiceTypeCapitalized";
      goto LABEL_55;
    case 0x17:
      uint64_t v2 = 0xD000000000000022;
      char v3 = "InputSource_ServiceTypeCapitalized";
      goto LABEL_55;
    case 0x18:
      uint64_t v2 = 0xD000000000000027;
      char v3 = "IrrigationSystem_ServiceTypeCapitalized";
      goto LABEL_55;
    case 0x19:
      uint64_t v2 = 0xD00000000000001CLL;
      char v3 = "Label_ServiceTypeCapitalized";
      goto LABEL_55;
    case 0x1A:
      uint64_t v5 = "LeakSensor_ServiceTypeCapitalized";
      goto LABEL_48;
    case 0x1B:
      uint64_t v2 = 0xD000000000000022;
      char v3 = "LightSensor_ServiceTypeCapitalized";
      goto LABEL_55;
    case 0x1C:
      uint64_t v2 = 0xD000000000000020;
      char v3 = "Lightbulb_ServiceTypeCapitalized";
      goto LABEL_55;
    case 0x1D:
      uint64_t v2 = 0xD000000000000025;
      char v3 = "LockManagement_ServiceTypeCapitalized";
      goto LABEL_55;
    case 0x1E:
      uint64_t v2 = 0xD000000000000024;
      char v3 = "LockMechanism_ServiceTypeCapitalized";
      goto LABEL_55;
    case 0x1F:
      uint64_t v5 = "Microphone_ServiceTypeCapitalized";
      goto LABEL_48;
    case 0x20:
      uint64_t v2 = 0xD000000000000023;
      char v3 = "MotionSensor_ServiceTypeCapitalized";
      goto LABEL_55;
    case 0x21:
      uint64_t v2 = 0xD000000000000026;
      char v3 = "OccupancySensor_ServiceTypeCapitalized";
      goto LABEL_55;
    case 0x22:
      uint64_t v2 = 0xD00000000000001DLL;
      char v3 = "Outlet_ServiceTypeCapitalized";
      goto LABEL_55;
    case 0x23:
      uint64_t v2 = 0xD000000000000025;
      char v3 = "SecuritySystem_ServiceTypeCapitalized";
      goto LABEL_55;
    case 0x24:
      uint64_t v2 = 0xD00000000000001CLL;
      char v3 = "Slats_ServiceTypeCapitalized";
      goto LABEL_55;
    case 0x25:
      uint64_t v2 = 0xD000000000000022;
      char v3 = "SmokeSensor_ServiceTypeCapitalized";
      goto LABEL_55;
    case 0x26:
      uint64_t v2 = 0xD00000000000001ELL;
      char v3 = "Speaker_ServiceTypeCapitalized";
      goto LABEL_55;
    case 0x27:
      uint64_t v2 = 0xD000000000000031;
      char v3 = "StatefulProgrammableSwitch_ServiceTypeCapitalized";
      goto LABEL_55;
    case 0x28:
      uint64_t v2 = 0xD000000000000032;
      char v3 = "StatelessProgrammableSwitch_ServiceTypeCapitalized";
      goto LABEL_55;
    case 0x29:
      uint64_t v2 = 0xD00000000000001DLL;
      char v3 = "Switch_ServiceTypeCapitalized";
      goto LABEL_55;
    case 0x2A:
      uint64_t v2 = 0x4320746567726154;
      unint64_t v4 = 0xEE006C6F72746E6FLL;
      goto LABEL_56;
    case 0x2B:
      uint64_t v2 = 0xD000000000000019;
      char v3 = "Target Control Management";
      goto LABEL_55;
    case 0x2C:
      uint64_t v5 = "Television_ServiceTypeCapitalized";
      goto LABEL_48;
    case 0x2D:
      uint64_t v2 = 0xD000000000000028;
      char v3 = "TemperatureSensor_ServiceTypeCapitalized";
      goto LABEL_55;
    case 0x2E:
      uint64_t v5 = "Thermostat_ServiceTypeCapitalized";
LABEL_48:
      unint64_t v4 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      uint64_t v2 = 0xD000000000000021;
      goto LABEL_56;
    case 0x2F:
      uint64_t v2 = 0xD00000000000001CLL;
      char v3 = "Valve_ServiceTypeCapitalized";
      goto LABEL_55;
    case 0x30:
      uint64_t v2 = 0xD000000000000025;
      char v3 = "VentilationFan_ServiceTypeCapitalized";
      goto LABEL_55;
    case 0x31:
      uint64_t v2 = 0x756F522069466957;
      unint64_t v4 = 0xEB00000000726574;
      goto LABEL_56;
    case 0x32:
      uint64_t v2 = 0x7461532069466957;
      unint64_t v4 = 0xEE006574696C6C65;
      goto LABEL_56;
    case 0x33:
      uint64_t v2 = 0xD00000000000001DLL;
      char v3 = "Window_ServiceTypeCapitalized";
      goto LABEL_55;
    case 0x34:
      uint64_t v2 = 0xD000000000000025;
      char v3 = "WindowCovering_ServiceTypeCapitalized";
LABEL_55:
      unint64_t v4 = (unint64_t)(v3 - 32) | 0x8000000000000000;
LABEL_56:
      uint64_t result = static String.hfLocalized(_:)(v2, v4);
      break;
    default:
      return result;
  }
  return result;
}

HomeDataModel::ServiceKind_optional __swiftcall ServiceKind.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_251F36B50();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 35;
  switch(v3)
  {
    case 0:
      goto LABEL_37;
    case 1:
      char v5 = 1;
      goto LABEL_37;
    case 2:
      char v5 = 2;
      goto LABEL_37;
    case 3:
      char v5 = 3;
      goto LABEL_37;
    case 4:
      char v5 = 4;
      goto LABEL_37;
    case 5:
      char v5 = 5;
      goto LABEL_37;
    case 6:
      char v5 = 6;
      goto LABEL_37;
    case 7:
      char v5 = 7;
      goto LABEL_37;
    case 8:
      char v5 = 8;
      goto LABEL_37;
    case 9:
      char v5 = 9;
      goto LABEL_37;
    case 10:
      char v5 = 10;
      goto LABEL_37;
    case 11:
      char v5 = 11;
      goto LABEL_37;
    case 12:
      char v5 = 12;
      goto LABEL_37;
    case 13:
      char v5 = 13;
      goto LABEL_37;
    case 14:
      char v5 = 14;
      goto LABEL_37;
    case 15:
      char v5 = 15;
      goto LABEL_37;
    case 16:
      char v5 = 16;
      goto LABEL_37;
    case 17:
      char v5 = 17;
      goto LABEL_37;
    case 18:
      char v5 = 18;
      goto LABEL_37;
    case 19:
      char v5 = 19;
      goto LABEL_37;
    case 20:
      char v5 = 20;
      goto LABEL_37;
    case 21:
      char v5 = 21;
      goto LABEL_37;
    case 22:
      char v5 = 22;
      goto LABEL_37;
    case 23:
      char v5 = 23;
      goto LABEL_37;
    case 24:
      char v5 = 24;
      goto LABEL_37;
    case 25:
      char v5 = 25;
      goto LABEL_37;
    case 26:
      char v5 = 26;
      goto LABEL_37;
    case 27:
      char v5 = 27;
      goto LABEL_37;
    case 28:
      char v5 = 28;
      goto LABEL_37;
    case 29:
      char v5 = 29;
      goto LABEL_37;
    case 30:
      char v5 = 30;
      goto LABEL_37;
    case 31:
      char v5 = 31;
      goto LABEL_37;
    case 32:
      char v5 = 32;
      goto LABEL_37;
    case 33:
      char v5 = 33;
      goto LABEL_37;
    case 34:
      char v5 = 34;
LABEL_37:
      char v6 = v5;
      break;
    case 35:
      break;
    case 36:
      char v6 = 36;
      break;
    case 37:
      char v6 = 37;
      break;
    case 38:
      char v6 = 38;
      break;
    case 39:
      char v6 = 39;
      break;
    case 40:
      char v6 = 40;
      break;
    case 41:
      char v6 = 41;
      break;
    case 42:
      char v6 = 42;
      break;
    case 43:
      char v6 = 43;
      break;
    case 44:
      char v6 = 44;
      break;
    case 45:
      char v6 = 45;
      break;
    case 46:
      char v6 = 46;
      break;
    case 47:
      char v6 = 47;
      break;
    case 48:
      char v6 = 48;
      break;
    case 49:
      char v6 = 49;
      break;
    case 50:
      char v6 = 50;
      break;
    case 51:
      char v6 = 51;
      break;
    case 52:
      char v6 = 52;
      break;
    default:
      char v6 = 53;
      break;
  }
  *uint64_t v2 = v6;
  return result;
}

void *static ServiceKind.allCases.getter()
{
  return &unk_270262C30;
}

unint64_t ServiceKind.rawValue.getter()
{
  return 0xD000000000000024;
}

uint64_t sub_251BD118C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_251DB1E84(*a1, *a2);
}

HomeDataModel::ServiceKind_optional sub_251BD1198(Swift::String *a1)
{
  return ServiceKind.init(rawValue:)(*a1);
}

unint64_t sub_251BD11A4@<X0>(void *a1@<X8>)
{
  unint64_t result = ServiceKind.rawValue.getter();
  *a1 = 0xD000000000000024;
  a1[1] = v3;
  return result;
}

void sub_251BD11D4(void *a1@<X8>)
{
  *a1 = &unk_270262C30;
}

uint64_t sub_251BD11E4()
{
  return sub_251F35A30();
}

uint64_t sub_251BD1244()
{
  return sub_251F359D0();
}

uint64_t sub_251BD1294()
{
  return sub_251F36D00();
}

uint64_t sub_251BD12FC()
{
  ServiceKind.rawValue.getter();
  sub_251F357B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251BD1360()
{
  return sub_251F36D00();
}

unint64_t ServiceKind.id.getter()
{
  return 0xD000000000000024;
}

unint64_t sub_251BD1400@<X0>(void *a1@<X8>)
{
  unint64_t result = ServiceKind.rawValue.getter();
  *a1 = 0xD000000000000024;
  a1[1] = v3;
  return result;
}

uint64_t ServiceKind.supportedCharacteristicKinds.getter()
{
  uint64_t v0 = ServiceKind.requiredCharacteristicKinds.getter();
  uint64_t v1 = ServiceKind.optionalCharacteristicKinds.getter();
  return sub_251D8EF64(v1, v0);
}

uint64_t ServiceKind.requiredCharacteristicKinds.getter()
{
  unsigned int v1 = *v0 - 1;
  if (v1 <= 0x33 && ((0xCFFBFFEFFE7DFuLL >> v1) & 1) != 0) {
    return sub_251C0A024((uint64_t)*(&off_26536E458 + (char)v1));
  }
  else {
    return MEMORY[0x263F8EE88];
  }
}

uint64_t ServiceKind.optionalCharacteristicKinds.getter()
{
  unsigned int v1 = *v0 - 1;
  if (v1 <= 0x33 && ((0xCF3BFFEFFE71DuLL >> v1) & 1) != 0) {
    return sub_251C0A024((uint64_t)*(&off_26536E5F8 + (char)v1));
  }
  else {
    return MEMORY[0x263F8EE88];
  }
}

uint64_t ServiceKind.isDoubleHighByDefault.getter()
{
  ServiceKind.rawValue.getter();
  uint64_t v1 = v0;
  ServiceKind.rawValue.getter();
  if (v1 == v2) {
    goto LABEL_15;
  }
  char v3 = sub_251F36B10();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v3) {
    return v3 & 1;
  }
  ServiceKind.rawValue.getter();
  uint64_t v5 = v4;
  ServiceKind.rawValue.getter();
  if (v5 == v6) {
    goto LABEL_15;
  }
  char v3 = sub_251F36B10();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v3) {
    return v3 & 1;
  }
  ServiceKind.rawValue.getter();
  uint64_t v8 = v7;
  ServiceKind.rawValue.getter();
  if (v8 == v9) {
    goto LABEL_15;
  }
  char v3 = sub_251F36B10();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v3) {
    return v3 & 1;
  }
  ServiceKind.rawValue.getter();
  uint64_t v11 = v10;
  ServiceKind.rawValue.getter();
  if (v11 == v12) {
    goto LABEL_15;
  }
  char v3 = sub_251F36B10();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v3) {
    return v3 & 1;
  }
  ServiceKind.rawValue.getter();
  uint64_t v14 = v13;
  ServiceKind.rawValue.getter();
  if (v14 == v15) {
    goto LABEL_15;
  }
  char v3 = sub_251F36B10();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v3) {
    return v3 & 1;
  }
  ServiceKind.rawValue.getter();
  uint64_t v17 = v16;
  ServiceKind.rawValue.getter();
  if (v17 == v18)
  {
LABEL_15:
    swift_bridgeObjectRelease_n();
    char v3 = 1;
    return v3 & 1;
  }
  char v3 = sub_251F36B10();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v3 & 1) == 0)
  {
    ServiceKind.rawValue.getter();
    uint64_t v20 = v19;
    ServiceKind.rawValue.getter();
    if (v20 != v21)
    {
      char v22 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v22 & 1;
    }
    goto LABEL_15;
  }
  return v3 & 1;
}

uint64_t ServiceKind.foregroundColor.getter()
{
  char v1 = *v0;
  v27[2] = *v0;
  ServiceKind.umbrellaCategory.getter(&v28);
  switch(v28)
  {
    case 1:
      uint64_t v2 = "B92ACEEE-DFF5-4773-A058-C5E64BC487B2";
      goto LABEL_9;
    case 2:
      uint64_t v2 = "563F7D20-6AFC-44CE-986D-63B28F62C9E3";
      goto LABEL_9;
    case 3:
      uint64_t v2 = "7A5BD1AB-6478-4560-AD68-D91053B75F44";
      goto LABEL_9;
    case 4:
      uint64_t v2 = "430C9F25-44E0-4F7E-BE63-1D00B1500545";
      goto LABEL_9;
    case 5:
      uint64_t v2 = "63489665-5E39-4C17-A590-755E1AAC02AE";
      goto LABEL_9;
    case 6:
      uint64_t v2 = "3E68745D-F0E1-4B73-8FBD-0E8978A33403";
      goto LABEL_9;
    case 7:
      goto LABEL_10;
    default:
      uint64_t v2 = "0CA6536B-8EAD-4013-AA62-01754F256DD5";
LABEL_9:
      if (((unint64_t)(v2 - 32) | 0x8000000000000000) == 0x8000000251F64860)
      {
LABEL_10:
        swift_bridgeObjectRelease();
      }
      else
      {
        char v3 = sub_251F36B10();
        swift_bridgeObjectRelease();
        if ((v3 & 1) == 0) {
          goto LABEL_22;
        }
      }
      ServiceKind.rawValue.getter();
      uint64_t v5 = v4;
      ServiceKind.rawValue.getter();
      if (v5 == v6) {
        goto LABEL_25;
      }
      char v7 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v7) {
        return sub_251F353A0();
      }
      ServiceKind.rawValue.getter();
      uint64_t v9 = v8;
      ServiceKind.rawValue.getter();
      if (v9 == v10) {
        goto LABEL_25;
      }
      char v11 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v11) {
        return sub_251F353A0();
      }
      ServiceKind.rawValue.getter();
      uint64_t v13 = v12;
      ServiceKind.rawValue.getter();
      if (v13 == v14) {
        goto LABEL_25;
      }
      char v15 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v15) {
        return sub_251F353A0();
      }
      ServiceKind.rawValue.getter();
      uint64_t v17 = v16;
      ServiceKind.rawValue.getter();
      if (v17 == v18) {
        goto LABEL_25;
      }
      char v19 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v19) {
        return sub_251F353A0();
      }
      ServiceKind.rawValue.getter();
      uint64_t v21 = v20;
      ServiceKind.rawValue.getter();
      if (v21 == v22)
      {
LABEL_25:
        swift_bridgeObjectRelease_n();
        return sub_251F353A0();
      }
      char v23 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v23) {
        return sub_251F353A0();
      }
LABEL_22:
      v27[1] = v1;
      ServiceKind.rawValue.getter();
      if (v24 == 0x8000000251F650A0)
      {
        swift_bridgeObjectRelease();
        return sub_251F35350();
      }
      else
      {
        char v25 = sub_251F36B10();
        swift_bridgeObjectRelease();
        if (v25)
        {
          return sub_251F35350();
        }
        else
        {
          ServiceKind.umbrellaCategory.getter(v27);
          switch(v27[0])
          {
            case 0:
              uint64_t result = sub_251F35310();
              break;
            case 2:
              return sub_251F353A0();
            case 3:
              uint64_t result = sub_251F35370();
              break;
            case 4:
              uint64_t result = sub_251F35340();
              break;
            case 6:
              uint64_t result = sub_251F35300();
              break;
            default:
              uint64_t result = sub_251F35360();
              break;
          }
        }
      }
      return result;
  }
}

void ServiceKind.umbrellaCategory.getter(unsigned char *a1@<X8>)
{
  *a1 = byte_251F4507E[*v1];
}

uint64_t ServiceKind.description.getter()
{
  return ServiceKind.localizedDescription.getter();
}

uint64_t sub_251BD1CD4()
{
  return ServiceKind.localizedDescription.getter();
}

HomeDataModel::ServiceSubKind_optional __swiftcall ServiceSubKind.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_251F36750();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static ServiceSubKind.allCases.getter()
{
  return &unk_270262D70;
}

unint64_t ServiceSubKind.rawValue.getter()
{
  return 0xD000000000000024;
}

uint64_t sub_251BD1DF8(char *a1, char *a2)
{
  return sub_251DB36AC(*a1, *a2);
}

uint64_t sub_251BD1E04()
{
  return sub_251EADDA0();
}

uint64_t sub_251BD1E0C()
{
  return sub_251AA9DFC();
}

uint64_t sub_251BD1E14()
{
  return sub_251EAE73C();
}

HomeDataModel::ServiceSubKind_optional sub_251BD1E1C(Swift::String *a1)
{
  return ServiceSubKind.init(rawValue:)(*a1);
}

unint64_t sub_251BD1E28@<X0>(void *a1@<X8>)
{
  unint64_t result = ServiceSubKind.rawValue.getter();
  *a1 = 0xD000000000000024;
  a1[1] = v3;
  return result;
}

void sub_251BD1E58(void *a1@<X8>)
{
  *a1 = &unk_270262D98;
}

uint64_t sub_251BD1E68()
{
  return sub_251F35A30();
}

uint64_t sub_251BD1EC8()
{
  return sub_251F359D0();
}

HomeDataModel::ServiceKind_optional String.serviceKind.getter@<W0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  swift_bridgeObjectRetain();
  v6._countAndFlagsBits = a1;
  v6._object = a2;
  result.value = ServiceKind.init(rawValue:)(v6).value;
  char v8 = v9;
  if (v9 == 53) {
    char v8 = 0;
  }
  *a3 = v8;
  return result;
}

HomeDataModel::ServiceSubKind_optional String.serviceSubKind.getter@<W0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  swift_bridgeObjectRetain();
  v6._countAndFlagsBits = a1;
  v6._object = a2;
  result.value = ServiceSubKind.init(rawValue:)(v6).value;
  char v8 = v9;
  if (v9 == 5) {
    char v8 = 0;
  }
  *a3 = v8;
  return result;
}

uint64_t ServiceKind.pluralLocalizedDescription.getter()
{
  uint64_t result = *v0;
  switch(*v0)
  {
    case 1:
      uint64_t v2 = 0xD000000000000038;
      uint64_t v3 = "AccessoryInformationService_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 2:
      uint64_t v2 = 0x7363697274654DLL;
      unint64_t v4 = 0xE700000000000000;
      goto LABEL_56;
    case 3:
      uint64_t v2 = 0xD000000000000028;
      uint64_t v3 = "AirPurifier_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 4:
      uint64_t v2 = 0xD00000000000002DLL;
      uint64_t v3 = "AirQualitySensor_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 5:
      uint64_t v2 = 0xD000000000000024;
      uint64_t v3 = "Battery_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 6:
      uint64_t v2 = 0xD00000000000002ALL;
      uint64_t v3 = "CameraControl_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 7:
      uint64_t v2 = 0xD000000000000036;
      uint64_t v3 = "CameraRTPStreamManagement_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 8:
      uint64_t v2 = 0xD000000000000036;
      uint64_t v3 = "CameraRecordingManagement_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 9:
      uint64_t v2 = 0xD000000000000030;
      uint64_t v3 = "CarbonDioxideSensor_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 0xA:
      uint64_t v2 = 0xD000000000000031;
      uint64_t v3 = "CarbonMonoxideSensor_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 0xB:
      uint64_t v2 = 0xD00000000000002ALL;
      uint64_t v3 = "ContactSensor_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 0xC:
      uint64_t v2 = 0x6C616E7265746E49;
      unint64_t v4 = 0xE800000000000000;
      goto LABEL_56;
    case 0xD:
      uint64_t v2 = 0x74736F6E67616944;
      unint64_t v4 = 0xEB00000000736369;
      goto LABEL_56;
    case 0xE:
      uint64_t v2 = 0xD000000000000021;
      uint64_t v3 = "Door_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 0xF:
      char v5 = "VideoDoorbell_CategoryCapitalizedPlural";
      goto LABEL_48;
    case 0x10:
      uint64_t v2 = 0xD000000000000020;
      uint64_t v3 = "Fan_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 0x11:
      uint64_t v2 = 0xD000000000000023;
      uint64_t v3 = "Faucet_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 0x12:
      uint64_t v2 = 0xD00000000000002ELL;
      uint64_t v3 = "FilterMaintenance_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 0x13:
      uint64_t v2 = 0xD00000000000002DLL;
      uint64_t v3 = "GarageDoorOpener_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 0x14:
      uint64_t v2 = 0xD000000000000029;
      uint64_t v3 = "HeaterCooler_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 0x15:
      uint64_t v2 = 0xD000000000000033;
      uint64_t v3 = "HumidifierDehumidifier_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 0x16:
      uint64_t v2 = 0xD00000000000002BLL;
      uint64_t v3 = "HumiditySensor_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 0x17:
      uint64_t v2 = 0xD000000000000028;
      uint64_t v3 = "InputSource_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 0x18:
      uint64_t v2 = 0xD00000000000002DLL;
      uint64_t v3 = "IrrigationSystem_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 0x19:
      uint64_t v2 = 0xD000000000000022;
      uint64_t v3 = "Label_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 0x1A:
      char v5 = "LeakSensor_ServiceTypeCapitalizedPlural";
      goto LABEL_48;
    case 0x1B:
      uint64_t v2 = 0xD000000000000028;
      uint64_t v3 = "LightSensor_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 0x1C:
      uint64_t v2 = 0xD000000000000026;
      uint64_t v3 = "Lightbulb_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 0x1D:
      uint64_t v2 = 0xD00000000000002BLL;
      uint64_t v3 = "LockManagement_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 0x1E:
      uint64_t v2 = 0xD00000000000002ALL;
      uint64_t v3 = "LockMechanism_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 0x1F:
      char v5 = "Microphone_ServiceTypeCapitalizedPlural";
      goto LABEL_48;
    case 0x20:
      uint64_t v2 = 0xD000000000000029;
      uint64_t v3 = "MotionSensor_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 0x21:
      uint64_t v2 = 0xD00000000000002CLL;
      uint64_t v3 = "OccupancySensor_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 0x22:
      uint64_t v2 = 0xD000000000000023;
      uint64_t v3 = "Outlet_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 0x23:
      uint64_t v2 = 0xD00000000000002BLL;
      uint64_t v3 = "SecuritySystem_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 0x24:
      uint64_t v2 = 0xD000000000000022;
      uint64_t v3 = "Slats_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 0x25:
      uint64_t v2 = 0xD000000000000028;
      uint64_t v3 = "SmokeSensor_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 0x26:
      uint64_t v2 = 0xD000000000000024;
      uint64_t v3 = "Speaker_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 0x27:
      uint64_t v2 = 0xD000000000000037;
      uint64_t v3 = "StatefulProgrammableSwitch_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 0x28:
      uint64_t v2 = 0xD000000000000038;
      uint64_t v3 = "StatelessProgrammableSwitch_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 0x29:
      uint64_t v2 = 0xD000000000000023;
      uint64_t v3 = "Switch_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 0x2A:
      uint64_t v2 = 0x4320746567726154;
      unint64_t v4 = 0xEF736C6F72746E6FLL;
      goto LABEL_56;
    case 0x2B:
      uint64_t v2 = 0xD000000000000019;
      uint64_t v3 = "Target Control Management";
      goto LABEL_55;
    case 0x2C:
      char v5 = "Television_ServiceTypeCapitalizedPlural";
      goto LABEL_48;
    case 0x2D:
      uint64_t v2 = 0xD00000000000002ELL;
      uint64_t v3 = "TemperatureSensor_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 0x2E:
      char v5 = "Thermostat_ServiceTypeCapitalizedPlural";
LABEL_48:
      unint64_t v4 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      uint64_t v2 = 0xD000000000000027;
      goto LABEL_56;
    case 0x2F:
      uint64_t v2 = 0xD000000000000022;
      uint64_t v3 = "Valve_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 0x30:
      uint64_t v2 = 0xD00000000000002BLL;
      uint64_t v3 = "VentilationFan_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 0x31:
      uint64_t v2 = 0x756F522069466957;
      unint64_t v4 = 0xEB00000000726574;
      goto LABEL_56;
    case 0x32:
      uint64_t v2 = 0x7461532069466957;
      unint64_t v4 = 0xEE006574696C6C65;
      goto LABEL_56;
    case 0x33:
      uint64_t v2 = 0xD000000000000023;
      uint64_t v3 = "Window_ServiceTypeCapitalizedPlural";
      goto LABEL_55;
    case 0x34:
      uint64_t v2 = 0xD00000000000002BLL;
      uint64_t v3 = "WindowCovering_ServiceTypeCapitalizedPlural";
LABEL_55:
      unint64_t v4 = (unint64_t)(v3 - 32) | 0x8000000000000000;
LABEL_56:
      uint64_t result = static String.hfLocalized(_:)(v2, v4);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t Collection<>.humanReadableServiceKinds.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_251AF11FC((void (*)(char *, char *))sub_251BD26AC, 0, a1, MEMORY[0x263F8D310], MEMORY[0x263F8E628], a2, MEMORY[0x263F8E658], a8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAB0);
  sub_251A1E590((unint64_t *)&qword_26B21EAB8, &qword_26B21EAB0);
  uint64_t v8 = sub_251F35620();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_251BD26AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ServiceKind.localizedDescription.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t ServiceKind.iconSymbolDeactivated.getter()
{
  unsigned __int8 v3 = *v0;
  static IconSymbol.defaultSymbol(serviceKind:)(&v3, &v2);
  return IconSymbol.rawValue.getter();
}

uint64_t ServiceKind.iconSymbolActivated.getter()
{
  unsigned __int8 v3 = *v0;
  static IconSymbol.defaultSymbol(serviceKind:)(&v3, &v2);
  return IconSymbol.onStateSymbolName.getter();
}

unint64_t ServiceKind.iconSymbolDeactivatedSlashedVersion.getter()
{
  unsigned __int8 v2 = *v0;
  static IconSymbol.defaultSymbol(serviceKind:)(&v2, &v3);
  if (v3 == 31) {
    return 0xD000000000000014;
  }
  else {
    return 0;
  }
}

unsigned __int8 *ServiceKind.iconSymbolDeactivatedRenderingMode.getter@<X0>(unsigned char *a1@<X8>)
{
  unsigned __int8 v6 = *v1;
  uint64_t result = static IconSymbol.defaultSymbol(serviceKind:)(&v6, &v7);
  unsigned int v4 = v7 - 28;
  if (v4 > 0x13) {
    char v5 = 0;
  }
  else {
    char v5 = byte_251F450B3[(char)v4];
  }
  *a1 = v5;
  return result;
}

unsigned __int8 *ServiceKind.iconSymbolActivatedRenderingMode.getter@<X0>(char *a1@<X8>)
{
  unsigned __int8 v9 = *v1;
  uint64_t result = static IconSymbol.defaultSymbol(serviceKind:)(&v9, &v10);
  unsigned int v4 = v10 - 27;
  BOOL v5 = v4 > 0x2C;
  uint64_t v6 = (1 << v4) & 0x1000000000C1;
  if (v5 || v6 == 0) {
    char v8 = 2;
  }
  else {
    char v8 = 0;
  }
  *a1 = v8;
  return result;
}

uint64_t ServiceSubKind.iconSymbolActivated.getter()
{
  unsigned __int8 v1 = *v0;
  unsigned __int8 v5 = 47;
  unsigned __int8 v4 = v1;
  static IconSymbol.defaultSymbol(for:subKind:)(&v5, &v4, &v3);
  return IconSymbol.onStateSymbolName.getter();
}

uint64_t ServiceSubKind.iconSymbolDeactivated.getter()
{
  unsigned __int8 v1 = *v0;
  unsigned __int8 v5 = 47;
  unsigned __int8 v4 = v1;
  static IconSymbol.defaultSymbol(for:subKind:)(&v5, &v4, &v3);
  return IconSymbol.rawValue.getter();
}

void *sub_251BD293C()
{
  uint64_t result = (void *)sub_251C0913C((uint64_t)&unk_27025FF08);
  off_269B9F948 = result;
  return result;
}

uint64_t static ServiceKind.serviceKindsThatRequireSpecialToggleHandling.getter()
{
  if (qword_269B9C310 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static ServiceKind.serviceKindsThatRequireSpecialToggleHandling.setter(void *a1)
{
  if (qword_269B9C310 != -1) {
    swift_once();
  }
  swift_beginAccess();
  off_269B9F948 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static ServiceKind.serviceKindsThatRequireSpecialToggleHandling.modify())()
{
  if (qword_269B9C310 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

void ServiceKind.togglingCharacteristicKind.getter(unsigned char *a1@<X8>)
{
  switch(*v1)
  {
    case 3:
    case 0x11:
    case 0x14:
    case 0x15:
    case 0x18:
    case 0x2A:
    case 0x2C:
    case 0x2F:
    case 0x30:
      *a1 = 3;
      break;
    case 0x10:
    case 0x1C:
    case 0x22:
    case 0x29:
      *a1 = 105;
      break;
    case 0x1F:
    case 0x26:
      *a1 = 84;
      break;
    default:
      *a1 = -82;
      break;
  }
}

unint64_t sub_251BD2C00()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F238);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_251F44CB0;
  *(void *)(inited + 32) = sub_251F356F0();
  *(void *)(inited + 40) = v1;
  *(void *)(inited + 48) = MEMORY[0x263F8EE88];
  *(void *)(inited + 56) = sub_251F356F0();
  *(void *)(inited + 64) = v2;
  *(void *)(inited + 72) = sub_251C0913C((uint64_t)&unk_27025F6C8);
  *(void *)(inited + 80) = sub_251F356F0();
  *(void *)(inited + 88) = v3;
  *(void *)(inited + 96) = sub_251C0913C((uint64_t)&unk_27025F6F0);
  *(void *)(inited + 104) = sub_251F356F0();
  *(void *)(inited + 112) = v4;
  *(void *)(inited + 120) = sub_251C0913C((uint64_t)&unk_27025F718);
  *(void *)(inited + 128) = sub_251F356F0();
  *(void *)(inited + 136) = v5;
  *(void *)(inited + 144) = sub_251C0913C((uint64_t)&unk_27025F740);
  *(void *)(inited + 152) = sub_251F356F0();
  *(void *)(inited + 160) = v6;
  *(void *)(inited + 168) = sub_251C0913C((uint64_t)&unk_27025F768);
  *(void *)(inited + 176) = sub_251F356F0();
  *(void *)(inited + 184) = v7;
  *(void *)(inited + 192) = sub_251C0913C((uint64_t)&unk_27025F790);
  *(void *)(inited + 200) = sub_251F356F0();
  *(void *)(inited + 208) = v8;
  *(void *)(inited + 216) = sub_251C0913C((uint64_t)&unk_27025F7B8);
  *(void *)(inited + 224) = sub_251F356F0();
  *(void *)(inited + 232) = v9;
  *(void *)(inited + 240) = sub_251C0913C((uint64_t)&unk_27025F7E0);
  *(void *)(inited + 248) = sub_251F356F0();
  *(void *)(inited + 256) = v10;
  if (qword_26B21F080 != -1) {
    swift_once();
  }
  *(void *)(inited + 264) = off_26B21F078;
  *(void *)(inited + 272) = sub_251F356F0();
  *(void *)(inited + 280) = v11;
  swift_bridgeObjectRetain();
  *(void *)(inited + 288) = sub_251C0913C((uint64_t)&unk_27025F808);
  *(void *)(inited + 296) = sub_251F356F0();
  *(void *)(inited + 304) = v12;
  *(void *)(inited + 312) = sub_251C0913C((uint64_t)&unk_27025F830);
  *(void *)(inited + 320) = sub_251F356F0();
  *(void *)(inited + 328) = v13;
  *(void *)(inited + 336) = sub_251C0913C((uint64_t)&unk_27025F858);
  *(void *)(inited + 344) = sub_251F356F0();
  *(void *)(inited + 352) = v14;
  *(void *)(inited + 360) = sub_251C0913C((uint64_t)&unk_27025F880);
  *(void *)(inited + 368) = sub_251F356F0();
  *(void *)(inited + 376) = v15;
  *(void *)(inited + 384) = sub_251C0913C((uint64_t)&unk_27025F8A8);
  *(void *)(inited + 392) = sub_251F356F0();
  *(void *)(inited + 400) = v16;
  *(void *)(inited + 408) = sub_251C0913C((uint64_t)&unk_27025F8D0);
  *(void *)(inited + 416) = sub_251F356F0();
  *(void *)(inited + 424) = v17;
  *(void *)(inited + 432) = sub_251C0913C((uint64_t)&unk_27025F8F8);
  *(void *)(inited + 440) = sub_251F356F0();
  *(void *)(inited + 448) = v18;
  *(void *)(inited + 456) = sub_251C0913C((uint64_t)&unk_27025F920);
  *(void *)(inited + 464) = sub_251F356F0();
  *(void *)(inited + 472) = v19;
  *(void *)(inited + 480) = sub_251C0913C((uint64_t)&unk_27025F948);
  *(void *)(inited + 488) = sub_251F356F0();
  *(void *)(inited + 496) = v20;
  *(void *)(inited + 504) = sub_251C0913C((uint64_t)&unk_27025F970);
  *(void *)(inited + 512) = sub_251F356F0();
  *(void *)(inited + 520) = v21;
  *(void *)(inited + 528) = sub_251C0913C((uint64_t)&unk_27025F998);
  *(void *)(inited + 536) = sub_251F356F0();
  *(void *)(inited + 544) = v22;
  *(void *)(inited + 552) = sub_251C0913C((uint64_t)&unk_27025F9C0);
  return sub_2519FB064(inited);
}

uint64_t sub_251BD2FA8()
{
  return sub_251A1E590(&qword_269B9F950, &qword_269B9F958);
}

unint64_t sub_251BD2FE8()
{
  unint64_t result = qword_26B21F058;
  if (!qword_26B21F058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21F058);
  }
  return result;
}

unint64_t sub_251BD3040()
{
  unint64_t result = qword_269B9F960;
  if (!qword_269B9F960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F960);
  }
  return result;
}

uint64_t sub_251BD3094()
{
  return sub_251A1E590(&qword_269B9F968, &qword_269B9F970);
}

uint64_t getEnumTagSinglePayload for ServiceKind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xCC) {
    goto LABEL_17;
  }
  if (a2 + 52 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 52) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 52;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 52;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 52;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x35;
  int v8 = v6 - 53;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ServiceKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 52 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 52) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xCC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xCB)
  {
    unsigned int v6 = ((a2 - 204) >> 8) + 1;
    *unint64_t result = a2 + 52;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251BD322CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 52;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServiceKind()
{
  return &type metadata for ServiceKind;
}

unsigned char *storeEnumTagSinglePayload for ServiceSubKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251BD3330);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServiceSubKind()
{
  return &type metadata for ServiceSubKind;
}

unint64_t sub_251BD3368()
{
  unint64_t result = qword_269B9F978;
  if (!qword_269B9F978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F978);
  }
  return result;
}

unint64_t sub_251BD33BC()
{
  unint64_t result = qword_269B9F980;
  if (!qword_269B9F980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F980);
  }
  return result;
}

uint64_t sub_251BD3410()
{
  uint64_t v1 = v0;
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  int v2 = (void *)qword_26B21FF50;
  type metadata accessor for StaticLightProfile();
  int v3 = (void *)sub_251F34D50();
  id v4 = objc_msgSend(v2, sel_accessoryFor_, v3);

  if (v4)
  {
    id v5 = objc_msgSend(v4, sel_profiles);

    sub_251A1A568(0, &qword_269B9FB98);
    unint64_t v6 = sub_251F35AC0();

    MEMORY[0x270FA5388](v7);
    v10[2] = v1;
    int v8 = sub_251A95638(sub_251BDF914, (uint64_t)v10, v6);
    swift_bridgeObjectRelease();
    if (v8)
    {
      self;
      uint64_t result = swift_dynamicCastObjCClass();
      if (result) {
        return result;
      }
    }
  }
  return 0;
}

uint64_t sub_251BD3584(uint64_t a1)
{
  uint64_t v44 = MEMORY[0x263F8EE78];
  uint64_t v2 = *(void *)(a1 + 64);
  uint64_t v36 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & v2;
  unint64_t v6 = &qword_269B9FB90;
  v35[1] = v35;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FB90);
  MEMORY[0x270FA5388](v40);
  uint64_t v38 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = v7;
  int64_t v37 = (unint64_t)(v3 + 63) >> 6;
  uint64_t v41 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v14 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v9++, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v9 >= v37) {
      goto LABEL_29;
    }
    unint64_t v17 = *(void *)(v36 + 8 * v9);
    if (!v17) {
      break;
    }
LABEL_20:
    unint64_t v5 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_21:
    uint64_t v19 = v41;
    uint64_t v20 = *(void *)(v41 + 48);
    uint64_t v21 = sub_251F34DA0();
    uint64_t v22 = v38;
    uint64_t v23 = (*(uint64_t (**)(char *, unint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v38, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v15, v21);
    int v43 = v35;
    uint64_t v24 = *(void *)(*(void *)(v19 + 56) + 8 * v15);
    uint64_t v25 = v40;
    *(void *)&v22[*(int *)(v40 + 48)] = v24;
    MEMORY[0x270FA5388](v23);
    uint64_t v27 = (char *)v35 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v28 = (uint64_t)v22;
    char v29 = v6;
    sub_251A4ECF0(v28, (uint64_t)v27, v6);
    uint64_t v30 = *(void *)&v27[*(int *)(v25 + 48)];
    uint64_t v31 = qword_26B2200E0;
    swift_bridgeObjectRetain();
    if (v31 != -1) {
      swift_once();
    }
    uint64_t v32 = (void *)qword_26B21FF50;
    uint64_t v33 = (void *)sub_251F34D50();
    id v34 = objc_msgSend(v32, sel_accessoryFor_, v33);

    if (v34)
    {
      id v10 = objc_msgSend(v34, sel_profiles);
      sub_251A1A568(0, &qword_269B9FB98);
      unint64_t v11 = sub_251F35AC0();

      swift_bridgeObjectRetain();
      uint64_t v12 = v42;
      unint64_t v13 = sub_251BDB560(v11, v30);
      uint64_t v42 = v12;
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v13 = MEMORY[0x263F8EE78];
    }
    unint64_t v6 = v29;
    sub_251A1B064((uint64_t)v27, v29);
    uint64_t result = sub_251ED6D30(v13);
  }
  int64_t v18 = v9 + 1;
  if (v9 + 1 >= v37) {
    goto LABEL_29;
  }
  unint64_t v17 = *(void *)(v36 + 8 * v18);
  if (v17) {
    goto LABEL_19;
  }
  int64_t v18 = v9 + 2;
  if (v9 + 2 >= v37) {
    goto LABEL_29;
  }
  unint64_t v17 = *(void *)(v36 + 8 * v18);
  if (v17) {
    goto LABEL_19;
  }
  int64_t v18 = v9 + 3;
  if (v9 + 3 >= v37) {
    goto LABEL_29;
  }
  unint64_t v17 = *(void *)(v36 + 8 * v18);
  if (v17) {
    goto LABEL_19;
  }
  int64_t v18 = v9 + 4;
  if (v9 + 4 >= v37)
  {
LABEL_29:
    swift_release();
    return v44;
  }
  unint64_t v17 = *(void *)(v36 + 8 * v18);
  if (v17)
  {
LABEL_19:
    int64_t v9 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v37) {
      goto LABEL_29;
    }
    unint64_t v17 = *(void *)(v36 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_20;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t static StaticLightProfile.setNaturalLight(_:lightProfiles:waitForWriteRequestCompletion:)(uint64_t a1, char a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v4 + 361) = a4;
  *(unsigned char *)(v4 + 360) = a2;
  *(void *)(v4 + 144) = a1;
  *(void *)(v4 + 152) = a3;
  *(void *)(v4 + 160) = type metadata accessor for StateSnapshot.UpdateType(0);
  *(void *)(v4 + 168) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  *(void *)(v4 + 176) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9A8);
  *(void *)(v4 + 184) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251BD3A58, 0, 0);
}

uint64_t sub_251BD3A58()
{
  __swift_project_boxed_opaque_existential_1(*(void **)(v0 + 152), *(void *)(*(void *)(v0 + 152) + 24));
  if (sub_251F35EE0() < 1)
  {
    uint64_t v3 = *(void *)(v0 + 144);
    uint64_t v4 = type metadata accessor for StateSnapshot(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    *(void *)(v0 + 192) = sub_251F35C80();
    *(void *)(v0 + 200) = sub_251F35C70();
    uint64_t v2 = sub_251F35C00();
    return MEMORY[0x270FA2498](sub_251BD3BBC, v2, v1);
  }
}

uint64_t sub_251BD3BBC()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251BD3C54, 0, 0);
}

uint64_t sub_251BD3C54()
{
  *(void *)(v0 + 208) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251BD3CE0, v2, v1);
}

uint64_t sub_251BD3CE0()
{
  swift_release();
  *(void *)(v0 + 216) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251BD3D54, 0, 0);
}

uint64_t sub_251BD3D54()
{
  *(void *)(v0 + 224) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251BD3DE0, v2, v1);
}

uint64_t sub_251BD3DE0()
{
  uint64_t v1 = *(void *)(v0 + 216);
  swift_release();
  uint64_t v2 = (void **)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  uint64_t v3 = *v2;
  *(void *)(v0 + 232) = *v2;
  id v4 = v3;
  return MEMORY[0x270FA2498](sub_251BD3E80, 0, 0);
}

uint64_t sub_251BD3E80()
{
  if (!*(void *)(v0 + 232))
  {
LABEL_4:
    uint64_t v4 = *(void *)(v0 + 144);
    uint64_t v5 = type metadata accessor for StateSnapshot(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
  uint64_t v1 = *(void *)(v0 + 184);
  __swift_project_boxed_opaque_existential_1(*(void **)(v0 + 152), *(void *)(*(void *)(v0 + 152) + 24));
  sub_251F35F10();
  uint64_t v2 = type metadata accessor for StaticLightProfile();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    uint64_t v3 = *(void *)(v0 + 184);

    sub_251A1B064(v3, &qword_269B9C9A8);
    goto LABEL_4;
  }
  *(void *)(v0 + 240) = sub_251F35C70();
  uint64_t v9 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251BD4044, v9, v8);
}

uint64_t sub_251BD4044()
{
  swift_release();
  *(void *)(v0 + 248) = sub_251BD3410();
  return MEMORY[0x270FA2498](sub_251BD40B8, 0, 0);
}

uint64_t sub_251BD40B8()
{
  uint64_t v1 = *(void *)(v0 + 248);
  sub_251BDF8B4(*(void *)(v0 + 184), (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
  if (v1
    && (uint64_t v2 = *(void **)(v0 + 248),
        id v3 = objc_msgSend(v2, sel_accessory),
        v2,
        v3)
    && (id v4 = objc_msgSend(v3, sel_home),
        *(void *)(v0 + 256) = v4,
        v3,
        v4))
  {
    char v5 = *(unsigned char *)(v0 + 360);
    __swift_project_boxed_opaque_existential_1(*(void **)(v0 + 152), *(void *)(*(void *)(v0 + 152) + 24));
    *(unsigned char *)(swift_task_alloc() + 16) = v5;
    char v6 = sub_251F359A0();
    swift_task_dealloc();
    if (v6)
    {
      int v23 = *(unsigned __int8 *)(v0 + 361);
      __swift_project_boxed_opaque_existential_1(*(void **)(v0 + 152), *(void *)(*(void *)(v0 + 152) + 24));
      *(void *)(v0 + 128) = sub_2519FA804(MEMORY[0x263F8EE78]);
      *(unsigned char *)(swift_task_alloc() + 16) = v5;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F990);
      sub_251F35950();
      swift_task_dealloc();
      *(void *)(v0 + 264) = *(void *)(v0 + 120);
      if (v23 == 1)
      {
        uint64_t v24 = (uint64_t (*)(char, uint64_t))((char *)&dword_269B9F9B0 + dword_269B9F9B0);
        uint64_t v7 = (void *)swift_task_alloc();
        *(void *)(v0 + 272) = v7;
        *uint64_t v7 = v0;
        v7[1] = sub_251BD44A0;
        uint64_t v8 = *(void *)(v0 + 152);
        char v9 = *(unsigned char *)(v0 + 360);
        return v24(v9, v8);
      }
      else
      {
        unint64_t v15 = *(void **)(v0 + 232);
        sub_251A1A4EC(*(void *)(v0 + 152), v0 + 16);
        sub_251A1A4EC(v0 + 16, v0 + 56);
        uint64_t v16 = swift_allocObject();
        *(void *)(v0 + 288) = v16;
        *(unsigned char *)(v16 + 16) = v5;
        sub_251A1A444((long long *)(v0 + 16), v16 + 24);
        *(void *)(v16 + 64) = v4;
        *(void *)(v16 + 72) = v15;
        id v17 = v15;
        id v18 = v4;
        id v19 = v17;
        id v20 = v18;
        *(void *)(v0 + 296) = sub_251F35C70();
        uint64_t v22 = sub_251F35C00();
        *(void *)(v0 + 304) = v22;
        *(void *)(v0 + 312) = v21;
        return MEMORY[0x270FA2498](sub_251BD48C0, v22, v21);
      }
    }
    unint64_t v11 = *(void **)(v0 + 232);
  }
  else
  {
    unint64_t v11 = *(void **)(v0 + 232);
  }

  uint64_t v12 = *(void *)(v0 + 144);
  uint64_t v13 = type metadata accessor for StateSnapshot(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_251BD44A0()
{
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_251BD4820;
  }
  else {
    uint64_t v2 = sub_251BD45B4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251BD45B4()
{
  uint64_t v13 = v0;
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_251F350A0();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B21F290);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_251F35080();
  os_log_type_t v3 = sub_251F35FD0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v12 = v5;
    *(_DWORD *)uint64_t v4 = 136446210;
    sub_251F34DA0();
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_251F35560();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 136) = sub_251A00E84(v6, v8, &v12);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2519F3000, v2, v3, "start override profile write %{public}s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v5, -1, -1);
    MEMORY[0x2533AC760](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  *(void *)(v0 + 328) = sub_251F35C70();
  uint64_t v10 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251BD4CE8, v10, v9);
}

uint64_t sub_251BD4820()
{
  uint64_t v1 = (void *)v0[32];
  uint64_t v2 = (void *)v0[29];
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_251BD48C0()
{
  id v1 = objc_msgSend(self, sel_processInfo);
  id v2 = objc_msgSend(v1, sel_environment);

  uint64_t v3 = sub_251F35550();
  if (*(void *)(v3 + 16) && (sub_2519FE798(0xD00000000000001BLL, 0x8000000251F68FC0), (v4 & 1) != 0))
  {
    uint64_t v5 = *(void *)(v0 + 232);
    swift_bridgeObjectRelease();
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 320) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_251BD4B34;
    uint64_t v7 = *(void *)(v0 + 256);
    uint64_t v8 = *(unsigned __int8 *)(v0 + 360);
    return sub_251BDC2D4(v8, v0 + 56, v7, v5);
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 288);
    uint64_t v11 = *(void *)(v0 + 176);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v12 = sub_251F35CD0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
    swift_retain();
    uint64_t v13 = sub_251F35C70();
    uint64_t v14 = (void *)swift_allocObject();
    uint64_t v15 = MEMORY[0x263F8F500];
    v14[2] = v13;
    v14[3] = v15;
    v14[4] = &unk_269B9F9A0;
    v14[5] = v10;
    sub_251ACBB48(v11, (uint64_t)&unk_269B9D9C8, (uint64_t)v14);
    swift_release();
    swift_release();
    uint64_t v16 = *(void **)(v0 + 256);
    id v17 = *(void **)(v0 + 232);
    __swift_destroy_boxed_opaque_existential_0(v0 + 56);

    return MEMORY[0x270FA2498](sub_251BDF938, 0, 0);
  }
}

uint64_t sub_251BD4B34()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 312);
  uint64_t v3 = *(void *)(v1 + 304);
  return MEMORY[0x270FA2498](sub_251BD4C54, v3, v2);
}

uint64_t sub_251BD4C54()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(void **)(v0 + 256);
  uint64_t v2 = *(void **)(v0 + 232);
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);

  return MEMORY[0x270FA2498](sub_251BDF938, 0, 0);
}

uint64_t sub_251BD4CE8()
{
  swift_release();
  if (qword_26B21E6F8 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251BD4D80, 0, 0);
}

uint64_t sub_251BD4D80()
{
  *(void *)(v0 + 336) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251BD4E0C, v2, v1);
}

uint64_t sub_251BD4E0C()
{
  swift_release();
  *(void *)(v0 + 344) = qword_26B21E638;
  return MEMORY[0x270FA2498](sub_251BD4E80, 0, 0);
}

uint64_t sub_251BD4E80()
{
  uint64_t v1 = (void *)v0[32];
  uint64_t v2 = v0[33];
  uint64_t v3 = v0[29];
  uint64_t v4 = v0[21];
  uint64_t v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9E290) + 48);
  id v6 = objc_msgSend(v1, sel_uniqueIdentifier);
  sub_251F34D80();

  *(void *)(v4 + v5) = v2;
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[44] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_251BD4F90;
  uint64_t v8 = v0[32];
  uint64_t v9 = v0[21];
  uint64_t v10 = v0[18];
  return sub_251F2AD24(v10, v9, v3, v8, 0);
}

uint64_t sub_251BD4F90()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 168);
  swift_task_dealloc();
  sub_251BDF8B4(v1, type metadata accessor for StateSnapshot.UpdateType);
  return MEMORY[0x270FA2498](sub_251BD50BC, 0, 0);
}

uint64_t sub_251BD50BC()
{
  uint64_t v1 = *(void **)(v0 + 232);

  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = type metadata accessor for StateSnapshot(0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 0, 1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t type metadata accessor for StaticLightProfile()
{
  uint64_t result = qword_26B21F0E8;
  if (!qword_26B21F0E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t StaticLightProfile.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t StaticLightProfile.isNaturalLightSupported.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticLightProfile() + 20));
}

uint64_t StaticLightProfile.isNaturalLightEnabled.getter()
{
  uint64_t v1 = (char *)(v0 + *(int *)(type metadata accessor for StaticLightProfile() + 24));
  char v2 = *v1;
  int v3 = v1[1];
  if (v3 == 2) {
    LOBYTE(v3) = v2;
  }
  return v3 & 1;
}

uint64_t WritableProfileValue.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(a1 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v7 + 16);
  uint64_t v11 = sub_251F36190();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v17 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v17 - v13, v3 + *(int *)(a1 + 52), v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v3, a1);
  uint64_t v15 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, v10) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 16))(a2, v9, v10);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, a1);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, a1);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a2, v14, v10);
  }
}

uint64_t StaticLightProfile.accessoryId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StaticLightProfile() + 28);
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

BOOL static WritableProfileValue.== infix(_:_:)(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6)
{
  uint64_t v48 = a4;
  uint64_t v49 = a5;
  uint64_t v52 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v46 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_251F36190();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v47 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v14 = (char *)&v44 - v13;
  uint64_t v53 = *(void *)(v11 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  id v20 = (char *)&v44 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v44 - v21;
  uint64_t v23 = *(void *)(a6 + 8);
  uint64_t v50 = a2;
  uint64_t v24 = v23;
  if ((sub_251F35650() & 1) == 0) {
    return 0;
  }
  uint64_t v44 = v24;
  uint64_t v45 = v17;
  uint64_t v54 = a3;
  uint64_t v55 = v48;
  unint64_t v56 = v49;
  uint64_t v57 = a6;
  uint64_t v25 = type metadata accessor for WritableProfileValue();
  uint64_t v26 = a1 + *(int *)(v25 + 52);
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 16);
  v27(v22, v26, v11);
  v27(v20, (uint64_t)&v50[*(int *)(v25 + 52)], v11);
  uint64_t v28 = &v14[*(int *)(TupleTypeMetadata2 + 48)];
  v27(v14, (uint64_t)v22, v11);
  v27(v28, (uint64_t)v20, v11);
  char v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48);
  uint64_t v50 = v14;
  if (v29(v14, 1, a3) == 1)
  {
    uint64_t v30 = v50;
    uint64_t v31 = *(void (**)(char *, uint64_t))(v53 + 8);
    v31(v20, v11);
    v31(v22, v11);
    if (v29(v28, 1, a3) == 1)
    {
      v31(v30, v11);
      return 1;
    }
    goto LABEL_7;
  }
  uint64_t v49 = v22;
  uint64_t v32 = v28;
  uint64_t v33 = v45;
  v27(v45, (uint64_t)v50, v11);
  id v34 = v32;
  unsigned int v35 = v29(v32, 1, a3);
  uint64_t v36 = v52;
  int64_t v37 = (void (**)(char *, uint64_t))(v52 + 8);
  if (v35 == 1)
  {
    uint64_t v30 = v50;
    uint64_t v38 = *(void (**)(char *, uint64_t))(v53 + 8);
    v38(v20, v11);
    v38(v49, v11);
    (*v37)(v33, a3);
LABEL_7:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v30, TupleTypeMetadata2);
    return 0;
  }
  uint64_t v39 = v46;
  (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v46, v34, a3);
  char v40 = sub_251F35650();
  uint64_t v41 = *(void (**)(char *, uint64_t))(v36 + 8);
  v41(v39, a3);
  uint64_t v42 = *(void (**)(char *, uint64_t))(v53 + 8);
  v42(v20, v11);
  v42(v49, v11);
  v41(v33, a3);
  v42(v50, v11);
  return (v40 & 1) != 0;
}

uint64_t StaticLightProfile.hash(into:)()
{
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  uint64_t v1 = type metadata accessor for StaticLightProfile();
  sub_251F36CC0();
  int v2 = *(unsigned __int8 *)(v0 + *(int *)(v1 + 24) + 1);
  sub_251F36CC0();
  if (v2 != 2) {
    sub_251F36CC0();
  }
  sub_251F36CC0();
  return sub_251F35610();
}

unint64_t sub_251BD5B3C()
{
  unint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0x726F737365636361;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251BD5BD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251BDCB88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251BD5BFC(uint64_t a1)
{
  unint64_t v2 = sub_251BDCB34();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251BD5C38(uint64_t a1)
{
  unint64_t v2 = sub_251BDCB34();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticLightProfile.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F9B8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251BDCB34();
  sub_251F36DA0();
  char v19 = 0;
  sub_251F34DA0();
  sub_251A1A8EC(&qword_26B21E348);
  sub_251F36A20();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for StaticLightProfile();
    char v18 = 1;
    sub_251F369E0();
    uint64_t v10 = (char *)(v3 + *(int *)(v9 + 24));
    char v11 = *v10;
    LOBYTE(v10) = v10[1];
    char v16 = v11;
    char v17 = (char)v10;
    char v15 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F9C8);
    sub_251A1E590(&qword_269B9F9D0, &qword_269B9F9C8);
    sub_251F36A20();
    char v14 = 3;
    sub_251F36A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticLightProfile.hashValue.getter()
{
  sub_251F36CA0();
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  uint64_t v1 = type metadata accessor for StaticLightProfile();
  sub_251F36CC0();
  int v2 = *(unsigned __int8 *)(v0 + *(int *)(v1 + 24) + 1);
  sub_251F36CC0();
  if (v2 != 2) {
    sub_251F36CC0();
  }
  sub_251F36CC0();
  sub_251F35610();
  return sub_251F36D00();
}

uint64_t StaticLightProfile.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F9D8);
  uint64_t v4 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticLightProfile();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251BDCB34();
  sub_251F36D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v29 = v7;
  uint64_t v30 = v9;
  uint64_t v31 = v4;
  uint64_t v10 = sub_251F34DA0();
  uint64_t v32 = v28;
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v40 = 0;
  uint64_t v14 = sub_251A1A8EC(&qword_269B9CC80);
  sub_251F36880();
  v28[1] = v14;
  v28[2] = v12;
  v28[3] = v11;
  char v15 = (void *)(v11 + 32);
  char v16 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v17 = (uint64_t)v30;
  char v18 = v13;
  char v19 = v15;
  v16(v30, v18, v10);
  char v39 = 1;
  char v20 = sub_251F36840();
  v28[0] = v16;
  uint64_t v32 = v19;
  uint64_t v21 = v29;
  *(unsigned char *)(v17 + *(int *)(v29 + 20)) = v20 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F9C8);
  char v36 = 2;
  sub_251A1E590(&qword_269B9F9E0, &qword_269B9F9C8);
  uint64_t v22 = sub_251F36880();
  char v23 = v38;
  uint64_t v24 = (unsigned char *)(v17 + *(int *)(v21 + 24));
  *uint64_t v24 = v37;
  v24[1] = v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)v28 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v35 = 3;
  sub_251F36880();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v34);
  ((void (*)(uint64_t, char *, uint64_t))v28[0])(v17 + *(int *)(v21 + 28), v26, v10);
  sub_251BDF614(v17, v33, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_251BDF8B4(v17, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
}

uint64_t sub_251BD6474(uint64_t a1, uint64_t a2)
{
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  sub_251F36CC0();
  int v4 = *(unsigned __int8 *)(v2 + *(int *)(a2 + 24) + 1);
  sub_251F36CC0();
  if (v4 != 2) {
    sub_251F36CC0();
  }
  sub_251F36CC0();
  return sub_251F35610();
}

uint64_t sub_251BD6550(uint64_t a1, uint64_t a2)
{
  sub_251F36CA0();
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  sub_251F36CC0();
  int v4 = *(unsigned __int8 *)(v2 + *(int *)(a2 + 24) + 1);
  sub_251F36CC0();
  if (v4 != 2) {
    sub_251F36CC0();
  }
  sub_251F36CC0();
  sub_251F35610();
  return sub_251F36D00();
}

uint64_t sub_251BD663C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticLightProfile.init(from:)(a1, a2);
}

uint64_t sub_251BD6654(void *a1)
{
  return StaticLightProfile.encode(to:)(a1);
}

uint64_t sub_251BD666C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9A8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = objc_msgSend(a2, sel_uniqueIdentifier);
  sub_251F34D80();

  id v16 = objc_msgSend(a3, sel_uniqueIdentifier);
  uint64_t v17 = type metadata accessor for StaticLightProfile();
  sub_251F34D80();

  BOOL v18 = sub_251BDCD34(a2, a4);
  uint64_t v26 = a5;
  if (v18)
  {
    sub_251A1B128(a5, (uint64_t)v14, &qword_269B9C9A8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v14, 1, v17) == 1)
    {
      sub_251A1B064((uint64_t)v14, &qword_269B9C9A8);
      uint64_t v19 = 2;
    }
    else
    {
      uint64_t v19 = v14[*(int *)(v17 + 24) + 1];
      sub_251BDF8B4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
    }
    char v21 = sub_251BD68CC(a1, a2, v19);
    id v22 = objc_msgSend(a2, sel_settings);
    unsigned __int8 v20 = objc_msgSend(v22, sel_isNaturalLightingEnabled);
  }
  else
  {

    unsigned __int8 v20 = 0;
    char v21 = 2;
  }
  sub_251A1B064(v26, &qword_269B9C9A8);
  uint64_t result = sub_251BDF8B4(a1, type metadata accessor for StateSnapshot.UpdateType);
  uint64_t v24 = (unsigned __int8 *)(a6 + *(int *)(v17 + 24));
  *uint64_t v24 = v20;
  v24[1] = v21;
  *(unsigned char *)(a6 + *(int *)(v17 + 20)) = v18;
  return result;
}

uint64_t sub_251BD68CC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251BDF614(a1, (uint64_t)v8, type metadata accessor for StateSnapshot.UpdateType);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 6)
  {
    if (EnumCaseMultiPayload != 7)
    {
      sub_251BDF8B4((uint64_t)v8, type metadata accessor for StateSnapshot.UpdateType);
      return a3;
    }
    uint64_t v10 = *(void *)&v8[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9E290) + 48)];
    id v11 = objc_msgSend(a2, sel_uniqueIdentifier);
    uint64_t v12 = sub_251F34DA0();
    uint64_t v13 = *(void *)(v12 - 8);
    MEMORY[0x270FA5388](v12);
    id v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34D80();

    if (*(void *)(v10 + 16) && (unint64_t v16 = sub_2519FE584((uint64_t)v15), (v17 & 1) != 0))
    {
      int v18 = *(char *)(*(void *)(v10 + 56) + v16);
      swift_bridgeObjectRelease();
      uint64_t v19 = *(void (**)(char *, uint64_t))(v13 + 8);
      v19(v15, v12);
      if ((v18 & 0x80000000) == 0)
      {
        a3 = v18 & 1;
        v19(v8, v12);
        return a3;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v19 = *(void (**)(char *, uint64_t))(v13 + 8);
      v19(v15, v12);
    }
    v19(v8, v12);
    return a3;
  }
  uint64_t v20 = *(void *)&v8[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9E298) + 48)];
  id v21 = objc_msgSend(a2, sel_uniqueIdentifier);
  uint64_t v22 = sub_251F34DA0();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v28 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  LOBYTE(v21) = sub_251DB3C24((uint64_t)v25, v20);
  swift_bridgeObjectRelease();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v23 + 8);
  v26(v25, v22);
  v26(v8, v22);
  if (v21) {
    return 2;
  }
  else {
    return a3;
  }
}

uint64_t sub_251BD6C30(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_uniqueIdentifier);
  uint64_t v2 = sub_251F34DA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  char v6 = sub_251F34D70();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6 & 1;
}

uint64_t sub_251BD6D3C(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v3 = (unsigned __int8 *)(a1 + *(int *)(type metadata accessor for StaticLightProfile() + 24));
  int v4 = *v3;
  int v5 = v3[1];
  if (v5 == 2) {
    int v5 = v4;
  }
  return (v2 ^ v5) & 1;
}

uint64_t sub_251BD6D98(uint64_t *a1, uint64_t a2, char a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *a1;
  *a1 = 0x8000000000000000;
  sub_251A0FA5C(a3 & 1, (uint64_t)v9, isUniquelyReferenced_nonNull_native);
  *a1 = v13;
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_251BD6ED0(uint64_t *a1, uint64_t a2)
{
  return sub_251BD6D98(a1, a2, *(unsigned char *)(v2 + 16));
}

uint64_t sub_251BD6EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_251AB3DD4;
  return sub_251BDC2D4(a1, a2, a3, a4);
}

uint64_t sub_251BD6FA0()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);

  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_251BD6FE8()
{
  uint64_t v2 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v3 = v0 + 24;
  uint64_t v5 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_251AB3DD4;
  return sub_251BD6EEC(v2, v3, v5, v4);
}

uint64_t sub_251BD7098(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v4 + 168) = a4;
  *(void *)(v4 + 96) = a2;
  *(void *)(v4 + 104) = a3;
  *(void *)(v4 + 88) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  *(void *)(v4 + 112) = swift_task_alloc();
  *(void *)(v4 + 120) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251BD7144, 0, 0);
}

uint64_t sub_251BD7144()
{
  unint64_t v1 = *(void *)(v0 + 104);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_251F366C0();
    uint64_t v2 = v3;
    if (v3) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FB70);
    *(void *)(v0 + 128) = v24;
    *(void *)(v0 + 136) = *(void *)(v24 - 8);
    *(void *)(v0 + 144) = swift_task_alloc();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FB20);
    sub_251F35C40();
    *(void *)(v0 + 152) = MEMORY[0x263F8EE80];
    uint64_t v25 = sub_251A1E590(&qword_269B9FB78, &qword_269B9FB70);
    uint64_t v26 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v26;
    *uint64_t v26 = v0;
    v26[1] = sub_251BD75B4;
    uint64_t v4 = *(void *)(v0 + 128);
    uint64_t v3 = v0 + 72;
    uint64_t v5 = v25;
    return MEMORY[0x270FA1E80](v3, v4, v5);
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v3 = swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_17;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v6 = 0;
    uint64_t v31 = v2;
    char v30 = *(unsigned char *)(v0 + 168);
    unint64_t v29 = v1 & 0xC000000000000001;
    uint64_t v28 = *(void *)(v0 + 104) + 32;
    while (1)
    {
      if (v29) {
        id v8 = (id)MEMORY[0x2533AB3A0](v6, *(void *)(v0 + 104));
      }
      else {
        id v8 = *(id *)(v28 + 8 * v6);
      }
      uint64_t v9 = v8;
      uint64_t v11 = *(void *)(v0 + 112);
      uint64_t v10 = *(void *)(v0 + 120);
      uint64_t v12 = sub_251F35CD0();
      uint64_t v13 = *(void *)(v12 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v10, 1, 1, v12);
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = 0;
      id v15 = (void *)(v14 + 16);
      *(void *)(v14 + 24) = 0;
      *(void *)(v14 + 32) = v9;
      *(unsigned char *)(v14 + 40) = v30;
      sub_251A1B128(v10, v11, &qword_26B220BB0);
      LODWORD(v10) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
      id v16 = v9;
      uint64_t v17 = *(void *)(v0 + 112);
      if (v10 == 1)
      {
        sub_251A1B064(*(void *)(v0 + 112), &qword_26B220BB0);
        if (!*v15) {
          goto LABEL_13;
        }
      }
      else
      {
        sub_251F35CC0();
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v17, v12);
        if (!*v15)
        {
LABEL_13:
          uint64_t v18 = 0;
          uint64_t v20 = 0;
          goto LABEL_14;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v18 = sub_251F35C00();
      uint64_t v20 = v19;
      swift_unknownObjectRelease();
LABEL_14:
      uint64_t v21 = **(void **)(v0 + 96);
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = &unk_269B9FBC8;
      *(void *)(v22 + 24) = v14;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FB20);
      uint64_t v23 = v20 | v18;
      if (v20 | v18)
      {
        uint64_t v23 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v18;
        *(void *)(v0 + 40) = v20;
      }
      ++v6;
      uint64_t v7 = *(void *)(v0 + 120);
      *(void *)(v0 + 48) = 1;
      *(void *)(v0 + 56) = v23;
      *(void *)(v0 + 64) = v21;
      swift_task_create();

      swift_release();
      sub_251A1B064(v7, &qword_26B220BB0);
      if (v31 == v6) {
        goto LABEL_17;
      }
    }
  }
  __break(1u);
  return MEMORY[0x270FA1E80](v3, v4, v5);
}

uint64_t sub_251BD75B4()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 144);
    uint64_t v6 = v2 + 128;
    uint64_t v4 = *(void *)(v2 + 128);
    uint64_t v5 = *(void *)(v6 + 8);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    uint64_t v7 = (uint64_t (*)())nullsub_1;
  }
  else
  {
    uint64_t v7 = sub_251BD76F0;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_251BD76F0()
{
  uint64_t v2 = v0 + 9;
  uint64_t v1 = v0[9];
  if (v1)
  {
    uint64_t v3 = *(void *)(v1 + 16);
    if (v3)
    {
      uint64_t v34 = v0 + 9;
      uint64_t v41 = v0 + 10;
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FB80);
      uint64_t v4 = v1
         + ((*(unsigned __int8 *)(*(void *)(v38 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v38 - 8) + 80));
      uint64_t v37 = *(void *)(*(void *)(v38 - 8) + 72);
      char v35 = v0;
      uint64_t v5 = (void *)v0[19];
      swift_bridgeObjectRetain();
      while (1)
      {
        uint64_t v8 = swift_task_alloc();
        sub_251A1B128(v4, v8, &qword_269B9FB80);
        uint64_t v9 = *(void **)(v8 + *(int *)(v38 + 48));
        if (v9)
        {
          uint64_t v39 = v3;
          uint64_t v10 = sub_251F34DA0();
          uint64_t v11 = *(void *)(v10 - 8);
          uint64_t v12 = swift_task_alloc();
          uint64_t v40 = v10;
          char v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
          v36(v12, v8, v10);
          uint64_t v13 = v9;
          id v14 = v9;
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v41 = v5;
          unint64_t v18 = sub_2519FE584(v12);
          uint64_t v19 = v5[2];
          BOOL v20 = (v16 & 1) == 0;
          uint64_t v21 = v19 + v20;
          if (__OFADD__(v19, v20))
          {
            __break(1u);
LABEL_29:
            __break(1u);
            return MEMORY[0x270FA1E80](v21, v16, v17);
          }
          char v22 = v16;
          if (v5[3] >= v21)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_251A16284();
            }
          }
          else
          {
            sub_251A09324(v21, isUniquelyReferenced_nonNull_native);
            unint64_t v23 = sub_2519FE584(v12);
            if ((v22 & 1) != (v24 & 1))
            {
              return sub_251F36BA0();
            }
            unint64_t v18 = v23;
          }
          uint64_t v5 = (void *)*v41;
          if (v22)
          {
            uint64_t v6 = v5[7];
            uint64_t v7 = 8 * v18;

            *(void *)(v6 + v7) = v13;
          }
          else
          {
            v5[(v18 >> 6) + 8] |= 1 << v18;
            uint64_t v21 = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v36)(v5[6] + *(void *)(v11 + 72) * v18, v12, v40);
            *(void *)(v5[7] + 8 * v18) = v13;
            uint64_t v25 = v5[2];
            BOOL v26 = __OFADD__(v25, 1);
            uint64_t v27 = v25 + 1;
            if (v26) {
              goto LABEL_29;
            }
            v5[2] = v27;
          }
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v40);
          swift_task_dealloc();
          uint64_t v3 = v39;
        }
        sub_251A1B064(v8, &qword_269B9FB80);
        swift_task_dealloc();
        v4 += v37;
        if (!--v3)
        {
          swift_bridgeObjectRelease();
          uint64_t v2 = v34;
          uint64_t v0 = v35;
          goto LABEL_22;
        }
      }
    }
    uint64_t v5 = (void *)v0[19];
LABEL_22:
    swift_bridgeObjectRelease();
    v0[19] = v5;
    uint64_t v32 = sub_251A1E590(&qword_269B9FB78, &qword_269B9FB70);
    uint64_t v33 = (void *)swift_task_alloc();
    v0[20] = v33;
    *uint64_t v33 = v0;
    v33[1] = sub_251BD75B4;
    uint64_t v16 = v0[16];
    uint64_t v21 = (uint64_t)v2;
    uint64_t v17 = v32;
    return MEMORY[0x270FA1E80](v21, v16, v17);
  }
  else
  {
    uint64_t v28 = v0[19];
    unint64_t v29 = (void *)v0[11];
    (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    *unint64_t v29 = v28;
    swift_task_dealloc();
    swift_task_dealloc();
    char v30 = (uint64_t (*)(void))v0[1];
    return v30();
  }
}

uint64_t sub_251BD7BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 152) = a5;
  *(void *)(v5 + 128) = a1;
  *(void *)(v5 + 136) = a4;
  return MEMORY[0x270FA2498](sub_251BD7BC8, 0, 0);
}

uint64_t sub_251BD7BC8()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 152);
  uint64_t v2 = *(void **)(v0 + 136);
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_251BD7CC4;
  uint64_t v3 = swift_continuation_init();
  *(void *)(v0 + 80) = MEMORY[0x263EF8330];
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_251A5B804;
  *(void *)(v0 + 104) = &block_descriptor_49;
  *(void *)(v0 + 112) = v3;
  objc_msgSend(v2, sel_setNaturalLightingEnabled_completionHandler_, v1, v0 + 80);
  return MEMORY[0x270FA23F0](v0 + 16);
}

uint64_t sub_251BD7CC4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 144) = v1;
  if (v1) {
    uint64_t v2 = sub_251BD821C;
  }
  else {
    uint64_t v2 = sub_251BD7DD4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251BD7DD4()
{
  id v1 = objc_msgSend(*(id *)(v0 + 136), sel_services);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
  unint64_t v2 = sub_251F35AC0();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_251F366C0();
    uint64_t v3 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_17:
    unint64_t v24 = MEMORY[0x263F8EE78];
    goto LABEL_18;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_17;
  }
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v5 = 0;
  unint64_t v24 = MEMORY[0x263F8EE78];
  unint64_t v21 = v2;
  unint64_t v22 = v2 & 0xC000000000000001;
  uint64_t v23 = v3;
  do
  {
    if (v22) {
      id v7 = (id)MEMORY[0x2533AB3A0](v5, v2);
    }
    else {
      id v7 = *(id *)(v2 + 8 * v5 + 32);
    }
    uint64_t v8 = v7;
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FB80);
    uint64_t v25 = *(void *)(v9 - 8);
    uint64_t v26 = swift_task_alloc();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FB88);
    uint64_t v10 = swift_task_alloc();
    uint64_t v11 = *(int *)(v9 + 48);
    id v12 = objc_msgSend(v8, sel_uniqueIdentifier);
    uint64_t v13 = sub_251F34DA0();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = swift_task_alloc();
    sub_251F34D80();

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v10, v15, v13);
    *(void *)(v10 + v11) = 0;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v10, 0, 1, v9);

    swift_task_dealloc();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v10, 1, v9) == 1)
    {
      sub_251A1B064(v10, &qword_269B9FB88);
      swift_task_dealloc();
      unint64_t v2 = v21;
      uint64_t v6 = v23;
    }
    else
    {
      sub_251A4ECF0(v10, v26, &qword_269B9FB80);
      swift_task_dealloc();
      uint64_t v16 = swift_task_alloc();
      sub_251A4ECF0(v26, v16, &qword_269B9FB80);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v24 = sub_251F10630(0, *(void *)(v24 + 16) + 1, 1, v24);
      }
      unint64_t v2 = v21;
      unint64_t v18 = *(void *)(v24 + 16);
      unint64_t v17 = *(void *)(v24 + 24);
      if (v18 >= v17 >> 1) {
        unint64_t v24 = sub_251F10630(v17 > 1, v18 + 1, 1, v24);
      }
      *(void *)(v24 + 16) = v18 + 1;
      sub_251A4ECF0(v16, v24+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v18, &qword_269B9FB80);
      swift_task_dealloc();
      uint64_t v6 = v23;
    }
    ++v5;
    swift_task_dealloc();
  }
  while (v6 != v5);
LABEL_18:
  swift_bridgeObjectRelease_n();
  **(void **)(v20 + 128) = v24;
  uint64_t v19 = *(uint64_t (**)(void))(v20 + 8);
  return v19();
}

uint64_t sub_251BD821C()
{
  swift_willThrow();
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  id v1 = *(void **)(v0 + 144);
  uint64_t v2 = sub_251F350A0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B21F290);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_251F35080();
  os_log_type_t v6 = sub_251F35FB0();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void **)(v0 + 144);
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412290;
    id v11 = v8;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 120) = v12;
    sub_251F361D0();
    *uint64_t v10 = v12;

    _os_log_impl(&dword_2519F3000, v5, v6, "Error setting natural light %@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v10, -1, -1);
    MEMORY[0x2533AC760](v9, -1, -1);
  }
  else
  {
  }
  uint64_t v14 = *(void **)(v0 + 136);
  uint64_t v13 = *(void **)(v0 + 144);

  id v15 = objc_msgSend(v14, sel_services);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
  unint64_t v16 = sub_251F35AC0();

  id v17 = v13;
  unint64_t v18 = sub_251BDB1A8(v16, v13);

  swift_bridgeObjectRelease();
  **(void **)(v0 + 128) = v18;
  uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t static StaticLightProfile.fetchSettings(for:lightProfiles:)(uint64_t a1, uint64_t a2)
{
  BOOL v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_269B9F9F0 + dword_269B9F9F0);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_251AB3A34;
  return v7(a1, a2);
}

uint64_t sub_251BD8550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[12] = a2;
  v3[13] = a3;
  v3[11] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251BD85F8, 0, 0);
}

uint64_t sub_251BD85F8()
{
  unint64_t v1 = *(void *)(v0 + 104);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_251F366C0();
    uint64_t v2 = v3;
    if (v3) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FB70);
    *(void *)(v0 + 128) = v24;
    *(void *)(v0 + 136) = *(void *)(v24 - 8);
    *(void *)(v0 + 144) = swift_task_alloc();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FB20);
    sub_251F35C40();
    *(void *)(v0 + 152) = MEMORY[0x263F8EE80];
    uint64_t v25 = sub_251A1E590(&qword_269B9FB78, &qword_269B9FB70);
    uint64_t v26 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v26;
    *uint64_t v26 = v0;
    v26[1] = sub_251BD8A5C;
    uint64_t v4 = *(void *)(v0 + 128);
    uint64_t v3 = v0 + 72;
    uint64_t v5 = v25;
    return MEMORY[0x270FA1E80](v3, v4, v5);
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v3 = swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_17;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v6 = 0;
    unint64_t v29 = v1 & 0xC000000000000001;
    uint64_t v28 = *(void *)(v0 + 104) + 32;
    uint64_t v30 = v2;
    while (1)
    {
      if (v29) {
        id v8 = (id)MEMORY[0x2533AB3A0](v6, *(void *)(v0 + 104));
      }
      else {
        id v8 = *(id *)(v28 + 8 * v6);
      }
      uint64_t v9 = v8;
      uint64_t v11 = *(void *)(v0 + 112);
      uint64_t v10 = *(void *)(v0 + 120);
      uint64_t v12 = sub_251F35CD0();
      uint64_t v13 = *(void *)(v12 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v10, 1, 1, v12);
      uint64_t v14 = (void *)swift_allocObject();
      v14[2] = 0;
      id v15 = v14 + 2;
      v14[3] = 0;
      v14[4] = v9;
      sub_251A1B128(v10, v11, &qword_26B220BB0);
      LODWORD(v10) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
      id v16 = v9;
      uint64_t v17 = *(void *)(v0 + 112);
      if (v10 == 1)
      {
        sub_251A1B064(*(void *)(v0 + 112), &qword_26B220BB0);
        if (!*v15) {
          goto LABEL_13;
        }
      }
      else
      {
        sub_251F35CC0();
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v17, v12);
        if (!*v15)
        {
LABEL_13:
          uint64_t v18 = 0;
          uint64_t v20 = 0;
          goto LABEL_14;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v18 = sub_251F35C00();
      uint64_t v20 = v19;
      swift_unknownObjectRelease();
LABEL_14:
      uint64_t v21 = **(void **)(v0 + 96);
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = &unk_269B9FB60;
      *(void *)(v22 + 24) = v14;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FB20);
      uint64_t v23 = v20 | v18;
      if (v20 | v18)
      {
        uint64_t v23 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v18;
        *(void *)(v0 + 40) = v20;
      }
      ++v6;
      uint64_t v7 = *(void *)(v0 + 120);
      *(void *)(v0 + 48) = 1;
      *(void *)(v0 + 56) = v23;
      *(void *)(v0 + 64) = v21;
      swift_task_create();

      swift_release();
      sub_251A1B064(v7, &qword_26B220BB0);
      if (v30 == v6) {
        goto LABEL_17;
      }
    }
  }
  __break(1u);
  return MEMORY[0x270FA1E80](v3, v4, v5);
}

uint64_t sub_251BD8A5C()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 144);
    uint64_t v6 = v2 + 128;
    uint64_t v4 = *(void *)(v2 + 128);
    uint64_t v5 = *(void *)(v6 + 8);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    uint64_t v7 = (uint64_t (*)())nullsub_1;
  }
  else
  {
    uint64_t v7 = sub_251BD8B98;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_251BD8B98()
{
  uint64_t v2 = v0 + 9;
  uint64_t v1 = v0[9];
  if (v1)
  {
    uint64_t v3 = *(void *)(v1 + 16);
    if (v3)
    {
      uint64_t v34 = v0 + 9;
      uint64_t v41 = v0 + 10;
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FB80);
      uint64_t v4 = v1
         + ((*(unsigned __int8 *)(*(void *)(v38 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v38 - 8) + 80));
      uint64_t v37 = *(void *)(*(void *)(v38 - 8) + 72);
      char v35 = v0;
      uint64_t v5 = (void *)v0[19];
      swift_bridgeObjectRetain();
      while (1)
      {
        uint64_t v8 = swift_task_alloc();
        sub_251A1B128(v4, v8, &qword_269B9FB80);
        uint64_t v9 = *(void **)(v8 + *(int *)(v38 + 48));
        if (v9)
        {
          uint64_t v39 = v3;
          uint64_t v10 = sub_251F34DA0();
          uint64_t v11 = *(void *)(v10 - 8);
          uint64_t v12 = swift_task_alloc();
          uint64_t v40 = v10;
          char v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
          v36(v12, v8, v10);
          uint64_t v13 = v9;
          id v14 = v9;
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v41 = v5;
          unint64_t v18 = sub_2519FE584(v12);
          uint64_t v19 = v5[2];
          BOOL v20 = (v16 & 1) == 0;
          uint64_t v21 = v19 + v20;
          if (__OFADD__(v19, v20))
          {
            __break(1u);
LABEL_29:
            __break(1u);
            return MEMORY[0x270FA1E80](v21, v16, v17);
          }
          char v22 = v16;
          if (v5[3] >= v21)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_251A16284();
            }
          }
          else
          {
            sub_251A09324(v21, isUniquelyReferenced_nonNull_native);
            unint64_t v23 = sub_2519FE584(v12);
            if ((v22 & 1) != (v24 & 1))
            {
              return sub_251F36BA0();
            }
            unint64_t v18 = v23;
          }
          uint64_t v5 = (void *)*v41;
          if (v22)
          {
            uint64_t v6 = v5[7];
            uint64_t v7 = 8 * v18;

            *(void *)(v6 + v7) = v13;
          }
          else
          {
            v5[(v18 >> 6) + 8] |= 1 << v18;
            uint64_t v21 = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v36)(v5[6] + *(void *)(v11 + 72) * v18, v12, v40);
            *(void *)(v5[7] + 8 * v18) = v13;
            uint64_t v25 = v5[2];
            BOOL v26 = __OFADD__(v25, 1);
            uint64_t v27 = v25 + 1;
            if (v26) {
              goto LABEL_29;
            }
            v5[2] = v27;
          }
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v40);
          swift_task_dealloc();
          uint64_t v3 = v39;
        }
        sub_251A1B064(v8, &qword_269B9FB80);
        swift_task_dealloc();
        v4 += v37;
        if (!--v3)
        {
          swift_bridgeObjectRelease();
          uint64_t v2 = v34;
          uint64_t v0 = v35;
          goto LABEL_22;
        }
      }
    }
    uint64_t v5 = (void *)v0[19];
LABEL_22:
    swift_bridgeObjectRelease();
    v0[19] = v5;
    uint64_t v32 = sub_251A1E590(&qword_269B9FB78, &qword_269B9FB70);
    uint64_t v33 = (void *)swift_task_alloc();
    v0[20] = v33;
    *uint64_t v33 = v0;
    v33[1] = sub_251BD8A5C;
    uint64_t v16 = v0[16];
    uint64_t v21 = (uint64_t)v2;
    uint64_t v17 = v32;
    return MEMORY[0x270FA1E80](v21, v16, v17);
  }
  else
  {
    uint64_t v28 = v0[19];
    unint64_t v29 = (void *)v0[11];
    (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    *unint64_t v29 = v28;
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v30 = (uint64_t (*)(void))v0[1];
    return v30();
  }
}

uint64_t sub_251BD904C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 136) = a1;
  *(void *)(v4 + 144) = a4;
  return MEMORY[0x270FA2498](sub_251BD906C, 0, 0);
}

uint64_t sub_251BD906C()
{
  uint64_t v1 = (void *)v0[18];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_251BD9168;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_251A5B1C0;
  v0[13] = &block_descriptor_6;
  v0[14] = v2;
  objc_msgSend(v1, sel_fetchSettingsWithCompletion_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_251BD9168()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 152) = v1;
  if (v1) {
    uint64_t v2 = sub_251BD96CC;
  }
  else {
    uint64_t v2 = sub_251BD9278;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251BD9278()
{
  uint64_t v1 = *(void **)(v0 + 144);

  id v2 = objc_msgSend(v1, sel_services);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
  unint64_t v3 = sub_251F35AC0();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_251F366C0();
    uint64_t v4 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_17:
    unint64_t v25 = MEMORY[0x263F8EE78];
    goto LABEL_18;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_17;
  }
LABEL_3:
  if (v4 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v6 = 0;
  unint64_t v25 = MEMORY[0x263F8EE78];
  unint64_t v22 = v3;
  unint64_t v23 = v3 & 0xC000000000000001;
  uint64_t v24 = v4;
  do
  {
    if (v23) {
      id v8 = (id)MEMORY[0x2533AB3A0](v6, v3);
    }
    else {
      id v8 = *(id *)(v3 + 8 * v6 + 32);
    }
    uint64_t v9 = v8;
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FB80);
    uint64_t v26 = *(void *)(v10 - 8);
    uint64_t v27 = swift_task_alloc();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FB88);
    uint64_t v11 = swift_task_alloc();
    uint64_t v12 = *(int *)(v10 + 48);
    id v13 = objc_msgSend(v9, sel_uniqueIdentifier);
    uint64_t v14 = sub_251F34DA0();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v16 = swift_task_alloc();
    sub_251F34D80();

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v11, v16, v14);
    *(void *)(v11 + v12) = 0;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v11, 0, 1, v10);

    swift_task_dealloc();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v11, 1, v10) == 1)
    {
      sub_251A1B064(v11, &qword_269B9FB88);
      swift_task_dealloc();
      unint64_t v3 = v22;
      uint64_t v7 = v24;
    }
    else
    {
      sub_251A4ECF0(v11, v27, &qword_269B9FB80);
      swift_task_dealloc();
      uint64_t v17 = swift_task_alloc();
      sub_251A4ECF0(v27, v17, &qword_269B9FB80);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v25 = sub_251F10630(0, *(void *)(v25 + 16) + 1, 1, v25);
      }
      unint64_t v3 = v22;
      unint64_t v19 = *(void *)(v25 + 16);
      unint64_t v18 = *(void *)(v25 + 24);
      if (v19 >= v18 >> 1) {
        unint64_t v25 = sub_251F10630(v18 > 1, v19 + 1, 1, v25);
      }
      *(void *)(v25 + 16) = v19 + 1;
      sub_251A4ECF0(v17, v25+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(void *)(v26 + 72) * v19, &qword_269B9FB80);
      swift_task_dealloc();
      uint64_t v7 = v24;
    }
    ++v6;
    swift_task_dealloc();
  }
  while (v7 != v6);
LABEL_18:
  swift_bridgeObjectRelease_n();
  **(void **)(v21 + 136) = v25;
  BOOL v20 = *(uint64_t (**)(void))(v21 + 8);
  return v20();
}

uint64_t sub_251BD96CC()
{
  swift_willThrow();
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 152);
  uint64_t v2 = sub_251F350A0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B21F290);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_251F35080();
  os_log_type_t v6 = sub_251F35FB0();
  BOOL v7 = os_log_type_enabled(v5, v6);
  id v8 = *(void **)(v0 + 152);
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412290;
    id v11 = v8;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 128) = v12;
    sub_251F361D0();
    *uint64_t v10 = v12;

    _os_log_impl(&dword_2519F3000, v5, v6, "Error fetching natural light %@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v10, -1, -1);
    MEMORY[0x2533AC760](v9, -1, -1);
  }
  else
  {
  }
  uint64_t v14 = *(void **)(v0 + 144);
  id v13 = *(void **)(v0 + 152);

  id v15 = objc_msgSend(v14, sel_services);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
  unint64_t v16 = sub_251F35AC0();

  id v17 = v13;
  unint64_t v18 = sub_251BDB1A8(v16, v13);

  swift_bridgeObjectRelease();
  **(void **)(v0 + 136) = v18;
  unint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_251BD994C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a2 + *(int *)(type metadata accessor for StaticLightProfile() + 28);
  uint64_t v6 = *(void *)(*(void *)a1 + 16);
  uint64_t v41 = a2;
  if (v6 && (sub_2519FE584(v5), (v7 & 1) != 0))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FBA0);
    MEMORY[0x270FA5388](v8 - 8);
    uint64_t v39 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v10 = sub_251F34DA0();
    uint64_t v38 = &v32;
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(void *)(v11 + 64);
    MEMORY[0x270FA5388](v10);
    id v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    unint64_t v36 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v37 = v14;
    v14(v13, v5, v10);
    id v15 = sub_251AF2034(v40);
    if (*v16)
    {
      uint64_t v34 = v15;
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FBA8);
      char v35 = &v32;
      unint64_t v18 = v39;
      uint64_t v33 = &v39[*(int *)(v17 + 48)];
      MEMORY[0x270FA5388](v17);
      unint64_t v19 = (char *)&v32 - v36;
      v37((char *)&v32 - v36, v41, v10);
      char v20 = sub_251A637B8(v33, v19);
      ((void (*)(void *, void))v34)(v40, 0);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      *unint64_t v18 = v20 & 1;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v18, 0, 1, v17);
    }
    else
    {
      ((void (*)(void *, void))v15)(v40, 0);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FBA8);
      unint64_t v18 = v39;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v39, 1, 1, v31);
    }
    return sub_251A1B064((uint64_t)v18, &qword_269B9FBA0);
  }
  else
  {
    uint64_t v21 = sub_251F34DA0();
    uint64_t v22 = *(void *)(v21 - 8);
    MEMORY[0x270FA5388](v21);
    uint64_t v24 = (char *)&v32 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v39 = v2;
    unint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
    v25(v24, v5, v21);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB80);
    unint64_t v26 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_251F38650;
    v25((char *)(v27 + v26), v41, v21);
    uint64_t v28 = sub_251C08E40(v27);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v40[0] = *(void *)a1;
    *(void *)a1 = 0x8000000000000000;
    sub_251A0FBF8(v28, (uint64_t)v24, isUniquelyReferenced_nonNull_native);
    *(void *)a1 = v40[0];
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  }
}

uint64_t StaticLightProfile.copyReplacing(id:isNaturalLightSupported:isNaturalLightEnabled:accessoryId:)@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, unsigned char *a5@<X8>)
{
  uint64_t v43 = a4;
  int v39 = a3;
  uint64_t v47 = a5;
  uint64_t v48 = a1;
  int v41 = a2;
  uint64_t v44 = type metadata accessor for StaticLightProfile();
  uint64_t v6 = MEMORY[0x270FA5388](v44);
  uint64_t v46 = &v38[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v42 = &v38[-v9];
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = &v38[-v11];
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v38[-v13];
  uint64_t v15 = sub_251F34DA0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v19 = *(void *)(*(void *)(v18 - 8) + 64);
  MEMORY[0x270FA5388](v18 - 8);
  sub_251A1B128(v48, (uint64_t)&v38[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)], &qword_26B21FF90);
  uint64_t v48 = v5;
  sub_251BDF614(v5, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
  uint64_t v40 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v16 + 48);
  int v20 = v40(&v38[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)], 1, v15);
  uint64_t v45 = &v38[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (v20 == 1)
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 16))(&v38[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)], v14, v15);
    sub_251BDF8B4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
    sub_251A1B064((uint64_t)&v38[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)], &qword_26B21FF90);
  }
  else
  {
    sub_251BDF8B4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 32))(&v38[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)], &v38[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)], v15);
  }
  int v21 = v39;
  sub_251BDF614(v48, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
  uint64_t v22 = (int *)v44;
  if (v41 == 2) {
    int v23 = v12[*(int *)(v44 + 20)];
  }
  else {
    int v23 = v41 & 1;
  }
  int v41 = v23;
  sub_251BDF8B4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
  uint64_t v24 = v42;
  sub_251BDF614(v48, (uint64_t)v42, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
  if (v21 == 2)
  {
    unint64_t v25 = &v24[v22[6]];
    char v26 = *v25;
    int v27 = v25[1];
    if (v27 == 2) {
      char v28 = v26;
    }
    else {
      char v28 = v27;
    }
  }
  else
  {
    char v28 = v21 & 1;
  }
  uint64_t v29 = sub_251BDF8B4((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
  uint64_t v30 = MEMORY[0x270FA5388](v29);
  uint64_t v31 = &v38[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = &v38[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_251A1B128(v43, (uint64_t)v32, &qword_26B21FF90);
  uint64_t v33 = v46;
  sub_251BDF614(v48, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
  if (v40(v32, 1, v15) == 1)
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 16))(v31, &v33[v22[7]], v15);
    sub_251BDF8B4((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
    sub_251A1B064((uint64_t)v32, &qword_26B21FF90);
    uint64_t v34 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 32);
  }
  else
  {
    sub_251BDF8B4((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
    uint64_t v34 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 32);
    v34(v31, v32, v15);
  }
  char v35 = v47;
  v34(v47, v45, v15);
  v35[v22[5]] = v41;
  unint64_t v36 = &v35[v22[6]];
  *unint64_t v36 = v28 & 1;
  v36[1] = 2;
  return ((uint64_t (*)(unsigned char *, unsigned char *, uint64_t))v34)(&v35[v22[7]], v31, v15);
}

uint64_t WritableProfileValue.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t WritableProfileValue.overrideValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 52);
  uint64_t v5 = sub_251F36190();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t WritableProfileValue.hash(into:)()
{
  return sub_251F361A0();
}

BOOL sub_251BDA444(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_251BDA454()
{
  return sub_251F36CB0();
}

uint64_t sub_251BDA47C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656469727265766FLL && a2 == 0xED000065756C6156)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_251BDA58C()
{
  return sub_251F36D00();
}

uint64_t sub_251BDA5D4(char a1)
{
  if (a1) {
    return 0x656469727265766FLL;
  }
  else {
    return 0x65756C6176;
  }
}

BOOL sub_251BDA614(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_251BDA444(*a1, *a2);
}

uint64_t sub_251BDA62C()
{
  return sub_251BDA58C();
}

uint64_t sub_251BDA640()
{
  return sub_251BDA454();
}

uint64_t sub_251BDA654()
{
  return sub_251F36D00();
}

uint64_t sub_251BDA6A0()
{
  return sub_251BDA5D4(*v0);
}

uint64_t sub_251BDA6B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251BDA47C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251BDA6E8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_251BDF31C();
  *a1 = result;
  return result;
}

uint64_t sub_251BDA71C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_251BDA770(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t WritableProfileValue.encode(to:)(void *a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 32);
  v10[0] = *(_OWORD *)(a2 + 16);
  v10[1] = v3;
  long long v11 = v10[0];
  long long v12 = v3;
  type metadata accessor for WritableProfileValue.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_251F36A80();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v10 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251F36DA0();
  LOBYTE(v11) = 0;
  uint64_t v8 = v13;
  sub_251F36A20();
  if (!v8)
  {
    LOBYTE(v11) = 1;
    sub_251F36970();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t WritableProfileValue.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t WritableProfileValue.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v34 = a6;
  uint64_t v11 = sub_251F36190();
  uint64_t v32 = *(void *)(v11 - 8);
  uint64_t v33 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  char v35 = (char *)&v31 - v13;
  uint64_t v37 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v40 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = a2;
  uint64_t v44 = a3;
  uint64_t v45 = a4;
  uint64_t v46 = a5;
  type metadata accessor for WritableProfileValue.CodingKeys();
  swift_getWitnessTable();
  uint64_t v39 = sub_251F368F0();
  uint64_t v36 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v16 = (char *)&v31 - v15;
  uint64_t v38 = a2;
  uint64_t v43 = a2;
  uint64_t v44 = a3;
  uint64_t v41 = a3;
  uint64_t v45 = a4;
  uint64_t v46 = a5;
  uint64_t v17 = type metadata accessor for WritableProfileValue();
  uint64_t v31 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v31 - v18;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v42 = v16;
  int v20 = v47;
  sub_251F36D90();
  if (v20) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  int v21 = v19;
  uint64_t v23 = v36;
  uint64_t v22 = v37;
  LOBYTE(v43) = 0;
  uint64_t v24 = v39;
  uint64_t v25 = v38;
  sub_251F36880();
  char v26 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
  uint64_t v47 = v21;
  v26(v21, v40, v25);
  LOBYTE(v43) = 1;
  int v27 = v35;
  sub_251F367D0();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v42, v24);
  char v28 = v47;
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(&v47[*(int *)(v17 + 52)], v27, v33);
  uint64_t v29 = v31;
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 16))(v34, v28, v17);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v28, v17);
}

BOOL sub_251BDAE08(uint64_t a1, char *a2, uint64_t a3)
{
  return static WritableProfileValue.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24), *(char **)(a3 + 32), *(void *)(a3 + 40));
}

uint64_t sub_251BDAE20()
{
  return sub_251F36D00();
}

uint64_t sub_251BDAE64@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return WritableProfileValue.init(from:)(a1, a2[2], a2[3], a2[4], a2[5], a3);
}

uint64_t sub_251BDAE88(void *a1, uint64_t a2)
{
  return WritableProfileValue.encode(to:)(a1, a2);
}

uint64_t sub_251BDAEA0()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_251BDAEE0(uint64_t a1, int *a2)
{
  *(void *)(v2 + 24) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  long long v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v3;
  *long long v3 = v2;
  v3[1] = sub_251BDAFC0;
  return v5(v2 + 16);
}

uint64_t sub_251BDAFC0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 24);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(void *)(v1 + 16);
  long long v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t _s13HomeDataModel18StaticLightProfileV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_251F34D70() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for StaticLightProfile();
  if (*(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) != *(unsigned __int8 *)(a2 + *(int *)(v4 + 20))) {
    return 0;
  }
  uint64_t v5 = *(int *)(v4 + 24);
  uint64_t v6 = a2 + v5;
  if (*(unsigned __int8 *)(a1 + v5) != *(unsigned __int8 *)(a2 + v5)) {
    return 0;
  }
  int v7 = *(unsigned __int8 *)(a1 + v5 + 1);
  int v8 = *(unsigned __int8 *)(v6 + 1);
  if (v7 != 2)
  {
    if (v8 == 2 || ((v8 & 1) == 0) == (v7 & 1)) {
      return 0;
    }
    return sub_251F34D70() & 1;
  }
  if (v8 == 2) {
    return sub_251F34D70() & 1;
  }
  return 0;
}

unint64_t sub_251BDB1A8(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v34 = a2;
  unint64_t v4 = a1;
  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_251F366C0();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      uint64_t v30 = v3;
      unint64_t v33 = v4 & 0xC000000000000001;
      unint64_t v6 = MEMORY[0x263F8EE78];
      uint64_t v7 = 4;
      unint64_t v31 = v4;
      uint64_t v32 = v5;
      while (1)
      {
        uint64_t v3 = v7 - 4;
        if (v33)
        {
          id v9 = (id)MEMORY[0x2533AB3A0](v7 - 4, v4);
          uint64_t v10 = v7 - 3;
          if (__OFADD__(v3, 1)) {
            goto LABEL_18;
          }
        }
        else
        {
          id v9 = *(id *)(v4 + 8 * v7);
          uint64_t v10 = v7 - 3;
          if (__OFADD__(v3, 1))
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        uint64_t v40 = v7;
        uint64_t v41 = v10;
        unint64_t v42 = v6;
        uint64_t v11 = v9;
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FB80);
        uint64_t v38 = &v30;
        uint64_t v13 = *(void *)(v12 - 8);
        uint64_t v14 = *(void *)(v13 + 64);
        MEMORY[0x270FA5388](v12);
        unint64_t v35 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
        uint64_t v36 = (uint64_t)&v30 - v35;
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FB88);
        uint64_t v39 = &v30;
        MEMORY[0x270FA5388](v15 - 8);
        uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v18 = *(int *)(v12 + 48);
        id v19 = objc_msgSend(v11, sel_uniqueIdentifier);
        sub_251F34D80();

        int v20 = v34;
        *(void *)&v17[v18] = v34;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
        id v21 = v20;

        uint64_t v37 = v13;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v17, 1, v12) == 1)
        {
          sub_251A1B064((uint64_t)v17, &qword_269B9FB88);
          unint64_t v4 = v31;
          unint64_t v6 = v42;
          uint64_t v8 = v40;
        }
        else
        {
          uint64_t v22 = (uint64_t)v17;
          uint64_t v23 = v36;
          uint64_t v24 = sub_251A4ECF0(v22, v36, &qword_269B9FB80);
          MEMORY[0x270FA5388](v24);
          uint64_t v25 = (char *)&v30 - v35;
          sub_251A4ECF0(v23, (uint64_t)&v30 - v35, &qword_269B9FB80);
          unint64_t v6 = v42;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v8 = v40;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            unint64_t v6 = sub_251F10630(0, *(void *)(v6 + 16) + 1, 1, v6);
          }
          unint64_t v4 = v31;
          unint64_t v28 = *(void *)(v6 + 16);
          unint64_t v27 = *(void *)(v6 + 24);
          if (v28 >= v27 >> 1) {
            unint64_t v6 = sub_251F10630(v27 > 1, v28 + 1, 1, v6);
          }
          *(void *)(v6 + 16) = v28 + 1;
          sub_251A4ECF0((uint64_t)v25, v6+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(void *)(v37 + 72) * v28, &qword_269B9FB80);
        }
        uint64_t v7 = v8 + 1;
        if (v41 == v32)
        {
          swift_bridgeObjectRelease();
          return v6;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

uint64_t sub_251BDB560(unint64_t a1, uint64_t a2)
{
  uint64_t v36 = a2;
  unint64_t v2 = a1;
  uint64_t v38 = MEMORY[0x263F8EE78];
  if (a1 >> 62)
  {
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_251F366C0();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      uint64_t v4 = 0;
      unint64_t v26 = v2;
      unint64_t v27 = v2 & 0xC000000000000001;
      unint64_t v24 = v2 + 32;
      uint64_t v25 = v3;
      uint64_t v35 = v36 + 56;
      while (1)
      {
        if (v27)
        {
          id v6 = (id)MEMORY[0x2533AB3A0](v4, v2);
          BOOL v7 = __OFADD__(v4, 1);
          uint64_t v8 = v4 + 1;
          if (v7) {
            goto LABEL_23;
          }
        }
        else
        {
          id v6 = *(id *)(v24 + 8 * v4);
          BOOL v7 = __OFADD__(v4, 1);
          uint64_t v8 = v4 + 1;
          if (v7)
          {
LABEL_23:
            __break(1u);
            goto LABEL_24;
          }
        }
        id v29 = v6;
        uint64_t v30 = v8;
        id v9 = objc_msgSend(v6, sel_uniqueIdentifier);
        uint64_t v10 = sub_251F34DA0();
        unint64_t v28 = &v23;
        uint64_t v31 = *(void *)(v10 - 8);
        uint64_t v11 = *(void *)(v31 + 64);
        MEMORY[0x270FA5388](v10);
        uint64_t v37 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_251F34D80();

        if (*(void *)(v36 + 16)
          && (uint64_t v12 = v36,
              sub_251A1A8EC((unint64_t *)&qword_26B21F2B0),
              uint64_t v13 = sub_251F35600(),
              uint64_t v14 = -1 << *(unsigned char *)(v12 + 32),
              unint64_t v15 = v13 & ~v14,
              ((*(void *)(v35 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) != 0))
        {
          uint64_t v32 = ~v14;
          uint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v31 + 16);
          uint64_t v33 = *(void *)(v31 + 72);
          uint64_t v34 = v16;
          uint64_t v17 = (uint64_t (**)(char *, uint64_t))(v31 + 8);
          while (1)
          {
            MEMORY[0x270FA5388](v13);
            v34((char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v36 + 48) + v33 * v15, v10);
            sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
            char v18 = sub_251F35650();
            id v19 = *v17;
            uint64_t v13 = (*v17)((char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
            if (v18) {
              break;
            }
            unint64_t v15 = (v15 + 1) & v32;
            if (((*(void *)(v35 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
              goto LABEL_4;
            }
          }
          v19(v37, v10);
          self;
          id v20 = v29;
          uint64_t v21 = swift_dynamicCastObjCClass();
          uint64_t v4 = v30;
          if (v21)
          {
            MEMORY[0x2533AA9D0]();
            uint64_t v5 = v25;
            unint64_t v2 = v26;
            if (*(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_251F35B10();
            }
            sub_251F35B70();
            sub_251F35AE0();
          }
          else
          {

            uint64_t v5 = v25;
            unint64_t v2 = v26;
          }
        }
        else
        {
LABEL_4:
          (*(void (**)(char *, uint64_t))(v31 + 8))(v37, v10);

          uint64_t v5 = v25;
          unint64_t v2 = v26;
          uint64_t v4 = v30;
        }
        if (v4 == v5)
        {
          swift_bridgeObjectRelease();
          return v38;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

uint64_t sub_251BDB94C(char a1, uint64_t a2)
{
  *(void *)(v2 + 40) = a2;
  *(unsigned char *)(v2 + 192) = a1;
  uint64_t v3 = sub_251F35030();
  *(void *)(v2 + 48) = v3;
  *(void *)(v2 + 56) = *(void *)(v3 - 8);
  *(void *)(v2 + 64) = swift_task_alloc();
  uint64_t v4 = sub_251F34FE0();
  *(void *)(v2 + 72) = v4;
  *(void *)(v2 + 80) = *(void *)(v4 - 8);
  *(void *)(v2 + 88) = swift_task_alloc();
  *(void *)(v2 + 96) = swift_task_alloc();
  *(void *)(v2 + 104) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251BDBA88, 0, 0);
}

uint64_t sub_251BDBA88()
{
  sub_251F35C80();
  *(void *)(v0 + 112) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251BDBB1C, v2, v1);
}

uint64_t sub_251BDBB1C()
{
  uint64_t v1 = (void *)v0[5];
  swift_release();
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  v0[3] = MEMORY[0x263F8EE80];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FB18);
  sub_251F35950();
  v0[15] = sub_251BD3584(v0[2]);
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_251BDBC1C, 0, 0);
}

uint64_t sub_251BDBC1C()
{
  if (qword_26B21ED30 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_251F35020();
  *(void *)(v0 + 128) = __swift_project_value_buffer(v1, (uint64_t)qword_26B21ED40);
  sub_251F34FD0();
  uint64_t v2 = sub_251F35000();
  os_signpost_type_t v3 = sub_251F36060();
  if (sub_251F36170())
  {
    uint64_t v4 = *(void *)(v0 + 96);
    uint64_t v5 = *(void *)(v0 + 72);
    uint64_t v6 = *(void *)(v0 + 80);
    BOOL v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    unint64_t v8 = (v6 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v7(v4, *(void *)(v0 + 104), v5);
    id v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v9 = 0;
    os_signpost_id_t v10 = sub_251F34FC0();
    _os_signpost_emit_with_name_impl(&dword_2519F3000, v2, v3, v10, "LightProfileSetNaturalLightEnabled", "", v9, 2u);
    MEMORY[0x2533AC760](v9, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    uint64_t v11 = *(void *)(v0 + 80);

    BOOL v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    unint64_t v8 = (v11 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v12 = *(void *)(v0 + 120);
  uint64_t v13 = *(void *)(v0 + 96);
  uint64_t v14 = *(void *)(v0 + 104);
  uint64_t v15 = *(void *)(v0 + 72);
  uint64_t v16 = *(void *)(v0 + 80);
  char v17 = *(unsigned char *)(v0 + 192);
  *(void *)(v0 + 136) = v7;
  *(void *)(v0 + 144) = v8;
  v7(v13, v14, v15);
  sub_251F35060();
  swift_allocObject();
  *(void *)(v0 + 152) = sub_251F35050();
  char v18 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  *(void *)(v0 + 160) = v18;
  *(void *)(v0 + 168) = (v16 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v18(v14, v15);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FB20);
  uint64_t v20 = swift_task_alloc();
  *(void *)(v0 + 176) = v20;
  *(void *)(v20 + 16) = v12;
  *(unsigned char *)(v20 + 24) = v17;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FB38);
  uint64_t v22 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v22;
  *uint64_t v22 = v0;
  v22[1] = sub_251BDBEE4;
  return MEMORY[0x270FA2158](v0 + 32, v19, v21, 0, 0, &unk_269B9FBB8, v20, v19);
}

uint64_t sub_251BDBEE4()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251BDC018, 0, 0);
}

uint64_t sub_251BDC018()
{
  uint64_t v1 = (void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 32);
  os_signpost_type_t v3 = sub_251F35000();
  sub_251F35040();
  os_signpost_type_t v4 = sub_251F36050();
  if (sub_251F36170())
  {
    uint64_t v6 = *(void *)(v0 + 56);
    uint64_t v5 = *(void *)(v0 + 64);
    uint64_t v7 = *(void *)(v0 + 48);
    swift_retain();
    sub_251F35070();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v6 + 88))(v5, v7) == *MEMORY[0x263F90238])
    {
      unint64_t v8 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 56) + 8))(*(void *)(v0 + 64), *(void *)(v0 + 48));
      unint64_t v8 = "";
    }
    uint64_t v1 = (void *)(v0 + 96);
    char v17 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
    uint64_t v9 = *(void *)(v0 + 88);
    uint64_t v10 = *(void *)(v0 + 72);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 136))(*(void *)(v0 + 96), v9, v10);
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    os_signpost_id_t v12 = sub_251F34FC0();
    _os_signpost_emit_with_name_impl(&dword_2519F3000, v3, v4, v12, "LightProfileSetNaturalLightEnabled", v8, v11, 2u);
    MEMORY[0x2533AC760](v11, -1, -1);

    v17(v9, v10);
  }
  else
  {
  }
  (*(void (**)(void, void))(v0 + 160))(*v1, *(void *)(v0 + 72));
  if (*(void *)(v2 + 16))
  {
    __swift_project_boxed_opaque_existential_1(*(void **)(v0 + 40), *(void *)(*(void *)(v0 + 40) + 24));
    BOOL v13 = sub_251F35EE0() == *(void *)(v2 + 16);
    sub_251BDF3D4();
    swift_allocError();
    *(void *)uint64_t v14 = v2;
    *(unsigned char *)(v14 + 8) = v13;
    swift_willThrow();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_251BDC2D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a3;
  v4[4] = a4;
  v4[2] = a2;
  v4[5] = type metadata accessor for StateSnapshot.UpdateType(0);
  v4[6] = swift_task_alloc();
  type metadata accessor for StateSnapshot(0);
  v4[7] = swift_task_alloc();
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_269B9F9B0 + dword_269B9F9B0);
  uint64_t v7 = (void *)swift_task_alloc();
  v4[8] = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_251BDC3EC;
  return v9(a1, a2);
}

uint64_t sub_251BDC3EC()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_251BDC5A0;
  }
  else {
    uint64_t v2 = sub_251BDC500;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251BDC500()
{
  v0[10] = v0[9];
  v0[11] = sub_251F35C80();
  v0[12] = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251BDC644, v2, v1);
}

uint64_t sub_251BDC5A0()
{
  *(void *)(v0 + 80) = 0;
  *(void *)(v0 + 88) = sub_251F35C80();
  *(void *)(v0 + 96) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251BDC644, v2, v1);
}

uint64_t sub_251BDC644()
{
  swift_release();
  if (qword_26B21E6F8 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251BDC6DC, 0, 0);
}

uint64_t sub_251BDC6DC()
{
  *(void *)(v0 + 104) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251BDC768, v2, v1);
}

uint64_t sub_251BDC768()
{
  swift_release();
  *(void *)(v0 + 112) = qword_26B21E638;
  return MEMORY[0x270FA2498](sub_251BDC7DC, 0, 0);
}

uint64_t sub_251BDC7DC()
{
  uint64_t v1 = v0[6];
  os_signpost_type_t v3 = (void *)v0[2];
  uint64_t v2 = (void *)v0[3];
  uint64_t v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9E298) + 48);
  id v5 = objc_msgSend(v2, sel_uniqueIdentifier);
  sub_251F34D80();

  uint64_t v6 = v3[3];
  uint64_t v7 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v6);
  uint64_t v8 = sub_251F34DA0();
  uint64_t v10 = sub_251AF11FC((void (*)(char *, char *))sub_251AF3164, 0, v6, v8, MEMORY[0x263F8E628], v7, MEMORY[0x263F8E658], v9);
  uint64_t v11 = sub_251EE04F8(v10);
  swift_bridgeObjectRelease();
  *(void *)(v1 + v4) = v11;
  swift_storeEnumTagMultiPayload();
  os_signpost_id_t v12 = (void *)swift_task_alloc();
  v0[15] = v12;
  void *v12 = v0;
  v12[1] = sub_251BDC958;
  uint64_t v14 = v0[6];
  uint64_t v13 = v0[7];
  uint64_t v16 = v0[3];
  uint64_t v15 = v0[4];
  return sub_251F2AD24(v13, v14, v15, v16, 0);
}

uint64_t sub_251BDC958()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  swift_task_dealloc();
  sub_251BDF8B4(v2, type metadata accessor for StateSnapshot.UpdateType);
  sub_251BDF8B4(v1, type metadata accessor for StateSnapshot);
  return MEMORY[0x270FA2498](sub_251BDCAB4, 0, 0);
}

uint64_t sub_251BDCAB4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t type metadata accessor for WritableProfileValue()
{
  return swift_getGenericMetadata();
}

unint64_t sub_251BDCB34()
{
  unint64_t result = qword_269B9F9C0;
  if (!qword_269B9F9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F9C0);
  }
  return result;
}

uint64_t sub_251BDCB88(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000251F6CAD0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000251F6CAF0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726F737365636361 && a2 == 0xEB00000000644979)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

BOOL sub_251BDCD34(void *a1, void *a2)
{
  id v3 = objc_msgSend(a1, sel_settings);
  unsigned __int8 v4 = objc_msgSend(v3, sel_supportedFeatures);

  id v5 = objc_msgSend(a2, sel_residentDevices);
  sub_251A1A568(0, (unint64_t *)&qword_26B21EB18);
  unint64_t v6 = sub_251F35AC0();

  uint64_t v14 = MEMORY[0x263F8EE78];
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_3;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v11 = MEMORY[0x263F8EE78];
    if ((v4 & 1) == 0)
    {
LABEL_14:
      swift_release();
      return 0;
    }
    goto LABEL_17;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v7) {
    goto LABEL_16;
  }
LABEL_3:
  if (v7 < 1)
  {
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_251F366C0();
    swift_release();
    goto LABEL_20;
  }
  for (uint64_t i = 0; i != v7; ++i)
  {
    if ((v6 & 0xC000000000000001) != 0) {
      id v9 = (id)MEMORY[0x2533AB3A0](i, v6);
    }
    else {
      id v9 = *(id *)(v6 + 8 * i + 32);
    }
    uint64_t v10 = v9;
    if (objc_msgSend(v9, sel_isEnabled)
      && (objc_msgSend(v10, sel_capabilities) & 0x4000) != 0)
    {
      sub_251F364F0();
      sub_251F36530();
      sub_251F36540();
      sub_251F36500();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = v14;
  if ((v4 & 1) == 0) {
    goto LABEL_14;
  }
LABEL_17:
  if (v11 < 0 || (v11 & 0x4000000000000000) != 0) {
    goto LABEL_23;
  }
  uint64_t v13 = *(void *)(v11 + 16);
LABEL_20:
  swift_release();
  return v13 > 0;
}

uint64_t sub_251BDCF50(uint64_t a1, uint64_t a2)
{
  v2[11] = a2;
  uint64_t v3 = sub_251F35030();
  v2[12] = v3;
  v2[13] = *(void *)(v3 - 8);
  v2[14] = swift_task_alloc();
  uint64_t v4 = sub_251F34FE0();
  v2[15] = v4;
  v2[16] = *(void *)(v4 - 8);
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251BDD088, 0, 0);
}

uint64_t sub_251BDD088()
{
  char v17 = v0;
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[11];
  uint64_t v2 = sub_251F350A0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B21F290);
  sub_251A1A4EC(v1, (uint64_t)(v0 + 2));
  uint64_t v3 = sub_251F35080();
  os_log_type_t v4 = sub_251F35FD0();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v16 = v15;
    *(_DWORD *)id v5 = 136446210;
    buf = v5;
    uint64_t v6 = v0[5];
    __swift_project_boxed_opaque_existential_1(v0 + 2, v6);
    uint64_t v7 = *(void *)(v6 - 8);
    swift_task_alloc();
    (*(void (**)(void))(v7 + 16))();
    type metadata accessor for StaticLightProfile();
    sub_251BDF428(&qword_269B9FB48);
    sub_251F35EA0();
    swift_task_dealloc();
    uint64_t v8 = sub_251F35E50();
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    v0[10] = sub_251A00E84(v8, v10, &v16);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
    _os_log_impl(&dword_2519F3000, v3, v4, "start light profile read %{public}s", buf, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v15, -1, -1);
    MEMORY[0x2533AC760](buf, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  }

  sub_251F35C80();
  v0[20] = sub_251F35C70();
  uint64_t v12 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251BDD3AC, v12, v11);
}

uint64_t sub_251BDD3AC()
{
  uint64_t v1 = (void *)v0[11];
  swift_release();
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  v0[8] = MEMORY[0x263F8EE80];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FB18);
  sub_251F35950();
  v0[21] = sub_251BD3584(v0[7]);
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_251BDD4AC, 0, 0);
}

uint64_t sub_251BDD4AC()
{
  if (qword_26B21ED30 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_251F35020();
  v0[22] = __swift_project_value_buffer(v1, (uint64_t)qword_26B21ED40);
  sub_251F34FD0();
  uint64_t v2 = sub_251F35000();
  os_signpost_type_t v3 = sub_251F36060();
  if (sub_251F36170())
  {
    uint64_t v4 = v0[18];
    uint64_t v5 = v0[15];
    uint64_t v6 = v0[16];
    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    unint64_t v8 = (v6 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v7(v4, v0[19], v5);
    unint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v9 = 0;
    os_signpost_id_t v10 = sub_251F34FC0();
    _os_signpost_emit_with_name_impl(&dword_2519F3000, v2, v3, v10, "LightProfileFetch", "", v9, 2u);
    MEMORY[0x2533AC760](v9, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    uint64_t v11 = v0[16];

    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    unint64_t v8 = (v11 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v12 = v0[21];
  uint64_t v13 = v0[18];
  uint64_t v14 = v0[19];
  uint64_t v15 = v0[15];
  uint64_t v16 = v0[16];
  v0[23] = v7;
  v0[24] = v8;
  v7(v13, v14, v15);
  sub_251F35060();
  swift_allocObject();
  v0[25] = sub_251F35050();
  char v17 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  v0[26] = v17;
  v0[27] = (v16 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v17(v14, v15);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FB20);
  uint64_t v19 = swift_task_alloc();
  v0[28] = v19;
  *(void *)(v19 + 16) = v12;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FB38);
  uint64_t v21 = (void *)swift_task_alloc();
  v0[29] = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_251BDD764;
  return MEMORY[0x270FA2158](v0 + 9, v18, v20, 0, 0, &unk_269B9FB30, v19, v18);
}

uint64_t sub_251BDD764()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251BDD898, 0, 0);
}

uint64_t sub_251BDD898()
{
  uint64_t v1 = (void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 72);
  os_signpost_type_t v3 = sub_251F35000();
  sub_251F35040();
  os_signpost_type_t v4 = sub_251F36050();
  if (sub_251F36170())
  {
    uint64_t v6 = *(void *)(v0 + 104);
    uint64_t v5 = *(void *)(v0 + 112);
    uint64_t v7 = *(void *)(v0 + 96);
    swift_retain();
    sub_251F35070();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v6 + 88))(v5, v7) == *MEMORY[0x263F90238])
    {
      unint64_t v8 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 104) + 8))(*(void *)(v0 + 112), *(void *)(v0 + 96));
      unint64_t v8 = "";
    }
    uint64_t v1 = (void *)(v0 + 144);
    char v17 = *(void (**)(uint64_t, uint64_t))(v0 + 208);
    uint64_t v9 = *(void *)(v0 + 136);
    uint64_t v10 = *(void *)(v0 + 120);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 184))(*(void *)(v0 + 144), v9, v10);
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    os_signpost_id_t v12 = sub_251F34FC0();
    _os_signpost_emit_with_name_impl(&dword_2519F3000, v3, v4, v12, "LightProfileFetch", v8, v11, 2u);
    MEMORY[0x2533AC760](v11, -1, -1);

    v17(v9, v10);
  }
  else
  {
  }
  (*(void (**)(void, void))(v0 + 208))(*v1, *(void *)(v0 + 120));
  if (*(void *)(v2 + 16))
  {
    __swift_project_boxed_opaque_existential_1(*(void **)(v0 + 88), *(void *)(*(void *)(v0 + 88) + 24));
    BOOL v13 = sub_251F35EE0() == *(void *)(v2 + 16);
    sub_251BDF3D4();
    swift_allocError();
    *(void *)uint64_t v14 = v2;
    *(unsigned char *)(v14 + 8) = v13;
    swift_willThrow();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t type metadata accessor for WritableProfileValue.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t sub_251BDDB6C()
{
  return sub_251BDF428(qword_269B9F9F8);
}

uint64_t sub_251BDDBA0()
{
  return sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
}

uint64_t sub_251BDDBC8()
{
  return swift_getWitnessTable();
}

void *initializeBufferWithCopyOfBuffer for StaticLightProfile(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (void *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    unint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    *(_WORD *)((char *)a1 + v9) = *(_WORD *)((char *)a2 + v9);
    v8((void *)((char *)a1 + a3[7]), (void *)((char *)a2 + a3[7]), v7);
  }
  return a1;
}

uint64_t destroy for StaticLightProfile(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 28);
  return v7(v5, v4);
}

uint64_t initializeWithCopy for StaticLightProfile(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(_WORD *)(a1 + v8) = *(_WORD *)(a2 + v8);
  v7(a1 + a3[7], a2 + a3[7], v6);
  return a1;
}

uint64_t assignWithCopy for StaticLightProfile(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = a3[6];
  uint64_t v9 = (unsigned char *)(a1 + v8);
  uint64_t v10 = (unsigned char *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  v7(a1 + a3[7], a2 + a3[7], v6);
  return a1;
}

uint64_t initializeWithTake for StaticLightProfile(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(_WORD *)(a1 + v8) = *(_WORD *)(a2 + v8);
  v7(a1 + a3[7], a2 + a3[7], v6);
  return a1;
}

uint64_t assignWithTake for StaticLightProfile(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v9 = (unsigned char *)(a1 + v8);
  uint64_t v10 = (unsigned char *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  v7(a1 + a3[7], a2 + a3[7], v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticLightProfile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251BDE068);
}

uint64_t sub_251BDE068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for StaticLightProfile(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251BDE14C);
}

uint64_t sub_251BDE14C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_251F34DA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t sub_251BDE208()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_251BDE2A8()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t v0 = sub_251F36190();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return v0;
}

uint64_t *sub_251BDE388(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  int v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = v8;
  unint64_t v10 = ~(unint64_t)v8;
  uint64_t v11 = v7 + v8;
  if (*(_DWORD *)(v6 + 84)) {
    size_t v12 = *(void *)(v6 + 64);
  }
  else {
    size_t v12 = v7 + 1;
  }
  unint64_t v13 = ((v7 + v8) & ~(unint64_t)v8) + v12;
  int v14 = v8 & 0x100000;
  if (v9 > 7 || v14 != 0 || v13 > 0x18)
  {
    uint64_t v17 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v17 + ((v9 + 16) & v10));
    swift_retain();
  }
  else
  {
    uint64_t v18 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v18(a1, a2, v5);
    uint64_t v19 = (void *)(((unint64_t)a2 + v11) & v10);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v6 + 48))(v19, 1, v5))
    {
      memcpy((void *)(((unint64_t)v4 + v11) & v10), v19, v12);
    }
    else
    {
      v18((uint64_t *)(((unint64_t)v4 + v11) & v10), v19, v5);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v6 + 56))(((unint64_t)v4 + v11) & v10, 0, 1, v5);
    }
  }
  return v4;
}

uint64_t sub_251BDE508(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v7 = *(uint64_t (**)(unint64_t, uint64_t))(v4 + 8);
  v7(a1, v3);
  unint64_t v5 = (*(void *)(v4 + 64) + a1 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v5, 1, v3);
  if (!result)
  {
    return v7(v5, v3);
  }
  return result;
}

void *sub_251BDE604(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6;
  int v8 = *(void (**)(void *, const void *, uint64_t))(v6 + 16);
  v8(a1, a2, v5);
  size_t v9 = *(void *)(v6 + 64);
  uint64_t v10 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = (void *)(((unint64_t)a1 + v9 + v10) & ~v10);
  size_t v12 = (const void *)(((unint64_t)a2 + v9 + v10) & ~v10);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v5))
  {
    if (*(_DWORD *)(v7 + 84)) {
      size_t v13 = v9;
    }
    else {
      size_t v13 = v9 + 1;
    }
    memcpy(v11, v12, v13);
  }
  else
  {
    v8(v11, v12, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v5);
  }
  return a1;
}

void *sub_251BDE744(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6;
  int v8 = *(void (**)(void *, const void *, uint64_t))(v6 + 24);
  v8(a1, a2, v5);
  size_t v9 = *(void *)(v6 + 64);
  uint64_t v10 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v19 = a1;
  uint64_t v11 = (void *)(((unint64_t)a1 + v9 + v10) & ~v10);
  size_t v12 = (void *)(((unint64_t)a2 + v9 + v10) & ~v10);
  size_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v14 = v13(v11, 1, v5);
  int v15 = v13(v12, 1, v5);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v11, v12, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v5);
      return v19;
    }
    int v16 = *(_DWORD *)(v7 + 84);
  }
  else
  {
    if (!v15)
    {
      v8(v11, v12, v5);
      return v19;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(v11, v5);
    int v16 = *(_DWORD *)(v7 + 84);
  }
  if (v16) {
    size_t v17 = v9;
  }
  else {
    size_t v17 = v9 + 1;
  }
  memcpy(v11, v12, v17);
  return v19;
}

void *sub_251BDE900(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6;
  int v8 = *(void (**)(void *, const void *, uint64_t))(v6 + 32);
  v8(a1, a2, v5);
  size_t v9 = *(void *)(v6 + 64);
  uint64_t v10 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = (void *)(((unint64_t)a1 + v9 + v10) & ~v10);
  size_t v12 = (const void *)(((unint64_t)a2 + v9 + v10) & ~v10);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v5))
  {
    if (*(_DWORD *)(v7 + 84)) {
      size_t v13 = v9;
    }
    else {
      size_t v13 = v9 + 1;
    }
    memcpy(v11, v12, v13);
  }
  else
  {
    v8(v11, v12, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v5);
  }
  return a1;
}

void *sub_251BDEA40(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6;
  int v8 = *(void (**)(void *, const void *, uint64_t))(v6 + 40);
  v8(a1, a2, v5);
  size_t v9 = *(void *)(v6 + 64);
  uint64_t v10 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v19 = a1;
  uint64_t v11 = (void *)(((unint64_t)a1 + v9 + v10) & ~v10);
  size_t v12 = (void *)(((unint64_t)a2 + v9 + v10) & ~v10);
  size_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v14 = v13(v11, 1, v5);
  int v15 = v13(v12, 1, v5);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 32))(v11, v12, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v5);
      return v19;
    }
    int v16 = *(_DWORD *)(v7 + 84);
  }
  else
  {
    if (!v15)
    {
      v8(v11, v12, v5);
      return v19;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(v11, v5);
    int v16 = *(_DWORD *)(v7 + 84);
  }
  if (v16) {
    size_t v17 = v9;
  }
  else {
    size_t v17 = v9 + 1;
  }
  memcpy(v11, v12, v17);
  return v19;
}

uint64_t sub_251BDEBFC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4;
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  uint64_t v7 = *(void *)(v4 + 64);
  if (v6) {
    uint64_t v8 = *(void *)(v4 + 64);
  }
  else {
    uint64_t v8 = v7 + 1;
  }
  if (!a2) {
    return 0;
  }
  unsigned int v9 = a2 - v6;
  if (a2 <= v6) {
    goto LABEL_22;
  }
  uint64_t v10 = v8 + ((v7 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  char v11 = 8 * v10;
  if (v10 <= 3)
  {
    unsigned int v13 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v13))
    {
      int v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v13 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(unsigned __int16 *)((char *)a1 + v10)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v13 < 2)
    {
LABEL_22:
      if (v6) {
        return (*(uint64_t (**)(void))(v5 + 48))();
      }
      return 0;
    }
  }
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_22;
  }
LABEL_14:
  int v14 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v14 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *a1;
        break;
      case 3:
        LODWORD(v10) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v6 + (v10 | v14) + 1;
}

void sub_251BDED70(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(v6 + 64);
  unint64_t v9 = (v8 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  if (!v7) {
    ++v8;
  }
  size_t v10 = v8 + v9;
  BOOL v11 = a3 >= v7;
  unsigned int v12 = a3 - v7;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v14 = ~v7 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_36;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_23;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_23;
    case 3:
LABEL_36:
      __break(1u);
      JUMPOUT(0x251BDEFA0);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_22;
    default:
LABEL_22:
      if (a2)
      {
LABEL_23:
        uint64_t v18 = *(void (**)(void))(v6 + 56);
        v18();
      }
      return;
  }
}

unsigned char *sub_251BDEFC8(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251BDF094);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StaticLightProfile.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251BDF188);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticLightProfile.CodingKeys()
{
  return &type metadata for StaticLightProfile.CodingKeys;
}

unint64_t sub_251BDF1C4()
{
  unint64_t result = qword_269B9FB00;
  if (!qword_269B9FB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FB00);
  }
  return result;
}

uint64_t sub_251BDF218()
{
  return swift_getWitnessTable();
}

uint64_t sub_251BDF234()
{
  return swift_getWitnessTable();
}

uint64_t sub_251BDF250()
{
  return swift_getWitnessTable();
}

unint64_t sub_251BDF270()
{
  unint64_t result = qword_269B9FB08;
  if (!qword_269B9FB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FB08);
  }
  return result;
}

unint64_t sub_251BDF2C8()
{
  unint64_t result = qword_269B9FB10;
  if (!qword_269B9FB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FB10);
  }
  return result;
}

uint64_t sub_251BDF31C()
{
  return 2;
}

uint64_t sub_251BDF324(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  unsigned int v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *unsigned int v7 = v3;
  v7[1] = sub_251AB3DD4;
  return sub_251BD8550(a1, a2, v6);
}

unint64_t sub_251BDF3D4()
{
  unint64_t result = qword_269B9FB40;
  if (!qword_269B9FB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FB40);
  }
  return result;
}

uint64_t sub_251BDF428(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for StaticLightProfile();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251BDF46C()
{
  return objectdestroy_27Tm_0(40);
}

uint64_t sub_251BDF474(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_251AB3DD4;
  v5[17] = a1;
  v5[18] = v4;
  return MEMORY[0x270FA2498](sub_251BD906C, 0, 0);
}

uint64_t sub_251BDF524()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_251BDF55C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_251AB3DD4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269B9FB58 + dword_269B9FB58);
  return v6(a1, v4);
}

uint64_t sub_251BDF614(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251BDF67C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  char v7 = *(unsigned char *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_251AB3DD4;
  return sub_251BD7098(a1, a2, v6, v7);
}

uint64_t sub_251BDF734()
{
  return objectdestroy_27Tm_0(41);
}

uint64_t sub_251BDF73C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  char v5 = *(unsigned char *)(v1 + 40);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *(void *)uint64_t v6 = v2;
  *(void *)(v6 + 8) = sub_251AB3DD4;
  *(unsigned char *)(v6 + 152) = v5;
  *(void *)(v6 + 128) = a1;
  *(void *)(v6 + 136) = v4;
  return MEMORY[0x270FA2498](sub_251BD7BC8, 0, 0);
}

uint64_t sub_251BDF7FC(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  char v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_251AB3A34;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269B9FB58 + dword_269B9FB58);
  return v6(a1, v4);
}

uint64_t sub_251BDF8B4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251BDF914(id *a1)
{
  return sub_251BD6C30(a1) & 1;
}

uint64_t static Logger.Automations.category.getter()
{
  return 0x6974616D6F747541;
}

uint64_t sub_251BDF964()
{
  uint64_t v0 = sub_251F350A0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_251F35020();
  __swift_allocate_value_buffer(v4, qword_269B9FBD8);
  __swift_project_value_buffer(v4, (uint64_t)qword_269B9FBD8);
  if (qword_269B9C320 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v0, (uint64_t)qword_269B9FBF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  return sub_251F34FF0();
}

uint64_t static Logger.Automations.signposter.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251BDFB98(&qword_269B9C318, MEMORY[0x263F90228], (uint64_t)qword_269B9FBD8, a1);
}

uint64_t sub_251BDFAD8()
{
  uint64_t v0 = sub_251F350A0();
  __swift_allocate_value_buffer(v0, qword_269B9FBF0);
  __swift_project_value_buffer(v0, (uint64_t)qword_269B9FBF0);
  return sub_251F35090();
}

uint64_t static Logger.Automations.logger.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251BDFB98(&qword_269B9C320, MEMORY[0x263F90268], (uint64_t)qword_269B9FBF0, a1);
}

uint64_t sub_251BDFB98@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = __swift_project_value_buffer(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  return v9(a4, v8, v7);
}

const char *static Logger.Automations.triggerBuilderCommitSignpost.getter()
{
  return "TriggerBuilderCommit";
}

uint64_t Logger.Automations.Operation.description.getter()
{
  return *(void *)&aCreatingupdati[8 * *v0];
}

uint64_t Logger.Automations.Operation.rawValue.getter()
{
  return *(void *)&aCreatingupdati[8 * *v0];
}

uint64_t Logger.Automations.Operation.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_251F36750();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 3;
  if (v2 < 3) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_251BDFCD8(char *a1, char *a2)
{
  return sub_251DB1C48(*a1, *a2);
}

uint64_t sub_251BDFCE4()
{
  return sub_251F36D00();
}

uint64_t sub_251BDFD40()
{
  sub_251F357B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251BDFD80()
{
  return sub_251F36D00();
}

uint64_t sub_251BDFDD8@<X0>(char *a1@<X8>)
{
  return Logger.Automations.Operation.init(rawValue:)(a1);
}

void sub_251BDFDE4(void *a1@<X8>)
{
  *a1 = *(void *)&aCreatingupdati[8 * *v1];
  a1[1] = 0xE800000000000000;
}

uint64_t sub_251BDFE00()
{
  return *(void *)&aCreatingupdati[8 * *v0];
}

uint64_t _s2os6LoggerV13HomeDataModelE11AutomationsV8didBegin_7trigger2idAA23OSSignpostIntervalStateCAF9OperationO_AD14TriggerBuilderCAA0K2IDVtFZ_0(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_251F34FE0();
  uint64_t v6 = *(void (**)(void, void, void))(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v36 = &v31[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  uint64_t v35 = &v31[-v9];
  uint64_t v10 = *a1;
  if (qword_269B9C320 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_251F350A0();
  __swift_project_value_buffer(v11, (uint64_t)qword_269B9FBF0);
  swift_retain_n();
  unsigned int v12 = sub_251F35080();
  os_log_type_t v13 = sub_251F35FD0();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    unint64_t v34 = v5;
    uint64_t v15 = v14;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v38 = v16;
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v37 = sub_251A00E84(*(void *)&aCreatingupdati[8 * v10], 0xE800000000000000, &v38);
    uint64_t v33 = v6;
    sub_251F361D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    uint64_t v17 = TriggerBuilder.debugDescription.getter();
    uint64_t v37 = sub_251A00E84(v17, v18, &v38);
    uint64_t v6 = v33;
    sub_251F361D0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v12, v13, "Began %s trigger %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v16, -1, -1);
    uint64_t v19 = v15;
    uint64_t v5 = v34;
    MEMORY[0x2533AC760](v19, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  if (qword_269B9C318 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_251F35020();
  __swift_project_value_buffer(v20, (uint64_t)qword_269B9FBD8);
  swift_retain_n();
  uint64_t v21 = sub_251F35000();
  int v22 = sub_251F36060();
  if (sub_251F36170())
  {
    uint64_t v33 = (void (*)(void, void, void))*((void *)v6 + 2);
    unint64_t v34 = ((unint64_t)v6 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v33(v35, a3, v5);
    uint64_t v23 = swift_slowAlloc();
    int v32 = v22;
    uint64_t v24 = v23;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v38 = v25;
    *(_DWORD *)uint64_t v24 = 136315394;
    uint64_t v37 = sub_251A00E84(*(void *)&aCreatingupdati[8 * v10], 0xE800000000000000, &v38);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2080;
    uint64_t v26 = TriggerBuilder.debugDescription.getter();
    uint64_t v37 = sub_251A00E84(v26, v27, &v38);
    sub_251F361D0();
    swift_release_n();
    swift_bridgeObjectRelease();
    unint64_t v28 = v35;
    os_signpost_id_t v29 = sub_251F34FC0();
    _os_signpost_emit_with_name_impl(&dword_2519F3000, v21, (os_signpost_type_t)v32, v29, "TriggerBuilderCommit", "Began %s trigger %s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v25, -1, -1);
    MEMORY[0x2533AC760](v24, -1, -1);

    (*((void (**)(unsigned char *, uint64_t))v6 + 1))(v28, v5);
    v33(v36, a3, v5);
  }
  else
  {
    swift_release_n();

    (*((void (**)(unsigned char *, uint64_t, uint64_t))v6 + 2))(v36, a3, v5);
  }
  sub_251F35060();
  swift_allocObject();
  return sub_251F35050();
}

uint64_t _s2os6LoggerV13HomeDataModelE11AutomationsV9didFinish_5state5erroryAF9OperationO_AA23OSSignpostIntervalStateCs5Error_pSgtFZ_0(char *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_251F35030();
  uint64_t v54 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_251F34FE0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  os_log_type_t v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v48 - v14;
  uint64_t v16 = *a1;
  uint64_t v55 = a2;
  uint64_t v53 = v8;
  if (a3)
  {
    id v17 = a3;
    if (qword_269B9C320 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_251F350A0();
    __swift_project_value_buffer(v18, (uint64_t)qword_269B9FBF0);
    id v19 = a3;
    id v20 = a3;
    uint64_t v21 = sub_251F35080();
    os_log_type_t v22 = sub_251F35FB0();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v52 = v9;
      uint64_t v24 = v23;
      uint64_t v49 = (void *)swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      __int16 v51 = v13;
      uint64_t v57 = v50;
      *(_DWORD *)uint64_t v24 = 136315394;
      uint64_t v56 = sub_251A00E84(*(void *)&aCreatingupdati[8 * v16], 0xE800000000000000, &v57);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2112;
      id v25 = a3;
      uint64_t v26 = v6;
      uint64_t v27 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v56 = v27;
      sub_251F361D0();
      unint64_t v28 = v49;
      *uint64_t v49 = v27;
      uint64_t v6 = v26;

      _os_log_impl(&dword_2519F3000, v21, v22, "Failed when %s trigger with error: %@", (uint8_t *)v24, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v28, -1, -1);
      uint64_t v29 = v50;
      swift_arrayDestroy();
      os_log_type_t v13 = v51;
      MEMORY[0x2533AC760](v29, -1, -1);
      uint64_t v30 = v24;
      uint64_t v9 = v52;
      MEMORY[0x2533AC760](v30, -1, -1);

      goto LABEL_12;
    }
  }
  else
  {
    if (qword_269B9C320 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_251F350A0();
    __swift_project_value_buffer(v31, (uint64_t)qword_269B9FBF0);
    uint64_t v21 = sub_251F35080();
    os_log_type_t v32 = sub_251F35FD0();
    if (os_log_type_enabled(v21, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      uint64_t v52 = v6;
      uint64_t v35 = v34;
      *(_DWORD *)uint64_t v33 = 136315138;
      uint64_t v57 = v34;
      uint64_t v56 = sub_251A00E84(*(void *)&aCreatingupdati[8 * v16], 0xE800000000000000, &v57);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2519F3000, v21, v32, "Succeeded %s trigger", v33, 0xCu);
      swift_arrayDestroy();
      uint64_t v36 = v35;
      uint64_t v6 = v52;
      MEMORY[0x2533AC760](v36, -1, -1);
      MEMORY[0x2533AC760](v33, -1, -1);
    }
  }

LABEL_12:
  if (qword_269B9C318 != -1) {
    swift_once();
  }
  uint64_t v37 = sub_251F35020();
  __swift_project_value_buffer(v37, (uint64_t)qword_269B9FBD8);
  uint64_t v38 = sub_251F35000();
  sub_251F35040();
  os_signpost_type_t v39 = sub_251F36050();
  if (sub_251F36170())
  {
    swift_retain();
    uint64_t v40 = v53;
    sub_251F35070();
    uint64_t v41 = v40;
    swift_release();
    uint64_t v42 = v54;
    if ((*(unsigned int (**)(char *, uint64_t))(v54 + 88))(v41, v6) == *MEMORY[0x263F90238])
    {
      uint64_t v43 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v6);
      uint64_t v43 = "";
    }
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
    uint64_t v45 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v45 = 0;
    os_signpost_id_t v46 = sub_251F34FC0();
    _os_signpost_emit_with_name_impl(&dword_2519F3000, v38, v39, v46, "TriggerBuilderCommit", v43, v45, 2u);
    MEMORY[0x2533AC760](v45, -1, -1);

    uint64_t v47 = *(void (**)(char *, uint64_t))(v10 + 8);
    v47(v15, v9);
    return ((uint64_t (*)(char *, uint64_t))v47)(v13, v9);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
}

unint64_t sub_251BE09E8()
{
  unint64_t result = qword_269B9FC08;
  if (!qword_269B9FC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FC08);
  }
  return result;
}

ValueMetadata *type metadata accessor for Logger.Automations()
{
  return &type metadata for Logger.Automations;
}

unsigned char *_s11AutomationsV9OperationOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251BE0B18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Logger.Automations.Operation()
{
  return &type metadata for Logger.Automations.Operation;
}

uint64_t sub_251BE0B50@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  void (*v9)(long long *__return_ptr, _OWORD *, void, uint64_t, uint64_t);
  uint64_t *v10;
  _OWORD v12[14];
  _OWORD v13[2];
  uint64_t v14;
  __int16 v15;
  char v16;
  long long v17;
  long long v18;
  long long v19;
  long long v20;
  long long v21;
  long long v22;
  long long v23;
  long long v24;
  long long v25;
  long long v26;
  long long v27;
  long long v28;
  long long v29;
  _OWORD v30[3];
  long long v31;
  long long v32;
  long long v33;
  long long v34;
  long long v35;
  long long v36;
  long long v37;
  long long v38;
  long long v39;
  long long v40;
  long long v41;
  long long v42;
  long long v43;
  unsigned char v44[28];
  _OWORD v45[14];
  _OWORD v46[2];

  uint64_t v6 = *(void *)a3;
  __int16 v7 = *(_WORD *)(a3 + 8);
  switch(*a1)
  {
    case 1:
      uint64_t v14 = *(void *)a3;
      uint64_t v15 = v7;
      uint64_t v16 = 1;
      swift_unknownObjectRetain();
      StaticBasicInfoCluster.init(path:device:)(&v14, a2, (uint64_t)&v17);
      sub_251A4ECF0((uint64_t)&v17, (uint64_t)&v31, &qword_269B9FE18);
      sub_251A4ECF0((uint64_t)&v31, (uint64_t)v45, &qword_269B9FE18);
      if (sub_251A92FC0((uint64_t)v45) == 1)
      {
        sub_251BE6970((uint64_t)&v14);
      }
      else
      {
        v12[12] = v45[12];
        v12[13] = v45[13];
        v13[0] = v46[0];
        *(_OWORD *)((char *)v13 + 12) = *(_OWORD *)((char *)v46 + 12);
        v12[8] = v45[8];
        v12[9] = v45[9];
        v12[10] = v45[10];
        v12[11] = v45[11];
        v12[4] = v45[4];
        v12[5] = v45[5];
        v12[6] = v45[6];
        v12[7] = v45[7];
        v12[0] = v45[0];
        v12[1] = v45[1];
        v12[2] = v45[2];
        v12[3] = v45[3];
        sub_251BE4E64((uint64_t)v12);
        sub_251A1A930((uint64_t)v12, (uint64_t)&v14);
        nullsub_1(&v14);
      }
      uint64_t v10 = &v14;
      return sub_251A4ECF0((uint64_t)v10, a4, &qword_269B9ECB0);
    case 2:
      *(void *)&v45[0] = *(void *)a3;
      WORD4(v45[0]) = v7;
      BYTE10(v45[0]) = 2;
      swift_unknownObjectRetain();
      StaticClusterPowerSource.init(path:device:)((uint64_t)v45, a2, (uint64_t)&v17);
      if ((v18 & 0xFF00000000) == 0x300000000) {
        goto LABEL_19;
      }
      *(void *)&uint64_t v31 = v17;
      DWORD2(v31) = DWORD2(v17);
      BYTE12(v31) = BYTE12(v17);
      LODWORD(v32) = v18;
      WORD2(v32) = WORD2(v18);
      BYTE6(v32) = BYTE6(v18) & 1;
      DWORD2(v32) = DWORD2(v18);
      BYTE12(v32) = BYTE12(v18) & 1;
      *(_WORD *)((char *)&v32 + 13) = *(_WORD *)((unsigned char *)&v18 + 13) & 0x1FF;
      HIBYTE(v32) = HIBYTE(v18);
      LOBYTE(v33) = v19 & 1;
      sub_251BE4BCC((uint64_t)&v31);
      goto LABEL_15;
    case 0xA:
      uint64_t ObjectType = swift_getObjectType();
      *(void *)&v45[0] = v6;
      WORD4(v45[0]) = v7;
      BYTE10(v45[0]) = 10;
      uint64_t v9 = *(void (**)(long long *__return_ptr, _OWORD *, void, uint64_t, uint64_t))(a2 + 48);
      swift_unknownObjectRetain();
      v9(&v17, v45, 0, ObjectType, a2);
      swift_unknownObjectRelease();
      if (!*((void *)&v18 + 1))
      {
        sub_251A9090C((uint64_t)&v17);
        goto LABEL_19;
      }
      if ((swift_dynamicCast() & 1) == 0)
      {
LABEL_19:
        sub_251BE6970((uint64_t)v45);
        goto LABEL_20;
      }
      *(void *)&uint64_t v31 = v6;
      WORD4(v31) = v7;
      BYTE10(v31) = 10;
      BYTE11(v31) = v14;
      sub_251BE4DF0((uint64_t)&v31);
LABEL_15:
      sub_251A1A930((uint64_t)&v31, (uint64_t)v45);
      nullsub_1(v45);
LABEL_20:
      uint64_t v10 = (uint64_t *)v45;
      return sub_251A4ECF0((uint64_t)v10, a4, &qword_269B9ECB0);
    case 0xB:
      *(void *)&v45[0] = *(void *)a3;
      WORD4(v45[0]) = v7;
      BYTE10(v45[0]) = 11;
      swift_unknownObjectRetain();
      sub_251A8CFD4((uint64_t)v45, a2, (uint64_t)&v17);
      if ((*((void *)&v17 + 1) & 0xFF0000) == 0x1C0000) {
        goto LABEL_19;
      }
      *(void *)&uint64_t v31 = v17;
      *((void *)&v31 + 1) = *((void *)&v17 + 1) & 0x1FF01FFFFFFFFFFLL;
      LOWORD(v32) = v18;
      BYTE2(v32) = BYTE2(v18) & 1;
      *(_WORD *)((char *)&v32 + 3) = *(_WORD *)((unsigned char *)&v18 + 3) & 0x1FF;
      WORD3(v32) = WORD3(v18);
      BYTE8(v32) = BYTE8(v18) & 1;
      WORD5(v32) = WORD5(v18);
      BYTE12(v32) = BYTE12(v18) & 1;
      *(_WORD *)((char *)&v32 + 13) = *(_WORD *)((unsigned char *)&v18 + 13) & 0x1FF;
      HIBYTE(v32) = HIBYTE(v18);
      LOBYTE(v33) = v19 & 1;
      sub_251BE4CB4((uint64_t)&v31);
      goto LABEL_15;
    case 0x15:
      *(void *)&v45[0] = *(void *)a3;
      WORD4(v45[0]) = v7;
      BYTE10(v45[0]) = 21;
      swift_unknownObjectRetain();
      StaticDoorLockCluster.init(path:device:)((uint64_t)v45, a2, (uint64_t)&v17);
      if ((v18 & 0xFF00) == 0x300) {
        goto LABEL_19;
      }
      *(void *)&uint64_t v31 = v17;
      WORD4(v31) = WORD4(v17);
      BYTE10(v31) = BYTE10(v17);
      HIDWORD(v31) = HIDWORD(v17);
      LODWORD(v32) = v18 & 0x1FFFF01;
      BYTE4(v32) = BYTE4(v18);
      sub_251B72274((uint64_t)&v31);
      goto LABEL_15;
    case 0x17:
      *(void *)&v45[0] = *(void *)a3;
      WORD4(v45[0]) = v7;
      swift_unknownObjectRetain();
      StaticRVCClusterGroup.init(endpointPath:device:)((uint64_t *)v45, a2, (uint64_t)v12);
      sub_251A4ECF0((uint64_t)v12, (uint64_t)&v14, &qword_269B9ECC0);
      sub_251A4ECF0((uint64_t)&v14, (uint64_t)&v17, &qword_269B9ECC0);
      if (sub_251B72348((uint64_t)&v17) == 1) {
        goto LABEL_19;
      }
      uint64_t v43 = v29;
      *(_OWORD *)uint64_t v44 = v30[0];
      *(_OWORD *)&v44[12] = *(_OWORD *)((char *)v30 + 12);
      os_signpost_type_t v39 = v25;
      uint64_t v40 = v26;
      uint64_t v41 = v27;
      uint64_t v42 = v28;
      uint64_t v35 = v21;
      uint64_t v36 = v22;
      uint64_t v37 = v23;
      uint64_t v38 = v24;
      uint64_t v31 = v17;
      os_log_type_t v32 = v18;
      uint64_t v33 = v19;
      uint64_t v34 = v20;
      sub_251BE4D7C((uint64_t)&v31);
      goto LABEL_15;
    default:
      goto LABEL_19;
  }
}

uint64_t sub_251BE1110()
{
  uint64_t result = sub_251F35EB0();
  qword_269B9FC10 = result;
  return result;
}

id static StaticCluster.defaultValueInterval.getter()
{
  if (qword_269B9C328 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_269B9FC10;
  return v0;
}

id sub_251BE1190()
{
  if (qword_269B9C328 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_269B9FC10;
  qword_269B9FC18 = qword_269B9FC10;
  return v0;
}

uint64_t static StaticCluster.expectedValueInterval.getter()
{
  if (qword_269B9C330 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = qword_269B9FC18;
  id v1 = (id)qword_269B9FC18;
  return v0;
}

void static StaticCluster.expectedValueInterval.setter(uint64_t a1)
{
  if (qword_269B9C330 != -1) {
    swift_once();
  }
  swift_beginAccess();
  unint64_t v2 = (void *)qword_269B9FC18;
  qword_269B9FC18 = a1;
}

uint64_t (*static StaticCluster.expectedValueInterval.modify())()
{
  if (qword_269B9C330 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t StaticCluster.hash(into:)(long long *a1)
{
  sub_251A1A930(v1, (uint64_t)v4);
  sub_251A1A930((uint64_t)v4, (uint64_t)v5);
  switch(sub_251A4DB2C((uint64_t)v5))
  {
    case 1u:
      sub_251A4E128((uint64_t)v5);
      sub_251F36CB0();
      sub_251F36CF0();
      sub_251F36CD0();
      sub_251F36CE0();
      uint64_t result = sub_251F36CC0();
      break;
    case 2u:
      sub_251A4E128((uint64_t)v5);
      sub_251F36CB0();
      uint64_t result = StaticRVCClusterGroup.hash(into:)(a1);
      break;
    case 3u:
      sub_251A4E128((uint64_t)v5);
      sub_251F36CB0();
      uint64_t result = StaticDoorLockCluster.hash(into:)();
      break;
    case 4u:
      sub_251A4E128((uint64_t)v5);
      sub_251F36CB0();
      uint64_t result = StaticLevelControlCluster.hash(into:)();
      break;
    case 5u:
      sub_251A4E128((uint64_t)v5);
      sub_251F36CB0();
      uint64_t result = StaticColorControlCluster.hash(into:)();
      break;
    case 6u:
      sub_251A4E128((uint64_t)v5);
      sub_251F36CB0();
      uint64_t result = StaticClusterPowerSource.hash(into:)();
      break;
    default:
      sub_251A4E128((uint64_t)v5);
      sub_251F36CB0();
      uint64_t result = StaticBasicInfoCluster.hash(into:)();
      break;
  }
  return result;
}

uint64_t sub_251BE1848(uint64_t a1)
{
  unint64_t v2 = sub_251BE4AD0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251BE1884(uint64_t a1)
{
  unint64_t v2 = sub_251BE4AD0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251BE18C0()
{
  uint64_t result = 0x666E496369736162;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x66664F6E6FLL;
      break;
    case 2:
      uint64_t result = 0x6574617453637672;
      break;
    case 3:
      uint64_t result = 0x6B636F4C726F6F64;
      break;
    case 4:
      uint64_t v2 = 0x436C6576656CLL;
      goto LABEL_7;
    case 5:
      uint64_t v2 = 0x43726F6C6F63;
LABEL_7:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x6E6F000000000000;
      break;
    case 6:
      uint64_t result = 0x756F537265776F70;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251BE19B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251BE63B8(a1, a2);
  *a3 = result;
  return result;
}

void sub_251BE19E0(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_251BE19EC(uint64_t a1)
{
  unint64_t v2 = sub_251BE468C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251BE1A28(uint64_t a1)
{
  unint64_t v2 = sub_251BE468C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251BE1A64(uint64_t a1)
{
  unint64_t v2 = sub_251BE4788();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251BE1AA0(uint64_t a1)
{
  unint64_t v2 = sub_251BE4788();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251BE1ADC(uint64_t a1)
{
  unint64_t v2 = sub_251BE48D8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251BE1B18(uint64_t a1)
{
  unint64_t v2 = sub_251BE48D8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251BE1B54(uint64_t a1)
{
  unint64_t v2 = sub_251BE4830();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251BE1B90(uint64_t a1)
{
  unint64_t v2 = sub_251BE4830();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251BE1BCC(uint64_t a1)
{
  unint64_t v2 = sub_251BE4A28();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251BE1C08(uint64_t a1)
{
  unint64_t v2 = sub_251BE4A28();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251BE1C44(uint64_t a1)
{
  unint64_t v2 = sub_251BE46E0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251BE1C80(uint64_t a1)
{
  unint64_t v2 = sub_251BE46E0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251BE1CBC(uint64_t a1)
{
  unint64_t v2 = sub_251BE4980();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251BE1CF8(uint64_t a1)
{
  unint64_t v2 = sub_251BE4980();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticCluster.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FC20);
  uint64_t v108 = *(void *)(v4 - 8);
  uint64_t v109 = v4;
  MEMORY[0x270FA5388](v4);
  int64_t v107 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FC28);
  uint64_t v105 = *(void *)(v6 - 8);
  uint64_t v106 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v102 = (char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FC30);
  uint64_t v103 = *(void *)(v8 - 8);
  uint64_t v104 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v101 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FC38);
  uint64_t v99 = *(void *)(v10 - 8);
  uint64_t v100 = v10;
  MEMORY[0x270FA5388](v10);
  int64_t v98 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FC40);
  uint64_t v96 = *(void *)(v12 - 8);
  uint64_t v97 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v95 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FC48);
  uint64_t v94 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FC50);
  uint64_t v93 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  id v19 = (char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FC58);
  uint64_t v110 = *(void *)(v128 - 8);
  MEMORY[0x270FA5388](v128);
  uint64_t v21 = (char *)&v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1A930(v2, (uint64_t)v126);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251BE468C();
  uint64_t v111 = v21;
  sub_251F36DA0();
  sub_251A1A930((uint64_t)v126, (uint64_t)v127);
  switch(sub_251A4DB2C((uint64_t)v127))
  {
    case 1u:
      uint64_t v38 = sub_251A4E128((uint64_t)v127);
      uint64_t v109 = *(void *)v38;
      __int16 v39 = *(_WORD *)(v38 + 8);
      char v40 = *(unsigned char *)(v38 + 10);
      char v41 = *(unsigned char *)(v38 + 11);
      LOBYTE(v112) = 1;
      sub_251BE4A28();
      uint64_t v42 = v128;
      uint64_t v43 = v111;
      sub_251F36900();
      *(void *)&long long v112 = v109;
      WORD4(v112) = v39;
      BYTE10(v112) = v40;
      BYTE11(v112) = v41;
      sub_251BE4A7C();
      sub_251F36A20();
      (*(void (**)(char *, uint64_t))(v94 + 8))(v16, v14);
      return (*(uint64_t (**)(char *, uint64_t))(v110 + 8))(v43, v42);
    case 2u:
      uint64_t v44 = (long long *)sub_251A4E128((uint64_t)v127);
      LOBYTE(v112) = 2;
      sub_251BE4980();
      uint64_t v45 = v95;
      uint64_t v46 = v128;
      uint64_t v47 = v111;
      sub_251F36900();
      long long v48 = *v44;
      long long v49 = v44[2];
      long long v113 = v44[1];
      long long v114 = v49;
      long long v112 = v48;
      long long v50 = v44[3];
      long long v51 = v44[4];
      long long v52 = v44[6];
      long long v117 = v44[5];
      long long v118 = v52;
      long long v115 = v50;
      long long v116 = v51;
      long long v53 = v44[7];
      long long v54 = v44[8];
      long long v55 = v44[10];
      long long v121 = v44[9];
      long long v122 = v55;
      long long v119 = v53;
      long long v120 = v54;
      long long v56 = v44[11];
      long long v57 = v44[12];
      long long v58 = v44[13];
      *(_OWORD *)((char *)v125 + 12) = *(long long *)((char *)v44 + 220);
      long long v124 = v57;
      v125[0] = v58;
      long long v123 = v56;
      sub_251BE49D4();
      uint64_t v59 = v97;
      sub_251F36A20();
      (*(void (**)(char *, uint64_t))(v96 + 8))(v45, v59);
      return (*(uint64_t (**)(char *, uint64_t))(v110 + 8))(v47, v46);
    case 3u:
      uint64_t v60 = sub_251A4E128((uint64_t)v127);
      uint64_t v61 = *(void *)v60;
      LODWORD(v109) = *(unsigned __int16 *)(v60 + 8);
      char v62 = *(unsigned char *)(v60 + 10);
      int v63 = *(_DWORD *)(v60 + 12);
      char v64 = *(unsigned char *)(v60 + 16);
      __int16 v65 = *(_WORD *)(v60 + 17);
      char v66 = *(unsigned char *)(v60 + 19);
      LODWORD(v108) = *(unsigned __int8 *)(v60 + 20);
      LOBYTE(v112) = 3;
      sub_251BE48D8();
      uint64_t v67 = v98;
      sub_251F36900();
      *(void *)&long long v112 = v61;
      WORD4(v112) = v109;
      BYTE10(v112) = v62;
      HIDWORD(v112) = v63;
      LOBYTE(v113) = v64;
      *(_WORD *)((char *)&v113 + 1) = v65;
      BYTE3(v113) = v66;
      BYTE4(v113) = v108;
      sub_251BE492C();
      uint64_t v68 = v100;
      sub_251F36A20();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v67, v68);
      uint64_t v69 = v111;
      uint64_t v70 = *(uint64_t (**)(char *, uint64_t))(v110 + 8);
      goto LABEL_10;
    case 4u:
      uint64_t v71 = sub_251A4E128((uint64_t)v127);
      uint64_t v109 = *(void *)v71;
      int v72 = *(_DWORD *)(v71 + 8);
      LODWORD(v108) = *(unsigned __int8 *)(v71 + 12);
      char v73 = *(unsigned char *)(v71 + 13);
      char v74 = *(unsigned char *)(v71 + 14);
      char v75 = *(unsigned char *)(v71 + 15);
      __int16 v76 = *(_WORD *)(v71 + 16);
      LODWORD(v107) = *(unsigned __int8 *)(v71 + 18);
      LODWORD(v106) = *(unsigned __int8 *)(v71 + 19);
      LODWORD(v105) = *(unsigned __int8 *)(v71 + 20);
      LODWORD(v102) = *(unsigned __int16 *)(v71 + 22);
      LODWORD(v100) = *(unsigned __int8 *)(v71 + 24);
      LODWORD(v99) = *(unsigned __int16 *)(v71 + 26);
      LODWORD(v98) = *(unsigned __int8 *)(v71 + 28);
      LODWORD(v97) = *(unsigned __int8 *)(v71 + 29);
      LODWORD(v96) = *(unsigned __int8 *)(v71 + 30);
      LODWORD(v95) = *(unsigned __int8 *)(v71 + 31);
      LODWORD(v94) = *(unsigned __int8 *)(v71 + 32);
      LOBYTE(v112) = 4;
      sub_251BE4830();
      int64_t v77 = v101;
      unint64_t v78 = v111;
      sub_251F36900();
      *(void *)&long long v112 = v109;
      DWORD2(v112) = v72;
      BYTE12(v112) = v108;
      BYTE13(v112) = v73;
      BYTE14(v112) = v74;
      HIBYTE(v112) = v75;
      LOWORD(v113) = v76;
      BYTE2(v113) = (_BYTE)v107;
      BYTE3(v113) = v106;
      BYTE4(v113) = v105;
      WORD3(v113) = (_WORD)v102;
      BYTE8(v113) = v100;
      WORD5(v113) = v99;
      BYTE12(v113) = (_BYTE)v98;
      BYTE13(v113) = v97;
      BYTE14(v113) = v96;
      HIBYTE(v113) = (_BYTE)v95;
      LOBYTE(v114) = v94;
      sub_251BE4884();
      uint64_t v79 = v104;
      sub_251F36A20();
      uint64_t v80 = v103;
      goto LABEL_9;
    case 5u:
      uint64_t v81 = sub_251A4E128((uint64_t)v127);
      uint64_t v109 = *(void *)v81;
      int v82 = *(_DWORD *)(v81 + 8);
      LODWORD(v108) = *(unsigned __int8 *)(v81 + 12);
      char v83 = *(unsigned char *)(v81 + 13);
      char v84 = *(unsigned char *)(v81 + 14);
      char v85 = *(unsigned char *)(v81 + 15);
      char v86 = *(unsigned char *)(v81 + 16);
      LODWORD(v107) = *(unsigned __int8 *)(v81 + 17);
      LODWORD(v104) = *(unsigned __int8 *)(v81 + 18);
      LODWORD(v103) = *(unsigned __int8 *)(v81 + 19);
      LODWORD(v101) = *(unsigned __int8 *)(v81 + 20);
      LODWORD(v100) = *(unsigned __int8 *)(v81 + 21);
      LOBYTE(v112) = 5;
      sub_251BE4788();
      int64_t v77 = v102;
      unint64_t v78 = v111;
      sub_251F36900();
      *(void *)&long long v112 = v109;
      DWORD2(v112) = v82;
      BYTE12(v112) = v108;
      BYTE13(v112) = v83;
      BYTE14(v112) = v84;
      HIBYTE(v112) = v85;
      LOBYTE(v113) = v86;
      BYTE1(v113) = (_BYTE)v107;
      BYTE2(v113) = v104;
      BYTE3(v113) = v103;
      BYTE4(v113) = (_BYTE)v101;
      BYTE5(v113) = v100;
      sub_251BE47DC();
      uint64_t v79 = v106;
      sub_251F36A20();
      uint64_t v80 = v105;
      goto LABEL_9;
    case 6u:
      uint64_t v87 = sub_251A4E128((uint64_t)v127);
      uint64_t v106 = *(void *)v87;
      int v88 = *(_DWORD *)(v87 + 8);
      LODWORD(v105) = *(unsigned __int8 *)(v87 + 12);
      int v89 = *(_DWORD *)(v87 + 16);
      __int16 v90 = *(_WORD *)(v87 + 20);
      char v91 = *(unsigned char *)(v87 + 22);
      int v92 = *(_DWORD *)(v87 + 24);
      LODWORD(v104) = *(unsigned __int8 *)(v87 + 28);
      LODWORD(v103) = *(unsigned __int8 *)(v87 + 29);
      LODWORD(v102) = *(unsigned __int8 *)(v87 + 30);
      LODWORD(v101) = *(unsigned __int8 *)(v87 + 31);
      LODWORD(v100) = *(unsigned __int8 *)(v87 + 32);
      LOBYTE(v112) = 6;
      sub_251BE46E0();
      int64_t v77 = v107;
      unint64_t v78 = v111;
      sub_251F36900();
      *(void *)&long long v112 = v106;
      DWORD2(v112) = v88;
      BYTE12(v112) = v105;
      LODWORD(v113) = v89;
      WORD2(v113) = v90;
      BYTE6(v113) = v91;
      DWORD2(v113) = v92;
      BYTE12(v113) = v104;
      BYTE13(v113) = v103;
      BYTE14(v113) = (_BYTE)v102;
      HIBYTE(v113) = (_BYTE)v101;
      LOBYTE(v114) = v100;
      sub_251BE4734();
      uint64_t v79 = v109;
      sub_251F36A20();
      uint64_t v80 = v108;
LABEL_9:
      (*(void (**)(char *, uint64_t))(v80 + 8))(v77, v79);
      uint64_t v70 = *(uint64_t (**)(char *, uint64_t))(v110 + 8);
      uint64_t v69 = v78;
LABEL_10:
      uint64_t result = v70(v69, v128);
      break;
    default:
      os_log_type_t v22 = (long long *)sub_251A4E128((uint64_t)v127);
      LOBYTE(v112) = 0;
      sub_251BE4AD0();
      uint64_t v23 = v128;
      uint64_t v24 = v111;
      sub_251F36900();
      long long v25 = *v22;
      long long v26 = v22[1];
      long long v27 = v22[3];
      long long v114 = v22[2];
      long long v115 = v27;
      long long v112 = v25;
      long long v113 = v26;
      long long v28 = v22[4];
      long long v29 = v22[5];
      long long v30 = v22[7];
      long long v118 = v22[6];
      long long v119 = v30;
      long long v116 = v28;
      long long v117 = v29;
      long long v31 = v22[8];
      long long v32 = v22[9];
      long long v33 = v22[11];
      long long v122 = v22[10];
      long long v123 = v33;
      long long v120 = v31;
      long long v121 = v32;
      long long v34 = v22[12];
      long long v35 = v22[13];
      long long v36 = v22[14];
      *(_OWORD *)((char *)&v125[1] + 12) = *(long long *)((char *)v22 + 236);
      v125[0] = v35;
      v125[1] = v36;
      long long v124 = v34;
      sub_251BE4B24();
      sub_251F36A20();
      (*(void (**)(char *, uint64_t))(v93 + 8))(v19, v17);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v110 + 8))(v24, v23);
      break;
  }
  return result;
}

uint64_t StaticCluster.hashValue.getter()
{
  sub_251A1A930(v0, (uint64_t)v4);
  sub_251A1A930((uint64_t)v4, (uint64_t)v3);
  sub_251F36CA0();
  StaticCluster.hash(into:)(v2);
  return sub_251F36D00();
}

uint64_t StaticCluster.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v79 = a2;
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FCD8);
  uint64_t v75 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  unint64_t v78 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FCE0);
  uint64_t v72 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  uint64_t v81 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FCE8);
  uint64_t v70 = *(void *)(v5 - 8);
  uint64_t v71 = v5;
  MEMORY[0x270FA5388](v5);
  __int16 v76 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FCF0);
  uint64_t v68 = *(void *)(v7 - 8);
  uint64_t v69 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v80 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FCF8);
  uint64_t v66 = *(void *)(v9 - 8);
  uint64_t v67 = v9;
  MEMORY[0x270FA5388](v9);
  int64_t v77 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FD00);
  uint64_t v64 = *(void *)(v11 - 8);
  uint64_t v65 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FD08);
  uint64_t v63 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FD10);
  uint64_t v17 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  id v19 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1[3];
  char v83 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_251BE468C();
  uint64_t v21 = v113;
  sub_251F36D90();
  if (!v21)
  {
    uint64_t v62 = v14;
    os_log_type_t v22 = v80;
    uint64_t v23 = v81;
    uint64_t v113 = v17;
    uint64_t v24 = sub_251F368E0();
    if (*(void *)(v24 + 16) == 1)
    {
      uint64_t v61 = v19;
      uint64_t v25 = v82;
      switch(*(unsigned char *)(v24 + 32))
      {
        case 1:
          LOBYTE(v98) = 1;
          sub_251BE4A28();
          long long v34 = v13;
          sub_251F36770();
          sub_251BE4D9C();
          uint64_t v48 = v65;
          sub_251F36880();
          long long v49 = (void (**)(char *, uint64_t))(v113 + 8);
          (*(void (**)(char *, uint64_t))(v64 + 8))(v34, v48);
          swift_bridgeObjectRelease();
          (*v49)(v61, v25);
          *(void *)&long long v98 = v84;
          DWORD2(v98) = DWORD2(v84);
          sub_251BE4DF0((uint64_t)&v98);
          goto LABEL_12;
        case 2:
          LOBYTE(v98) = 2;
          sub_251BE4980();
          long long v35 = v77;
          long long v36 = v61;
          sub_251F36770();
          sub_251BE4D28();
          uint64_t v50 = v67;
          sub_251F36880();
          long long v51 = (void (**)(char *, uint64_t))(v113 + 8);
          (*(void (**)(char *, uint64_t))(v66 + 8))(v35, v50);
          swift_bridgeObjectRelease();
          (*v51)(v36, v25);
          long long v110 = v96;
          v111[0] = v97[0];
          *(_OWORD *)((char *)v111 + 12) = *(_OWORD *)((char *)v97 + 12);
          long long v106 = v92;
          long long v107 = v93;
          long long v108 = v94;
          long long v109 = v95;
          long long v102 = v88;
          long long v103 = v89;
          long long v104 = v90;
          long long v105 = v91;
          long long v98 = v84;
          long long v99 = v85;
          long long v100 = v86;
          long long v101 = v87;
          sub_251BE4D7C((uint64_t)&v98);
          goto LABEL_12;
        case 3:
          LOBYTE(v98) = 3;
          sub_251BE48D8();
          uint64_t v37 = v61;
          sub_251F36770();
          sub_251BE4CD4();
          uint64_t v52 = v69;
          sub_251F36880();
          long long v53 = (void (**)(char *, uint64_t))(v113 + 8);
          (*(void (**)(char *, uint64_t))(v68 + 8))(v22, v52);
          swift_bridgeObjectRelease();
          (*v53)(v37, v25);
          *(void *)&long long v98 = v84;
          WORD4(v98) = WORD4(v84);
          BYTE10(v98) = BYTE10(v84);
          HIDWORD(v98) = HIDWORD(v84);
          LOBYTE(v99) = v85;
          *(_DWORD *)((char *)&v99 + 1) = *(_DWORD *)((char *)&v85 + 1);
          sub_251B72274((uint64_t)&v98);
          goto LABEL_12;
        case 4:
          LOBYTE(v98) = 4;
          sub_251BE4830();
          uint64_t v38 = v76;
          uint64_t v39 = v25;
          char v40 = v61;
          sub_251F36770();
          sub_251BE4C60();
          uint64_t v41 = v71;
          sub_251F36880();
          uint64_t v42 = (void (**)(char *, uint64_t))(v113 + 8);
          (*(void (**)(char *, uint64_t))(v70 + 8))(v38, v41);
          swift_bridgeObjectRelease();
          (*v42)(v40, v39);
          long long v98 = v84;
          LODWORD(v99) = v85;
          BYTE4(v99) = BYTE4(v85);
          WORD3(v99) = WORD3(v85);
          BYTE8(v99) = BYTE8(v85);
          *(_DWORD *)((char *)&v99 + 10) = *(_DWORD *)((char *)&v85 + 10);
          HIWORD(v99) = HIWORD(v85);
          LOBYTE(v100) = v86;
          sub_251BE4CB4((uint64_t)&v98);
          goto LABEL_12;
        case 5:
          LOBYTE(v98) = 5;
          sub_251BE4788();
          uint64_t v43 = v25;
          uint64_t v44 = v61;
          sub_251F36770();
          sub_251BE4BEC();
          uint64_t v54 = v74;
          sub_251F36880();
          long long v55 = (void (**)(char *, uint64_t))(v113 + 8);
          (*(void (**)(char *, uint64_t))(v72 + 8))(v23, v54);
          swift_bridgeObjectRelease();
          (*v55)(v44, v43);
          long long v98 = v84;
          LODWORD(v99) = v85;
          WORD2(v99) = WORD2(v85);
          sub_251BE4C40((uint64_t)&v98);
          goto LABEL_12;
        case 6:
          LOBYTE(v98) = 6;
          sub_251BE46E0();
          uint64_t v45 = v78;
          uint64_t v46 = v25;
          uint64_t v47 = v61;
          sub_251F36770();
          sub_251BE4B78();
          uint64_t v56 = v73;
          sub_251F36880();
          long long v57 = (void (**)(char *, uint64_t))(v113 + 8);
          (*(void (**)(char *, uint64_t))(v75 + 8))(v45, v56);
          swift_bridgeObjectRelease();
          (*v57)(v47, v46);
          *(void *)&long long v98 = v84;
          DWORD2(v98) = DWORD2(v84);
          BYTE12(v98) = BYTE12(v84);
          LODWORD(v99) = v85;
          WORD2(v99) = WORD2(v85);
          BYTE6(v99) = BYTE6(v85);
          *((void *)&v99 + 1) = *((void *)&v85 + 1);
          LOBYTE(v100) = v86;
          sub_251BE4BCC((uint64_t)&v98);
LABEL_12:
          long long v58 = &v98;
          break;
        default:
          LOBYTE(v98) = 0;
          sub_251BE4AD0();
          uint64_t v26 = v25;
          long long v27 = v61;
          sub_251F36770();
          sub_251BE4E10();
          uint64_t v28 = v62;
          sub_251F36880();
          uint64_t v29 = v113;
          (*(void (**)(char *, uint64_t))(v63 + 8))(v16, v28);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v29 + 8))(v27, v26);
          long long v96 = v110;
          v97[0] = v111[0];
          v97[1] = v111[1];
          *(_OWORD *)((char *)&v97[1] + 12) = *(_OWORD *)((char *)&v111[1] + 12);
          long long v92 = v106;
          long long v93 = v107;
          long long v94 = v108;
          long long v95 = v109;
          long long v88 = v102;
          long long v89 = v103;
          long long v90 = v104;
          long long v91 = v105;
          long long v84 = v98;
          long long v85 = v99;
          long long v86 = v100;
          long long v87 = v101;
          sub_251BE4E64((uint64_t)&v84);
          long long v58 = &v84;
          break;
      }
      sub_251A1A930((uint64_t)v58, (uint64_t)v112);
      sub_251A1A930((uint64_t)v112, v79);
    }
    else
    {
      uint64_t v30 = sub_251F36490();
      swift_allocError();
      long long v32 = v31;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
      *long long v32 = &type metadata for StaticCluster;
      uint64_t v33 = v82;
      sub_251F36780();
      sub_251F36480();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v30 - 8) + 104))(v32, *MEMORY[0x263F8DCB0], v30);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v113 + 8))(v19, v33);
    }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v83);
}

uint64_t sub_251BE3938()
{
  sub_251A1A930(v0, (uint64_t)v4);
  sub_251A1A930((uint64_t)v4, (uint64_t)v3);
  sub_251F36CA0();
  StaticCluster.hash(into:)(v2);
  return sub_251F36D00();
}

uint64_t sub_251BE3998()
{
  sub_251A1A930(v0, (uint64_t)v4);
  sub_251A1A930((uint64_t)v4, (uint64_t)v3);
  sub_251F36CA0();
  StaticCluster.hash(into:)(v2);
  return sub_251F36D00();
}

uint64_t sub_251BE3A00@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticCluster.init(from:)(a1, a2);
}

uint64_t sub_251BE3A18(void *a1)
{
  return StaticCluster.encode(to:)(a1);
}

uint64_t StaticCluster.copyApplying(overridingAttributes:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_251A1A930(v2, (uint64_t)v7);
  sub_251A1A930((uint64_t)v7, (uint64_t)v8);
  if (sub_251A4DB2C((uint64_t)v8) == 2)
  {
    sub_251A4E128((uint64_t)v8);
    sub_251E57FF4(a1, (uint64_t)v6);
    sub_251BE4D7C((uint64_t)v6);
    return sub_251A1A930((uint64_t)v6, a2);
  }
  else
  {
    sub_251A1A930((uint64_t)v7, a2);
    return sub_251B2EDC8((uint64_t)v7, sub_251A1AA24);
  }
}

uint64_t StaticCluster.id.getter@<X0>(uint64_t a1@<X8>)
{
  sub_251A1A930(v1, (uint64_t)v6);
  sub_251A1A930((uint64_t)v6, (uint64_t)v7);
  sub_251A4DB2C((uint64_t)v7);
  uint64_t result = sub_251A4E128((uint64_t)v7);
  __int16 v4 = *(_WORD *)(result + 8);
  char v5 = *(unsigned char *)(result + 10);
  *(void *)a1 = *(void *)result;
  *(_WORD *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 10) = v5;
  return result;
}

uint64_t _s13HomeDataModel13StaticClusterO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_251A1A930(a1, (uint64_t)v167);
  sub_251A1A930(a2, (uint64_t)v168);
  sub_251A1A930((uint64_t)v167, (uint64_t)v169);
  sub_251A1A930((uint64_t)v168, (uint64_t)&v170);
  sub_251A1A930((uint64_t)v167, (uint64_t)v171);
  switch(sub_251A4DB2C((uint64_t)v171))
  {
    case 1u:
      uint64_t v5 = sub_251A4E128((uint64_t)v171);
      uint64_t v6 = *(void *)v5;
      int v7 = *(unsigned __int16 *)(v5 + 8);
      uint64_t v8 = *(char *)(v5 + 10);
      int v9 = *(unsigned __int8 *)(v5 + 11);
      sub_251A1A930((uint64_t)v168, (uint64_t)v166);
      if (sub_251A4DB2C((uint64_t)v166) != 1) {
        goto LABEL_22;
      }
      uint64_t v10 = sub_251A4E128((uint64_t)v166);
      uint64_t v11 = *(void *)v10;
      int v12 = *(unsigned __int16 *)(v10 + 8);
      uint64_t v13 = *(char *)(v10 + 10);
      int v14 = *(unsigned __int8 *)(v10 + 11);
      sub_251BE670C((uint64_t)v169);
      if (v6 != v11 || v7 != v12 || dword_251F460BC[v8] != dword_251F460BC[v13] || ((v9 ^ v14) & 1) != 0) {
        goto LABEL_23;
      }
      char v15 = 1;
      return v15 & 1;
    case 2u:
      uint64_t v16 = (long long *)sub_251A4E128((uint64_t)v171);
      sub_251A1A930((uint64_t)v168, (uint64_t)v166);
      if (sub_251A4DB2C((uint64_t)v166) != 2)
      {
        sub_251A1A930((uint64_t)v167, (uint64_t)&v152);
        uint64_t v67 = sub_251A4E128((uint64_t)&v152);
        sub_251A4DB38(v67);
        goto LABEL_22;
      }
      uint64_t v17 = (long long *)sub_251A4E128((uint64_t)v166);
      long long v163 = v16[11];
      long long v164 = v16[12];
      *(_OWORD *)uint64_t v165 = v16[13];
      *(_OWORD *)&v165[12] = *(long long *)((char *)v16 + 220);
      long long v159 = v16[7];
      long long v160 = v16[8];
      long long v161 = v16[9];
      long long v162 = v16[10];
      long long v155 = v16[3];
      long long v156 = v16[4];
      long long v157 = v16[5];
      long long v158 = v16[6];
      long long v152 = *v16;
      long long v153 = v16[1];
      long long v154 = v16[2];
      long long v149 = v17[11];
      long long v150 = v17[12];
      *(_OWORD *)uint64_t v151 = v17[13];
      *(_OWORD *)&v151[12] = *(long long *)((char *)v17 + 220);
      long long v145 = v17[7];
      long long v146 = v17[8];
      long long v147 = v17[9];
      long long v148 = v17[10];
      long long v141 = v17[3];
      long long v142 = v17[4];
      long long v143 = v17[5];
      long long v144 = v17[6];
      long long v138 = *v17;
      long long v139 = v17[1];
      long long v140 = v17[2];
      sub_251B2EDC8((uint64_t)v168, sub_251A1AA24);
      sub_251B2EDC8((uint64_t)v167, sub_251A1AA24);
      sub_251B2EDC8((uint64_t)v168, sub_251A1AA24);
      sub_251B2EDC8((uint64_t)v167, sub_251A1AA24);
      char v15 = _s13HomeDataModel21StaticRVCClusterGroupV2eeoiySbAC_ACtFZ_0((uint64_t)&v152, (uint64_t)&v138);
      sub_251BE670C((uint64_t)v169);
      sub_251B2EDC8((uint64_t)v168, sub_251A4DC54);
      sub_251B2EDC8((uint64_t)v167, sub_251A4DC54);
      return v15 & 1;
    case 3u:
      uint64_t v18 = sub_251A4E128((uint64_t)v171);
      uint64_t v19 = *(void *)v18;
      __int16 v20 = *(_WORD *)(v18 + 8);
      char v21 = *(unsigned char *)(v18 + 10);
      int v22 = *(_DWORD *)(v18 + 12);
      char v23 = *(unsigned char *)(v18 + 16);
      char v24 = *(unsigned char *)(v18 + 17);
      char v25 = *(unsigned char *)(v18 + 18);
      char v26 = *(unsigned char *)(v18 + 19);
      char v27 = *(unsigned char *)(v18 + 20);
      sub_251A1A930((uint64_t)v168, (uint64_t)v166);
      if (sub_251A4DB2C((uint64_t)v166) != 3) {
        goto LABEL_22;
      }
      uint64_t v28 = sub_251A4E128((uint64_t)v166);
      uint64_t v29 = *(void *)v28;
      char v130 = *(unsigned char *)(v28 + 10);
      __int16 v134 = *(_WORD *)(v28 + 8);
      char v122 = *(unsigned char *)(v28 + 16);
      int v126 = *(_DWORD *)(v28 + 12);
      __int16 v118 = *(_WORD *)(v28 + 17);
      char v110 = *(unsigned char *)(v28 + 20);
      char v114 = *(unsigned char *)(v28 + 19);
      sub_251BE670C((uint64_t)v169);
      *(void *)&long long v152 = v19;
      WORD4(v152) = v20;
      BYTE10(v152) = v21;
      HIDWORD(v152) = v22;
      LOBYTE(v153) = v23;
      BYTE1(v153) = v24;
      BYTE2(v153) = v25;
      BYTE3(v153) = v26;
      BYTE4(v153) = v27;
      *(void *)&long long v138 = v29;
      WORD4(v138) = v134;
      BYTE10(v138) = v130;
      HIDWORD(v138) = v126;
      LOBYTE(v139) = v122;
      *(_WORD *)((char *)&v139 + 1) = v118;
      BYTE3(v139) = v114;
      BYTE4(v139) = v110;
      char v30 = _s13HomeDataModel21StaticDoorLockClusterV2eeoiySbAC_ACtFZ_0((uint64_t)&v152, (uint64_t)&v138);
      goto LABEL_20;
    case 4u:
      uint64_t v31 = sub_251A4E128((uint64_t)v171);
      uint64_t v32 = *(void *)v31;
      __int16 v33 = *(_WORD *)(v31 + 8);
      char v34 = *(unsigned char *)(v31 + 10);
      char v35 = *(unsigned char *)(v31 + 11);
      char v36 = *(unsigned char *)(v31 + 12);
      char v37 = *(unsigned char *)(v31 + 13);
      char v38 = *(unsigned char *)(v31 + 14);
      char v39 = *(unsigned char *)(v31 + 15);
      __int16 v40 = *(_WORD *)(v31 + 16);
      char v41 = *(unsigned char *)(v31 + 18);
      char v131 = *(unsigned char *)(v31 + 20);
      char v135 = *(unsigned char *)(v31 + 19);
      char v123 = *(unsigned char *)(v31 + 24);
      __int16 v127 = *(_WORD *)(v31 + 22);
      __int16 v119 = *(_WORD *)(v31 + 26);
      char v111 = *(unsigned char *)(v31 + 29);
      char v115 = *(unsigned char *)(v31 + 28);
      char v104 = *(unsigned char *)(v31 + 31);
      char v107 = *(unsigned char *)(v31 + 30);
      char v101 = *(unsigned char *)(v31 + 32);
      sub_251A1A930((uint64_t)v168, (uint64_t)v166);
      if (sub_251A4DB2C((uint64_t)v166) != 4) {
        goto LABEL_22;
      }
      uint64_t v42 = sub_251A4E128((uint64_t)v166);
      uint64_t v98 = *(void *)v42;
      char v92 = *(unsigned char *)(v42 + 12);
      int v95 = *(_DWORD *)(v42 + 8);
      char v86 = *(unsigned char *)(v42 + 14);
      char v89 = *(unsigned char *)(v42 + 13);
      __int16 v81 = *(_WORD *)(v42 + 16);
      char v83 = *(unsigned char *)(v42 + 15);
      char v79 = *(unsigned char *)(v42 + 19);
      char v80 = *(unsigned char *)(v42 + 18);
      __int16 v77 = *(_WORD *)(v42 + 22);
      char v78 = *(unsigned char *)(v42 + 20);
      __int16 v75 = *(_WORD *)(v42 + 26);
      char v76 = *(unsigned char *)(v42 + 24);
      char v73 = *(unsigned char *)(v42 + 29);
      char v74 = *(unsigned char *)(v42 + 28);
      char v71 = *(unsigned char *)(v42 + 31);
      char v72 = *(unsigned char *)(v42 + 30);
      char v70 = *(unsigned char *)(v42 + 32);
      sub_251BE670C((uint64_t)v169);
      *(void *)&long long v152 = v32;
      WORD4(v152) = v33;
      BYTE10(v152) = v34;
      BYTE11(v152) = v35;
      BYTE12(v152) = v36;
      BYTE13(v152) = v37;
      BYTE14(v152) = v38;
      HIBYTE(v152) = v39;
      LOWORD(v153) = v40;
      BYTE2(v153) = v41;
      BYTE3(v153) = v135;
      BYTE4(v153) = v131;
      WORD3(v153) = v127;
      BYTE8(v153) = v123;
      WORD5(v153) = v119;
      BYTE12(v153) = v115;
      BYTE13(v153) = v111;
      BYTE14(v153) = v107;
      HIBYTE(v153) = v104;
      LOBYTE(v154) = v101;
      *(void *)&long long v138 = v98;
      DWORD2(v138) = v95;
      BYTE12(v138) = v92;
      BYTE13(v138) = v89;
      BYTE14(v138) = v86;
      HIBYTE(v138) = v83;
      LOWORD(v139) = v81;
      BYTE2(v139) = v80;
      BYTE3(v139) = v79;
      BYTE4(v139) = v78;
      WORD3(v139) = v77;
      BYTE8(v139) = v76;
      WORD5(v139) = v75;
      BYTE12(v139) = v74;
      BYTE13(v139) = v73;
      BYTE14(v139) = v72;
      HIBYTE(v139) = v71;
      LOBYTE(v140) = v70;
      char v30 = _s13HomeDataModel25StaticLevelControlClusterV2eeoiySbAC_ACtFZ_0((uint64_t)&v152, (uint64_t)&v138);
      goto LABEL_20;
    case 5u:
      uint64_t v43 = sub_251A4E128((uint64_t)v171);
      uint64_t v44 = *(void *)v43;
      __int16 v45 = *(_WORD *)(v43 + 8);
      char v46 = *(unsigned char *)(v43 + 10);
      char v47 = *(unsigned char *)(v43 + 11);
      char v48 = *(unsigned char *)(v43 + 12);
      char v49 = *(unsigned char *)(v43 + 13);
      char v50 = *(unsigned char *)(v43 + 14);
      char v51 = *(unsigned char *)(v43 + 15);
      char v52 = *(unsigned char *)(v43 + 16);
      char v53 = *(unsigned char *)(v43 + 17);
      char v132 = *(unsigned char *)(v43 + 19);
      char v136 = *(unsigned char *)(v43 + 18);
      char v124 = *(unsigned char *)(v43 + 21);
      char v128 = *(unsigned char *)(v43 + 20);
      sub_251A1A930((uint64_t)v168, (uint64_t)v166);
      if (sub_251A4DB2C((uint64_t)v166) != 5) {
        goto LABEL_22;
      }
      uint64_t v54 = sub_251A4E128((uint64_t)v166);
      uint64_t v120 = *(void *)v54;
      char v112 = *(unsigned char *)(v54 + 12);
      int v116 = *(_DWORD *)(v54 + 8);
      char v105 = *(unsigned char *)(v54 + 14);
      char v108 = *(unsigned char *)(v54 + 13);
      char v102 = *(unsigned char *)(v54 + 15);
      char v96 = *(unsigned char *)(v54 + 17);
      char v99 = *(unsigned char *)(v54 + 16);
      char v90 = *(unsigned char *)(v54 + 19);
      char v93 = *(unsigned char *)(v54 + 18);
      char v84 = *(unsigned char *)(v54 + 21);
      char v87 = *(unsigned char *)(v54 + 20);
      sub_251BE670C((uint64_t)v169);
      *(void *)&long long v152 = v44;
      WORD4(v152) = v45;
      BYTE10(v152) = v46;
      BYTE11(v152) = v47;
      BYTE12(v152) = v48;
      BYTE13(v152) = v49;
      BYTE14(v152) = v50;
      HIBYTE(v152) = v51;
      LOBYTE(v153) = v52;
      BYTE1(v153) = v53;
      BYTE2(v153) = v136;
      BYTE3(v153) = v132;
      BYTE4(v153) = v128;
      BYTE5(v153) = v124;
      *(void *)&long long v138 = v120;
      DWORD2(v138) = v116;
      BYTE12(v138) = v112;
      BYTE13(v138) = v108;
      BYTE14(v138) = v105;
      HIBYTE(v138) = v102;
      LOBYTE(v139) = v99;
      BYTE1(v139) = v96;
      BYTE2(v139) = v93;
      BYTE3(v139) = v90;
      BYTE4(v139) = v87;
      BYTE5(v139) = v84;
      char v30 = _s13HomeDataModel25StaticColorControlClusterV2eeoiySbAC_ACtFZ_0((uint64_t)&v152, (uint64_t)&v138);
      goto LABEL_20;
    case 6u:
      uint64_t v55 = sub_251A4E128((uint64_t)v171);
      uint64_t v56 = *(void *)v55;
      __int16 v57 = *(_WORD *)(v55 + 8);
      char v58 = *(unsigned char *)(v55 + 10);
      char v59 = *(unsigned char *)(v55 + 11);
      char v60 = *(unsigned char *)(v55 + 12);
      int v61 = *(_DWORD *)(v55 + 16);
      char v62 = *(unsigned char *)(v55 + 20);
      char v63 = *(unsigned char *)(v55 + 21);
      char v64 = *(unsigned char *)(v55 + 22);
      int v65 = *(_DWORD *)(v55 + 24);
      char v133 = *(unsigned char *)(v55 + 29);
      char v137 = *(unsigned char *)(v55 + 28);
      char v125 = *(unsigned char *)(v55 + 31);
      char v129 = *(unsigned char *)(v55 + 30);
      char v121 = *(unsigned char *)(v55 + 32);
      sub_251A1A930((uint64_t)v168, (uint64_t)v166);
      if (sub_251A4DB2C((uint64_t)v166) != 6) {
        goto LABEL_22;
      }
      uint64_t v66 = sub_251A4E128((uint64_t)v166);
      uint64_t v117 = *(void *)v66;
      char v109 = *(unsigned char *)(v66 + 12);
      int v113 = *(_DWORD *)(v66 + 8);
      __int16 v103 = *(_WORD *)(v66 + 20);
      int v106 = *(_DWORD *)(v66 + 16);
      int v97 = *(_DWORD *)(v66 + 24);
      char v100 = *(unsigned char *)(v66 + 22);
      char v91 = *(unsigned char *)(v66 + 29);
      char v94 = *(unsigned char *)(v66 + 28);
      char v85 = *(unsigned char *)(v66 + 31);
      char v88 = *(unsigned char *)(v66 + 30);
      char v82 = *(unsigned char *)(v66 + 32);
      sub_251BE670C((uint64_t)v169);
      *(void *)&long long v152 = v56;
      WORD4(v152) = v57;
      BYTE10(v152) = v58;
      BYTE11(v152) = v59;
      BYTE12(v152) = v60;
      LODWORD(v153) = v61;
      BYTE4(v153) = v62;
      BYTE5(v153) = v63;
      BYTE6(v153) = v64;
      DWORD2(v153) = v65;
      BYTE12(v153) = v137;
      BYTE13(v153) = v133;
      BYTE14(v153) = v129;
      HIBYTE(v153) = v125;
      LOBYTE(v154) = v121;
      *(void *)&long long v138 = v117;
      DWORD2(v138) = v113;
      BYTE12(v138) = v109;
      LODWORD(v139) = v106;
      WORD2(v139) = v103;
      BYTE6(v139) = v100;
      DWORD2(v139) = v97;
      BYTE12(v139) = v94;
      BYTE13(v139) = v91;
      BYTE14(v139) = v88;
      HIBYTE(v139) = v85;
      LOBYTE(v140) = v82;
      char v30 = _s13HomeDataModel24StaticClusterPowerSourceV2eeoiySbAC_ACtFZ_0((uint64_t)&v152, (uint64_t)&v138);
LABEL_20:
      char v15 = v30;
      break;
    default:
      uint64_t v3 = (long long *)sub_251A4E128((uint64_t)v171);
      sub_251A1A930((uint64_t)v168, (uint64_t)v166);
      if (sub_251A4DB2C((uint64_t)v166))
      {
        sub_251A1A930((uint64_t)v167, (uint64_t)&v152);
        uint64_t v4 = sub_251A4E128((uint64_t)&v152);
        sub_251BE6894(v4);
LABEL_22:
        sub_251B2EDC8((uint64_t)v168, sub_251A1AA24);
        sub_251BE670C((uint64_t)v169);
LABEL_23:
        char v15 = 0;
      }
      else
      {
        uint64_t v69 = (long long *)sub_251A4E128((uint64_t)v166);
        long long v164 = v3[12];
        *(_OWORD *)uint64_t v165 = v3[13];
        *(_OWORD *)&v165[16] = v3[14];
        *(_OWORD *)&v165[28] = *(long long *)((char *)v3 + 236);
        long long v160 = v3[8];
        long long v161 = v3[9];
        long long v162 = v3[10];
        long long v163 = v3[11];
        long long v156 = v3[4];
        long long v157 = v3[5];
        long long v158 = v3[6];
        long long v159 = v3[7];
        long long v152 = *v3;
        long long v153 = v3[1];
        long long v154 = v3[2];
        long long v155 = v3[3];
        long long v150 = v69[12];
        *(_OWORD *)uint64_t v151 = v69[13];
        *(_OWORD *)&v151[16] = v69[14];
        *(_OWORD *)&v151[28] = *(long long *)((char *)v69 + 236);
        long long v146 = v69[8];
        long long v147 = v69[9];
        long long v148 = v69[10];
        long long v149 = v69[11];
        long long v142 = v69[4];
        long long v143 = v69[5];
        long long v144 = v69[6];
        long long v145 = v69[7];
        long long v138 = *v69;
        long long v139 = v69[1];
        long long v140 = v69[2];
        long long v141 = v69[3];
        char v15 = _s13HomeDataModel22StaticBasicInfoClusterV2eeoiySbAC_ACtFZ_0((uint64_t)&v152, (uint64_t)&v138);
        sub_251B2EDC8((uint64_t)v168, sub_251A1AA24);
        sub_251B2EDC8((uint64_t)v167, sub_251A1AA24);
        sub_251BE670C((uint64_t)v169);
      }
      break;
  }
  return v15 & 1;
}

unint64_t sub_251BE468C()
{
  unint64_t result = qword_269B9FC60;
  if (!qword_269B9FC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FC60);
  }
  return result;
}

unint64_t sub_251BE46E0()
{
  unint64_t result = qword_269B9FC68;
  if (!qword_269B9FC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FC68);
  }
  return result;
}

unint64_t sub_251BE4734()
{
  unint64_t result = qword_269B9FC70;
  if (!qword_269B9FC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FC70);
  }
  return result;
}

unint64_t sub_251BE4788()
{
  unint64_t result = qword_269B9FC78;
  if (!qword_269B9FC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FC78);
  }
  return result;
}

unint64_t sub_251BE47DC()
{
  unint64_t result = qword_269B9FC80;
  if (!qword_269B9FC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FC80);
  }
  return result;
}

unint64_t sub_251BE4830()
{
  unint64_t result = qword_269B9FC88;
  if (!qword_269B9FC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FC88);
  }
  return result;
}

unint64_t sub_251BE4884()
{
  unint64_t result = qword_269B9FC90;
  if (!qword_269B9FC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FC90);
  }
  return result;
}

unint64_t sub_251BE48D8()
{
  unint64_t result = qword_269B9FC98;
  if (!qword_269B9FC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FC98);
  }
  return result;
}

unint64_t sub_251BE492C()
{
  unint64_t result = qword_269B9FCA0;
  if (!qword_269B9FCA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FCA0);
  }
  return result;
}

unint64_t sub_251BE4980()
{
  unint64_t result = qword_269B9FCA8;
  if (!qword_269B9FCA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FCA8);
  }
  return result;
}

unint64_t sub_251BE49D4()
{
  unint64_t result = qword_269B9FCB0;
  if (!qword_269B9FCB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FCB0);
  }
  return result;
}

unint64_t sub_251BE4A28()
{
  unint64_t result = qword_269B9FCB8;
  if (!qword_269B9FCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FCB8);
  }
  return result;
}

unint64_t sub_251BE4A7C()
{
  unint64_t result = qword_269B9FCC0;
  if (!qword_269B9FCC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FCC0);
  }
  return result;
}

unint64_t sub_251BE4AD0()
{
  unint64_t result = qword_269B9FCC8;
  if (!qword_269B9FCC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FCC8);
  }
  return result;
}

unint64_t sub_251BE4B24()
{
  unint64_t result = qword_269B9FCD0;
  if (!qword_269B9FCD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FCD0);
  }
  return result;
}

unint64_t sub_251BE4B78()
{
  unint64_t result = qword_269B9FD18;
  if (!qword_269B9FD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FD18);
  }
  return result;
}

uint64_t sub_251BE4BCC(uint64_t result)
{
  unsigned int v1 = *(_DWORD *)(result + 248) & 0x1FFFFFF | 0xC0000000;
  *(void *)(result + 8) &= 0xFFFFFFFFFF1FFFFFLL;
  *(_DWORD *)(result + 248) = v1;
  return result;
}

unint64_t sub_251BE4BEC()
{
  unint64_t result = qword_269B9FD20;
  if (!qword_269B9FD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FD20);
  }
  return result;
}

uint64_t sub_251BE4C40(uint64_t result)
{
  unsigned int v1 = *(_DWORD *)(result + 248) & 0x1FFFFFF | 0xA0000000;
  *(void *)(result + 8) &= 0xFFFFFFFFFF1FFFFFLL;
  *(_DWORD *)(result + 248) = v1;
  return result;
}

unint64_t sub_251BE4C60()
{
  unint64_t result = qword_269B9FD28;
  if (!qword_269B9FD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FD28);
  }
  return result;
}

uint64_t sub_251BE4CB4(uint64_t result)
{
  unsigned int v1 = *(_DWORD *)(result + 248) & 0x1FFFFFF | 0x80000000;
  *(void *)(result + 8) &= 0xFFFFFFFFFF1FFFFFLL;
  *(_DWORD *)(result + 248) = v1;
  return result;
}

unint64_t sub_251BE4CD4()
{
  unint64_t result = qword_269B9FD30;
  if (!qword_269B9FD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FD30);
  }
  return result;
}

unint64_t sub_251BE4D28()
{
  unint64_t result = qword_269B9FD38;
  if (!qword_269B9FD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FD38);
  }
  return result;
}

uint64_t sub_251BE4D7C(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 248) & 0x1FFFFFF | 0x40000000;
  *(void *)(result + 8) &= 0xFFFFFFFFFF1FFFFFLL;
  *(_DWORD *)(result + 248) = v1;
  return result;
}

unint64_t sub_251BE4D9C()
{
  unint64_t result = qword_269B9FD40;
  if (!qword_269B9FD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FD40);
  }
  return result;
}

uint64_t sub_251BE4DF0(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 248) & 0x1FFFFFF | 0x20000000;
  *(void *)(result + 8) &= 0xFFFFFFFFFF1FFFFFLL;
  *(_DWORD *)(result + 248) = v1;
  return result;
}

unint64_t sub_251BE4E10()
{
  unint64_t result = qword_269B9FD48;
  if (!qword_269B9FD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FD48);
  }
  return result;
}

uint64_t sub_251BE4E64(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 248) & 0x1FFFFFF;
  *(void *)(result + 8) &= 0xFFFFFFFFFF1FFFFFLL;
  *(_DWORD *)(result + 248) = v1;
  return result;
}

unint64_t sub_251BE4E84()
{
  unint64_t result = qword_269B9FD50;
  if (!qword_269B9FD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FD50);
  }
  return result;
}

void destroy for StaticCluster(uint64_t a1)
{
  long long v1 = *(_OWORD *)(a1 + 208);
  sub_251A4DC54(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    v1,
    *((uint64_t *)&v1 + 1),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    *(void *)(a1 + 240),
    *(_DWORD *)(a1 + 248));
}

uint64_t initializeWithCopy for StaticCluster(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 56);
  uint64_t v13 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 80);
  uint64_t v15 = *(void *)(a2 + 88);
  uint64_t v16 = *(void *)(a2 + 96);
  uint64_t v17 = *(void *)(a2 + 104);
  uint64_t v18 = *(void *)(a2 + 112);
  uint64_t v19 = *(void *)(a2 + 120);
  uint64_t v20 = *(void *)(a2 + 128);
  uint64_t v21 = *(void *)(a2 + 136);
  uint64_t v22 = *(void *)(a2 + 144);
  uint64_t v23 = *(void *)(a2 + 152);
  uint64_t v24 = *(void *)(a2 + 160);
  uint64_t v25 = *(void *)(a2 + 168);
  uint64_t v26 = *(void *)(a2 + 176);
  uint64_t v27 = *(void *)(a2 + 184);
  uint64_t v28 = *(void *)(a2 + 192);
  uint64_t v29 = *(void *)(a2 + 200);
  uint64_t v30 = *(void *)(a2 + 208);
  uint64_t v31 = *(void *)(a2 + 216);
  uint64_t v32 = *(void *)(a2 + 224);
  uint64_t v33 = *(void *)(a2 + 232);
  uint64_t v34 = *(void *)(a2 + 240);
  unsigned int v35 = *(_DWORD *)(a2 + 248);
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v9 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)a2;
  uint64_t v11 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 16);
  sub_251A1AA24(*(void *)a2, v9, v10, v11, v3, v4, v5, v6, v7, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35);
  *(void *)a1 = v8;
  *(void *)(a1 + 8) = v9;
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v11;
  *(void *)(a1 + 32) = v3;
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v15;
  *(void *)(a1 + 96) = v16;
  *(void *)(a1 + 104) = v17;
  *(void *)(a1 + 112) = v18;
  *(void *)(a1 + 120) = v19;
  *(void *)(a1 + 128) = v20;
  *(void *)(a1 + 136) = v21;
  *(void *)(a1 + 144) = v22;
  *(void *)(a1 + 152) = v23;
  *(void *)(a1 + 160) = v24;
  *(void *)(a1 + 168) = v25;
  *(void *)(a1 + 176) = v26;
  *(void *)(a1 + 184) = v27;
  *(void *)(a1 + 192) = v28;
  *(void *)(a1 + 200) = v29;
  *(void *)(a1 + 208) = v30;
  *(void *)(a1 + 216) = v31;
  *(void *)(a1 + 224) = v32;
  *(void *)(a1 + 232) = v33;
  *(void *)(a1 + 240) = v34;
  *(_DWORD *)(a1 + 248) = v35;
  return a1;
}

uint64_t assignWithCopy for StaticCluster(uint64_t a1, uint64_t a2)
{
  uint64_t v55 = *(void *)a2;
  uint64_t v56 = *(void *)(a2 + 8);
  uint64_t v53 = *(void *)(a2 + 24);
  uint64_t v54 = *(void *)(a2 + 16);
  uint64_t v34 = *(void *)(a2 + 72);
  uint64_t v35 = *(void *)(a2 + 80);
  uint64_t v36 = *(void *)(a2 + 88);
  uint64_t v37 = *(void *)(a2 + 96);
  uint64_t v38 = *(void *)(a2 + 104);
  uint64_t v39 = *(void *)(a2 + 112);
  uint64_t v40 = *(void *)(a2 + 120);
  uint64_t v41 = *(void *)(a2 + 128);
  uint64_t v3 = *(void *)(a2 + 144);
  uint64_t v4 = *(void *)(a2 + 152);
  uint64_t v5 = *(void *)(a2 + 160);
  uint64_t v6 = *(void *)(a2 + 168);
  uint64_t v42 = *(void *)(a2 + 136);
  uint64_t v43 = *(void *)(a2 + 176);
  uint64_t v44 = *(void *)(a2 + 184);
  uint64_t v45 = *(void *)(a2 + 192);
  uint64_t v46 = *(void *)(a2 + 200);
  uint64_t v47 = *(void *)(a2 + 208);
  uint64_t v48 = *(void *)(a2 + 216);
  uint64_t v49 = *(void *)(a2 + 224);
  uint64_t v50 = *(void *)(a2 + 232);
  uint64_t v51 = *(void *)(a2 + 240);
  unsigned int v52 = *(_DWORD *)(a2 + 248);
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  sub_251A1AA24(*(void *)a2, v56, v54, v53, v8, v9, v10, v11, v7, v34, v35, v36, v37, v38, v39, v40, v41, v42, v3,
    v4,
    v5,
    v6,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  *(void *)a1 = v55;
  *(void *)(a1 + 8) = v56;
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v54;
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  *(void *)(a1 + 24) = v53;
  *(void *)(a1 + 32) = v8;
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v34;
  *(void *)(a1 + 80) = v35;
  *(void *)(a1 + 88) = v36;
  long long v22 = *(_OWORD *)(a1 + 96);
  long long v23 = *(_OWORD *)(a1 + 112);
  *(void *)(a1 + 96) = v37;
  *(void *)(a1 + 104) = v38;
  *(void *)(a1 + 112) = v39;
  *(void *)(a1 + 120) = v40;
  long long v24 = *(_OWORD *)(a1 + 128);
  long long v25 = *(_OWORD *)(a1 + 144);
  *(void *)(a1 + 128) = v41;
  *(void *)(a1 + 136) = v42;
  *(void *)(a1 + 144) = v3;
  long long v26 = *(_OWORD *)(a1 + 160);
  long long v27 = *(_OWORD *)(a1 + 176);
  *(void *)(a1 + 152) = v4;
  *(void *)(a1 + 160) = v5;
  *(void *)(a1 + 168) = v6;
  *(void *)(a1 + 176) = v43;
  *(void *)(a1 + 184) = v44;
  long long v28 = *(_OWORD *)(a1 + 192);
  long long v29 = *(_OWORD *)(a1 + 208);
  *(void *)(a1 + 192) = v45;
  *(void *)(a1 + 200) = v46;
  *(void *)(a1 + 208) = v47;
  *(void *)(a1 + 216) = v48;
  long long v30 = *(_OWORD *)(a1 + 224);
  *(void *)(a1 + 224) = v49;
  *(void *)(a1 + 232) = v50;
  uint64_t v31 = *(void *)(a1 + 240);
  *(void *)(a1 + 240) = v51;
  unsigned int v32 = *(_DWORD *)(a1 + 248);
  *(_DWORD *)(a1 + 248) = v52;
  sub_251A4DC54(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v29,
    *((uint64_t *)&v29 + 1),
    v30,
    *((uint64_t *)&v30 + 1),
    v31,
    v32);
  return a1;
}

__n128 __swift_memcpy252_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  long long v8 = a2[8];
  long long v9 = a2[9];
  long long v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  __n128 result = (__n128)a2[12];
  long long v12 = a2[13];
  long long v13 = a2[14];
  *(_OWORD *)(a1 + 236) = *(long long *)((char *)a2 + 236);
  *(_OWORD *)(a1 + 208) = v12;
  *(_OWORD *)(a1 + 224) = v13;
  *(__n128 *)(a1 + 192) = result;
  return result;
}

uint64_t assignWithTake for StaticCluster(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 240);
  int v5 = *(_DWORD *)(a2 + 248);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 48);
  uint64_t v13 = *(void *)(a1 + 56);
  long long v14 = *(_OWORD *)(a1 + 64);
  long long v15 = *(_OWORD *)(a1 + 80);
  long long v16 = *(_OWORD *)(a1 + 96);
  long long v17 = *(_OWORD *)(a1 + 112);
  long long v18 = *(_OWORD *)(a1 + 128);
  long long v19 = *(_OWORD *)(a1 + 144);
  long long v20 = *(_OWORD *)(a1 + 160);
  long long v21 = *(_OWORD *)(a1 + 176);
  long long v22 = *(_OWORD *)(a1 + 192);
  long long v23 = *(_OWORD *)(a1 + 208);
  long long v24 = *(_OWORD *)(a1 + 224);
  uint64_t v25 = *(void *)(a1 + 240);
  unsigned int v26 = *(_DWORD *)(a1 + 248);
  long long v27 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v27;
  long long v28 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v28;
  long long v29 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v29;
  long long v30 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v30;
  long long v31 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v31;
  long long v32 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v32;
  long long v33 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v33;
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(void *)(a1 + 240) = v4;
  *(_DWORD *)(a1 + 248) = v5;
  sub_251A4DC54(v6, v7, v8, v9, v10, v11, v12, v13, v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v18, *((uint64_t *)&v18 + 1), v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v25,
    v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticCluster(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3FA && *(unsigned char *)(a1 + 252)) {
    return (*(_DWORD *)a1 + 1018);
  }
  HIDWORD(v3) = (*(_DWORD *)(a1 + 248) >> 22) & 0x78 | (*(_DWORD *)(a1 + 8) >> 21) & 7;
  LODWORD(v3) = *(_DWORD *)(a1 + 248);
  unsigned int v4 = (v3 >> 29) ^ 0x3FF;
  if (v4 >= 0x3F9) {
    unsigned int v4 = -1;
  }
  return v4 + 1;
}

uint64_t storeEnumTagSinglePayload for StaticCluster(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3F9)
  {
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 248) = 0;
    *(void *)__n128 result = a2 - 1018;
    if (a3 >= 0x3FA) {
      *(unsigned char *)(result + 252) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3FA) {
      *(unsigned char *)(result + 252) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = (-262144 * a2) & 0xE00000;
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)(result + 48) = 0u;
      *(_OWORD *)(result + 64) = 0u;
      *(_OWORD *)(result + 80) = 0u;
      *(_OWORD *)(result + 96) = 0u;
      *(_OWORD *)(result + 112) = 0u;
      *(_OWORD *)(result + 128) = 0u;
      *(_OWORD *)(result + 144) = 0u;
      *(_OWORD *)(result + 160) = 0u;
      *(_OWORD *)(result + 176) = 0u;
      *(_OWORD *)(result + 192) = 0u;
      *(_OWORD *)(result + 208) = 0u;
      *(_OWORD *)(result + 224) = 0u;
      *(void *)(result + 240) = 0;
      *(_DWORD *)(result + 248) = ((-524288 * a2) & 0x1E000000) - (a2 << 29);
    }
  }
  return result;
}

uint64_t sub_251BE55B4(uint64_t result, int a2)
{
  int v2 = *(_DWORD *)(result + 248) & 0x1FFFFFF | (a2 << 29);
  *(void *)(result + 8) &= 0xFFFFFFFFFF1FFFFFLL;
  *(_DWORD *)(result + 248) = v2;
  return result;
}

ValueMetadata *type metadata accessor for StaticCluster()
{
  return &type metadata for StaticCluster;
}

unsigned char *storeEnumTagSinglePayload for StaticCluster.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251BE56B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticCluster.CodingKeys()
{
  return &type metadata for StaticCluster.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticCluster.BasicInfoCodingKeys()
{
  return &type metadata for StaticCluster.BasicInfoCodingKeys;
}

ValueMetadata *type metadata accessor for StaticCluster.OnOffCodingKeys()
{
  return &type metadata for StaticCluster.OnOffCodingKeys;
}

ValueMetadata *type metadata accessor for StaticCluster.RvcStateGroupCodingKeys()
{
  return &type metadata for StaticCluster.RvcStateGroupCodingKeys;
}

ValueMetadata *type metadata accessor for StaticCluster.DoorLockCodingKeys()
{
  return &type metadata for StaticCluster.DoorLockCodingKeys;
}

ValueMetadata *type metadata accessor for StaticCluster.LevelControlCodingKeys()
{
  return &type metadata for StaticCluster.LevelControlCodingKeys;
}

ValueMetadata *type metadata accessor for StaticCluster.ColorControlCodingKeys()
{
  return &type metadata for StaticCluster.ColorControlCodingKeys;
}

unsigned char *_s13HomeDataModel13StaticClusterO19BasicInfoCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x251BE57E8);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticCluster.PowerSourceCodingKeys()
{
  return &type metadata for StaticCluster.PowerSourceCodingKeys;
}

unint64_t sub_251BE5824()
{
  unint64_t result = qword_269B9FD58;
  if (!qword_269B9FD58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FD58);
  }
  return result;
}

unint64_t sub_251BE587C()
{
  unint64_t result = qword_269B9FD60;
  if (!qword_269B9FD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FD60);
  }
  return result;
}

unint64_t sub_251BE58D4()
{
  unint64_t result = qword_269B9FD68;
  if (!qword_269B9FD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FD68);
  }
  return result;
}

unint64_t sub_251BE592C()
{
  unint64_t result = qword_269B9FD70;
  if (!qword_269B9FD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FD70);
  }
  return result;
}

unint64_t sub_251BE5984()
{
  unint64_t result = qword_269B9FD78;
  if (!qword_269B9FD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FD78);
  }
  return result;
}

unint64_t sub_251BE59DC()
{
  unint64_t result = qword_269B9FD80;
  if (!qword_269B9FD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FD80);
  }
  return result;
}

unint64_t sub_251BE5A34()
{
  unint64_t result = qword_269B9FD88;
  if (!qword_269B9FD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FD88);
  }
  return result;
}

unint64_t sub_251BE5A8C()
{
  unint64_t result = qword_269B9FD90;
  if (!qword_269B9FD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FD90);
  }
  return result;
}

unint64_t sub_251BE5AE4()
{
  unint64_t result = qword_269B9FD98;
  if (!qword_269B9FD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FD98);
  }
  return result;
}

unint64_t sub_251BE5B3C()
{
  unint64_t result = qword_269B9FDA0;
  if (!qword_269B9FDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FDA0);
  }
  return result;
}

unint64_t sub_251BE5B94()
{
  unint64_t result = qword_269B9FDA8;
  if (!qword_269B9FDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FDA8);
  }
  return result;
}

unint64_t sub_251BE5BEC()
{
  unint64_t result = qword_269B9FDB0;
  if (!qword_269B9FDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FDB0);
  }
  return result;
}

unint64_t sub_251BE5C44()
{
  unint64_t result = qword_269B9FDB8;
  if (!qword_269B9FDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FDB8);
  }
  return result;
}

unint64_t sub_251BE5C9C()
{
  unint64_t result = qword_269B9FDC0;
  if (!qword_269B9FDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FDC0);
  }
  return result;
}

unint64_t sub_251BE5CF4()
{
  unint64_t result = qword_269B9FDC8;
  if (!qword_269B9FDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FDC8);
  }
  return result;
}

unint64_t sub_251BE5D4C()
{
  unint64_t result = qword_269B9FDD0;
  if (!qword_269B9FDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FDD0);
  }
  return result;
}

unint64_t sub_251BE5DA4()
{
  unint64_t result = qword_269B9FDD8;
  if (!qword_269B9FDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FDD8);
  }
  return result;
}

unint64_t sub_251BE5DFC()
{
  unint64_t result = qword_269B9FDE0;
  if (!qword_269B9FDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FDE0);
  }
  return result;
}

unint64_t sub_251BE5E54()
{
  unint64_t result = qword_269B9FDE8;
  if (!qword_269B9FDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FDE8);
  }
  return result;
}

unint64_t sub_251BE5EAC()
{
  unint64_t result = qword_269B9FDF0;
  if (!qword_269B9FDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FDF0);
  }
  return result;
}

unint64_t sub_251BE5F04()
{
  unint64_t result = qword_269B9FDF8;
  if (!qword_269B9FDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FDF8);
  }
  return result;
}

unint64_t sub_251BE5F5C()
{
  unint64_t result = qword_269B9FE00;
  if (!qword_269B9FE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FE00);
  }
  return result;
}

unint64_t sub_251BE5FB4()
{
  unint64_t result = qword_269B9FE08;
  if (!qword_269B9FE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FE08);
  }
  return result;
}

unint64_t sub_251BE600C()
{
  unint64_t result = qword_269B9FE10;
  if (!qword_269B9FE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FE10);
  }
  return result;
}

uint64_t sub_251BE6060(int a1, char *a2)
{
  switch(*a2)
  {
    case 0:
      switch(a1)
      {
        case 65528:
          goto LABEL_7;
        case 65529:
          goto LABEL_9;
        case 65530:
          goto LABEL_14;
        case 65531:
          goto LABEL_10;
        case 65532:
          goto LABEL_11;
        case 65533:
          goto LABEL_12;
        default:
          uint64_t v5 = 0xD000000000000010;
          switch(a1)
          {
            case 0:
              return v5;
            case 1:
              uint64_t v9 = 0x726576726573;
              goto LABEL_20;
            case 2:
              uint64_t v9 = 0x746E65696C63;
LABEL_20:
              uint64_t v5 = v9 & 0xFFFFFFFFFFFFLL | 0x694C000000000000;
              break;
            case 3:
              uint64_t v5 = 0x73694C7374726170;
              break;
            default:
              goto LABEL_14;
          }
          break;
      }
      return v5;
    case 1:
      unint64_t v3 = sub_251EE6BAC(a1);
      goto LABEL_5;
    case 2:
    case 10:
    case 11:
    case 21:
      goto LABEL_6;
    case 23:
    case 24:
    case 25:
      char v10 = *a2;
      unint64_t v3 = _s13HomeDataModel21StaticRVCClusterGroupV11description12forAttribute0H0SSSgSo18MTRAttributeIDTypeV_AA11ClusterKindOtFZ_0(a1, &v10);
LABEL_5:
      uint64_t v5 = v3;
      if (!v4)
      {
LABEL_6:
        switch(a1)
        {
          case 65528:
            goto LABEL_7;
          case 65529:
            goto LABEL_9;
          case 65531:
            goto LABEL_10;
          case 65532:
            goto LABEL_11;
          case 65533:
            goto LABEL_12;
          default:
            goto LABEL_14;
        }
      }
      break;
    default:
      switch(a1)
      {
        case 65528:
LABEL_7:
          uint64_t v5 = 0xD000000000000016;
          break;
        case 65529:
LABEL_9:
          uint64_t v5 = 0xD000000000000015;
          break;
        case 65531:
LABEL_10:
          uint64_t v5 = 0x7475626972747461;
          break;
        case 65532:
LABEL_11:
          uint64_t v5 = 0x4D65727574616566;
          break;
        case 65533:
LABEL_12:
          uint64_t v5 = 0xD000000000000011;
          break;
        default:
LABEL_14:
          id v7 = (id)MTRAttributeNameForID();
          if (v7)
          {
            uint64_t v8 = v7;
            uint64_t v5 = sub_251F356F0();
          }
          else
          {
            uint64_t v5 = 0;
          }
          break;
      }
      break;
  }
  return v5;
}

uint64_t sub_251BE63B8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x666E496369736162 && a2 == 0xE90000000000006FLL;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x66664F6E6FLL && a2 == 0xE500000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574617453637672 && a2 == 0xED000070756F7247 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6B636F4C726F6F64 && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F436C6576656CLL && a2 == 0xEC0000006C6F7274 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E6F43726F6C6F63 && a2 == 0xEC0000006C6F7274 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x756F537265776F70 && a2 == 0xEB00000000656372)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_251BE670C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 264);
  uint64_t v24 = *(void *)(a1 + 256);
  uint64_t v3 = *(void *)(a1 + 272);
  uint64_t v4 = *(void *)(a1 + 280);
  uint64_t v5 = *(void *)(a1 + 288);
  uint64_t v6 = *(void *)(a1 + 296);
  uint64_t v7 = *(void *)(a1 + 304);
  uint64_t v8 = *(void *)(a1 + 312);
  long long v22 = *(_OWORD *)(a1 + 336);
  long long v23 = *(_OWORD *)(a1 + 320);
  long long v20 = *(_OWORD *)(a1 + 368);
  long long v21 = *(_OWORD *)(a1 + 352);
  long long v18 = *(_OWORD *)(a1 + 400);
  long long v19 = *(_OWORD *)(a1 + 384);
  long long v16 = *(_OWORD *)(a1 + 432);
  long long v17 = *(_OWORD *)(a1 + 416);
  long long v14 = *(_OWORD *)(a1 + 464);
  long long v15 = *(_OWORD *)(a1 + 448);
  long long v13 = *(_OWORD *)(a1 + 480);
  uint64_t v9 = *(void *)(a1 + 496);
  unsigned int v10 = *(_DWORD *)(a1 + 504);
  long long v12 = *(_OWORD *)(a1 + 208);
  sub_251A4DC54(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    v12,
    *((uint64_t *)&v12 + 1),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    *(void *)(a1 + 240),
    *(_DWORD *)(a1 + 248));
  sub_251A4DC54(v24, v2, v3, v4, v5, v6, v7, v8, v23, *((uint64_t *)&v23 + 1), v22, *((uint64_t *)&v22 + 1), v21, *((uint64_t *)&v21 + 1), v20, *((uint64_t *)&v20 + 1), v19, *((uint64_t *)&v19 + 1), v18,
    *((uint64_t *)&v18 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v9,
    v10);
  return a1;
}

uint64_t sub_251BE6894(uint64_t a1)
{
  return a1;
}

double sub_251BE6970(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)a1 = xmmword_251F456A0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(void *)(a1 + 240) = 0;
  *(_DWORD *)(a1 + 248) = -33554432;
  return result;
}

double ScrubberPositionData.offset.getter()
{
  return *(double *)v0;
}

double ScrubberPositionData.clipOffset.getter()
{
  return *(double *)(v0 + 8);
}

double ScrubberPositionData.timeElapsedInClip.getter()
{
  return *(double *)(v0 + 16);
}

double ScrubberPositionData.clipWidth.getter()
{
  return *(double *)(v0 + 24);
}

uint64_t ScrubberPositionData.element.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ScrubberPositionData();
  return sub_251A1B128(v1 + *(int *)(v3 + 32), a1, &qword_269B9C908);
}

uint64_t type metadata accessor for ScrubberPositionData()
{
  uint64_t result = qword_269B9FE20;
  if (!qword_269B9FE20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ScrubberPositionData.time.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ScrubberPositionData();
  return sub_251A1B128(v1 + *(int *)(v3 + 36), a1, &qword_26B21EC20);
}

uint64_t ScrubberPositionData.init(offset:clipOffset:timeElapsedInClip:clipWidth:element:time:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double *a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>)
{
  *a3 = a4;
  a3[1] = a5;
  a3[2] = a6;
  a3[3] = a7;
  uint64_t v10 = type metadata accessor for ScrubberPositionData();
  sub_251A4ECF0(a1, (uint64_t)a3 + *(int *)(v10 + 32), &qword_269B9C908);
  return sub_251A4ECF0(a2, (uint64_t)a3 + *(int *)(v10 + 36), &qword_26B21EC20);
}

__n128 ScrubberPositionData.addingOffset(_:)@<Q0>(uint64_t a1@<X8>, double a2@<D0>)
{
  double v4 = *(double *)v2 + a2;
  __n128 v8 = *(__n128 *)(v2 + 8);
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = type metadata accessor for ScrubberPositionData();
  sub_251A1B128(v2 + *(int *)(v6 + 32), a1 + *(int *)(v6 + 32), &qword_269B9C908);
  sub_251A1B128(v2 + *(int *)(v6 + 36), a1 + *(int *)(v6 + 36), &qword_26B21EC20);
  *(double *)a1 = v4;
  __n128 result = v8;
  *(__n128 *)(a1 + 8) = v8;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t ScrubberPositionData.updating(offset:clipOffset:)@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t v8 = *(void *)(v3 + 24);
  uint64_t v9 = type metadata accessor for ScrubberPositionData();
  sub_251A1B128(v3 + *(int *)(v9 + 32), a1 + *(int *)(v9 + 32), &qword_269B9C908);
  uint64_t result = sub_251A1B128(v3 + *(int *)(v9 + 36), a1 + *(int *)(v9 + 36), &qword_26B21EC20);
  *(double *)a1 = a2;
  *(double *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  return result;
}

__n128 ScrubberPositionData.updating(element:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  __n128 v9 = *v2;
  unint64_t v5 = v2[1].n128_u64[0];
  unint64_t v6 = v2[1].n128_u64[1];
  uint64_t v7 = type metadata accessor for ScrubberPositionData();
  sub_251A1B128(a1, (uint64_t)a2 + *(int *)(v7 + 32), &qword_269B9C908);
  sub_251A1B128((uint64_t)v2 + *(int *)(v7 + 36), (uint64_t)a2 + *(int *)(v7 + 36), &qword_26B21EC20);
  __n128 result = v9;
  *a2 = v9;
  a2[1].n128_u64[0] = v5;
  a2[1].n128_u64[1] = v6;
  return result;
}

BOOL _s13HomeDataModel016ScrubberPositionB0V2eeoiySbAC_ACtFZ_0(double *a1, double *a2)
{
  uint64_t v4 = type metadata accessor for ScrubberElement(0);
  unint64_t v5 = *(uint64_t **)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FE30);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C908);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  long long v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  long long v17 = (char *)&v50 - v16;
  MEMORY[0x270FA5388](v15);
  long long v19 = (char *)&v50 - v18;
  if (*a1 != *a2 || a1[1] != a2[1] || a1[2] != a2[2] || a1[3] != a2[3]) {
    return 0;
  }
  uint64_t v20 = type metadata accessor for ScrubberPositionData();
  unsigned int v52 = v5;
  uint64_t v21 = v20;
  sub_251A1B128((uint64_t)a1 + *(int *)(v20 + 32), (uint64_t)v19, &qword_269B9C908);
  uint64_t v51 = (uint64_t *)v21;
  sub_251A1B128((uint64_t)a2 + *(int *)(v21 + 32), (uint64_t)v17, &qword_269B9C908);
  uint64_t v22 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_251A1B128((uint64_t)v19, (uint64_t)v10, &qword_269B9C908);
  uint64_t v53 = (uint64_t *)v22;
  long long v23 = v52;
  sub_251A1B128((uint64_t)v17, v22, &qword_269B9C908);
  uint64_t v24 = (unsigned int (*)(uint64_t *, uint64_t, uint64_t))v23[6];
  if (v24((uint64_t *)v10, 1, v4) != 1)
  {
    sub_251A1B128((uint64_t)v10, (uint64_t)v14, &qword_269B9C908);
    if (v24(v53, 1, v4) != 1)
    {
      sub_251BEB5E4((uint64_t)v53, (uint64_t)v7);
      BOOL v25 = _s13HomeDataModel15ScrubberElementO2eeoiySbAC_ACtFZ_0((uint64_t)v14, (uint64_t)v7);
      sub_251BE99F4((uint64_t)v7);
      sub_251A1B064((uint64_t)v17, &qword_269B9C908);
      sub_251A1B064((uint64_t)v19, &qword_269B9C908);
      sub_251BE99F4((uint64_t)v14);
      sub_251A1B064((uint64_t)v10, &qword_269B9C908);
      if (!v25) {
        return 0;
      }
      goto LABEL_12;
    }
    sub_251A1B064((uint64_t)v17, &qword_269B9C908);
    sub_251A1B064((uint64_t)v19, &qword_269B9C908);
    sub_251BE99F4((uint64_t)v14);
LABEL_10:
    sub_251A1B064((uint64_t)v10, &qword_269B9FE30);
    return 0;
  }
  sub_251A1B064((uint64_t)v17, &qword_269B9C908);
  sub_251A1B064((uint64_t)v19, &qword_269B9C908);
  if (v24(v53, 1, v4) != 1) {
    goto LABEL_10;
  }
  sub_251A1B064((uint64_t)v10, &qword_269B9C908);
LABEL_12:
  unsigned int v26 = v51;
  uint64_t v27 = (uint64_t)a1 + *((int *)v51 + 9);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  uint64_t v53 = &v50;
  uint64_t v29 = *(void *)(*(void *)(v28 - 8) + 64);
  MEMORY[0x270FA5388](v28 - 8);
  unint64_t v30 = (v29 + 15) & 0xFFFFFFFFFFFFFFF0;
  long long v31 = (char *)&v50 - v30;
  sub_251A1B128(v27, (uint64_t)&v50 - v30, &qword_26B21EC20);
  unsigned int v52 = &v50;
  uint64_t v32 = MEMORY[0x270FA5388]((char *)a2 + *((int *)v26 + 9));
  long long v33 = (char *)&v50 - v30;
  sub_251A1B128(v32, (uint64_t)&v50 - v30, &qword_26B21EC20);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EFF8);
  uint64_t v51 = &v50;
  uint64_t v35 = MEMORY[0x270FA5388](v34 - 8);
  uint64_t v37 = (char *)&v50 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = (uint64_t)&v37[*(int *)(v35 + 56)];
  sub_251A1B128((uint64_t)&v50 - v30, (uint64_t)v37, &qword_26B21EC20);
  sub_251A1B128((uint64_t)&v50 - v30, v38, &qword_26B21EC20);
  uint64_t v39 = sub_251F34D20();
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48);
  uint64_t v42 = v41(v37, 1, v39);
  if (v42 == 1)
  {
    sub_251A1B064((uint64_t)&v50 - v30, &qword_26B21EC20);
    sub_251A1B064((uint64_t)&v50 - v30, &qword_26B21EC20);
    if (v41((char *)v38, 1, v39) == 1)
    {
      sub_251A1B064((uint64_t)v37, &qword_26B21EC20);
      return 1;
    }
    goto LABEL_17;
  }
  uint64_t v50 = (uint64_t)&v50;
  MEMORY[0x270FA5388](v42);
  uint64_t v44 = (char *)&v50 - v30;
  sub_251A1B128((uint64_t)v37, (uint64_t)&v50 - v30, &qword_26B21EC20);
  uint64_t v45 = v41((char *)v38, 1, v39);
  if (v45 == 1)
  {
    sub_251A1B064((uint64_t)&v50 - v30, &qword_26B21EC20);
    sub_251A1B064((uint64_t)&v50 - v30, &qword_26B21EC20);
    (*(void (**)(char *, uint64_t))(v40 + 8))((char *)&v50 - v30, v39);
LABEL_17:
    sub_251A1B064((uint64_t)v37, &qword_26B21EFF8);
    return 0;
  }
  MEMORY[0x270FA5388](v45);
  uint64_t v47 = (char *)&v50 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v47, v38, v39);
  sub_251BEB598();
  char v48 = sub_251F35650();
  uint64_t v49 = *(void (**)(char *, uint64_t))(v40 + 8);
  v49(v47, v39);
  sub_251A1B064((uint64_t)v33, &qword_26B21EC20);
  sub_251A1B064((uint64_t)v31, &qword_26B21EC20);
  v49(v44, v39);
  sub_251A1B064((uint64_t)v37, &qword_26B21EC20);
  return (v48 & 1) != 0;
}

void *initializeBufferWithCopyOfBuffer for ScrubberPositionData(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    long long v7 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 32);
    char v80 = (char *)a1 + v8;
    uint64_t v9 = (char *)a2 + v8;
    uint64_t v10 = type metadata accessor for ScrubberElement(0);
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C908);
      memcpy(v80, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v76 = v6;
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v15 = sub_251F34DA0();
      uint64_t v16 = *(void *)(v15 - 8);
      long long v17 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
      v17(v80, v9, v15);
      uint64_t v78 = v11;
      uint64_t v79 = v10;
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v18 = (int *)type metadata accessor for ReachabilityEvent();
        v80[v18[5]] = v9[v18[5]];
        uint64_t v19 = v18[6];
        uint64_t v20 = &v80[v19];
        uint64_t v21 = &v9[v19];
        uint64_t v22 = sub_251F34D20();
        long long v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
        v23(v20, v21, v22);
        v23(&v80[v18[7]], &v9[v18[7]], v22);
        uint64_t v10 = v79;
        uint64_t v6 = v76;
      }
      else
      {
        char v71 = v17;
        uint64_t v73 = v16;
        uint64_t v66 = v15;
        uint64_t v24 = type metadata accessor for CameraClip();
        uint64_t v25 = *(int *)(v24 + 20);
        unsigned int v26 = &v80[v25];
        uint64_t v27 = &v9[v25];
        uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        uint64_t v65 = *(void *)(v28 - 8);
        uint64_t v68 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48);
        uint64_t v72 = v28;
        if (v68(v27, 1, v28))
        {
          uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
          memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
          uint64_t v6 = v76;
        }
        else
        {
          uint64_t v6 = v76;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v27, 1, v66))
          {
            unint64_t v30 = v26;
            char v74 = v26;
            uint64_t v31 = v65;
            memcpy(v30, v27, *(void *)(v65 + 64));
            uint64_t v32 = v74;
          }
          else
          {
            v71(v26, v27, v66);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v26, 0, 1, v66);
            uint64_t v32 = v26;
            uint64_t v31 = v65;
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v32, 0, 1, v28);
        }
        uint64_t v33 = *(int *)(v24 + 24);
        __int16 v77 = &v80[v33];
        uint64_t v34 = &v9[v33];
        uint64_t v35 = sub_251F34D20();
        uint64_t v36 = (int *)v24;
        uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
        v37(v77, v34, v35);
        v37(&v80[v36[7]], &v9[v36[7]], v35);
        v80[v36[8]] = v9[v36[8]];
        *(void *)&v80[v36[9]] = *(void *)&v9[v36[9]];
        *(void *)&v80[v36[10]] = *(void *)&v9[v36[10]];
        uint64_t v69 = v36;
        uint64_t v38 = v36[11];
        __dst = &v80[v38];
        uint64_t v39 = &v9[v38];
        uint64_t v40 = sub_251F34B70();
        uint64_t v41 = *(void *)(v40 - 8);
        uint64_t v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
        swift_bridgeObjectRetain();
        __int16 v75 = v42;
        uint64_t v64 = v41;
        uint64_t v70 = v40;
        if (v42(v39, 1, v40))
        {
          uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
          memcpy(__dst, v39, *(void *)(*(void *)(v43 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v41 + 16))(__dst, v39, v40);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(__dst, 0, 1, v40);
        }
        uint64_t v44 = v69[12];
        uint64_t v45 = &v80[v44];
        uint64_t v46 = &v9[v44];
        if (v68(&v9[v44], 1, v72))
        {
          uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
          memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
        }
        else
        {
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v46, 1, v66))
          {
            uint64_t v48 = v65;
            memcpy(v45, v46, *(void *)(v65 + 64));
          }
          else
          {
            v71(v45, v46, v66);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v45, 0, 1, v66);
            uint64_t v48 = v65;
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v72);
        }
        *(void *)&v80[v69[13]] = *(void *)&v9[v69[13]];
        uint64_t v49 = v69[14];
        uint64_t v50 = &v80[v49];
        uint64_t v51 = &v9[v49];
        if (v42(&v9[v49], 1, v70))
        {
          uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
          memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v50, v51, v70);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v50, 0, 1, v70);
        }
        uint64_t v53 = v69[15];
        uint64_t v54 = &v80[v53];
        uint64_t v55 = &v9[v53];
        uint64_t v11 = v78;
        if (v75(v55, 1, v70))
        {
          uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
          memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v54, v55, v70);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v54, 0, 1, v70);
        }
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v80, 0, 1, v10);
    }
    uint64_t v57 = *(int *)(v6 + 36);
    char v58 = (char *)v4 + v57;
    char v59 = (char *)a2 + v57;
    uint64_t v60 = sub_251F34D20();
    uint64_t v61 = *(void *)(v60 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
    {
      uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
      memcpy(v58, v59, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v58, v59, v60);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
    }
  }
  return v4;
}

uint64_t destroy for ScrubberPositionData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = type metadata accessor for ScrubberElement(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = sub_251F34DA0();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v9(v4, v7);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = type metadata accessor for ReachabilityEvent();
      uint64_t v11 = v4 + *(int *)(v10 + 24);
      uint64_t v12 = sub_251F34D20();
      uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
      v13(v11, v12);
      v13(v4 + *(int *)(v10 + 28), v12);
    }
    else
    {
      long long v14 = (int *)type metadata accessor for CameraClip();
      uint64_t v15 = v4 + v14[5];
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      uint64_t v32 = *(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
      uint64_t v33 = v16;
      if (!v32(v15, 1) && !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v15, 1, v7)) {
        v9(v15, v7);
      }
      unint64_t v30 = v9;
      uint64_t v31 = v8;
      uint64_t v17 = v4 + v14[6];
      uint64_t v18 = sub_251F34D20();
      uint64_t v19 = *(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);
      v19(v17, v18);
      v19(v4 + v14[7], v18);
      swift_bridgeObjectRelease();
      uint64_t v20 = v4 + v14[11];
      uint64_t v21 = sub_251F34B70();
      uint64_t v34 = *(void *)(v21 - 8);
      uint64_t v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
      if (!v22(v20, 1, v21)) {
        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v20, v21);
      }
      uint64_t v23 = v4 + v14[12];
      if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v32)(v23, 1, v33)
        && !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v23, 1, v7))
      {
        v30(v23, v7);
      }
      uint64_t v24 = v4 + v14[14];
      if (!v22(v24, 1, v21)) {
        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v24, v21);
      }
      uint64_t v25 = v4 + v14[15];
      if (!v22(v25, 1, v21)) {
        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v25, v21);
      }
    }
  }
  uint64_t v26 = a1 + *(int *)(a2 + 36);
  uint64_t v27 = sub_251F34D20();
  uint64_t v35 = *(void *)(v27 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v26, 1, v27);
  if (!result)
  {
    uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t))(v35 + 8);
    return v29(v26, v27);
  }
  return result;
}

_OWORD *initializeWithCopy for ScrubberPositionData(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for ScrubberElement(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C908);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v12 = sub_251F34DA0();
    uint64_t v13 = *(void *)(v12 - 8);
    long long v14 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    v14(v6, v7, v12);
    uint64_t v73 = v8;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = (int *)type metadata accessor for ReachabilityEvent();
      v6[v15[5]] = v7[v15[5]];
      uint64_t v16 = v15[6];
      uint64_t v17 = &v6[v16];
      uint64_t v18 = v9;
      uint64_t v19 = &v7[v16];
      uint64_t v20 = sub_251F34D20();
      uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
      uint64_t v22 = v19;
      uint64_t v23 = v18;
      v21(v17, v22, v20);
      uint64_t v24 = v73;
      v21(&v6[v15[7]], &v7[v15[7]], v20);
    }
    else
    {
      uint64_t v64 = v14;
      uint64_t v66 = v13;
      uint64_t v67 = v12;
      uint64_t v25 = (int *)type metadata accessor for CameraClip();
      uint64_t v26 = v25[5];
      uint64_t v27 = &v6[v26];
      uint64_t v28 = &v7[v26];
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      uint64_t v65 = *(void *)(v29 - 8);
      uint64_t v71 = v29;
      uint64_t v69 = *(unsigned int (**)(char *, uint64_t))(v65 + 48);
      uint64_t v70 = v9;
      if (v69(v28, 1))
      {
        uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
        memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v28, 1, v67))
        {
          uint64_t v31 = v65;
          memcpy(v27, v28, *(void *)(v65 + 64));
        }
        else
        {
          v14(v27, v28, v67);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v27, 0, 1, v67);
          uint64_t v31 = v65;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v27, 0, 1, v71);
      }
      uint64_t v32 = v25[6];
      uint64_t v33 = &v6[v32];
      uint64_t v34 = &v7[v32];
      uint64_t v35 = sub_251F34D20();
      uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
      v36(v33, v34, v35);
      v36(&v6[v25[7]], &v7[v25[7]], v35);
      v6[v25[8]] = v7[v25[8]];
      *(void *)&v6[v25[9]] = *(void *)&v7[v25[9]];
      *(void *)&v6[v25[10]] = *(void *)&v7[v25[10]];
      uint64_t v37 = v25[11];
      __dst = &v6[v37];
      uint64_t v38 = &v7[v37];
      uint64_t v39 = sub_251F34B70();
      uint64_t v40 = *(void *)(v39 - 8);
      uint64_t v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
      swift_bridgeObjectRetain();
      uint64_t v72 = v41;
      if (v41(v38, 1, v39))
      {
        uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
        memcpy(__dst, v38, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(__dst, v38, v39);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(__dst, 0, 1, v39);
      }
      uint64_t v43 = v39;
      uint64_t v44 = v25[12];
      uint64_t v45 = &v6[v44];
      uint64_t v46 = &v7[v44];
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v69)(&v7[v44], 1, v71))
      {
        uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
        memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v46, 1, v67))
        {
          uint64_t v48 = v65;
          memcpy(v45, v46, *(void *)(v65 + 64));
        }
        else
        {
          v64(v45, v46, v67);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v45, 0, 1, v67);
          uint64_t v48 = v65;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v71);
      }
      *(void *)&v6[v25[13]] = *(void *)&v7[v25[13]];
      uint64_t v49 = v25[14];
      uint64_t v50 = &v6[v49];
      uint64_t v51 = &v7[v49];
      if (v72(&v7[v49], 1, v43))
      {
        uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
        memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v50, v51, v43);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v50, 0, 1, v43);
      }
      uint64_t v53 = v25[15];
      uint64_t v54 = &v6[v53];
      uint64_t v55 = &v7[v53];
      uint64_t v23 = v70;
      if (v72(v55, 1, v43))
      {
        uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
        memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v54, v55, v43);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v54, 0, 1, v43);
      }
      uint64_t v24 = v73;
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v6, 0, 1, v24);
  }
  uint64_t v57 = *(int *)(a3 + 36);
  char v58 = (char *)a1 + v57;
  char v59 = (char *)a2 + v57;
  uint64_t v60 = sub_251F34D20();
  uint64_t v61 = *(void *)(v60 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
  {
    uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v58, v59, *(void *)(*(void *)(v62 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v58, v59, v60);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
  }
  return a1;
}

void *assignWithCopy for ScrubberPositionData(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ScrubberElement(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v135 = (uint64_t)v7;
  LODWORD(v7) = v11(v7, 1, v9);
  int v12 = v11(v8, 1, v9);
  if (v7)
  {
    if (v12)
    {
      size_t v13 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9C908) - 8) + 64);
      long long v14 = (void *)v135;
LABEL_6:
      memcpy(v14, v8, v13);
      goto LABEL_40;
    }
    uint64_t v131 = v3;
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v16 = sub_251F34DA0();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(void (**)(uint64_t, char *, uint64_t))(v17 + 16);
    v18(v135, v8, v16);
    uint64_t v127 = v10;
    uint64_t v130 = v9;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v19 = (int *)type metadata accessor for ReachabilityEvent();
      *(unsigned char *)(v135 + v19[5]) = v8[v19[5]];
      uint64_t v20 = v19[6];
      uint64_t v21 = v135 + v20;
      uint64_t v22 = &v8[v20];
      uint64_t v23 = v8;
      uint64_t v24 = sub_251F34D20();
      uint64_t v25 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 16);
      v25(v21, v22, v24);
      v25(v135 + v19[7], &v23[v19[7]], v24);
      uint64_t v27 = v127;
      uint64_t v26 = v130;
      uint64_t v3 = v131;
    }
    else
    {
      char v112 = (void (*)(void *, char *, uint64_t))v18;
      char v123 = (int *)type metadata accessor for CameraClip();
      uint64_t v37 = v123[5];
      uint64_t v38 = (void *)(v135 + v37);
      __int16 v134 = v8;
      uint64_t v39 = &v8[v37];
      uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      uint64_t v41 = *(void *)(v40 - 8);
      uint64_t v117 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
      uint64_t v114 = v41;
      uint64_t v119 = v40;
      uint64_t v121 = v17;
      if (v117(v39, 1, v40))
      {
        uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
        memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v39, 1, v16))
        {
          memcpy(v38, v39, *(void *)(v41 + 64));
        }
        else
        {
          v112(v38, v39, v16);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v38, 0, 1, v16);
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      uint64_t v52 = v123[6];
      uint64_t v53 = v135 + v52;
      uint64_t v54 = &v134[v52];
      uint64_t v55 = sub_251F34D20();
      uint64_t v56 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v55 - 8) + 16);
      v56(v53, v54, v55);
      v56(v135 + v123[7], &v134[v123[7]], v55);
      *(unsigned char *)(v135 + v123[8]) = v134[v123[8]];
      *(void *)(v135 + v123[9]) = *(void *)&v134[v123[9]];
      *(void *)(v135 + v123[10]) = *(void *)&v134[v123[10]];
      uint64_t v57 = v123[11];
      char v58 = (void *)(v135 + v57);
      char v59 = &v134[v57];
      uint64_t v60 = sub_251F34B70();
      uint64_t v61 = *(void *)(v60 - 8);
      uint64_t v62 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48);
      swift_bridgeObjectRetain();
      char v125 = v62;
      if (v62(v59, 1, v60))
      {
        uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
        memcpy(v58, v59, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v61 + 16))(v58, v59, v60);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
      }
      uint64_t v3 = v131;
      uint64_t v64 = v123[12];
      uint64_t v65 = (void *)(v135 + v64);
      uint64_t v66 = &v134[v64];
      if (v117(&v134[v64], 1, v119))
      {
        uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
        memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
        uint64_t v68 = v134;
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48))(v66, 1, v16))
        {
          uint64_t v69 = v114;
          memcpy(v65, v66, *(void *)(v114 + 64));
        }
        else
        {
          v112(v65, v66, v16);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v121 + 56))(v65, 0, 1, v16);
          uint64_t v69 = v114;
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v69 + 56))(v65, 0, 1, v119);
        uint64_t v68 = v134;
      }
      *(void *)(v135 + v123[13]) = *(void *)&v68[v123[13]];
      uint64_t v70 = v123[14];
      uint64_t v71 = (void *)(v135 + v70);
      uint64_t v72 = &v68[v70];
      if (v125(&v68[v70], 1, v60))
      {
        uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
        memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v61 + 16))(v71, v72, v60);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v61 + 56))(v71, 0, 1, v60);
      }
      uint64_t v74 = v123[15];
      __int16 v75 = (void *)(v135 + v74);
      uint64_t v76 = &v68[v74];
      if (v125(&v68[v74], 1, v60))
      {
        uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
        memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v61 + 16))(v75, v76, v60);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v61 + 56))(v75, 0, 1, v60);
      }
      uint64_t v27 = v127;
      uint64_t v26 = v130;
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v135, 0, 1, v26);
  }
  else
  {
    if (v12)
    {
      sub_251BE99F4(v135);
      size_t v13 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9C908) - 8) + 64);
      long long v14 = (void *)v135;
      goto LABEL_6;
    }
    if (a1 != a2)
    {
      sub_251BE99F4(v135);
      int v128 = swift_getEnumCaseMultiPayload();
      uint64_t v28 = sub_251F34DA0();
      uint64_t v29 = *(void *)(v28 - 8);
      uint64_t v30 = *(void (**)(uint64_t, char *, uint64_t))(v29 + 16);
      v30(v135, v8, v28);
      uint64_t v132 = v3;
      char v133 = v8;
      if (v128 == 1)
      {
        uint64_t v31 = (int *)type metadata accessor for ReachabilityEvent();
        *(unsigned char *)(v135 + v31[5]) = v8[v31[5]];
        uint64_t v32 = v31[6];
        uint64_t v33 = v135 + v32;
        uint64_t v34 = &v8[v32];
        uint64_t v35 = sub_251F34D20();
        uint64_t v36 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v35 - 8) + 16);
        v36(v33, v34, v35);
        v36(v135 + v31[7], &v133[v31[7]], v35);
        uint64_t v3 = v132;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        int v113 = (void (*)(void *, char *, uint64_t))v30;
        uint64_t v122 = v29;
        uint64_t v43 = (int *)type metadata accessor for CameraClip();
        uint64_t v44 = v43[5];
        uint64_t v45 = (void *)(v135 + v44);
        uint64_t v46 = &v8[v44];
        uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        uint64_t v48 = *(void *)(v47 - 8);
        __int16 v118 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48);
        int v49 = v118(v46, 1, v47);
        uint64_t v124 = v28;
        uint64_t v120 = v47;
        uint64_t v115 = v48;
        if (v49)
        {
          uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
          memcpy(v45, v46, *(void *)(*(void *)(v50 - 8) + 64));
          uint64_t v51 = v133;
        }
        else
        {
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48))(v46, 1, v28))
          {
            memcpy(v45, v46, *(void *)(v48 + 64));
          }
          else
          {
            v113(v45, v46, v28);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v122 + 56))(v45, 0, 1, v28);
          }
          uint64_t v51 = v133;
          (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
        }
        uint64_t v88 = v43[6];
        uint64_t v129 = v135 + v88;
        char v89 = &v51[v88];
        uint64_t v90 = sub_251F34D20();
        char v91 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v90 - 8) + 16);
        v91(v129, v89, v90);
        v91(v135 + v43[7], &v51[v43[7]], v90);
        *(unsigned char *)(v135 + v43[8]) = v51[v43[8]];
        *(void *)(v135 + v43[9]) = *(void *)&v51[v43[9]];
        *(void *)(v135 + v43[10]) = *(void *)&v51[v43[10]];
        uint64_t v92 = v43[11];
        __dst = (void *)(v135 + v92);
        char v93 = &v51[v92];
        uint64_t v94 = sub_251F34B70();
        uint64_t v95 = *(void *)(v94 - 8);
        char v96 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48);
        swift_bridgeObjectRetain();
        int v126 = v96;
        if (v96(v93, 1, v94))
        {
          uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
          memcpy(__dst, v93, *(void *)(*(void *)(v97 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v95 + 16))(__dst, v93, v94);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v95 + 56))(__dst, 0, 1, v94);
        }
        uint64_t v98 = v94;
        uint64_t v99 = v43[12];
        char v100 = (void *)(v135 + v99);
        char v101 = &v133[v99];
        uint64_t v3 = v132;
        if (v118(&v133[v99], 1, v120))
        {
          uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
          memcpy(v100, v101, *(void *)(*(void *)(v102 - 8) + 64));
        }
        else
        {
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48))(v101, 1, v124))
          {
            uint64_t v103 = v115;
            memcpy(v100, v101, *(void *)(v115 + 64));
          }
          else
          {
            v113(v100, v101, v124);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v122 + 56))(v100, 0, 1, v124);
            uint64_t v103 = v115;
          }
          (*(void (**)(void *, void, uint64_t, uint64_t))(v103 + 56))(v100, 0, 1, v120);
        }
        *(void *)(v135 + v43[13]) = *(void *)&v133[v43[13]];
        uint64_t v104 = v43[14];
        char v105 = (void *)(v135 + v104);
        int v106 = &v133[v104];
        if (v126(&v133[v104], 1, v98))
        {
          uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
          memcpy(v105, v106, *(void *)(*(void *)(v107 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v95 + 16))(v105, v106, v98);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v95 + 56))(v105, 0, 1, v98);
        }
        uint64_t v108 = v43[15];
        char v109 = (void *)(v135 + v108);
        char v110 = &v133[v108];
        if (v126(&v133[v108], 1, v98))
        {
          uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
          memcpy(v109, v110, *(void *)(*(void *)(v111 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v95 + 16))(v109, v110, v98);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v95 + 56))(v109, 0, 1, v98);
        }
        swift_storeEnumTagMultiPayload();
      }
    }
  }
LABEL_40:
  uint64_t v78 = *(int *)(v3 + 36);
  uint64_t v79 = (char *)a1 + v78;
  char v80 = (char *)a2 + v78;
  uint64_t v81 = sub_251F34D20();
  uint64_t v82 = *(void *)(v81 - 8);
  char v83 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v82 + 48);
  int v84 = v83(v79, 1, v81);
  int v85 = v83(v80, 1, v81);
  if (!v84)
  {
    if (!v85)
    {
      (*(void (**)(char *, char *, uint64_t))(v82 + 24))(v79, v80, v81);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v82 + 8))(v79, v81);
    goto LABEL_45;
  }
  if (v85)
  {
LABEL_45:
    uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v79, v80, *(void *)(*(void *)(v86 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v79, v80, v81);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(v79, 0, 1, v81);
  return a1;
}

uint64_t sub_251BE99F4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ScrubberElement(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *initializeWithTake for ScrubberPositionData(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for ScrubberElement(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C908);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v12 = sub_251F34DA0();
    uint64_t v13 = *(void *)(v12 - 8);
    long long v14 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v14(v6, v7, v12);
    uint64_t v72 = v8;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = (int *)type metadata accessor for ReachabilityEvent();
      v6[v15[5]] = v7[v15[5]];
      uint64_t v16 = v15[6];
      uint64_t v17 = v9;
      uint64_t v18 = &v6[v16];
      uint64_t v19 = &v7[v16];
      uint64_t v20 = sub_251F34D20();
      uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32);
      uint64_t v22 = v18;
      uint64_t v23 = v17;
      v21(v22, v19, v20);
      v21(&v6[v15[7]], &v7[v15[7]], v20);
      uint64_t v24 = v72;
    }
    else
    {
      uint64_t v64 = v14;
      uint64_t v69 = v13;
      uint64_t v67 = v12;
      uint64_t v25 = (int *)type metadata accessor for CameraClip();
      uint64_t v26 = v25[5];
      uint64_t v27 = &v6[v26];
      uint64_t v28 = &v7[v26];
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      uint64_t v65 = *(void *)(v29 - 8);
      uint64_t v68 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48);
      uint64_t v70 = v9;
      if (v68(v28, 1, v29))
      {
        uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
        memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v28, 1, v67))
        {
          uint64_t v31 = v65;
          memcpy(v27, v28, *(void *)(v65 + 64));
        }
        else
        {
          v64(v27, v28, v67);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v27, 0, 1, v67);
          uint64_t v31 = v65;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v27, 0, 1, v29);
      }
      uint64_t v32 = v25[6];
      uint64_t v33 = &v6[v32];
      uint64_t v34 = &v7[v32];
      uint64_t v35 = sub_251F34D20();
      uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32);
      v36(v33, v34, v35);
      v36(&v6[v25[7]], &v7[v25[7]], v35);
      v6[v25[8]] = v7[v25[8]];
      *(void *)&v6[v25[9]] = *(void *)&v7[v25[9]];
      *(void *)&v6[v25[10]] = *(void *)&v7[v25[10]];
      uint64_t v37 = v25[11];
      uint64_t v38 = &v6[v37];
      uint64_t v39 = &v7[v37];
      uint64_t v40 = sub_251F34B70();
      uint64_t v41 = *(void *)(v40 - 8);
      uint64_t v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
      uint64_t v66 = v41;
      if (v42(v39, 1, v40))
      {
        uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
        memcpy(v38, v39, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v38, v39, v40);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      uint64_t v44 = v25[12];
      uint64_t v45 = &v6[v44];
      uint64_t v46 = &v7[v44];
      uint64_t v24 = v72;
      uint64_t v71 = v42;
      if (v68(&v7[v44], 1, v29))
      {
        uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
        memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v46, 1, v67))
        {
          uint64_t v48 = v65;
          memcpy(v45, v46, *(void *)(v65 + 64));
        }
        else
        {
          v64(v45, v46, v67);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v45, 0, 1, v67);
          uint64_t v48 = v65;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v29);
        uint64_t v42 = v71;
      }
      *(void *)&v6[v25[13]] = *(void *)&v7[v25[13]];
      uint64_t v49 = v25[14];
      uint64_t v50 = &v6[v49];
      uint64_t v51 = &v7[v49];
      if (v42(&v7[v49], 1, v40))
      {
        uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
        memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v50, v51, v40);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v50, 0, 1, v40);
      }
      uint64_t v53 = v25[15];
      uint64_t v54 = &v6[v53];
      uint64_t v55 = &v7[v53];
      uint64_t v23 = v70;
      if (v71(v55, 1, v40))
      {
        uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
        memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v54, v55, v40);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v54, 0, 1, v40);
      }
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v6, 0, 1, v24);
  }
  uint64_t v57 = *(int *)(a3 + 36);
  char v58 = (char *)a1 + v57;
  char v59 = (char *)a2 + v57;
  uint64_t v60 = sub_251F34D20();
  uint64_t v61 = *(void *)(v60 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
  {
    uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v58, v59, *(void *)(*(void *)(v62 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v58, v59, v60);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
  }
  return a1;
}

_OWORD *assignWithTake for ScrubberPositionData(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  long long v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ScrubberElement(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      uint64_t v131 = v3;
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v15 = sub_251F34DA0();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
      v17(v7, v8, v15);
      uint64_t v128 = v10;
      uint64_t v130 = v9;
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v18 = (int *)type metadata accessor for ReachabilityEvent();
        v7[v18[5]] = v8[v18[5]];
        uint64_t v19 = v18[6];
        uint64_t v20 = &v7[v19];
        uint64_t v21 = &v8[v19];
        uint64_t v22 = sub_251F34D20();
        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32);
        v23(v20, v21, v22);
        uint64_t v24 = v130;
        v23(&v7[v18[7]], &v8[v18[7]], v22);
        uint64_t v25 = v128;
        uint64_t v3 = v131;
      }
      else
      {
        uint64_t v114 = v17;
        uint64_t v125 = v16;
        uint64_t v37 = (int *)type metadata accessor for CameraClip();
        uint64_t v38 = v37[5];
        uint64_t v39 = &v7[v38];
        uint64_t v40 = &v8[v38];
        uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        uint64_t v42 = *(void *)(v41 - 8);
        uint64_t v120 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
        uint64_t v115 = v42;
        uint64_t v117 = v15;
        if (v120(v40, 1, v41))
        {
          uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
          memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
          uint64_t v3 = v131;
        }
        else
        {
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v125 + 48))(v40, 1, v15))
          {
            memcpy(v39, v40, *(void *)(v42 + 64));
          }
          else
          {
            v114(v39, v40, v15);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v125 + 56))(v39, 0, 1, v15);
          }
          uint64_t v53 = v42;
          uint64_t v3 = v131;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v39, 0, 1, v41);
        }
        uint64_t v54 = v37[6];
        uint64_t v55 = &v7[v54];
        uint64_t v56 = &v8[v54];
        uint64_t v57 = sub_251F34D20();
        uint64_t v127 = v37;
        char v58 = *(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32);
        v58(v55, v56, v57);
        v58(&v7[v127[7]], &v8[v127[7]], v57);
        char v59 = v37;
        v7[v37[8]] = v8[v37[8]];
        *(void *)&v7[v37[9]] = *(void *)&v8[v37[9]];
        *(void *)&v7[v37[10]] = *(void *)&v8[v37[10]];
        uint64_t v60 = v37[11];
        uint64_t v61 = &v7[v60];
        uint64_t v62 = &v8[v60];
        uint64_t v63 = sub_251F34B70();
        uint64_t v64 = *(void *)(v63 - 8);
        uint64_t v124 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48);
        uint64_t v119 = v64;
        if (v124(v62, 1, v63))
        {
          uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
          memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v61, v62, v63);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
        }
        uint64_t v66 = v59[12];
        uint64_t v67 = &v7[v66];
        uint64_t v68 = &v8[v66];
        if (v120(&v8[v66], 1, v41))
        {
          uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
          memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
        }
        else
        {
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v125 + 48))(v68, 1, v117))
          {
            uint64_t v70 = v115;
            memcpy(v67, v68, *(void *)(v115 + 64));
          }
          else
          {
            v114(v67, v68, v117);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v125 + 56))(v67, 0, 1, v117);
            uint64_t v70 = v115;
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v41);
        }
        uint64_t v24 = v130;
        uint64_t v71 = v124;
        *(void *)&v7[v59[13]] = *(void *)&v8[v59[13]];
        uint64_t v72 = v59[14];
        uint64_t v73 = &v7[v72];
        uint64_t v74 = &v8[v72];
        if (v124(&v8[v72], 1, v63))
        {
          uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
          memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v73, v74, v63);
          uint64_t v71 = v124;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v73, 0, 1, v63);
        }
        uint64_t v76 = v127[15];
        uint64_t v77 = &v7[v76];
        uint64_t v78 = &v8[v76];
        if (v71(v78, 1, v63))
        {
          uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
          memcpy(v77, v78, *(void *)(*(void *)(v79 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v77, v78, v63);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v77, 0, 1, v63);
        }
        uint64_t v25 = v128;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v7, 0, 1, v24);
      goto LABEL_38;
    }
LABEL_7:
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C908);
    memcpy(v7, v8, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_38;
  }
  if (v13)
  {
    sub_251BE99F4((uint64_t)v7);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_251BE99F4((uint64_t)v7);
    int v27 = swift_getEnumCaseMultiPayload();
    uint64_t v28 = sub_251F34DA0();
    uint64_t v29 = *(void *)(v28 - 8);
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
    v30(v7, v8, v28);
    uint64_t v132 = v3;
    if (v27 == 1)
    {
      uint64_t v31 = (int *)type metadata accessor for ReachabilityEvent();
      v7[v31[5]] = v8[v31[5]];
      uint64_t v32 = v31[6];
      uint64_t v33 = &v7[v32];
      uint64_t v34 = &v8[v32];
      uint64_t v35 = sub_251F34D20();
      uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32);
      v36(v33, v34, v35);
      v36(&v7[v31[7]], &v8[v31[7]], v35);
      uint64_t v3 = v132;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      int v116 = v30;
      uint64_t v126 = v29;
      uint64_t v44 = (int *)type metadata accessor for CameraClip();
      uint64_t v45 = v44[5];
      uint64_t v46 = &v7[v45];
      uint64_t v47 = &v8[v45];
      uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      uint64_t v49 = *(void *)(v48 - 8);
      uint64_t v50 = v48;
      char v123 = *(unsigned int (**)(char *, uint64_t))(v49 + 48);
      uint64_t v118 = v49;
      uint64_t v121 = v28;
      if (v123(v47, 1))
      {
        uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
        memcpy(v46, v47, *(void *)(*(void *)(v51 - 8) + 64));
        uint64_t v52 = v50;
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v126 + 48))(v47, 1, v28))
        {
          memcpy(v46, v47, *(void *)(v49 + 64));
        }
        else
        {
          v116(v46, v47, v28);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v46, 0, 1, v28);
        }
        uint64_t v52 = v50;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v50);
      }
      uint64_t v90 = v44[6];
      char v91 = &v7[v90];
      uint64_t v92 = &v8[v90];
      uint64_t v93 = sub_251F34D20();
      uint64_t v94 = *(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 32);
      v94(v91, v92, v93);
      v94(&v7[v44[7]], &v8[v44[7]], v93);
      v7[v44[8]] = v8[v44[8]];
      *(void *)&v7[v44[9]] = *(void *)&v8[v44[9]];
      *(void *)&v7[v44[10]] = *(void *)&v8[v44[10]];
      uint64_t v95 = v44[11];
      char v96 = &v7[v95];
      uint64_t v97 = &v8[v95];
      uint64_t v98 = sub_251F34B70();
      uint64_t v99 = *(void *)(v98 - 8);
      uint64_t v129 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48);
      uint64_t v122 = v99;
      if (v129(v97, 1, v98))
      {
        uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
        memcpy(v96, v97, *(void *)(*(void *)(v100 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v96, v97, v98);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
      }
      uint64_t v101 = v44[12];
      uint64_t v102 = &v7[v101];
      uint64_t v103 = &v8[v101];
      uint64_t v3 = v132;
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v123)(&v8[v101], 1, v52))
      {
        uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
        memcpy(v102, v103, *(void *)(*(void *)(v104 - 8) + 64));
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v126 + 48))(v103, 1, v121))
        {
          uint64_t v105 = v118;
          memcpy(v102, v103, *(void *)(v118 + 64));
        }
        else
        {
          v116(v102, v103, v121);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v102, 0, 1, v121);
          uint64_t v105 = v118;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v102, 0, 1, v52);
      }
      *(void *)&v7[v44[13]] = *(void *)&v8[v44[13]];
      uint64_t v106 = v44[14];
      uint64_t v107 = &v7[v106];
      uint64_t v108 = &v8[v106];
      if (v129(&v8[v106], 1, v98))
      {
        uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
        memcpy(v107, v108, *(void *)(*(void *)(v109 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v122 + 32))(v107, v108, v98);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v107, 0, 1, v98);
      }
      uint64_t v110 = v44[15];
      uint64_t v111 = &v7[v110];
      char v112 = &v8[v110];
      if (v129(v112, 1, v98))
      {
        uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
        memcpy(v111, v112, *(void *)(*(void *)(v113 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v122 + 32))(v111, v112, v98);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v111, 0, 1, v98);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_38:
  uint64_t v80 = *(int *)(v3 + 36);
  uint64_t v81 = (char *)a1 + v80;
  uint64_t v82 = (char *)a2 + v80;
  uint64_t v83 = sub_251F34D20();
  uint64_t v84 = *(void *)(v83 - 8);
  int v85 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v84 + 48);
  int v86 = v85(v81, 1, v83);
  int v87 = v85(v82, 1, v83);
  if (!v86)
  {
    if (!v87)
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 40))(v81, v82, v83);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v84 + 8))(v81, v83);
    goto LABEL_43;
  }
  if (v87)
  {
LABEL_43:
    uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v81, v82, *(void *)(*(void *)(v88 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v81, v82, v83);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v81, 0, 1, v83);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScrubberPositionData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251BEB214);
}

uint64_t sub_251BEB214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C908);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 32);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    int v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 36);
    return v13(v15, a2, v14);
  }
}

uint64_t storeEnumTagSinglePayload for ScrubberPositionData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251BEB32C);
}

uint64_t sub_251BEB32C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C908);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a4 + 32);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + *(int *)(a4 + 36);
    return v15(v17, a2, a2, v16);
  }
}

void sub_251BEB43C()
{
  sub_251BEB544(319, (unint64_t *)&qword_269B9D848, (void (*)(uint64_t))type metadata accessor for ScrubberElement);
  if (v0 <= 0x3F)
  {
    sub_251BEB544(319, (unint64_t *)&qword_26B21FD28, MEMORY[0x270FA9210]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_251BEB544(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_251F36190();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_251BEB598()
{
  unint64_t result = qword_269B9F5C0;
  if (!qword_269B9F5C0)
  {
    sub_251F34D20();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F5C0);
  }
  return result;
}

uint64_t sub_251BEB5E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScrubberElement(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t CameraController.state.getter()
{
  return swift_retain();
}

char *CameraController.__allocating_init(cameraProfile:)(void (*a1)(void, void))
{
  swift_allocObject();
  uint64_t v2 = sub_251BF5D2C(a1);

  return v2;
}

char *CameraController.init(cameraProfile:)(void (*a1)(void, void))
{
  uint64_t v2 = sub_251BF5D2C(a1);

  return v2;
}

uint64_t sub_251BEB6C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[13] = a4;
  v5[14] = a5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FE88);
  v5[15] = v6;
  v5[16] = *(void *)(v6 - 8);
  v5[17] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251BEB78C, 0, 0);
}

uint64_t sub_251BEB78C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FE68);
  sub_251F35D20();
  swift_beginAccess();
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_251BEB880;
  uint64_t v2 = *(void *)(v0 + 120);
  return MEMORY[0x270FA1F68](v0 + 16, 0, 0, v2);
}

uint64_t sub_251BEB880()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251BEB97C, 0, 0);
}

uint64_t sub_251BEB97C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  *(void *)(v0 + 152) = v1;
  *(void *)(v0 + 160) = v2;
  uint64_t v3 = *(void **)(v0 + 32);
  *(void *)(v0 + 168) = v3;
  unsigned int v4 = *(unsigned __int8 *)(v0 + 40);
  *(unsigned char *)(v0 + 41) = v4;
  if (v4 >= 0xFC)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 128) + 8))(*(void *)(v0 + 136), *(void *)(v0 + 120));
LABEL_8:
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 176) = Strong;
  if (!Strong)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 128) + 8))(*(void *)(v0 + 136), *(void *)(v0 + 120));
    goto LABEL_7;
  }
  uint64_t v6 = Strong;
  if (sub_251F35D80())
  {
    (*(void (**)(void, void))(*(void *)(v0 + 128) + 8))(*(void *)(v0 + 136), *(void *)(v0 + 120));
    swift_release();
LABEL_7:
    sub_251BF6930(v1, v2, v3, v4);
    goto LABEL_8;
  }
  if ((v4 & 0x80) != 0)
  {
    *(void *)(v0 + 48) = v1;
    *(void *)(v0 + 56) = v2;
    *(void *)(v0 + 64) = v3;
    *(unsigned char *)(v0 + 72) = v4 & 0x7F;
    sub_251AA104C(v1, v2, v3, v4);
    uint64_t v11 = swift_task_alloc();
    *(void *)(v0 + 184) = v11;
    *(void *)uint64_t v11 = v0;
    *(void *)(v11 + 8) = sub_251BEBBC0;
    *(void *)(v11 + 168) = v6;
    *(_OWORD *)(v11 + 176) = *(_OWORD *)(v0 + 48);
    *(void *)(v11 + 192) = *(void *)(v0 + 64);
    *(unsigned char *)(v11 + 282) = *(unsigned char *)(v0 + 72);
    uint64_t v10 = sub_251BEBF98;
  }
  else
  {
    *(_WORD *)(v0 + 42) = (_WORD)v1;
    uint64_t v9 = swift_task_alloc();
    *(void *)(v0 + 192) = v9;
    *(void *)uint64_t v9 = v0;
    *(void *)(v9 + 8) = sub_251BEBDB0;
    *(void *)(v9 + 40) = v6;
    *(_WORD *)(v9 + 72) = *(_WORD *)(v0 + 42);
    uint64_t v10 = sub_251BED230;
  }
  return MEMORY[0x270FA2498](v10, v6, 0);
}

uint64_t sub_251BEBBC0()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251BEBCBC, 0, 0);
}

uint64_t sub_251BEBCBC()
{
  uint64_t v1 = *(void **)(v0 + 168);
  uint64_t v3 = *(void **)(v0 + 152);
  uint64_t v2 = *(void **)(v0 + 160);
  char v4 = *(unsigned char *)(v0 + 41);
  swift_release();
  sub_251BF6930(v3, v2, v1, v4);
  sub_251BF6930(v3, v2, v1, v4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v5;
  void *v5 = v0;
  v5[1] = sub_251BEB880;
  uint64_t v6 = *(void *)(v0 + 120);
  return MEMORY[0x270FA1F68](v0 + 16, 0, 0, v6);
}

uint64_t sub_251BEBDB0()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251BEBEAC, 0, 0);
}

uint64_t sub_251BEBEAC()
{
  swift_release();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_251BEB880;
  uint64_t v2 = *(void *)(v0 + 120);
  return MEMORY[0x270FA1F68](v0 + 16, 0, 0, v2);
}

uint64_t sub_251BEBF60(uint64_t a1)
{
  *(void *)(v2 + 168) = v1;
  *(_OWORD *)(v2 + 176) = *(_OWORD *)a1;
  *(void *)(v2 + 192) = *(void *)(a1 + 16);
  *(unsigned char *)(v2 + 282) = *(unsigned char *)(a1 + 24);
  return MEMORY[0x270FA2498](sub_251BEBF98, v1, 0);
}

uint64_t sub_251BEBF98()
{
  uint64_t v69 = v0;
  if (qword_269B9C348 != -1) {
    swift_once();
  }
  uint64_t v2 = (void **)(v0 + 192);
  uint64_t v1 = *(void **)(v0 + 192);
  uint64_t v3 = *(void **)(v0 + 184);
  uint64_t v4 = *(void **)(v0 + 176);
  char v5 = *(unsigned char *)(v0 + 282);
  uint64_t v6 = sub_251F350A0();
  *(void *)(v0 + 200) = __swift_project_value_buffer(v6, (uint64_t)qword_269B9FFA8);
  swift_retain();
  sub_251AA105C(v4, v3, v1, v5);
  swift_retain();
  sub_251AA105C(v4, v3, v1, v5);
  uint64_t v7 = sub_251F35080();
  os_log_type_t v8 = sub_251F35FD0();
  BOOL v9 = os_log_type_enabled(v7, v8);
  char v10 = *(unsigned char *)(v0 + 282);
  uint64_t v11 = *(void **)(v0 + 192);
  uint64_t v12 = *(void **)(v0 + 184);
  int v13 = *(void **)(v0 + 176);
  uint64_t v65 = (uint64_t *)(v0 + 168);
  uint64_t v14 = *(void *)(v0 + 168);
  if (!v9)
  {
    swift_release_n();
    sub_251AA10DC(v13, v12, v11, v10);
    sub_251AA10DC(v13, v12, v11, v10);

    uint64_t v16 = (uint64_t *)(v0 + 136);
    int v19 = *(unsigned __int8 *)(v0 + 282);
    if (*(unsigned char *)(v0 + 282)) {
      goto LABEL_5;
    }
LABEL_9:
    id v27 = 0;
    LOBYTE(v28) = *(unsigned char *)(v0 + 176);
    uint64_t v29 = *(void **)(v0 + 184);
    id v64 = v29;
    goto LABEL_11;
  }
  char v58 = *(void **)(v0 + 192);
  uint64_t v15 = swift_slowAlloc();
  char v59 = (void *)swift_slowAlloc();
  uint64_t v61 = swift_slowAlloc();
  uint64_t v66 = v61;
  *(_DWORD *)uint64_t v15 = 138412802;
  *(void *)(v0 + 152) = v14;
  swift_retain();
  sub_251F361D0();
  *char v59 = v14;
  uint64_t v16 = (uint64_t *)(v0 + 136);
  swift_release_n();
  *(_WORD *)(v15 + 12) = 2080;
  *(void *)(v0 + 160) = sub_251A00E84(0x5F28657461647075, 0xEA0000000000293ALL, &v66);
  sub_251F361D0();
  *(_WORD *)(v15 + 22) = 2080;
  v67[0] = (uint64_t)v13;
  v67[1] = (uint64_t)v12;
  v67[2] = (uint64_t)v58;
  char v68 = v10;
  uint64_t v17 = sub_251AA04E4();
  *(void *)(v0 + 128) = sub_251A00E84(v17, v18, &v66);
  sub_251F361D0();
  swift_bridgeObjectRelease();
  sub_251AA10DC(v13, v12, v58, v10);
  sub_251AA10DC(v13, v12, v58, v10);
  _os_log_impl(&dword_2519F3000, v7, v8, "%@ %s processing %s", (uint8_t *)v15, 0x20u);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
  swift_arrayDestroy();
  MEMORY[0x2533AC760](v59, -1, -1);
  swift_arrayDestroy();
  MEMORY[0x2533AC760](v61, -1, -1);
  MEMORY[0x2533AC760](v15, -1, -1);

  int v19 = *(unsigned __int8 *)(v0 + 282);
  if (!*(unsigned char *)(v0 + 282)) {
    goto LABEL_9;
  }
LABEL_5:
  if (v19 == 2)
  {
    uint64_t v20 = *(void **)(*v65 + OBJC_IVAR____TtC13HomeDataModel16CameraController_cameraProfile);
    id v21 = objc_msgSend(v20, sel_accessory);
    if (v21)
    {
      uint64_t v22 = v21;
      id v23 = objc_msgSend(v21, sel_name);

      uint64_t v24 = sub_251F356F0();
      uint64_t v26 = v25;
    }
    else
    {
      uint64_t v24 = 0;
      uint64_t v26 = 0;
    }
    sub_251B50394((char *)v67);
    char v37 = v67[0];
    id v50 = objc_msgSend(v20, sel_streamControl);
    if (v50)
    {
      uint64_t v51 = v50;
      id v28 = objc_msgSend(v50, sel_streamState);

      if ((unint64_t)v28 >= 4) {
        LOBYTE(v28) = 0;
      }
    }
    else
    {
      LOBYTE(v28) = 0;
    }
    id v52 = objc_msgSend(v20, sel_streamControl);
    id v64 = objc_msgSend(v52, sel_cameraStream);

    id v53 = objc_msgSend(v20, sel_snapshotControl);
    id v27 = objc_msgSend(v53, sel_mostRecentSnapshot);

    uint64_t v30 = 0;
LABEL_32:
    if (v28 == 1)
    {
      uint64_t v30 = 0;
      LOBYTE(v28) = 1;
      goto LABEL_37;
    }
    goto LABEL_34;
  }
  id v64 = 0;
  uint64_t v29 = *(void **)(v0 + 176);
  LOBYTE(v28) = 4;
  id v27 = v29;
  uint64_t v2 = (void **)(v0 + 184);
LABEL_11:
  uint64_t v30 = *v2;
  id v31 = v29;
  if (!v30)
  {
    char v37 = 7;
    goto LABEL_22;
  }
  id v63 = v27;
  uint64_t v32 = (id *)(v0 + 64);
  uint64_t v33 = (void **)(v0 + 72);
  *(void *)(v0 + 64) = v30;
  id v34 = v30;
  id v35 = v30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1B0);
  type metadata accessor for HMError(0);
  if (!swift_dynamicCast())
  {

    goto LABEL_17;
  }
  uint64_t v36 = *v33;
  *(void *)(v0 + 120) = *v33;
  sub_251BF7198(&qword_269B9C820, type metadata accessor for HMError);
  sub_251F349E0();
  if (*(void *)(v0 + 112) != 4)
  {
    *(void *)(v0 + 144) = v36;
    sub_251F349E0();

    uint64_t v56 = *v16;
    if (v56 == 14)
    {
      char v37 = 2;
      goto LABEL_21;
    }
LABEL_17:
    id v38 = v30;
    swift_retain();
    id v39 = v30;
    swift_retain();
    id v40 = v30;
    uint64_t v41 = sub_251F35080();
    os_log_type_t v42 = sub_251F35FB0();
    BOOL v43 = os_log_type_enabled(v41, v42);
    uint64_t v44 = *v65;
    if (v43)
    {
      uint64_t v60 = v41;
      uint64_t v45 = swift_slowAlloc();
      uint64_t v46 = (void *)swift_slowAlloc();
      uint64_t v62 = swift_slowAlloc();
      v67[0] = v62;
      *(_DWORD *)uint64_t v45 = 138412802;
      *(void *)(v0 + 80) = v44;
      swift_retain();
      sub_251F361D0();
      *uint64_t v46 = v44;
      swift_release_n();
      *(_WORD *)(v45 + 12) = 2080;
      *(void *)(v0 + 88) = sub_251A00E84(0x5F28657461647075, 0xEA0000000000293ALL, v67);
      sub_251F361D0();
      *(_WORD *)(v45 + 22) = 2080;
      *(void *)(v0 + 96) = v30;
      id v47 = v30;
      uint64_t v48 = sub_251F35770();
      *(void *)(v0 + 104) = sub_251A00E84(v48, v49, v67);
      sub_251F361D0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_2519F3000, v60, v42, "%@ %s received unhandled error: %s", (uint8_t *)v45, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v46, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v62, -1, -1);
      MEMORY[0x2533AC760](v45, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    char v37 = 7;
    goto LABEL_21;
  }

  char v37 = 1;
LABEL_21:
  id v27 = v63;
LABEL_22:
  if (v28 == 4)
  {
    uint64_t v24 = 0;
    uint64_t v26 = 0;
    *(unsigned char *)(*v65 + OBJC_IVAR____TtC13HomeDataModel16CameraController_isStartingStream) = 0;
    LOBYTE(v28) = 4;
    goto LABEL_37;
  }
  uint64_t v24 = 0;
  uint64_t v26 = 0;
  if (!v30) {
    goto LABEL_32;
  }
LABEL_34:
  *(unsigned char *)(*v65 + OBJC_IVAR____TtC13HomeDataModel16CameraController_isStartingStream) = 0;
  if (!v30 && v28 == 3)
  {
    uint64_t v30 = 0;
    LOBYTE(v28) = 3;
    goto LABEL_38;
  }
LABEL_37:
  *(unsigned char *)(*v65 + OBJC_IVAR____TtC13HomeDataModel16CameraController_isStoppingStream) = 0;
LABEL_38:
  *(void *)(v0 + 232) = v24;
  *(void *)(v0 + 240) = v26;
  *(unsigned char *)(v0 + 284) = (_BYTE)v28;
  *(void *)(v0 + 216) = v27;
  *(void *)(v0 + 224) = v64;
  *(void *)(v0 + 208) = v30;
  *(unsigned char *)(v0 + 283) = v37;
  id v54 = v27;
  id v55 = v64;
  return MEMORY[0x270FA2498](sub_251BEC928, 0, 0);
}

uint64_t sub_251BEC928()
{
  sub_251F35C80();
  *(void *)(v0 + 248) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251BEC9BC, v2, v1);
}

uint64_t sub_251BEC9BC()
{
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v2 = *(void **)(v0 + 224);
  char v3 = *(unsigned char *)(v0 + 284);
  uint64_t v4 = *(void **)(v0 + 216);
  uint64_t v10 = *(void *)(v0 + 192);
  uint64_t v5 = *(void *)(v0 + 168);
  uint64_t v6 = *(void *)(v0 + 176);
  unsigned __int8 v7 = *(unsigned char *)(v0 + 282);
  char v8 = *(unsigned char *)(v0 + 283);
  swift_release();
  sub_251BEE078(v6, v10, v7, v5, v1, v8, v0 + 16, v3, v4, v2);

  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_251BECAAC, v5, 0);
}

uint64_t sub_251BECAAC()
{
  uint64_t v23 = v0;
  uint64_t v1 = *(void *)(v0 + 208);
  __int16 v2 = *(_WORD *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 32);
  *(void *)(v0 + 256) = *(void *)(v0 + 24);
  *(void *)(v0 + 264) = v3;
  if (v1)
  {
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_251F35080();
    os_log_type_t v5 = sub_251F35FD0();
    BOOL v6 = os_log_type_enabled(v4, v5);
    unint64_t v7 = *(void *)(v0 + 264);
    if (v6)
    {
      uint64_t v17 = *(void *)(v0 + 256);
      int v19 = *(void **)(v0 + 216);
      uint64_t v20 = *(void **)(v0 + 224);
      id v21 = *(id *)(v0 + 208);
      uint64_t v8 = *(void *)(v0 + 168);
      uint64_t v9 = swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      uint64_t v22 = v18;
      *(_DWORD *)uint64_t v9 = 138412802;
      *(void *)(v0 + 40) = v8;
      swift_retain();
      sub_251F361D0();
      *uint64_t v10 = v8;
      swift_release_n();
      *(_WORD *)(v9 + 12) = 2080;
      *(void *)(v0 + 48) = sub_251A00E84(0x5F28657461647075, 0xEA0000000000293ALL, &v22);
      sub_251F361D0();
      *(_WORD *)(v9 + 22) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 56) = sub_251A00E84(v17, v7, &v22);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2519F3000, v4, v5, "%@ %s state: %s", (uint8_t *)v9, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v10, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v18, -1, -1);
      MEMORY[0x2533AC760](v9, -1, -1);
    }
    else
    {
      uint64_t v14 = *(void **)(v0 + 216);
      int v13 = *(void **)(v0 + 224);

      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
  else
  {
    *(_WORD *)(v0 + 280) = v2;
    uint64_t v11 = swift_task_alloc();
    *(void *)(v0 + 272) = v11;
    *(void *)uint64_t v11 = v0;
    *(void *)(v11 + 8) = sub_251BECE24;
    uint64_t v12 = *(void *)(v0 + 168);
    *(void *)(v11 + 88) = v12;
    *(_WORD *)(v11 + 110) = *(_WORD *)(v0 + 280);
    return MEMORY[0x270FA2498](sub_251BEE678, v12, 0);
  }
}

uint64_t sub_251BECE24()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 168);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251BECF34, v1, 0);
}

uint64_t sub_251BECF34()
{
  uint64_t v17 = v0;
  swift_retain_n();
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_251F35080();
  os_log_type_t v2 = sub_251F35FD0();
  if (os_log_type_enabled(v1, v2))
  {
    unint64_t v10 = *(void *)(v0 + 264);
    uint64_t v11 = *(void *)(v0 + 256);
    int v13 = *(void **)(v0 + 224);
    uint64_t v14 = *(void **)(v0 + 216);
    id v15 = *(id *)(v0 + 208);
    uint64_t v3 = *(void *)(v0 + 168);
    uint64_t v4 = swift_slowAlloc();
    os_log_type_t v5 = (void *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(void *)(v0 + 40) = v3;
    uint64_t v16 = v12;
    *(_DWORD *)uint64_t v4 = 138412802;
    swift_retain();
    sub_251F361D0();
    void *v5 = v3;
    swift_release_n();
    *(_WORD *)(v4 + 12) = 2080;
    *(void *)(v0 + 48) = sub_251A00E84(0x5F28657461647075, 0xEA0000000000293ALL, &v16);
    sub_251F361D0();
    *(_WORD *)(v4 + 22) = 2080;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 56) = sub_251A00E84(v11, v10, &v16);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2519F3000, v1, v2, "%@ %s state: %s", (uint8_t *)v4, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v5, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v12, -1, -1);
    MEMORY[0x2533AC760](v4, -1, -1);
  }
  else
  {
    unint64_t v7 = *(void **)(v0 + 216);
    BOOL v6 = *(void **)(v0 + 224);

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_251BED208(_WORD *a1)
{
  *(void *)(v2 + 40) = v1;
  *(_WORD *)(v2 + 72) = *a1;
  return MEMORY[0x270FA2498](sub_251BED230, v1, 0);
}

uint64_t sub_251BED230()
{
  uint64_t v28 = v0;
  char v1 = 1;
  char v2 = 0;
  char v3 = 0;
  char v4 = 0;
  char v5 = 0;
  switch(*(unsigned char *)(v0 + 72))
  {
    case 1:
      id v8 = objc_msgSend(*(id *)(*(void *)(v0 + 40) + OBJC_IVAR____TtC13HomeDataModel16CameraController_cameraProfile), sel_streamControl);
      id v9 = objc_msgSend(v8, sel_cameraStream);

      if (v9)
      {

        char v3 = 0;
        char v1 = 0;
      }
      else
      {
        char v3 = 0;
      }
      char v2 = 1;
      goto LABEL_13;
    case 2:
      id v10 = objc_msgSend(*(id *)(*(void *)(v0 + 40) + OBJC_IVAR____TtC13HomeDataModel16CameraController_cameraProfile), sel_streamControl);
      id v11 = objc_msgSend(v10, sel_cameraStream);

      if (v11)
      {

        char v1 = 0;
      }
      char v3 = 1;
      char v2 = 2;
LABEL_13:
      char v4 = 1;
      goto LABEL_14;
    case 3:
      goto LABEL_15;
    case 4:
      char v2 = 0;
      char v3 = 0;
      char v4 = 0;
      char v5 = 0;
      char v1 = 0;
      goto LABEL_15;
    default:
      id v6 = objc_msgSend(*(id *)(*(void *)(v0 + 40) + OBJC_IVAR____TtC13HomeDataModel16CameraController_cameraProfile), sel_streamControl);
      id v7 = objc_msgSend(v6, sel_cameraStream);

      if (v7)
      {

        char v2 = 0;
        char v3 = 0;
        char v4 = 0;
        char v1 = 0;
      }
      else
      {
        char v2 = 0;
        char v3 = 0;
        char v4 = 0;
      }
LABEL_14:
      char v5 = 1;
LABEL_15:
      *(unsigned char *)(v0 + 79) = v5;
      *(unsigned char *)(v0 + 78) = v4;
      *(unsigned char *)(v0 + 77) = v3;
      *(unsigned char *)(v0 + 76) = v2;
      if (qword_269B9C348 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_251F350A0();
      __swift_project_value_buffer(v12, (uint64_t)qword_269B9FFA8);
      swift_retain_n();
      int v13 = sub_251F35080();
      os_log_type_t v14 = sub_251F35FD0();
      if (os_log_type_enabled(v13, v14))
      {
        __int16 v23 = *(_WORD *)(v0 + 72);
        uint64_t v15 = *(void *)(v0 + 40);
        char v25 = v1;
        uint64_t v16 = swift_slowAlloc();
        uint64_t v17 = (void *)swift_slowAlloc();
        uint64_t v24 = swift_slowAlloc();
        uint64_t v26 = v24;
        *(_DWORD *)uint64_t v16 = 138412802;
        *(void *)(v0 + 16) = v15;
        swift_retain();
        sub_251F361D0();
        void *v17 = v15;
        swift_release_n();
        *(_WORD *)(v16 + 12) = 2080;
        *(void *)(v0 + 24) = sub_251A00E84(0x5F28657461647075, 0xEA0000000000293ALL, &v26);
        sub_251F361D0();
        *(_WORD *)(v16 + 22) = 2080;
        __int16 v27 = v23;
        uint64_t v18 = CameraController.Mode.description.getter();
        *(void *)(v0 + 32) = sub_251A00E84(v18, v19, &v26);
        sub_251F361D0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2519F3000, v13, v14, "%@ %s mode: %s", (uint8_t *)v16, 0x20u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v17, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v24, -1, -1);
        uint64_t v20 = v16;
        char v1 = v25;
        MEMORY[0x2533AC760](v20, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      id v21 = (void *)swift_task_alloc();
      *(void *)(v0 + 48) = v21;
      *id v21 = v0;
      v21[1] = sub_251BED6E8;
      return sub_251BEEE70(v1);
  }
}

uint64_t sub_251BED6E8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  __int16 v3 = *(_WORD *)(*v0 + 72);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  if (v3 - 3 >= 2) {
    char v5 = HIBYTE(v3);
  }
  else {
    char v5 = 5;
  }
  *(unsigned char *)(v2 + 74) = v5;
  uint64_t v6 = swift_task_alloc();
  *(void *)(v2 + 56) = v6;
  *(void *)uint64_t v6 = v4;
  *(void *)(v6 + 8) = sub_251BED878;
  char v7 = *(unsigned char *)(v2 + 79);
  uint64_t v8 = *(void *)(v1 + 40);
  *(void *)(v6 + 24) = v8;
  *(unsigned char *)(v6 + 32) = v7;
  *(unsigned char *)(v6 + 33) = *(unsigned char *)(v2 + 74);
  return MEMORY[0x270FA2498](sub_251BEF630, v8, 0);
}

uint64_t sub_251BED878()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  char v3 = *(unsigned char *)(*v0 + 76);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  *(unsigned char *)(v2 + 75) = v3;
  uint64_t v5 = swift_task_alloc();
  *(void *)(v2 + 64) = v5;
  *(void *)uint64_t v5 = v4;
  *(void *)(v5 + 8) = sub_251BED9F0;
  char v6 = *(unsigned char *)(v2 + 78);
  char v7 = *(unsigned char *)(v2 + 77);
  uint64_t v8 = *(void *)(v1 + 40);
  *(void *)(v5 + 200) = v8;
  *(unsigned char *)(v5 + 259) = v7;
  *(unsigned char *)(v5 + 258) = v6;
  *(unsigned char *)(v5 + 260) = *(unsigned char *)(v2 + 75);
  return MEMORY[0x270FA2498](sub_251BEFB98, v8, 0);
}

uint64_t sub_251BED9F0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t CameraController.deinit()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + OBJC_IVAR____TtC13HomeDataModel16CameraController_updates;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E6C8);
  sub_251F35D00();
  if (*(void *)(v1 + OBJC_IVAR____TtC13HomeDataModel16CameraController_snapshotTimer))
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1B0);
    sub_251F35D60();
    swift_release();
  }
  uint64_t v4 = OBJC_IVAR____TtC13HomeDataModel16CameraController_cameraProfile;
  id v5 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtC13HomeDataModel16CameraController_cameraProfile), sel_streamControl));
  if (v5)
  {
    char v6 = v5;
    char v7 = (char *)objc_msgSend(v5, sel_streamState);

    if ((unint64_t)(v7 - 1) <= 1)
    {
      id v8 = objc_msgSend(*(id *)(v1 + v4), sel_streamControl);
      objc_msgSend(v8, sel_stopStream);
    }
  }
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  swift_release();
  sub_251A1B064(v1 + OBJC_IVAR____TtC13HomeDataModel16CameraController_previousSnapshotCallTime, &qword_26B21EC20);
  swift_defaultActor_destroy();
  return v1;
}

uint64_t CameraController.__deallocating_deinit()
{
  CameraController.deinit();
  return MEMORY[0x270FA2418](v0);
}

void CameraController.__allocating_init()()
{
}

void CameraController.init()()
{
}

uint64_t CameraController.unownedExecutor.getter()
{
  return v0;
}

void CameraController.id.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC13HomeDataModel16CameraController_cameraProfile), sel_uniqueIdentifier);
  sub_251F34D80();
}

uint64_t CameraController.description.getter()
{
  v11[0] = 91;
  v11[1] = 0xE100000000000000;
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC13HomeDataModel16CameraController_cameraProfile);
  id v2 = objc_msgSend(v1, sel_accessory);
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = objc_msgSend(v2, sel_name);

    sub_251F356F0();
  }
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  id v5 = objc_msgSend(v1, sel_uniqueIdentifier);
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  sub_251BF6DDC((unint64_t *)&qword_26B21E6B0, MEMORY[0x270FA96C0]);
  sub_251F36AB0();
  sub_251F35800();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_251F35800();
  return v11[0];
}

void sub_251BEE00C()
{
  id v1 = objc_msgSend(*(id *)(*v0 + OBJC_IVAR____TtC13HomeDataModel16CameraController_cameraProfile), sel_uniqueIdentifier);
  sub_251F34D80();
}

uint64_t sub_251BEE078@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X2>, unsigned __int8 a3@<W3>, uint64_t a4@<X4>, uint64_t a5@<X6>, char a6@<W7>, uint64_t a7@<X8>, char a8, void *a9, void *a10)
{
  uint64_t v14 = *(void *)(a4 + 112);
  int v15 = a3;
  swift_getKeyPath();
  sub_251BF7198(&qword_269B9FE70, (void (*)(uint64_t))type metadata accessor for CameraController.State);
  sub_251F34F10();
  swift_release();
  BOOL v30 = !v15
     && ((int v16 = *(unsigned __int8 *)(v14 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__availability),
          v16 == 2)
      || v16 == 1)
     && !a2
     && (unint64_t)a1 - 1 < 2;
  unsigned __int8 v31 = a3;
  if (!a5)
  {
    swift_getKeyPath();
    sub_251F34F10();
    swift_release();
    swift_bridgeObjectRetain();
  }
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  swift_bridgeObjectRetain();
  sub_251F34F00();
  swift_release();
  swift_bridgeObjectRelease();
  if (!v30 && a6 == 7)
  {
    swift_getKeyPath();
    sub_251F34F10();
    swift_release();
  }
  uint64_t v18 = swift_getKeyPath();
  MEMORY[0x270FA5388](v18);
  sub_251F34F00();
  swift_release();
  if (a8 == 4)
  {
    swift_getKeyPath();
    sub_251F34F10();
    swift_release();
  }
  uint64_t v19 = swift_getKeyPath();
  MEMORY[0x270FA5388](v19);
  sub_251F34F00();
  swift_release();
  uint64_t v20 = a9;
  if (!a9)
  {
    swift_getKeyPath();
    sub_251F34F10();
    swift_release();
    uint64_t v20 = *(void **)(v14 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__snapshot);
    id v21 = v20;
  }
  uint64_t v22 = a10;
  uint64_t v23 = swift_getKeyPath();
  MEMORY[0x270FA5388](v23);
  id v24 = a9;
  sub_251F34F00();
  swift_release();

  if (v31 && !a10)
  {
    swift_getKeyPath();
    sub_251F34F10();
    swift_release();
    uint64_t v22 = *(void **)(v14 + OBJC_IVAR____TtCC13HomeDataModel16CameraController5State__stream);
  }
  id v25 = v22;
  uint64_t v26 = swift_getKeyPath();
  MEMORY[0x270FA5388](v26);
  sub_251F34F00();
  swift_release();

  swift_getKeyPath();
  sub_251F34F10();
  swift_release();
  swift_beginAccess();
  *(_WORD *)a7 = *(_WORD *)(v14 + 16);
  uint64_t result = CameraController.State.description.getter();
  *(void *)(a7 + 8) = result;
  *(void *)(a7 + 16) = v28;
  return result;
}

uint64_t sub_251BEE650(_WORD *a1)
{
  *(void *)(v2 + 88) = v1;
  *(_WORD *)(v2 + 110) = *a1;
  return MEMORY[0x270FA2498](sub_251BEE678, v1, 0);
}

uint64_t sub_251BEE678()
{
  uint64_t v41 = v0;
  uint64_t v1 = (uint64_t *)(v0 + 88);
  sub_251B50394((char *)&v39);
  if ((_BYTE)v39) {
    goto LABEL_31;
  }
  uint64_t v2 = *v1;
  if ((*(unsigned char *)(*v1 + OBJC_IVAR____TtC13HomeDataModel16CameraController_isStartingStream) & 1) != 0
    || (*(unsigned char *)(v2 + OBJC_IVAR____TtC13HomeDataModel16CameraController_isStoppingStream) & 1) != 0)
  {
    goto LABEL_31;
  }
  uint64_t v3 = (unsigned char *)(v0 + 112);
  sub_251B50670((__int16 *)&v39);
  __int16 v4 = v39;
  if (v39 == 5) {
    __int16 v4 = 4;
  }
  __int16 v38 = v4;
  if (*(void *)(v2 + OBJC_IVAR____TtC13HomeDataModel16CameraController_snapshotTimer))
  {
    swift_retain();
    char isCancelled = swift_task_isCancelled();
    swift_release();
    char v6 = isCancelled ^ 1;
  }
  else
  {
    char v6 = 0;
  }
  *uint64_t v3 = 0;
  if (qword_269B9C348 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_251F350A0();
  __swift_project_value_buffer(v7, (uint64_t)qword_269B9FFA8);
  swift_retain_n();
  uint64_t v8 = sub_251F35080();
  os_log_type_t v9 = sub_251F35FD0();
  if (os_log_type_enabled(v8, v9))
  {
    __int16 v35 = *(_WORD *)(v0 + 110);
    uint64_t v10 = *(void *)(v0 + 88);
    char v37 = v6;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    uint64_t v39 = v36;
    *(_DWORD *)uint64_t v11 = 138413058;
    *(void *)(v0 + 80) = v10;
    swift_retain();
    sub_251F361D0();
    void *v12 = v10;
    swift_release_n();
    *(_WORD *)(v11 + 12) = 2080;
    *(void *)(v0 + 72) = sub_251A00E84(0xD00000000000001CLL, 0x8000000251F6CD20, &v39);
    sub_251F361D0();
    *(_WORD *)(v11 + 22) = 2080;
    __int16 v40 = v35;
    uint64_t v13 = CameraController.Mode.description.getter();
    *(void *)(v0 + 48) = sub_251A00E84(v13, v14, &v39);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 32) = 2080;
    __int16 v15 = v38;
    __int16 v40 = v38;
    uint64_t v16 = CameraController.Mode.description.getter();
    *(void *)(v0 + 40) = sub_251A00E84(v16, v17, &v39);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v8, v9, "%@ %s mode: %s derived: %s", (uint8_t *)v11, 0x2Au);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    uint64_t v18 = v12;
    uint64_t v3 = (unsigned char *)(v0 + 112);
    MEMORY[0x2533AC760](v18, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v36, -1, -1);
    uint64_t v19 = v11;
    char v6 = v37;
    MEMORY[0x2533AC760](v19, -1, -1);
  }
  else
  {

    swift_release_n();
    __int16 v15 = v38;
  }
  int v20 = *(_WORD *)(v0 + 110);
  if (v20 == 3)
  {
    unsigned int v21 = (v15 - 3);
  }
  else
  {
    if (v20 != 4)
    {
      if (v15 == 3) {
        goto LABEL_24;
      }
      if (v15 != 4)
      {
        __int16 v40 = *(_WORD *)(v0 + 110);
        LOWORD(v39) = v15;
        if (!(v6 & 1 | !_s13HomeDataModel16CameraControllerC4ModeO2eeoiySbAE_AEtFZ_0(&v40, &v39))) {
          goto LABEL_24;
        }
      }
      goto LABEL_23;
    }
    unsigned int v21 = v15 - 3;
  }
  if (v21 >= 2) {
LABEL_23:
  }
    *uint64_t v3 = 1;
LABEL_24:
  int v22 = *v3;
  swift_retain_n();
  uint64_t v23 = sub_251F35080();
  os_log_type_t v24 = sub_251F35FD0();
  BOOL v25 = os_log_type_enabled(v23, v24);
  uint64_t v26 = *v1;
  if (v25)
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v28 = (void *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v39 = v29;
    *(_DWORD *)uint64_t v27 = 138412802;
    *(void *)(v0 + 56) = v26;
    swift_retain();
    sub_251F361D0();
    *uint64_t v28 = v26;
    swift_release_n();
    *(_WORD *)(v27 + 12) = 2080;
    *(void *)(v0 + 64) = sub_251A00E84(0xD00000000000001CLL, 0x8000000251F6CD20, &v39);
    sub_251F361D0();
    *(_WORD *)(v27 + 22) = 1024;
    *(_DWORD *)(v0 + 104) = v22;
    sub_251F361D0();
    _os_log_impl(&dword_2519F3000, v23, v24, "%@ %s processing mode again %{BOOL}d", (uint8_t *)v27, 0x1Cu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v28, -1, -1);
    swift_arrayDestroy();
    uint64_t v30 = v29;
    uint64_t v3 = (unsigned char *)(v0 + 112);
    MEMORY[0x2533AC760](v30, -1, -1);
    MEMORY[0x2533AC760](v27, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  swift_beginAccess();
  if (*v3 == 1)
  {
    *(_WORD *)(v0 + 108) = *(_WORD *)(v0 + 110);
    uint64_t v31 = swift_task_alloc();
    *(void *)(v0 + 96) = v31;
    *(void *)uint64_t v31 = v0;
    *(void *)(v31 + 8) = sub_251BEED4C;
    uint64_t v32 = *(void *)(v0 + 88);
    *(void *)(v31 + 40) = v32;
    *(_WORD *)(v31 + 72) = *(_WORD *)(v0 + 108);
    return MEMORY[0x270FA2498](sub_251BED230, v32, 0);
  }
LABEL_31:
  uint64_t v33 = *(uint64_t (**)(void))(v0 + 8);
  return v33();
}

uint64_t sub_251BEED4C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 88);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251BEEE5C, v1, 0);
}

uint64_t sub_251BEEE5C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_251BEEE70(char a1)
{
  *(void *)(v2 + 56) = v1;
  *(unsigned char *)(v2 + 112) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  *(void *)(v2 + 64) = swift_task_alloc();
  uint64_t v3 = sub_251F36610();
  *(void *)(v2 + 72) = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  *(void *)(v2 + 80) = v4;
  *(void *)(v2 + 88) = *(void *)(v4 + 64);
  *(void *)(v2 + 96) = swift_task_alloc();
  *(void *)(v2 + 104) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251BEEF7C, v1, 0);
}

uint64_t sub_251BEEF7C()
{
  uint64_t v47 = v0;
  uint64_t v1 = (uint64_t *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = OBJC_IVAR____TtC13HomeDataModel16CameraController_snapshotTimer;
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC13HomeDataModel16CameraController_snapshotTimer);
  if (*(unsigned char *)(v0 + 112) == 1)
  {
    uint64_t v5 = *(void *)(v0 + 56);
    if (!v4)
    {
LABEL_5:
      uint64_t v44 = v3;
      uint64_t v6 = v5 + OBJC_IVAR____TtC13HomeDataModel16CameraController_previousSnapshotCallTime;
      swift_beginAccess();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
      uint64_t v7 = swift_task_alloc();
      sub_251A1B128(v6, v7, &qword_26B21EC20);
      uint64_t v8 = sub_251F34D20();
      uint64_t v9 = *(void *)(v8 - 8);
      int v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
      double v11 = 0.0;
      if (v10 != 1)
      {
        uint64_t v12 = swift_task_alloc();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v12, v7, v8);
        uint64_t v13 = swift_task_alloc();
        sub_251F34CF0();
        sub_251F34D00();
        double v15 = v14;
        uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
        v16(v13, v8);
        swift_task_dealloc();
        double v11 = 5.0 - v15;
        v16(v12, v8);
        swift_task_dealloc();
      }
      BOOL log = v10 == 1;
      uint64_t v18 = *(void *)(v0 + 96);
      uint64_t v17 = *(void *)(v0 + 104);
      uint64_t v19 = *(void *)(v0 + 80);
      uint64_t v20 = *(void *)(v0 + 88);
      uint64_t v21 = *(void *)(v0 + 64);
      uint64_t v22 = *(void *)(v0 + 72);
      uint64_t v39 = v22;
      uint64_t v40 = v21;
      uint64_t v23 = *(void *)(v0 + 56);
      swift_task_dealloc();
      uint64_t v41 = v17;
      sub_251F36600();
      uint64_t v24 = swift_allocObject();
      swift_weakInit();
      sub_251F35C90();
      uint64_t v25 = sub_251F35CD0();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v21, 0, 1, v25);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v18, v17, v22);
      uint64_t v26 = sub_251BF7198(&qword_269B9FEC8, (void (*)(uint64_t))type metadata accessor for CameraController);
      unint64_t v27 = (*(unsigned __int8 *)(v19 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
      unint64_t v28 = (v20 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v29 = swift_allocObject();
      *(void *)(v29 + 16) = v23;
      *(void *)(v29 + 24) = v26;
      *(double *)(v29 + 32) = v11;
      *(unsigned char *)(v29 + 40) = log;
      *(void *)(v29 + 48) = 0x4014000000000000;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v19 + 32))(v29 + v27, v18, v39);
      *(void *)(v29 + v28) = v23;
      uint64_t v30 = (void *)(v29 + ((v28 + 15) & 0xFFFFFFFFFFFFFFF8));
      *uint64_t v30 = &unk_269B9FF28;
      v30[1] = v24;
      swift_retain_n();
      swift_retain();
      *(void *)(v2 + v44) = sub_251E1F61C(v40, (uint64_t)&unk_269B9FF38, v29);
      swift_release();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v41, v39);
      goto LABEL_15;
    }
    swift_retain();
    if (swift_task_isCancelled())
    {
      swift_release();
      uint64_t v5 = *v1;
      goto LABEL_5;
    }
    if (qword_269B9C348 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_251F350A0();
    __swift_project_value_buffer(v31, (uint64_t)qword_269B9FFA8);
    swift_retain_n();
    uint64_t v32 = sub_251F35080();
    os_log_type_t v33 = sub_251F35FD0();
    BOOL v34 = os_log_type_enabled(v32, v33);
    uint64_t v35 = *v1;
    if (v34)
    {
      uint64_t v36 = swift_slowAlloc();
      uint64_t v42 = (void *)swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      uint64_t v46 = v45;
      *(_DWORD *)uint64_t v36 = 138412546;
      *(void *)(v0 + 40) = v35;
      swift_retain();
      sub_251F361D0();
      *uint64_t v42 = v35;
      swift_release_n();
      *(_WORD *)(v36 + 12) = 2080;
      *(void *)(v0 + 48) = sub_251A00E84(0xD000000000000018, 0x8000000251F6CDC0, &v46);
      sub_251F361D0();
      _os_log_impl(&dword_2519F3000, v32, v33, "%@ %s returning early because snapshots are being taken", (uint8_t *)v36, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v42, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v45, -1, -1);
      MEMORY[0x2533AC760](v36, -1, -1);
      swift_release();
    }
    else
    {

      swift_release();
      swift_release_n();
    }
  }
  else if (v4)
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1B0);
    sub_251F35D60();
    swift_release();
  }
LABEL_15:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v37 = *(uint64_t (**)(void))(v0 + 8);
  return v37();
}

uint64_t sub_251BEF604(char a1, unsigned char *a2)
{
  *(void *)(v3 + 24) = v2;
  *(unsigned char *)(v3 + 32) = a1;
  *(unsigned char *)(v3 + 33) = *a2;
  return MEMORY[0x270FA2498](sub_251BEF630, v2, 0);
}

uint64_t sub_251BEF630()
{
  uint64_t v29 = v0;
  uint64_t v1 = (uint64_t *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = OBJC_IVAR____TtC13HomeDataModel16CameraController_isStartingStream;
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC13HomeDataModel16CameraController_isStartingStream) & 1) != 0
    || (*(unsigned char *)(v2 + OBJC_IVAR____TtC13HomeDataModel16CameraController_isStoppingStream) & 1) != 0)
  {
    if (qword_269B9C348 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_251F350A0();
    __swift_project_value_buffer(v4, (uint64_t)qword_269B9FFA8);
    swift_retain_n();
    uint64_t v5 = sub_251F35080();
    os_log_type_t v6 = sub_251F35FD0();
    BOOL v7 = os_log_type_enabled(v5, v6);
    uint64_t v8 = *v1;
    if (v7)
    {
      uint64_t v9 = swift_slowAlloc();
      BOOL log = v5;
      int v10 = (void *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v28 = v26;
      *(_DWORD *)uint64_t v9 = 138413058;
      os_log_type_t type = v6;
      *(void *)(v0 + 16) = v8;
      swift_retain();
      sub_251F361D0();
      double v11 = v10;
      *int v10 = v8;
      swift_release_n();
      *(_WORD *)(v9 + 12) = 2080;
      *(void *)(v0 + 16) = sub_251A00E84(0xD000000000000020, 0x8000000251F6CD70, &v28);
      sub_251F361D0();
      *(_WORD *)(v9 + 22) = 1024;
      int v12 = *(unsigned __int8 *)(v2 + v3);
      swift_release();
      *(_DWORD *)(v0 + 16) = v12;
      sub_251F361D0();
      swift_release();
      *(_WORD *)(v9 + 28) = 1024;
      int v13 = *(unsigned __int8 *)(v8 + OBJC_IVAR____TtC13HomeDataModel16CameraController_isStoppingStream);
      swift_release();
      *(_DWORD *)(v0 + 16) = v13;
      sub_251F361D0();
      swift_release();
      uint64_t v5 = log;
      _os_log_impl(&dword_2519F3000, log, type, "%@ %s returning early because isStartingStream or isStoppingStream is true\"\n(isStartingStream: %{BOOL}d, isStoppingStream: %{BOOL}d)", (uint8_t *)v9, 0x22u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v11, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v26, -1, -1);
      MEMORY[0x2533AC760](v9, -1, -1);
    }
    else
    {
      swift_release_n();
    }
  }
  else
  {
    if (qword_269B9C348 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_251F350A0();
    __swift_project_value_buffer(v16, (uint64_t)qword_269B9FFA8);
    swift_retain_n();
    uint64_t v17 = sub_251F35080();
    os_log_type_t v18 = sub_251F35FD0();
    BOOL v19 = os_log_type_enabled(v17, v18);
    uint64_t v20 = *v1;
    if (v19)
    {
      int loga = *(unsigned __int8 *)(v0 + 32);
      uint64_t v21 = swift_slowAlloc();
      uint64_t v22 = (void *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v28 = v27;
      *(_DWORD *)uint64_t v21 = 138412802;
      *(void *)(v0 + 16) = v20;
      swift_retain();
      sub_251F361D0();
      *uint64_t v22 = v20;
      swift_release_n();
      *(_WORD *)(v21 + 12) = 2080;
      *(void *)(v0 + 16) = sub_251A00E84(0xD000000000000020, 0x8000000251F6CD70, &v28);
      sub_251F361D0();
      *(_WORD *)(v21 + 22) = 1024;
      *(_DWORD *)(v0 + 16) = loga;
      sub_251F361D0();
      _os_log_impl(&dword_2519F3000, v17, v18, "%@ %s enable: %{BOOL}d", (uint8_t *)v21, 0x1Cu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v22, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v27, -1, -1);
      MEMORY[0x2533AC760](v21, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    if (*(unsigned char *)(v0 + 32) == 1)
    {
      LOBYTE(v28) = *(unsigned char *)(v0 + 33);
      sub_251BF0C40((unsigned __int8 *)&v28);
    }
    else
    {
      sub_251BF185C();
    }
  }
  double v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_251BEFB68(unsigned char *a1, char a2, char a3)
{
  *(void *)(v4 + 200) = v3;
  *(unsigned char *)(v4 + 259) = a3;
  *(unsigned char *)(v4 + 258) = a2;
  *(unsigned char *)(v4 + 260) = *a1;
  return MEMORY[0x270FA2498](sub_251BEFB98, v3, 0);
}

uint64_t sub_251BEFB98()
{
  uint64_t v20 = v0;
  uint64_t v1 = *(void **)(*(void *)(v0 + 200) + OBJC_IVAR____TtC13HomeDataModel16CameraController_cameraProfile);
  *(void *)(v0 + 208) = v1;
  id v2 = objc_msgSend(v1, sel_streamControl);
  if (!v2) {
    goto LABEL_5;
  }
  uint64_t v3 = v2;
  id v4 = objc_msgSend(v2, sel_cameraStream);
  *(void *)(v0 + 216) = v4;

  if (!v4) {
    goto LABEL_5;
  }
  uint64_t v5 = *(unsigned __int8 *)(v0 + 260);
  if (objc_msgSend(v4, sel_audioStreamSetting) == (id)(v5 + 1))
  {

LABEL_5:
    if (qword_269B9C348 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_251F350A0();
    __swift_project_value_buffer(v6, (uint64_t)qword_269B9FFA8);
    swift_retain_n();
    BOOL v7 = sub_251F35080();
    os_log_type_t v8 = sub_251F35FD0();
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v10 = *(void *)(v0 + 200);
    if (v9)
    {
      uint64_t v11 = swift_slowAlloc();
      int v12 = (void *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = v18;
      *(_DWORD *)uint64_t v11 = 138412546;
      *(void *)(v0 + 136) = v10;
      swift_retain();
      sub_251F361D0();
      void *v12 = v10;
      swift_release_n();
      *(_WORD *)(v11 + 12) = 2080;
      *(void *)(v0 + 128) = sub_251A00E84(0xD00000000000002FLL, 0x8000000251F6CD40, &v19);
      sub_251F361D0();
      _os_log_impl(&dword_2519F3000, v7, v8, "%@ %s returning early", (uint8_t *)v11, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v12, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v18, -1, -1);
      MEMORY[0x2533AC760](v11, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    int v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
  uint64_t v15 = *(unsigned __int8 *)(v0 + 260);
  *(void *)(v0 + 120) = MEMORY[0x263F8EE78];
  uint64_t v16 = v15 + 1;
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_251BEFF60;
  uint64_t v17 = swift_continuation_init();
  *(void *)(v0 + 80) = MEMORY[0x263EF8330];
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_251A5B804;
  *(void *)(v0 + 104) = &block_descriptor_7;
  *(void *)(v0 + 112) = v17;
  objc_msgSend(v4, sel_updateAudioStreamSetting_completionHandler_, v16, v0 + 80);
  return MEMORY[0x270FA23F0](v0 + 16);
}

uint64_t sub_251BEFF60()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 224) = v2;
  uint64_t v3 = *(void *)(v1 + 200);
  if (v2) {
    id v4 = sub_251BF0750;
  }
  else {
    id v4 = sub_251BF0080;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_251BF0080()
{
  if (qword_269B9C348 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)(v0 + 120);
  uint64_t v2 = (unsigned char *)(v0 + 258);
  uint64_t v3 = sub_251F350A0();
  __swift_project_value_buffer(v3, (uint64_t)qword_269B9FFA8);
  swift_retain_n();
  id v4 = sub_251F35080();
  os_log_type_t v5 = sub_251F35FD0();
  if (os_log_type_enabled(v4, v5))
  {
    char v27 = *(unsigned char *)(v0 + 260);
    uint64_t v6 = *(void *)(v0 + 200);
    uint64_t v7 = swift_slowAlloc();
    os_log_type_t v8 = (void *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    uint64_t v30 = v28;
    *(_DWORD *)uint64_t v7 = 138412802;
    *(void *)(v0 + 184) = v6;
    swift_retain();
    sub_251F361D0();
    *os_log_type_t v8 = v6;
    swift_release_n();
    *(_WORD *)(v7 + 12) = 2080;
    *(void *)(v0 + 192) = sub_251A00E84(0xD00000000000002FLL, 0x8000000251F6CD40, &v30);
    sub_251F361D0();
    *(_WORD *)(v7 + 22) = 2080;
    *(unsigned char *)(v0 + 256) = v27;
    uint64_t v9 = sub_251F35770();
    *(void *)(v0 + 144) = sub_251A00E84(v9, v10, &v30);
    sub_251F361D0();
    uint64_t v1 = (void *)(v0 + 120);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v4, v5, "%@ %s updated audio setting to %s", (uint8_t *)v7, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    uint64_t v11 = v8;
    uint64_t v2 = (unsigned char *)(v0 + 258);
    MEMORY[0x2533AC760](v11, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v28, -1, -1);
    MEMORY[0x2533AC760](v7, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  if (*v2 == 1)
  {
    id v12 = objc_msgSend(*(id *)(v0 + 208), sel_microphoneControl);
    if (v12)
    {
      id v13 = v12;
      MEMORY[0x2533AA9D0]();
      if (*(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_251F35B10();
      }
      sub_251F35B70();
      sub_251F35AE0();
    }
  }
  if (v2[1] == 1)
  {
    id v14 = objc_msgSend(*(id *)(v0 + 208), sel_speakerControl);
    if (v14)
    {
      id v15 = v14;
      MEMORY[0x2533AA9D0]();
      if (*(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_251F35B10();
      }
      sub_251F35B70();
      sub_251F35AE0();
    }
  }
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v23) {
      goto LABEL_18;
    }
  }
  else if (*(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_18:
    uint64_t v16 = *(void *)(v0 + 200);
    uint64_t v17 = sub_251BF7198(&qword_269B9FEC8, (void (*)(uint64_t))type metadata accessor for CameraController);
    uint64_t v18 = swift_task_alloc();
    *(void *)(v0 + 232) = v18;
    *(void *)(v18 + 16) = v1;
    *(void *)(v18 + 24) = v16;
    uint64_t v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 240) = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_251BF05BC;
    uint64_t v20 = MEMORY[0x263F8EE60] + 8;
    uint64_t v21 = MEMORY[0x263F8EE60] + 8;
    uint64_t v22 = MEMORY[0x263F8EE60] + 8;
    return MEMORY[0x270FA2158](v19, v20, v21, v16, v17, &unk_269B9FED8, v18, v22);
  }
  uint64_t v24 = *(void **)(v0 + 216);
  swift_bridgeObjectRelease();

  uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_251BF05BC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 200);
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251BF06E8, v1, 0);
}

uint64_t sub_251BF06E8()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251BF0750()
{
  uint64_t v20 = v0;
  swift_willThrow();
  if (qword_269B9C348 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 224);
  uint64_t v2 = sub_251F350A0();
  __swift_project_value_buffer(v2, (uint64_t)qword_269B9FFA8);
  swift_retain();
  id v3 = v1;
  swift_retain();
  id v4 = v1;
  os_log_type_t v5 = sub_251F35080();
  os_log_type_t v6 = sub_251F35FB0();
  BOOL v7 = os_log_type_enabled(v5, v6);
  os_log_type_t v8 = *(void **)(v0 + 224);
  uint64_t v9 = *(void *)(v0 + 200);
  if (v7)
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    v19[0] = v18;
    *(_DWORD *)uint64_t v10 = 138412802;
    *(void *)(v0 + 152) = v9;
    swift_retain();
    sub_251F361D0();
    *uint64_t v11 = v9;
    swift_release_n();
    *(_WORD *)(v10 + 12) = 2080;
    *(void *)(v0 + 160) = sub_251A00E84(0xD00000000000002FLL, 0x8000000251F6CD40, v19);
    sub_251F361D0();
    *(_WORD *)(v10 + 22) = 2080;
    *(void *)(v0 + 168) = v8;
    id v12 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1B0);
    uint64_t v13 = sub_251F35770();
    *(void *)(v0 + 176) = sub_251A00E84(v13, v14, v19);
    sub_251F361D0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2519F3000, v5, v6, "%@ %s failed to update audio setting %s", (uint8_t *)v10, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v11, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v18, -1, -1);
    MEMORY[0x2533AC760](v10, -1, -1);
  }
  else
  {
    swift_release_n();
  }
  *(unsigned char *)(v0 + 257) = *(unsigned char *)(v0 + 260);
  uint64_t v15 = swift_task_alloc();
  *(void *)(v0 + 248) = v15;
  *(void *)uint64_t v15 = v0;
  *(void *)(v15 + 8) = sub_251BF0AC0;
  uint64_t v16 = *(void *)(v0 + 200);
  *(void *)(v15 + 48) = v16;
  *(unsigned char *)(v15 + 114) = *(unsigned char *)(v0 + 257);
  return MEMORY[0x270FA2498](sub_251BF1F24, v16, 0);
}

uint64_t sub_251BF0AC0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 200);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251BF0BD0, v1, 0);
}

uint64_t sub_251BF0BD0()
{
  uint64_t v1 = *(void **)(v0 + 224);

  swift_bridgeObjectRelease();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_251BF0C40(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E6C0);
  os_log_t v5 = *(os_log_t *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  BOOL v7 = (char *)v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v8 = *a1;
  uint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC13HomeDataModel16CameraController_cameraProfile);
  id v10 = objc_msgSend(v9, sel_streamControl);
  if (!v10) {
    return;
  }
  uint64_t v11 = v10;
  id v12 = (char *)objc_msgSend(v10, sel_streamState);
  char v13 = (_BYTE)v12 - 1;
  if ((unint64_t)(v12 - 1) >= 4)
  {
    unsigned int v14 = 0;
    if (!byte_270262E48) {
      goto LABEL_14;
    }
    uint64_t v15 = 0;
  }
  else
  {
    unsigned int v14 = (0x30201u >> (8 * v13)) & 3;
    if (byte_270262E48 == v14) {
      goto LABEL_14;
    }
    uint64_t v15 = (0x30201u >> (8 * v13)) & 3;
  }
  if (v15 != byte_270262E49 && v15 != byte_270262E4A)
  {
    id v73 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E210]), sel_init);
    unint64_t v16 = 0x269B9C000uLL;
    if (qword_269B9C348 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_251F350A0();
    __swift_project_value_buffer(v17, (uint64_t)qword_269B9FFA8);
    swift_retain_n();
    uint64_t v18 = sub_251F35080();
    LODWORD(v72) = sub_251F35FD0();
    if (os_log_type_enabled(v18, (os_log_type_t)v72))
    {
      os_log_t v70 = v18;
      os_log_t v71 = v5;
      uint64_t v74 = v11;
      uint64_t v19 = swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      v76[0] = v69;
      *(_DWORD *)uint64_t v19 = 136315650;
      char v68 = (void *)(v19 + 4);
      uint64_t v20 = sub_251F34DA0();
      v67[1] = v67;
      v67[0] = *(void *)(v20 - 8);
      MEMORY[0x270FA5388](v20);
      uint64_t v22 = (char *)v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      id v23 = objc_msgSend(v9, sel_uniqueIdentifier);
      sub_251F34D80();

      sub_251BF6DDC((unint64_t *)&qword_26B21E6B0, MEMORY[0x270FA96C0]);
      uint64_t v24 = sub_251F36AB0();
      unint64_t v26 = v25;
      (*(void (**)(char *, uint64_t))(v67[0] + 8))(v22, v20);
      uint64_t v75 = sub_251A00E84(v24, v26, v76);
      sub_251F361D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2080;
      uint64_t v75 = sub_251A00E84(0xD000000000000015, 0x8000000251F6CDA0, v76);
      sub_251F361D0();
      char v27 = (uint8_t *)v19;
      *(_WORD *)(v19 + 22) = 2080;
      unint64_t v16 = 0xE800000000000000;
      uint64_t v28 = 0x647261646E617473;
      uint64_t v11 = v74;
      os_log_t v5 = v71;
      switch(v8)
      {
        case 0:
          goto LABEL_28;
        case 1:
          uint64_t v28 = 0x6465636E61686E65;
          goto LABEL_28;
        case 2:
          unint64_t v16 = 0xE400000000000000;
          uint64_t v28 = 1751607656;
          goto LABEL_28;
        case 3:
          unint64_t v16 = 0xE900000000000068;
          uint64_t v28 = 0x676968206C6C7566;
          goto LABEL_28;
        case 4:
          unint64_t v16 = 0xEA00000000006867;
          uint64_t v28 = 0x6968206172746C75;
LABEL_28:
          uint64_t v75 = sub_251A00E84(v28, v16, v76);
          sub_251F361D0();
          swift_bridgeObjectRelease();
          os_log_t v40 = v70;
          _os_log_impl(&dword_2519F3000, v70, (os_log_type_t)v72, "[%s] %s starting stream with resolution %s", v27, 0x20u);
          uint64_t v41 = v69;
          swift_arrayDestroy();
          MEMORY[0x2533AC760](v41, -1, -1);
          MEMORY[0x2533AC760](v27, -1, -1);

          unint64_t v16 = 0x269B9C000uLL;
          goto LABEL_29;
        default:
          goto LABEL_30;
      }
    }

    swift_release_n();
LABEL_29:
    id v42 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E218]), sel_init);
    LOBYTE(v76[0]) = v8;
    unint64_t v43 = CameraController.Resolution.videoResolutions.getter();
    sub_251EE1298(v43);
    swift_bridgeObjectRelease();
    sub_251BF6D9C();
    sub_251BF6DDC(&qword_269B9FF18, (void (*)(uint64_t))sub_251BF6D9C);
    uint64_t v44 = (void *)sub_251F35E30();
    swift_bridgeObjectRelease();
    objc_msgSend(v42, sel_setResolutions_, v44);

    objc_msgSend(v73, sel_setVideoPreferences_, v42);
LABEL_30:
    if (*(void *)(v16 + 840) != -1) {
      swift_once();
    }
    uint64_t v45 = sub_251F350A0();
    __swift_project_value_buffer(v45, (uint64_t)qword_269B9FFA8);
    swift_retain_n();
    uint64_t v46 = sub_251F35080();
    os_log_type_t v47 = sub_251F35FD0();
    int v48 = v47;
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v49 = swift_slowAlloc();
      uint64_t v74 = v11;
      uint64_t v50 = v49;
      uint64_t v72 = swift_slowAlloc();
      v76[0] = v72;
      *(_DWORD *)uint64_t v50 = 136315394;
      uint64_t v69 = v50 + 4;
      uint64_t v51 = sub_251F34DA0();
      char v68 = v67;
      uint64_t v52 = *(void *)(v51 - 8);
      os_log_t v71 = v46;
      uint64_t v53 = v52;
      MEMORY[0x270FA5388](v51);
      LODWORD(v70) = v48;
      id v55 = (char *)v67 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
      id v56 = objc_msgSend(v9, sel_uniqueIdentifier);
      sub_251F34D80();

      sub_251BF6DDC((unint64_t *)&qword_26B21E6B0, MEMORY[0x270FA96C0]);
      uint64_t v57 = sub_251F36AB0();
      uint64_t v58 = v4;
      char v59 = v5;
      unint64_t v61 = v60;
      (*(void (**)(char *, uint64_t))(v53 + 8))(v55, v51);
      uint64_t v75 = sub_251A00E84(v57, v61, v76);
      sub_251F361D0();
      swift_release_n();
      os_log_t v5 = v59;
      uint64_t v4 = v58;
      swift_bridgeObjectRelease();
      *(_WORD *)(v50 + 12) = 2080;
      uint64_t v75 = sub_251A00E84(0xD000000000000015, 0x8000000251F6CDA0, v76);
      sub_251F361D0();
      os_log_t v62 = v71;
      _os_log_impl(&dword_2519F3000, v71, (os_log_type_t)v70, "[%s] %s", (uint8_t *)v50, 0x16u);
      uint64_t v63 = v72;
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v63, -1, -1);
      uint64_t v64 = v50;
      uint64_t v11 = v74;
      MEMORY[0x2533AC760](v64, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    id v65 = v73;
    objc_msgSend(v73, sel_setShouldTakeOwnershipOfExistingStream_, 1);
    objc_msgSend(v11, sel_startStreamWithPreferences_, v65);
    *(unsigned char *)(v2 + OBJC_IVAR____TtC13HomeDataModel16CameraController_isStartingStream) = 1;
    id v66 = objc_msgSend(v11, sel_cameraStream);
    v76[0] = 1;
    v76[1] = (uint64_t)v66;
    v76[2] = 0;
    char v77 = 0x80;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E6C8);
    sub_251F35CF0();

    ((void (*)(char *, uint64_t))v5[1].isa)(v7, v4);
    return;
  }
LABEL_14:
  if (qword_269B9C348 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_251F350A0();
  __swift_project_value_buffer(v29, (uint64_t)qword_269B9FFA8);
  swift_retain_n();
  uint64_t v30 = sub_251F35080();
  os_log_type_t v31 = sub_251F35FD0();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v74 = v11;
    uint64_t v32 = swift_slowAlloc();
    os_log_type_t v33 = (void *)swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    uint64_t v75 = v2;
    v76[0] = v34;
    *(_DWORD *)uint64_t v32 = 138412802;
    swift_retain();
    sub_251F361D0();
    *os_log_type_t v33 = v2;
    swift_release_n();
    *(_WORD *)(v32 + 12) = 2080;
    uint64_t v75 = sub_251A00E84(0xD000000000000015, 0x8000000251F6CDA0, v76);
    sub_251F361D0();
    *(_WORD *)(v32 + 22) = 2080;
    unint64_t v35 = 0xED0000676E696D61;
    uint64_t v36 = 0x6572747320746F6ELL;
    uint64_t v37 = v14;
    __int16 v38 = v74;
    switch(v37)
    {
      case 1:
        unint64_t v35 = 0xE800000000000000;
        uint64_t v39 = 0x697472617473;
        goto LABEL_22;
      case 2:
        uint64_t v36 = 0x6E696D6165727473;
        unint64_t v35 = 0xE900000000000067;
        break;
      case 3:
        unint64_t v35 = 0xE800000000000000;
        uint64_t v39 = 0x6970706F7473;
LABEL_22:
        uint64_t v36 = v39 & 0xFFFFFFFFFFFFLL | 0x676E000000000000;
        break;
      default:
        break;
    }
    uint64_t v75 = sub_251A00E84(v36, v35, v76);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v30, v31, "%@ %s returning early because the stream control is in an invalid state %s", (uint8_t *)v32, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v33, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v34, -1, -1);
    MEMORY[0x2533AC760](v32, -1, -1);
  }
  else
  {

    swift_release_n();
  }
}

void sub_251BF185C()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E6C0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  os_log_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC13HomeDataModel16CameraController_cameraProfile), sel_streamControl));
  if (!v6) {
    return;
  }
  BOOL v7 = v6;
  int v8 = (char *)objc_msgSend(v6, sel_streamState);
  if ((unint64_t)(v8 - 1) >= 4)
  {
    unsigned int v9 = 0;
    if (!byte_270262E70) {
      goto LABEL_13;
    }
    uint64_t v10 = 0;
  }
  else
  {
    unsigned int v9 = (0x30201u >> (8 * ((_BYTE)v8 - 1))) & 3;
    if (byte_270262E70 == v9) {
      goto LABEL_13;
    }
    uint64_t v10 = (0x30201u >> (8 * ((_BYTE)v8 - 1))) & 3;
  }
  if (v10 != byte_270262E71 && v10 != byte_270262E72)
  {
    if (qword_269B9C348 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_251F350A0();
    __swift_project_value_buffer(v11, (uint64_t)qword_269B9FFA8);
    swift_retain_n();
    id v12 = sub_251F35080();
    os_log_type_t v13 = sub_251F35FD0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      os_log_t v30 = v12;
      uint64_t v15 = v14;
      uint64_t v29 = (void *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v32 = v1;
      v33[0] = v31;
      *(_DWORD *)uint64_t v15 = 138412546;
      swift_retain();
      sub_251F361D0();
      unint64_t v16 = v29;
      *uint64_t v29 = v1;
      swift_release_n();
      *(_WORD *)(v15 + 12) = 2080;
      uint64_t v32 = sub_251A00E84(0x65727453706F7473, 0xEF2928676E696D61, v33);
      sub_251F361D0();
      os_log_t v17 = v30;
      _os_log_impl(&dword_2519F3000, v30, v13, "%@ %s", (uint8_t *)v15, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v16, -1, -1);
      uint64_t v18 = v31;
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v18, -1, -1);
      MEMORY[0x2533AC760](v15, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    *(unsigned char *)(v1 + OBJC_IVAR____TtC13HomeDataModel16CameraController_isStoppingStream) = 1;
    objc_msgSend(v7, sel_stopStream);
    id v27 = objc_msgSend(v7, sel_cameraStream);
    v33[0] = 3;
    v33[1] = (uint64_t)v27;
    v33[2] = 0;
    char v34 = 0x80;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E6C8);
    sub_251F35CF0();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return;
  }
LABEL_13:
  if (qword_269B9C348 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_251F350A0();
  __swift_project_value_buffer(v19, (uint64_t)qword_269B9FFA8);
  swift_retain_n();
  uint64_t v20 = sub_251F35080();
  os_log_type_t v21 = sub_251F35FD0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    id v23 = (void *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    uint64_t v32 = v1;
    v33[0] = v31;
    *(_DWORD *)uint64_t v22 = 138412802;
    swift_retain();
    sub_251F361D0();
    *id v23 = v1;
    swift_release_n();
    *(_WORD *)(v22 + 12) = 2080;
    uint64_t v32 = sub_251A00E84(0x65727453706F7473, 0xEF2928676E696D61, v33);
    sub_251F361D0();
    *(_WORD *)(v22 + 22) = 2080;
    unint64_t v24 = 0xED0000676E696D61;
    uint64_t v25 = 0x6572747320746F6ELL;
    switch(v9)
    {
      case 1u:
        unint64_t v24 = 0xE800000000000000;
        uint64_t v26 = 0x697472617473;
        goto LABEL_23;
      case 2u:
        unint64_t v24 = 0xE900000000000067;
        uint64_t v25 = 0x6E696D6165727473;
        break;
      case 3u:
        unint64_t v24 = 0xE800000000000000;
        uint64_t v26 = 0x6970706F7473;
LABEL_23:
        uint64_t v25 = v26 & 0xFFFFFFFFFFFFLL | 0x676E000000000000;
        break;
      default:
        break;
    }
    uint64_t v32 = sub_251A00E84(v25, v24, v33);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v20, v21, "%@ %s returning early because the stream control is in an invalid state %s", (uint8_t *)v22, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v23, -1, -1);
    uint64_t v28 = v31;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v28, -1, -1);
    MEMORY[0x2533AC760](v22, -1, -1);
  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_251BF1EFC(unsigned char *a1)
{
  *(void *)(v2 + 48) = v1;
  *(unsigned char *)(v2 + 114) = *a1;
  return MEMORY[0x270FA2498](sub_251BF1F24, v1, 0);
}

uint64_t sub_251BF1F24()
{
  id v1 = objc_msgSend(*(id *)(v0[6] + OBJC_IVAR____TtC13HomeDataModel16CameraController_cameraProfile), sel_streamControl);
  if (v1
    && (v2 = v1, id v3 = objc_msgSend(v1, sel_cameraStream), v2, v3))
  {
    uint64_t v4 = v0[6];
    v0[7] = objc_msgSend(v3, sel_audioStreamSetting);

    v0[8] = *(void *)(v4 + 112);
    v0[9] = sub_251F35C80();
    v0[10] = sub_251F35C70();
    uint64_t v6 = sub_251F35C00();
    return MEMORY[0x270FA2498](sub_251BF205C, v6, v5);
  }
  else
  {
    BOOL v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_251BF205C()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 48);
  swift_release();
  swift_getKeyPath();
  *(void *)(v0 + 88) = OBJC_IVAR____TtCC13HomeDataModel16CameraController5State___observationRegistrar;
  *(void *)(v0 + 16) = v1;
  *(void *)(v0 + 96) = sub_251BF7198(&qword_269B9FE70, (void (*)(uint64_t))type metadata accessor for CameraController.State);
  sub_251F34F10();
  swift_release();
  swift_beginAccess();
  *(_WORD *)(v0 + 112) = *(_WORD *)(v1 + 16);
  return MEMORY[0x270FA2498](sub_251BF2170, v2, 0);
}

uint64_t sub_251BF2170()
{
  int v1 = *(unsigned __int8 *)(v0 + 112);
  if ((v1 - 3) >= 2)
  {
    unint64_t v2 = 0xE800000000000000;
    uint64_t v3 = 0x676E696D6F636E69;
    if (v1 != 1)
    {
      uint64_t v3 = 0x7463657269646962;
      unint64_t v2 = 0xED00006C616E6F69;
    }
    if (*(unsigned char *)(v0 + 112)) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0x646574756DLL;
    }
    if (*(unsigned char *)(v0 + 112)) {
      unint64_t v5 = v2;
    }
    else {
      unint64_t v5 = 0xE500000000000000;
    }
    unint64_t v6 = 0xE800000000000000;
    uint64_t v7 = 0x676E696D6F636E69;
    if (*(unsigned char *)(v0 + 114) != 1)
    {
      uint64_t v7 = 0x7463657269646962;
      unint64_t v6 = 0xED00006C616E6F69;
    }
    if (*(unsigned char *)(v0 + 114)) {
      uint64_t v8 = v7;
    }
    else {
      uint64_t v8 = 0x646574756DLL;
    }
    if (*(unsigned char *)(v0 + 114)) {
      unint64_t v9 = v6;
    }
    else {
      unint64_t v9 = 0xE500000000000000;
    }
    if (v4 == v8 && v5 == v9)
    {
      swift_bridgeObjectRelease_n();
LABEL_22:
      return MEMORY[0x270FA2498](sub_251BF22F0, 0, 0);
    }
    char v10 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_22;
    }
  }
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_251BF22F0()
{
  *(void *)(v0 + 104) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251BF237C, v2, v1);
}

uint64_t sub_251BF237C()
{
  __int16 v1 = *(unsigned __int8 *)(v0 + 113);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 64);
  swift_release();
  __int16 v4 = v2 == 2;
  if (v2 == 3) {
    __int16 v4 = 2;
  }
  __int16 v5 = v4 | (v1 << 8);
  swift_getKeyPath();
  uint64_t v6 = swift_task_alloc();
  *(void *)(v6 + 16) = v3;
  *(_WORD *)(v6 + 24) = v5;
  *(void *)(v0 + 40) = v3;
  sub_251F34F00();
  swift_release();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_251BF248C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[10] = a3;
  v4[11] = a4;
  v4[9] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  v4[12] = swift_task_alloc();
  v4[13] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251BF2538, a4, 0);
}

uint64_t sub_251BF2538()
{
  unint64_t v1 = **(void **)(v0 + 80);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_251F366C0();
    uint64_t v2 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    id v23 = *(uint64_t (**)(void))(v0 + 8);
    return v23();
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_17;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v4 = 0;
    unint64_t v24 = v1 & 0xC000000000000001;
    uint64_t v25 = v2;
    unint64_t v26 = v1;
    while (1)
    {
      if (v24) {
        id v6 = (id)MEMORY[0x2533AB3A0](v4, v1);
      }
      else {
        id v6 = *(id *)(v1 + 8 * v4 + 32);
      }
      uint64_t v7 = v6;
      uint64_t v9 = *(void *)(v0 + 96);
      uint64_t v8 = *(void *)(v0 + 104);
      uint64_t v10 = sub_251F35CD0();
      uint64_t v11 = *(void *)(v10 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v8, 1, 1, v10);
      uint64_t v12 = swift_allocObject();
      swift_weakInit();
      uint64_t v13 = (void *)swift_allocObject();
      v13[2] = 0;
      uint64_t v14 = v13 + 2;
      v13[3] = 0;
      v13[4] = v12;
      v13[5] = v7;
      sub_251A1B128(v8, v9, &qword_26B220BB0);
      LODWORD(v8) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
      id v15 = v7;
      uint64_t v16 = *(void *)(v0 + 96);
      if (v8 == 1)
      {
        sub_251A1B064(*(void *)(v0 + 96), &qword_26B220BB0);
        if (!*v14) {
          goto LABEL_13;
        }
      }
      else
      {
        sub_251F35CC0();
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v16, v10);
        if (!*v14)
        {
LABEL_13:
          uint64_t v17 = 0;
          uint64_t v19 = 0;
          goto LABEL_14;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v17 = sub_251F35C00();
      uint64_t v19 = v18;
      swift_unknownObjectRelease();
LABEL_14:
      uint64_t v20 = **(void **)(v0 + 72);
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = &unk_269B9FEE8;
      *(void *)(v21 + 24) = v13;
      uint64_t v22 = v19 | v17;
      if (v19 | v17)
      {
        uint64_t v22 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v17;
        *(void *)(v0 + 40) = v19;
      }
      ++v4;
      uint64_t v5 = *(void *)(v0 + 104);
      *(void *)(v0 + 48) = 1;
      *(void *)(v0 + 56) = v22;
      *(void *)(v0 + 64) = v20;
      swift_task_create();

      swift_release();
      sub_251A1B064(v5, &qword_26B220BB0);
      unint64_t v1 = v26;
      if (v25 == v4) {
        goto LABEL_17;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_251BF28AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 48) = a5;
  return MEMORY[0x270FA2498](sub_251BF28CC, 0, 0);
}

uint64_t sub_251BF28CC()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[7] = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[8] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_251BF29C0;
    uint64_t v3 = v0[6];
    return sub_251BF2AD0(v3);
  }
  else
  {
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_251BF29C0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_251BF2AD0(uint64_t a1)
{
  v2[216] = v1;
  v2[215] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2203A0);
  v2[217] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251BF2B68, v1, 0);
}

uint64_t sub_251BF2B68()
{
  uint64_t v1 = (void *)v0[215];
  uint64_t v2 = swift_allocObject();
  v0[218] = v2;
  *(void *)(v2 + 16) = v1;
  id v3 = v1;
  swift_retain();
  swift_asyncLet_begin();
  uint64_t v4 = swift_allocObject();
  v0[219] = v4;
  *(void *)(v4 + 16) = v3;
  id v5 = v3;
  swift_retain();
  swift_asyncLet_begin();
  return MEMORY[0x270FA23E0](v0 + 82, v0 + 226, sub_251BF2CB8, v0 + 186);
}

uint64_t sub_251BF2CB8()
{
  *(unsigned char *)(v0 + 1809) = *(unsigned char *)(v0 + 1808);
  return MEMORY[0x270FA23E0](v0 + 16, v0 + 1704, sub_251BF2CE0, v0 + 1552);
}

uint64_t sub_251BF2CE0()
{
  return MEMORY[0x270FA2498](sub_251BF2CFC, *(void *)(v0 + 1728), 0);
}

uint64_t sub_251BF2CFC()
{
  uint64_t v34 = v0;
  int v1 = *(unsigned __int8 *)(v0 + 1809);
  uint64_t v2 = *(void *)(v0 + 1704);
  uint64_t v3 = qword_270262E98;
  *(void *)(v0 + 1592) = sub_2519F95BC(MEMORY[0x263F8EE78]);
  *(unsigned char *)(v0 + 1600) = v3 & 1;
  *(void *)(v0 + 1608) = v3;
  if (v1 == 1)
  {
    id v4 = objc_msgSend(*(id *)(v0 + 1720), sel_mute);
    if (v4)
    {
      id v5 = v4;
      id v6 = objc_msgSend(v4, sel_service);

      if (v6)
      {
        *(void *)(v0 + 1360) = MEMORY[0x263F8D4F8];
        *(unsigned char *)(v0 + 1336) = 0;
        LOBYTE(v33[0]) = 84;
        id v7 = objc_msgSend(v6, sel_uniqueIdentifier);
        uint64_t v8 = sub_251F34DA0();
        uint64_t v9 = *(void *)(v8 - 8);
        uint64_t v10 = swift_task_alloc();
        sub_251F34D80();

        CharacteristicValueSet.add(value:for:on:)(v0 + 1336, (unsigned __int8 *)v33, v10);
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v8);

        swift_task_dealloc();
        __swift_destroy_boxed_opaque_existential_0(v0 + 1336);
      }
    }
  }
  if (v2 <= 49
    && (id v11 = objc_msgSend(*(id *)(v0 + 1720), sel_volume)) != 0
    && (v12 = v11, id v13 = objc_msgSend(v11, sel_service), v12, v13))
  {
    *(void *)(v0 + 1392) = MEMORY[0x263F8D6C8];
    *(void *)(v0 + 1368) = 50;
    LOBYTE(v33[0]) = -86;
    id v14 = objc_msgSend(v13, sel_uniqueIdentifier);
    uint64_t v15 = sub_251F34DA0();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = swift_task_alloc();
    sub_251F34D80();

    CharacteristicValueSet.add(value:for:on:)(v0 + 1368, (unsigned __int8 *)v33, v17);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v15);

    swift_task_dealloc();
    __swift_destroy_boxed_opaque_existential_0(v0 + 1368);
    if (!*(void *)(*(void *)(v0 + 1592) + 16))
    {
LABEL_9:
      swift_bridgeObjectRelease();
      return MEMORY[0x270FA23D8](v0 + 16, v0 + 1704, sub_251BF32DC, v0 + 1616);
    }
  }
  else if (!*(void *)(*(void *)(v0 + 1592) + 16))
  {
    goto LABEL_9;
  }
  if (qword_269B9C348 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_251F350A0();
  __swift_project_value_buffer(v18, (uint64_t)qword_269B9FFA8);
  swift_retain_n();
  uint64_t v19 = sub_251F35080();
  os_log_type_t v20 = sub_251F35FD0();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v22 = *(void *)(v0 + 1728);
  if (v21)
  {
    uint64_t v23 = swift_slowAlloc();
    unint64_t v24 = (void *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    v33[0] = v32;
    *(_DWORD *)uint64_t v23 = 138412546;
    *(void *)(v0 + 1712) = v22;
    swift_retain();
    sub_251F361D0();
    *unint64_t v24 = v22;
    swift_release_n();
    *(_WORD *)(v23 + 12) = 2080;
    swift_beginAccess();
    uint64_t v25 = *(void *)(v0 + 1592);
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_251AF15F8(0, 0xE000000000000000, v25);
    unint64_t v28 = v27;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 1656) = sub_251A00E84(v26, v28, v33);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v19, v20, "%@ writing audio characteristics %s", (uint8_t *)v23, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v24, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v32, -1, -1);
    MEMORY[0x2533AC760](v23, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  *(void *)(v0 + 1760) = sub_251F35C80();
  *(void *)(v0 + 1768) = sub_251F35C70();
  uint64_t v30 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251BF3394, v30, v29);
}

uint64_t sub_251BF32DC()
{
  return MEMORY[0x270FA2498](sub_251BF32F8, *(void *)(v0 + 1728), 0);
}

uint64_t sub_251BF32F8()
{
  swift_release();
  return MEMORY[0x270FA23D8](v0 + 656, v0 + 1808, sub_251BF3378, v0 + 1296);
}

uint64_t sub_251BF3378()
{
  return MEMORY[0x270FA2498](sub_251BF7248, *(void *)(v0 + 1728), 0);
}

uint64_t sub_251BF3394()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 1728);
  return MEMORY[0x270FA2498](sub_251BF342C, v1, 0);
}

uint64_t sub_251BF342C()
{
  *(void *)(v0 + 1776) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251BF34B8, v2, v1);
}

uint64_t sub_251BF34B8()
{
  uint64_t v1 = *(void *)(v0 + 1728);
  swift_release();
  *(void *)(v0 + 1784) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251BF3530, v1, 0);
}

uint64_t sub_251BF3530()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 1592);
  *(void *)(v0 + 1792) = v1;
  char v2 = *(unsigned char *)(v0 + 1600);
  uint64_t v3 = *(void *)(v0 + 1608);
  *(void *)(v0 + 1400) = v1;
  *(unsigned char *)(v0 + 1408) = v2;
  *(void *)(v0 + 1416) = v3;
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 1800) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_251BF3618;
  uint64_t v5 = *(void *)(v0 + 1736);
  return DataModel.write(characteristicValueSet:home:)(v5, (uint64_t *)(v0 + 1400), 0);
}

uint64_t sub_251BF3618()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1736);
  uint64_t v2 = *(void *)(*(void *)v0 + 1728);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_251A1B064(v1, &qword_26B2203A0);
  return MEMORY[0x270FA2498](sub_251BF3770, v2, 0);
}

uint64_t sub_251BF3770()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA23D8](v0 + 16, v0 + 1704, sub_251BF37F0, v0 + 1424);
}

uint64_t sub_251BF37F0()
{
  return MEMORY[0x270FA2498](sub_251BF380C, *(void *)(v0 + 1728), 0);
}

uint64_t sub_251BF380C()
{
  swift_release();
  return MEMORY[0x270FA23D8](v0 + 656, v0 + 1808, sub_251BF388C, v0 + 1664);
}

uint64_t sub_251BF388C()
{
  return MEMORY[0x270FA2498](sub_251BF38A8, *(void *)(v0 + 1728), 0);
}

uint64_t sub_251BF38A8()
{
  swift_release_n();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251BF3924(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return MEMORY[0x270FA2498](sub_251BF3944, 0, 0);
}

uint64_t sub_251BF3944()
{
  id v1 = objc_msgSend(*(id *)(v0 + 56), sel_mute);
  *(void *)(v0 + 64) = v1;
  if (v1)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 72) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_251BF3A3C;
    return HMCharacteristic.fetchedValue()(v0 + 16);
  }
  else
  {
    **(unsigned char **)(v0 + 48) = 0;
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_251BF3A3C()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251BF3B38, 0, 0);
}

uint64_t sub_251BF3B38()
{
  if (*(void *)(v0 + 40))
  {
    char v1 = swift_dynamicCast();
    uint64_t v2 = *(void **)(v0 + 64);
    if (v1)
    {
      char v3 = *(unsigned char *)(v0 + 80);

      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v4 = *(void **)(v0 + 64);
    sub_251A1B064(v0 + 16, &qword_26B21E190);
  }
  char v3 = 0;
LABEL_7:
  **(unsigned char **)(v0 + 48) = v3;
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_251BF3C08(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return MEMORY[0x270FA2498](sub_251BF3C28, 0, 0);
}

uint64_t sub_251BF3C28()
{
  id v1 = objc_msgSend(*(id *)(v0 + 64), sel_volume);
  *(void *)(v0 + 72) = v1;
  if (v1)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_251BF3D20;
    return HMCharacteristic.fetchedValue()(v0 + 16);
  }
  else
  {
    **(void **)(v0 + 56) = 0;
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_251BF3D20()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251BF3E1C, 0, 0);
}

uint64_t sub_251BF3E1C()
{
  if (*(void *)(v0 + 40))
  {
    char v1 = swift_dynamicCast();
    uint64_t v2 = *(void **)(v0 + 72);
    if (v1)
    {
      uint64_t v3 = *(void *)(v0 + 48);

      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v4 = *(void **)(v0 + 72);
    sub_251A1B064(v0 + 16, &qword_26B21E190);
  }
  uint64_t v3 = 0;
LABEL_7:
  **(void **)(v0 + 56) = v3;
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_251BF3EEC(uint64_t a1)
{
  *(void *)(v1 + 80) = a1;
  return MEMORY[0x270FA2498](sub_251BF3F0C, 0, 0);
}

uint64_t sub_251BF3F0C()
{
  id v13 = v0;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[11] = Strong;
  if (Strong)
  {
    uint64_t v2 = Strong;
    if (qword_269B9C348 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_251F350A0();
    __swift_project_value_buffer(v3, (uint64_t)qword_269B9FFA8);
    swift_retain_n();
    uint64_t v4 = sub_251F35080();
    os_log_type_t v5 = sub_251F35FD0();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v12 = v11;
      *(_DWORD *)uint64_t v6 = 138412546;
      v0[8] = v2;
      swift_retain();
      sub_251F361D0();
      *uint64_t v10 = v2;
      swift_release_n();
      *(_WORD *)(v6 + 12) = 2080;
      v0[9] = sub_251A00E84(0xD000000000000018, 0x8000000251F6CDC0, &v12);
      sub_251F361D0();
      _os_log_impl(&dword_2519F3000, v4, v5, "%@ %s taking snapshot", (uint8_t *)v6, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v10, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v11, -1, -1);
      MEMORY[0x2533AC760](v6, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    uint64_t v9 = sub_251F34D20();
    v0[12] = v9;
    v0[13] = *(void *)(v9 - 8);
    v0[14] = swift_task_alloc();
    sub_251F34CF0();
    return MEMORY[0x270FA2498](sub_251BF4240, v2, 0);
  }
  else
  {
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_251BF4240()
{
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v4 = v0[11];
  uint64_t v3 = v0[12];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  uint64_t v5 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v5, v1, v3);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v5, 0, 1, v3);
  uint64_t v6 = v4 + OBJC_IVAR____TtC13HomeDataModel16CameraController_previousSnapshotCallTime;
  swift_beginAccess();
  sub_251BF71E0(v5, v6);
  swift_endAccess();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251BF4388, 0, 0);
}

uint64_t sub_251BF4388()
{
  id v1 = objc_msgSend(*(id *)(*(void *)(v0 + 88) + OBJC_IVAR____TtC13HomeDataModel16CameraController_cameraProfile), sel_snapshotControl);
  objc_msgSend(v1, sel_takeSnapshot);
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_251BF4420(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v9 + 64) = a9;
  *(void *)(v9 + 72) = v15;
  *(void *)(v9 + 48) = a7;
  *(void *)(v9 + 56) = a8;
  *(double *)(v9 + 40) = a1;
  *(unsigned char *)(v9 + 364) = a6;
  *(void *)(v9 + 32) = a5;
  uint64_t v11 = sub_251F365F0();
  *(void *)(v9 + 80) = v11;
  *(void *)(v9 + 88) = *(void *)(v11 - 8);
  *(void *)(v9 + 96) = swift_task_alloc();
  *(void *)(v9 + 104) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FF40);
  *(void *)(v9 + 112) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FF48);
  *(void *)(v9 + 120) = swift_task_alloc();
  *(void *)(v9 + 128) = swift_task_alloc();
  uint64_t v12 = sub_251F36610();
  *(void *)(v9 + 136) = v12;
  *(void *)(v9 + 144) = *(void *)(v12 - 8);
  *(void *)(v9 + 152) = swift_task_alloc();
  *(void *)(v9 + 160) = swift_task_alloc();
  *(void *)(v9 + 168) = swift_task_alloc();
  *(void *)(v9 + 176) = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FF50);
  *(void *)(v9 + 184) = swift_task_alloc();
  *(void *)(v9 + 192) = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FF58);
  *(void *)(v9 + 200) = swift_task_alloc();
  *(void *)(v9 + 208) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251BF466C, a8, 0);
}

uint64_t sub_251BF466C()
{
  uint64_t v18 = v0;
  if ((*(unsigned char *)(v0 + 364) & 1) != 0 || *(double *)(v0 + 32) >= *(double *)(v0 + 40))
  {
    if (qword_269B9C348 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_251F350A0();
    __swift_project_value_buffer(v6, (uint64_t)qword_269B9FFA8);
    swift_retain_n();
    uint64_t v7 = sub_251F35080();
    os_log_type_t v8 = sub_251F35FD0();
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v10 = *(void *)(v0 + 56);
    if (v9)
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v12 = (void *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v17 = v13;
      *(_DWORD *)uint64_t v11 = 138412546;
      *(void *)(v0 + 16) = v10;
      swift_retain();
      sub_251F361D0();
      void *v12 = v10;
      swift_release_n();
      *(_WORD *)(v11 + 12) = 2080;
      *(void *)(v0 + 24) = sub_251A00E84(0xD000000000000018, 0x8000000251F6CDC0, &v17);
      sub_251F361D0();
      _os_log_impl(&dword_2519F3000, v7, v8, "%@ %s starting periodic snapshots", (uint8_t *)v11, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v12, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v13, -1, -1);
      MEMORY[0x2533AC760](v11, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t v16 = (uint64_t (*)(void))(*(void *)(v0 + 64) + **(int **)(v0 + 64));
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 232) = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_251BF4F70;
    return v16();
  }
  else
  {
    uint64_t v1 = sub_251F36E30();
    uint64_t v3 = v2;
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_269BA29F0 + dword_269BA29F0);
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 216) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_251BF4A00;
    return v15(v1, v3, 0, 0, 1);
  }
}

uint64_t sub_251BF4A00()
{
  uint64_t v2 = (void *)*v1;
  v2[28] = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v2[1];
    return v3();
  }
  else
  {
    uint64_t v5 = v2[7];
    return MEMORY[0x270FA2498](sub_251BF4BD8, v5, 0);
  }
}

uint64_t sub_251BF4BD8()
{
  uint64_t v15 = v0;
  uint64_t v1 = v0[28];
  sub_251F35D90();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    if (qword_269B9C348 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_251F350A0();
    __swift_project_value_buffer(v4, (uint64_t)qword_269B9FFA8);
    swift_retain_n();
    uint64_t v5 = sub_251F35080();
    os_log_type_t v6 = sub_251F35FD0();
    BOOL v7 = os_log_type_enabled(v5, v6);
    uint64_t v8 = v0[7];
    if (v7)
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v14 = v11;
      *(_DWORD *)uint64_t v9 = 138412546;
      v0[2] = v8;
      swift_retain();
      sub_251F361D0();
      *uint64_t v10 = v8;
      swift_release_n();
      *(_WORD *)(v9 + 12) = 2080;
      v0[3] = sub_251A00E84(0xD000000000000018, 0x8000000251F6CDC0, &v14);
      sub_251F361D0();
      _os_log_impl(&dword_2519F3000, v5, v6, "%@ %s starting periodic snapshots", (uint8_t *)v9, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v10, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v11, -1, -1);
      MEMORY[0x2533AC760](v9, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t v13 = (uint64_t (*)(void))(v0[8] + *(int *)v0[8]);
    uint64_t v12 = (void *)swift_task_alloc();
    v0[29] = v12;
    void *v12 = v0;
    v12[1] = sub_251BF4F70;
    return v13();
  }
}

uint64_t sub_251BF4F70()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251BF5080, v1, 0);
}

uint64_t sub_251BF5080()
{
  uint64_t v1 = v0[25];
  uint64_t v27 = v0[26];
  uint64_t v2 = v0[23];
  uint64_t v22 = v0[21];
  uint64_t v23 = (int *)v0[24];
  uint64_t v3 = v0[17];
  uint64_t v4 = (void *)v0[18];
  uint64_t v5 = v0[11];
  uint64_t v24 = v0[10];
  uint64_t v20 = v0[6];
  uint64_t v21 = v0[22];
  uint64_t v25 = sub_251F36E30();
  uint64_t v7 = v6;
  uint64_t v8 = (void (*)(uint64_t, uint64_t, uint64_t))v4[2];
  v0[30] = v8;
  v0[31] = (unint64_t)(v4 + 2) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v8(v2, v20, v3);
  uint64_t v26 = v2;
  uint64_t v9 = (uint64_t *)(v2 + *(int *)(v21 + 36));
  *uint64_t v9 = v25;
  v9[1] = v7;
  uint64_t v10 = v2 + *(int *)(v21 + 40);
  *(void *)uint64_t v10 = 0;
  *(void *)(v10 + 8) = 0;
  *(unsigned char *)(v10 + 16) = 1;
  uint64_t v11 = v2;
  uint64_t v12 = v3;
  v8(v22, v11, v3);
  uint64_t v13 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v4[7];
  v0[32] = v13;
  v0[33] = (unint64_t)(v4 + 7) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v13(v1, 1, 1, v12);
  uint64_t v14 = v1 + v23[11];
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v0[34] = v15;
  v0[35] = (v5 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v15(v14, 1, 1, v24);
  sub_251A1B064(v1, &qword_269B9FF40);
  uint64_t v16 = (void (*)(uint64_t, uint64_t, uint64_t))v4[4];
  v0[36] = v16;
  v0[37] = (unint64_t)(v4 + 4) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v16(v1, v22, v12);
  v13(v1, 0, 1, v12);
  uint64_t v17 = (uint64_t *)(v1 + v23[9]);
  uint64_t *v17 = v25;
  v17[1] = v7;
  uint64_t v18 = v1 + v23[10];
  *(void *)uint64_t v18 = 0;
  *(void *)(v18 + 8) = 0;
  *(unsigned char *)(v18 + 16) = 1;
  sub_251BF7130(v1, v27);
  sub_251A1B064(v26, &qword_269B9FF50);
  sub_251BF7198(&qword_269B9FEC8, (void (*)(uint64_t))type metadata accessor for CameraController);
  return MEMORY[0x270FA2498](sub_251BF52DC, 0, 0);
}

uint64_t sub_251BF52DC()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 112);
  sub_251A1B128(*(void *)(v0 + 208), v3, &qword_269B9FF40);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_251A1B064(*(void *)(v0 + 112), &qword_269B9FF40);
    uint64_t v4 = *(void *)(v0 + 56);
    (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 272))(*(void *)(v0 + 128), 1, 1, *(void *)(v0 + 80));
    return MEMORY[0x270FA2498](sub_251BF59A8, v4, 0);
  }
  else
  {
    uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 240);
    uint64_t v6 = *(void *)(v0 + 208);
    uint64_t v7 = *(void *)(v0 + 192);
    uint64_t v8 = *(void *)(v0 + 152);
    uint64_t v9 = *(void *)(v0 + 160);
    uint64_t v10 = *(void *)(v0 + 136);
    uint64_t v11 = *(void *)(v0 + 120);
    uint64_t v12 = *(void *)(v0 + 80);
    uint64_t v13 = *(void *)(v0 + 88);
    (*(void (**)(uint64_t, void, uint64_t))(v0 + 288))(v9, *(void *)(v0 + 112), v10);
    uint64_t v14 = *(int *)(v7 + 44);
    *(_DWORD *)(v0 + 360) = v14;
    sub_251A1B128(v6 + v14, v11, &qword_269B9FF48);
    v5(v8, v9, v10);
    int v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
    uint64_t v17 = *(void *)(v0 + 144);
    uint64_t v16 = *(void *)(v0 + 152);
    uint64_t v18 = *(void *)(v0 + 136);
    uint64_t v19 = *(void *)(v0 + 120);
    uint64_t v20 = *(void *)(v0 + 96);
    if (v15 == 1)
    {
      sub_251BF7198(&qword_269B9FF60, MEMORY[0x263F8F740]);
      sub_251F36BB0();
      uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      v21(v16, v18);
      sub_251A1B064(v19, &qword_269B9FF48);
    }
    else
    {
      uint64_t v22 = *(void *)(v0 + 80);
      uint64_t v23 = *(void *)(v0 + 88);
      uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      v21(*(void *)(v0 + 152), *(void *)(v0 + 136));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v20, v19, v22);
    }
    *(void *)(v0 + 304) = v21;
    uint64_t v24 = *(void *)(v0 + 208);
    uint64_t v25 = *(void *)(v0 + 192);
    uint64_t v26 = *(void *)(v0 + 96);
    uint64_t v27 = *(void *)(v0 + 80);
    uint64_t v28 = *(void *)(v0 + 88);
    sub_251BF7198(&qword_269B9FF68, MEMORY[0x263F8F728]);
    sub_251F365E0();
    uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    *(void *)(v0 + 312) = v29;
    *(void *)(v0 + 320) = (v28 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v29(v26, v27);
    uint64_t v30 = v24 + *(int *)(v25 + 40);
    uint64_t v31 = sub_251BF7198(&qword_269B9FF60, MEMORY[0x263F8F740]);
    *(void *)(v0 + 328) = v31;
    uint64_t v32 = (void *)swift_task_alloc();
    *(void *)(v0 + 336) = v32;
    *uint64_t v32 = v0;
    v32[1] = sub_251BF5664;
    uint64_t v33 = *(void *)(v0 + 136);
    uint64_t v34 = *(void *)(v0 + 104);
    return MEMORY[0x270FA2380](v34, v30, v33, v31);
  }
}

uint64_t sub_251BF5664()
{
  *(void *)(*(void *)v1 + 344) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_251BF58A8;
  }
  else {
    uint64_t v2 = sub_251BF5778;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251BF5778()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 304);
  uint64_t v2 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 272);
  uint64_t v3 = *(void *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 208) + *(int *)(v0 + 360);
  uint64_t v7 = *(void *)(v0 + 80);
  uint64_t v8 = *(void *)(v0 + 88);
  sub_251F36BB0();
  v1(v3, v4);
  sub_251A1B064(v6, &qword_269B9FF48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v6, v5, v7);
  v2(v6, 0, 1, v7);
  uint64_t v9 = *(void *)(v0 + 56);
  (*(void (**)(void, void, uint64_t, void))(v0 + 272))(*(void *)(v0 + 128), 0, 1, *(void *)(v0 + 80));
  return MEMORY[0x270FA2498](sub_251BF59A8, v9, 0);
}

uint64_t sub_251BF58A8()
{
  uint64_t v1 = *(void **)(v0 + 344);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(v0 + 304);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 256);
  uint64_t v4 = *(void *)(v0 + 208);
  uint64_t v5 = *(void *)(v0 + 160);
  uint64_t v6 = *(void *)(v0 + 136);
  (*(void (**)(void, void))(v0 + 312))(*(void *)(v0 + 104), *(void *)(v0 + 80));
  v2(v5, v6);

  sub_251A1B064(v4, &qword_269B9FF40);
  v3(v4, 1, 1, v6);
  uint64_t v7 = *(void *)(v0 + 56);
  (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 272))(*(void *)(v0 + 128), 1, 1, *(void *)(v0 + 80));
  return MEMORY[0x270FA2498](sub_251BF59A8, v7, 0);
}

uint64_t sub_251BF59A8()
{
  if ((*(unsigned int (**)(void, uint64_t, void))(v0[11] + 48))(v0[16], 1, v0[10]) == 1)
  {
    uint64_t v1 = v0[26];
    uint64_t v2 = &qword_269B9FF58;
LABEL_5:
    sub_251A1B064(v1, v2);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  if (sub_251F35D80())
  {
    uint64_t v3 = v0[16];
    sub_251A1B064(v0[26], &qword_269B9FF58);
    uint64_t v2 = &qword_269B9FF48;
    uint64_t v1 = v3;
    goto LABEL_5;
  }
  uint64_t v7 = (uint64_t (*)(void))(v0[8] + *(int *)v0[8]);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[44] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_251BF5BAC;
  return v7();
}

uint64_t sub_251BF5BAC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251BF5CBC, v1, 0);
}

uint64_t sub_251BF5CBC()
{
  sub_251A1B064(*(void *)(v0 + 128), &qword_269B9FF48);
  return MEMORY[0x270FA2498](sub_251BF52DC, 0, 0);
}

char *sub_251BF5D2C(void (*a1)(void, void))
{
  uint64_t v2 = v1;
  uint64_t v57 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v3 - 8);
  id v66 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E6C0);
  uint64_t v68 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  unint64_t v60 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FE60);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E6C8);
  uint64_t v67 = *(void *)(v10 - 8);
  uint64_t v11 = v67;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v55 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FE68);
  uint64_t v64 = *(void *)(v17 - 8);
  uint64_t v65 = v17;
  uint64_t v63 = *(void *)(v64 + 64);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  os_log_t v62 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  char v59 = (char *)&v55 - v20;
  swift_defaultActor_initialize();
  *(void *)((char *)v2 + OBJC_IVAR____TtC13HomeDataModel16CameraController_snapshotTimer) = 0;
  uint64_t v21 = (char *)v2 + OBJC_IVAR____TtC13HomeDataModel16CameraController_previousSnapshotCallTime;
  uint64_t v22 = sub_251F34D20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
  *((unsigned char *)v2 + OBJC_IVAR____TtC13HomeDataModel16CameraController_isStartingStream) = 0;
  *((unsigned char *)v2 + OBJC_IVAR____TtC13HomeDataModel16CameraController_isStoppingStream) = 0;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F8F580], v6);
  swift_retain();
  sub_251F35CE0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v23 = v57;
  *(void *)((char *)v2 + OBJC_IVAR____TtC13HomeDataModel16CameraController_cameraProfile) = v57;
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  uint64_t v58 = v16;
  v24((char *)v2 + OBJC_IVAR____TtC13HomeDataModel16CameraController_updates, v16, v10);
  id v25 = objc_msgSend(v23, sel_uniqueIdentifier);
  uint64_t v26 = sub_251F34DA0();
  MEMORY[0x270FA5388](v26 - 8);
  uint64_t v28 = (char *)&v55 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  uint64_t v29 = v14;
  uint64_t v30 = v16;
  uint64_t v31 = v10;
  v24(v14, v30, v10);
  type metadata accessor for CameraController.State();
  swift_allocObject();
  v2[14] = sub_251D36210((uint64_t)v28, (uint64_t)v14);
  swift_release();
  uint64_t v32 = (objc_class *)type metadata accessor for CameraController();
  v73.receiver = v2;
  v73.super_class = v32;
  uint64_t v33 = (char *)objc_msgSendSuper2(&v73, sel_init);
  uint64_t v34 = &v33[OBJC_IVAR____TtC13HomeDataModel16CameraController_updates];
  uint64_t v69 = 0;
  uint64_t v70 = 0;
  uint64_t v71 = 0;
  char v72 = -126;
  uint64_t v35 = v33;
  uint64_t v36 = v60;
  uint64_t v37 = v31;
  sub_251F35CF0();
  __int16 v38 = *(void (**)(char *, uint64_t))(v68 + 8);
  v68 += 8;
  uint64_t v39 = v61;
  v38(v36, v61);
  v24(v29, v34, v37);
  uint64_t v40 = *((void *)v35 + 14);
  swift_getKeyPath();
  uint64_t v69 = v40;
  sub_251BF7198(&qword_269B9FE70, (void (*)(uint64_t))type metadata accessor for CameraController.State);
  sub_251F34F10();
  swift_release();
  swift_beginAccess();
  uint64_t v41 = *(unsigned __int16 *)(v40 + 16);
  uint64_t v70 = 0;
  uint64_t v71 = 0;
  uint64_t v69 = v41;
  char v72 = 0;
  uint64_t v56 = v37;
  sub_251F35CF0();
  id v42 = *(void (**)(void, void))(v67 + 8);
  v67 += 8;
  uint64_t v57 = v42;
  v42(v29, v37);
  v38(v36, v39);
  uint64_t v43 = (uint64_t)v66;
  sub_251F35C90();
  uint64_t v44 = sub_251F35CD0();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v43, 0, 1, v44);
  uint64_t v45 = swift_allocObject();
  uint64_t v46 = v35;
  swift_weakInit();
  uint64_t v47 = v64;
  uint64_t v48 = v65;
  uint64_t v49 = v62;
  uint64_t v50 = v59;
  (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v62, v59, v65);
  unint64_t v51 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  unint64_t v52 = (v63 + v51 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v53 = swift_allocObject();
  *(void *)(v53 + 16) = 0;
  *(void *)(v53 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v47 + 32))(v53 + v51, v49, v48);
  *(void *)(v53 + v52) = v45;
  sub_251B40114(v43, (uint64_t)&unk_269B9FE80, v53);

  swift_release();
  sub_251A1B064(v43, &qword_26B220BB0);
  v57(v58, v56);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v50, v48);
  return v46;
}

uint64_t sub_251BF64D0()
{
  return sub_251BF6DDC((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA96C0]);
}

uint64_t sub_251BF6500()
{
  return type metadata accessor for CameraController();
}

uint64_t type metadata accessor for CameraController()
{
  uint64_t result = qword_269B9FE48;
  if (!qword_269B9FE48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_251BF6554()
{
  sub_251BF6684();
  if (v0 <= 0x3F)
  {
    sub_251BBBE60();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for CameraController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CameraController);
}

uint64_t dispatch thunk of CameraController.__allocating_init(cameraProfile:)()
{
  return (*(uint64_t (**)(void))(v0 + 240))();
}

void sub_251BF6684()
{
  if (!qword_269B9FE58)
  {
    unint64_t v0 = sub_251F35D10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269B9FE58);
    }
  }
}

uint64_t sub_251BF66E4()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_251BF671C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FE68);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_251BF6808(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9FE68) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_251AB3DD4;
  return sub_251BEB6C8(a1, v6, v7, v8, v9);
}

void sub_251BF6930(void *a1, void *a2, void *a3, char a4)
{
  if (a4 <= 0xFBu) {
    sub_251AA10CC(a1, a2, a3, a4);
  }
}

uint64_t sub_251BF6954()
{
  return sub_251D35EAC(v0[2], v0[3], v0[4]);
}

uint64_t sub_251BF6974()
{
  return sub_251D35FC4(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_251BF699C()
{
  return sub_251D36200(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void sub_251BF69C4()
{
  sub_251D35840(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_251BF69E8()
{
  sub_251D35A5C(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_251BF6A04(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_251AB3A34;
  return sub_251BF248C(a1, a2, v7, v6);
}

uint64_t sub_251BF6AB8()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_251BF6B00()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_251AB3DD4;
  *(_OWORD *)(v2 + 40) = v3;
  return MEMORY[0x270FA2498](sub_251BF28CC, 0, 0);
}

uint64_t sub_251BF6BAC()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_251BF6BE4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_251BF6C1C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_251AB3A34;
  v5[6] = a1;
  v5[7] = v4;
  return MEMORY[0x270FA2498](sub_251BF3944, 0, 0);
}

uint64_t sub_251BF6CCC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_251AB3DD4;
  v5[7] = a1;
  v5[8] = v4;
  return MEMORY[0x270FA2498](sub_251BF3C28, 0, 0);
}

uint64_t sub_251BF6D7C()
{
  return sub_251D35410(*(void *)(v0 + 16), *(_WORD *)(v0 + 24));
}

unint64_t sub_251BF6D9C()
{
  unint64_t result = qword_269B9D238;
  if (!qword_269B9D238)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269B9D238);
  }
  return result;
}

uint64_t sub_251BF6DDC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251BF6E24()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_251AB3DD4;
  v2[10] = v0;
  return MEMORY[0x270FA2498](sub_251BF3F0C, 0, 0);
}

uint64_t sub_251BF6ECC()
{
  uint64_t v1 = sub_251F36610();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, v6 + 16, v5);
}

uint64_t sub_251BF6FC8(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_251F36610() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v9 = *(void *)(v1 + 32);
  char v10 = *(unsigned char *)(v1 + 40);
  double v11 = *(double *)(v1 + 48);
  uint64_t v12 = *(void *)(v1 + v6);
  uint64_t v13 = v1 + v5;
  uint64_t v14 = *(void *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v15;
  void *v15 = v2;
  v15[1] = sub_251AB3DD4;
  return sub_251BF4420(v11, a1, v7, v8, v9, v10, v13, v12, v14);
}

uint64_t sub_251BF7130(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FF58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251BF7198(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251BF71E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_251BF7254()
{
  uint64_t result = sub_251F35D40();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_251F35D10();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_251BF7358()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v2 = sub_251F35D40();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + *(void *)(*(void *)v0 + 112), v2);
  uint64_t v4 = v0 + *(void *)(*(void *)v0 + 120);
  uint64_t v5 = sub_251F35D10();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_251BF74B4()
{
  sub_251BF7358();
  return MEMORY[0x270FA2418](v0);
}

uint64_t type metadata accessor for AsyncStreamBatchManager()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_251BF74F8()
{
  return sub_251B42EB0();
}

uint64_t StaticService.accessoryControlCharacteristicStateString.getter()
{
  switch(*(unsigned char *)(v0 + *(int *)(type metadata accessor for StaticService() + 88)))
  {
    case 0xE:
    case 0x33:
    case 0x34:
      unsigned __int8 v40 = 40;
      StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v40);
      unsigned __int8 v40 = -98;
      Swift::Int_optional v42 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v40);
      Swift::Int value = v42.value;
      Swift::Bool is_nil = v42.is_nil;
      unsigned __int8 v40 = 102;
      Swift::Int_optional v43 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v40);
      if (v43.is_nil) {
        Swift::Int v3 = 0;
      }
      else {
        Swift::Int v3 = v43.value;
      }
      uint64_t result = sub_251BFBF3C(value, is_nil, v3, v43.is_nil);
      break;
    case 0x13:
      unsigned __int8 v40 = 31;
      Swift::Int_optional v44 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v40);
      Swift::Bool v5 = v44.is_nil;
      if (v44.is_nil) {
        Swift::Int v6 = 0;
      }
      else {
        Swift::Int v6 = v44.value;
      }
      unsigned __int8 v40 = -107;
      Swift::Int_optional v45 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v40);
      if (v45.is_nil) {
        Swift::Int v7 = 0;
      }
      else {
        Swift::Int v7 = v45.value;
      }
      uint64_t result = sub_251BFC104(v6, v5, v7, v45.is_nil);
      break;
    case 0x1C:
      unsigned __int8 v40 = 105;
      char v31 = sub_251B457DC(&v40);
      unsigned __int8 v40 = 12;
      Swift::Int_optional v48 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v40);
      Swift::Int v32 = v48.value;
      Swift::Bool v33 = v48.is_nil;
      char v34 = StaticProfileBag.isNaturalLightSupported.getter();
      char v35 = StaticProfileBag.isNaturalLightEnabled.getter() & 1;
      uint64_t result = sub_251BFC474(v31, v32, v33, v34 & 1, v35);
      break;
    case 0x23:
      unsigned __int8 v40 = -96;
      Swift::Int_optional v8 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v40);
      *(_DWORD *)&v8.Swift::Bool is_nil = v8.is_nil;
      if (*(_DWORD *)&v8.is_nil) {
        v8.Swift::Int value = 0;
      }
      uint64_t result = sub_251BFC1AC(v8.value, v8.is_nil);
      break;
    case 0x2E:
      unsigned __int8 v40 = 41;
      uint64_t v39 = sub_251B46610(&v40);
      int v38 = v9 & 1;
      unsigned __int8 v40 = 44;
      uint64_t v37 = sub_251B46610(&v40);
      int v36 = v10 & 1;
      unsigned __int8 v40 = -104;
      Swift::Int_optional v46 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v40);
      Swift::Bool v11 = v46.is_nil;
      if (v46.is_nil) {
        Swift::Int v12 = 0;
      }
      else {
        Swift::Int v12 = v46.value;
      }
      unsigned __int8 v40 = 34;
      Swift::Int_optional v47 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v40);
      Swift::Bool v13 = v47.is_nil;
      if (v47.is_nil) {
        Swift::Int v14 = 0;
      }
      else {
        Swift::Int v14 = v47.value;
      }
      unsigned __int8 v40 = -94;
      uint64_t v15 = sub_251B46610(&v40);
      char v17 = v16 & 1;
      unsigned __int8 v40 = 55;
      uint64_t v18 = sub_251B46610(&v40);
      char v20 = v19 & 1;
      unsigned __int8 v40 = 29;
      uint64_t v21 = sub_251B46610(&v40);
      uint64_t result = sub_251BFC270(v39, v38, v37, v36, v12, v11, v14, v13, v23, v24, v25, v26, v27, v28, v29, v30, v15, v17, v18,
                 v20,
                 *(double *)&v21,
                 v22 & 1);
      break;
    default:
      uint64_t result = StaticService.tileCharacteristicStateString.getter();
      break;
  }
  return result;
}

uint64_t StaticService.tileCharacteristicStateString.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticService();
  uint64_t v3 = 0;
  uint64_t v4 = v2;
  switch(*(unsigned char *)(v0 + *(int *)(v2 + 88)))
  {
    case 3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FF70);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_251F3A500;
      char v16 = *(void **)(v0 + *(int *)(v4 + 112));
      uint64_t v127 = v16;
      unsigned __int8 v126 = -109;
      Swift::Int_optional v131 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v126);
      if (v131.is_nil) {
        goto LABEL_102;
      }
      if (v131.value == 1)
      {
        uint64_t v17 = 0xD00000000000002FLL;
        uint64_t v18 = "HFCharacteristicValueAirPurifierTargetStateAuto";
      }
      else
      {
        if (v131.value)
        {
LABEL_102:
          uint64_t v107 = 0;
          uint64_t v108 = 0;
          goto LABEL_107;
        }
        uint64_t v17 = 0xD000000000000031;
        uint64_t v18 = "HFCharacteristicValueAirPurifierTargetStateManual";
      }
      uint64_t v107 = static String.hfLocalized(_:)(v17, (unint64_t)(v18 - 32) | 0x8000000000000000);
      uint64_t v108 = v110;
LABEL_107:
      *(void *)(inited + 32) = v107;
      *(void *)(inited + 40) = v108;
      uint64_t v127 = v16;
      unsigned __int8 v126 = 30;
      Swift::Int_optional v152 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v126);
      if (v152.is_nil) {
        goto LABEL_112;
      }
      if (v152.value)
      {
        if (v152.value == 1)
        {
          uint64_t v111 = 0xD000000000000030;
          char v112 = "HFCharacteristicValueCurrentAirPurifierStateIdle";
        }
        else
        {
          if (v152.value != 2)
          {
LABEL_112:
            uint64_t v113 = 0;
            uint64_t v114 = 0;
            goto LABEL_121;
          }
          uint64_t v111 = 0xD000000000000032;
          char v112 = "HFCharacteristicValueCurrentAirPurifierStateActive";
        }
      }
      else
      {
        uint64_t v111 = 0xD000000000000034;
        char v112 = "HFCharacteristicValueCurrentAirPurifierStateInactive";
      }
      uint64_t v113 = static String.hfLocalized(_:)(v111, (unint64_t)(v112 - 32) | 0x8000000000000000);
      uint64_t v114 = v116;
LABEL_121:
      *(void *)(inited + 48) = v113;
      *(void *)(inited + 56) = v114;
      if (v108)
      {
        swift_bridgeObjectRetain();
        uint64_t v117 = sub_251F0E8B8(0, 1, 1, MEMORY[0x263F8EE78]);
        unint64_t v119 = v117[2];
        unint64_t v118 = v117[3];
        unint64_t v120 = v119 + 1;
        if (v119 >= v118 >> 1)
        {
          uint64_t v125 = sub_251F0E8B8((void *)(v118 > 1), v119 + 1, 1, v117);
          unint64_t v120 = v119 + 1;
          uint64_t v117 = v125;
        }
        v117[2] = v120;
        uint64_t v121 = &v117[2 * v119];
        v121[4] = v107;
        v121[5] = v108;
      }
      else
      {
        uint64_t v117 = (void *)MEMORY[0x263F8EE78];
      }
      if (v114)
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v117 = sub_251F0E8B8(0, v117[2] + 1, 1, v117);
        }
        unint64_t v123 = v117[2];
        unint64_t v122 = v117[3];
        if (v123 >= v122 >> 1) {
          uint64_t v117 = sub_251F0E8B8((void *)(v122 > 1), v123 + 1, 1, v117);
        }
        v117[2] = v123 + 1;
        uint64_t v124 = &v117[2 * v123];
        v124[4] = v113;
        v124[5] = v114;
      }
      swift_release();
      uint64_t v127 = v117;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAB0);
      sub_251BFC684();
      uint64_t v3 = sub_251F35620();
      swift_bridgeObjectRelease();
      return v3;
    case 4:
      uint64_t v127 = *(void **)(v0 + *(int *)(v2 + 112));
      unsigned __int8 v126 = 8;
      Swift::Int_optional v19 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v126);
      *(_DWORD *)&v19.BOOL is_nil = v19.is_nil;
      if (*(_DWORD *)&v19.is_nil) {
        v19.Swift::Int value = 0;
      }
      uint64_t v11 = sub_251BFA63C(v19.value, v19.is_nil);
      goto LABEL_116;
    case 9:
      uint64_t v127 = *(void **)(v0 + *(int *)(v2 + 112));
      unsigned __int8 v126 = 18;
      Swift::Int_optional v132 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v126);
      uint64_t v3 = 0;
      if (v132.is_nil || v132.value != 1) {
        return v3;
      }
      uint64_t v13 = 0xD000000000000036;
      Swift::Int v14 = "HFCharacteristicStateGroupedTitleCarbonDioxideDetected";
      goto LABEL_114;
    case 0xB:
      uint64_t v127 = *(void **)(v0 + *(int *)(v2 + 112));
      unsigned __int8 v126 = 28;
      Swift::Int_optional v133 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v126);
      if (v133.is_nil) {
        goto LABEL_91;
      }
      if (v133.value == 1)
      {
        uint64_t v13 = 0xD000000000000033;
        Swift::Int v14 = "HFCharacteristicValueContactStateContactNotDetected";
        goto LABEL_114;
      }
      if (!v133.value)
      {
        uint64_t v13 = 0xD000000000000030;
        Swift::Int v14 = "HFCharacteristicValueContactStateContactDetected";
        goto LABEL_114;
      }
LABEL_91:
      uint64_t v3 = 0;
      break;
    case 0xE:
    case 0x33:
    case 0x34:
      uint64_t v127 = *(void **)(v0 + *(int *)(v2 + 112));
      Swift::Bool v5 = v127;
      unsigned __int8 v126 = 40;
      Swift::Int_optional v128 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v126);
      Swift::Int value = v128.value;
      BOOL is_nil = v128.is_nil;
      uint64_t v127 = v5;
      unsigned __int8 v126 = -98;
      Swift::Int_optional v129 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v126);
      Swift::Int v8 = v129.value;
      BOOL v9 = v129.is_nil;
      uint64_t v127 = v5;
      unsigned __int8 v126 = 102;
      Swift::Int_optional v130 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v126);
      if (v130.is_nil) {
        Swift::Int v10 = 0;
      }
      else {
        Swift::Int v10 = v130.value;
      }
      uint64_t v11 = sub_251BFA710(value, is_nil, v8, v9, v10, v130.is_nil);
      goto LABEL_116;
    case 0x10:
      char v20 = *(void **)(v0 + *(int *)(v2 + 112));
      uint64_t v127 = v20;
      unsigned __int8 v21 = 105;
      goto LABEL_101;
    case 0x11:
      uint64_t v127 = *(void **)(v0 + *(int *)(v2 + 112));
      unsigned __int8 v126 = 3;
      char v22 = sub_251B457DC(&v126);
      if (v22 == 2) {
        goto LABEL_91;
      }
      BOOL v23 = (v22 & 1) == 0;
      if (v22) {
        uint64_t v24 = 0xD00000000000002FLL;
      }
      else {
        uint64_t v24 = 0xD00000000000002BLL;
      }
      if (v23) {
        uint64_t v25 = 0x8000000251F6D000;
      }
      else {
        uint64_t v25 = 0x8000000251F6D030;
      }
      uint64_t v26 = static String.hfLocalized(_:)(v24, v25);
LABEL_88:
      uint64_t v3 = v26;
      swift_bridgeObjectRelease();
      return v3;
    case 0x13:
      double v27 = *(void **)(v0 + *(int *)(v2 + 112));
      uint64_t v127 = v27;
      unsigned __int8 v126 = 31;
      Swift::Int_optional v134 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v126);
      Swift::Bool v28 = v134.is_nil;
      if (v134.is_nil) {
        Swift::Int v29 = 0;
      }
      else {
        Swift::Int v29 = v134.value;
      }
      uint64_t v127 = v27;
      unsigned __int8 v126 = -107;
      Swift::Int_optional v135 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v126);
      Swift::Bool v30 = v135.is_nil;
      if (v135.is_nil) {
        Swift::Int v31 = 0;
      }
      else {
        Swift::Int v31 = v135.value;
      }
      uint64_t v127 = v27;
      unsigned __int8 v126 = 88;
      char v32 = sub_251B457DC(&v126);
      uint64_t v11 = sub_251BFAA40(v29, v28, v31, v30, v32);
      goto LABEL_116;
    case 0x14:
      uint64_t v127 = *(void **)(v0 + *(int *)(v2 + 112));
      Swift::Bool v33 = v127;
      unsigned __int8 v126 = 3;
      char v34 = sub_251B457DC(&v126);
      uint64_t v127 = v33;
      unsigned __int8 v126 = -105;
      Swift::Int_optional v136 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v126);
      Swift::Bool v35 = v136.is_nil;
      if (v136.is_nil) {
        Swift::Int v36 = 0;
      }
      else {
        Swift::Int v36 = v136.value;
      }
      uint64_t v127 = v33;
      unsigned __int8 v126 = 33;
      Swift::Int_optional v137 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v126);
      Swift::Bool v37 = v137.is_nil;
      if (v137.is_nil) {
        Swift::Int v38 = 0;
      }
      else {
        Swift::Int v38 = v137.value;
      }
      uint64_t v127 = v33;
      unsigned __int8 v126 = 55;
      uint64_t v39 = sub_251B46610(&v126);
      int v41 = v40 & 1;
      uint64_t v127 = v33;
      unsigned __int8 v126 = 29;
      uint64_t v42 = sub_251B46610(&v126);
      uint64_t v11 = sub_251BFAB04(v34, v36, v35, v38, v37, v39, v41, v42, v43 & 1);
      goto LABEL_116;
    case 0x15:
      uint64_t v127 = *(void **)(v0 + *(int *)(v2 + 112));
      Swift::Int_optional v44 = v127;
      unsigned __int8 v126 = 3;
      char v45 = sub_251B457DC(&v126);
      uint64_t v127 = v44;
      unsigned __int8 v126 = 36;
      Swift::Int_optional v138 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v126);
      BOOL v46 = v138.is_nil;
      if (v138.is_nil) {
        Swift::Int v47 = 0;
      }
      else {
        Swift::Int v47 = v138.value;
      }
      uint64_t v127 = v44;
      unsigned __int8 v126 = -102;
      Swift::Int_optional v139 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v126);
      BOOL v48 = v139.is_nil;
      if (v139.is_nil) {
        Swift::Int v49 = 0;
      }
      else {
        Swift::Int v49 = v139.value;
      }
      uint64_t v127 = v44;
      unsigned __int8 v126 = 58;
      uint64_t v50 = sub_251B46610(&v126);
      int v52 = v51 & 1;
      uint64_t v127 = v44;
      unsigned __int8 v126 = 48;
      uint64_t v53 = sub_251B46610(&v126);
      uint64_t v11 = sub_251BFAD4C(v45, v47, v46, v49, v48, v50, v52, v53, v54 & 1);
      goto LABEL_116;
    case 0x16:
      uint64_t v127 = *(void **)(v0 + *(int *)(v2 + 112));
      unsigned __int8 v126 = 41;
      uint64_t v55 = sub_251B46610(&v126);
      uint64_t v11 = sub_251BFB20C(v55, v56 & 1);
      goto LABEL_116;
    case 0x18:
      uint64_t v127 = *(void **)(v0 + *(int *)(v2 + 112));
      uint64_t v57 = v127;
      unsigned __int8 v126 = 65;
      char v58 = sub_251B457DC(&v126);
      uint64_t v127 = v57;
      unsigned __int8 v126 = 3;
      char v59 = sub_251B457DC(&v126);
      uint64_t v127 = v57;
      unsigned __int8 v126 = 106;
      Swift::Int_optional v140 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v126);
      if (v140.is_nil) {
        Swift::Int v60 = 0;
      }
      else {
        Swift::Int v60 = v140.value;
      }
      uint64_t v11 = sub_251BFB2BC(v58, v59, v60, v140.is_nil);
      goto LABEL_116;
    case 0x1A:
      uint64_t v127 = *(void **)(v0 + *(int *)(v2 + 112));
      unsigned __int8 v126 = 74;
      Swift::Int_optional v141 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v126);
      uint64_t v3 = 0;
      if (v141.is_nil || v141.value != 1) {
        return v3;
      }
      uint64_t v13 = 0xD000000000000027;
      Swift::Int v14 = "HFCharacteristicTitleLeakDetectedSimple";
      goto LABEL_114;
    case 0x1B:
      uint64_t v127 = *(void **)(v0 + *(int *)(v2 + 112));
      unsigned __int8 v126 = 37;
      uint64_t v61 = sub_251B46610(&v126);
      uint64_t v11 = sub_251BFB45C(v61, v62 & 1);
      goto LABEL_116;
    case 0x1C:
      uint64_t v127 = *(void **)(v0 + *(int *)(v2 + 112));
      uint64_t v63 = v127;
      unsigned __int8 v126 = 105;
      char v64 = sub_251B457DC(&v126);
      uint64_t v127 = v63;
      unsigned __int8 v126 = 12;
      Swift::Int_optional v142 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v126);
      uint64_t v11 = sub_251BFB354(v64, v142.value, v142.is_nil);
      goto LABEL_116;
    case 0x1E:
      uint64_t v65 = *(void **)(v0 + *(int *)(v2 + 112));
      uint64_t v127 = v65;
      unsigned __int8 v126 = 38;
      Swift::Int_optional v143 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v126);
      Swift::Bool v66 = v143.is_nil;
      if (v143.is_nil) {
        Swift::Int v67 = 0;
      }
      else {
        Swift::Int v67 = v143.value;
      }
      uint64_t v127 = v65;
      unsigned __int8 v126 = -100;
      Swift::Int_optional v144 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v126);
      if (v144.is_nil) {
        Swift::Int v68 = 0;
      }
      else {
        Swift::Int v68 = v144.value;
      }
      uint64_t v11 = sub_251BFB57C(v67, v66, v68, v144.is_nil);
      goto LABEL_116;
    case 0x20:
      uint64_t v127 = *(void **)(v0 + *(int *)(v2 + 112));
      unsigned __int8 v126 = 83;
      char v69 = sub_251B457DC(&v126);
      if (v69 == 2) {
        goto LABEL_91;
      }
      if (v69)
      {
        uint64_t v13 = 0xD000000000000028;
        Swift::Int v14 = "HFStatusDescriptionMotionAlarm_Triggered";
      }
      else
      {
        uint64_t v13 = 0xD000000000000025;
        Swift::Int v14 = "HFStatusDescriptionMotionAlarm_Normal";
      }
      goto LABEL_114;
    case 0x21:
      uint64_t v127 = *(void **)(v0 + *(int *)(v2 + 112));
      unsigned __int8 v126 = 89;
      Swift::Int_optional v145 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v126);
      uint64_t v3 = 0;
      if (v145.is_nil || v145.value != 1) {
        return v3;
      }
      uint64_t v13 = 0xD000000000000028;
      Swift::Int v14 = "HFStatusTitleOccupancyAlarm_OneTriggered";
      goto LABEL_114;
    case 0x22:
    case 0x29:
      uint64_t v127 = *(void **)(v0 + *(int *)(v2 + 112));
      unsigned __int8 v126 = 105;
      char v12 = sub_251B457DC(&v126);
      if (v12 == 2) {
        goto LABEL_91;
      }
      if (v12)
      {
        unint64_t v109 = 0x8000000251F6CEB0;
        uint64_t v13 = 0xD000000000000021;
      }
      else
      {
        uint64_t v13 = 0xD000000000000022;
        Swift::Int v14 = "HFCharacteristicValuePowerStateOff";
LABEL_114:
        unint64_t v109 = (unint64_t)(v14 - 32) | 0x8000000000000000;
      }
      uint64_t v11 = static String.hfLocalized(_:)(v13, v109);
LABEL_116:
      uint64_t v3 = v11;
      break;
    case 0x23:
      uint64_t v70 = *(void **)(v0 + *(int *)(v2 + 112));
      uint64_t v127 = v70;
      unsigned __int8 v126 = 42;
      Swift::Int_optional v146 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v126);
      BOOL v71 = v146.is_nil;
      if (v146.is_nil) {
        Swift::Int v72 = 0;
      }
      else {
        Swift::Int v72 = v146.value;
      }
      uint64_t v127 = v70;
      unsigned __int8 v126 = -96;
      Swift::Int_optional v147 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v126);
      if (v147.is_nil) {
        Swift::Int v73 = 0;
      }
      else {
        Swift::Int v73 = v147.value;
      }
      uint64_t v11 = sub_251BFB684(v72, v71, v73, v147.is_nil);
      goto LABEL_116;
    case 0x24:
      uint64_t v13 = 0xD000000000000029;
      Swift::Int v14 = "HFServiceDescriptionAccessoryNotSupported";
      goto LABEL_114;
    case 0x25:
      uint64_t v127 = *(void **)(v0 + *(int *)(v2 + 112));
      unsigned __int8 v126 = 127;
      Swift::Int_optional v148 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v126);
      uint64_t v3 = 0;
      if (v148.is_nil || v148.value != 1) {
        return v3;
      }
      uint64_t v13 = 0xD000000000000027;
      Swift::Int v14 = "HFStatusDescriptionSmokeAlarm_Triggered";
      goto LABEL_114;
    case 0x2C:
      uint64_t v127 = *(void **)(v0 + *(int *)(v2 + 112));
      uint64_t v74 = v127;
      unsigned __int8 v126 = 3;
      char v75 = sub_251B457DC(&v126);
      uint64_t v127 = v74;
      unsigned __int8 v126 = 4;
      Swift::Int_optional v149 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v126);
      Swift::Int v76 = v149.value;
      LOBYTE(v74) = v149.is_nil;
      char v77 = sub_251BFB7BC(*(void *)(v1 + *(int *)(v4 + 108)));
      uint64_t v26 = sub_251BFBB04(v75, v76, (char)v74, (uint64_t)v77);
      goto LABEL_88;
    case 0x2D:
      uint64_t v127 = *(void **)(v0 + *(int *)(v2 + 112));
      unsigned __int8 v126 = 44;
      uint64_t v78 = sub_251B46610(&v126);
      if (v79) {
        goto LABEL_91;
      }
      uint64_t v11 = static ClimateSummarizer.temperatureAverageString(_:)(*(double *)&v78);
      goto LABEL_116;
    case 0x2E:
      uint64_t v80 = *(void **)(v0 + *(int *)(v2 + 112));
      uint64_t v127 = v80;
      unsigned __int8 v126 = -104;
      Swift::Int_optional v150 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v126);
      Swift::Bool v81 = v150.is_nil;
      if (v150.is_nil) {
        Swift::Int v82 = 0;
      }
      else {
        Swift::Int v82 = v150.value;
      }
      uint64_t v127 = v80;
      unsigned __int8 v126 = 34;
      Swift::Int_optional v151 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v126);
      Swift::Bool v83 = v151.is_nil;
      if (v151.is_nil) {
        Swift::Int v84 = 0;
      }
      else {
        Swift::Int v84 = v151.value;
      }
      uint64_t v127 = v80;
      unsigned __int8 v126 = -94;
      uint64_t v85 = sub_251B46610(&v126);
      char v87 = v86 & 1;
      uint64_t v127 = v80;
      unsigned __int8 v126 = 55;
      uint64_t v88 = sub_251B46610(&v126);
      int v90 = v89 & 1;
      uint64_t v127 = v80;
      unsigned __int8 v126 = 29;
      uint64_t v91 = sub_251B46610(&v126);
      uint64_t v11 = sub_251BFBBD4(v82, v81, v84, v83, v85, v87, v88, v90, v93, v94, v95, v96, v97, v98, v99, v100, *(double *)&v91, v92 & 1);
      goto LABEL_116;
    case 0x2F:
      uint64_t v127 = *(void **)(v0 + *(int *)(v2 + 112));
      uint64_t v101 = v127;
      unsigned __int8 v126 = 3;
      char v102 = sub_251B457DC(&v126);
      uint64_t v127 = v101;
      unsigned __int8 v126 = 65;
      char v103 = sub_251B457DC(&v126);
      uint64_t v11 = _s13HomeDataModel13StaticServiceV11valveString6active5inUseSSSgSbSg_AHtFZ_0(v102, v103);
      goto LABEL_116;
    case 0x30:
      char v20 = *(void **)(v0 + *(int *)(v2 + 112));
      uint64_t v127 = v20;
      unsigned __int8 v21 = 3;
LABEL_101:
      unsigned __int8 v126 = v21;
      char v104 = sub_251B457DC(&v126);
      uint64_t v127 = v20;
      unsigned __int8 v126 = 115;
      uint64_t v105 = sub_251B46610(&v126);
      uint64_t v11 = sub_251BFA91C(v104, v105, v106 & 1);
      goto LABEL_116;
    default:
      return v3;
  }
  return v3;
}

uint64_t static StaticService.activeString(active:)(char a1)
{
  if (a1 == 2) {
    return 0;
  }
  if (a1) {
    uint64_t v3 = 0xD000000000000021;
  }
  else {
    uint64_t v3 = 0xD000000000000022;
  }
  if (a1) {
    uint64_t v4 = 0x8000000251F6CEB0;
  }
  else {
    uint64_t v4 = 0x8000000251F6CE80;
  }
  uint64_t v2 = static String.hfLocalized(_:)(v3, v4);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t static StaticService.airQualitySensorString(airQuality:)(uint64_t a1, char a2)
{
  return sub_251BFA63C(a1, a2 & 1);
}

uint64_t static StaticService.carbonDioxideSensorString(carbonDioxideDetected:)(uint64_t a1, char a2)
{
  return sub_251BF8E40(a1, a2, 0xD000000000000036, 0x8000000251F6D0E0);
}

uint64_t static StaticService.carbonMonoxideString(carbonMonoxideDetected:)(uint64_t a1, char a2)
{
  return sub_251BF8E40(a1, a2, 0xD000000000000037, 0x8000000251F6D250);
}

uint64_t static StaticService.contactSensorString(contactState:)(uint64_t a1, char a2)
{
  return sub_251BF8F54(a1, a2, 0xD000000000000030, 0x8000000251F6D0A0, 0xD000000000000033, 0x8000000251F6D060);
}

uint64_t static StaticService.currentAirPurifierStateString(currentAirPurifierState:)(uint64_t a1, char a2)
{
  if (a2) {
    return 0;
  }
  if (!a1)
  {
    uint64_t v2 = 0xD000000000000034;
    uint64_t v3 = "HFCharacteristicValueCurrentAirPurifierStateInactive";
    goto LABEL_8;
  }
  if (a1 == 1)
  {
    unint64_t v5 = 0x8000000251F6D160;
    uint64_t v2 = 0xD000000000000030;
    return static String.hfLocalized(_:)(v2, v5);
  }
  if (a1 != 2) {
    return 0;
  }
  uint64_t v2 = 0xD000000000000032;
  uint64_t v3 = "HFCharacteristicValueCurrentAirPurifierStateActive";
LABEL_8:
  unint64_t v5 = (unint64_t)(v3 - 32) | 0x8000000000000000;
  return static String.hfLocalized(_:)(v2, v5);
}

uint64_t static StaticService.doorStateString(currentDoorState:targetDoorState:obstructionDetected:)(uint64_t a1, char a2, uint64_t a3, char a4, char a5)
{
  return sub_251BFAA40(a1, a2 & 1, a3, a4 & 1, a5);
}

uint64_t static StaticService.doorStateTargetString(currentDoorState:targetDoorState:)(uint64_t a1, char a2, uint64_t a3, char a4)
{
  return sub_251BFC104(a1, a2 & 1, a3, a4 & 1);
}

uint64_t static StaticService.currentTemperatureString(currentTemperature:)(uint64_t a1, char a2)
{
  if (a2) {
    return 0;
  }
  else {
    return static ClimateSummarizer.temperatureAverageString(_:)(*(double *)&a1);
  }
}

uint64_t static StaticService.fanOrAirPurifierRotationSpeedString(powerState:rotationSpeed:)(char a1, uint64_t a2, char a3)
{
  return sub_251BFA91C(a1, a2, a3 & 1);
}

uint64_t static StaticService.faucetString(active:)(char a1)
{
  if (a1 == 2) {
    return 0;
  }
  if (a1) {
    uint64_t v3 = 0xD00000000000002FLL;
  }
  else {
    uint64_t v3 = 0xD00000000000002BLL;
  }
  if (a1) {
    uint64_t v4 = 0x8000000251F6D030;
  }
  else {
    uint64_t v4 = 0x8000000251F6D000;
  }
  uint64_t v2 = static String.hfLocalized(_:)(v3, v4);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t static StaticService.heaterCoolerString(active:targetHeaterCoolerState:currentHeaterCoolerState:heatingThreshold:coolingThreshold:)(char a1, uint64_t a2, char a3, unint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, char a9)
{
  return sub_251BFAB04(a1, a2, a3 & 1, a4, a5 & 1, a6, a7 & 1, a8, a9 & 1);
}

uint64_t static StaticService.humidifierDehumidifierTargetValueString(active:targetHumidifierDehumidifierState:humidifierThreshold:dehumidifierThreshold:)(char a1, uint64_t a2, char a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  if (a1 == 2) {
    return 0;
  }
  if ((a1 & 1) == 0)
  {
    uint64_t v8 = 0xD000000000000022;
    uint64_t v9 = 0x8000000251F6CE80;
    return static String.hfLocalized(_:)(v8, v9);
  }
  if (a3)
  {
LABEL_11:
    uint64_t v9 = 0x8000000251F6CEB0;
    uint64_t v8 = 0xD000000000000021;
    return static String.hfLocalized(_:)(v8, v9);
  }
  if (a2 == 2)
  {
    if (a7) {
      return 0;
    }
LABEL_17:
    sub_251A1A568(0, (unint64_t *)&qword_269BA04A0);
    uint64_t v26 = (void *)sub_251F360F0();
    double v27 = (void *)sub_251F360F0();
    Swift::Bool v28 = (void *)sub_251F360F0();
    uint64_t v7 = sub_251D3B848(v26);

    return v7;
  }
  if (a2 == 1)
  {
    if (a5) {
      return 0;
    }
    goto LABEL_17;
  }
  if (a2) {
    goto LABEL_11;
  }
  if (((a5 | a7) & 1) == 0)
  {
    static String.hfLocalized(_:)(0xD000000000000033, 0x8000000251F6D290);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_251F3A500;
    sub_251A1A568(0, (unint64_t *)&qword_269BA04A0);
    uint64_t v11 = (void *)sub_251F360F0();
    char v12 = (void *)sub_251F360F0();
    uint64_t v13 = (void *)sub_251F360F0();
    uint64_t v14 = sub_251D3B848(v11);
    uint64_t v16 = v15;

    uint64_t v17 = MEMORY[0x263F8D310];
    *(void *)(v10 + 56) = MEMORY[0x263F8D310];
    unint64_t v18 = sub_251B44770();
    *(void *)(v10 + 64) = v18;
    *(void *)(v10 + 32) = v14;
    *(void *)(v10 + 40) = v16;
    Swift::Int_optional v19 = (void *)sub_251F360F0();
    char v20 = (void *)sub_251F360F0();
    unsigned __int8 v21 = (void *)sub_251F360F0();
    uint64_t v22 = sub_251D3B848(v19);
    uint64_t v24 = v23;

    *(void *)(v10 + 96) = v17;
    *(void *)(v10 + 104) = v18;
    *(void *)(v10 + 72) = v22;
    *(void *)(v10 + 80) = v24;
    uint64_t v7 = sub_251F35710();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v7;
  }
  return 0;
}

uint64_t static StaticService.humidifierDehumidifierString(active:currentHumidifierDehumidifierState:targetHumidifierDehumidifierState:humidifierThreshold:dehumidifierThreshold:)(char a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, char a9)
{
  return sub_251BFAD4C(a1, a2, a3 & 1, a4, a5 & 1, a6, a7 & 1, a8, a9 & 1);
}

uint64_t static StaticService.humiditySensorString(currentRelativeHumidity:)(uint64_t a1, char a2)
{
  return sub_251BFB20C(a1, a2 & 1);
}

uint64_t static StaticService.irrigationSystemString(inUse:active:programMode:)(char a1, char a2, uint64_t a3, char a4)
{
  return sub_251BFB2BC(a1, a2, a3, a4 & 1);
}

uint64_t static StaticService.leakSensorString(leakDetected:)(uint64_t a1, char a2)
{
  return sub_251BF8E40(a1, a2, 0xD000000000000027, 0x8000000251F6CFD0);
}

uint64_t static StaticService.lightBulbString(powerState:brightness:)(char a1, uint64_t a2, char a3)
{
  return sub_251BFB354(a1, a2, a3 & 1);
}

uint64_t static StaticService.lightBulbAndNaturalLightingDescriptionString(powerState:brightness:isNaturalLightSupported:isNaturalLightEnabled:)(char a1, uint64_t a2, char a3, char a4, char a5)
{
  return sub_251BFC474(a1, a2, a3 & 1, a4, a5);
}

uint64_t static StaticService.lightSensorString(currentLightLevel:)(uint64_t a1, char a2)
{
  return sub_251BFB45C(a1, a2 & 1);
}

uint64_t static StaticService.lockStateString(currentLockMechanismState:targetLockMechanismState:)(uint64_t a1, char a2, uint64_t a3, char a4)
{
  return sub_251BFB57C(a1, a2 & 1, a3, a4 & 1);
}

uint64_t static StaticService.motionSensorString(motionDetected:)(char a1)
{
  return sub_251BF8ED0(a1, 0xD000000000000028, 0x8000000251F6CFA0, 0xD000000000000025, 0x8000000251F6CF70);
}

uint64_t static StaticService.motorizedDoorOrWindowTargetPositionString(targetPosition:)(uint64_t a1, char a2)
{
  if (a2) {
    return 0;
  }
  if (a1 == 100)
  {
    uint64_t v3 = 0x8000000251F6D2D0;
    uint64_t v2 = 0xD000000000000022;
  }
  else
  {
    if (a1)
    {
      sub_251A1A568(0, (unint64_t *)&qword_269BA04A0);
      unint64_t v5 = (void *)sub_251F36100();
      Swift::Int v6 = (void *)sub_251F36100();
      uint64_t v7 = (void *)sub_251F36100();
      uint64_t v4 = sub_251D3B848(v5);

      return v4;
    }
    uint64_t v2 = 0xD000000000000024;
    uint64_t v3 = 0x8000000251F6D300;
  }
  return static String.hfLocalized(_:)(v2, v3);
}

uint64_t static StaticService.motorizedDoorOrWindowString(currentPosition:targetPosition:positionState:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  return sub_251BFA710(a1, a2 & 1, a3, a4 & 1, a5, a6 & 1);
}

uint64_t static StaticService.motorizedDoorOrWindowTargetString(currentPosition:targetPosition:positionState:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  return sub_251BFBF3C(a3, a4 & 1, a5, a6 & 1);
}

uint64_t static StaticService.occupancySensorString(occupancyDetected:)(uint64_t a1, char a2)
{
  return sub_251BF8E40(a1, a2, 0xD000000000000028, 0x8000000251F6CF40);
}

uint64_t static StaticService.slatsString()()
{
  return static String.hfLocalized(_:)(0xD000000000000029, 0x8000000251F6CF10);
}

uint64_t static StaticService.smokeSensorString(smokeDetected:)(uint64_t a1, char a2)
{
  return sub_251BF8E40(a1, a2, 0xD000000000000027, 0x8000000251F6CEE0);
}

uint64_t static StaticService.statusFaultString(statusFault:)(uint64_t a1, char a2)
{
  return sub_251BF8E40(a1, a2, 0xD00000000000002CLL, 0x8000000251F6D330);
}

uint64_t sub_251BF8E40(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = 0;
  if ((a2 & 1) == 0 && a1 == 1) {
    return static String.hfLocalized(_:)(a3, a4);
  }
  return result;
}

uint64_t static StaticService.securitySystemString(currentSecuritySystemState:targetSecuritySystemState:)(uint64_t a1, char a2, uint64_t a3, char a4)
{
  return sub_251BFB684(a1, a2 & 1, a3, a4 & 1);
}

uint64_t static StaticService.securitySystemTargetString(targetSecuritySystemState:)(uint64_t a1, char a2)
{
  return sub_251BFC1AC(a1, a2 & 1);
}

uint64_t static StaticService.switchString(powerState:)(char a1)
{
  return sub_251BF8ED0(a1, 0xD000000000000021, 0x8000000251F6CEB0, 0xD000000000000022, 0x8000000251F6CE80);
}

uint64_t sub_251BF8ED0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1 == 2) {
    return 0;
  }
  if (a1)
  {
    a4 = a2;
    a5 = a3;
  }
  return static String.hfLocalized(_:)(a4, a5);
}

uint64_t static StaticService.targetAirPurifierStateString(targetAirPurifierState:)(uint64_t a1, char a2)
{
  return sub_251BF8F54(a1, a2, 0xD000000000000031, 0x8000000251F6D210, 0xD00000000000002FLL, 0x8000000251F6D1E0);
}

uint64_t sub_251BF8F54(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a2) {
    return 0;
  }
  if (a1 != 1)
  {
    if (!a1) {
      return static String.hfLocalized(_:)(a3, a4);
    }
    return 0;
  }
  a3 = a5;
  a4 = a6;
  return static String.hfLocalized(_:)(a3, a4);
}

uint64_t static StaticService.televisionString(active:activeIdentifier:inputSources:)(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_251BFBB04(a1, a2, a3 & 1, a4);
}

uint64_t static StaticService.televisionInputSourceString(activeIdentifier:inputSources:)(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3 = 0;
  if ((a2 & 1) == 0 && a3)
  {
    uint64_t v4 = *(void *)(a3 + 16);
    if (v4)
    {
      for (uint64_t i = a3 + 64; *(void *)(i - 32) != a1; i += 40)
      {
        if (!--v4) {
          return 0;
        }
      }
      if (*(void *)(i - 16))
      {
        uint64_t v3 = *(void *)(i - 24);
      }
      else
      {
        uint64_t v3 = *(void *)(i - 8);
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRetain();
    }
    else
    {
      return 0;
    }
  }
  return v3;
}

uint64_t static StaticService.thermostatString(targetHeatingCoolingMode:currentHeatingCooling:targetTemperature:heatingThreshold:coolingThreshold:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, double a17, char a18)
{
  return sub_251BFBBD4(a1, a2 & 1, a3, a4 & 1, a5, a6 & 1, a7, a8 & 1, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18 & 1);
}

uint64_t static StaticService.targetThermostatString(currentRelativeHumidity:currentTemperature:targetHeatingCoolingMode:currentHeatingCooling:targetTemperature:heatingThreshold:coolingThreshold:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, uint64_t a17, char a18, uint64_t a19, char a20,double a21,char a22)
{
  return sub_251BFC270(a1, a2 & 1, a3, a4 & 1, a5, a6 & 1, a7, a8 & 1, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18 & 1, a19,
           a20 & 1,
           a21,
           a22 & 1);
}

uint64_t StaticService.simpleStatusString.getter()
{
  int v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticService() + 88));
  if (v1 == 48)
  {
    return StaticService.ventilationFanSimple.getter();
  }
  else if (v1 == 16)
  {
    return StaticService.fanStringSimple.getter();
  }
  else
  {
    return StaticService.tileCharacteristicStateString.getter();
  }
}

uint64_t StaticService.fanStringSimple.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  uint64_t v11 = v1;
  unsigned __int8 v10 = 105;
  char v2 = sub_251B457DC(&v10);
  uint64_t v3 = 0;
  if (v2 != 2)
  {
    char v4 = v2;
    uint64_t v11 = v1;
    unsigned __int8 v10 = 115;
    double v5 = COERCE_DOUBLE(sub_251B46610(&v10));
    uint64_t v3 = 0;
    if ((v6 & 1) == 0 && v5 > 0.0)
    {
      if (v4) {
        uint64_t v7 = 0xD000000000000021;
      }
      else {
        uint64_t v7 = 0xD000000000000022;
      }
      if (v4) {
        uint64_t v8 = 0x8000000251F6CEB0;
      }
      else {
        uint64_t v8 = 0x8000000251F6CE80;
      }
      uint64_t v3 = static String.hfLocalized(_:)(v7, v8);
      swift_bridgeObjectRelease();
    }
  }
  return v3;
}

uint64_t StaticService.ventilationFanSimple.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  uint64_t v11 = v1;
  unsigned __int8 v10 = 3;
  char v2 = sub_251B457DC(&v10);
  uint64_t v3 = 0;
  if (v2 != 2)
  {
    char v4 = v2;
    uint64_t v11 = v1;
    unsigned __int8 v10 = 115;
    double v5 = COERCE_DOUBLE(sub_251B46610(&v10));
    uint64_t v3 = 0;
    if ((v6 & 1) == 0 && v5 > 0.0)
    {
      if (v4) {
        uint64_t v7 = 0xD000000000000021;
      }
      else {
        uint64_t v7 = 0xD000000000000022;
      }
      if (v4) {
        uint64_t v8 = 0x8000000251F6CEB0;
      }
      else {
        uint64_t v8 = 0x8000000251F6CE80;
      }
      uint64_t v3 = static String.hfLocalized(_:)(v7, v8);
      swift_bridgeObjectRelease();
    }
  }
  return v3;
}

void __swiftcall StaticService.statusString(forAccessoryControl:)(HomeDataModel::StatusStrings *__return_ptr retstr, Swift::Bool forAccessoryControl)
{
  uint64_t v3 = v2;
  char v6 = (int *)type metadata accessor for StaticService();
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v10 = *(unsigned __int8 *)(v2 + *(int *)(v7 + 32));
  sub_251BB1974(v3, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (v10 == 1)
  {
    uint64_t v30 = *(void *)&v9[v6[28]];
    char v29 = v9[v6[22]];
    Swift::Bool v11 = StaticCharacteristicsBag.isReachable(for:)((HomeDataModel::ServiceKind)&v29);
    sub_251BFC990((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v11)
    {
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      goto LABEL_9;
    }
  }
  else
  {
    sub_251BFC990((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  if (*(unsigned char *)(v3 + v6[31]))
  {
    uint64_t v14 = 0xD00000000000001FLL;
    uint64_t v15 = 0x8000000251F6D360;
  }
  else
  {
    uint64_t v15 = 0x8000000251F6D380;
    uint64_t v14 = 0xD00000000000001ELL;
  }
  uint64_t v12 = static String.hfLocalized(_:)(v14, v15);
  uint64_t v13 = v16;
LABEL_9:
  char v17 = *(unsigned char *)(v3 + v6[9]);
  LOBYTE(v30) = *(unsigned char *)(v3 + v6[22]);
  swift_bridgeObjectRetain();
  uint64_t v18 = ServiceKind.stateStatusDependentCharaceristicKinds.getter();
  uint64_t v19 = swift_bridgeObjectRetain();
  char v20 = sub_251B4C57C(v19, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  if (forAccessoryControl) {
    uint64_t v21 = StaticService.accessoryControlCharacteristicStateString.getter();
  }
  else {
    uint64_t v21 = StaticService.tileCharacteristicStateString.getter();
  }
  uint64_t v23 = v21;
  uint64_t v24 = v22;
  uint64_t v25 = sub_251C4862C(v3 + v6[30], forAccessoryControl);
  if (!v26)
  {
    int v27 = *(unsigned __int8 *)(v3 + v6[10]);
    if (v27 == 2)
    {
      uint64_t v25 = 0;
      uint64_t v26 = 0;
    }
    else
    {
      uint64_t v25 = 0;
      uint64_t v26 = 0;
      if ((v27 & 1) != 0 && forAccessoryControl) {
        uint64_t v25 = static String.hfLocalized(_:)(0xD00000000000001ELL, 0x8000000251F6B890);
      }
    }
  }
  retstr->reachabilityStatusString.value._countAndFlagsBits = v12;
  retstr->reachabilityStatusString.value._object = v13;
  retstr->isCalibrating = v17 & 1;
  retstr->isUpdating = v20 & 1;
  retstr->isConfiguring = 0;
  retstr->stateStatusString.value._countAndFlagsBits = v23;
  retstr->stateStatusString.value._object = v24;
  retstr->errorStatusString.value._countAndFlagsBits = v25;
  retstr->errorStatusString.value._object = v26;
}

uint64_t StaticService.isUpdating.getter()
{
  type metadata accessor for StaticService();
  swift_bridgeObjectRetain();
  uint64_t v0 = ServiceKind.stateStatusDependentCharaceristicKinds.getter();
  uint64_t v1 = swift_bridgeObjectRetain();
  char v2 = sub_251B4C57C(v1, v0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t StaticService.tileStatusString.getter()
{
  return sub_251BF9660(0, sub_251D3D180);
}

uint64_t StaticService.accessoryControlStatusString.getter()
{
  return sub_251BF9660(1, sub_251D3D2E0);
}

uint64_t sub_251BF9660(Swift::Bool a1, uint64_t (*a2)(void))
{
  StaticService.statusString(forAccessoryControl:)(&v5, a1);
  uint64_t v3 = a2();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t StaticService.tileStatusStringIconSymbolSuffix.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  MEMORY[0x270FA5388](v2 - 8);
  char v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = (int *)type metadata accessor for StaticService();
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v13 = *(unsigned __int8 *)(v0 + *(int *)(v10 + 32));
  sub_251BB1974(v1, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (v13 == 1)
  {
    sub_251BFC990((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  else
  {
    v19[16] = v12[v9[22]];
    swift_bridgeObjectRetain();
    uint64_t v14 = ServiceKind.stateStatusDependentCharaceristicKinds.getter();
    uint64_t v15 = swift_bridgeObjectRetain();
    char v16 = sub_251B4C57C(v15, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    sub_251BFC990((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticService);
    if ((v16 & 1) == 0) {
      return 0;
    }
  }
  sub_251A1B128(v1 + v9[30], (uint64_t)v4, &qword_26B21F120);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_251A1B064((uint64_t)v4, &qword_26B21F120);
  }
  else
  {
    sub_251BFC6E0((uint64_t)v4, (uint64_t)v8);
    sub_251C40BA4(v19);
    if (v19[0] != 8 && (v19[0] == 3 || v19[0] == 5))
    {
      sub_251BFC990((uint64_t)v8, type metadata accessor for StaticSoftwareUpdate);
      return 0xD000000000000015;
    }
    sub_251BFC990((uint64_t)v8, type metadata accessor for StaticSoftwareUpdate);
  }
  if (*(unsigned char *)(v1 + v9[10])) {
    return 0x2E79726574746162;
  }
  else {
    return 0;
  }
}

uint64_t StaticService.hasDetailAttentionMessages.getter()
{
  uint64_t v1 = type metadata accessor for StaticService();
  sub_251C4862C(v0 + *(int *)(v1 + 120), 1);
  if (!v2)
  {
    if ((*(unsigned char *)(v0 + *(int *)(v1 + 40)) & 1) == 0) {
      return 0;
    }
    static String.hfLocalized(_:)(0xD00000000000001ELL, 0x8000000251F6B890);
  }
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t StaticService.detailedStatusStringTitle.getter()
{
  uint64_t v1 = type metadata accessor for StaticService();
  uint64_t result = 0;
  if ((*(unsigned char *)(v0 + *(int *)(v1 + 32)) & 1) == 0)
  {
    if (qword_26B2200E0 != -1) {
      swift_once();
    }
    uint64_t v3 = qword_26B21FF50;
    swift_getKeyPath();
    sub_251AD2C08();
    sub_251F34F10();
    swift_release();
    uint64_t v4 = v3 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
    swift_beginAccess();
    uint64_t v5 = type metadata accessor for StateSnapshot(0);
    uint64_t v6 = v4 + *(int *)(v5 + 20);
    uint64_t v7 = type metadata accessor for StaticHome();
    uint64_t result = 0;
    if ((*(unsigned char *)(v6 + *(int *)(v7 + 32)) & 1) == 0)
    {
      uint64_t v8 = qword_26B21FF50;
      swift_getKeyPath();
      sub_251F34F10();
      swift_release();
      uint64_t v9 = v8 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
      swift_beginAccess();
      if (*(unsigned __int8 *)(v9 + *(int *)(v5 + 20) + *(int *)(v7 + 36)) - 1 >= 2)
      {
        uint64_t v11 = 0x8000000251F6D380;
        uint64_t v10 = 0xD00000000000001ELL;
      }
      else
      {
        uint64_t v10 = 0xD00000000000001FLL;
        uint64_t v11 = 0x8000000251F6D360;
      }
      return static String.hfLocalized(_:)(v10, v11);
    }
  }
  return result;
}

uint64_t StaticService.detailedStatusString.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = (char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v2);
  uint64_t v7 = (char *)v36 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v36 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v13 = (int *)type metadata accessor for StaticService();
  if ((*(unsigned char *)(v0 + v13[8]) & 1) == 0)
  {
    if (qword_26B2200E0 != -1) {
      swift_once();
    }
    uint64_t v22 = qword_26B21FF50;
    swift_getKeyPath();
    v36[0] = v22;
    sub_251AD2C08();
    sub_251F34F10();
    swift_release();
    uint64_t v23 = v22 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
    swift_beginAccess();
    uint64_t v24 = type metadata accessor for StateSnapshot(0);
    uint64_t v25 = v23 + *(int *)(v24 + 20);
    uint64_t v26 = type metadata accessor for StaticHome();
    if (*(unsigned char *)(v25 + *(int *)(v26 + 32)) != 1)
    {
      uint64_t v27 = v26;
      uint64_t v28 = qword_26B21FF50;
      swift_getKeyPath();
      v36[5] = v28;
      sub_251F34F10();
      swift_release();
      uint64_t v29 = v28 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
      swift_beginAccess();
      switch(*(unsigned char *)(v29 + *(int *)(v24 + 20) + *(int *)(v27 + 36)))
      {
        case 1:
          uint64_t v31 = 0xD000000000000026;
          char v32 = "HFServiceLongFormErrorNoResidentDevice";
          goto LABEL_24;
        case 2:
          uint64_t v31 = 0xD000000000000030;
          char v32 = "HFServiceLongFormErrorResidentDeviceNotReachable";
          goto LABEL_24;
        default:
          break;
      }
    }
    unint64_t v30 = 0x8000000251F6D430;
    uint64_t v31 = 0xD000000000000022;
    return static String.hfLocalized(_:)(v31, v30);
  }
  uint64_t v14 = v13;
  if (*(unsigned char *)(v0 + v13[10]))
  {
    uint64_t v31 = 0xD000000000000020;
    char v32 = "HFStatusTitleAccessoryLowBattery";
  }
  else
  {
    sub_251A1B128(v0 + v13[30], (uint64_t)v12, &qword_26B21F120);
    uint64_t v15 = type metadata accessor for StaticSoftwareUpdate(0);
    int v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v12, 1, v15);
    sub_251A1B064((uint64_t)v12, &qword_26B21F120);
    uint64_t result = 0;
    if (v16 != 1) {
      return result;
    }
    uint64_t v18 = v0 + v14[13];
    sub_251A1B128(v18, (uint64_t)v9, &qword_26B21F110);
    uint64_t v19 = (int *)type metadata accessor for StaticDeviceMetadata();
    char v20 = *(unsigned int (**)(char *, uint64_t, int *))(*((void *)v19 - 1) + 48);
    if (v20(v9, 1, v19) == 1) {
      goto LABEL_7;
    }
    char v21 = v9[v19[11]];
    sub_251BFC990((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
    sub_251A1B128(v18, (uint64_t)v7, &qword_26B21F110);
    if (v20(v7, 1, v19) == 1)
    {
      uint64_t v9 = v7;
LABEL_7:
      sub_251A1B064((uint64_t)v9, &qword_26B21F110);
LABEL_8:
      sub_251A1B128(v18, (uint64_t)v4, &qword_26B21F110);
      if (v20(v4, 1, v19) == 1)
      {
        sub_251A1B064((uint64_t)v4, &qword_26B21F110);
        return 0;
      }
      char v33 = v4[v19[10]];
      sub_251BFC990((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
      if (v33) {
        return 0;
      }
      uint64_t v31 = 0xD000000000000034;
      char v32 = "HFServiceLongFormPersistentWarningHomeKitUncertified";
      goto LABEL_24;
    }
    char v34 = v7[v19[12]];
    sub_251BFC990((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
    if (v21 & 1 | ((v34 & 1) == 0)) {
      goto LABEL_8;
    }
    v36[3] = &type metadata for HomeAppFeatures;
    v36[4] = sub_251A23FFC();
    LOBYTE(v36[0]) = 4;
    char v35 = sub_251F34F60();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
    if ((v35 & 1) == 0) {
      goto LABEL_8;
    }
    uint64_t v31 = 0xD000000000000039;
    char v32 = "HFServiceLongFormPersistentWarningHomeKitUncertified_Lock";
  }
LABEL_24:
  unint64_t v30 = (unint64_t)(v32 - 32) | 0x8000000000000000;
  return static String.hfLocalized(_:)(v31, v30);
}

uint64_t StaticService.TelevisionInputSource.init(mediaSourceIdentifier:configuredName:name:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t StaticService.TelevisionInputSource.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_251F36CB0();
  sub_251F36CC0();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_251F357B0();
  return swift_bridgeObjectRelease();
}

uint64_t StaticService.TelevisionInputSource.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_251F36CA0();
  sub_251F36CB0();
  sub_251F36CC0();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  return sub_251F36D00();
}

uint64_t sub_251BFA360()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_251F36CB0();
  sub_251F36CC0();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_251F357B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251BFA410()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_251F36CA0();
  sub_251F36CB0();
  sub_251F36CC0();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  return sub_251F36D00();
}

uint64_t sub_251BFA4C8()
{
  StaticService.statusString(forAccessoryControl:)(&v2, 0);
  uint64_t v0 = sub_251D3D180();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t _s13HomeDataModel13StaticServiceV21TelevisionInputSourceV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v6 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  if (!v3)
  {
    if (!v6)
    {
LABEL_13:
      if (v4 == v7 && v5 == v8) {
        return 1;
      }
      return sub_251F36B10();
    }
    return 0;
  }
  if (!v6) {
    return 0;
  }
  if (a1[1] == a2[1] && v3 == v6) {
    goto LABEL_13;
  }
  char v10 = sub_251F36B10();
  uint64_t result = 0;
  if (v10) {
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_251BFA63C(uint64_t a1, char a2)
{
  if (a2) {
    return 0;
  }
  switch(a1)
  {
    case 1:
      uint64_t v2 = 0xD000000000000028;
      uint64_t v3 = "HFCharacteristicValueAirQualityExcellent";
      goto LABEL_8;
    case 2:
      uint64_t v5 = "HFCharacteristicValueAirQualityGood";
      goto LABEL_10;
    case 3:
      uint64_t v5 = "HFCharacteristicValueAirQualityFair";
      goto LABEL_10;
    case 4:
      uint64_t v2 = 0xD000000000000027;
      uint64_t v3 = "HFCharacteristicValueAirQualityInferior";
LABEL_8:
      unint64_t v6 = (unint64_t)(v3 - 32) | 0x8000000000000000;
      break;
    case 5:
      uint64_t v5 = "HFCharacteristicValueAirQualityPoor";
LABEL_10:
      unint64_t v6 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      uint64_t v2 = 0xD000000000000023;
      break;
    default:
      return 0;
  }
  return static String.hfLocalized(_:)(v2, v6);
}

uint64_t sub_251BFA710(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, char a6)
{
  if (((a2 | a4) & 1) == 0)
  {
    if (a1 == 100)
    {
      if (a3 == 100)
      {
        uint64_t v6 = 0xD000000000000022;
        uint64_t v7 = "HFCharacteristicValueDoorStateOpen";
        goto LABEL_14;
      }
    }
    else if (!a1 && !a3)
    {
      uint64_t v6 = 0xD000000000000024;
      uint64_t v7 = "HFCharacteristicValueDoorStateClosed";
LABEL_14:
      unint64_t v10 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      return static String.hfLocalized(_:)(v6, v10);
    }
    if (a1 == a3)
    {
      sub_251A1A568(0, (unint64_t *)&qword_269BA04A0);
      uint64_t v11 = (void *)sub_251F36100();
      uint64_t v12 = (void *)sub_251F36100();
      int v13 = (void *)sub_251F36100();
      uint64_t v14 = sub_251D3B848(v11);
      uint64_t v16 = v15;

      static String.hfLocalized(_:)(0xD000000000000031, 0x8000000251F6DDE0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_251F38650;
      *(void *)(v17 + 56) = MEMORY[0x263F8D310];
      *(void *)(v17 + 64) = sub_251B44770();
      *(void *)(v17 + 32) = v14;
      *(void *)(v17 + 40) = v16;
      uint64_t v9 = sub_251F35720();
      swift_bridgeObjectRelease();
      return v9;
    }
    if (a1 >= a3) {
      unint64_t v10 = 0x8000000251F6D600;
    }
    else {
      unint64_t v10 = 0x8000000251F6D630;
    }
LABEL_23:
    uint64_t v6 = 0xD000000000000025;
    return static String.hfLocalized(_:)(v6, v10);
  }
  if ((a6 & 1) == 0)
  {
    switch(a5)
    {
      case 2:
        uint64_t v8 = "HFCharacteristicValueDoorStateStopped";
        goto LABEL_22;
      case 1:
        uint64_t v8 = "HFCharacteristicValueDoorStateOpening";
        goto LABEL_22;
      case 0:
        uint64_t v8 = "HFCharacteristicValueDoorStateClosing";
LABEL_22:
        unint64_t v10 = (unint64_t)(v8 - 32) | 0x8000000000000000;
        goto LABEL_23;
    }
  }
  return 0;
}

uint64_t sub_251BFA91C(char a1, uint64_t a2, char a3)
{
  if (a1 != 2)
  {
    if (a1) {
      uint64_t v5 = 0xD000000000000021;
    }
    else {
      uint64_t v5 = 0xD000000000000022;
    }
    if (a1) {
      uint64_t v6 = 0x8000000251F6CEB0;
    }
    else {
      uint64_t v6 = 0x8000000251F6CE80;
    }
    if ((a1 & 1) != 0 && (a3 & 1) == 0)
    {
      if (*(double *)&a2 > 0.0)
      {
        sub_251A1A568(0, (unint64_t *)&qword_269BA04A0);
        uint64_t v7 = (void *)sub_251F360F0();
        uint64_t v8 = (void *)sub_251F360F0();
        uint64_t v9 = (void *)sub_251F360F0();
        uint64_t v4 = sub_251D3B848(v7);

        return v4;
      }
      uint64_t v6 = 0x8000000251F6CEB0;
      uint64_t v5 = 0xD000000000000021;
    }
    uint64_t v4 = static String.hfLocalized(_:)(v5, v6);
    swift_bridgeObjectRelease();
    return v4;
  }
  return 0;
}

uint64_t sub_251BFAA40(uint64_t a1, char a2, uint64_t a3, char a4, char a5)
{
  if (a5)
  {
    uint64_t v5 = 0xD000000000000031;
    uint64_t v6 = "HFCharacteristicValueDoorStateObstructionDetected";
    goto LABEL_9;
  }
  if ((a4 & 1) == 0)
  {
    if (a3 == 1)
    {
      if ((a2 & 1) == 0 && a1 == 1)
      {
        uint64_t v5 = 0xD000000000000024;
        uint64_t v6 = "HFCharacteristicValueDoorStateClosed";
        goto LABEL_9;
      }
      uint64_t v9 = "HFCharacteristicValueDoorStateClosing";
      goto LABEL_17;
    }
    if (!a3)
    {
      if ((a2 & 1) == 0 && !a1)
      {
        uint64_t v5 = 0xD000000000000022;
        uint64_t v6 = "HFCharacteristicValueDoorStateOpen";
LABEL_9:
        unint64_t v7 = (unint64_t)(v6 - 32) | 0x8000000000000000;
        return static String.hfLocalized(_:)(v5, v7);
      }
      uint64_t v9 = "HFCharacteristicValueDoorStateOpening";
LABEL_17:
      unint64_t v7 = (unint64_t)(v9 - 32) | 0x8000000000000000;
      uint64_t v5 = 0xD000000000000025;
      return static String.hfLocalized(_:)(v5, v7);
    }
  }
  return 0;
}

uint64_t sub_251BFAB04(char a1, uint64_t a2, char a3, unint64_t a4, char a5, uint64_t a6, int a7, uint64_t a8, unsigned __int8 a9)
{
  if (a1 == 2) {
    return 0;
  }
  uint64_t v9 = 0;
  if ((a1 & 1) != 0 && (a3 & 1) == 0 && (a5 & 1) == 0)
  {
    if (a2 == 2)
    {
      if (a4 >= 2)
      {
        if (a4 == 2)
        {
LABEL_19:
          if (a7) {
            return 0;
          }
          double v21 = *(double *)&a6;
          uint64_t v22 = "HFServiceControlDescriptionHeaterCoolerHeatingToWithTemperature";
          goto LABEL_21;
        }
LABEL_14:
        if (a4 != 3 || (a9 & 1) != 0) {
          return 0;
        }
        double v21 = *(double *)&a8;
        uint64_t v22 = "HFServiceControlDescriptionHeaterCoolerCoolingToWithTemperature";
LABEL_21:
        unint64_t v23 = (unint64_t)(v22 - 32) | 0x8000000000000000;
        uint64_t v24 = 0xD00000000000003FLL;
LABEL_27:
        static String.hfLocalized(_:)(v24, v23);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
        uint64_t v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = xmmword_251F38650;
        uint64_t v27 = static ClimateSummarizer.temperatureAverageString(_:)(v21);
        uint64_t v29 = v28;
        *(void *)(v26 + 56) = MEMORY[0x263F8D310];
        *(void *)(v26 + 64) = sub_251B44770();
        *(void *)(v26 + 32) = v27;
        *(void *)(v26 + 40) = v29;
        goto LABEL_28;
      }
      if (a9) {
        return 0;
      }
      double v21 = *(double *)&a8;
      uint64_t v24 = 0xD000000000000043;
      uint64_t v25 = "HFServiceControlDescriptionHeaterCoolerTargetCoolingWithTemperature";
    }
    else
    {
      if (a2 != 1)
      {
        if (!a2 && ((a7 | a9) & 1) == 0)
        {
          static String.hfLocalized(_:)(0xD00000000000001BLL, 0x8000000251F6D7C0);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
          uint64_t v13 = swift_allocObject();
          *(_OWORD *)(v13 + 16) = xmmword_251F3A500;
          uint64_t v14 = static ClimateSummarizer.temperatureAverageString(_:)(*(double *)&a6);
          uint64_t v16 = v15;
          uint64_t v17 = MEMORY[0x263F8D310];
          *(void *)(v13 + 56) = MEMORY[0x263F8D310];
          unint64_t v18 = sub_251B44770();
          *(void *)(v13 + 64) = v18;
          *(void *)(v13 + 32) = v14;
          *(void *)(v13 + 40) = v16;
          uint64_t v19 = static ClimateSummarizer.temperatureAverageString(_:)(*(double *)&a8);
          *(void *)(v13 + 96) = v17;
          *(void *)(v13 + 104) = v18;
          *(void *)(v13 + 72) = v19;
          *(void *)(v13 + 80) = v20;
LABEL_28:
          uint64_t v9 = sub_251F35710();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v9;
        }
        return 0;
      }
      if (a4 >= 2)
      {
        if (a4 == 2) {
          goto LABEL_19;
        }
        goto LABEL_14;
      }
      if (a7) {
        return 0;
      }
      double v21 = *(double *)&a6;
      uint64_t v24 = 0xD000000000000043;
      uint64_t v25 = "HFServiceControlDescriptionHeaterCoolerTargetHeatingWithTemperature";
    }
    unint64_t v23 = (unint64_t)(v25 - 32) | 0x8000000000000000;
    goto LABEL_27;
  }
  return v9;
}

uint64_t sub_251BFAD4C(char a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, int a7, uint64_t a8, unsigned __int8 a9)
{
  if (a1 != 2)
  {
    if ((a1 & 1) == 0)
    {
      uint64_t v10 = 0xD000000000000022;
      uint64_t v11 = 0x8000000251F6CE80;
      return static String.hfLocalized(_:)(v10, v11);
    }
    if ((a3 | a5))
    {
LABEL_6:
      uint64_t v11 = 0x8000000251F6CEB0;
      uint64_t v10 = 0xD000000000000021;
      return static String.hfLocalized(_:)(v10, v11);
    }
    unsigned __int8 v13 = a7;
    if (a2 == 3)
    {
      if (a4 == 2 || a4 == 1)
      {
        if (a9) {
          goto LABEL_6;
        }
        sub_251A1A568(0, (unint64_t *)&qword_269BA04A0);
        Swift::Int v38 = (void *)sub_251F360F0();
        uint64_t v39 = (void *)sub_251F360F0();
        char v40 = (void *)sub_251F360F0();
        uint64_t v18 = sub_251D3B848(v38);
        uint64_t v20 = v41;

        uint64_t v21 = 0xD000000000000034;
        uint64_t v22 = "HFServiceDescriptionHumidifierDehumidifyWithHumidity";
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (a2 == 2)
    {
      if (a4 == 2 || a4 == 1)
      {
        if (a7) {
          goto LABEL_6;
        }
        sub_251A1A568(0, (unint64_t *)&qword_269BA04A0);
        uint64_t v15 = (void *)sub_251F360F0();
        uint64_t v16 = (void *)sub_251F360F0();
        uint64_t v17 = (void *)sub_251F360F0();
        uint64_t v18 = sub_251D3B848(v15);
        uint64_t v20 = v19;

        uint64_t v21 = 0xD000000000000032;
        uint64_t v22 = "HFServiceDescriptionHumidifierHumidifyWithHumidity";
LABEL_27:
        static String.hfLocalized(_:)(v21, (unint64_t)(v22 - 32) | 0x8000000000000000);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
        uint64_t v42 = swift_allocObject();
        *(_OWORD *)(v42 + 16) = xmmword_251F38650;
        *(void *)(v42 + 56) = MEMORY[0x263F8D310];
        *(void *)(v42 + 64) = sub_251B44770();
        *(void *)(v42 + 32) = v18;
        *(void *)(v42 + 40) = v20;
        uint64_t v9 = sub_251F35710();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v9;
      }
LABEL_17:
      if (a4 || ((a7 | a9) & 1) != 0) {
        goto LABEL_6;
      }
LABEL_24:
      static String.hfLocalized(_:)(0xD000000000000033, 0x8000000251F6D290);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
      uint64_t v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_251F3A500;
      sub_251A1A568(0, (unint64_t *)&qword_269BA04A0);
      uint64_t v24 = (void *)sub_251F360F0();
      uint64_t v25 = (void *)sub_251F360F0();
      uint64_t v26 = (void *)sub_251F360F0();
      uint64_t v27 = sub_251D3B848(v24);
      uint64_t v29 = v28;

      uint64_t v30 = MEMORY[0x263F8D310];
      *(void *)(v23 + 56) = MEMORY[0x263F8D310];
      unint64_t v31 = sub_251B44770();
      *(void *)(v23 + 64) = v31;
      *(void *)(v23 + 32) = v27;
      *(void *)(v23 + 40) = v29;
      char v32 = (void *)sub_251F360F0();
      char v33 = (void *)sub_251F360F0();
      char v34 = (void *)sub_251F360F0();
      uint64_t v35 = sub_251D3B848(v32);
      uint64_t v37 = v36;

      *(void *)(v23 + 96) = v30;
      *(void *)(v23 + 104) = v31;
      *(void *)(v23 + 72) = v35;
      *(void *)(v23 + 80) = v37;
LABEL_33:
      uint64_t v9 = sub_251F35710();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9;
    }
    static String.hfLocalized(_:)(0xD00000000000002ELL, 0x8000000251F6D7E0);
    switch(a4)
    {
      case 2:
        if (a9) {
          goto LABEL_31;
        }
        break;
      case 1:
        if (v13) {
          goto LABEL_31;
        }
        break;
      case 0:
        swift_bridgeObjectRelease();
        if ((v13 | a9)) {
          goto LABEL_6;
        }
        goto LABEL_24;
      default:
LABEL_31:
        swift_bridgeObjectRelease();
        goto LABEL_6;
    }
    sub_251A1A568(0, (unint64_t *)&qword_269BA04A0);
    char v43 = (void *)sub_251F360F0();
    Swift::Int_optional v44 = (void *)sub_251F360F0();
    char v45 = (void *)sub_251F360F0();
    uint64_t v46 = sub_251D3B848(v43);
    uint64_t v48 = v47;

    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
    uint64_t v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = xmmword_251F38650;
    *(void *)(v49 + 56) = MEMORY[0x263F8D310];
    *(void *)(v49 + 64) = sub_251B44770();
    *(void *)(v49 + 32) = v46;
    *(void *)(v49 + 40) = v48;
    goto LABEL_33;
  }
  return 0;
}

uint64_t sub_251BFB20C(uint64_t result, char a2)
{
  if (a2)
  {
    *(double *)&uint64_t result = 0.0;
    return result;
  }
  if ((~result & 0x7FF0000000000000) != 0)
  {
    if (*(double *)&result > -9.22337204e18)
    {
      if (*(double *)&result < 9.22337204e18)
      {
        uint64_t v2 = sub_251F36AB0();
        sub_251F35800();
        return v2;
      }
      goto LABEL_9;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_251BFB2BC(char a1, char a2, uint64_t a3, char a4)
{
  if (a1 == 2) {
    return 0;
  }
  if (a1)
  {
    uint64_t v5 = 0xD00000000000003ALL;
    uint64_t v6 = "HFServiceDescription.IrrigationSystem, State:RunningManual";
  }
  else
  {
    if ((a2 & 1) == 0 || (a4 & 1) != 0 || !a3)
    {
      unint64_t v7 = 0x8000000251F6D890;
      uint64_t v5 = 0xD000000000000030;
      return static String.hfLocalized(_:)(v5, v7);
    }
    uint64_t v5 = 0xD000000000000036;
    uint64_t v6 = "HFServiceDescription.IrrigationSystem, State:Scheduled";
  }
  unint64_t v7 = (unint64_t)(v6 - 32) | 0x8000000000000000;
  return static String.hfLocalized(_:)(v5, v7);
}

uint64_t sub_251BFB354(char a1, uint64_t a2, char a3)
{
  if (a1 != 2)
  {
    uint64_t v5 = 0xD000000000000021;
    if (a1)
    {
      uint64_t v6 = 0x8000000251F6CEB0;
      if ((a3 & 1) == 0 && a2 >= 1)
      {
        sub_251A1A568(0, (unint64_t *)&qword_269BA04A0);
        unint64_t v7 = (void *)sub_251F36100();
        uint64_t v8 = (void *)sub_251F36100();
        uint64_t v9 = (void *)sub_251F36100();
        uint64_t v4 = sub_251D3B848(v7);

        return v4;
      }
    }
    else
    {
      uint64_t v5 = 0xD000000000000022;
      uint64_t v6 = 0x8000000251F6CE80;
    }
    uint64_t v4 = static String.hfLocalized(_:)(v5, v6);
    swift_bridgeObjectRelease();
    return v4;
  }
  return 0;
}

uint64_t sub_251BFB45C(uint64_t result, char a2)
{
  if (a2)
  {
    *(double *)&uint64_t result = 0.0;
    return result;
  }
  if ((~result & 0x7FF0000000000000) != 0)
  {
    if (*(double *)&result > -9.22337204e18)
    {
      if (*(double *)&result < 9.22337204e18)
      {
        uint64_t v2 = sub_251F36AB0();
        swift_bridgeObjectRetain();
        sub_251F35800();
        swift_bridgeObjectRelease();
        static String.hfLocalized(_:)(0xD00000000000003CLL, 0x8000000251F6D950);
        swift_bridgeObjectRetain();
        sub_251F35800();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v2;
      }
      goto LABEL_9;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_251BFB57C(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if (a2) {
    return 0;
  }
  switch(a1)
  {
    case 0:
      if (a4) {
        return 0;
      }
      if (a3 == 1)
      {
        uint64_t v8 = "HFCharacteristicValueLockMechanismStateLocking";
        goto LABEL_15;
      }
      if (a3) {
        return 0;
      }
      uint64_t v4 = 0xD000000000000030;
      uint64_t v5 = "HFCharacteristicValueLockMechanismStateUnsecured";
      goto LABEL_8;
    case 1:
      if (a4) {
        return 0;
      }
      if (a3 == 1)
      {
        uint64_t v8 = "HFCharacteristicValueLockMechanismStateSecured";
LABEL_15:
        unint64_t v6 = (unint64_t)(v8 - 32) | 0x8000000000000000;
        uint64_t v4 = 0xD00000000000002ELL;
      }
      else
      {
        if (a3) {
          return 0;
        }
        uint64_t v4 = 0xD000000000000030;
        uint64_t v5 = "HFCharacteristicValueLockMechanismStateUnlocking";
LABEL_8:
        unint64_t v6 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      }
      uint64_t result = static String.hfLocalized(_:)(v4, v6);
      break;
    case 2:
      uint64_t v4 = 0xD00000000000002DLL;
      uint64_t v5 = "HFCharacteristicValueLockMechanismStateJammed";
      goto LABEL_8;
    case 3:
      uint64_t v8 = "HFCharacteristicValueLockMechanismStateUnknown";
      goto LABEL_15;
    default:
      return 0;
  }
  return result;
}

uint64_t sub_251BFB684(uint64_t a1, int a2, uint64_t a3, int a4)
{
  if ((a2 | a4)) {
    return 0;
  }
  if (a1 == 4)
  {
    uint64_t v4 = 0xD000000000000038;
    uint64_t v5 = "HFCharacteristicValueCurrentSecuritySystemStateTriggered";
LABEL_4:
    unint64_t v6 = (unint64_t)(v5 - 32) | 0x8000000000000000;
  }
  else
  {
    switch(a3)
    {
      case 0:
        if (a1) {
          goto LABEL_14;
        }
        uint64_t v4 = 0xD000000000000036;
        uint64_t v5 = "HFCharacteristicValueCurrentSecuritySystemStateStayArm";
        goto LABEL_4;
      case 1:
        if (a1 != 1) {
          goto LABEL_14;
        }
        uint64_t v4 = 0xD000000000000036;
        uint64_t v5 = "HFCharacteristicValueCurrentSecuritySystemStateAwayArm";
        goto LABEL_4;
      case 2:
        if (a1 == 2)
        {
          uint64_t v4 = 0xD000000000000037;
          uint64_t v5 = "HFCharacteristicValueCurrentSecuritySystemStateNightArm";
          goto LABEL_4;
        }
LABEL_14:
        unint64_t v6 = 0x8000000251F6DB50;
        uint64_t v4 = 0xD000000000000035;
        break;
      case 3:
        if (a1 == 3)
        {
          uint64_t v4 = 0xD000000000000037;
          uint64_t v5 = "HFCharacteristicValueCurrentSecuritySystemStateDisarmed";
        }
        else
        {
          uint64_t v4 = 0xD000000000000038;
          uint64_t v5 = "HFCharacteristicValueCurrentSecuritySystemStateDisarming";
        }
        goto LABEL_4;
      default:
        return 0;
    }
  }
  return static String.hfLocalized(_:)(v4, v6);
}

void *sub_251BFB7BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticCharacteristic();
  uint64_t v30 = *(void *)(v2 - 8);
  uint64_t v31 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v32 = (uint64_t)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (int *)type metadata accessor for StaticService();
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v9 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v10 = *(void *)(v5 + 72);
  v29[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v11 = (void *)MEMORY[0x263F8EE78];
  uint64_t v33 = v10;
  do
  {
    sub_251BB1974(v9, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v12 = &v7[v4[12]];
    if (v12[8] == 1)
    {
      sub_251BFC990((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
    }
    else
    {
      uint64_t v13 = *(void *)v12;
      uint64_t v14 = *(void *)&v7[v4[28]];
      uint64_t v15 = *(void *)(v14 + 16);
      uint64_t v35 = v13;
      if (v15 && (unint64_t v16 = sub_2519FE568(27), (v17 & 1) != 0))
      {
        uint64_t v18 = v32;
        sub_251BB1974(*(void *)(v14 + 56) + *(void *)(v30 + 72) * v16, v32, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
        uint64_t v19 = v18 + *(int *)(v31 + 24);
        if (*(unsigned char *)(v19 + 16) == 8)
        {
          uint64_t v20 = *(void *)(v18 + *(int *)(v31 + 24) + 8);
          uint64_t v34 = *(void *)v19;
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v34 = 0;
          uint64_t v20 = 0;
        }
        sub_251BFC990(v32, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
      }
      else
      {
        uint64_t v34 = 0;
        uint64_t v20 = 0;
      }
      uint64_t v21 = &v7[v4[5]];
      uint64_t v22 = *(void *)v21;
      uint64_t v23 = *((void *)v21 + 1);
      swift_bridgeObjectRetain();
      sub_251BFC990((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_251F0FE88(0, v11[2] + 1, 1, v11);
      }
      unint64_t v25 = v11[2];
      unint64_t v24 = v11[3];
      if (v25 >= v24 >> 1) {
        uint64_t v11 = sub_251F0FE88((void *)(v24 > 1), v25 + 1, 1, v11);
      }
      void v11[2] = v25 + 1;
      uint64_t v26 = &v11[5 * v25];
      uint64_t v27 = v34;
      v26[4] = v35;
      v26[5] = v27;
      v26[6] = v20;
      v26[7] = v22;
      v26[8] = v23;
      uint64_t v10 = v33;
    }
    v9 += v10;
    --v8;
  }
  while (v8);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_251BFBB04(char a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a1 == 2) {
    return 0;
  }
  if ((a1 & 1) == 0)
  {
    uint64_t v5 = 0xD000000000000022;
    uint64_t v6 = 0x8000000251F6CE80;
    return static String.hfLocalized(_:)(v5, v6);
  }
  if ((a3 & 1) != 0 || !a4 || (uint64_t v7 = *(void *)(a4 + 16)) == 0)
  {
LABEL_11:
    uint64_t v6 = 0x8000000251F6CEB0;
    uint64_t v5 = 0xD000000000000021;
    return static String.hfLocalized(_:)(v5, v6);
  }
  uint64_t v8 = a4 + 64;
  while (*(void *)(v8 - 32) != a2)
  {
    v8 += 40;
    if (!--v7) {
      goto LABEL_11;
    }
  }
  if (*(void *)(v8 - 16)) {
    uint64_t v4 = *(void *)(v8 - 24);
  }
  else {
    uint64_t v4 = *(void *)(v8 - 8);
  }
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t sub_251BFBBD4(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, int a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, double a17, unsigned __int8 a18)
{
  uint64_t v10 = 0;
  if ((a2 & 1) == 0 && (a4 & 1) == 0 && (a6 & 1) == 0)
  {
    switch(a1)
    {
      case 0:
        if (a3 == 2) {
          goto LABEL_23;
        }
        if (a3 == 1) {
          goto LABEL_22;
        }
        if (a3) {
          return 0;
        }
        return static String.hfLocalized(_:)(0xD00000000000002ALL, 0x8000000251F6DC90);
      case 1:
        if (a3 == 2) {
          goto LABEL_23;
        }
        if (a3 == 1) {
          goto LABEL_22;
        }
        if (a3) {
          return 0;
        }
        uint64_t v12 = 0xD000000000000043;
        uint64_t v13 = "HFServiceControlDescriptionHeaterCoolerTargetHeatingWithTemperature";
        goto LABEL_19;
      case 2:
        if (a3 == 2) {
          goto LABEL_23;
        }
        if (a3 == 1) {
          goto LABEL_22;
        }
        if (a3) {
          return 0;
        }
        uint64_t v12 = 0xD000000000000043;
        uint64_t v13 = "HFServiceControlDescriptionHeaterCoolerTargetCoolingWithTemperature";
        goto LABEL_19;
      case 3:
        if (((a8 | a18) & 1) == 0)
        {
          static String.hfLocalized(_:)(0xD00000000000001BLL, 0x8000000251F6D7C0);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
          uint64_t v22 = swift_allocObject();
          *(_OWORD *)(v22 + 16) = xmmword_251F3A500;
          uint64_t v23 = static ClimateSummarizer.temperatureAverageString(_:)(*(double *)&a7);
          uint64_t v25 = v24;
          uint64_t v26 = MEMORY[0x263F8D310];
          *(void *)(v22 + 56) = MEMORY[0x263F8D310];
          unint64_t v27 = sub_251B44770();
          *(void *)(v22 + 64) = v27;
          *(void *)(v22 + 32) = v23;
          *(void *)(v22 + 40) = v25;
          uint64_t v28 = static ClimateSummarizer.temperatureAverageString(_:)(a17);
          *(void *)(v22 + 96) = v26;
          *(void *)(v22 + 104) = v27;
          *(void *)(v22 + 72) = v28;
          *(void *)(v22 + 80) = v29;
          goto LABEL_26;
        }
        uint64_t v12 = 0xD000000000000031;
        uint64_t v13 = "HFServiceDescriptionThermostatAutoWithTemperature";
LABEL_19:
        unint64_t v14 = (unint64_t)(v13 - 32) | 0x8000000000000000;
        goto LABEL_25;
      default:
        if (a3 == 2)
        {
LABEL_23:
          uint64_t v15 = "HFServiceControlDescriptionHeaterCoolerCoolingToWithTemperature";
        }
        else
        {
          if (a3 != 1) {
            return 0;
          }
LABEL_22:
          uint64_t v15 = "HFServiceControlDescriptionHeaterCoolerHeatingToWithTemperature";
        }
        unint64_t v14 = (unint64_t)(v15 - 32) | 0x8000000000000000;
        uint64_t v12 = 0xD00000000000003FLL;
LABEL_25:
        static String.hfLocalized(_:)(v12, v14);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
        uint64_t v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_251F38650;
        uint64_t v17 = static ClimateSummarizer.temperatureAverageString(_:)(*(double *)&a5);
        uint64_t v19 = v18;
        *(void *)(v16 + 56) = MEMORY[0x263F8D310];
        *(void *)(v16 + 64) = sub_251B44770();
        *(void *)(v16 + 32) = v17;
        *(void *)(v16 + 40) = v19;
LABEL_26:
        uint64_t v10 = sub_251F35710();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
    }
  }
  return v10;
}

uint64_t _s13HomeDataModel13StaticServiceV11valveString6active5inUseSSSgSbSg_AHtFZ_0(char a1, char a2)
{
  if (a1 == 2) {
    return 0;
  }
  if ((a1 & 1) == 0)
  {
    if (a2 != 2)
    {
      if ((a2 & 1) == 0)
      {
        uint64_t v2 = 0xD00000000000001FLL;
        uint64_t v3 = "HFStatusDescriptionValve_OneOff";
LABEL_13:
        unint64_t v6 = (unint64_t)(v3 - 32) | 0x8000000000000000;
        return static String.hfLocalized(_:)(v2, v6);
      }
      uint64_t v5 = "HFStatusDescriptionValve_OneStopping";
      goto LABEL_11;
    }
    return 0;
  }
  if (a2 == 2) {
    return 0;
  }
  if (a2)
  {
    uint64_t v2 = 0xD000000000000023;
    uint64_t v3 = "HFStatusDescriptionValve_OneRunning";
    goto LABEL_13;
  }
  uint64_t v5 = "HFStatusDescriptionValve_OneStarting";
LABEL_11:
  unint64_t v6 = (unint64_t)(v5 - 32) | 0x8000000000000000;
  uint64_t v2 = 0xD000000000000024;
  return static String.hfLocalized(_:)(v2, v6);
}

uint64_t sub_251BFBF3C(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if (a2)
  {
    if ((a4 & 1) == 0)
    {
      switch(a3)
      {
        case 2:
          unint64_t v6 = "HFCharacteristicValueDoorStateStopped";
          goto LABEL_16;
        case 1:
          unint64_t v6 = "HFCharacteristicValueDoorStateOpening";
          goto LABEL_16;
        case 0:
          unint64_t v6 = "HFCharacteristicValueDoorStateClosing";
LABEL_16:
          unint64_t v8 = (unint64_t)(v6 - 32) | 0x8000000000000000;
          uint64_t v4 = 0xD000000000000025;
          return static String.hfLocalized(_:)(v4, v8);
      }
    }
    return 0;
  }
  if (a1 == 100)
  {
    uint64_t v4 = 0xD000000000000022;
    uint64_t v5 = "HFCharacteristicValueDoorStateOpen";
    goto LABEL_12;
  }
  if (!a1)
  {
    uint64_t v4 = 0xD000000000000024;
    uint64_t v5 = "HFCharacteristicValueDoorStateClosed";
LABEL_12:
    unint64_t v8 = (unint64_t)(v5 - 32) | 0x8000000000000000;
    return static String.hfLocalized(_:)(v4, v8);
  }
  sub_251A1A568(0, (unint64_t *)&qword_269BA04A0);
  uint64_t v9 = (void *)sub_251F36100();
  uint64_t v10 = (void *)sub_251F36100();
  uint64_t v11 = (void *)sub_251F36100();
  uint64_t v12 = sub_251D3B848(v9);
  uint64_t v14 = v13;

  static String.hfLocalized(_:)(0xD000000000000031, 0x8000000251F6DDE0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_251F38650;
  *(void *)(v15 + 56) = MEMORY[0x263F8D310];
  *(void *)(v15 + 64) = sub_251B44770();
  *(void *)(v15 + 32) = v12;
  *(void *)(v15 + 40) = v14;
  uint64_t v7 = sub_251F35720();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_251BFC104(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if (a4) {
    return 0;
  }
  if (a3 == 1)
  {
    if ((a2 & 1) == 0 && a1 == 1)
    {
      uint64_t v4 = 0xD000000000000024;
      uint64_t v5 = "HFCharacteristicValueDoorStateClosed";
      goto LABEL_11;
    }
    unint64_t v8 = "HFCharacteristicValueDoorStateClosing";
LABEL_14:
    unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
    uint64_t v4 = 0xD000000000000025;
    return static String.hfLocalized(_:)(v4, v7);
  }
  if (a3) {
    return 0;
  }
  if ((a2 & 1) != 0 || a1)
  {
    unint64_t v8 = "HFCharacteristicValueDoorStateOpening";
    goto LABEL_14;
  }
  uint64_t v4 = 0xD000000000000022;
  uint64_t v5 = "HFCharacteristicValueDoorStateOpen";
LABEL_11:
  unint64_t v7 = (unint64_t)(v5 - 32) | 0x8000000000000000;
  return static String.hfLocalized(_:)(v4, v7);
}

uint64_t sub_251BFC1AC(uint64_t a1, char a2)
{
  if (a2) {
    return 0;
  }
  switch(a1)
  {
    case 0:
      uint64_t v2 = "HFCharacteristicValueCurrentSecuritySystemStateStayArm";
      goto LABEL_6;
    case 1:
      uint64_t v2 = "HFCharacteristicValueCurrentSecuritySystemStateAwayArm";
LABEL_6:
      unint64_t v4 = (unint64_t)(v2 - 32) | 0x8000000000000000;
      uint64_t v5 = 0xD000000000000036;
      goto LABEL_10;
    case 2:
      uint64_t v5 = 0xD000000000000037;
      unint64_t v6 = "HFCharacteristicValueCurrentSecuritySystemStateNightArm";
      goto LABEL_9;
    case 3:
      uint64_t v5 = 0xD000000000000037;
      unint64_t v6 = "HFCharacteristicValueCurrentSecuritySystemStateDisarmed";
LABEL_9:
      unint64_t v4 = (unint64_t)(v6 - 32) | 0x8000000000000000;
LABEL_10:
      uint64_t result = static String.hfLocalized(_:)(v5, v4);
      break;
    default:
      return 0;
  }
  return result;
}

uint64_t sub_251BFC270(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, char a6, uint64_t a7, char a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, uint64_t a17, char a18, uint64_t a19, char a20,double a21,char a22)
{
  char v23 = a6 & 1;
  char v24 = a8 & 1;
  int v25 = a20 & 1;
  unsigned __int8 v26 = a22 & 1;
  if ((a2 | a4)) {
    return sub_251BFBBD4(a5, a6 & 1, a7, a8 & 1, a17, a18 & 1, a19, v25, a9, a10, a11, a12, a13, a14, a15, a16, a21, v26);
  }
  uint64_t v50 = static ClimateSummarizer.temperatureAverageString(_:)(*(double *)&a3);
  uint64_t v51 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CAB0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_251F38650;
  *(void *)(inited + 32) = a1;
  uint64_t v49 = _s13HomeDataModel17ClimateSummarizerV19humidityRangeString_17addPercentageSignSSSgSaySdG_SbtFZ_0(inited, 1);
  uint64_t v31 = v30;
  swift_setDeallocating();
  if (!v31)
  {
    swift_bridgeObjectRelease();
    return sub_251BFBBD4(a5, v23, a7, v24, a17, a18 & 1, a19, v25, v39, v40, v41, v42, v43, v44, v45, v46, a21, v26);
  }
  static String.hfLocalized(_:)(0xD00000000000002FLL, 0x8000000251F6DE20);
  uint64_t v32 = (void *)sub_251F356C0();
  swift_bridgeObjectRelease();
  sub_251A1A568(0, &qword_269B9FF80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_251F3A500;
  uint64_t v34 = MEMORY[0x263F8D310];
  *(void *)(v33 + 56) = MEMORY[0x263F8D310];
  unint64_t v35 = sub_251B44770();
  *(void *)(v33 + 32) = v50;
  *(void *)(v33 + 40) = v51;
  *(void *)(v33 + 96) = v34;
  *(void *)(v33 + 104) = v35;
  *(void *)(v33 + 64) = v35;
  *(void *)(v33 + 72) = v49;
  *(void *)(v33 + 80) = v31;
  uint64_t v36 = (void *)sub_251F36150();
  uint64_t v37 = sub_251F356F0();

  return v37;
}

uint64_t sub_251BFC474(char a1, uint64_t a2, char a3, char a4, char a5)
{
  if (a1 != 2)
  {
    if (a1) {
      uint64_t v7 = 0xD000000000000021;
    }
    else {
      uint64_t v7 = 0xD000000000000022;
    }
    if (a1) {
      uint64_t v8 = 0x8000000251F6CEB0;
    }
    else {
      uint64_t v8 = 0x8000000251F6CE80;
    }
    if ((a1 & 1) != 0 && (a3 & 1) == 0)
    {
      if (a2 >= 1 && (a4 & 1) != 0 && (a5 & 1) != 0)
      {
        sub_251A1A568(0, (unint64_t *)&qword_269BA04A0);
        uint64_t v9 = (void *)sub_251F36100();
        uint64_t v10 = (void *)sub_251F36100();
        uint64_t v11 = (void *)sub_251F36100();
        uint64_t v12 = sub_251D3B848(v9);

        swift_bridgeObjectRetain();
        sub_251F35800();
        swift_bridgeObjectRelease();
        static String.hfLocalized(_:)(0xD000000000000017, 0x8000000251F6DE50);
        swift_bridgeObjectRetain();
        sub_251F35800();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v12;
      }
      if (a2 >= 1)
      {
        sub_251A1A568(0, (unint64_t *)&qword_269BA04A0);
        uint64_t v13 = (void *)sub_251F36100();
        uint64_t v14 = (void *)sub_251F36100();
        uint64_t v15 = (void *)sub_251F36100();
        uint64_t v6 = sub_251D3B848(v13);

        return v6;
      }
      uint64_t v8 = 0x8000000251F6CEB0;
      uint64_t v7 = 0xD000000000000021;
    }
    uint64_t v6 = static String.hfLocalized(_:)(v7, v8);
    swift_bridgeObjectRelease();
    return v6;
  }
  return 0;
}

unint64_t sub_251BFC684()
{
  unint64_t result = qword_26B21EAB8;
  if (!qword_26B21EAB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B21EAB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21EAB8);
  }
  return result;
}

uint64_t sub_251BFC6E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticSoftwareUpdate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_251BFC750()
{
  unint64_t result = qword_269B9FF78;
  if (!qword_269B9FF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9FF78);
  }
  return result;
}

uint64_t _s21TelevisionInputSourceVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s21TelevisionInputSourceVwcp(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s21TelevisionInputSourceVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s21TelevisionInputSourceVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s21TelevisionInputSourceVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s21TelevisionInputSourceVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticService.TelevisionInputSource()
{
  return &type metadata for StaticService.TelevisionInputSource;
}

uint64_t sub_251BFC990(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251BFC9F0()
{
  uint64_t result = os_variant_has_internal_diagnostics();
  byte_269B9FF88 = result;
  return result;
}

uint64_t static Logger.hasInternalDiagnostics.getter()
{
  if (qword_269B9C338 != -1) {
    swift_once();
  }
  return byte_269B9FF88;
}

uint64_t sub_251BFCA64(uint64_t a1)
{
  return sub_251BFCC24(a1, qword_269B9FF90);
}

uint64_t static Logger.userLogger.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251BFCCC8(&qword_269B9C340, (uint64_t)qword_269B9FF90, a1);
}

uint64_t sub_251BFCAA4(uint64_t a1)
{
  return sub_251BFCC24(a1, qword_269B9FFA8);
}

uint64_t static Logger.cameraLogger.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251BFCCC8(&qword_269B9C348, (uint64_t)qword_269B9FFA8, a1);
}

uint64_t sub_251BFCAE4(uint64_t a1)
{
  return sub_251BFCC24(a1, qword_26B21F6E8);
}

uint64_t static Logger.phoenixLogger.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251BFCCC8(&qword_26B21FEF0, (uint64_t)qword_26B21F6E8, a1);
}

uint64_t sub_251BFCB28(uint64_t a1)
{
  return sub_251BFCC24(a1, qword_26B21ECB8);
}

uint64_t static Logger.matterLogger.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251BFCCC8(&qword_26B21ECD0, (uint64_t)qword_26B21ECB8, a1);
}

uint64_t sub_251BFCB68(uint64_t a1)
{
  return sub_251BFCC24(a1, qword_269B9FFC0);
}

uint64_t static Logger.accessoryDetailsLogger.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251BFCCC8(&qword_269B9C350, (uint64_t)qword_269B9FFC0, a1);
}

uint64_t sub_251BFCBB0(uint64_t a1)
{
  return sub_251BFCC24(a1, qword_26B21ED68);
}

uint64_t static Logger.recommendationsLogger.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251BFCCC8(&qword_26B21ED80, (uint64_t)qword_26B21ED68, a1);
}

uint64_t sub_251BFCC00(uint64_t a1)
{
  return sub_251BFCC24(a1, qword_269B9FFD8);
}

uint64_t sub_251BFCC24(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_251F350A0();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_251F35090();
}

uint64_t static Logger.delegation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251BFCCC8(&qword_269B9C358, (uint64_t)qword_269B9FFD8, a1);
}

uint64_t sub_251BFCCC8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_251F350A0();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

uint64_t static StateSnapshot.Coverage.all.getter()
{
  if (qword_26B21F398 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t static Collection<>.all.getter()
{
  if (qword_26B21F398 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_251BFCE18()
{
  uint64_t v0 = sub_251C08B44((uint64_t)&unk_27025F0B0);
  uint64_t result = swift_arrayDestroy();
  qword_26B21F5E0 = v0;
  return result;
}

uint64_t StateSnapshot.Coverage.hash(into:)(long long *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = *v2;
  if (*v2 == 2 || v4 == 1) {
    return sub_251F36CB0();
  }
  sub_251F36CB0();
  if (!v4) {
    return sub_251F36CC0();
  }
  sub_251F36CC0();
  swift_bridgeObjectRetain();
  sub_251A54708(a1, v4);
  return sub_251A58144(v4);
}

uint64_t sub_251BFCF04(uint64_t a1)
{
  unint64_t v2 = sub_251BFDF78();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251BFCF40(uint64_t a1)
{
  unint64_t v2 = sub_251BFDF78();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251BFCF7C(uint64_t a1)
{
  unint64_t v2 = sub_251BFDF24();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251BFCFB8(uint64_t a1)
{
  unint64_t v2 = sub_251BFDF24();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251BFCFF4()
{
  uint64_t v1 = 0x65536E6F69746361;
  if (*v0 != 1) {
    uint64_t v1 = 0x6574636172616863;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6968747972657665;
  }
}

uint64_t sub_251BFD06C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251BFEBC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251BFD094(uint64_t a1)
{
  unint64_t v2 = sub_251BFDED0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251BFD0D0(uint64_t a1)
{
  unint64_t v2 = sub_251BFDED0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251BFD10C(uint64_t a1)
{
  unint64_t v2 = sub_251BFDFCC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251BFD148(uint64_t a1)
{
  unint64_t v2 = sub_251BFDFCC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StateSnapshot.Coverage.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FFF0);
  uint64_t v23 = *(void *)(v4 - 8);
  uint64_t v24 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v22 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FFF8);
  uint64_t v26 = *(void *)(v6 - 8);
  uint64_t v27 = v6;
  MEMORY[0x270FA5388](v6);
  int v25 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0000);
  uint64_t v21 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0008);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251BFDED0();
  sub_251F36DA0();
  if (v15 == 2)
  {
    char v31 = 2;
    sub_251BFDF24();
    uint64_t v16 = v22;
    sub_251F36900();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v16, v24);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  if (v15 == 1)
  {
    char v29 = 0;
    sub_251BFDFCC();
    sub_251F36900();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  char v30 = 1;
  sub_251BFDF78();
  uint64_t v18 = v25;
  sub_251F36900();
  uint64_t v28 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC40);
  sub_251A1E490(&qword_269B9CC88, &qword_26B21E348);
  uint64_t v19 = v27;
  sub_251F36970();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v18, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t StateSnapshot.Coverage.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_251F36CA0();
  if (v1 == 2 || v1 == 1)
  {
    sub_251F36CB0();
  }
  else
  {
    sub_251F36CB0();
    sub_251F36CC0();
    if (v1)
    {
      swift_bridgeObjectRetain();
      sub_251A54708(v3, v1);
      sub_251A58144(v1);
    }
  }
  return sub_251F36D00();
}

uint64_t StateSnapshot.Coverage.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0030);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v30 = v3;
  uint64_t v31 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v34 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0038);
  uint64_t v32 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0040);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0048);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  unint64_t v35 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_251BFDED0();
  uint64_t v16 = v36;
  sub_251F36D90();
  if (v16) {
    goto LABEL_9;
  }
  uint64_t v17 = v34;
  uint64_t v36 = v12;
  uint64_t v18 = sub_251F368E0();
  uint64_t v19 = v11;
  if (*(void *)(v18 + 16) != 1)
  {
    uint64_t v23 = sub_251F36490();
    swift_allocError();
    int v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
    *int v25 = &type metadata for StateSnapshot.Coverage;
    sub_251F36780();
    sub_251F36480();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v23 - 8) + 104))(v25, *MEMORY[0x263F8DCB0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v11);
LABEL_9:
    uint64_t v26 = (uint64_t)v35;
    return __swift_destroy_boxed_opaque_existential_0(v26);
  }
  uint64_t v20 = v36;
  if (*(unsigned char *)(v18 + 32))
  {
    if (*(unsigned char *)(v18 + 32) == 1)
    {
      char v39 = 1;
      sub_251BFDF78();
      sub_251F36770();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC40);
      sub_251A1E490(&qword_269B9CC78, &qword_269B9CC80);
      uint64_t v21 = v28;
      sub_251F367D0();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v21);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v14, v19);
      uint64_t v22 = v37;
    }
    else
    {
      char v40 = 2;
      sub_251BFDF24();
      sub_251F36770();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v17, v30);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v14, v19);
      uint64_t v22 = 2;
    }
  }
  else
  {
    char v38 = 0;
    sub_251BFDFCC();
    sub_251F36770();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v14, v19);
    uint64_t v22 = 1;
  }
  uint64_t v26 = (uint64_t)v35;
  *uint64_t v33 = v22;
  return __swift_destroy_boxed_opaque_existential_0(v26);
}

uint64_t sub_251BFDC10(long long *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = *v2;
  if (*v2 == 2 || v4 == 1) {
    return sub_251F36CB0();
  }
  sub_251F36CB0();
  if (!v4) {
    return sub_251F36CC0();
  }
  sub_251F36CC0();
  swift_bridgeObjectRetain();
  sub_251A54708(a1, v4);
  return sub_251A58144(v4);
}

uint64_t sub_251BFDCAC()
{
  uint64_t v1 = *v0;
  sub_251F36CA0();
  if (v1 == 2 || v1 == 1)
  {
    sub_251F36CB0();
  }
  else
  {
    sub_251F36CB0();
    sub_251F36CC0();
    if (v1)
    {
      swift_bridgeObjectRetain();
      sub_251A54708(v3, v1);
      sub_251A58144(v1);
    }
  }
  return sub_251F36D00();
}

uint64_t sub_251BFDD4C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return StateSnapshot.Coverage.init(from:)(a1, a2);
}

uint64_t sub_251BFDD64(void *a1)
{
  return StateSnapshot.Coverage.encode(to:)(a1);
}

uint64_t _s13HomeDataModel13StateSnapshotV8CoverageO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if (*a1 == 2)
  {
    if (v3 == 2)
    {
      sub_251A58144(2);
      sub_251A58144(2);
      return 1;
    }
    goto LABEL_8;
  }
  if (v2 != 1)
  {
    if ((unint64_t)(v3 - 1) >= 2)
    {
      if (v2)
      {
        if (!v3)
        {
          uint64_t v4 = 0;
          goto LABEL_9;
        }
        sub_251A81FDC(*a1);
        sub_251A81FDC(v3);
        sub_251A81FDC(v2);
        sub_251A81FDC(v3);
        sub_251A81FDC(v2);
        char v6 = sub_251B04848(v2, v3);
        sub_251A58144(v2);
        sub_251A58144(v3);
        sub_251A58144(v3);
        sub_251A58144(v2);
        sub_251A58144(v2);
        if ((v6 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        uint64_t v7 = swift_bridgeObjectRetain();
        sub_251A81FDC(v7);
        sub_251A81FDC(0);
        sub_251A58144(0);
        sub_251A58144(v3);
        if (v3) {
          goto LABEL_10;
        }
      }
      return 1;
    }
LABEL_8:
    uint64_t v4 = *a2;
LABEL_9:
    sub_251A81FDC(v4);
    sub_251A81FDC(v2);
LABEL_10:
    sub_251A58144(v2);
    sub_251A58144(v3);
    return 0;
  }
  if (v3 != 1) {
    goto LABEL_8;
  }
  sub_251A58144(1);
  sub_251A58144(1);
  return v3;
}

unint64_t sub_251BFDED0()
{
  unint64_t result = qword_269BA0010;
  if (!qword_269BA0010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0010);
  }
  return result;
}

unint64_t sub_251BFDF24()
{
  unint64_t result = qword_269BA0018;
  if (!qword_269BA0018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0018);
  }
  return result;
}

unint64_t sub_251BFDF78()
{
  unint64_t result = qword_269BA0020;
  if (!qword_269BA0020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0020);
  }
  return result;
}

unint64_t sub_251BFDFCC()
{
  unint64_t result = qword_269BA0028;
  if (!qword_269BA0028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0028);
  }
  return result;
}

unint64_t sub_251BFE024()
{
  unint64_t result = qword_26B21F5E8;
  if (!qword_26B21F5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21F5E8);
  }
  return result;
}

unint64_t _s8CoverageOwxx(unint64_t *a1)
{
  unint64_t result = *a1;
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if ((v2 + 1) <= 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *_s8CoverageOwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v4 = *a2;
  }
  if ((v4 + 1) <= 1) {
    uint64_t v3 = swift_bridgeObjectRetain();
  }
  *a1 = v3;
  return a1;
}

uint64_t *_s8CoverageOwca(uint64_t *a1, uint64_t *a2)
{
  LODWORD(v3) = -1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v4) = -1;
  }
  else {
    uint64_t v4 = *a1;
  }
  unsigned int v5 = v4 + 1;
  uint64_t v6 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v3 = *a2;
  }
  unsigned int v7 = v3 + 1;
  if (v5 > 1)
  {
    *a1 = v6;
    if (v7 <= 1) {
      swift_bridgeObjectRetain();
    }
  }
  else if (v7 > 1)
  {
    swift_bridgeObjectRelease();
    *a1 = *a2;
  }
  else
  {
    *a1 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

unint64_t *_s8CoverageOwta(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  int v4 = -1;
  if (v3 < 0xFFFFFFFF) {
    int v4 = v3;
  }
  unint64_t v5 = *a2;
  if ((v4 + 1) > 1) {
    goto LABEL_9;
  }
  LODWORD(v6) = -1;
  if (v5 < 0xFFFFFFFF) {
    unint64_t v6 = *a2;
  }
  if ((v6 + 1) > 1)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    *a1 = v5;
    return a1;
  }
  *a1 = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s8CoverageOwet(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) < 2) {
    LODWORD(v3) = 0;
  }
  if (v3 >= 3) {
    return (v3 - 2);
  }
  else {
    return 0;
  }
}

uint64_t _s8CoverageOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StateSnapshot.Coverage()
{
  return &type metadata for StateSnapshot.Coverage;
}

unsigned char *_s8CoverageO10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251BFE38CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8CoverageO10CodingKeysOMa()
{
  return &_s8CoverageO10CodingKeysON;
}

ValueMetadata *_s8CoverageO24EverythingElseCodingKeysOMa()
{
  return &_s8CoverageO24EverythingElseCodingKeysON;
}

unsigned char *_s8CoverageO20ActionSetsCodingKeysOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x251BFE470);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s8CoverageO20ActionSetsCodingKeysOMa()
{
  return &_s8CoverageO20ActionSetsCodingKeysON;
}

ValueMetadata *_s8CoverageO25CharacteristicsCodingKeysOMa()
{
  return &_s8CoverageO25CharacteristicsCodingKeysON;
}

unint64_t sub_251BFE4BC()
{
  unint64_t result = qword_269BA0050;
  if (!qword_269BA0050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0050);
  }
  return result;
}

unint64_t sub_251BFE514()
{
  unint64_t result = qword_269BA0058;
  if (!qword_269BA0058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0058);
  }
  return result;
}

unint64_t sub_251BFE56C()
{
  unint64_t result = qword_269BA0060;
  if (!qword_269BA0060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0060);
  }
  return result;
}

unint64_t sub_251BFE5C4()
{
  unint64_t result = qword_269BA0068;
  if (!qword_269BA0068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0068);
  }
  return result;
}

unint64_t sub_251BFE61C()
{
  unint64_t result = qword_269BA0070;
  if (!qword_269BA0070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0070);
  }
  return result;
}

unint64_t sub_251BFE674()
{
  unint64_t result = qword_269BA0078;
  if (!qword_269BA0078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0078);
  }
  return result;
}

unint64_t sub_251BFE6CC()
{
  unint64_t result = qword_269BA0080;
  if (!qword_269BA0080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0080);
  }
  return result;
}

unint64_t sub_251BFE724()
{
  unint64_t result = qword_269BA0088;
  if (!qword_269BA0088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0088);
  }
  return result;
}

unint64_t sub_251BFE77C()
{
  unint64_t result = qword_269BA0090;
  if (!qword_269BA0090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0090);
  }
  return result;
}

unint64_t sub_251BFE7D4()
{
  unint64_t result = qword_269BA0098;
  if (!qword_269BA0098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0098);
  }
  return result;
}

uint64_t sub_251BFE828(uint64_t result)
{
  int64_t v1 = 0;
  uint64_t v2 = result + 56;
  uint64_t v3 = 1 << *(unsigned char *)(result + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(result + 56);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  while (v5)
  {
    unint64_t v7 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v8 = v7 | (v1 << 6);
LABEL_5:
    if ((unint64_t)(*(void *)(*(void *)(result + 48) + 8 * v8) - 1) >= 2) {
      return 1;
    }
  }
  int64_t v9 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v9 >= v6) {
    return 0;
  }
  unint64_t v10 = *(void *)(v2 + 8 * v9);
  ++v1;
  if (v10) {
    goto LABEL_24;
  }
  int64_t v1 = v9 + 1;
  if (v9 + 1 >= v6) {
    return 0;
  }
  unint64_t v10 = *(void *)(v2 + 8 * v1);
  if (v10) {
    goto LABEL_24;
  }
  int64_t v1 = v9 + 2;
  if (v9 + 2 >= v6) {
    return 0;
  }
  unint64_t v10 = *(void *)(v2 + 8 * v1);
  if (v10) {
    goto LABEL_24;
  }
  int64_t v1 = v9 + 3;
  if (v9 + 3 >= v6) {
    return 0;
  }
  unint64_t v10 = *(void *)(v2 + 8 * v1);
  if (v10) {
    goto LABEL_24;
  }
  int64_t v1 = v9 + 4;
  if (v9 + 4 >= v6) {
    return 0;
  }
  unint64_t v10 = *(void *)(v2 + 8 * v1);
  if (v10)
  {
LABEL_24:
    unint64_t v5 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v1 << 6);
    goto LABEL_5;
  }
  int64_t v11 = v9 + 5;
  if (v11 >= v6) {
    return 0;
  }
  unint64_t v10 = *(void *)(v2 + 8 * v11);
  if (v10)
  {
    int64_t v1 = v11;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v1 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v1 >= v6) {
      return 0;
    }
    unint64_t v10 = *(void *)(v2 + 8 * v1);
    ++v11;
    if (v10) {
      goto LABEL_24;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_251BFE960(uint64_t result)
{
  int64_t v1 = 0;
  uint64_t v2 = result + 56;
  uint64_t v3 = 1 << *(unsigned char *)(result + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(result + 56);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  while (v5)
  {
    unint64_t v7 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v8 = v7 | (v1 << 6);
LABEL_5:
    if (*(void *)(*(void *)(result + 48) + 8 * v8) == 2) {
      return 1;
    }
  }
  int64_t v9 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v9 >= v6) {
    return 0;
  }
  unint64_t v10 = *(void *)(v2 + 8 * v9);
  ++v1;
  if (v10) {
    goto LABEL_24;
  }
  int64_t v1 = v9 + 1;
  if (v9 + 1 >= v6) {
    return 0;
  }
  unint64_t v10 = *(void *)(v2 + 8 * v1);
  if (v10) {
    goto LABEL_24;
  }
  int64_t v1 = v9 + 2;
  if (v9 + 2 >= v6) {
    return 0;
  }
  unint64_t v10 = *(void *)(v2 + 8 * v1);
  if (v10) {
    goto LABEL_24;
  }
  int64_t v1 = v9 + 3;
  if (v9 + 3 >= v6) {
    return 0;
  }
  unint64_t v10 = *(void *)(v2 + 8 * v1);
  if (v10) {
    goto LABEL_24;
  }
  int64_t v1 = v9 + 4;
  if (v9 + 4 >= v6) {
    return 0;
  }
  unint64_t v10 = *(void *)(v2 + 8 * v1);
  if (v10)
  {
LABEL_24:
    unint64_t v5 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v1 << 6);
    goto LABEL_5;
  }
  int64_t v11 = v9 + 5;
  if (v11 >= v6) {
    return 0;
  }
  unint64_t v10 = *(void *)(v2 + 8 * v11);
  if (v10)
  {
    int64_t v1 = v11;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v1 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v1 >= v6) {
      return 0;
    }
    unint64_t v10 = *(void *)(v2 + 8 * v1);
    ++v11;
    if (v10) {
      goto LABEL_24;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_251BFEA94(uint64_t result)
{
  int64_t v1 = 0;
  uint64_t v2 = result + 56;
  uint64_t v3 = 1 << *(unsigned char *)(result + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(result + 56);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  while (1)
  {
    if (v5)
    {
      unint64_t v7 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v8 = v7 | (v1 << 6);
      goto LABEL_5;
    }
    int64_t v10 = v1 + 1;
    if (__OFADD__(v1, 1)) {
      break;
    }
    if (v10 >= v6) {
      return 0;
    }
    unint64_t v11 = *(void *)(v2 + 8 * v10);
    ++v1;
    if (!v11)
    {
      int64_t v1 = v10 + 1;
      if (v10 + 1 >= v6) {
        return 0;
      }
      unint64_t v11 = *(void *)(v2 + 8 * v1);
      if (!v11)
      {
        int64_t v1 = v10 + 2;
        if (v10 + 2 >= v6) {
          return 0;
        }
        unint64_t v11 = *(void *)(v2 + 8 * v1);
        if (!v11)
        {
          int64_t v12 = v10 + 3;
          if (v12 >= v6) {
            return 0;
          }
          unint64_t v11 = *(void *)(v2 + 8 * v12);
          if (!v11)
          {
            while (1)
            {
              int64_t v1 = v12 + 1;
              if (__OFADD__(v12, 1)) {
                goto LABEL_25;
              }
              if (v1 >= v6) {
                return 0;
              }
              unint64_t v11 = *(void *)(v2 + 8 * v1);
              ++v12;
              if (v11) {
                goto LABEL_20;
              }
            }
          }
          int64_t v1 = v12;
        }
      }
    }
LABEL_20:
    unint64_t v13 = __clz(__rbit64(v11));
    unint64_t v5 = (v11 - 1) & v11;
    unint64_t v8 = v13 + (v1 << 6);
LABEL_5:
    uint64_t v9 = *(void *)(*(void *)(result + 48) + 8 * v8);
    if ((unint64_t)(v9 - 1) >= 2)
    {
      swift_bridgeObjectRetain();
      return v9;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_251BFEBC4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6968747972657665 && a2 == 0xEE0065736C45676ELL;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65536E6F69746361 && a2 == 0xEA00000000007374 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574636172616863 && a2 == 0xEF73636974736972)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

BOOL static GaugeDataHolder.== infix(_:_:)(double *a1, double *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  if (a1[2] == a2[2]) {
    return a1[1] == a2[1];
  }
  return 0;
}

double GaugeDataHolder.value.getter()
{
  return *(double *)v0;
}

double GaugeDataHolder.valueRange.getter()
{
  return *(double *)(v0 + 8);
}

uint64_t GaugeDataHolder.hash(into:)()
{
  sub_251F36CF0();
  return sub_251B57E5C();
}

uint64_t sub_251BFEE10()
{
  if (*v0) {
    return 0x6E615265756C6176;
  }
  else {
    return 0x65756C6176;
  }
}

uint64_t sub_251BFEE4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251BFF91C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251BFEE74(uint64_t a1)
{
  unint64_t v2 = sub_251BFF5F0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251BFEEB0(uint64_t a1)
{
  unint64_t v2 = sub_251BFF5F0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t GaugeDataHolder.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA00A0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 8);
  uint64_t v9 = *(void *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251BFF5F0();
  sub_251F36DA0();
  LOBYTE(v11[0]) = 0;
  sub_251F369F0();
  if (!v2)
  {
    v11[0] = v8;
    v11[1] = v9;
    char v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA00B0);
    sub_251BFF644(&qword_269BA00B8);
    sub_251F36A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t GaugeDataHolder.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t GaugeDataHolder.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA00C0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251BFF5F0();
  sub_251F36D90();
  if (!v2)
  {
    LOBYTE(v14) = 0;
    sub_251F36850();
    uint64_t v10 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA00B0);
    v13[15] = 1;
    sub_251BFF644(&qword_269BA00C8);
    sub_251F36880();
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    long long v11 = v14;
    *(void *)a2 = v10;
    *(_OWORD *)(a2 + 8) = v11;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_251BFF304()
{
  sub_251F36CF0();
  return sub_251B57E5C();
}

uint64_t sub_251BFF360()
{
  return sub_251F36D00();
}

uint64_t sub_251BFF3C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return GaugeDataHolder.init(from:)(a1, a2);
}

uint64_t sub_251BFF3DC(void *a1)
{
  return GaugeDataHolder.encode(to:)(a1);
}

BOOL sub_251BFF3F4(double *a1, double *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  if (a1[2] == a2[2]) {
    return a1[1] == a2[1];
  }
  return 0;
}

uint64_t GaugeDataHolder.description.getter()
{
  return 0;
}

uint64_t GaugeDataHolder.debugDescription.getter()
{
  return GaugeDataHolder.description.getter();
}

uint64_t sub_251BFF5B4()
{
  return GaugeDataHolder.description.getter();
}

unint64_t sub_251BFF5F0()
{
  unint64_t result = qword_269BA00A8;
  if (!qword_269BA00A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA00A8);
  }
  return result;
}

uint64_t sub_251BFF644(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269BA00B0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251BFF6AC()
{
  unint64_t result = qword_269BA00D0;
  if (!qword_269BA00D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA00D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for GaugeDataHolder()
{
  return &type metadata for GaugeDataHolder;
}

unsigned char *storeEnumTagSinglePayload for GaugeDataHolder.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251BFF7DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GaugeDataHolder.CodingKeys()
{
  return &type metadata for GaugeDataHolder.CodingKeys;
}

unint64_t sub_251BFF818()
{
  unint64_t result = qword_269BA00D8;
  if (!qword_269BA00D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA00D8);
  }
  return result;
}

unint64_t sub_251BFF870()
{
  unint64_t result = qword_269BA00E0;
  if (!qword_269BA00E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA00E0);
  }
  return result;
}

unint64_t sub_251BFF8C8()
{
  unint64_t result = qword_269BA00E8;
  if (!qword_269BA00E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA00E8);
  }
  return result;
}

uint64_t sub_251BFF91C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E615265756C6176 && a2 == 0xEA00000000006567)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void __swiftcall Icon.init(customIconName:)(HomeDataModel::Icon *__return_ptr retstr, Swift::String customIconName)
{
  IconSymbol.init(rawValue:)(customIconName);
  if (v29 == 89)
  {
    if (qword_269B9C360 != -1) {
      swift_once();
    }
    int v3 = *(void **)algn_269BA00F8;
    HomeDataModel::StaticRenderingMode v26 = byte_269BA0100;
    uint64_t v4 = qword_269BA0108;
    uint64_t v5 = (void *)unk_269BA0110;
    HomeDataModel::StaticRenderingMode v6 = byte_269BA0118;
    uint64_t v7 = (void *)unk_269BA0128;
    uint64_t v27 = qword_269BA00F0;
    uint64_t v28 = qword_269BA0120;
    HomeDataModel::StaticRenderingMode v8 = byte_269BA0130;
    uint64_t v9 = qword_269BA0138;
    uint64_t v10 = (void *)unk_269BA0140;
    HomeDataModel::StaticRenderingMode v11 = byte_269BA0148;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v12 = v10;
    uint64_t v13 = v9;
    long long v14 = v12;
  }
  else
  {
    uint64_t v15 = IconSymbol.onStateSymbolName.getter();
    uint64_t v17 = v16;
    if (v29 - 27 > 0x2C || ((1 << (v29 - 27)) & 0x1000000000C1) == 0) {
      HomeDataModel::StaticRenderingMode v8 = HomeDataModel_StaticRenderingMode_monochrome;
    }
    else {
      HomeDataModel::StaticRenderingMode v8 = HomeDataModel_StaticRenderingMode_hierarchical;
    }
    uint64_t v19 = IconSymbol.rawValue.getter();
    uint64_t v5 = v20;
    if (v29 - 28 > 0x13) {
      HomeDataModel::StaticRenderingMode v21 = HomeDataModel_StaticRenderingMode_hierarchical;
    }
    else {
      HomeDataModel::StaticRenderingMode v21 = byte_251F46F5E[(char)(v29 - 28)];
    }
    HomeDataModel::StaticRenderingMode v24 = v21;
    uint64_t v25 = v19;
    uint64_t v28 = v15;
    if (v29 == 31)
    {
      HomeDataModel::StaticRenderingMode v11 = HomeDataModel_StaticRenderingMode_hierarchical;
      long long v14 = (void *)0x8000000251F6CAB0;
      uint64_t v13 = 0xD000000000000014;
      uint64_t v7 = v17;
      uint64_t v27 = v15;
      int v3 = v17;
      HomeDataModel::StaticRenderingMode v26 = v8;
      uint64_t v4 = v19;
      HomeDataModel::StaticRenderingMode v6 = v21;
    }
    else
    {
      uint64_t v22 = IconSymbol.rawValue.getter();
      long long v14 = v23;
      if (v29 - 41 < 7 || v29 == 28) {
        HomeDataModel::StaticRenderingMode v11 = HomeDataModel_StaticRenderingMode_monochrome;
      }
      else {
        HomeDataModel::StaticRenderingMode v11 = HomeDataModel_StaticRenderingMode_hierarchical;
      }
      uint64_t v7 = v17;
      uint64_t v27 = v15;
      int v3 = v17;
      HomeDataModel::StaticRenderingMode v26 = v8;
      uint64_t v4 = v25;
      HomeDataModel::StaticRenderingMode v6 = v24;
      uint64_t v13 = v22;
    }
  }
  swift_bridgeObjectRetain();
  retstr->tileOnStateIconInfo.name._countAndFlagsBits = v27;
  retstr->tileOnStateIconInfo.name._object = v3;
  retstr->tileOnStateIconInfo.renderingMode = v26;
  retstr->tileOffStateIconInfo.name._countAndFlagsBits = v4;
  retstr->tileOffStateIconInfo.name._object = v5;
  retstr->tileOffStateIconInfo.renderingMode = v6;
  retstr->accessoryControlOnStateIconInfo.name._countAndFlagsBits = v28;
  retstr->accessoryControlOnStateIconInfo.name._object = v7;
  retstr->accessoryControlOnStateIconInfo.renderingMode = v8;
  retstr->accessoryControlOffStateIconInfo.name._countAndFlagsBits = v13;
  retstr->accessoryControlOffStateIconInfo.name._object = v14;
  retstr->accessoryControlOffStateIconInfo.renderingMode = v11;
}

void __swiftcall Icon.init(deviceType:)(HomeDataModel::Icon *__return_ptr retstr, HomeDataModel::MatterDeviceType deviceType)
{
  uint64_t v3 = IconSymbol.rawValue.getter();
  retstr->tileOnStateIconInfo.name._countAndFlagsBits = v3;
  retstr->tileOnStateIconInfo.name._object = v4;
  retstr->tileOnStateIconInfo.renderingMode = HomeDataModel_StaticRenderingMode_monochrome;
  retstr->tileOffStateIconInfo.name._countAndFlagsBits = v3;
  retstr->tileOffStateIconInfo.name._object = v4;
  retstr->tileOffStateIconInfo.renderingMode = HomeDataModel_StaticRenderingMode_monochrome;
  retstr->accessoryControlOnStateIconInfo.name._countAndFlagsBits = v3;
  retstr->accessoryControlOnStateIconInfo.name._object = v4;
  retstr->accessoryControlOnStateIconInfo.renderingMode = HomeDataModel_StaticRenderingMode_monochrome;
  retstr->accessoryControlOffStateIconInfo.name._countAndFlagsBits = v3;
  retstr->accessoryControlOffStateIconInfo.name._object = v4;
  retstr->accessoryControlOffStateIconInfo.renderingMode = HomeDataModel_StaticRenderingMode_monochrome;
  swift_bridgeObjectRetain_n();
}

uint64_t Icon.Info.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void Icon.Info.renderingMode.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

BOOL static Icon.Info.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  int v3 = *(unsigned __int8 *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return v2 == v3;
  }
  char v5 = sub_251F36B10();
  BOOL result = 0;
  if (v5) {
    return v2 == v3;
  }
  return result;
}

uint64_t Icon.Info.hash(into:)()
{
  return sub_251F36CB0();
}

uint64_t sub_251BFFDCC()
{
  if (*v0) {
    return 0x6E697265646E6572;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_251BFFE0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251C029D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251BFFE34(uint64_t a1)
{
  unint64_t v2 = sub_251C01BB8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251BFFE70(uint64_t a1)
{
  unint64_t v2 = sub_251C01BB8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Icon.Info.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0150);
  uint64_t v9 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  HomeDataModel::StaticRenderingMode v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v10 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251C01BB8();
  sub_251F36DA0();
  char v13 = 0;
  sub_251F369D0();
  if (!v2)
  {
    char v12 = v10;
    char v11 = 1;
    sub_251C01C0C();
    sub_251F36A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v6, v4);
}

uint64_t Icon.Info.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t Icon.Info.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0168);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251C01BB8();
  sub_251F36D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v17 = 0;
  uint64_t v9 = sub_251F36830();
  uint64_t v11 = v10;
  char v15 = 1;
  sub_251C01C60();
  swift_bridgeObjectRetain();
  sub_251F36880();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v12 = v16;
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(unsigned char *)(a2 + 16) = v12;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

BOOL sub_251C0029C(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  int v3 = *(unsigned __int8 *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return v2 == v3;
  }
  char v5 = sub_251F36B10();
  BOOL result = 0;
  if (v5) {
    return v2 == v3;
  }
  return result;
}

uint64_t sub_251C002FC()
{
  return sub_251F36D00();
}

uint64_t sub_251C00360()
{
  return sub_251F36CB0();
}

uint64_t sub_251C00398()
{
  return sub_251F36D00();
}

uint64_t sub_251C003F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Icon.Info.init(from:)(a1, a2);
}

uint64_t sub_251C00410(void *a1)
{
  return Icon.Info.encode(to:)(a1);
}

void sub_251C00428()
{
  qword_269BA00F0 = 0x69662E6573756F68;
  *(void *)algn_269BA00F8 = 0xEA00000000006C6CLL;
  byte_269BA0100 = 2;
  qword_269BA0108 = 0x69662E6573756F68;
  unk_269BA0110 = 0xEA00000000006C6CLL;
  byte_269BA0118 = 0;
  qword_269BA0120 = 0x69662E6573756F68;
  unk_269BA0128 = 0xEA00000000006C6CLL;
  byte_269BA0130 = 2;
  qword_269BA0138 = 0x69662E6573756F68;
  unk_269BA0140 = 0xEA00000000006C6CLL;
  byte_269BA0148 = 0;
}

uint64_t static Icon.defaultIcon.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_269B9C360 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_269BA00F8;
  char v3 = byte_269BA0100;
  uint64_t v4 = qword_269BA0108;
  uint64_t v5 = unk_269BA0110;
  char v6 = byte_269BA0118;
  uint64_t v7 = qword_269BA0120;
  uint64_t v8 = unk_269BA0128;
  char v9 = byte_269BA0130;
  uint64_t v10 = qword_269BA0138;
  uint64_t v11 = unk_269BA0140;
  char v12 = byte_269BA0148;
  *(void *)a1 = qword_269BA00F0;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;
  *(unsigned char *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v10;
  *(void *)(a1 + 80) = v11;
  *(unsigned char *)(a1 + 88) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Icon.tileOnStateIconInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  char v3 = *(unsigned char *)(v1 + 16);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t Icon.tileOffStateIconInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  char v3 = *(unsigned char *)(v1 + 40);
  *(void *)a1 = *(void *)(v1 + 24);
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t Icon.accessoryControlOnStateIconInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 56);
  char v3 = *(unsigned char *)(v1 + 64);
  *(void *)a1 = *(void *)(v1 + 48);
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t Icon.accessoryControlOffStateIconInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 80);
  char v3 = *(unsigned char *)(v1 + 88);
  *(void *)a1 = *(void *)(v1 + 72);
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t Icon.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_251F357B0();
  sub_251F36CB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  sub_251F36CB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  sub_251F36CB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  sub_251F36CB0();
  return swift_bridgeObjectRelease();
}

unint64_t sub_251C006AC(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000020;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_251C00734()
{
  return sub_251C006AC(*v0);
}

uint64_t sub_251C0073C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251C02AD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251C00764(uint64_t a1)
{
  unint64_t v2 = sub_251C01E74();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C007A0(uint64_t a1)
{
  unint64_t v2 = sub_251C01E74();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Icon.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0178);
  uint64_t v26 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  uint64_t v6 = v1[1];
  char v8 = *((unsigned char *)v1 + 16);
  uint64_t v9 = v1[3];
  uint64_t v24 = v1[4];
  uint64_t v25 = v9;
  int v31 = *((unsigned __int8 *)v1 + 40);
  uint64_t v10 = v1[6];
  uint64_t v22 = v1[7];
  uint64_t v23 = v10;
  LODWORD(v10) = *((unsigned __int8 *)v1 + 64);
  uint64_t v11 = v1[10];
  uint64_t v18 = v1[9];
  uint64_t v19 = v11;
  int v20 = *((unsigned __int8 *)v1 + 88);
  int v21 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251C01E74();
  sub_251F36DA0();
  uint64_t v28 = v7;
  uint64_t v29 = v6;
  char v30 = v8;
  char v32 = 0;
  sub_251C01EC8();
  uint64_t v12 = v27;
  sub_251F36A20();
  if (v12) {
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v5, v3);
  }
  char v14 = v21;
  uint64_t v15 = v22;
  uint64_t v16 = v23;
  uint64_t v17 = v26;
  uint64_t v28 = v25;
  uint64_t v29 = v24;
  char v30 = v31;
  char v32 = 1;
  sub_251F36A20();
  uint64_t v28 = v16;
  uint64_t v29 = v15;
  char v30 = v14;
  char v32 = 2;
  sub_251F36A20();
  uint64_t v28 = v18;
  uint64_t v29 = v19;
  char v30 = v20;
  char v32 = 3;
  sub_251F36A20();
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v5, v3);
}

uint64_t Icon.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t Icon.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0190);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251C01E74();
  sub_251F36D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v30 = 0;
  sub_251C01F1C();
  sub_251F36880();
  uint64_t v9 = v27;
  uint64_t v25 = v26;
  int v29 = v28;
  char v30 = 1;
  swift_bridgeObjectRetain();
  sub_251F36880();
  uint64_t v23 = v9;
  uint64_t v21 = v26;
  LODWORD(v9) = v28;
  char v30 = 2;
  uint64_t v24 = v27;
  swift_bridgeObjectRetain();
  uint64_t v22 = 0;
  sub_251F36880();
  int v19 = v9;
  uint64_t v10 = v26;
  int v18 = v28;
  char v30 = 3;
  uint64_t v20 = v27;
  swift_bridgeObjectRetain();
  sub_251F36880();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v13 = v26;
  uint64_t v12 = v27;
  unsigned __int8 v14 = v28;
  uint64_t v15 = v23;
  swift_bridgeObjectRetain();
  uint64_t v16 = v10;
  uint64_t v17 = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)a2 = v25;
  *(void *)(a2 + 8) = v15;
  *(unsigned char *)(a2 + 16) = v29;
  *(void *)(a2 + 24) = v21;
  *(void *)(a2 + 32) = v17;
  *(unsigned char *)(a2 + 40) = v19;
  *(void *)(a2 + 48) = v16;
  *(void *)(a2 + 56) = v20;
  *(unsigned char *)(a2 + 64) = v18;
  *(void *)(a2 + 72) = v13;
  *(void *)(a2 + 80) = v12;
  *(unsigned char *)(a2 + 88) = v14;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251C00F94()
{
  return sub_251F36D00();
}

uint64_t sub_251C010C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Icon.init(from:)(a1, a2);
}

uint64_t sub_251C010D8(void *a1)
{
  return Icon.encode(to:)(a1);
}

void __swiftcall Icon.init(serviceKind:serviceSubKind:)(HomeDataModel::Icon *__return_ptr retstr, HomeDataModel::ServiceKind serviceKind, HomeDataModel::ServiceSubKind_optional serviceSubKind)
{
  unsigned __int8 v4 = *(unsigned char *)serviceKind;
  unsigned __int8 v5 = *(unsigned char *)serviceSubKind.value;
  switch(*(unsigned char *)serviceSubKind.value)
  {
    case 1:
      uint64_t v6 = "4589F38F-C0C0-4FF6-8E38-5291C7FB7545";
      goto LABEL_6;
    case 2:
      uint64_t v6 = "99D6534F-4293-43AC-A277-EA6D097A190C";
      goto LABEL_6;
    case 3:
      uint64_t v6 = "2234AD59-F757-414C-B87C-C35305FA9FFC";
      goto LABEL_6;
    case 4:
      uint64_t v6 = "44963F26-FA10-46C1-BFDD-A95D726265FD";
LABEL_6:
      if (((unint64_t)(v6 - 32) | 0x8000000000000000) == 0x8000000251F65E40) {
        goto LABEL_7;
      }
      char v7 = sub_251F36B10();
      swift_bridgeObjectRelease();
      if (v7) {
        goto LABEL_9;
      }
      unsigned __int8 v35 = 47;
      unsigned __int8 v34 = v5;
      static IconSymbol.defaultSymbol(for:subKind:)(&v35, &v34, &v33);
      uint64_t v32 = IconSymbol.onStateSymbolName.getter();
      uint64_t v26 = v27;
      unsigned __int8 v34 = v4;
      static IconSymbol.defaultSymbol(serviceKind:)(&v34, &v35);
      if (((1 << (v35 - 27)) & 0x1000000000C1) != 0) {
        char v28 = 0;
      }
      else {
        char v28 = 2;
      }
      if (v35 - 27 <= 0x2C) {
        HomeDataModel::StaticRenderingMode v15 = v28;
      }
      else {
        HomeDataModel::StaticRenderingMode v15 = HomeDataModel_StaticRenderingMode_monochrome;
      }
      unsigned __int8 v35 = 47;
      unsigned __int8 v34 = v5;
      swift_bridgeObjectRetain();
      static IconSymbol.defaultSymbol(for:subKind:)(&v35, &v34, &v33);
      unint64_t v21 = IconSymbol.rawValue.getter();
      char v30 = v29;
      unsigned __int8 v34 = v4;
      static IconSymbol.defaultSymbol(serviceKind:)(&v34, &v35);
      unsigned int v31 = v35 - 28;
      if (v31 > 0x13) {
        HomeDataModel::StaticRenderingMode v25 = HomeDataModel_StaticRenderingMode_hierarchical;
      }
      else {
        HomeDataModel::StaticRenderingMode v25 = byte_251F46F5E[(char)v31];
      }
      uint64_t v22 = v30;
      uint64_t v16 = v21;
      int v18 = v30;
      HomeDataModel::StaticRenderingMode v20 = v25;
      break;
    case 5:
      goto LABEL_9;
    default:
LABEL_7:
      swift_bridgeObjectRelease();
LABEL_9:
      unsigned __int8 v35 = v4;
      static IconSymbol.defaultSymbol(serviceKind:)(&v35, &v34);
      uint64_t v8 = IconSymbol.onStateSymbolName.getter();
      uint64_t v10 = v9;
      unsigned __int8 v34 = v4;
      static IconSymbol.defaultSymbol(serviceKind:)(&v34, &v35);
      unsigned int v11 = v35 - 27;
      BOOL v12 = v11 > 0x2C;
      uint64_t v13 = (1 << v11) & 0x1000000000C1;
      if (v12 || v13 == 0) {
        HomeDataModel::StaticRenderingMode v15 = HomeDataModel_StaticRenderingMode_monochrome;
      }
      else {
        HomeDataModel::StaticRenderingMode v15 = HomeDataModel_StaticRenderingMode_hierarchical;
      }
      unsigned __int8 v35 = v4;
      static IconSymbol.defaultSymbol(serviceKind:)(&v35, &v34);
      uint64_t v16 = IconSymbol.rawValue.getter();
      int v18 = v17;
      unsigned __int8 v34 = v4;
      static IconSymbol.defaultSymbol(serviceKind:)(&v34, &v35);
      unsigned int v19 = v35 - 28;
      uint64_t v32 = v8;
      if (v19 > 0x13) {
        HomeDataModel::StaticRenderingMode v20 = HomeDataModel_StaticRenderingMode_hierarchical;
      }
      else {
        HomeDataModel::StaticRenderingMode v20 = byte_251F46F5E[(char)v19];
      }
      unsigned __int8 v34 = v4;
      static IconSymbol.defaultSymbol(serviceKind:)(&v34, &v35);
      if (v35 == 31)
      {
        unint64_t v21 = 0xD000000000000014;
        uint64_t v22 = (void *)0x8000000251F6CAB0;
      }
      else
      {
        unsigned __int8 v35 = v4;
        static IconSymbol.defaultSymbol(serviceKind:)(&v35, &v34);
        unint64_t v21 = IconSymbol.rawValue.getter();
        uint64_t v22 = v23;
      }
      unsigned __int8 v34 = v4;
      static IconSymbol.defaultSymbol(serviceKind:)(&v34, &v35);
      unsigned int v24 = v35 - 28;
      if (v24 > 0x13) {
        HomeDataModel::StaticRenderingMode v25 = HomeDataModel_StaticRenderingMode_hierarchical;
      }
      else {
        HomeDataModel::StaticRenderingMode v25 = byte_251F46F5E[(char)v24];
      }
      uint64_t v26 = v10;
      break;
  }
  swift_bridgeObjectRetain();
  retstr->tileOnStateIconInfo.name._countAndFlagsBits = v32;
  retstr->tileOnStateIconInfo.name._object = v26;
  retstr->tileOnStateIconInfo.renderingMode = v15;
  retstr->tileOffStateIconInfo.name._countAndFlagsBits = v16;
  retstr->tileOffStateIconInfo.name._object = v18;
  retstr->tileOffStateIconInfo.renderingMode = v20;
  retstr->accessoryControlOnStateIconInfo.name._countAndFlagsBits = v32;
  retstr->accessoryControlOnStateIconInfo.name._object = v26;
  retstr->accessoryControlOnStateIconInfo.renderingMode = v15;
  retstr->accessoryControlOffStateIconInfo.name._countAndFlagsBits = v21;
  retstr->accessoryControlOffStateIconInfo.name._object = v22;
  retstr->accessoryControlOffStateIconInfo.renderingMode = v25;
}

void __swiftcall Icon.init(sfSymbolName:renderingMode:)(HomeDataModel::Icon *__return_ptr retstr, Swift::String sfSymbolName, HomeDataModel::StaticRenderingMode renderingMode)
{
  HomeDataModel::StaticRenderingMode v3 = *(unsigned char *)renderingMode;
  retstr->tileOnStateIconInfo.name = sfSymbolName;
  retstr->tileOnStateIconInfo.renderingMode = v3;
  retstr->tileOffStateIconInfo.name = sfSymbolName;
  retstr->tileOffStateIconInfo.renderingMode = v3;
  retstr->accessoryControlOnStateIconInfo.name = sfSymbolName;
  retstr->accessoryControlOnStateIconInfo.renderingMode = v3;
  retstr->accessoryControlOffStateIconInfo.name = sfSymbolName;
  retstr->accessoryControlOffStateIconInfo.renderingMode = v3;
  swift_bridgeObjectRetain_n();
}

uint64_t Icon.init(staticMediaProfile:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4 = *(unsigned __int16 *)(a1 + *(int *)(type metadata accessor for StaticMediaProfile() + 88));
  if ((~v4 & 0xFEFC) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F218);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_251F38650;
    *(_WORD *)(inited + 32) = v4;
    uint64_t v5 = _s13HomeDataModel18StaticMediaProfileV10iconSymbol3forSSSayAA0D9AccessoryV07SpecialE8CategoryOG_tFZ_0(inited);
    uint64_t v6 = v19;
    swift_setDeallocating();
    sub_251C02034(a1, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    uint64_t result = swift_bridgeObjectRetain_n();
    char v17 = 0;
    char v14 = 0;
    char v15 = 0;
    char v12 = 0;
    uint64_t v16 = v5;
    uint64_t v7 = v6;
    uint64_t v9 = v5;
    uint64_t v8 = v6;
    uint64_t v11 = v5;
    uint64_t v10 = v6;
  }
  else
  {
    if (qword_269B9C360 != -1) {
      swift_once();
    }
    uint64_t v5 = qword_269BA00F0;
    uint64_t v6 = *(void *)algn_269BA00F8;
    char v23 = byte_269BA0100;
    uint64_t v7 = unk_269BA0110;
    uint64_t v22 = qword_269BA0108;
    uint64_t v9 = qword_269BA0120;
    uint64_t v8 = unk_269BA0128;
    char v20 = byte_269BA0130;
    char v21 = byte_269BA0118;
    uint64_t v11 = qword_269BA0138;
    uint64_t v10 = unk_269BA0140;
    char v12 = byte_269BA0148;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = sub_251C02034(a1, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    char v15 = v20;
    char v14 = v21;
    uint64_t v16 = v22;
    char v17 = v23;
  }
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v6;
  *(unsigned char *)(a2 + 16) = v17;
  *(void *)(a2 + 24) = v16;
  *(void *)(a2 + 32) = v7;
  *(unsigned char *)(a2 + 40) = v14;
  *(void *)(a2 + 48) = v9;
  *(void *)(a2 + 56) = v8;
  *(unsigned char *)(a2 + 64) = v15;
  *(void *)(a2 + 72) = v11;
  *(void *)(a2 + 80) = v10;
  *(unsigned char *)(a2 + 88) = v12;
  return result;
}

uint64_t Icon.init(staticMediaSystem:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for StaticMediaProfile();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D520);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StaticMediaSystem();
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_251EDD4F8(v10);
  sub_251ABDAF4(v11, (uint64_t)v9);
  swift_bridgeObjectRelease();
  uint64_t v12 = type metadata accessor for StaticMediaSystemComponent();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v9, 1, v12) == 1)
  {
    sub_251C01F70((uint64_t)v9);
  }
  else
  {
    sub_251C01FD0((uint64_t)&v9[*(int *)(v12 + 20)], (uint64_t)v6);
    sub_251C02034((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
    __int16 v13 = *(_WORD *)&v6[*(int *)(v4 + 88)];
    sub_251C02034((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    if ((v13 & 0xC000) == 0 && (v13 & 0xFEFC) != 65276)
    {
      BOOL v29 = v13 == 2;
      if (v13 == 2) {
        unint64_t v28 = 0xD000000000000012;
      }
      else {
        unint64_t v28 = 0x2E646F70656D6F68;
      }
      if (v29) {
        unint64_t v15 = 0x8000000251F6DED0;
      }
      else {
        unint64_t v15 = 0xEE006C6C69662E32;
      }
      sub_251C02034(a1, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
      uint64_t result = swift_bridgeObjectRetain_n();
      char v27 = 0;
      char v17 = 0;
      char v20 = 0;
      char v25 = 0;
      unint64_t v26 = v28;
      unint64_t v16 = v15;
      uint64_t v19 = v28;
      unint64_t v18 = v15;
      uint64_t v22 = v28;
      unint64_t v21 = v15;
      goto LABEL_18;
    }
  }
  uint64_t v33 = a1;
  if (qword_269B9C360 != -1) {
    swift_once();
  }
  unint64_t v15 = *(void *)algn_269BA00F8;
  uint64_t v32 = qword_269BA00F0;
  int v31 = byte_269BA0100;
  unint64_t v16 = unk_269BA0110;
  uint64_t v30 = qword_269BA0108;
  char v17 = byte_269BA0118;
  uint64_t v19 = qword_269BA0120;
  unint64_t v18 = unk_269BA0128;
  char v20 = byte_269BA0130;
  uint64_t v22 = qword_269BA0138;
  unint64_t v21 = unk_269BA0140;
  char v23 = byte_269BA0148;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_251C02034(v33, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  char v25 = v23;
  unint64_t v26 = v30;
  char v27 = v31;
  unint64_t v28 = v32;
LABEL_18:
  *(void *)a2 = v28;
  *(void *)(a2 + 8) = v15;
  *(unsigned char *)(a2 + 16) = v27;
  *(void *)(a2 + 24) = v26;
  *(void *)(a2 + 32) = v16;
  *(unsigned char *)(a2 + 40) = v17;
  *(void *)(a2 + 48) = v19;
  *(void *)(a2 + 56) = v18;
  *(unsigned char *)(a2 + 64) = v20;
  *(void *)(a2 + 72) = v22;
  *(void *)(a2 + 80) = v21;
  *(unsigned char *)(a2 + 88) = v25;
  return result;
}

uint64_t Icon.init(actionSetKind:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = 0xD000000000000013;
  unint64_t v4 = 0x8000000251F65860;
  switch(*a1)
  {
    case 0:
      goto LABEL_6;
    case 1:
      unint64_t v3 = 0xD000000000000015;
      unint64_t v4 = 0x8000000251F65880;
      goto LABEL_6;
    case 2:
      unint64_t v4 = 0xEC0000006C6C6966;
      unint64_t v3 = 0x2E78616D2E6E7573;
      goto LABEL_6;
    case 3:
      unint64_t v4 = 0xEF6C6C69662E7372;
      unint64_t v3 = 0x6174732E6E6F6F6DLL;
      goto LABEL_6;
    case 7:
      if (qword_269B9C360 != -1) {
        swift_once();
      }
      unint64_t v3 = qword_269BA00F0;
      unint64_t v4 = *(void *)algn_269BA00F8;
      char v18 = byte_269BA0100;
      unint64_t v8 = unk_269BA0110;
      uint64_t v17 = qword_269BA0108;
      char v16 = byte_269BA0118;
      uint64_t v10 = qword_269BA0120;
      unint64_t v11 = unk_269BA0128;
      char v12 = byte_269BA0130;
      uint64_t v13 = qword_269BA0138;
      unint64_t v14 = unk_269BA0140;
      char v15 = byte_269BA0148;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRetain();
      char v9 = v16;
      unint64_t v7 = v17;
      char v6 = v18;
      goto LABEL_7;
    default:
      unint64_t v4 = 0xEA00000000006C6CLL;
      unint64_t v3 = 0x69662E6573756F68;
LABEL_6:
      uint64_t result = swift_bridgeObjectRetain_n();
      char v6 = 2;
      unint64_t v7 = v3;
      unint64_t v8 = v4;
      char v9 = 2;
      uint64_t v10 = v3;
      unint64_t v11 = v4;
      char v12 = 2;
      uint64_t v13 = v3;
      unint64_t v14 = v4;
      char v15 = 2;
LABEL_7:
      *(void *)a2 = v3;
      *(void *)(a2 + 8) = v4;
      *(unsigned char *)(a2 + 16) = v6;
      *(void *)(a2 + 24) = v7;
      *(void *)(a2 + 32) = v8;
      *(unsigned char *)(a2 + 40) = v9;
      *(void *)(a2 + 48) = v10;
      *(void *)(a2 + 56) = v11;
      *(unsigned char *)(a2 + 64) = v12;
      *(void *)(a2 + 72) = v13;
      *(void *)(a2 + 80) = v14;
      *(unsigned char *)(a2 + 88) = v15;
      return result;
  }
}

unint64_t sub_251C01BB8()
{
  unint64_t result = qword_269BA0158;
  if (!qword_269BA0158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0158);
  }
  return result;
}

unint64_t sub_251C01C0C()
{
  unint64_t result = qword_269BA0160;
  if (!qword_269BA0160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0160);
  }
  return result;
}

unint64_t sub_251C01C60()
{
  unint64_t result = qword_269BA0170;
  if (!qword_269BA0170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0170);
  }
  return result;
}

BOOL _s13HomeDataModel4IconV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  int v5 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v24 = *(void *)(a1 + 56);
  uint64_t v25 = *(void *)(a1 + 48);
  uint64_t v21 = *(void *)(a1 + 72);
  int v17 = *(unsigned __int8 *)(a1 + 88);
  int v6 = *(unsigned __int8 *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  int v9 = *(unsigned __int8 *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  int v22 = *(unsigned __int8 *)(a2 + 64);
  int v23 = *(unsigned __int8 *)(a1 + 64);
  uint64_t v19 = *(void *)(a2 + 72);
  uint64_t v20 = *(void *)(a1 + 80);
  uint64_t v18 = *(void *)(a2 + 80);
  int v16 = *(unsigned __int8 *)(a2 + 88);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
  {
    if (v2 != v6) {
      return 0;
    }
  }
  else
  {
    char v12 = sub_251F36B10();
    BOOL result = 0;
    if ((v12 & 1) == 0 || v2 != v6) {
      return result;
    }
  }
  if (v3 == v8 && v4 == v7)
  {
    if (v5 != v9) {
      return 0;
    }
  }
  else
  {
    char v14 = sub_251F36B10();
    BOOL result = 0;
    if ((v14 & 1) == 0 || v5 != v9) {
      return result;
    }
  }
  if (v25 == v10 && v24 == v11)
  {
    if (v23 != v22) {
      return 0;
    }
    return (v21 == v19 && v20 == v18 || (sub_251F36B10() & 1) != 0) && v17 == v16;
  }
  char v15 = sub_251F36B10();
  BOOL result = 0;
  if ((v15 & 1) != 0 && v23 == v22) {
    return (v21 == v19 && v20 == v18 || (sub_251F36B10() & 1) != 0) && v17 == v16;
  }
  return result;
}

unint64_t sub_251C01E74()
{
  unint64_t result = qword_269BA0180;
  if (!qword_269BA0180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0180);
  }
  return result;
}

unint64_t sub_251C01EC8()
{
  unint64_t result = qword_269BA0188;
  if (!qword_269BA0188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0188);
  }
  return result;
}

unint64_t sub_251C01F1C()
{
  unint64_t result = qword_269BA0198;
  if (!qword_269BA0198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0198);
  }
  return result;
}

uint64_t sub_251C01F70(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D520);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_251C01FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticMediaProfile();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_251C02034(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_251C02098()
{
  unint64_t result = qword_269BA01A0;
  if (!qword_269BA01A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA01A0);
  }
  return result;
}

unint64_t sub_251C020F0()
{
  unint64_t result = qword_269BA01A8;
  if (!qword_269BA01A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA01A8);
  }
  return result;
}

uint64_t destroy for Icon()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Icon(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Icon(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  return a1;
}

__n128 __swift_memcpy89_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for Icon(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for Icon(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 89)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Icon(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 88) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 89) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 89) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Icon()
{
  return &type metadata for Icon;
}

uint64_t destroy for StaticHH2Update.HH2State()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s13HomeDataModel4IconV4InfoVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Icon.Info(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for Icon.Info(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for Icon.Info(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Icon.Info(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Icon.Info()
{
  return &type metadata for Icon.Info;
}

unsigned char *storeEnumTagSinglePayload for Icon.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251C02684);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Icon.CodingKeys()
{
  return &type metadata for Icon.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for Icon.Info.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251C02788);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Icon.Info.CodingKeys()
{
  return &type metadata for Icon.Info.CodingKeys;
}

unint64_t sub_251C027C4()
{
  unint64_t result = qword_269BA01B0;
  if (!qword_269BA01B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA01B0);
  }
  return result;
}

unint64_t sub_251C0281C()
{
  unint64_t result = qword_269BA01B8;
  if (!qword_269BA01B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA01B8);
  }
  return result;
}

unint64_t sub_251C02874()
{
  unint64_t result = qword_269BA01C0;
  if (!qword_269BA01C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA01C0);
  }
  return result;
}

unint64_t sub_251C028CC()
{
  unint64_t result = qword_269BA01C8;
  if (!qword_269BA01C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA01C8);
  }
  return result;
}

unint64_t sub_251C02924()
{
  unint64_t result = qword_269BA01D0;
  if (!qword_269BA01D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA01D0);
  }
  return result;
}

unint64_t sub_251C0297C()
{
  unint64_t result = qword_269BA01D8;
  if (!qword_269BA01D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA01D8);
  }
  return result;
}

uint64_t sub_251C029D0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E697265646E6572 && a2 == 0xED000065646F4D67)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_251C02AD8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x8000000251F6DEF0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000251F6DF10 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x8000000251F6DF30 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x8000000251F6DF50)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

id sub_251C02F28(uint64_t a1, uint64_t a2, void *a3, unint64_t *a4)
{
  char v5 = (void *)(a1 + *a3);
  swift_beginAccess();
  if (*v5)
  {
    sub_251A1A568(0, a4);
    swift_bridgeObjectRetain();
    char v6 = (void *)sub_251F35AA0();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v6 = 0;
  }
  return v6;
}

uint64_t sub_251C02FE8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, void *a6)
{
  uint64_t v7 = a3;
  if (a3)
  {
    sub_251A1A568(0, a4);
    uint64_t v7 = sub_251F35AC0();
  }
  int v9 = (uint64_t *)(a1 + *a6);
  swift_beginAccess();
  *int v9 = v7;
  return swift_bridgeObjectRelease();
}

void sub_251C03218(void *a1)
{
}

uint64_t sub_251C03238(unint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v5 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *BOOL v2 = v5;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v5 < 0 || (v5 & 0x4000000000000000) != 0)
  {
    uint64_t v5 = a2(v5);
    *BOOL v2 = v5;
  }
  uint64_t v7 = v5 & 0xFFFFFFFFFFFFFF8;
  unint64_t v8 = *(void *)(v7 + 16);
  if (v8 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v9 = v8 - 1;
    uint64_t v10 = v8 - 1 - a1;
    if (v10 >= 0)
    {
      uint64_t v11 = v7 + 8 * a1;
      uint64_t v12 = *(void *)(v11 + 32);
      memmove((void *)(v11 + 32), (const void *)(v11 + 40), 8 * v10);
      *(void *)(v7 + 16) = v9;
      sub_251F35AE0();
      return v12;
    }
  }
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

void sub_251C03398(void *a1)
{
}

void sub_251C033B8(void *a1, void *a2, uint64_t (*a3)(uint64_t))
{
  char v6 = (unint64_t *)(v3 + *a2);
  swift_beginAccess();
  unint64_t v7 = *v6;
  if (*v6)
  {
    if (v7 >> 62)
    {
LABEL_16:
      id v15 = a1;
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_251F366C0();
      if (v8)
      {
LABEL_4:
        sub_251A1A568(0, (unint64_t *)&qword_26B21ECF8);
        unint64_t v10 = 0;
        while (1)
        {
          id v11 = (v7 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x2533AB3A0](v10, v7)
              : *(id *)(v7 + 8 * v10 + 32);
          uint64_t v12 = v11;
          char v13 = sub_251F36120();

          if (v13) {
            break;
          }
          unint64_t v14 = v10 + 1;
          if (__OFADD__(v10, 1))
          {
            __break(1u);
            goto LABEL_16;
          }
          ++v10;
          if (v14 == v8) {
            goto LABEL_11;
          }
        }
        swift_bridgeObjectRelease();

        swift_beginAccess();
        if (!*v6) {
          goto LABEL_19;
        }
        a1 = (void *)sub_251C03238(v10, a3);
        swift_endAccess();
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v9 = a1;
      swift_bridgeObjectRetain();
      if (v8) {
        goto LABEL_4;
      }
    }
LABEL_11:
    swift_bridgeObjectRelease();
LABEL_14:

    return;
  }
  __break(1u);
LABEL_19:
  __break(1u);
}

void sub_251C035B8(char *a1, uint64_t a2, void *a3, void *a4)
{
  char v6 = &a1[*a4];
  swift_beginAccess();
  if (*(void *)v6)
  {
    id v7 = a3;
    uint64_t v8 = a1;
    MEMORY[0x2533AA9D0]();
    if (*(void *)((*(void *)v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v6 & 0xFFFFFFFFFFFFFF8)
                                                                                + 0x18) >> 1)
      sub_251F35B10();
    sub_251F35B70();
    sub_251F35AE0();
    swift_endAccess();
  }
  else
  {
    __break(1u);
  }
}

void sub_251C03678(void *a1)
{
}

uint64_t sub_251C03768()
{
  uint64_t v1 = v0;
  sub_251F36400();
  sub_251F35800();
  swift_bridgeObjectRetain();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  BOOL v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC13HomeDataModel18MockTriggerBuilder_events);
  swift_beginAccess();
  uint64_t v6 = *v2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0310);
  sub_251F35770();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  id v3 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC13HomeDataModel18MockTriggerBuilder_triggerOwnedActionSet), sel_actions, v6);
  if (v3)
  {
    unsigned int v4 = v3;
    sub_251A1A568(0, (unint64_t *)&qword_26B21EB40);
    sub_251A5E2A0();
    sub_251F35E40();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0318);
  sub_251F35770();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  return 0;
}

id sub_251C0399C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MockTriggerBuilder();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MockTriggerBuilder()
{
  return self;
}

uint64_t sub_251C03AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v40 = a4;
  uint64_t v38 = a3;
  uint64_t v6 = type metadata accessor for StaticService();
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  id v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  id v11 = (char *)&v34 - v10;
  uint64_t v12 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  uint64_t v37 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  id v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  int v17 = (char *)&v34 - v16;
  uint64_t v41 = a1;
  uint64_t v18 = *(void *)(a2 + 56);
  uint64_t v35 = a2 + 56;
  uint64_t v19 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v18;
  int64_t v36 = (unint64_t)(v19 + 63) >> 6;
  uint64_t v39 = a2;
  swift_bridgeObjectRetain();
  int64_t v22 = 0;
  while (v21)
  {
    unint64_t v23 = __clz(__rbit64(v21));
    v21 &= v21 - 1;
    unint64_t v24 = v23 | (v22 << 6);
LABEL_24:
    sub_251C04528(*(void *)(v39 + 48) + *(void *)(v37 + 72) * v24, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
    sub_251A4F520((uint64_t)v17, (uint64_t)v15);
    uint64_t v28 = (uint64_t)&v15[*(int *)(v12 + 20)];
    sub_251C04528(v28, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251A641C8((uint64_t)v11, (uint64_t)v9);
    sub_251C04590((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
    BOOL v29 = &v15[*(int *)(v12 + 24)];
    uint64_t v30 = &v29[*(int *)(type metadata accessor for StaticCharacteristic() + 24)];
    int v31 = v30[16];
    uint64_t v32 = *(void *)v30;
    switch(v31)
    {
      case 0:
        if ((v32 & 1) == 0) {
          goto LABEL_5;
        }
        goto LABEL_4;
      case 1:
        uint64_t v32 = v32;
        goto LABEL_32;
      case 2:
        uint64_t v32 = (unsigned __int16)v32;
        goto LABEL_32;
      case 3:
        uint64_t v32 = v32;
        goto LABEL_32;
      case 4:
        if ((v32 & 0x8000000000000000) == 0) {
          goto LABEL_32;
        }
        goto LABEL_36;
      case 5:
      case 6:
        uint64_t v32 = (int)v32;
LABEL_32:
        if (!v32) {
          goto LABEL_5;
        }
        goto LABEL_4;
      default:
LABEL_4:
        sub_251C04528(v28, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
        sub_251A641C8((uint64_t)v11, (uint64_t)v9);
        sub_251C04590((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_5:
        sub_251C04590((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
        break;
    }
  }
  int64_t v25 = v22 + 1;
  if (__OFADD__(v22, 1))
  {
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (v25 >= v36) {
    goto LABEL_34;
  }
  unint64_t v26 = *(void *)(v35 + 8 * v25);
  ++v22;
  if (v26) {
    goto LABEL_23;
  }
  int64_t v22 = v25 + 1;
  if (v25 + 1 >= v36) {
    goto LABEL_34;
  }
  unint64_t v26 = *(void *)(v35 + 8 * v22);
  if (v26) {
    goto LABEL_23;
  }
  int64_t v22 = v25 + 2;
  if (v25 + 2 >= v36) {
    goto LABEL_34;
  }
  unint64_t v26 = *(void *)(v35 + 8 * v22);
  if (v26) {
    goto LABEL_23;
  }
  int64_t v22 = v25 + 3;
  if (v25 + 3 >= v36) {
    goto LABEL_34;
  }
  unint64_t v26 = *(void *)(v35 + 8 * v22);
  if (v26)
  {
LABEL_23:
    unint64_t v21 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v22 << 6);
    goto LABEL_24;
  }
  int64_t v27 = v25 + 4;
  if (v27 < v36)
  {
    unint64_t v26 = *(void *)(v35 + 8 * v27);
    if (!v26)
    {
      while (1)
      {
        int64_t v22 = v27 + 1;
        if (__OFADD__(v27, 1)) {
          break;
        }
        if (v22 >= v36) {
          goto LABEL_34;
        }
        unint64_t v26 = *(void *)(v35 + 8 * v22);
        ++v27;
        if (v26) {
          goto LABEL_23;
        }
      }
LABEL_37:
      __break(1u);
      JUMPOUT(0x251C03ED8);
    }
    int64_t v22 = v27;
    goto LABEL_23;
  }
LABEL_34:
  swift_release();
  return v41;
}

__n128 static LightsSummarizer.lightsSummary(from:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_251C043B0(a1, (uint64_t *)v5);
  uint64_t v3 = v6;
  __n128 result = (__n128)v5[1];
  *(_OWORD *)a2 = v5[0];
  *(__n128 *)(a2 + 16) = result;
  *(void *)(a2 + 32) = v3;
  return result;
}

uint64_t sub_251C03F34(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    if (a2 != a1)
    {
      static String.hfLocalized(_:)(0xD000000000000027, 0x8000000251F6E210);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
      uint64_t v6 = swift_allocObject();
      uint64_t v7 = MEMORY[0x263F8D6C8];
      *(_OWORD *)(v6 + 16) = xmmword_251F38650;
      uint64_t v8 = MEMORY[0x263F8D750];
      *(void *)(v6 + 56) = v7;
      *(void *)(v6 + 64) = v8;
      *(void *)(v6 + 32) = a1;
      uint64_t v9 = sub_251F35720();
      swift_bridgeObjectRelease();
      return v9;
    }
    uint64_t v3 = 0x8000000251F6B8F0;
    uint64_t v4 = 0xD00000000000001ALL;
  }
  else
  {
    uint64_t v4 = 0xD00000000000001BLL;
    uint64_t v3 = 0x8000000251F6B8D0;
  }
  return static String.hfLocalized(_:)(v4, v3);
}

uint64_t sub_251C04044()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA03E8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_251F3A500;
  if (qword_269B9C370 != -1) {
    swift_once();
  }
  uint64_t v1 = unk_269BA03A0;
  uint64_t v2 = qword_269BA03A8;
  uint64_t v3 = unk_269BA03B0;
  uint64_t v4 = qword_269BA03B8;
  *(void *)(v0 + 32) = qword_269BA0398;
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 48) = v2;
  *(void *)(v0 + 56) = v3;
  *(void *)(v0 + 64) = v4;
  uint64_t v5 = qword_269B9C378;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v6 = *(void *)algn_269BA03C8;
  uint64_t v7 = qword_269BA03D0;
  uint64_t v8 = unk_269BA03D8;
  uint64_t v9 = qword_269BA03E0;
  *(void *)(v0 + 72) = qword_269BA03C0;
  *(void *)(v0 + 80) = v6;
  *(void *)(v0 + 88) = v7;
  *(void *)(v0 + 96) = v8;
  *(void *)(v0 + 104) = v9;
  qword_269BA0390 = v0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t static LightsSummarizer.allLightsSummaryFetchSpecifications.getter()
{
  if (qword_269B9C368 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

void sub_251C041E0()
{
  qword_269BA0398 = 0x6C7562746867694CLL;
  unk_269BA03A0 = 0xEA00000000007362;
  qword_269BA03A8 = (uint64_t)&unk_270261CD0;
  unk_269BA03B0 = MEMORY[0x263F8EE78];
  qword_269BA03B8 = (uint64_t)&unk_270261CF8;
}

uint64_t static LightsSummarizer.lightbulbsFetchSpecification.getter@<X0>(void *a1@<X8>)
{
  if (qword_269B9C370 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_269BA03A0;
  uint64_t v3 = qword_269BA03A8;
  uint64_t v4 = unk_269BA03B0;
  uint64_t v5 = qword_269BA03B8;
  *a1 = qword_269BA0398;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_251C042C8()
{
  qword_269BA03C0 = 0xD00000000000001CLL;
  *(void *)algn_269BA03C8 = 0x8000000251F6E1F0;
  qword_269BA03D0 = (uint64_t)&unk_270261D20;
  unk_269BA03D8 = MEMORY[0x263F8EE78];
  qword_269BA03E0 = (uint64_t)&unk_270261D48;
}

uint64_t static LightsSummarizer.lightbulbSwitchesAndOutletsFetchSpecification.getter@<X0>(void *a1@<X8>)
{
  if (qword_269B9C378 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_269BA03C8;
  uint64_t v3 = qword_269BA03D0;
  uint64_t v4 = unk_269BA03D8;
  uint64_t v5 = qword_269BA03E0;
  *a1 = qword_269BA03C0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_251C043B0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = a1;
  uint64_t v14 = MEMORY[0x263F8EE88];
  uint64_t v15 = MEMORY[0x263F8EE88];
  if (qword_269B9C368 != -1) {
    a1 = swift_once();
  }
  uint64_t v13 = qword_269BA0390;
  MEMORY[0x270FA5388](a1);
  v11[8] = 0;
  uint64_t v12 = &v13;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_251B0A6D4((void (*)(uint64_t *__return_ptr, char *))sub_251C04504, (uint64_t)v11, v2);
  uint64_t v5 = sub_251EE0F50(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_251C03AA4(MEMORY[0x263F8EE88], v5, (uint64_t)&v14, (uint64_t)&v15);
  swift_bridgeObjectRelease();
  uint64_t v7 = v14;
  uint64_t result = sub_251C03F34(*(void *)(v6 + 16), *(void *)(v14 + 16));
  uint64_t v9 = v15;
  *a2 = v6;
  a2[1] = v9;
  a2[2] = v7;
  a2[3] = result;
  a2[4] = v10;
  return result;
}

ValueMetadata *type metadata accessor for LightsSummarizer()
{
  return &type metadata for LightsSummarizer;
}

uint64_t sub_251C04504@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_251CCCF4C(a1, *(unsigned char *)(v2 + 16), *(unsigned char *)(v2 + 17), *(uint64_t **)(v2 + 24), a2);
}

uint64_t sub_251C04528(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251C04590(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t static DataModel.sharedAsync(coverages:)(uint64_t a1)
{
  v2[13] = a1;
  v2[14] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2203A0);
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for StateSnapshot(0);
  v2[17] = v3;
  v2[18] = *(void *)(v3 - 8);
  v2[19] = swift_task_alloc();
  v2[20] = sub_251F35C80();
  v2[21] = sub_251F35C70();
  uint64_t v5 = sub_251F35C00();
  v2[22] = v5;
  v2[23] = v4;
  return MEMORY[0x270FA2498](sub_251C04728, v5, v4);
}

uint64_t sub_251C04728()
{
  uint64_t v1 = v0[13];
  if (!v1)
  {
    swift_beginAccess();
    if (qword_26B21F258 == 4)
    {
      uint64_t v1 = sub_251C08B44((uint64_t)&unk_2702617C8);
      swift_arrayDestroy();
    }
    else
    {
      if (qword_26B21F398 != -1) {
        swift_once();
      }
      uint64_t v1 = qword_26B21F5E0;
      swift_bridgeObjectRetain();
    }
  }
  v0[24] = v1;
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[25] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_251C04864;
  return sub_251C070F8();
}

uint64_t sub_251C04864(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 208) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 184);
  uint64_t v4 = *(void *)(v2 + 176);
  return MEMORY[0x270FA2498](sub_251C0498C, v4, v3);
}

uint64_t sub_251C0498C()
{
  if (!*(void *)(v0 + 208))
  {
    *(void *)(v0 + 320) = sub_251F35C70();
    uint64_t v30 = sub_251F35C00();
    uint64_t v5 = v31;
    *(void *)(v0 + 328) = v30;
    *(void *)(v0 + 336) = v31;
    uint64_t v3 = (uint64_t)sub_251C05B40;
    uint64_t v4 = v30;
LABEL_22:
    return MEMORY[0x270FA2498](v3, v4, v5);
  }
  id v1 = objc_msgSend(*(id *)(v0 + 208), sel_sortedHomes);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v2 = sub_251F35AC0();
  *(void *)(v0 + 216) = v2;

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_251F366C0();
    uint64_t v3 = swift_bridgeObjectRelease();
    *(void *)(v0 + 224) = v6;
    if (v6) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    *(void *)(v0 + 224) = v6;
    if (v6)
    {
LABEL_4:
      uint64_t v7 = OBJC_IVAR____TtC13HomeDataModel9DataModel__homesToStateSnapshots;
      *(void *)(v0 + 232) = OBJC_IVAR____TtC13HomeDataModel9DataModel___observationRegistrar;
      *(void *)(v0 + 240) = v7;
      if (v6 >= 1)
      {
        swift_beginAccess();
        uint64_t v8 = 0;
        while (1)
        {
          *(void *)(v0 + 248) = v8;
          uint64_t v10 = *(void *)(v0 + 216);
          if ((v10 & 0xC000000000000001) != 0) {
            id v11 = (id)MEMORY[0x2533AB3A0]();
          }
          else {
            id v11 = *(id *)(v10 + 8 * v8 + 32);
          }
          uint64_t v12 = v11;
          *(void *)(v0 + 256) = v11;
          uint64_t v13 = *(void *)(v0 + 240);
          uint64_t v14 = *(void *)(v0 + 208);
          id v15 = objc_msgSend(v11, sel_uniqueIdentifier);
          uint64_t v16 = sub_251F34DA0();
          uint64_t v17 = *(void *)(v16 - 8);
          uint64_t v18 = swift_task_alloc();
          sub_251F34D80();

          swift_getKeyPath();
          *(void *)(v0 + 96) = v14;
          sub_251AD2C08();
          sub_251F34F10();
          swift_release();
          uint64_t v19 = *(void *)(v14 + v13);
          if (*(void *)(v19 + 16))
          {
            swift_bridgeObjectRetain();
            unint64_t v20 = sub_2519FE584(v18);
            uint64_t v22 = *(void *)(v0 + 136);
            uint64_t v21 = *(void *)(v0 + 144);
            uint64_t v23 = *(void *)(v0 + 128);
            if (v24)
            {
              sub_251C0AC14(*(void *)(v19 + 56) + *(void *)(v21 + 72) * v20, *(void *)(v0 + 128), type metadata accessor for StateSnapshot);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(v23, 0, 1, v22);
            }
            else
            {
              (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v21 + 56))(*(void *)(v0 + 128), 1, 1, v22);
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 144) + 56))(*(void *)(v0 + 128), 1, 1, *(void *)(v0 + 136));
          }
          uint64_t v25 = *(void *)(v0 + 136);
          uint64_t v26 = *(void *)(v0 + 144);
          uint64_t v27 = *(void *)(v0 + 128);
          (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v16);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v27, 1, v25) == 1)
          {
            uint64_t v9 = *(void *)(v0 + 128);

            sub_251A1B064(v9, &qword_26B2203A0);
            swift_task_dealloc();
          }
          else
          {
            uint64_t v28 = *(void *)(v0 + 192);
            sub_251C0ACDC(*(void *)(v0 + 128), *(void *)(v0 + 152), type metadata accessor for StateSnapshot);
            swift_task_dealloc();
            uint64_t v29 = swift_bridgeObjectRetain();
            LOBYTE(v28) = sub_251A7F5A0(v29, v28);
            swift_bridgeObjectRelease();
            if ((v28 & 1) == 0)
            {
              *(_DWORD *)(v0 + 376) = *(_DWORD *)(*(void *)(v0 + 136) + 20);
              uint64_t v3 = (uint64_t)sub_251C04E4C;
              uint64_t v4 = 0;
              uint64_t v5 = 0;
              goto LABEL_22;
            }
            sub_251C0AC7C(*(void *)(v0 + 152), type metadata accessor for StateSnapshot);
          }
          uint64_t v8 = *(void *)(v0 + 248) + 1;
          if (v8 == *(void *)(v0 + 224)) {
            goto LABEL_26;
          }
        }
      }
      __break(1u);
      return MEMORY[0x270FA2498](v3, v4, v5);
    }
  }
LABEL_26:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v32 = *(void *)(v0 + 208);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v33 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v33(v32);
}

uint64_t sub_251C04E4C()
{
  *(void *)(v0 + 264) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C04ED8, v2, v1);
}

uint64_t sub_251C04ED8()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251C04F70, 0, 0);
}

uint64_t sub_251C04F70()
{
  *(void *)(v0 + 272) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C04FFC, v2, v1);
}

uint64_t sub_251C04FFC()
{
  swift_release();
  *(void *)(v0 + 280) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251C05070, 0, 0);
}

uint64_t sub_251C05070()
{
  *(void *)(v0 + 288) = sub_251F34D50();
  *(void *)(v0 + 296) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C0510C, v2, v1);
}

uint64_t sub_251C0510C()
{
  uint64_t v1 = (void *)v0[36];
  uint64_t v2 = (void *)v0[35];
  swift_release();
  v0[38] = objc_msgSend(v2, sel_homeFor_, v1);

  uint64_t v3 = v0[22];
  uint64_t v4 = v0[23];
  return MEMORY[0x270FA2498](sub_251C05198, v3, v4);
}

uint64_t sub_251C05198()
{
  if (*(void *)(v0 + 304))
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 312) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_251C0560C;
    uint64_t v2 = *(void *)(v0 + 304);
    uint64_t v3 = *(void *)(v0 + 192);
    uint64_t v4 = *(void *)(v0 + 120);
    return DataModel.rebuildSnapshot(for:includingMatterSnapshot:coverage:)(v4, v2, 0, v3);
  }
  uint64_t v6 = *(void **)(v0 + 256);
  sub_251C0AC7C(*(void *)(v0 + 152), type metadata accessor for StateSnapshot);

  uint64_t v7 = *(void *)(v0 + 248) + 1;
  if (v7 == *(void *)(v0 + 224))
  {
LABEL_6:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v8 = *(void *)(v0 + 208);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v9(v8);
  }
  while (1)
  {
    *(void *)(v0 + 248) = v7;
    uint64_t v11 = *(void *)(v0 + 216);
    id v12 = (v11 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2533AB3A0]() : *(id *)(v11 + 8 * v7 + 32);
    uint64_t v13 = v12;
    *(void *)(v0 + 256) = v12;
    uint64_t v14 = *(void *)(v0 + 240);
    uint64_t v15 = *(void *)(v0 + 208);
    id v16 = objc_msgSend(v12, sel_uniqueIdentifier);
    uint64_t v17 = sub_251F34DA0();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v19 = swift_task_alloc();
    sub_251F34D80();

    swift_getKeyPath();
    *(void *)(v0 + 96) = v15;
    sub_251AD2C08();
    sub_251F34F10();
    swift_release();
    uint64_t v20 = *(void *)(v15 + v14);
    if (*(void *)(v20 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v21 = sub_2519FE584(v19);
      uint64_t v23 = *(void *)(v0 + 136);
      uint64_t v22 = *(void *)(v0 + 144);
      uint64_t v24 = *(void *)(v0 + 128);
      if (v25)
      {
        sub_251C0AC14(*(void *)(v20 + 56) + *(void *)(v22 + 72) * v21, *(void *)(v0 + 128), type metadata accessor for StateSnapshot);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56))(v24, 0, 1, v23);
      }
      else
      {
        (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v22 + 56))(*(void *)(v0 + 128), 1, 1, v23);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 144) + 56))(*(void *)(v0 + 128), 1, 1, *(void *)(v0 + 136));
    }
    uint64_t v26 = *(void *)(v0 + 136);
    uint64_t v27 = *(void *)(v0 + 144);
    uint64_t v28 = *(void *)(v0 + 128);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v17);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v28, 1, v26) != 1) {
      break;
    }
    uint64_t v10 = *(void *)(v0 + 128);

    sub_251A1B064(v10, &qword_26B2203A0);
    swift_task_dealloc();
LABEL_11:
    uint64_t v7 = *(void *)(v0 + 248) + 1;
    if (v7 == *(void *)(v0 + 224)) {
      goto LABEL_6;
    }
  }
  uint64_t v29 = *(void *)(v0 + 192);
  sub_251C0ACDC(*(void *)(v0 + 128), *(void *)(v0 + 152), type metadata accessor for StateSnapshot);
  swift_task_dealloc();
  uint64_t v30 = swift_bridgeObjectRetain();
  LOBYTE(v29) = sub_251A7F5A0(v30, v29);
  swift_bridgeObjectRelease();
  if (v29)
  {
    sub_251C0AC7C(*(void *)(v0 + 152), type metadata accessor for StateSnapshot);

    goto LABEL_11;
  }
  *(_DWORD *)(v0 + 376) = *(_DWORD *)(*(void *)(v0 + 136) + 20);
  return MEMORY[0x270FA2498](sub_251C04E4C, 0, 0);
}

uint64_t sub_251C0560C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 120);
  swift_task_dealloc();
  sub_251A1B064(v2, &qword_26B2203A0);
  uint64_t v3 = *(void *)(v1 + 184);
  uint64_t v4 = *(void *)(v1 + 176);
  return MEMORY[0x270FA2498](sub_251C05758, v4, v3);
}

uint64_t sub_251C05758()
{
  uint64_t v1 = *(void **)(v0 + 304);
  uint64_t v2 = *(void *)(v0 + 152);

  sub_251C0AC7C(v2, type metadata accessor for StateSnapshot);
  uint64_t v3 = *(void *)(v0 + 248) + 1;
  if (v3 == *(void *)(v0 + 224))
  {
LABEL_2:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v4 = *(void *)(v0 + 208);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v5(v4);
  }
  while (1)
  {
    *(void *)(v0 + 248) = v3;
    uint64_t v8 = *(void *)(v0 + 216);
    id v9 = (v8 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2533AB3A0]() : *(id *)(v8 + 8 * v3 + 32);
    uint64_t v10 = v9;
    *(void *)(v0 + 256) = v9;
    uint64_t v11 = *(void *)(v0 + 240);
    uint64_t v12 = *(void *)(v0 + 208);
    id v13 = objc_msgSend(v9, sel_uniqueIdentifier);
    uint64_t v14 = sub_251F34DA0();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v16 = swift_task_alloc();
    sub_251F34D80();

    swift_getKeyPath();
    *(void *)(v0 + 96) = v12;
    sub_251AD2C08();
    sub_251F34F10();
    swift_release();
    uint64_t v17 = *(void *)(v12 + v11);
    if (*(void *)(v17 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v18 = sub_2519FE584(v16);
      uint64_t v20 = *(void *)(v0 + 136);
      uint64_t v19 = *(void *)(v0 + 144);
      uint64_t v21 = *(void *)(v0 + 128);
      if (v22)
      {
        sub_251C0AC14(*(void *)(v17 + 56) + *(void *)(v19 + 72) * v18, *(void *)(v0 + 128), type metadata accessor for StateSnapshot);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56))(v21, 0, 1, v20);
      }
      else
      {
        (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v19 + 56))(*(void *)(v0 + 128), 1, 1, v20);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 144) + 56))(*(void *)(v0 + 128), 1, 1, *(void *)(v0 + 136));
    }
    uint64_t v23 = *(void *)(v0 + 136);
    uint64_t v24 = *(void *)(v0 + 144);
    uint64_t v25 = *(void *)(v0 + 128);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v14);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v25, 1, v23) != 1) {
      break;
    }
    uint64_t v7 = *(void *)(v0 + 128);

    sub_251A1B064(v7, &qword_26B2203A0);
    swift_task_dealloc();
LABEL_7:
    uint64_t v3 = *(void *)(v0 + 248) + 1;
    if (v3 == *(void *)(v0 + 224)) {
      goto LABEL_2;
    }
  }
  uint64_t v26 = *(void *)(v0 + 192);
  sub_251C0ACDC(*(void *)(v0 + 128), *(void *)(v0 + 152), type metadata accessor for StateSnapshot);
  swift_task_dealloc();
  uint64_t v27 = swift_bridgeObjectRetain();
  LOBYTE(v26) = sub_251A7F5A0(v27, v26);
  swift_bridgeObjectRelease();
  if (v26)
  {
    sub_251C0AC7C(*(void *)(v0 + 152), type metadata accessor for StateSnapshot);

    goto LABEL_7;
  }
  *(_DWORD *)(v0 + 376) = *(_DWORD *)(*(void *)(v0 + 136) + 20);
  return MEMORY[0x270FA2498](sub_251C04E4C, 0, 0);
}

uint64_t sub_251C05B40()
{
  swift_beginAccess();
  if (qword_26B21F258 == 4)
  {
    uint64_t v1 = v0[24];
    uint64_t v2 = v0[14];
    uint64_t v3 = sub_251F35C70();
    v0[43] = v3;
    uint64_t v4 = swift_task_alloc();
    v0[44] = v4;
    *(void *)(v4 + 16) = v2;
    *(void *)(v4 + 24) = v1;
    uint64_t v5 = (void *)swift_task_alloc();
    v0[45] = v5;
    uint64_t v6 = type metadata accessor for DataModel();
    void *v5 = v0;
    v5[1] = sub_251C05D1C;
    uint64_t v7 = MEMORY[0x263F8F500];
    return MEMORY[0x270FA2318](v0 + 11, v3, v7, 0xD00000000000001BLL, 0x8000000251F6E240, sub_251C08B34, v4, v6);
  }
  else
  {
    swift_release();
    if (qword_269B9C390 != -1) {
      swift_once();
    }
    id v8 = (id)qword_269BA03F0;
    swift_bridgeObjectRelease();
    v0[46] = v8;
    uint64_t v9 = v0[22];
    uint64_t v10 = v0[23];
    return MEMORY[0x270FA2498](sub_251C05EF4, v9, v10);
  }
}

uint64_t sub_251C05D1C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 336);
  uint64_t v3 = *(void *)(v1 + 328);
  return MEMORY[0x270FA2498](sub_251C05E7C, v3, v2);
}

uint64_t sub_251C05E7C()
{
  swift_release();
  swift_bridgeObjectRelease();
  v0[46] = v0[11];
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[23];
  return MEMORY[0x270FA2498](sub_251C05EF4, v1, v2);
}

uint64_t sub_251C05EF4()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 368);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_251C05F80@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_251AD2C08();
  sub_251F34F10();
  swift_release();
  uint64_t v4 = (void *)(v3 + OBJC_IVAR____TtC13HomeDataModel9DataModel__homesToStateSnapshots);
  swift_beginAccess();
  *a2 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_251C0601C()
{
  return swift_bridgeObjectRelease();
}

id sub_251C060CC()
{
  uint64_t v0 = (objc_class *)type metadata accessor for HomeManagerActor();
  uint64_t v1 = swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(unsigned char *)(v1 + 112) = 0;
  *(void *)(v1 + 120) = v2;
  uint64_t v3 = (id (__cdecl *)())off_26BB6CAC0;
  swift_retain();
  swift_retain();
  id v4 = v3();
  swift_release();
  *(void *)(v1 + 128) = v4;
  swift_release();
  v7.receiver = (id)v1;
  v7.super_class = v0;
  uint64_t v5 = (id *)objc_msgSendSuper2(&v7, sel_init);
  id result = objc_msgSend(v5[16], sel_setDelegate_, v5);
  qword_269BF30E8 = (uint64_t)v5;
  return result;
}

id *sub_251C06194()
{
  uint64_t v1 = swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(unsigned char *)(v1 + 112) = 0;
  *(void *)(v1 + 120) = v2;
  uint64_t v3 = (id (__cdecl *)())off_26BB6CAC0;
  swift_retain();
  swift_retain();
  id v4 = v3();
  swift_release();
  *(void *)(v1 + 128) = v4;
  swift_release();
  v7.receiver = (id)v1;
  v7.super_class = v0;
  uint64_t v5 = (id *)objc_msgSendSuper2(&v7, sel_init);
  objc_msgSend(v5[16], sel_setDelegate_, v5);
  return v5;
}

uint64_t (*static HomeManagerActor.homeManagerCreationBlock.getter())()
{
  uint64_t v0 = off_26BB6CAC0;
  swift_retain();
  return v0;
}

uint64_t static HomeManagerActor.homeManagerCreationBlock.setter(uint64_t (*a1)(), uint64_t a2)
{
  sub_251C0A208((uint64_t)a1, a2);
  off_26BB6CAC0 = a1;
  qword_26BB6CAC8 = a2;
  return swift_release();
}

uint64_t (*static HomeManagerActor.homeManagerCreationBlock.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v2 = qword_26BB6CAC8;
  *a1 = off_26BB6CAC0;
  a1[1] = v2;
  swift_retain();
  return sub_251C0632C;
}

uint64_t sub_251C0632C(uint64_t *a1, char a2)
{
  uint64_t v3 = (uint64_t (*)())*a1;
  uint64_t v2 = a1[1];
  if (a2)
  {
    swift_retain();
    sub_251C0A208((uint64_t)v3, v2);
    off_26BB6CAC0 = v3;
    qword_26BB6CAC8 = v2;
    swift_release();
  }
  else
  {
    sub_251C0A208(*a1, v2);
    off_26BB6CAC0 = v3;
    qword_26BB6CAC8 = v2;
  }
  return swift_release();
}

id *sub_251C063B8()
{
  swift_defaultActor_initialize();
  uint64_t v1 = MEMORY[0x263F8EE78];
  *(unsigned char *)(v0 + 112) = 0;
  *(void *)(v0 + 120) = v1;
  uint64_t v2 = off_26BB6CAC0;
  swift_retain();
  uint64_t v3 = swift_retain();
  uint64_t v4 = ((uint64_t (*)(uint64_t))v2)(v3);
  swift_release();
  *(void *)(v0 + 128) = v4;
  swift_release();
  v7.receiver = (id)v0;
  v7.super_class = (Class)type metadata accessor for HomeManagerActor();
  uint64_t v5 = (id *)objc_msgSendSuper2(&v7, sel_init);
  objc_msgSend(v5[16], sel_setDelegate_, v5);
  return v5;
}

uint64_t sub_251C06494()
{
  uint64_t v0 = sub_251F350A0();
  __swift_allocate_value_buffer(v0, qword_269BF30F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_269BF30F0);
  return sub_251F35090();
}

uint64_t HomeManagerActor.deinit()
{
  swift_bridgeObjectRelease();

  swift_defaultActor_destroy();
  return v0;
}

uint64_t HomeManagerActor.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t HomeManagerActor.unownedExecutor.getter()
{
  return v0;
}

uint64_t static HomeManagerActor.homeManager.getter()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  uint64_t v2 = sub_251A1A568(0, (unint64_t *)&unk_269BA0418);
  *uint64_t v1 = v0;
  v1[1] = sub_251C06688;
  return MEMORY[0x270FA2318](v0 + 16, 0, 0, 0x616E614D656D6F68, 0xEB00000000726567, sub_251C0679C, 0, v2);
}

uint64_t sub_251C06688()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251C06784, 0, 0);
}

uint64_t sub_251C06784()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_251C0679C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0478);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v5 - 8);
  objc_super v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_251F35CD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  *(void *)(v10 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v10 + v9, (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_251ACBB48((uint64_t)v7, (uint64_t)&unk_269BA0488, v10);
  return swift_release();
}

uint64_t sub_251C06964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[6] = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0478);
  v4[7] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[8] = v6;
  v4[9] = *(void *)(v6 + 64);
  v4[10] = swift_task_alloc();
  v4[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251C06A40, 0, 0);
}

uint64_t sub_251C06A40()
{
  if (qword_269B9C380 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v6 = qword_269BF30E8;
  v0[12] = qword_269BF30E8;
  objc_super v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v7(v2, v4, v5);
  v7(v1, v2, v5);
  unint64_t v8 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v9 = swift_allocObject();
  v0[13] = v9;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v9 + v8, v2, v5);
  return MEMORY[0x270FA2498](sub_251C06B74, v6, 0);
}

uint64_t sub_251C06B74()
{
  uint64_t v1 = v0[12];
  if (*(unsigned char *)(v1 + 112) == 1)
  {
    uint64_t v2 = *(void **)(v1 + 128);
    v0[5] = v2;
    id v3 = v2;
    sub_251F35C20();
  }
  else
  {
    uint64_t v4 = v0[13];
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = sub_251C0B170;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = (void *)(v1 + 120);
    swift_beginAccess();
    objc_super v7 = *(void **)(v1 + 120);
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v1 + 120) = v7;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      objc_super v7 = sub_251F109EC(0, v7[2] + 1, 1, v7);
      *uint64_t v6 = v7;
    }
    unint64_t v10 = v7[2];
    unint64_t v9 = v7[3];
    if (v10 >= v9 >> 1)
    {
      objc_super v7 = sub_251F109EC((void *)(v9 > 1), v10 + 1, 1, v7);
      *uint64_t v6 = v7;
    }
    v7[2] = v10 + 1;
    uint64_t v11 = &v7[2 * v10];
    v11[4] = sub_251C0B1E4;
    v11[5] = v5;
    swift_endAccess();
  }
  swift_release();
  (*(void (**)(void, void))(v0[8] + 8))(v0[10], v0[7]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_251C06D38(void *a1)
{
  id v1 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0478);
  return sub_251F35C20();
}

uint64_t sub_251C06D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x270FA2498](sub_251C06DA4, a4, 0);
}

uint64_t sub_251C06DA4()
{
  sub_251C06E04();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_251C06E04()
{
  if ((*(unsigned char *)(v0 + 112) & 1) == 0)
  {
    uint64_t v1 = v0;
    objc_msgSend(*(id *)(v0 + 128), sel_setDelegate_, 0);
    *(unsigned char *)(v0 + 112) = 1;
    uint64_t v2 = (void *)(v0 + 120);
    swift_beginAccess();
    uint64_t v3 = *(void *)(v1 + 120);
    uint64_t v4 = *(void *)(v3 + 16);
    if (v4)
    {
      uint64_t v14 = v2;
      swift_bridgeObjectRetain_n();
      uint64_t v5 = 0;
      uint64_t v6 = v3 + 40;
      do
      {
        unint64_t v8 = *(void (**)(id *))(v6 - 8);
        uint64_t v9 = qword_269B9C388;
        swift_retain_n();
        if (v9 != -1) {
          swift_once();
        }
        uint64_t v10 = sub_251F350A0();
        __swift_project_value_buffer(v10, (uint64_t)qword_269BF30F0);
        uint64_t v11 = sub_251F35080();
        os_log_type_t v12 = sub_251F35FD0();
        if (os_log_type_enabled(v11, v12))
        {
          uint64_t v13 = swift_slowAlloc();
          *(_DWORD *)uint64_t v13 = 134217984;
          *(void *)(v13 + 4) = v5;
          _os_log_impl(&dword_2519F3000, v11, v12, "catching up on block %ld", (uint8_t *)v13, 0xCu);
          MEMORY[0x2533AC760](v13, -1, -1);
        }
        ++v5;

        id v15 = *(id *)(v1 + 128);
        id v7 = v15;
        v8(&v15);
        swift_release_n();

        v6 += 16;
      }
      while (v4 != v5);
      swift_bridgeObjectRelease_n();
      uint64_t v2 = v14;
    }
    *uint64_t v2 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRelease();
  }
}

id sub_251C07048()
{
  sub_251A1A568(0, (unint64_t *)&unk_269BA04F0);
  id v0 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_defaultPrivateConfiguration);
  objc_msgSend(v0, sel_setCachePolicy_, 0);
  objc_msgSend(v0, sel_setDiscretionary_, 0);
  objc_msgSend(v0, sel_setAdaptive_, 1);
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E3C0]), sel_initWithConfiguration_, v0);

  return v1;
}

uint64_t sub_251C070F8()
{
  v1[6] = v0;
  v1[7] = sub_251F35C80();
  v1[8] = sub_251F35C70();
  uint64_t v3 = sub_251F35C00();
  v1[9] = v3;
  v1[10] = v2;
  return MEMORY[0x270FA2498](sub_251C07194, v3, v2);
}

uint64_t sub_251C07194()
{
  if (byte_269BF3108 == 1 && (swift_beginAccess(), qword_26B21F258 == 4))
  {
    uint64_t v1 = v0[6];
    uint64_t v2 = sub_251F35C70();
    v0[11] = v2;
    uint64_t v3 = swift_task_alloc();
    v0[12] = v3;
    *(void *)(v3 + 16) = v1;
    uint64_t v4 = (void *)swift_task_alloc();
    v0[13] = v4;
    uint64_t v5 = type metadata accessor for DataModel();
    *uint64_t v4 = v0;
    v4[1] = sub_251C0731C;
    uint64_t v6 = MEMORY[0x263F8F500];
    return MEMORY[0x270FA2318](v0 + 5, v2, v6, 0xD00000000000001BLL, 0x8000000251F6E2F0, sub_251C0B7E8, v3, v5);
  }
  else
  {
    swift_release();
    id v7 = (uint64_t (*)(void))v0[1];
    return v7(0);
  }
}

uint64_t sub_251C0731C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 72);
  return MEMORY[0x270FA2498](sub_251C0747C, v3, v2);
}

uint64_t sub_251C0747C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_251C074E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v41 = a3;
  uint64_t v39 = a2;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA04C8);
  uint64_t v38 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  v35[1] = v4;
  uint64_t v37 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v5 - 8);
  int64_t v36 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_251F34FE0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v35 - v12;
  if (qword_26B21ED30 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_251F35020();
  __swift_project_value_buffer(v14, (uint64_t)qword_26B21ED40);
  sub_251F34FD0();
  id v15 = sub_251F35000();
  os_signpost_type_t v16 = sub_251F36060();
  if (sub_251F36170())
  {
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v17(v11, v13, v7);
    unint64_t v18 = (uint8_t *)swift_slowAlloc();
    v35[0] = a1;
    uint64_t v19 = v18;
    *(_WORD *)unint64_t v18 = 0;
    os_signpost_id_t v20 = sub_251F34FC0();
    _os_signpost_emit_with_name_impl(&dword_2519F3000, v15, v16, v20, "HomeManagerWarmUp", "", v19, 2u);
    uint64_t v21 = v19;
    a1 = v35[0];
    MEMORY[0x2533AC760](v21, -1, -1);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  else
  {

    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  }
  v17(v11, v13, v7);
  sub_251F35060();
  swift_allocObject();
  uint64_t v22 = sub_251F35050();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  uint64_t v23 = sub_251F35CD0();
  uint64_t v24 = (uint64_t)v36;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v36, 1, 1, v23);
  uint64_t v26 = v37;
  uint64_t v25 = v38;
  uint64_t v27 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v37, a1, v40);
  sub_251F35C80();
  swift_retain();
  uint64_t v28 = v41;
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_251F35C70();
  unint64_t v30 = (*(unsigned __int8 *)(v25 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  uint64_t v31 = swift_allocObject();
  uint64_t v32 = MEMORY[0x263F8F500];
  *(void *)(v31 + 16) = v29;
  *(void *)(v31 + 24) = v32;
  *(void *)(v31 + 32) = "HomeManagerWarmUp";
  *(void *)(v31 + 40) = 17;
  *(unsigned char *)(v31 + 48) = 2;
  uint64_t v33 = v39;
  *(void *)(v31 + 56) = v22;
  *(void *)(v31 + 64) = v33;
  *(void *)(v31 + 72) = v28;
  (*(void (**)(unint64_t, char *, uint64_t))(v25 + 32))(v31 + v30, v26, v27);
  sub_251ACBB48(v24, (uint64_t)&unk_269BA04D8, v31);
  swift_release();
  return swift_release();
}

uint64_t sub_251C07948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 72) = v15;
  *(void *)(v8 + 80) = v16;
  *(void *)(v8 + 56) = a7;
  *(void *)(v8 + 64) = a8;
  *(unsigned char *)(v8 + 168) = a6;
  *(void *)(v8 + 40) = a4;
  *(void *)(v8 + 48) = a5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA04C8);
  *(void *)(v8 + 88) = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  *(void *)(v8 + 96) = v10;
  *(void *)(v8 + 104) = *(void *)(v10 + 64);
  *(void *)(v8 + 112) = swift_task_alloc();
  *(void *)(v8 + 120) = swift_task_alloc();
  sub_251F35C80();
  *(void *)(v8 + 128) = sub_251F35C70();
  uint64_t v12 = sub_251F35C00();
  *(void *)(v8 + 136) = v12;
  *(void *)(v8 + 144) = v11;
  return MEMORY[0x270FA2498](sub_251C07A6C, v12, v11);
}

uint64_t sub_251C07A6C()
{
  if (qword_269B9C380 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 88);
  uint64_t v6 = *(void *)(v0 + 72);
  char v14 = *(unsigned char *)(v0 + 168);
  uint64_t v12 = *(void *)(v0 + 40);
  uint64_t v13 = *(void *)(v0 + 48);
  uint64_t v7 = qword_269BF30E8;
  *(void *)(v0 + 152) = qword_269BF30E8;
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  long long v15 = *(_OWORD *)(v0 + 56);
  v8(v1, v4, v5);
  v8(v2, v1, v5);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v0 + 160) = v10;
  *(void *)(v10 + 16) = v12;
  *(void *)(v10 + 24) = v13;
  *(unsigned char *)(v10 + 32) = v14;
  *(_OWORD *)(v10 + 40) = v15;
  *(void *)(v10 + 56) = v6;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v10 + v9, v1, v5);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  return MEMORY[0x270FA2498](sub_251C07C08, v7, 0);
}

uint64_t sub_251C07C08()
{
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v1 = *(void *)(v0 + 160);
  if (*(unsigned char *)(v2 + 112) == 1)
  {
    uint64_t v3 = *(void *)(v0 + 112);
    uint64_t v5 = *(void *)(v0 + 64);
    uint64_t v4 = *(void *)(v0 + 72);
    uint64_t v7 = *(void *)(v0 + 48);
    uint64_t v6 = *(void *)(v0 + 56);
    uint64_t v8 = *(char **)(v0 + 40);
    unint64_t v9 = *(void **)(v2 + 128);
    int v10 = *(unsigned __int8 *)(v0 + 168);
    id v11 = v9;
    sub_251C07E70(v11, v8, v7, v10, v6, v5, v4, v3);
  }
  else
  {
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = sub_251C0B570;
    *(void *)(v12 + 24) = v1;
    uint64_t v13 = (void *)(v2 + 120);
    swift_beginAccess();
    char v14 = *(void **)(v2 + 120);
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v2 + 120) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      char v14 = sub_251F109EC(0, v14[2] + 1, 1, v14);
      *uint64_t v13 = v14;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      char v14 = sub_251F109EC((void *)(v16 > 1), v17 + 1, 1, v14);
      *uint64_t v13 = v14;
    }
    v14[2] = v17 + 1;
    unint64_t v18 = &v14[2 * v17];
    v18[4] = sub_251C0B930;
    v18[5] = v12;
    swift_endAccess();
  }
  swift_release();
  swift_release();
  uint64_t v19 = *(void *)(v0 + 112);
  uint64_t v20 = *(void *)(v0 + 88);
  uint64_t v21 = *(void *)(v0 + 96);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  uint64_t v22 = *(void *)(v0 + 136);
  uint64_t v23 = *(void *)(v0 + 144);
  return MEMORY[0x270FA2498](sub_251C07DFC, v22, v23);
}

uint64_t sub_251C07DFC()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251C07E70(void *a1, char *a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v51 = a1;
  uint64_t v52 = a8;
  uint64_t v50 = a7;
  uint64_t v58 = a6;
  int v49 = a4;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA04C8);
  uint64_t v56 = *(void *)(v9 - 8);
  uint64_t v57 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v53 = v10;
  uint64_t v55 = &v46[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v11 - 8);
  char v54 = &v46[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_251F35030();
  uint64_t v48 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  long long v15 = &v46[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_251F34FE0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = &v46[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = &v46[-v21];
  if (qword_26B21ED30 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_251F35020();
  __swift_project_value_buffer(v23, (uint64_t)qword_26B21ED40);
  uint64_t v24 = sub_251F35000();
  sub_251F35040();
  int v47 = sub_251F36050();
  uint64_t result = sub_251F36170();
  if ((result & 1) == 0) {
    goto LABEL_7;
  }
  if (v49)
  {
    if ((unint64_t)a2 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (a2 >> 11 == 27)
      {
LABEL_21:
        __break(1u);
        return result;
      }
      if (a2 >> 16 <= 0x10)
      {
        a2 = sub_251D3AF3C();
        goto LABEL_12;
      }
    }
    __break(1u);
    goto LABEL_21;
  }
  if (a2)
  {
LABEL_12:
    swift_retain();
    sub_251F35070();
    swift_release();
    uint64_t v27 = v48;
    if ((*(unsigned int (**)(unsigned char *, uint64_t))(v48 + 88))(v15, v13) == *MEMORY[0x263F90238])
    {
      uint64_t v28 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v27 + 8))(v15, v13);
      uint64_t v28 = "";
    }
    uint64_t v26 = v50;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 16))(v20, v22, v16);
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v29 = 0;
    os_signpost_id_t v30 = sub_251F34FC0();
    _os_signpost_emit_with_name_impl(&dword_2519F3000, v24, (os_signpost_type_t)v47, v30, a2, v28, v29, 2u);
    MEMORY[0x2533AC760](v29, -1, -1);

    uint64_t v31 = *(void (**)(unsigned char *, uint64_t))(v17 + 8);
    v31(v22, v16);
    v31(v20, v16);
    goto LABEL_16;
  }
  __break(1u);
LABEL_7:

  (*(void (**)(unsigned char *, uint64_t))(v17 + 8))(v22, v16);
  uint64_t v26 = v50;
LABEL_16:
  if (qword_269B9C390 != -1) {
    swift_once();
  }
  uint64_t v32 = (void **)(qword_269BA03F0 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  uint64_t v33 = *v32;
  uint64_t v34 = v51;
  *uint64_t v32 = v51;
  id v35 = v34;

  uint64_t v36 = sub_251F35CD0();
  uint64_t v37 = (uint64_t)v54;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v54, 1, 1, v36);
  uint64_t v39 = v55;
  uint64_t v38 = v56;
  uint64_t v40 = v57;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v56 + 16))(v55, v52, v57);
  sub_251F35C80();
  id v41 = v35;
  swift_bridgeObjectRetain();
  uint64_t v42 = sub_251F35C70();
  unint64_t v43 = (*(unsigned __int8 *)(v38 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  double v44 = (char *)swift_allocObject();
  uint64_t v45 = MEMORY[0x263F8F500];
  *((void *)v44 + 2) = v42;
  *((void *)v44 + 3) = v45;
  *((void *)v44 + 4) = v58;
  *((void *)v44 + 5) = v41;
  *((void *)v44 + 6) = v26;
  (*(void (**)(char *, unsigned char *, uint64_t))(v38 + 32))(&v44[v43], v39, v40);
  sub_251ACBB48(v37, (uint64_t)&unk_269BA04E8, (uint64_t)v44);
  return swift_release();
}

uint64_t sub_251C08430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a6;
  v7[5] = a7;
  v7[3] = a5;
  sub_251F35C80();
  v7[6] = sub_251F35C70();
  uint64_t v9 = sub_251F35C00();
  v7[7] = v9;
  v7[8] = v8;
  return MEMORY[0x270FA2498](sub_251C084CC, v9, v8);
}

uint64_t sub_251C084CC()
{
  if (qword_269B9C390 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)swift_task_alloc();
  v0[9] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_251C0859C;
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  return DataModel.loadUpHomeSnapshots(homeManager:coverages:)(v3, v2);
}

uint64_t sub_251C0859C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 56);
  return MEMORY[0x270FA2498](sub_251C086BC, v3, v2);
}

uint64_t sub_251C086BC()
{
  swift_release();
  byte_269BF3108 = 1;
  uint64_t v1 = (void *)qword_269BA03F0;
  *(void *)(v0 + 16) = qword_269BA03F0;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA04C8);
  sub_251F35C20();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

void sub_251C08754(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA04C8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  if (qword_269B9C390 != -1) {
    swift_once();
  }
  uint64_t v7 = (void **)(qword_269BA03F0 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  uint64_t v8 = *v7;
  if (v8)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
    unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v10 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    *(void *)(v10 + ((v6 + v9 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
    aBlock[4] = sub_251C0B890;
    aBlock[5] = v10;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_251C97A44;
    aBlock[3] = &block_descriptor_29;
    uint64_t v11 = _Block_copy(aBlock);
    id v12 = v8;
    swift_release();
    id v13 = objc_msgSend(v12, sel__refreshBeforeDate_completionHandler_, 0, v11);
    swift_unknownObjectRelease();
    _Block_release(v11);
  }
}

uint64_t sub_251C08990()
{
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_251F350A0();
  __swift_project_value_buffer(v0, (uint64_t)qword_26B21F290);
  uint64_t v1 = sub_251F35080();
  os_log_type_t v2 = sub_251F35FD0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_2519F3000, v1, v2, "homemanager refresh is done", v3, 2u);
    MEMORY[0x2533AC760](v3, -1, -1);
  }

  if (qword_269B9C390 != -1) {
    swift_once();
  }
  id v4 = (id)qword_269BA03F0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA04C8);
  return sub_251F35C20();
}

id sub_251C08AD0()
{
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26B21FF50;
  qword_269BA03F0 = qword_26B21FF50;
  return v0;
}

uint64_t sub_251C08B34(uint64_t a1)
{
  return sub_251C074E0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_251C08B44(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26B21F600);
    uint64_t v3 = sub_251F363F0();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v22 = v1;
    uint64_t v23 = a1 + 32;
    while (1)
    {
      uint64_t v6 = *(void *)(v23 + 8 * v4);
      sub_251F36CA0();
      if (v6 == 2 || v6 == 1)
      {
        sub_251F36CB0();
      }
      else
      {
        sub_251F36CB0();
        sub_251F36CC0();
        if (v6)
        {
          swift_bridgeObjectRetain_n();
          sub_251A54708(v24, v6);
          sub_251A58144(v6);
        }
      }
      uint64_t result = sub_251F36D00();
      uint64_t v8 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v9 = result & ~v8;
      unint64_t v10 = v9 >> 6;
      uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
      uint64_t v12 = 1 << v9;
      if (((1 << v9) & v11) != 0) {
        break;
      }
LABEL_30:
      *(void *)(v5 + 8 * v10) = v12 | v11;
      *(void *)(*(void *)(v3 + 48) + 8 * v9) = v6;
      uint64_t v18 = *(void *)(v3 + 16);
      BOOL v19 = __OFADD__(v18, 1);
      uint64_t v20 = v18 + 1;
      if (v19)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v20;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
    uint64_t v13 = ~v8;
    while (1)
    {
      uint64_t v14 = *(void *)(v3 + 48);
      uint64_t v15 = *(void *)(v14 + 8 * v9);
      uint64_t v16 = v6;
      if (v15 == 2)
      {
        if (v6 == 2)
        {
          sub_251A58144(2);
          uint64_t v21 = 2;
          goto LABEL_3;
        }
      }
      else if (v15 == 1)
      {
        if (v6 == 1)
        {
          sub_251A58144(1);
          uint64_t v21 = 1;
LABEL_3:
          sub_251A58144(v21);
          uint64_t v1 = v22;
          goto LABEL_4;
        }
      }
      else if ((unint64_t)(v6 - 1) >= 2)
      {
        if (!v15)
        {
          sub_251A81FDC(v6);
          sub_251A81FDC(0);
          sub_251A81FDC(v6);
          sub_251A81FDC(0);
          sub_251A58144(0);
          sub_251A58144(v6);
          sub_251A58144(0);
          uint64_t v16 = 0;
          uint64_t v15 = v6;
          if (!v6)
          {
            uint64_t v21 = 0;
            goto LABEL_3;
          }
          goto LABEL_20;
        }
        if (v6)
        {
          sub_251A81FDC(*(void *)(v14 + 8 * v9));
          sub_251A81FDC(v15);
          sub_251A81FDC(v6);
          sub_251A81FDC(v15);
          sub_251A81FDC(v6);
          sub_251A81FDC(v15);
          char v17 = sub_251B04848(v15, v6);
          sub_251A58144(v15);
          sub_251A58144(v6);
          sub_251A58144(v6);
          sub_251A58144(v15);
          sub_251A58144(v15);
          uint64_t result = swift_bridgeObjectRelease();
          if (v17)
          {
            uint64_t v21 = v6;
            goto LABEL_3;
          }
          goto LABEL_21;
        }
        uint64_t v16 = 0;
      }
      sub_251A81FDC(v16);
      sub_251A81FDC(v15);
LABEL_20:
      sub_251A58144(v15);
      uint64_t result = sub_251A58144(v16);
LABEL_21:
      unint64_t v9 = (v9 + 1) & v13;
      unint64_t v10 = v9 >> 6;
      uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
      uint64_t v12 = 1 << v9;
      if ((v11 & (1 << v9)) == 0)
      {
        uint64_t v1 = v22;
        goto LABEL_30;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_251C08E40(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E188);
    uint64_t v3 = sub_251F363F0();
    uint64_t v36 = v3 + 56;
    uint64_t result = sub_251F34DA0();
    uint64_t v5 = result;
    uint64_t v6 = 0;
    uint64_t v7 = *(void *)(result - 8);
    uint64_t v8 = *(void (**)(char *))(v7 + 16);
    uint64_t v34 = v7 + 16;
    id v35 = v8;
    uint64_t v29 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v9 = v3;
    uint64_t v37 = *(void *)(v7 + 72);
    uint64_t v33 = *(void *)(v7 + 64);
    unint64_t v10 = (uint64_t (**)(char *, uint64_t))(v7 + 8);
    uint64_t v27 = v1;
    uint64_t v28 = (uint64_t (**)(unint64_t, char *, uint64_t))(v7 + 32);
    while (1)
    {
      MEMORY[0x270FA5388](result);
      unint64_t v32 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v12 = (char *)&v26 - v32;
      v35((char *)&v26 - v32);
      sub_251C0B240((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA95B8]);
      uint64_t v13 = sub_251F35600();
      uint64_t v14 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v15 = v13 & v14;
      unint64_t v16 = (v13 & (unint64_t)v14) >> 6;
      uint64_t v17 = *(void *)(v36 + 8 * v16);
      uint64_t v18 = 1 << (v13 & v14);
      if ((v18 & v17) != 0)
      {
        os_signpost_id_t v30 = &v26;
        uint64_t v31 = v6;
        do
        {
          MEMORY[0x270FA5388](v13);
          BOOL v19 = (char *)&v26 - v32;
          uint64_t v20 = v9;
          ((void (*)(char *, unint64_t, uint64_t))v35)((char *)&v26 - v32, *(void *)(v9 + 48) + v15 * v37, v5);
          sub_251C0B240((unint64_t *)&qword_26B21F2B8, MEMORY[0x270FA95B8]);
          char v21 = sub_251F35650();
          uint64_t v22 = *v10;
          uint64_t v13 = (*v10)(v19, v5);
          if (v21)
          {
            uint64_t result = v22(v12, v5);
            uint64_t v1 = v27;
            uint64_t v9 = v20;
            uint64_t v6 = v31;
            goto LABEL_4;
          }
          unint64_t v15 = (v15 + 1) & v14;
          unint64_t v16 = v15 >> 6;
          uint64_t v17 = *(void *)(v36 + 8 * (v15 >> 6));
          uint64_t v18 = 1 << v15;
          uint64_t v9 = v20;
        }
        while ((v17 & (1 << v15)) != 0);
        uint64_t v1 = v27;
        uint64_t v6 = v31;
      }
      *(void *)(v36 + 8 * v16) = v18 | v17;
      uint64_t result = (*v28)(*(void *)(v9 + 48) + v15 * v37, v12, v5);
      uint64_t v23 = *(void *)(v9 + 16);
      BOOL v24 = __OFADD__(v23, 1);
      uint64_t v25 = v23 + 1;
      if (v24) {
        break;
      }
      *(void *)(v9 + 16) = v25;
LABEL_4:
      if (++v6 == v1) {
        return v9;
      }
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE88];
  }
  return result;
}

uint64_t sub_251C0913C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE88];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F1A0);
  uint64_t v3 = sub_251F363F0();
  uint64_t v4 = 0;
  uint64_t v5 = v3 + 56;
  uint64_t v22 = v1;
  uint64_t v23 = a1 + 32;
  do
  {
    uint64_t v6 = *(unsigned __int8 *)(v23 + v4);
    sub_251F36CA0();
    ServiceKind.rawValue.getter();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_251F36D00();
    uint64_t v8 = ~(-1 << *(unsigned char *)(v3 + 32));
    unint64_t v9 = v7 & v8;
    unint64_t v10 = (v7 & (unint64_t)v8) >> 6;
    uint64_t v11 = *(void *)(v5 + 8 * v10);
    uint64_t v12 = 1 << (v7 & v8);
    if ((v12 & v11) != 0)
    {
      while (1)
      {
        unint64_t v13 = 0x8000000251F62670;
        switch(*(unsigned char *)(*(void *)(v3 + 48) + v9))
        {
          case 1:
            uint64_t v14 = "0000003E-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 2:
            uint64_t v14 = "00000270-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 3:
            uint64_t v14 = "000000BB-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 4:
            uint64_t v14 = "0000008D-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 5:
            uint64_t v14 = "00000096-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 6:
            uint64_t v14 = "00000042-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 7:
            uint64_t v14 = "00000110-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 8:
            uint64_t v14 = "00000204-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 9:
            uint64_t v14 = "00000097-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0xA:
            uint64_t v14 = "0000007F-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0xB:
            uint64_t v14 = "00000080-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0xC:
            uint64_t v14 = "00000129-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0xD:
            uint64_t v14 = "00000237-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0xE:
            uint64_t v14 = "00000081-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0xF:
            uint64_t v14 = "00000121-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x10:
            uint64_t v14 = "00000040-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x11:
            uint64_t v14 = "000000D7-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x12:
            uint64_t v14 = "000000BA-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x13:
            uint64_t v14 = "00000041-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x14:
            uint64_t v14 = "000000BC-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x15:
            uint64_t v14 = "000000BD-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x16:
            uint64_t v14 = "00000082-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x17:
            uint64_t v14 = "000000D9-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x18:
            uint64_t v14 = "000000CF-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x19:
            uint64_t v14 = "000000CC-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x1A:
            uint64_t v14 = "00000083-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x1B:
            uint64_t v14 = "00000084-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x1C:
            uint64_t v14 = "00000043-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x1D:
            uint64_t v14 = "00000044-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x1E:
            uint64_t v14 = "00000045-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x1F:
            uint64_t v14 = "00000112-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x20:
            uint64_t v14 = "00000085-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x21:
            uint64_t v14 = "00000086-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x22:
            uint64_t v14 = "00000047-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x23:
            uint64_t v14 = "0000007E-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x24:
            uint64_t v14 = "000000B9-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x25:
            uint64_t v14 = "00000087-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x26:
            uint64_t v14 = "00000113-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x27:
            uint64_t v14 = "00000088-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x28:
            uint64_t v14 = "00000089-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x29:
            uint64_t v14 = "00000049-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x2A:
            uint64_t v14 = "00000125-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x2B:
            uint64_t v14 = "00000122-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x2C:
            uint64_t v14 = "000000D8-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x2D:
            uint64_t v14 = "0000008A-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x2E:
            uint64_t v14 = "0000004A-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x2F:
            uint64_t v14 = "000000D0-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x30:
            uint64_t v14 = "000000B7-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x31:
            uint64_t v14 = "0000020A-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x32:
            uint64_t v14 = "0000020F-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x33:
            uint64_t v14 = "0000008B-0000-1000-8000-0026BB765291";
            goto LABEL_59;
          case 0x34:
            uint64_t v14 = "0000008C-0000-1000-8000-0026BB765291";
LABEL_59:
            unint64_t v13 = (unint64_t)(v14 - 32) | 0x8000000000000000;
            break;
          default:
            break;
        }
        unint64_t v15 = 0x8000000251F62670;
        switch(v6)
        {
          case 1:
            unint64_t v16 = "0000003E-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 2:
            unint64_t v16 = "00000270-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 3:
            unint64_t v16 = "000000BB-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 4:
            unint64_t v16 = "0000008D-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 5:
            unint64_t v16 = "00000096-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 6:
            unint64_t v16 = "00000042-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 7:
            unint64_t v16 = "00000110-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 8:
            unint64_t v16 = "00000204-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 9:
            unint64_t v16 = "00000097-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 10:
            unint64_t v16 = "0000007F-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 11:
            unint64_t v16 = "00000080-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 12:
            unint64_t v16 = "00000129-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 13:
            unint64_t v16 = "00000237-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 14:
            unint64_t v16 = "00000081-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 15:
            unint64_t v16 = "00000121-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 16:
            unint64_t v16 = "00000040-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 17:
            unint64_t v16 = "000000D7-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 18:
            unint64_t v16 = "000000BA-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 19:
            unint64_t v16 = "00000041-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 20:
            unint64_t v16 = "000000BC-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 21:
            unint64_t v16 = "000000BD-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 22:
            unint64_t v16 = "00000082-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 23:
            unint64_t v16 = "000000D9-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 24:
            unint64_t v16 = "000000CF-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 25:
            unint64_t v16 = "000000CC-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 26:
            unint64_t v16 = "00000083-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 27:
            unint64_t v16 = "00000084-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 28:
            unint64_t v16 = "00000043-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 29:
            unint64_t v16 = "00000044-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 30:
            unint64_t v16 = "00000045-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 31:
            unint64_t v16 = "00000112-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 32:
            unint64_t v16 = "00000085-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 33:
            unint64_t v16 = "00000086-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 34:
            unint64_t v16 = "00000047-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 35:
            unint64_t v16 = "0000007E-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 36:
            unint64_t v16 = "000000B9-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 37:
            unint64_t v16 = "00000087-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 38:
            unint64_t v16 = "00000113-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 39:
            unint64_t v16 = "00000088-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 40:
            unint64_t v16 = "00000089-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 41:
            unint64_t v16 = "00000049-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 42:
            unint64_t v16 = "00000125-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 43:
            unint64_t v16 = "00000122-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 44:
            unint64_t v16 = "000000D8-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 45:
            unint64_t v16 = "0000008A-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 46:
            unint64_t v16 = "0000004A-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 47:
            unint64_t v16 = "000000D0-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 48:
            unint64_t v16 = "000000B7-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 49:
            unint64_t v16 = "0000020A-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 50:
            unint64_t v16 = "0000020F-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 51:
            unint64_t v16 = "0000008B-0000-1000-8000-0026BB765291";
            goto LABEL_113;
          case 52:
            unint64_t v16 = "0000008C-0000-1000-8000-0026BB765291";
LABEL_113:
            unint64_t v15 = (unint64_t)(v16 - 32) | 0x8000000000000000;
            break;
          default:
            break;
        }
        if (v13 == v15) {
          break;
        }
        char v17 = sub_251F36B10();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v17) {
          goto LABEL_4;
        }
        unint64_t v9 = (v9 + 1) & v8;
        unint64_t v10 = v9 >> 6;
        uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
        uint64_t v12 = 1 << v9;
        if ((v11 & (1 << v9)) == 0) {
          goto LABEL_117;
        }
      }
      swift_bridgeObjectRelease_n();
    }
    else
    {
LABEL_117:
      *(void *)(v5 + 8 * v10) = v12 | v11;
      *(unsigned char *)(*(void *)(v3 + 48) + v9) = v6;
      uint64_t v18 = *(void *)(v3 + 16);
      BOOL v19 = __OFADD__(v18, 1);
      uint64_t v20 = v18 + 1;
      if (v19)
      {
        __break(1u);
        JUMPOUT(0x251C09828);
      }
      *(void *)(v3 + 16) = v20;
    }
LABEL_4:
    ++v4;
  }
  while (v4 != v22);
  return v3;
}

uint64_t sub_251C099D0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA0450);
    uint64_t v3 = sub_251F363F0();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      uint64_t v7 = *(char *)(v6 + v4);
      sub_251F36CA0();
      int v8 = dword_251F4706C[v7];
      sub_251F36CE0();
      uint64_t result = sub_251F36D00();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      uint64_t v15 = *(void *)(v3 + 48);
      if (((1 << v11) & v13) != 0)
      {
        if (dword_251F4706C[*(char *)(v15 + v11)] == v8) {
          goto LABEL_3;
        }
        uint64_t v16 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v16;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          if (dword_251F4706C[*(char *)(v15 + v11)] == v8) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(unsigned char *)(v15 + v11) = v7;
      uint64_t v17 = *(void *)(v3 + 16);
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v19;
LABEL_3:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

void sub_251C09B2C(unint64_t a1)
{
}

void sub_251C09B48(unint64_t a1)
{
}

void sub_251C09B64(unint64_t a1, uint64_t *a2, unint64_t *a3)
{
  unint64_t v4 = a1;
  unint64_t v5 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v9)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(a2);
      uint64_t v6 = sub_251F363F0();
      uint64_t v7 = v4 & 0xFFFFFFFFFFFFFF8;
      if (!v5) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_251F366C0();
      swift_bridgeObjectRelease();
      if (!v8) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v6 = MEMORY[0x263F8EE88];
  uint64_t v7 = v4 & 0xFFFFFFFFFFFFFF8;
  if (v5) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8) {
    return;
  }
LABEL_9:
  uint64_t v10 = v6 + 56;
  uint64_t v46 = v8;
  if ((v4 & 0xC000000000000001) != 0)
  {
    uint64_t v11 = 0;
    unint64_t v43 = v4;
    while (1)
    {
      uint64_t v12 = MEMORY[0x2533AB3A0](v11, v4);
      BOOL v13 = __OFADD__(v11++, 1);
      if (v13)
      {
        __break(1u);
        goto LABEL_37;
      }
      uint64_t v14 = v12;
      uint64_t v15 = sub_251F36110();
      uint64_t v16 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v17 = v15 & ~v16;
      unint64_t v18 = v17 >> 6;
      uint64_t v19 = *(void *)(v10 + 8 * (v17 >> 6));
      uint64_t v20 = 1 << v17;
      if (((1 << v17) & v19) != 0)
      {
        sub_251A1A568(0, a3);
        id v21 = *(id *)(*(void *)(v6 + 48) + 8 * v17);
        char v22 = sub_251F36120();

        if (v22)
        {
LABEL_11:
          swift_unknownObjectRelease();
          unint64_t v4 = v43;
          goto LABEL_12;
        }
        uint64_t v23 = ~v16;
        while (1)
        {
          unint64_t v17 = (v17 + 1) & v23;
          unint64_t v18 = v17 >> 6;
          uint64_t v19 = *(void *)(v10 + 8 * (v17 >> 6));
          uint64_t v20 = 1 << v17;
          if ((v19 & (1 << v17)) == 0) {
            break;
          }
          id v24 = *(id *)(*(void *)(v6 + 48) + 8 * v17);
          char v25 = sub_251F36120();

          if (v25) {
            goto LABEL_11;
          }
        }
        unint64_t v4 = v43;
      }
      *(void *)(v10 + 8 * v18) = v20 | v19;
      *(void *)(*(void *)(v6 + 48) + 8 * v17) = v14;
      uint64_t v26 = *(void *)(v6 + 16);
      BOOL v13 = __OFADD__(v26, 1);
      uint64_t v27 = v26 + 1;
      if (v13) {
        goto LABEL_38;
      }
      *(void *)(v6 + 16) = v27;
LABEL_12:
      if (v11 == v46) {
        return;
      }
    }
  }
  uint64_t v28 = 0;
  uint64_t v44 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v28 != v44)
  {
    id v29 = *(id *)(v4 + 32 + 8 * v28);
    uint64_t v30 = sub_251F36110();
    uint64_t v31 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v32 = v30 & ~v31;
    unint64_t v33 = v32 >> 6;
    uint64_t v34 = *(void *)(v10 + 8 * (v32 >> 6));
    uint64_t v35 = 1 << v32;
    if (((1 << v32) & v34) != 0)
    {
      sub_251A1A568(0, a3);
      id v36 = *(id *)(*(void *)(v6 + 48) + 8 * v32);
      char v37 = sub_251F36120();

      if (v37) {
        goto LABEL_24;
      }
      uint64_t v38 = ~v31;
      unint64_t v32 = (v32 + 1) & v38;
      unint64_t v33 = v32 >> 6;
      uint64_t v34 = *(void *)(v10 + 8 * (v32 >> 6));
      uint64_t v35 = 1 << v32;
      if ((v34 & (1 << v32)) != 0)
      {
        while (1)
        {
          id v39 = *(id *)(*(void *)(v6 + 48) + 8 * v32);
          char v40 = sub_251F36120();

          if (v40) {
            break;
          }
          unint64_t v32 = (v32 + 1) & v38;
          unint64_t v33 = v32 >> 6;
          uint64_t v34 = *(void *)(v10 + 8 * (v32 >> 6));
          uint64_t v35 = 1 << v32;
          if ((v34 & (1 << v32)) == 0) {
            goto LABEL_32;
          }
        }
LABEL_24:

        uint64_t v8 = v46;
        goto LABEL_25;
      }
LABEL_32:
      uint64_t v8 = v46;
    }
    *(void *)(v10 + 8 * v33) = v35 | v34;
    *(void *)(*(void *)(v6 + 48) + 8 * v32) = v29;
    uint64_t v41 = *(void *)(v6 + 16);
    BOOL v13 = __OFADD__(v41, 1);
    uint64_t v42 = v41 + 1;
    if (v13) {
      goto LABEL_39;
    }
    *(void *)(v6 + 16) = v42;
LABEL_25:
    if (++v28 == v8) {
      return;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

uint64_t sub_251C09EC8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D340);
    uint64_t v3 = sub_251F363F0();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      uint64_t v7 = *(char *)(v6 + v4);
      sub_251F36CA0();
      int v8 = dword_251F470D8[v7];
      sub_251F36CE0();
      uint64_t result = sub_251F36D00();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      uint64_t v15 = *(void *)(v3 + 48);
      if (((1 << v11) & v13) != 0)
      {
        if (dword_251F470D8[*(char *)(v15 + v11)] == v8) {
          goto LABEL_3;
        }
        uint64_t v16 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v16;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          if (dword_251F470D8[*(char *)(v15 + v11)] == v8) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(unsigned char *)(v15 + v11) = v7;
      uint64_t v17 = *(void *)(v3 + 16);
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v19;
LABEL_3:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_251C0A024(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F1B0);
    uint64_t v3 = sub_251F363F0();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v22 = v1;
    uint64_t v23 = a1 + 32;
    while (1)
    {
      char v6 = *(unsigned char *)(v23 + v4);
      sub_251F36CA0();
      CharacteristicKind.rawValue.getter();
      sub_251F357B0();
      swift_bridgeObjectRelease();
      uint64_t result = sub_251F36D00();
      uint64_t v8 = ~(-1 << *(unsigned char *)(v3 + 32));
      unint64_t v9 = result & v8;
      unint64_t v10 = (result & (unint64_t)v8) >> 6;
      uint64_t v11 = *(void *)(v5 + 8 * v10);
      uint64_t v12 = 1 << (result & v8);
      if ((v12 & v11) != 0)
      {
        while (1)
        {
          unint64_t v13 = CharacteristicKind.rawValue.getter();
          uint64_t v15 = v14;
          if (v13 == CharacteristicKind.rawValue.getter() && v15 == v16) {
            break;
          }
          char v18 = sub_251F36B10();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if (v18) {
            goto LABEL_4;
          }
          unint64_t v9 = (v9 + 1) & v8;
          unint64_t v10 = v9 >> 6;
          uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
          uint64_t v12 = 1 << v9;
          if ((v11 & (1 << v9)) == 0) {
            goto LABEL_12;
          }
        }
        swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_12:
        *(void *)(v5 + 8 * v10) = v12 | v11;
        *(unsigned char *)(*(void *)(v3 + 48) + v9) = v6;
        uint64_t v19 = *(void *)(v3 + 16);
        BOOL v20 = __OFADD__(v19, 1);
        uint64_t v21 = v19 + 1;
        if (v20)
        {
          __break(1u);
          return result;
        }
        *(void *)(v3 + 16) = v21;
      }
LABEL_4:
      if (++v4 == v22) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

void sub_251C0A1EC(unint64_t a1)
{
}

void sub_251C0A208(uint64_t a1, uint64_t a2)
{
  if (qword_269B9C388 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_251F350A0();
  __swift_project_value_buffer(v4, (uint64_t)qword_269BF30F0);
  swift_retain_n();
  uint64_t v5 = sub_251F35080();
  os_log_type_t v6 = sub_251F35FD0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v12 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = a1;
    *(void *)(v9 + 24) = a2;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA0490);
    uint64_t v10 = sub_251F35770();
    sub_251A00E84(v10, v11, &v12);
    sub_251F361D0();
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v8, -1, -1);
    MEMORY[0x2533AC760](v7, -1, -1);
  }
  else
  {

    swift_release_n();
  }
}

uint64_t _s13HomeDataModel0A12ManagerActorC04homeD14DidUpdateHomesyySo06HMHomeD0CF_0()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_251F35CD0();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_251A1B064((uint64_t)v4, &qword_26B220BB0);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    sub_251F35CC0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = sub_251F35C00();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_269BA0468;
  *(void *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t type metadata accessor for HomeManagerActor()
{
  return self;
}

uint64_t method lookup function for HomeManagerActor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for HomeManagerActor);
}

void sub_251C0A680(unint64_t a1)
{
}

uint64_t sub_251C0A69C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticService();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  int v8 = (char *)&v27 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D268);
    uint64_t v10 = sub_251F363F0();
    uint64_t v11 = 0;
    uint64_t v12 = v10 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v3 + 80);
    uint64_t v28 = v9;
    uint64_t v29 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v3 + 72);
    uint64_t v15 = v9;
    while (1)
    {
      sub_251C0AC14(v29 + v14 * v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
      sub_251F36CA0();
      StaticService.hash(into:)(v30);
      uint64_t v16 = sub_251F36D00();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v10 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v12 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        do
        {
          sub_251C0AC14(*(void *)(v10 + 48) + v18 * v14, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
          char v22 = _s13HomeDataModel13StaticServiceV2eeoiySbAC_ACtFZ_0((uint64_t)v6, (uint64_t)v8);
          sub_251C0AC7C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
          if (v22)
          {
            sub_251C0AC7C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
            uint64_t v15 = v28;
            goto LABEL_4;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v12 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
        }
        while ((v20 & (1 << v18)) != 0);
        uint64_t v15 = v28;
      }
      *(void *)(v12 + 8 * v19) = v21 | v20;
      uint64_t result = sub_251C0ACDC((uint64_t)v8, *(void *)(v10 + 48) + v18 * v14, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v24 = *(void *)(v10 + 16);
      BOOL v25 = __OFADD__(v24, 1);
      uint64_t v26 = v24 + 1;
      if (v25) {
        break;
      }
      *(void *)(v10 + 16) = v26;
LABEL_4:
      if (++v11 == v15) {
        return v10;
      }
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE88];
  }
  return result;
}

uint64_t sub_251C0A918(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0428);
    uint64_t v3 = sub_251F363F0();
    uint64_t v36 = v3 + 56;
    uint64_t result = sub_251F34E40();
    uint64_t v5 = result;
    uint64_t v6 = 0;
    uint64_t v7 = *(void *)(result - 8);
    int v8 = *(void (**)(char *))(v7 + 16);
    uint64_t v34 = v7 + 16;
    uint64_t v35 = v8;
    uint64_t v29 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v9 = v3;
    uint64_t v37 = *(void *)(v7 + 72);
    uint64_t v33 = *(void *)(v7 + 64);
    uint64_t v10 = (uint64_t (**)(char *, uint64_t))(v7 + 8);
    uint64_t v27 = v1;
    uint64_t v28 = (uint64_t (**)(unint64_t, char *, uint64_t))(v7 + 32);
    while (1)
    {
      MEMORY[0x270FA5388](result);
      unint64_t v32 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v12 = (char *)&v26 - v32;
      v35((char *)&v26 - v32);
      sub_251C0B240(&qword_269BA0430, MEMORY[0x270FA98C0]);
      uint64_t v13 = sub_251F35600();
      uint64_t v14 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v15 = v13 & v14;
      unint64_t v16 = (v13 & (unint64_t)v14) >> 6;
      uint64_t v17 = *(void *)(v36 + 8 * v16);
      uint64_t v18 = 1 << (v13 & v14);
      if ((v18 & v17) != 0)
      {
        uint64_t v30 = &v26;
        uint64_t v31 = v6;
        do
        {
          MEMORY[0x270FA5388](v13);
          unint64_t v19 = (char *)&v26 - v32;
          uint64_t v20 = v9;
          ((void (*)(char *, unint64_t, uint64_t))v35)((char *)&v26 - v32, *(void *)(v9 + 48) + v15 * v37, v5);
          sub_251C0B240(&qword_269BA0438, MEMORY[0x270FA98C0]);
          char v21 = sub_251F35650();
          char v22 = *v10;
          uint64_t v13 = (*v10)(v19, v5);
          if (v21)
          {
            uint64_t result = v22(v12, v5);
            uint64_t v1 = v27;
            uint64_t v9 = v20;
            uint64_t v6 = v31;
            goto LABEL_4;
          }
          unint64_t v15 = (v15 + 1) & v14;
          unint64_t v16 = v15 >> 6;
          uint64_t v17 = *(void *)(v36 + 8 * (v15 >> 6));
          uint64_t v18 = 1 << v15;
          uint64_t v9 = v20;
        }
        while ((v17 & (1 << v15)) != 0);
        uint64_t v1 = v27;
        uint64_t v6 = v31;
      }
      *(void *)(v36 + 8 * v16) = v18 | v17;
      uint64_t result = (*v28)(*(void *)(v9 + 48) + v15 * v37, v12, v5);
      uint64_t v23 = *(void *)(v9 + 16);
      BOOL v24 = __OFADD__(v23, 1);
      uint64_t v25 = v23 + 1;
      if (v24) {
        break;
      }
      *(void *)(v9 + 16) = v25;
LABEL_4:
      if (++v6 == v1) {
        return v9;
      }
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE88];
  }
  return result;
}

uint64_t sub_251C0AC14(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251C0AC7C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251C0ACDC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251C0AD44()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_251C0AD84()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_251AB3DD4;
  v3[2] = v2;
  return MEMORY[0x270FA2498](sub_251C06DA4, v2, 0);
}

uint64_t sub_251C0AE2C()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_251C0AE64(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_251AB3A34;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269B9E588 + dword_269B9E588);
  return v6(a1, v4);
}

uint64_t sub_251C0AF1C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0478);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_251C0AFEC(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA0478) - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_251AB3A34;
  return sub_251C06964(a1, v5, v6, v7);
}

uint64_t sub_251C0B0DC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0478);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_251C0B170(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0478);
  return sub_251C06D38(a1);
}

uint64_t sub_251C0B1E4(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_251C0B210@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_251C0B240(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251C0B288()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA04C8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 80) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_251C0B368(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA04C8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 56);
  uint64_t v8 = *(void *)(v1 + 64);
  char v9 = *(unsigned char *)(v1 + 48);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_251AB3DD4;
  return sub_251C07948(a1, v3, v4, v5, v6, v9, v7, v8);
}

uint64_t sub_251C0B498()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA04C8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_251C0B570(void *a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA04C8) - 8);
  uint64_t v4 = *(char **)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 56);
  uint64_t v9 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  int v10 = *(unsigned __int8 *)(v1 + 32);
  return sub_251C07E70(a1, v4, v5, v10, v6, v7, v8, v9);
}

uint64_t sub_251C0B5F4()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA04C8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_251C0B6D4(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA04C8) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v10 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_251AB3DD4;
  return sub_251C08430(a1, v5, v6, v7, v8, v9, v10);
}

void sub_251C0B7E8(uint64_t a1)
{
  sub_251C08754(a1, *(void *)(v1 + 16));
}

uint64_t sub_251C0B7F0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA04C8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_251C0B890()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA04C8);
  return sub_251C08990();
}

uint64_t sub_251C0B940@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(char *, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v31 = a3;
  uint64_t v35 = a2;
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t v32 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & v4;
  v29[1] = v29;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0518);
  uint64_t v30 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v33 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v34 = v8;
  uint64_t v36 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    uint64_t v17 = v36;
    uint64_t v18 = *(void *)(v36 + 48);
    uint64_t v19 = sub_251F34DA0();
    uint64_t v20 = (*(uint64_t (**)(char *, unint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v9, v18 + *(void *)(*(void *)(v19 - 8) + 72) * i, v19);
    char v21 = *(void **)(*(void *)(v17 + 56) + 8 * i);
    uint64_t v22 = v37;
    *(void *)&v9[*(int *)(v37 + 48)] = v21;
    MEMORY[0x270FA5388](v20);
    BOOL v24 = (char *)v29 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251A4ECF0((uint64_t)v9, (uint64_t)v24, &qword_269BA0518);
    uint64_t v25 = *(void *)&v24[*(int *)(v22 + 48)];
    id v26 = v21;
    if (v35(v24, v25))
    {
      swift_release();
      uint64_t v27 = (uint64_t)v24;
      uint64_t v28 = v31;
      sub_251A4ECF0(v27, v31, &qword_269BA0518);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v30 + 56))(v28, 0, 1, v37);
    }
    uint64_t result = sub_251A1B064((uint64_t)v24, &qword_269BA0518);
    if (v7) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v14 >= v33) {
      goto LABEL_25;
    }
    unint64_t v15 = *(void *)(v32 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v33) {
        goto LABEL_25;
      }
      unint64_t v15 = *(void *)(v32 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v33) {
          goto LABEL_25;
        }
        unint64_t v15 = *(void *)(v32 + 8 * v11);
        if (!v15)
        {
          int64_t v11 = v14 + 3;
          if (v14 + 3 >= v33) {
            goto LABEL_25;
          }
          unint64_t v15 = *(void *)(v32 + 8 * v11);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v7 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v33)
  {
LABEL_25:
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56))(v31, 1, 1, v37);
  }
  unint64_t v15 = *(void *)(v32 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v33) {
      goto LABEL_25;
    }
    unint64_t v15 = *(void *)(v32 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_251C0BCC0(uint64_t a1)
{
  uint64_t v1 = a1;
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v51 = MEMORY[0x263F8EE78];
    sub_251A3E084(0, v2, 0);
    uint64_t v50 = v51;
    uint64_t v4 = sub_251A82938(v1);
    unsigned int v6 = v5;
    char v8 = v7 & 1;
    uint64_t v9 = sub_251F34DA0();
    unint64_t v10 = v4;
    uint64_t v11 = *(void *)(v9 - 8);
    uint64_t v12 = v11;
    uint64_t v41 = v11 + 16;
    uint64_t v42 = *(void *)(v11 + 64);
    uint64_t v43 = v1 + 64;
    uint64_t v39 = v1;
    uint64_t v40 = v11 + 32;
    int64_t v37 = v2;
    uint64_t v38 = v6;
    uint64_t v36 = v1 + 88;
    while (1)
    {
      uint64_t v15 = v12;
      uint64_t v16 = MEMORY[0x270FA5388](&v36);
      uint64_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t result = MEMORY[0x270FA5388](v16);
      uint64_t v23 = (char *)&v36 - v20;
      if (v8)
      {
LABEL_33:
        __break(1u);
        return result;
      }
      if ((v10 & 0x8000000000000000) != 0 || (uint64_t)v10 >= 1 << *(unsigned char *)(v1 + 32))
      {
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      uint64_t v45 = v21;
      unint64_t v49 = v10 >> 6;
      if ((*(void *)(v22 + 8 * (v10 >> 6)) & (1 << v10)) == 0) {
        goto LABEL_28;
      }
      if (*(_DWORD *)(v1 + 36) != v19) {
        goto LABEL_29;
      }
      uint64_t v47 = v10;
      uint64_t v48 = result;
      uint64_t v44 = v19;
      uint64_t v24 = *(void *)(v1 + 48);
      uint64_t v46 = *(void *)(v15 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))((char *)&v36 - v20, v24 + v46 * v10, v9);
      uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
      v25(v18, v23, v9);
      uint64_t v26 = v50;
      uint64_t v51 = v50;
      unint64_t v28 = *(void *)(v50 + 16);
      unint64_t v27 = *(void *)(v50 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_251A3E084(v27 > 1, v28 + 1, 1);
        uint64_t v26 = v51;
      }
      *(void *)(v26 + 16) = v28 + 1;
      unint64_t v29 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      uint64_t v50 = v26;
      v25((char *)(v26 + v29 + v28 * v46), v18, v9);
      uint64_t result = v47;
      uint64_t v1 = v39;
      int64_t v13 = 1 << *(unsigned char *)(v39 + 32);
      if (v47 >= v13) {
        goto LABEL_30;
      }
      uint64_t v12 = v15;
      unint64_t v30 = v49;
      uint64_t v31 = *(void *)(v43 + 8 * v49);
      if ((v31 & (1 << v10)) == 0) {
        goto LABEL_31;
      }
      if (*(_DWORD *)(v39 + 36) != v44) {
        goto LABEL_32;
      }
      unint64_t v32 = v31 & (-2 << (v47 & 0x3F));
      if (v32)
      {
        int64_t v13 = __clz(__rbit64(v32)) | v47 & 0xFFFFFFFFFFFFFFC0;
        int64_t v14 = v37;
      }
      else
      {
        unint64_t v33 = v49 + 1;
        unint64_t v34 = (unint64_t)(v13 + 63) >> 6;
        int64_t v14 = v37;
        if (v49 + 1 < v34)
        {
          unint64_t v35 = *(void *)(v43 + 8 * v33);
          if (!v35)
          {
            unint64_t v33 = v49 + 2;
            if (v49 + 2 >= v34) {
              goto LABEL_4;
            }
            unint64_t v35 = *(void *)(v43 + 8 * v33);
            if (!v35)
            {
              while (v34 - 3 != v30)
              {
                unint64_t v35 = *(void *)(v36 + 8 * v30++);
                if (v35)
                {
                  sub_251A4ECE4(v47, v44, 0);
                  unint64_t v33 = v30 + 2;
                  goto LABEL_18;
                }
              }
              sub_251A4ECE4(v47, v44, 0);
              goto LABEL_4;
            }
          }
LABEL_18:
          int64_t v13 = __clz(__rbit64(v35)) + (v33 << 6);
        }
      }
LABEL_4:
      char v8 = 0;
      unint64_t v10 = v13;
      if (v45 + 1 == v14) {
        return v50;
      }
    }
  }
  return result;
}

uint64_t RecommendationsModerator.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t RecommendationsModerator.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t RecommendationsModerator.unownedExecutor.getter()
{
  return v0;
}

uint64_t RecommendationsModerator.currentUserActionPredictions(manager:for:)(uint64_t a1, uint64_t a2)
{
  v3[30] = a2;
  v3[31] = v2;
  v3[29] = a1;
  v3[32] = type metadata accessor for StateSnapshot.UpdateType(0);
  v3[33] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  v3[34] = v4;
  v3[35] = *(void *)(v4 - 8);
  v3[36] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251C0C1E0, v2, 0);
}

uint64_t sub_251C0C1E0()
{
  uint64_t v50 = v0;
  uint64_t v1 = v0[31];
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 120);
  if (*(void *)(v2 + 16))
  {
    uint64_t v3 = v0[30];
    swift_bridgeObjectRetain();
    unint64_t v4 = sub_2519FE584(v3);
    if (v5)
    {
      uint64_t v6 = *(void *)(*(void *)(v2 + 56) + 8 * v4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (qword_26B21ED80 != -1) {
        swift_once();
      }
      char v7 = (void *)v0[29];
      uint64_t v8 = v0[30];
      uint64_t v9 = sub_251F350A0();
      __swift_project_value_buffer(v9, (uint64_t)qword_26B21ED68);
      uint64_t v10 = sub_251F34DA0();
      uint64_t v11 = *(void *)(v10 - 8);
      uint64_t v12 = swift_task_alloc();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v12, v8, v10);
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      id v13 = v7;
      int64_t v14 = sub_251F35080();
      os_log_type_t v15 = sub_251F35FD0();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v46 = v10;
        BOOL log = v14;
        uint64_t v16 = (void *)v0[29];
        uint64_t v17 = swift_slowAlloc();
        uint64_t v45 = swift_slowAlloc();
        v49[0] = v45;
        *(_DWORD *)uint64_t v17 = 136315394;
        id v18 = objc_msgSend(v16, sel_homes);
        sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
        unint64_t v19 = sub_251F35AC0();

        uint64_t v20 = swift_task_alloc();
        *(void *)(v20 + 16) = v12;
        uint64_t v21 = sub_251A95638(sub_251C11638, v20, v19);
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        uint64_t v48 = v12;
        if (v21)
        {
          id v22 = objc_msgSend(v21, sel_name);

          uint64_t v23 = sub_251F356F0();
          unint64_t v25 = v24;
        }
        else
        {
          unint64_t v25 = 0xEC000000656D6F68;
          uint64_t v23 = 0x206E776F6E6B6E75;
        }
        int64_t v37 = (void *)v0[29];
        v0[27] = sub_251A00E84(v23, v25, v49);
        sub_251F361D0();
        swift_bridgeObjectRelease();
        swift_release_n();

        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v48, v46);
        *(_WORD *)(v17 + 12) = 2080;
        uint64_t v38 = sub_251A1A568(0, &qword_26B21EB20);
        uint64_t v39 = swift_bridgeObjectRetain();
        uint64_t v40 = MEMORY[0x2533AAA10](v39, v38);
        unint64_t v42 = v41;
        swift_bridgeObjectRelease();
        v0[28] = sub_251A00E84(v40, v42, v49);
        sub_251F361D0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_2519F3000, log, v15, "%s existing predictions: %s", (uint8_t *)v17, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v45, -1, -1);
        MEMORY[0x2533AC760](v17, -1, -1);
      }
      else
      {
        uint64_t v36 = (void *)v0[29];
        swift_release_n();

        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v10);
        swift_bridgeObjectRelease_n();
      }
      swift_task_dealloc();
      goto LABEL_22;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v26 = v0[31] + 112;
  swift_beginAccess();
  if (!*(void *)(*(void *)v26 + 16)
    || (uint64_t v27 = v0[30],
        swift_bridgeObjectRetain(),
        sub_2519FE584(v27),
        LOBYTE(v27) = v28,
        swift_bridgeObjectRelease(),
        (v27 & 1) == 0)
    || (uint64_t v29 = *(void *)v26, !*(void *)(*(void *)v26 + 16)))
  {
LABEL_18:
    uint64_t v6 = MEMORY[0x263F8EE78];
LABEL_22:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v43 = (uint64_t (*)(uint64_t))v0[1];
    return v43(v6);
  }
  uint64_t v30 = v0[30];
  swift_bridgeObjectRetain();
  unint64_t v31 = sub_2519FE584(v30);
  if ((v32 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  unint64_t v33 = *(void **)(*(void *)(v29 + 56) + 8 * v31);
  v0[37] = v33;
  id v34 = v33;
  swift_bridgeObjectRelease();
  v0[2] = v0;
  v0[7] = v0 + 24;
  v0[3] = sub_251C0C838;
  uint64_t v35 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_251C0CF40;
  v0[13] = &block_descriptor_8;
  v0[14] = v35;
  objc_msgSend(v34, sel_fetchPredictionsWithCompletion_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_251C0C838()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 248);
  return MEMORY[0x270FA2498](sub_251C0C92C, v1, 0);
}

uint64_t sub_251C0C92C()
{
  uint64_t v53 = v0;
  uint64_t v1 = v0[24];
  if (qword_26B21ED80 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[30];
  uint64_t v3 = (void *)v0[29];
  uint64_t v4 = sub_251F350A0();
  __swift_project_value_buffer(v4, (uint64_t)qword_26B21ED68);
  uint64_t v5 = sub_251F34DA0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = swift_task_alloc();
  uint64_t v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v51(v7, v2, v5);
  swift_retain_n();
  id v8 = v3;
  swift_bridgeObjectRetain_n();
  id v9 = v8;
  uint64_t v10 = sub_251F35080();
  os_log_type_t v11 = sub_251F35FD0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v48 = v1;
    uint64_t v50 = v5;
    uint64_t v12 = (void *)v0[29];
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    v52[0] = v14;
    *(_DWORD *)uint64_t v13 = 136315394;
    id v15 = objc_msgSend(v12, sel_homes);
    sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
    unint64_t v16 = sub_251F35AC0();

    uint64_t v17 = swift_task_alloc();
    uint64_t v49 = v7;
    *(void *)(v17 + 16) = v7;
    id v18 = sub_251A95638(sub_251C10EDC, v17, v16);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    os_log_type_t v47 = v11;
    uint64_t v46 = v14;
    if (v18)
    {
      id v19 = objc_msgSend(v18, sel_name);

      uint64_t v20 = sub_251F356F0();
      unint64_t v22 = v21;
    }
    else
    {
      unint64_t v22 = 0xEC000000656D6F68;
      uint64_t v20 = 0x206E776F6E6B6E75;
    }
    uint64_t v27 = (void *)v0[29];
    v0[25] = sub_251A00E84(v20, v22, v52);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    swift_release_n();

    char v28 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    uint64_t v5 = v50;
    v28(v49, v50);
    unint64_t v25 = v28;
    *(_WORD *)(v13 + 12) = 2080;
    uint64_t v29 = sub_251A1A568(0, &qword_26B21EB20);
    uint64_t v26 = v48;
    uint64_t v30 = swift_bridgeObjectRetain();
    uint64_t v31 = MEMORY[0x2533AAA10](v30, v29);
    unint64_t v33 = v32;
    swift_bridgeObjectRelease();
    v0[26] = sub_251A00E84(v31, v33, v52);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2519F3000, v10, v47, "%s freshly fetched predictions: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v46, -1, -1);
    MEMORY[0x2533AC760](v13, -1, -1);
  }
  else
  {
    uint64_t v23 = (void *)v0[29];
    swift_release_n();

    unint64_t v24 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v24(v7, v5);
    unint64_t v25 = v24;
    swift_bridgeObjectRelease_n();

    uint64_t v26 = v1;
  }
  uint64_t v34 = v0[30];
  uint64_t v35 = v0[31];
  swift_task_dealloc();
  uint64_t v36 = swift_task_alloc();
  v51(v36, v34, v5);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v52[0] = *(void *)(v35 + 120);
  *(void *)(v35 + 120) = 0x8000000000000000;
  sub_251A0FC04(v26, v36, isUniquelyReferenced_nonNull_native);
  *(void *)(v35 + 120) = v52[0];
  swift_bridgeObjectRelease();
  v25(v36, v5);
  swift_endAccess();
  swift_task_dealloc();
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v38 = v0[36];
  uint64_t v39 = (void *)v0[37];
  uint64_t v40 = v0[34];
  uint64_t v41 = v0[35];
  unint64_t v42 = (uint64_t *)v0[33];
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v43, (uint64_t)qword_26B21FF20);
  *unint64_t v42 = v26;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_251F35CF0();

  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v38, v40);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v44 = (uint64_t (*)(uint64_t))v0[1];
  return v44(v26);
}

uint64_t sub_251C0CF40(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_251A1A568(0, &qword_26B21EB20);
  **(void **)(*(void *)(v1 + 64) + 40) = sub_251F35AC0();
  return MEMORY[0x270FA2400](v1);
}

uint64_t RecommendationsModerator.updateUserActionPredictions(manager:for:predictions:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[17] = a3;
  v4[18] = v3;
  v4[15] = a1;
  v4[16] = a2;
  v4[19] = type metadata accessor for StateSnapshot.UpdateType(0);
  v4[20] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  v4[21] = v5;
  v4[22] = *(void *)(v5 - 8);
  v4[23] = swift_task_alloc();
  v4[24] = type metadata accessor for StateSnapshot(0);
  v4[25] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251C0D0E0, v3, 0);
}

uint64_t sub_251C0D0E0()
{
  uint64_t v50 = v0;
  uint64_t v1 = v0[16];
  uint64_t v2 = sub_251F34DA0();
  v0[26] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = swift_task_alloc();
  v0[27] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v5 = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0510);
  uint64_t v6 = swift_task_alloc();
  swift_beginAccess();
  *(void *)(swift_task_alloc() + 16) = v1;
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_251C0B940(v7, (uint64_t (*)(char *, uint64_t))sub_251C10EFC, v6);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0518);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) == 1)
  {
    sub_251A1B064(v6, &qword_269BA0510);
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v5, 1, 1, v2);
LABEL_4:
    sub_251A1B064(v5, &qword_26B21FF90);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
  uint64_t v9 = v3;
  uint64_t v10 = v4;

  os_log_type_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
  v11(v5, v6, v2);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v2);
  swift_task_dealloc();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v5, 1, v2) == 1) {
    goto LABEL_4;
  }
  uint64_t v14 = v0[17];
  uint64_t v15 = v0[18];
  v11(v10, v5, v2);
  swift_task_dealloc();
  uint64_t v16 = swift_task_alloc();
  os_log_t log = *(os_log_t *)(v9 + 16);
  ((void (*)(uint64_t, uint64_t, uint64_t))log)(v16, v10, v2);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v49[0] = *(void *)(v15 + 120);
  *(void *)(v15 + 120) = 0x8000000000000000;
  sub_251A0FC04(v14, v16, isUniquelyReferenced_nonNull_native);
  *(void *)(v15 + 120) = v49[0];
  swift_bridgeObjectRelease();
  id v18 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v0[28] = v18;
  v0[29] = (v9 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v18(v16, v2);
  swift_endAccess();
  swift_task_dealloc();
  if (qword_26B21ED80 != -1) {
    swift_once();
  }
  id v19 = (void *)v0[15];
  uint64_t v20 = sub_251F350A0();
  __swift_project_value_buffer(v20, (uint64_t)qword_26B21ED68);
  uint64_t v48 = swift_task_alloc();
  ((void (*)(uint64_t, uint64_t, uint64_t))log)(v48, v10, v2);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  id v21 = v19;
  unint64_t v22 = sub_251F35080();
  os_log_type_t v23 = sub_251F35FD0();
  if (os_log_type_enabled(v22, v23))
  {
    os_log_type_t v44 = v23;
    uint64_t v45 = v18;
    unint64_t v24 = (void *)v0[15];
    uint64_t v25 = swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    v49[0] = v43;
    *(_DWORD *)uint64_t v25 = 136315650;
    v0[12] = sub_251A00E84(0xD000000000000035, 0x8000000251F6E310, v49);
    sub_251F361D0();
    *(_WORD *)(v25 + 12) = 2080;
    id v26 = objc_msgSend(v24, sel_homes);
    sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
    unint64_t v27 = sub_251F35AC0();

    uint64_t v28 = swift_task_alloc();
    *(void *)(v28 + 16) = v48;
    uint64_t v29 = sub_251A95638(sub_251C11638, v28, v27);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    int loga = v22;
    if (v29)
    {
      id v30 = objc_msgSend(v29, sel_name);

      uint64_t v31 = sub_251F356F0();
      unint64_t v33 = v32;
    }
    else
    {
      unint64_t v33 = 0xEC000000656D6F68;
      uint64_t v31 = 0x206E776F6E6B6E75;
    }
    uint64_t v35 = (void *)v0[15];
    v0[13] = sub_251A00E84(v31, v33, v49);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    swift_release_n();

    v45(v48, v2);
    *(_WORD *)(v25 + 22) = 2080;
    uint64_t v36 = sub_251A1A568(0, &qword_26B21EB20);
    uint64_t v37 = swift_bridgeObjectRetain();
    uint64_t v38 = MEMORY[0x2533AAA10](v37, v36);
    unint64_t v40 = v39;
    swift_bridgeObjectRelease();
    v0[14] = sub_251A00E84(v38, v40, v49);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2519F3000, loga, v44, "%s %s new predictions from DataModel+HomeKitDelegates.swift: %s", (uint8_t *)v25, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v43, -1, -1);
    MEMORY[0x2533AC760](v25, -1, -1);
  }
  else
  {
    uint64_t v34 = (void *)v0[15];
    swift_release_n();

    v18(v48, v2);
    swift_bridgeObjectRelease_n();
  }
  swift_task_dealloc();
  v0[30] = sub_251F35C80();
  v0[31] = sub_251F35C70();
  uint64_t v42 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C0D938, v42, v41);
}

uint64_t sub_251C0D938()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 144);
  return MEMORY[0x270FA2498](sub_251C0D9D0, v1, 0);
}

uint64_t sub_251C0D9D0()
{
  *(void *)(v0 + 256) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C0DA5C, v2, v1);
}

uint64_t sub_251C0DA5C()
{
  uint64_t v1 = *(void *)(v0 + 144);
  swift_release();
  *(void *)(v0 + 264) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251C0DAD4, v1, 0);
}

uint64_t sub_251C0DAD4()
{
  *(void *)(v0 + 272) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C0DB60, v2, v1);
}

uint64_t sub_251C0DB60()
{
  uint64_t v1 = v0[33];
  uint64_t v2 = v0[25];
  uint64_t v3 = v0[18];
  swift_release();
  swift_getKeyPath();
  v0[11] = v1;
  sub_251AD2C08();
  sub_251F34F10();
  swift_release();
  uint64_t v4 = v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  sub_251B75C78(v4, v2);
  return MEMORY[0x270FA2498](sub_251C0DC58, v3, 0);
}

uint64_t sub_251C0DC58()
{
  if (sub_251F34D70())
  {
    if (qword_26B2200D8 != -1) {
      swift_once();
    }
    uint64_t v15 = (void (*)(uint64_t, uint64_t))v0[28];
    uint64_t v1 = v0[25];
    uint64_t v13 = v0[26];
    uint64_t v14 = v0[27];
    uint64_t v2 = v0[22];
    uint64_t v3 = v0[23];
    uint64_t v4 = (void *)v0[20];
    uint64_t v5 = v0[21];
    uint64_t v6 = v0[17];
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
    __swift_project_value_buffer(v7, (uint64_t)qword_26B21FF20);
    *uint64_t v4 = v6;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_251F35CF0();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v5);
    sub_251C10F58(v1);
    v15(v14, v13);
  }
  else
  {
    uint64_t v8 = (void (*)(uint64_t, uint64_t))v0[28];
    uint64_t v9 = v0[26];
    uint64_t v10 = v0[27];
    sub_251C10F58(v0[25]);
    v8(v10, v9);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_251C0DE08(uint64_t a1)
{
  *(void *)(v2 + 144) = a1;
  *(void *)(v2 + 152) = v1;
  return MEMORY[0x270FA2498](sub_251C0DE28, v1, 0);
}

uint64_t sub_251C0DE28()
{
  uint64_t v156 = v0;
  uint64_t v2 = v0;
  uint64_t v3 = *(void **)(v0 + 144);
  swift_beginAccess();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v145 = sub_251C0BCC0(v4);
  Swift::Int_optional v147 = 0;
  *(void *)(v0 + 160) = v145;
  swift_bridgeObjectRelease();
  uint64_t v5 = &off_26536F000;
  id v6 = objc_msgSend(v3, sel_homes);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v7 = sub_251F35AC0();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_251F366C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v9 = MEMORY[0x263F8EE78];
  uint64_t v154 = v2;
  if (v8)
  {
    uint64_t v155 = MEMORY[0x263F8EE78];
    sub_251A3E084(0, v8 & ~(v8 >> 63), 0);
    if (v8 < 0)
    {
      __break(1u);
      goto LABEL_88;
    }
    uint64_t v151 = v8;
    uint64_t v10 = v155;
    unint64_t v149 = v7 & 0xC000000000000001;
    uint64_t v11 = 0;
    uint64_t v148 = sub_251F34DA0();
    uint64_t v12 = *(void *)(v148 - 8);
    unint64_t v1 = v12 + 32;
    unint64_t v13 = v7;
    do
    {
      uint64_t v14 = swift_task_alloc();
      if (v149) {
        id v15 = (id)MEMORY[0x2533AB3A0](v11, v7);
      }
      else {
        id v15 = *(id *)(v7 + 8 * v11 + 32);
      }
      uint64_t v16 = v15;
      id v17 = objc_msgSend(v15, sel_uniqueIdentifier);
      sub_251F34D80();

      uint64_t v155 = v10;
      unint64_t v19 = *(void *)(v10 + 16);
      unint64_t v18 = *(void *)(v10 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_251A3E084(v18 > 1, v19 + 1, 1);
        uint64_t v10 = v155;
      }
      ++v11;
      *(void *)(v10 + 16) = v19 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 32))(v10+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v19, v14, v148);
      swift_task_dealloc();
      unint64_t v7 = v13;
    }
    while (v151 != v11);
    swift_bridgeObjectRelease();
    uint64_t v2 = v154;
    uint64_t v5 = &off_26536F000;
    uint64_t v9 = MEMORY[0x263F8EE78];
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = MEMORY[0x263F8EE78];
  }
  *(void *)(v2 + 168) = v10;
  id v20 = [*(id *)(v2 + 144) (SEL)v5[229]];
  unint64_t v21 = sub_251F35AC0();

  if (!(v21 >> 62))
  {
    uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v22) {
      goto LABEL_16;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    if (*(void *)(MEMORY[0x263F8EE78] + 16))
    {
LABEL_25:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED90);
      uint64_t v35 = sub_251F36700();
      goto LABEL_30;
    }
LABEL_29:
    uint64_t v35 = MEMORY[0x263F8EE80];
LABEL_30:
    uint64_t v155 = v35;
    uint64_t v36 = swift_bridgeObjectRetain();
    sub_251C10FF0(v36, 1, &v155);
    swift_bridgeObjectRelease();
    *(void *)(v2 + 176) = v155;
    *(void *)(v2 + 184) = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90) - 8)
                                      + 64);
    uint64_t v37 = swift_task_alloc();
    *(void *)(v2 + 192) = v37;
    uint64_t v38 = *(void *)(v145 + 16);
    *(void *)(v2 + 200) = v38;
    if (v38)
    {
      uint64_t v39 = sub_251F34DA0();
      *(void *)(v2 + 208) = v39;
      uint64_t v40 = *(void *)(v39 - 8);
      uint64_t v37 = v39 - 8;
      *(void *)(v2 + 216) = v40;
      *(_DWORD *)(v2 + 512) = *(_DWORD *)(v40 + 80);
      *(void *)(v2 + 224) = 0;
      uint64_t v41 = *(void *)(v2 + 160);
      if (*(void *)(v41 + 16))
      {
        unint64_t v42 = 0;
        Swift::Int_optional v142 = (uint64_t *)(v2 + 136);
        do
        {
          uint64_t v43 = *(void *)(v2 + 208);
          os_log_type_t v44 = *(void **)(v2 + 216);
          uint64_t v45 = *(void *)(v2 + 192);
          uint64_t v143 = v44[9];
          Swift::Int_optional v147 = (void (*)(uint64_t, unint64_t, uint64_t))v44[2];
          v147(v45, v41+ ((*(unsigned __int8 *)(v2 + 512) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 512))+ v143 * v42, v43);
          Swift::Int_optional v150 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v44[7];
          v150(v45, 0, 1, v43);
          Swift::Int_optional v146 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v44[6];
          if (v146(v45, 1, v43) == 1) {
            goto LABEL_52;
          }
          uint64_t v46 = *(void *)(v2 + 216);
          uint64_t v47 = *(void *)(v2 + 168);
          uint64_t v48 = swift_task_alloc();
          uint64_t v49 = *(void (**)(void))(v46 + 32);
          *(void *)(v2 + 232) = v48;
          uint64_t v151 = v48;
          Swift::Int_optional v144 = v49;
          v49();
          uint64_t v50 = swift_task_alloc();
          uint64_t v51 = *(void *)(v47 + 16);
          swift_bridgeObjectRetain();
          if (v51)
          {
            uint64_t v52 = 0;
            while (1)
            {
              uint64_t v2 = v154;
              uint64_t v53 = *(void *)(v154 + 208);
              v147(v50, *(void *)(v154 + 168)+ v52+ ((*(unsigned __int8 *)(v154 + 512) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 512)), v53);
              v150(v50, 0, 1, v53);
              if (v146(v50, 1, v53) == 1) {
                break;
              }
              uint64_t v54 = *(void *)(v154 + 208);
              uint64_t v55 = *(void *)(v154 + 216);
              uint64_t v56 = swift_task_alloc();
              ((void (*)(uint64_t, uint64_t, uint64_t))v144)(v56, v50, v54);
              sub_251A9FE88();
              char v57 = sub_251F35650();
              uint64_t v58 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
              v58(v56, v54);
              if (v57)
              {
                uint64_t v2 = v154;
                uint64_t v63 = *(void *)(v154 + 208);
                swift_bridgeObjectRelease();
                swift_task_dealloc();
                swift_task_dealloc();
                v58(v151, v63);
                goto LABEL_45;
              }
              swift_task_dealloc();
              v52 += v143;
              if (!--v51) {
                goto LABEL_39;
              }
            }
          }
          else
          {
LABEL_39:
            uint64_t v2 = v154;
            v150(v50, 1, 1, *(void *)(v154 + 208));
          }
          uint64_t v59 = *(void *)(v2 + 152);
          swift_bridgeObjectRelease();
          swift_task_dealloc();
          uint64_t v60 = *(void *)(v59 + 112);
          if (*(void *)(v60 + 16))
          {
            swift_bridgeObjectRetain();
            unint64_t v61 = sub_2519FE584(v151);
            if (v62)
            {
              double v96 = *(void **)(*(void *)(v60 + 56) + 8 * v61);
              *(void *)(v2 + 240) = v96;
              id v97 = v96;
              swift_bridgeObjectRelease();
              objc_msgSend(v97, sel_setDelegate_, 0);
              swift_beginAccess();
              swift_bridgeObjectRetain();
              unint64_t v1 = sub_2519FE584(v151);
              LOBYTE(v97) = v98;
              swift_bridgeObjectRelease();
              double v99 = 0;
              if ((v97 & 1) == 0) {
                goto LABEL_71;
              }
              uint64_t v100 = *(void *)(v2 + 152);
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v102 = *(void *)(v100 + 112);
              *(void *)(v2 + 136) = v102;
              *(void *)(v100 + 112) = 0x8000000000000000;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                goto LABEL_89;
              }
              goto LABEL_70;
            }
            swift_bridgeObjectRelease();
          }
          (*(void (**)(uint64_t, void))(*(void *)(v2 + 216) + 8))(v151, *(void *)(v2 + 208));
LABEL_45:
          uint64_t v64 = *(void *)(v2 + 200);
          uint64_t v65 = *(void *)(v2 + 224) + 1;
          uint64_t v37 = swift_task_dealloc();
          if (v65 == v64)
          {
            uint64_t v66 = *(void *)(v2 + 192);
            goto LABEL_51;
          }
          unint64_t v42 = *(void *)(v2 + 224) + 1;
          *(void *)(v2 + 224) = v42;
          uint64_t v41 = *(void *)(v2 + 160);
        }
        while (v42 < *(void *)(v41 + 16));
      }
      __break(1u);
    }
    uint64_t v66 = v37;
LABEL_51:
    uint64_t v67 = sub_251F34DA0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v66, 1, 1, v67);
LABEL_52:
    swift_bridgeObjectRelease();
    uint64_t v68 = *(void *)(v2 + 168);
    swift_task_dealloc();
    uint64_t v69 = swift_task_alloc();
    *(void *)(v2 + 320) = v69;
    uint64_t v70 = *(void *)(v68 + 16);
    *(void *)(v2 + 328) = v70;
    if (v70)
    {
      BOOL v71 = (uint64_t *)(v2 + 112);
      uint64_t v72 = sub_251F34DA0();
      uint64_t v73 = 0;
      *(void *)(v2 + 336) = v72;
      uint64_t v74 = *(void *)(v72 - 8);
      uint64_t v75 = v74;
      *(void *)(v2 + 344) = v74;
      int v76 = *(_DWORD *)(v74 + 80);
      *(_DWORD *)(v2 + 516) = v76;
      uint64_t v77 = *(void *)(v74 + 72);
      *(void *)(v2 + 352) = v77;
      uint64_t v78 = *(void (**)(uint64_t, unint64_t, uint64_t))(v74 + 16);
      *(void *)(v2 + 360) = v78;
      while (1)
      {
        *(void *)(v2 + 368) = v73;
        v78(v69, *(void *)(v2 + 168) + ((v76 + 32) & ~(unint64_t)v76) + v77 * v73, v72);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v75 + 56))(v69, 0, 1, v72);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v69, 1, v72) == 1) {
          goto LABEL_65;
        }
        uint64_t v79 = *(void *)(v2 + 344);
        uint64_t v80 = *(void *)(v154 + 176);
        uint64_t v81 = swift_task_alloc();
        *(void *)(v154 + 376) = v81;
        (*(void (**)(void))(v79 + 32))();
        uint64_t v82 = *(void *)(v80 + 16);
        uint64_t v2 = v154;
        if (v82 && (unint64_t v83 = sub_2519FE584(v81), (v84 & 1) != 0))
        {
          uint64_t v85 = *(void *)(v154 + 152);
          char v86 = *(void **)(*(void *)(*(void *)(v154 + 176) + 56) + 8 * v83);
          *(void *)(v154 + 384) = v86;
          uint64_t v87 = *(void *)(*(void *)(v85 + 112) + 16);
          id v88 = v86;
          if (!v87)
          {
            long long v153 = v71;
            uint64_t v115 = (void *)v154;
LABEL_74:
            uint64_t v116 = (void (*)(uint64_t, uint64_t, uint64_t))v115[45];
            uint64_t v117 = v115[42];
            id v118 = objc_msgSend(v88, sel_userActionPredictionController);
            v115[49] = v118;
            uint64_t v119 = swift_task_alloc();
            v116(v119, v81, v117);
            swift_beginAccess();
            if (v118)
            {
              uint64_t v121 = v115[42];
              uint64_t v120 = v115[43];
              uint64_t v122 = v115[19];
              id v123 = v118;
              char v124 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v155 = *(void *)(v122 + 112);
              *(void *)(v122 + 112) = 0x8000000000000000;
              sub_251A0FC10((uint64_t)v123, v119, v124);
              *(void *)(v122 + 112) = v155;
              swift_bridgeObjectRelease();
              uint64_t v125 = *(void (**)(uint64_t, uint64_t))(v120 + 8);
              v115[50] = v125;
              v125(v119, v121);
              swift_endAccess();
              swift_task_dealloc();
              v115[51] = sub_251F35C80();
              id v126 = v123;
              v115[52] = sub_251F35C70();
              uint64_t v111 = sub_251F35C00();
              uint64_t v113 = v127;
              uint64_t v114 = sub_251C0FF9C;
              goto LABEL_76;
            }
            swift_bridgeObjectRetain();
            unint64_t v128 = sub_2519FE584(v119);
            char v130 = v129;
            swift_bridgeObjectRelease();
            Swift::Int_optional v131 = v115;
            if (v130)
            {
              uint64_t v132 = v115[19];
              char v133 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v134 = *(void *)(v132 + 112);
              v115[14] = v134;
              *(void *)(v132 + 112) = 0x8000000000000000;
              if ((v133 & 1) == 0)
              {
                sub_251A1655C();
                uint64_t v134 = *v153;
              }
              uint64_t v135 = v115[19];
              Swift::Int_optional v136 = *(void (**)(unint64_t, void))(v115[43] + 8);
              v136(*(void *)(v134 + 48) + v115[44] * v128, v115[42]);
              uint64_t v137 = v115[14];
              Swift::Int_optional v138 = *(void **)(*(void *)(v137 + 56) + 8 * v128);
              sub_251E39FD0(v128, v131[14]);
              *(void *)(v135 + 112) = v137;
              swift_bridgeObjectRelease();
            }
            else
            {
              Swift::Int_optional v138 = 0;
              Swift::Int_optional v136 = *(void (**)(unint64_t, void))(v131[43] + 8);
            }
            v136(v119, v131[42]);
            swift_endAccess();

            swift_task_dealloc();
            v131[55] = v136;
            Swift::Int_optional v139 = (void *)swift_task_alloc();
            v131[56] = v139;
            *Swift::Int_optional v139 = v131;
            v139[1] = sub_251C101F4;
            uint64_t v140 = v131[47];
            uint64_t v141 = v131[18];
            return RecommendationsModerator.currentUserActionPredictions(manager:for:)(v141, v140);
          }
          swift_bridgeObjectRetain();
          sub_2519FE584(v81);
          char v90 = v89;
          swift_bridgeObjectRelease();
          if ((v90 & 1) == 0)
          {
            long long v153 = v71;
            uint64_t v115 = (void *)v154;
            goto LABEL_74;
          }
          uint64_t v2 = v154;
          (*(void (**)(uint64_t, void))(*(void *)(v154 + 344) + 8))(v81, *(void *)(v154 + 336));
        }
        else
        {
          (*(void (**)(uint64_t, void))(*(void *)(v154 + 344) + 8))(v81, *(void *)(v154 + 336));
        }
        uint64_t v91 = *(void *)(v2 + 328);
        uint64_t v92 = *(void *)(v2 + 368) + 1;
        swift_task_dealloc();
        if (v92 == v91)
        {
          uint64_t v69 = *(void *)(v2 + 320);
          break;
        }
        uint64_t v73 = *(void *)(v2 + 368) + 1;
        uint64_t v77 = *(void *)(v2 + 352);
        uint64_t v78 = *(void (**)(uint64_t, unint64_t, uint64_t))(v2 + 360);
        LOBYTE(v76) = *(unsigned char *)(v2 + 516);
        uint64_t v72 = *(void *)(v2 + 336);
        uint64_t v75 = *(void *)(v2 + 344);
        uint64_t v69 = *(void *)(v2 + 320);
      }
    }
    uint64_t v93 = sub_251F34DA0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v69, 1, 1, v93);
LABEL_65:
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    double v94 = *(uint64_t (**)(void))(v2 + 8);
    return v94();
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_251F366C0();
  swift_bridgeObjectRelease();
  if (!v22) {
    goto LABEL_28;
  }
LABEL_16:
  uint64_t v155 = v9;
  sub_251A3E780(0, v22 & ~(v22 >> 63), 0);
  if ((v22 & 0x8000000000000000) == 0)
  {
    uint64_t v23 = 0;
    uint64_t v24 = v155;
    unint64_t v152 = v21 & 0xC000000000000001;
    unint64_t v25 = v21;
    do
    {
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F5C0);
      uint64_t v27 = *(void *)(v26 - 8);
      uint64_t v28 = swift_task_alloc();
      if (v152) {
        id v29 = (id)MEMORY[0x2533AB3A0](v23, v21);
      }
      else {
        id v29 = *(id *)(v21 + 8 * v23 + 32);
      }
      id v30 = v29;
      uint64_t v31 = *(int *)(v26 + 48);
      id v32 = objc_msgSend(v29, sel_uniqueIdentifier);
      sub_251F34D80();

      *(void *)(v28 + v31) = v30;
      uint64_t v155 = v24;
      unint64_t v34 = *(void *)(v24 + 16);
      unint64_t v33 = *(void *)(v24 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_251A3E780(v33 > 1, v34 + 1, 1);
        uint64_t v24 = v155;
      }
      ++v23;
      *(void *)(v24 + 16) = v34 + 1;
      sub_251A4ECF0(v28, v24+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(void *)(v27 + 72) * v34, &qword_26B21F5C0);
      swift_task_dealloc();
      unint64_t v21 = v25;
    }
    while (v22 != v23);
    swift_bridgeObjectRelease();
    uint64_t v2 = v154;
    if (*(void *)(v24 + 16)) {
      goto LABEL_25;
    }
    goto LABEL_29;
  }
LABEL_88:
  __break(1u);
LABEL_89:
  sub_251A1655C();
  uint64_t v102 = *v142;
LABEL_70:
  uint64_t v103 = *(void *)(v2 + 152);
  (*(void (**)(unint64_t, void))(*(void *)(v2 + 216) + 8))(*(void *)(v102 + 48) + v1 * v143, *(void *)(v2 + 208));
  uint64_t v104 = *(void *)(v2 + 136);
  double v99 = *(void **)(*(void *)(v104 + 56) + 8 * v1);
  sub_251E39FD0(v1, v104);
  *(void *)(v103 + 112) = v104;
  swift_bridgeObjectRelease();
LABEL_71:
  uint64_t v106 = *(void *)(v2 + 208);
  uint64_t v105 = *(void *)(v2 + 216);
  uint64_t v107 = *(void *)(v2 + 152);
  swift_endAccess();

  uint64_t v108 = swift_task_alloc();
  v147(v108, v151, v106);
  swift_beginAccess();
  char v109 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v155 = *(void *)(v107 + 120);
  *(void *)(v107 + 120) = 0x8000000000000000;
  sub_251A0FC04(MEMORY[0x263F8EE78], v108, v109);
  *(void *)(v107 + 120) = v155;
  swift_bridgeObjectRelease();
  uint64_t v110 = *(void (**)(uint64_t, uint64_t))(v105 + 8);
  *(void *)(v2 + 248) = v110;
  *(void *)(v2 + 256) = (v105 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v110(v108, v106);
  swift_endAccess();
  swift_task_dealloc();
  *(void *)(v2 + 264) = sub_251F35C80();
  *(void *)(v2 + 272) = sub_251F35C70();
  uint64_t v111 = sub_251F35C00();
  uint64_t v113 = v112;
  uint64_t v114 = sub_251C0EF58;
LABEL_76:
  return MEMORY[0x270FA2498](v114, v111, v113);
}

uint64_t sub_251C0EF58()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 152);
  return MEMORY[0x270FA2498](sub_251C0EFF0, v1, 0);
}

uint64_t sub_251C0EFF0()
{
  *(void *)(v0 + 280) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C0F07C, v2, v1);
}

uint64_t sub_251C0F07C()
{
  uint64_t v1 = *(void *)(v0 + 152);
  swift_release();
  *(void *)(v0 + 288) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251C0F0F4, v1, 0);
}

uint64_t sub_251C0F0F4()
{
  *(void *)(v0 + 296) = sub_251F34D50();
  *(void *)(v0 + 304) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C0F18C, v2, v1);
}

uint64_t sub_251C0F18C()
{
  uint64_t v1 = (void *)v0[37];
  uint64_t v2 = (void *)v0[36];
  uint64_t v3 = v0[19];
  swift_release();
  v0[39] = objc_msgSend(v2, sel_homeFor_, v1);

  return MEMORY[0x270FA2498](sub_251C0F228, v3, 0);
}

uint64_t sub_251C0F228()
{
  uint64_t v137 = v0;
  uint64_t v1 = v0;
  id v123 = (uint64_t *)(v0 + 136);
  uint64_t v2 = *(void **)(v0 + 312);
  uint64_t v126 = v1;
  if (v2)
  {
    if (qword_26B21ED80 != -1)
    {
LABEL_62:
      swift_once();
      uint64_t v2 = *(void **)(v1 + 312);
    }
    uint64_t v3 = sub_251F350A0();
    __swift_project_value_buffer(v3, (uint64_t)qword_26B21ED68);
    id v4 = v2;
    uint64_t v5 = sub_251F35080();
    os_log_type_t v6 = sub_251F35FD0();
    BOOL v7 = os_log_type_enabled(v5, v6);
    uint64_t v8 = *(void **)(v1 + 312);
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v1 + 248);
    uint64_t v10 = *(void *)(v1 + 232);
    uint64_t v11 = *(void *)(v1 + 208);
    if (v7)
    {
      uint64_t v127 = (uint64_t *)(v1 + 128);
      Swift::Int_optional v131 = *(void **)(v1 + 240);
      uint64_t v132 = *(void (**)(uint64_t, uint64_t))(v1 + 248);
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v136 = v13;
      *(_DWORD *)uint64_t v12 = 136315138;
      uint64_t v129 = v11;
      id v14 = objc_msgSend(v8, sel_name);
      uint64_t v15 = v10;
      uint64_t v16 = sub_251F356F0();
      unint64_t v18 = v17;

      *uint64_t v127 = sub_251A00E84(v16, v18, &v136);
      sub_251F361D0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_2519F3000, v5, v6, "updateUserActionPredictionControllers(...) removing %s, unsubscribing from recommendations and clearing delegate.", v12, 0xCu);
      swift_arrayDestroy();
      uint64_t v19 = v13;
      uint64_t v1 = v126;
      MEMORY[0x2533AC760](v19, -1, -1);
      MEMORY[0x2533AC760](v12, -1, -1);

      v132(v15, v129);
    }
    else
    {

      v9(v10, v11);
    }
  }
  else
  {
    id v20 = *(void **)(v1 + 240);
    (*(void (**)(void, void))(v1 + 248))(*(void *)(v1 + 232), *(void *)(v1 + 208));
  }
  uint64_t v21 = *(void *)(v1 + 200);
  uint64_t v22 = *(void *)(v1 + 224) + 1;
  swift_task_dealloc();
  if (v22 != v21)
  {
    uint64_t v122 = v1 + 88;
    do
    {
      unint64_t v27 = *(void *)(v1 + 224) + 1;
      *(void *)(v1 + 224) = v27;
      uint64_t v28 = *(void *)(v1 + 160);
      if (v27 >= *(void *)(v28 + 16))
      {
        __break(1u);
        goto LABEL_62;
      }
      uint64_t v29 = *(void *)(v1 + 208);
      id v30 = *(void **)(v1 + 216);
      uint64_t v31 = *(void *)(v1 + 192);
      uint64_t v124 = v30[9];
      char v130 = (void (*)(uint64_t, unint64_t, uint64_t))v30[2];
      v130(v31, v28 + ((*(unsigned __int8 *)(v1 + 512) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 512)) + v124 * v27, v29);
      char v133 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v30[7];
      v133(v31, 0, 1, v29);
      unint64_t v128 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v30[6];
      if (v128(v31, 1, v29) == 1) {
        goto LABEL_25;
      }
      uint64_t v32 = *(void *)(v1 + 216);
      uint64_t v33 = *(void *)(v1 + 168);
      uint64_t v34 = swift_task_alloc();
      uint64_t v35 = *(void (**)(void))(v32 + 32);
      *(void *)(v1 + 232) = v34;
      uint64_t v134 = v34;
      uint64_t v125 = v35;
      v35();
      uint64_t v36 = swift_task_alloc();
      uint64_t v37 = *(void *)(v33 + 16);
      swift_bridgeObjectRetain();
      if (v37)
      {
        uint64_t v38 = 0;
        while (1)
        {
          uint64_t v1 = v126;
          uint64_t v39 = *(void *)(v126 + 208);
          v130(v36, *(void *)(v126 + 168)+ v38+ ((*(unsigned __int8 *)(v126 + 512) + 32) & ~(unint64_t)*(unsigned __int8 *)(v126 + 512)), v39);
          v133(v36, 0, 1, v39);
          if (v128(v36, 1, v39) == 1) {
            break;
          }
          uint64_t v40 = *(void *)(v126 + 208);
          uint64_t v41 = *(void *)(v126 + 216);
          uint64_t v42 = swift_task_alloc();
          ((void (*)(uint64_t, uint64_t, uint64_t))v125)(v42, v36, v40);
          sub_251A9FE88();
          char v43 = sub_251F35650();
          os_log_type_t v44 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
          v44(v42, v40);
          if (v43)
          {
            uint64_t v1 = v126;
            uint64_t v49 = *(void *)(v126 + 208);
            swift_bridgeObjectRelease();
            swift_task_dealloc();
            swift_task_dealloc();
            v44(v134, v49);
            goto LABEL_12;
          }
          swift_task_dealloc();
          v38 += v124;
          if (!--v37) {
            goto LABEL_20;
          }
        }
      }
      else
      {
LABEL_20:
        uint64_t v1 = v126;
        v133(v36, 1, 1, *(void *)(v126 + 208));
      }
      uint64_t v45 = *(void *)(v1 + 152);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      uint64_t v46 = *(void *)(v45 + 112);
      if (*(void *)(v46 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v47 = sub_2519FE584(v134);
        if (v48)
        {
          int v76 = *(void **)(*(void *)(v46 + 56) + 8 * v47);
          *(void *)(v1 + 240) = v76;
          id v77 = v76;
          swift_bridgeObjectRelease();
          objc_msgSend(v77, sel_setDelegate_, 0);
          swift_beginAccess();
          swift_bridgeObjectRetain();
          unint64_t v78 = sub_2519FE584(v134);
          char v80 = v79;
          swift_bridgeObjectRelease();
          uint64_t v81 = 0;
          if (v80)
          {
            uint64_t v82 = *(void *)(v1 + 152);
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v84 = *(void *)(v82 + 112);
            *(void *)(v1 + 136) = v84;
            *(void *)(v82 + 112) = 0x8000000000000000;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_251A1655C();
              uint64_t v84 = *v123;
            }
            uint64_t v85 = *(void *)(v1 + 152);
            (*(void (**)(unint64_t, void))(*(void *)(v1 + 216) + 8))(*(void *)(v84 + 48) + v78 * v124, *(void *)(v1 + 208));
            uint64_t v86 = *(void *)(v1 + 136);
            uint64_t v81 = *(void **)(*(void *)(v86 + 56) + 8 * v78);
            sub_251E39FD0(v78, v86);
            *(void *)(v85 + 112) = v86;
            swift_bridgeObjectRelease();
          }
          uint64_t v88 = *(void *)(v1 + 208);
          uint64_t v87 = *(void *)(v1 + 216);
          uint64_t v89 = *(void *)(v1 + 152);
          swift_endAccess();

          uint64_t v90 = swift_task_alloc();
          v130(v90, v134, v88);
          swift_beginAccess();
          char v91 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v136 = *(void *)(v89 + 120);
          *(void *)(v89 + 120) = 0x8000000000000000;
          sub_251A0FC04(MEMORY[0x263F8EE78], v90, v91);
          *(void *)(v89 + 120) = v136;
          swift_bridgeObjectRelease();
          uint64_t v92 = *(void (**)(uint64_t, uint64_t))(v87 + 8);
          *(void *)(v1 + 248) = v92;
          *(void *)(v1 + 256) = (v87 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
          v92(v90, v88);
          swift_endAccess();
          swift_task_dealloc();
          *(void *)(v1 + 264) = sub_251F35C80();
          *(void *)(v1 + 272) = sub_251F35C70();
          uint64_t v93 = sub_251F35C00();
          uint64_t v95 = v94;
          double v96 = sub_251C0EF58;
LABEL_50:
          return MEMORY[0x270FA2498](v96, v93, v95);
        }
        swift_bridgeObjectRelease();
      }
      (*(void (**)(uint64_t, void))(*(void *)(v1 + 216) + 8))(v134, *(void *)(v1 + 208));
LABEL_12:
      uint64_t v25 = *(void *)(v1 + 200);
      uint64_t v26 = *(void *)(v1 + 224) + 1;
      swift_task_dealloc();
    }
    while (v26 != v25);
  }
  uint64_t v23 = *(void *)(v1 + 192);
  uint64_t v24 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
LABEL_25:
  swift_bridgeObjectRelease();
  uint64_t v50 = *(void *)(v1 + 168);
  swift_task_dealloc();
  uint64_t v51 = swift_task_alloc();
  *(void *)(v1 + 320) = v51;
  uint64_t v52 = *(void *)(v50 + 16);
  *(void *)(v1 + 328) = v52;
  if (v52)
  {
    uint64_t v53 = sub_251F34DA0();
    uint64_t v54 = 0;
    *(void *)(v1 + 336) = v53;
    uint64_t v55 = *(void *)(v53 - 8);
    uint64_t v56 = v55;
    *(void *)(v1 + 344) = v55;
    int v57 = *(_DWORD *)(v55 + 80);
    *(_DWORD *)(v1 + 516) = v57;
    uint64_t v58 = *(void *)(v55 + 72);
    *(void *)(v1 + 352) = v58;
    uint64_t v59 = *(void (**)(uint64_t, unint64_t, uint64_t))(v55 + 16);
    *(void *)(v1 + 360) = v59;
    while (1)
    {
      *(void *)(v1 + 368) = v54;
      v59(v51, *(void *)(v1 + 168) + ((v57 + 32) & ~(unint64_t)v57) + v58 * v54, v53);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56))(v51, 0, 1, v53);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v51, 1, v53) == 1) {
        goto LABEL_38;
      }
      uint64_t v60 = *(void *)(v1 + 344);
      uint64_t v61 = *(void *)(v1 + 176);
      uint64_t v62 = swift_task_alloc();
      *(void *)(v1 + 376) = v62;
      (*(void (**)(void))(v60 + 32))();
      if (*(void *)(v61 + 16) && (unint64_t v63 = sub_2519FE584(v62), (v64 & 1) != 0))
      {
        uint64_t v65 = *(void *)(v1 + 152);
        uint64_t v66 = *(void **)(*(void *)(*(void *)(v1 + 176) + 56) + 8 * v63);
        *(void *)(v1 + 384) = v66;
        uint64_t v67 = *(void *)(*(void *)(v65 + 112) + 16);
        id v68 = v66;
        if (!v67)
        {
          uint64_t v135 = (uint64_t *)(v1 + 112);
LABEL_48:
          id v97 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 360);
          uint64_t v98 = *(void *)(v1 + 336);
          id v99 = objc_msgSend(v68, sel_userActionPredictionController, v122);
          *(void *)(v1 + 392) = v99;
          uint64_t v100 = swift_task_alloc();
          v97(v100, v62, v98);
          swift_beginAccess();
          if (v99)
          {
            uint64_t v101 = *(void *)(v1 + 336);
            uint64_t v102 = *(void *)(v1 + 344);
            uint64_t v103 = *(void *)(v1 + 152);
            id v104 = v99;
            char v105 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v136 = *(void *)(v103 + 112);
            *(void *)(v103 + 112) = 0x8000000000000000;
            sub_251A0FC10((uint64_t)v104, v100, v105);
            *(void *)(v103 + 112) = v136;
            swift_bridgeObjectRelease();
            uint64_t v106 = *(void (**)(uint64_t, uint64_t))(v102 + 8);
            *(void *)(v1 + 400) = v106;
            v106(v100, v101);
            swift_endAccess();
            swift_task_dealloc();
            *(void *)(v1 + 408) = sub_251F35C80();
            id v107 = v104;
            *(void *)(v1 + 416) = sub_251F35C70();
            uint64_t v93 = sub_251F35C00();
            uint64_t v95 = v108;
            double v96 = sub_251C0FF9C;
            goto LABEL_50;
          }
          swift_bridgeObjectRetain();
          unint64_t v109 = sub_2519FE584(v100);
          char v111 = v110;
          swift_bridgeObjectRelease();
          if (v111)
          {
            uint64_t v112 = *(void *)(v1 + 152);
            char v113 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v114 = *(void *)(v112 + 112);
            *(void *)(v1 + 112) = v114;
            *(void *)(v112 + 112) = 0x8000000000000000;
            if ((v113 & 1) == 0)
            {
              sub_251A1655C();
              uint64_t v114 = *v135;
            }
            uint64_t v115 = *(void *)(v1 + 152);
            uint64_t v116 = *(void (**)(unint64_t, void))(*(void *)(v1 + 344) + 8);
            v116(*(void *)(v114 + 48) + *(void *)(v1 + 352) * v109, *(void *)(v1 + 336));
            uint64_t v117 = *(void *)(v1 + 112);
            id v118 = *(void **)(*(void *)(v117 + 56) + 8 * v109);
            sub_251E39FD0(v109, v117);
            *(void *)(v115 + 112) = v117;
            swift_bridgeObjectRelease();
          }
          else
          {
            id v118 = 0;
            uint64_t v116 = *(void (**)(unint64_t, void))(*(void *)(v1 + 344) + 8);
          }
          v116(v100, *(void *)(v1 + 336));
          swift_endAccess();

          swift_task_dealloc();
          *(void *)(v1 + 440) = v116;
          uint64_t v119 = (void *)swift_task_alloc();
          *(void *)(v1 + 448) = v119;
          void *v119 = v1;
          v119[1] = sub_251C101F4;
          uint64_t v120 = *(void *)(v1 + 376);
          uint64_t v121 = *(void *)(v1 + 144);
          return RecommendationsModerator.currentUserActionPredictions(manager:for:)(v121, v120);
        }
        swift_bridgeObjectRetain();
        sub_2519FE584(v62);
        char v70 = v69;
        swift_bridgeObjectRelease();
        if ((v70 & 1) == 0)
        {
          uint64_t v135 = (uint64_t *)(v1 + 112);
          goto LABEL_48;
        }
        (*(void (**)(uint64_t, void))(*(void *)(v1 + 344) + 8))(v62, *(void *)(v1 + 336));
      }
      else
      {
        (*(void (**)(uint64_t, void))(*(void *)(v1 + 344) + 8))(v62, *(void *)(v1 + 336));
      }
      uint64_t v71 = *(void *)(v1 + 328);
      uint64_t v72 = *(void *)(v1 + 368) + 1;
      swift_task_dealloc();
      if (v72 == v71)
      {
        uint64_t v51 = *(void *)(v1 + 320);
        break;
      }
      uint64_t v54 = *(void *)(v1 + 368) + 1;
      uint64_t v58 = *(void *)(v1 + 352);
      uint64_t v59 = *(void (**)(uint64_t, unint64_t, uint64_t))(v1 + 360);
      LOBYTE(v57) = *(unsigned char *)(v1 + 516);
      uint64_t v53 = *(void *)(v1 + 336);
      uint64_t v56 = *(void *)(v1 + 344);
      uint64_t v51 = *(void *)(v1 + 320);
    }
  }
  uint64_t v73 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v51, 1, 1, v73);
LABEL_38:
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  uint64_t v74 = *(uint64_t (**)(void))(v1 + 8);
  return v74();
}

uint64_t sub_251C0FF9C()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 152);
  return MEMORY[0x270FA2498](sub_251C10034, v1, 0);
}

uint64_t sub_251C10034()
{
  *(void *)(v0 + 424) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C100C0, v2, v1);
}

uint64_t sub_251C100C0()
{
  uint64_t v1 = *(void *)(v0 + 152);
  swift_release();
  *(void *)(v0 + 432) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251C10138, v1, 0);
}

uint64_t sub_251C10138()
{
  uint64_t v1 = (void *)v0[49];
  objc_msgSend(v1, sel_setDelegate_, v0[54]);

  v0[55] = v0[50];
  uint64_t v2 = (void *)swift_task_alloc();
  v0[56] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_251C101F4;
  uint64_t v3 = v0[47];
  uint64_t v4 = v0[18];
  return RecommendationsModerator.currentUserActionPredictions(manager:for:)(v4, v3);
}

uint64_t sub_251C101F4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 152);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_251C10310, v1, 0);
}

uint64_t sub_251C10310()
{
  *(void *)(v0 + 456) = sub_251F35C80();
  *(void *)(v0 + 464) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C103A8, v2, v1);
}

uint64_t sub_251C103A8()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 152);
  return MEMORY[0x270FA2498](sub_251C10440, v1, 0);
}

uint64_t sub_251C10440()
{
  *(void *)(v0 + 472) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C104CC, v2, v1);
}

uint64_t sub_251C104CC()
{
  uint64_t v1 = *(void *)(v0 + 152);
  swift_release();
  *(void *)(v0 + 480) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251C10544, v1, 0);
}

uint64_t sub_251C10544()
{
  *(void *)(v0 + 488) = sub_251F34D50();
  *(void *)(v0 + 496) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C105DC, v2, v1);
}

uint64_t sub_251C105DC()
{
  uint64_t v1 = (void *)v0[61];
  uint64_t v2 = (void *)v0[60];
  uint64_t v3 = v0[19];
  swift_release();
  v0[63] = objc_msgSend(v2, sel_homeFor_, v1);

  return MEMORY[0x270FA2498](sub_251C10678, v3, 0);
}

uint64_t sub_251C10678()
{
  uint64_t v76 = v0;
  uint64_t v1 = *(void **)(v0 + 504);
  if (v1)
  {
    if (qword_26B21ED80 != -1)
    {
      swift_once();
      uint64_t v1 = *(void **)(v0 + 504);
    }
    uint64_t v2 = sub_251F350A0();
    __swift_project_value_buffer(v2, (uint64_t)qword_26B21ED68);
    id v3 = v1;
    uint64_t v4 = sub_251F35080();
    os_log_type_t v5 = sub_251F35FD0();
    BOOL v6 = os_log_type_enabled(v4, v5);
    BOOL v7 = *(void **)(v0 + 504);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 440);
    uint64_t v9 = *(void **)(v0 + 384);
    uint64_t v10 = *(void **)(v0 + 392);
    uint64_t v11 = *(void *)(v0 + 376);
    uint64_t v12 = *(void *)(v0 + 336);
    if (v6)
    {
      uint64_t v74 = *(void (**)(uint64_t, uint64_t))(v0 + 440);
      uint64_t v13 = swift_slowAlloc();
      uint64_t v73 = v11;
      uint64_t v14 = swift_slowAlloc();
      uint64_t v75 = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      uint64_t v72 = v12;
      id v15 = objc_msgSend(v7, sel_name);
      uint64_t v71 = v10;
      uint64_t v16 = sub_251F356F0();
      unint64_t v18 = v17;

      *(void *)(v13 + 4) = sub_251A00E84(v16, v18, &v75);
      swift_bridgeObjectRelease();

      swift_arrayDestroy();
      MEMORY[0x2533AC760](v14, -1, -1);
      MEMORY[0x2533AC760](v13, -1, -1);

      v74(v73, v72);
    }
    else
    {

      v8(v11, v12);
    }
  }
  else
  {
    uint64_t v19 = *(void **)(v0 + 384);
    id v20 = *(void **)(v0 + 392);
    (*(void (**)(void, void))(v0 + 440))(*(void *)(v0 + 376), *(void *)(v0 + 336));
  }
  uint64_t v21 = *(void *)(v0 + 328);
  uint64_t v22 = *(void *)(v0 + 368) + 1;
  swift_task_dealloc();
  if (v22 == v21)
  {
LABEL_9:
    uint64_t v23 = *(void *)(v0 + 320);
    uint64_t v24 = sub_251F34DA0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  }
  else
  {
    while (1)
    {
      uint64_t v29 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 360);
      uint64_t v30 = *(void *)(v0 + 368) + 1;
      *(void *)(v0 + 368) = v30;
      uint64_t v31 = *(void *)(v0 + 344);
      uint64_t v32 = *(void *)(v0 + 336);
      uint64_t v33 = *(void *)(v0 + 320);
      v29(v33, *(void *)(v0 + 168)+ ((*(unsigned __int8 *)(v0 + 516) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 516))+ *(void *)(v0 + 352) * v30, v32);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56))(v33, 0, 1, v32);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v33, 1, v32) == 1) {
        break;
      }
      uint64_t v34 = *(void *)(v0 + 344);
      uint64_t v35 = *(void *)(v0 + 176);
      uint64_t v36 = swift_task_alloc();
      *(void *)(v0 + 376) = v36;
      (*(void (**)(void))(v34 + 32))();
      if (*(void *)(v35 + 16) && (unint64_t v37 = sub_2519FE584(v36), (v38 & 1) != 0))
      {
        uint64_t v39 = *(void *)(v0 + 152);
        uint64_t v40 = *(void **)(*(void *)(*(void *)(v0 + 176) + 56) + 8 * v37);
        *(void *)(v0 + 384) = v40;
        uint64_t v41 = *(void *)(*(void *)(v39 + 112) + 16);
        id v42 = v40;
        if (!v41
          || (swift_bridgeObjectRetain(), sub_2519FE584(v36), char v44 = v43, swift_bridgeObjectRelease(), (v44 & 1) == 0))
        {
          uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 360);
          uint64_t v46 = *(void *)(v0 + 336);
          id v47 = objc_msgSend(v42, sel_userActionPredictionController);
          *(void *)(v0 + 392) = v47;
          uint64_t v48 = swift_task_alloc();
          v45(v48, v36, v46);
          swift_beginAccess();
          if (v47)
          {
            uint64_t v49 = *(void *)(v0 + 336);
            uint64_t v50 = *(void *)(v0 + 344);
            uint64_t v51 = *(void *)(v0 + 152);
            id v52 = v47;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v75 = *(void *)(v51 + 112);
            *(void *)(v51 + 112) = 0x8000000000000000;
            sub_251A0FC10((uint64_t)v52, v48, isUniquelyReferenced_nonNull_native);
            *(void *)(v51 + 112) = v75;
            swift_bridgeObjectRelease();
            uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
            *(void *)(v0 + 400) = v54;
            v54(v48, v49);
            swift_endAccess();
            swift_task_dealloc();
            *(void *)(v0 + 408) = sub_251F35C80();
            id v55 = v52;
            *(void *)(v0 + 416) = sub_251F35C70();
            uint64_t v57 = sub_251F35C00();
            return MEMORY[0x270FA2498](sub_251C0FF9C, v57, v56);
          }
          else
          {
            swift_bridgeObjectRetain();
            unint64_t v58 = sub_2519FE584(v48);
            char v60 = v59;
            swift_bridgeObjectRelease();
            if (v60)
            {
              uint64_t v61 = *(void *)(v0 + 152);
              char v62 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v63 = *(void *)(v61 + 112);
              *(void *)(v0 + 112) = v63;
              *(void *)(v61 + 112) = 0x8000000000000000;
              if ((v62 & 1) == 0)
              {
                sub_251A1655C();
                uint64_t v63 = *(void *)(v0 + 112);
              }
              uint64_t v64 = *(void *)(v0 + 152);
              uint64_t v65 = *(void (**)(unint64_t, void))(*(void *)(v0 + 344) + 8);
              v65(*(void *)(v63 + 48) + *(void *)(v0 + 352) * v58, *(void *)(v0 + 336));
              uint64_t v66 = *(void *)(v0 + 112);
              uint64_t v67 = *(void **)(*(void *)(v66 + 56) + 8 * v58);
              sub_251E39FD0(v58, v66);
              *(void *)(v64 + 112) = v66;
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v67 = 0;
              uint64_t v65 = *(void (**)(unint64_t, void))(*(void *)(v0 + 344) + 8);
            }
            v65(v48, *(void *)(v0 + 336));
            swift_endAccess();

            swift_task_dealloc();
            *(void *)(v0 + 440) = v65;
            id v68 = (void *)swift_task_alloc();
            *(void *)(v0 + 448) = v68;
            void *v68 = v0;
            v68[1] = sub_251C101F4;
            uint64_t v69 = *(void *)(v0 + 376);
            uint64_t v70 = *(void *)(v0 + 144);
            return RecommendationsModerator.currentUserActionPredictions(manager:for:)(v70, v69);
          }
        }
        (*(void (**)(uint64_t, void))(*(void *)(v0 + 344) + 8))(v36, *(void *)(v0 + 336));
      }
      else
      {
        (*(void (**)(uint64_t, void))(*(void *)(v0 + 344) + 8))(v36, *(void *)(v0 + 336));
      }
      uint64_t v27 = *(void *)(v0 + 328);
      uint64_t v28 = *(void *)(v0 + 368) + 1;
      swift_task_dealloc();
      if (v28 == v27) {
        goto LABEL_9;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_251C10DD0(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_uniqueIdentifier);
  uint64_t v2 = sub_251F34DA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  os_log_type_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  char v6 = sub_251F34D70();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6 & 1;
}

uint64_t sub_251C10EDC(id *a1)
{
  return sub_251C10DD0(a1) & 1;
}

uint64_t sub_251C10EFC()
{
  return sub_251F36120() & 1;
}

uint64_t sub_251C10F58(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StateSnapshot(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for RecommendationsModerator()
{
  return self;
}

uint64_t method lookup function for RecommendationsModerator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for RecommendationsModerator);
}

void sub_251C10FF0(uint64_t a1, int a2, uint64_t *a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F5C0);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12)
  {
    swift_bridgeObjectRelease();
    return;
  }
  int v59 = a2;
  uint64_t v58 = v3;
  uint64_t v13 = *(int *)(v8 + 48);
  unint64_t v57 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = a1 + v57;
  uint64_t v63 = *(void *)(v9 + 72);
  uint64_t v60 = a1;
  swift_bridgeObjectRetain();
  sub_251C115D0(v14, (uint64_t)v11);
  uint64_t v15 = sub_251F34DA0();
  uint64_t v65 = &v56;
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  unint64_t v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void (**)(char *, char *))(v16 + 32);
  uint64_t v67 = v20;
  v19(v18, v11);
  uint64_t v61 = v13;
  char v62 = v11;
  id v66 = *(id *)&v11[v13];
  uint64_t v64 = a3;
  uint64_t v21 = *a3;
  unint64_t v23 = sub_2519FE584((uint64_t)v18);
  uint64_t v24 = *(void *)(v21 + 16);
  BOOL v25 = (v22 & 1) == 0;
  uint64_t v26 = v24 + v25;
  if (__OFADD__(v24, v25)) {
    goto LABEL_24;
  }
  char v27 = v22;
  if (*(void *)(v21 + 24) >= v26)
  {
    if (v59)
    {
      if (v22) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_251A16568();
      if (v27) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v32 = v64;
    uint64_t v33 = (void *)*v64;
    *(void *)(*v64 + 8 * (v23 >> 6) + 64) |= 1 << v23;
    ((void (*)(unint64_t, char *, uint64_t))v19)(v33[6] + *(void *)(v16 + 72) * v23, v18, v67);
    *(void *)(v33[7] + 8 * v23) = v66;
    uint64_t v34 = v33[2];
    BOOL v35 = __OFADD__(v34, 1);
    uint64_t v36 = v34 + 1;
    if (v35)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    uint64_t v33[2] = v36;
    uint64_t v37 = v12 - 1;
    if (v12 == 1)
    {
LABEL_23:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v38 = v60 + v63 + v57;
    while (1)
    {
      uint64_t v39 = (uint64_t)v62;
      sub_251C115D0(v38, (uint64_t)v62);
      uint64_t v40 = sub_251F34DA0();
      uint64_t v65 = &v56;
      uint64_t v16 = *(void *)(v40 - 8);
      MEMORY[0x270FA5388](v40);
      unint64_t v18 = (char *)&v56 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
      id v42 = *(void (**)(char *, uint64_t))(v16 + 32);
      uint64_t v67 = v43;
      v42(v18, v39);
      id v66 = *(id *)(v39 + v61);
      uint64_t v44 = *v32;
      unint64_t v46 = sub_2519FE584((uint64_t)v18);
      uint64_t v47 = *(void *)(v44 + 16);
      BOOL v48 = (v45 & 1) == 0;
      uint64_t v49 = v47 + v48;
      if (__OFADD__(v47, v48)) {
        break;
      }
      char v50 = v45;
      if (*(void *)(v44 + 24) < v49)
      {
        sub_251A0973C(v49, 1);
        unint64_t v51 = sub_2519FE584((uint64_t)v18);
        if ((v50 & 1) != (v52 & 1)) {
          goto LABEL_26;
        }
        unint64_t v46 = v51;
      }
      if (v50) {
        goto LABEL_10;
      }
      uint64_t v32 = v64;
      uint64_t v53 = (void *)*v64;
      *(void *)(*v64 + 8 * (v46 >> 6) + 64) |= 1 << v46;
      ((void (*)(unint64_t, char *, uint64_t))v42)(v53[6] + *(void *)(v16 + 72) * v46, v18, v67);
      *(void *)(v53[7] + 8 * v46) = v66;
      uint64_t v54 = v53[2];
      BOOL v35 = __OFADD__(v54, 1);
      uint64_t v55 = v54 + 1;
      if (v35) {
        goto LABEL_25;
      }
      v53[2] = v55;
      v38 += v63;
      if (!--v37) {
        goto LABEL_23;
      }
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_251A0973C(v26, v59 & 1);
  unint64_t v28 = sub_2519FE584((uint64_t)v18);
  if ((v27 & 1) == (v29 & 1))
  {
    unint64_t v23 = v28;
    if ((v27 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v30 = (void *)swift_allocError();
    swift_willThrow();
    id v70 = v30;
    id v31 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1B0);
    if ((swift_dynamicCast() & 1) == 0)
    {

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v67);
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_27;
  }
LABEL_26:
  sub_251F36BA0();
  __break(1u);
LABEL_27:
  uint64_t v68 = 0;
  unint64_t v69 = 0xE000000000000000;
  sub_251F36400();
  sub_251F35800();
  sub_251F36640();
  sub_251F35800();
  sub_251F36680();
  __break(1u);
}

uint64_t sub_251C115D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F5C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_251C11638(id *a1)
{
  return sub_251C10EDC(a1) & 1;
}

BOOL static StaticRenderingMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t StaticRenderingMode.symbolRenderingMode.getter()
{
  switch(*v0)
  {
    case 1:
      uint64_t result = sub_251F35230();
      break;
    case 2:
      uint64_t result = sub_251F35220();
      break;
    case 3:
      uint64_t result = sub_251F35250();
      break;
    default:
      uint64_t result = sub_251F35240();
      break;
  }
  return result;
}

uint64_t StaticRenderingMode.hash(into:)()
{
  return sub_251F36CB0();
}

uint64_t sub_251C11704()
{
  uint64_t result = 0x6863726172656968;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C6F6369746C756DLL;
      break;
    case 2:
      uint64_t result = 0x6F7268636F6E6F6DLL;
      break;
    case 3:
      uint64_t result = 0x657474656C6170;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251C117A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251C12C34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251C117D0(uint64_t a1)
{
  unint64_t v2 = sub_251C11E68();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C1180C(uint64_t a1)
{
  unint64_t v2 = sub_251C11E68();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251C11848(uint64_t a1)
{
  unint64_t v2 = sub_251C11FB8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C11884(uint64_t a1)
{
  unint64_t v2 = sub_251C11FB8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251C118C0(uint64_t a1)
{
  unint64_t v2 = sub_251C11F10();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C118FC(uint64_t a1)
{
  unint64_t v2 = sub_251C11F10();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251C11938(uint64_t a1)
{
  unint64_t v2 = sub_251C11F64();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C11974(uint64_t a1)
{
  unint64_t v2 = sub_251C11F64();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251C119B0(uint64_t a1)
{
  unint64_t v2 = sub_251C11EBC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C119EC(uint64_t a1)
{
  unint64_t v2 = sub_251C11EBC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticRenderingMode.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0528);
  uint64_t v30 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  MEMORY[0x270FA5388](v3);
  char v29 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0530);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v26 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0538);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  MEMORY[0x270FA5388](v7);
  unint64_t v23 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0540);
  uint64_t v21 = *(void *)(v9 - 8);
  uint64_t v22 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0548);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251C11E68();
  sub_251F36DA0();
  switch(v16)
  {
    case 1:
      char v33 = 1;
      sub_251C11F64();
      uint64_t v17 = v23;
      sub_251F36900();
      uint64_t v19 = v24;
      uint64_t v18 = v25;
      goto LABEL_6;
    case 2:
      char v34 = 2;
      sub_251C11F10();
      uint64_t v17 = v26;
      sub_251F36900();
      uint64_t v19 = v27;
      uint64_t v18 = v28;
      goto LABEL_6;
    case 3:
      char v35 = 3;
      sub_251C11EBC();
      uint64_t v17 = v29;
      sub_251F36900();
      uint64_t v19 = v30;
      uint64_t v18 = v31;
LABEL_6:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      break;
    default:
      char v32 = 0;
      sub_251C11FB8();
      sub_251F36900();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v22);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

unint64_t sub_251C11E68()
{
  unint64_t result = qword_269BA0550;
  if (!qword_269BA0550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0550);
  }
  return result;
}

unint64_t sub_251C11EBC()
{
  unint64_t result = qword_269BA0558;
  if (!qword_269BA0558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0558);
  }
  return result;
}

unint64_t sub_251C11F10()
{
  unint64_t result = qword_269BA0560;
  if (!qword_269BA0560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0560);
  }
  return result;
}

unint64_t sub_251C11F64()
{
  unint64_t result = qword_269BA0568;
  if (!qword_269BA0568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0568);
  }
  return result;
}

unint64_t sub_251C11FB8()
{
  unint64_t result = qword_269BA0570;
  if (!qword_269BA0570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0570);
  }
  return result;
}

uint64_t StaticRenderingMode.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StaticRenderingMode.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0578);
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  MEMORY[0x270FA5388](v3);
  BOOL v48 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0580);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  uint64_t v45 = v6;
  MEMORY[0x270FA5388](v5);
  unint64_t v46 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0588);
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0590);
  uint64_t v41 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0598);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  unint64_t v51 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_251C11E68();
  uint64_t v19 = v52;
  sub_251F36D90();
  if (v19) {
    goto LABEL_7;
  }
  uint64_t v39 = v11;
  uint64_t v40 = v10;
  uint64_t v52 = 0;
  uint64_t v21 = v48;
  uint64_t v20 = v49;
  uint64_t v22 = v50;
  unint64_t v23 = v17;
  uint64_t v24 = sub_251F368E0();
  if (*(void *)(v24 + 16) != 1)
  {
    uint64_t v27 = sub_251F36490();
    swift_allocError();
    char v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
    *char v29 = &type metadata for StaticRenderingMode;
    sub_251F36780();
    sub_251F36480();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, *MEMORY[0x263F8DCB0], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
LABEL_7:
    uint64_t v30 = (uint64_t)v51;
    return __swift_destroy_boxed_opaque_existential_0(v30);
  }
  char v25 = *(unsigned char *)(v24 + 32);
  switch(v25)
  {
    case 1:
      char v54 = 1;
      sub_251C11F64();
      char v32 = v40;
      uint64_t v33 = v52;
      sub_251F36770();
      if (v33) {
        goto LABEL_12;
      }
      uint64_t v35 = v42;
      uint64_t v34 = v43;
      goto LABEL_16;
    case 2:
      char v55 = 2;
      sub_251C11F10();
      char v32 = v46;
      uint64_t v36 = v52;
      sub_251F36770();
      if (v36) {
        goto LABEL_12;
      }
      uint64_t v34 = v44;
      uint64_t v35 = v45;
LABEL_16:
      (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
      goto LABEL_17;
    case 3:
      char v56 = 3;
      sub_251C11EBC();
      uint64_t v37 = v52;
      sub_251F36770();
      if (v37)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        uint64_t v30 = (uint64_t)v51;
        return __swift_destroy_boxed_opaque_existential_0(v30);
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      uint64_t v38 = v47;
      goto LABEL_19;
    default:
      char v53 = 0;
      sub_251C11FB8();
      uint64_t v26 = v52;
      sub_251F36770();
      if (v26)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v39);
LABEL_17:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      uint64_t v38 = v47;
LABEL_19:
      *uint64_t v38 = v25;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_0(v30);
}

unint64_t sub_251C1268C()
{
  unint64_t result = qword_269BA05A0;
  if (!qword_269BA05A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA05A0);
  }
  return result;
}

uint64_t sub_251C126E0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return StaticRenderingMode.init(from:)(a1, a2);
}

uint64_t sub_251C126F8(void *a1)
{
  return StaticRenderingMode.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for StaticRenderingMode()
{
  return &type metadata for StaticRenderingMode;
}

unsigned char *_s13HomeDataModel19StaticRenderingModeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251C127F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticRenderingMode.CodingKeys()
{
  return &type metadata for StaticRenderingMode.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticRenderingMode.HierarchicalCodingKeys()
{
  return &type metadata for StaticRenderingMode.HierarchicalCodingKeys;
}

ValueMetadata *type metadata accessor for StaticRenderingMode.MulticolorCodingKeys()
{
  return &type metadata for StaticRenderingMode.MulticolorCodingKeys;
}

ValueMetadata *type metadata accessor for StaticRenderingMode.MonochromeCodingKeys()
{
  return &type metadata for StaticRenderingMode.MonochromeCodingKeys;
}

ValueMetadata *type metadata accessor for StaticRenderingMode.PaletteCodingKeys()
{
  return &type metadata for StaticRenderingMode.PaletteCodingKeys;
}

unint64_t sub_251C12870()
{
  unint64_t result = qword_269BA05A8;
  if (!qword_269BA05A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA05A8);
  }
  return result;
}

unint64_t sub_251C128C8()
{
  unint64_t result = qword_269BA05B0;
  if (!qword_269BA05B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA05B0);
  }
  return result;
}

unint64_t sub_251C12920()
{
  unint64_t result = qword_269BA05B8;
  if (!qword_269BA05B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA05B8);
  }
  return result;
}

unint64_t sub_251C12978()
{
  unint64_t result = qword_269BA05C0;
  if (!qword_269BA05C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA05C0);
  }
  return result;
}

unint64_t sub_251C129D0()
{
  unint64_t result = qword_269BA05C8;
  if (!qword_269BA05C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA05C8);
  }
  return result;
}

unint64_t sub_251C12A28()
{
  unint64_t result = qword_269BA05D0;
  if (!qword_269BA05D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA05D0);
  }
  return result;
}

unint64_t sub_251C12A80()
{
  unint64_t result = qword_269BA05D8;
  if (!qword_269BA05D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA05D8);
  }
  return result;
}

unint64_t sub_251C12AD8()
{
  unint64_t result = qword_269BA05E0;
  if (!qword_269BA05E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA05E0);
  }
  return result;
}

unint64_t sub_251C12B30()
{
  unint64_t result = qword_269BA05E8;
  if (!qword_269BA05E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA05E8);
  }
  return result;
}

unint64_t sub_251C12B88()
{
  unint64_t result = qword_269BA05F0;
  if (!qword_269BA05F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA05F0);
  }
  return result;
}

unint64_t sub_251C12BE0()
{
  unint64_t result = qword_269BA05F8;
  if (!qword_269BA05F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA05F8);
  }
  return result;
}

uint64_t sub_251C12C34(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6863726172656968 && a2 == 0xEC0000006C616369;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F6369746C756DLL && a2 == 0xEA0000000000726FLL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F7268636F6E6F6DLL && a2 == 0xEA0000000000656DLL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x657474656C6170 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t HMAccessory.staticMatterDevice.getter@<X0>(uint64_t a1@<X8>)
{
  BOOL v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC90);
  MEMORY[0x270FA5388](v4 - 8);
  char v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticMatterDevice();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(v1, sel_home);
  if (!v11) {
    goto LABEL_5;
  }
  uint64_t v12 = v11;
  id v13 = sub_251D90BA4(v1);
  unint64_t v15 = v14;

  if (!v13) {
    goto LABEL_5;
  }
  swift_unknownObjectRetain();
  StaticMatterDevice.init(device:accessory:)((uint64_t)v13, v15, v2, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    swift_unknownObjectRelease();
    sub_251C13198((uint64_t)v6);
LABEL_5:
    uint64_t v16 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, v16, 1, v7);
  }
  sub_251C131F8((uint64_t)v6, (uint64_t)v10);
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_251F350A0();
  __swift_project_value_buffer(v18, (uint64_t)qword_26B21ECB8);
  uint64_t v19 = sub_251F35080();
  os_log_type_t v20 = sub_251F35FD0();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    uint64_t v27 = v25;
    *(_DWORD *)uint64_t v21 = 136315394;
    os_log_t v24 = (os_log_t)(v21 + 4);
    uint64_t v26 = sub_251A00E84(0xD000000000000012, 0x8000000251F68FA0, &v27);
    sub_251F361D0();
    *(_WORD *)(v21 + 12) = 2080;
    os_log_t v24 = v19;
    uint64_t v26 = sub_251A00E84(0xD000000000000012, 0x8000000251F68FA0, &v27);
    sub_251F361D0();
    os_log_t v22 = v24;
    _os_log_impl(&dword_2519F3000, v24, v20, "%s Found supported StaticMatterDevice: %s", (uint8_t *)v21, 0x16u);
    uint64_t v23 = v25;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v23, -1, -1);
    MEMORY[0x2533AC760](v21, -1, -1);
    swift_unknownObjectRelease();
  }
  else
  {

    swift_unknownObjectRelease();
  }
  sub_251C131F8((uint64_t)v10, a1);
  uint64_t v16 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, v16, 1, v7);
}

uint64_t sub_251C13198(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_251C131F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticMatterDevice();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL HMAccessory.hasVisibleService.getter()
{
  id v1 = objc_msgSend(v0, sel_services);
  sub_251B50D6C();
  unint64_t v2 = sub_251F35AC0();

  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v6 = 0;
    goto LABEL_7;
  }
LABEL_19:
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_251F366C0();
  swift_bridgeObjectRelease();
  if (!v3) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v4 = (id)MEMORY[0x2533AB3A0](0, v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v4 = *(id *)(v2 + 32);
  }
  char v5 = HMService.isVisibleService.getter();

  if (v5) {
    goto LABEL_6;
  }
  if (v3 == 1)
  {
    uint64_t v6 = 1;
  }
  else
  {
    uint64_t v8 = 5;
    while (1)
    {
      uint64_t v6 = v8 - 4;
      if ((v2 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        id v9 = (id)MEMORY[0x2533AB3A0](v8 - 4, v2);
        swift_bridgeObjectRelease();
      }
      else
      {
        id v9 = *(id *)(v2 + 8 * v8);
      }
      char v10 = HMService.isVisibleService.getter();

      if (v10) {
        break;
      }
      uint64_t v11 = v8 - 3;
      if (__OFADD__(v6, 1))
      {
        __break(1u);
        goto LABEL_19;
      }
      ++v8;
      if (v11 == v3)
      {
        uint64_t v6 = v3;
        break;
      }
    }
  }
LABEL_7:
  swift_bridgeObjectRelease();
  return v6 != v3;
}

uint64_t HMAccessory.isValidWidgetCategory.getter()
{
  HMAccessory.specialMediaCategory.getter(&v11);
  if ((~v11 & 0xFEFC) != 0)
  {
    if ((v11 & 0xC000) == 0x4000) {
      uint64_t v1 = v11 & 1;
    }
    else {
      uint64_t v1 = 0;
    }
  }
  else
  {
    uint64_t v1 = 0;
  }
  id v2 = objc_msgSend(v0, sel_category);
  id v3 = objc_msgSend(v2, sel_categoryType);

  uint64_t v4 = sub_251F356F0();
  uint64_t v6 = v5;

  if (sub_251F356F0() == v4 && v7 == v6)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v9 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0) {
      return 1;
    }
  }
  return v1;
}

uint64_t Collection<>.usableByWidgets.getter(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v1, a1);
  unint64_t v5 = sub_251F35940();
  uint64_t v6 = sub_251EE12C8(v5);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_251C135EC()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC90);
  MEMORY[0x270FA5388](v0 - 8);
  id v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (HMAccessory.hasVisibleService.getter() && (HMAccessory.isValidWidgetCategory.getter() & 1) != 0)
  {
    char v3 = 1;
  }
  else
  {
    HMAccessory.staticMatterDevice.getter((uint64_t)v2);
    uint64_t v4 = type metadata accessor for StaticMatterDevice();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v2, 1, v4) == 1)
    {
      sub_251C13198((uint64_t)v2);
      char v3 = 0;
    }
    else
    {
      uint64_t v5 = *(void *)&v2[*(int *)(v4 + 32)];
      if (qword_269B9C3B8 != -1) {
        swift_once();
      }
      char v3 = sub_251B84AB0(qword_269BA1848, v5) ^ 1;
      sub_251C1373C((uint64_t)v2);
    }
  }
  return v3 & 1;
}

uint64_t sub_251C1373C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticMatterDevice();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_251C13798(uint64_t a1)
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  uint64_t v3 = *(void *)(updated - 8);
  MEMORY[0x270FA5388](updated);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v23 = v1;
    uint64_t v25 = MEMORY[0x263F8EE78];
    sub_251A3E670(0, v6, 0);
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = *(void *)(v3 + 72);
    do
    {
      sub_251C1EE38(v8, (uint64_t)v5, type metadata accessor for StateSnapshot.UpdateType);
      char v10 = "StateSnapshot.unknownHome";
      uint64_t v11 = 25;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v12 = *(void *)v5;
          uint64_t v13 = *((void *)v5 + 1);
          switch(v5[16])
          {
            case 1:
              sub_251B286EC(v12, v13, 1u);
              uint64_t v11 = 43;
              char v10 = "StateSnapshot.characteristics.loadingStates";
              break;
            case 2:
              sub_251B286EC(v12, v13, 2u);
              uint64_t v11 = 44;
              char v10 = "StateSnapshot.characteristics.overrideValues";
              break;
            case 3:
              sub_251B286EC(v12, v13, 3u);
              uint64_t v11 = 49;
              char v10 = "StateSnapshot.characteristics.localOverrideValues";
              break;
            case 4:
              sub_251B286EC(v12, v13, 4u);
              uint64_t v11 = 45;
              char v10 = "StateSnapshot.characteristics.statelessValues";
              break;
            default:
              sub_251B286EC(v12, v13, 0);
              uint64_t v11 = 37;
              char v10 = "StateSnapshot.characteristics.refresh";
              break;
          }
          break;
        case 2u:
          sub_251C1EFBC((uint64_t)v5, type metadata accessor for StateSnapshot.UpdateType);
          uint64_t v11 = 33;
          char v10 = "StateSnapshot.statelessActionSets";
          break;
        case 3u:
          sub_251C1EFBC((uint64_t)v5, type metadata accessor for StateSnapshot.UpdateType);
          uint64_t v11 = 35;
          char v10 = "StateSnapshot.userActionPredictions";
          break;
        case 4u:
          unint64_t v14 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2A0);

          uint64_t v15 = sub_251F34DA0();
          (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v5, v15);
          uint64_t v11 = 28;
          char v10 = "StateSnapshot.softwareUpdate";
          break;
        case 5u:
          uint64_t v16 = sub_251F34DA0();
          (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v5, v16);
          uint64_t v11 = 36;
          char v10 = "StateSnapshot.softwareUpdateOverride";
          break;
        case 6u:
          __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E298);
          swift_bridgeObjectRelease();
          uint64_t v17 = sub_251F34DA0();
          (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v5, v17);
          uint64_t v11 = 22;
          char v10 = "StateSnapshot.profiles";
          break;
        case 7u:
          __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E290);
          swift_bridgeObjectRelease();
          uint64_t v18 = sub_251F34DA0();
          (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v5, v18);
          uint64_t v11 = 26;
          char v10 = "StateSnapshot.lightProfile";
          break;
        case 8u:
          uint64_t v11 = 28;
          char v10 = "StateSnapshot.snapshotStream";
          break;
        case 9u:
          break;
        default:
          sub_251C1EFBC((uint64_t)v5, type metadata accessor for StateSnapshot.UpdateType);
          uint64_t v11 = 17;
          char v10 = "StateSnapshot.all";
          break;
      }
      uint64_t v7 = v25;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3E670(0, *(void *)(v7 + 16) + 1, 1);
        uint64_t v7 = v25;
      }
      unint64_t v20 = *(void *)(v7 + 16);
      unint64_t v19 = *(void *)(v7 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_251A3E670(v19 > 1, v20 + 1, 1);
        uint64_t v7 = v25;
      }
      *(void *)(v7 + 16) = v20 + 1;
      uint64_t v21 = v7 + 24 * v20;
      *(void *)(v21 + 32) = v10;
      *(void *)(v21 + 40) = v11;
      *(unsigned char *)(v21 + 48) = 2;
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_251C13C78(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v19 = MEMORY[0x263F8EE78];
    sub_251A3E670(0, v2, 0);
    int64x2_t v4 = vdupq_n_s64(0x17uLL);
    v4.i64[0] = (uint64_t)"MatterStateSnapshot.all";
    uint64_t result = v19;
    int64x2_t v6 = vdupq_n_s64(0x18uLL);
    uint64_t v5 = (unsigned __int8 *)(a1 + 48);
    v6.i64[0] = (uint64_t)"MatterStateSnapshot.home";
    int64x2_t v7 = vdupq_n_s64(0x1AuLL);
    v7.i64[0] = (uint64_t)"MatterStateSnapshot.device";
    int64x2_t v8 = vdupq_n_s64(0x21uLL);
    v8.i64[0] = (uint64_t)"MatterStateSnapshot.limitedDevice";
    do
    {
      int v9 = *v5;
      v5 += 24;
      int64x2_t v10 = v4;
      switch(v9)
      {
        case 1:
          int64x2_t v10 = v7;
          break;
        case 2:
          int64x2_t v10 = v8;
          break;
        case 3:
          break;
        default:
          int64x2_t v10 = v6;
          break;
      }
      uint64_t v20 = result;
      unint64_t v12 = *(void *)(result + 16);
      unint64_t v11 = *(void *)(result + 24);
      if (v12 >= v11 >> 1)
      {
        int64x2_t v17 = v6;
        int64x2_t v18 = v4;
        int64x2_t v15 = v8;
        int64x2_t v16 = v7;
        int64x2_t v14 = v10;
        sub_251A3E670(v11 > 1, v12 + 1, 1);
        int64x2_t v10 = v14;
        int64x2_t v8 = v15;
        int64x2_t v7 = v16;
        int64x2_t v6 = v17;
        int64x2_t v4 = v18;
        uint64_t result = v20;
      }
      *(void *)(result + 16) = v12 + 1;
      uint64_t v13 = (int64x2_t *)(result + 24 * v12);
      v13[2] = v10;
      v13[3].i8[0] = 2;
      --v2;
    }
    while (v2);
  }
  return result;
}

void sub_251C13DF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BE0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v9 - 8);
  unint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v2 + *(void *)(*(void *)v2 + 136);
  swift_beginAccess();
  if (*(void *)(*(void *)v12 + 16))
  {
    if (qword_26B21FEF0 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_251F350A0();
    __swift_project_value_buffer(v13, (uint64_t)qword_26B21F6E8);
    swift_retain_n();
    int64x2_t v14 = sub_251F35080();
    os_log_type_t v15 = sub_251F35FB0();
    if (os_log_type_enabled(v14, v15))
    {
      int64x2_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      v60[0] = v17;
      *(_DWORD *)int64x2_t v16 = 136315138;
      uint64_t v18 = sub_251F36430();
      v60[3] = sub_251A00E84(v18, v19, v60);
      sub_251F361D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2519F3000, v14, v15, "Requested to start %s when it is already active!", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v17, -1, -1);
      MEMORY[0x2533AC760](v16, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
  else
  {
    uint64_t v58 = a1;
    uint64_t v59 = a2;
    uint64_t v20 = v3 + *(void *)(*(void *)v3 + 96);
    uint64_t v21 = sub_251F35CD0();
    uint64_t v22 = *(void *)(v21 - 8);
    char v55 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 56);
    uint64_t v56 = v21;
    uint64_t v54 = v22 + 56;
    v55(v11, 1, 1);
    uint64_t v48 = swift_allocObject();
    swift_weakInit();
    unint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    uint64_t v52 = v7 + 16;
    v51((char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v20, v6);
    uint64_t v23 = *(unsigned __int8 *)(v7 + 80);
    uint64_t v24 = v6;
    uint64_t v25 = v7;
    uint64_t v26 = (v23 + 32) & ~v23;
    uint64_t v50 = v23 | 7;
    uint64_t v27 = swift_allocObject();
    uint64_t v28 = *(void (**)(uint64_t, char *, uint64_t))(v25 + 32);
    uint64_t v53 = v26;
    uint64_t v29 = v24;
    uint64_t v30 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    *(void *)(v27 + 16) = 0;
    *(void *)(v27 + 24) = 0;
    uint64_t v49 = v28;
    v28(v27 + v26, v30, v29);
    unint64_t v57 = (v8 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(void *)(v27 + v57) = v48;
    uint64_t v48 = sub_251C16B08((uint64_t)v11, (uint64_t)&unk_269BA06A8, v27);
    sub_251A1B064((uint64_t)v11, &qword_26B220BB0);
    swift_beginAccess();
    uint64_t v31 = *(void **)v12;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v12 = v31;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v31 = sub_251F108B0(0, v31[2] + 1, 1, v31);
      *(void *)uint64_t v12 = v31;
    }
    unint64_t v34 = v31[2];
    unint64_t v33 = v31[3];
    if (v34 >= v33 >> 1)
    {
      uint64_t v31 = sub_251F108B0((void *)(v33 > 1), v34 + 1, 1, v31);
      *(void *)uint64_t v12 = v31;
    }
    uint64_t v35 = v3 + *(void *)(*(void *)v3 + 112);
    v31[2] = v34 + 1;
    v31[v34 + 4] = v48;
    swift_endAccess();
    sub_251F35C90();
    ((void (*)(char *, void, uint64_t, uint64_t))v55)(v11, 0, 1, v56);
    uint64_t v36 = swift_allocObject();
    swift_weakInit();
    v51(v30, v35, v29);
    unint64_t v37 = v57;
    unint64_t v38 = (v57 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v39 = swift_allocObject();
    uint64_t v40 = v39 + v53;
    *(void *)(v39 + 16) = 0;
    *(void *)(v39 + 24) = 0;
    v49(v40, v30, v29);
    *(void *)(v39 + v37) = v36;
    uint64_t v41 = (void *)(v39 + v38);
    uint64_t v42 = v59;
    *uint64_t v41 = v58;
    v41[1] = v42;
    swift_retain();
    uint64_t v43 = sub_251C16B08((uint64_t)v11, (uint64_t)&unk_269BA06B8, v39);
    sub_251A1B064((uint64_t)v11, &qword_26B220BB0);
    swift_beginAccess();
    uint64_t v44 = *(void **)v12;
    char v45 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v12 = v44;
    if ((v45 & 1) == 0)
    {
      uint64_t v44 = sub_251F108B0(0, v44[2] + 1, 1, v44);
      *(void *)uint64_t v12 = v44;
    }
    unint64_t v47 = v44[2];
    unint64_t v46 = v44[3];
    if (v47 >= v46 >> 1)
    {
      uint64_t v44 = sub_251F108B0((void *)(v46 > 1), v47 + 1, 1, v44);
      *(void *)uint64_t v12 = v44;
    }
    v44[2] = v47 + 1;
    v44[v47 + 4] = v43;
    swift_endAccess();
  }
}

void sub_251C14478(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF08);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v9 - 8);
  unint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v2 + *(void *)(*(void *)v2 + 136);
  swift_beginAccess();
  if (*(void *)(*(void *)v12 + 16))
  {
    if (qword_26B21FEF0 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_251F350A0();
    __swift_project_value_buffer(v13, (uint64_t)qword_26B21F6E8);
    swift_retain_n();
    int64x2_t v14 = sub_251F35080();
    os_log_type_t v15 = sub_251F35FB0();
    if (os_log_type_enabled(v14, v15))
    {
      int64x2_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      v60[0] = v17;
      *(_DWORD *)int64x2_t v16 = 136315138;
      uint64_t v18 = sub_251F36430();
      v60[3] = sub_251A00E84(v18, v19, v60);
      sub_251F361D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2519F3000, v14, v15, "Requested to start %s when it is already active!", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v17, -1, -1);
      MEMORY[0x2533AC760](v16, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
  else
  {
    uint64_t v58 = a1;
    uint64_t v59 = a2;
    uint64_t v20 = v3 + *(void *)(*(void *)v3 + 96);
    uint64_t v21 = sub_251F35CD0();
    uint64_t v22 = *(void *)(v21 - 8);
    char v55 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 56);
    uint64_t v56 = v21;
    uint64_t v54 = v22 + 56;
    v55(v11, 1, 1);
    uint64_t v48 = swift_allocObject();
    swift_weakInit();
    unint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    uint64_t v52 = v7 + 16;
    v51((char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v20, v6);
    uint64_t v23 = *(unsigned __int8 *)(v7 + 80);
    uint64_t v24 = v6;
    uint64_t v25 = v7;
    uint64_t v26 = (v23 + 32) & ~v23;
    uint64_t v50 = v23 | 7;
    uint64_t v27 = swift_allocObject();
    uint64_t v28 = *(void (**)(uint64_t, char *, uint64_t))(v25 + 32);
    uint64_t v53 = v26;
    uint64_t v29 = v24;
    uint64_t v30 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    *(void *)(v27 + 16) = 0;
    *(void *)(v27 + 24) = 0;
    uint64_t v49 = v28;
    v28(v27 + v26, v30, v29);
    unint64_t v57 = (v8 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(void *)(v27 + v57) = v48;
    uint64_t v48 = sub_251C16B08((uint64_t)v11, (uint64_t)&unk_269BA0648, v27);
    sub_251A1B064((uint64_t)v11, &qword_26B220BB0);
    swift_beginAccess();
    uint64_t v31 = *(void **)v12;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v12 = v31;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v31 = sub_251F108B0(0, v31[2] + 1, 1, v31);
      *(void *)uint64_t v12 = v31;
    }
    unint64_t v34 = v31[2];
    unint64_t v33 = v31[3];
    if (v34 >= v33 >> 1)
    {
      uint64_t v31 = sub_251F108B0((void *)(v33 > 1), v34 + 1, 1, v31);
      *(void *)uint64_t v12 = v31;
    }
    uint64_t v35 = v3 + *(void *)(*(void *)v3 + 112);
    v31[2] = v34 + 1;
    v31[v34 + 4] = v48;
    swift_endAccess();
    sub_251F35C90();
    ((void (*)(char *, void, uint64_t, uint64_t))v55)(v11, 0, 1, v56);
    uint64_t v36 = swift_allocObject();
    swift_weakInit();
    v51(v30, v35, v29);
    unint64_t v37 = v57;
    unint64_t v38 = (v57 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v39 = swift_allocObject();
    uint64_t v40 = v39 + v53;
    *(void *)(v39 + 16) = 0;
    *(void *)(v39 + 24) = 0;
    v49(v40, v30, v29);
    *(void *)(v39 + v37) = v36;
    uint64_t v41 = (void *)(v39 + v38);
    uint64_t v42 = v59;
    *uint64_t v41 = v58;
    v41[1] = v42;
    swift_retain();
    uint64_t v43 = sub_251C16B08((uint64_t)v11, (uint64_t)&unk_269BA0658, v39);
    sub_251A1B064((uint64_t)v11, &qword_26B220BB0);
    swift_beginAccess();
    uint64_t v44 = *(void **)v12;
    char v45 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v12 = v44;
    if ((v45 & 1) == 0)
    {
      uint64_t v44 = sub_251F108B0(0, v44[2] + 1, 1, v44);
      *(void *)uint64_t v12 = v44;
    }
    unint64_t v47 = v44[2];
    unint64_t v46 = v44[3];
    if (v47 >= v46 >> 1)
    {
      uint64_t v44 = sub_251F108B0((void *)(v46 > 1), v47 + 1, 1, v44);
      *(void *)uint64_t v12 = v44;
    }
    v44[2] = v47 + 1;
    v44[v47 + 4] = v43;
    swift_endAccess();
  }
}

uint64_t sub_251C14AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  v5[7] = updated;
  v5[8] = *(void *)(updated - 8);
  v5[9] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2202A8);
  v5[10] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD8);
  v5[11] = v7;
  v5[12] = *(void *)(v7 - 8);
  v5[13] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251C14C48, 0, 0);
}

uint64_t sub_251C14C48()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BE0);
  sub_251F35D20();
  swift_beginAccess();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[14] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_251C14D2C;
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[11];
  return MEMORY[0x270FA1F68](v2, 0, 0, v3);
}

uint64_t sub_251C14D2C()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251C14E28, 0, 0);
}

uint64_t sub_251C14E28()
{
  uint64_t v1 = v0[10];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[8] + 48))(v1, 1, v0[7]) != 1)
  {
    sub_251C1EDD0(v1, v0[9], type metadata accessor for StateSnapshot.UpdateType);
    if ((sub_251F35D80() & 1) == 0)
    {
      uint64_t Strong = swift_weakLoadStrong();
      v0[15] = Strong;
      if (Strong)
      {
        return MEMORY[0x270FA2498](sub_251C14F84, Strong, 0);
      }
    }
    sub_251C1EFBC(v0[9], type metadata accessor for StateSnapshot.UpdateType);
  }
  (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_251C14F84()
{
  sub_251C156C0(*(void *)(v0 + 72));
  return MEMORY[0x270FA2498](sub_251C14FF0, 0, 0);
}

uint64_t sub_251C14FF0()
{
  uint64_t v1 = v0[9];
  char v2 = sub_251F35D80();
  swift_release();
  sub_251C1EFBC(v1, type metadata accessor for StateSnapshot.UpdateType);
  if (v2)
  {
    (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
  else
  {
    uint64_t v5 = (void *)swift_task_alloc();
    v0[14] = v5;
    void *v5 = v0;
    v5[1] = sub_251C14D2C;
    uint64_t v6 = v0[10];
    uint64_t v7 = v0[11];
    return MEMORY[0x270FA1F68](v6, 0, 0, v7);
  }
}

uint64_t sub_251C15144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[8] = a4;
  v5[9] = a5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220C90);
  v5[10] = v6;
  v5[11] = *(void *)(v6 - 8);
  v5[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251C15208, 0, 0);
}

uint64_t sub_251C15208()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF08);
  sub_251F35D20();
  swift_beginAccess();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_251C152FC;
  uint64_t v2 = *(void *)(v0 + 80);
  return MEMORY[0x270FA1F68](v0 + 40, 0, 0, v2);
}

uint64_t sub_251C152FC()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251C153F8, 0, 0);
}

uint64_t sub_251C153F8()
{
  uint64_t v1 = *(void **)(v0 + 40);
  uint64_t v2 = *(void **)(v0 + 48);
  *(void *)(v0 + 112) = v1;
  *(void *)(v0 + 120) = v2;
  int v3 = *(unsigned __int8 *)(v0 + 56);
  *(unsigned char *)(v0 + 57) = v3;
  if (v3 != 255)
  {
    if ((sub_251F35D80() & 1) == 0)
    {
      uint64_t Strong = swift_weakLoadStrong();
      *(void *)(v0 + 128) = Strong;
      if (Strong)
      {
        return MEMORY[0x270FA2498](sub_251C15504, Strong, 0);
      }
    }
    sub_251C1E730(v1, v2, v3);
  }
  (*(void (**)(void, void))(*(void *)(v0 + 88) + 8))(*(void *)(v0 + 96), *(void *)(v0 + 80));
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_251C15504()
{
  sub_251C16134(*(void **)(v0 + 112), *(void **)(v0 + 120), *(unsigned __int8 *)(v0 + 57));
  return MEMORY[0x270FA2498](sub_251C15574, 0, 0);
}

uint64_t sub_251C15574()
{
  uint64_t v1 = *(void **)(v0 + 120);
  uint64_t v2 = *(void **)(v0 + 112);
  char v3 = *(unsigned char *)(v0 + 57);
  char v4 = sub_251F35D80();
  swift_release();
  sub_251C1E730(v2, v1, v3);
  if (v4)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 88) + 8))(*(void *)(v0 + 96), *(void *)(v0 + 80));
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_251C152FC;
    uint64_t v8 = *(void *)(v0 + 80);
    return MEMORY[0x270FA1F68](v0 + 40, 0, 0, v8);
  }
}

void sub_251C156C0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v62 = *(void *)(v4 - 8);
  uint64_t v63 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v61 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_251F34FE0();
  uint64_t v6 = *(void *)(v66 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v66);
  uint64_t v64 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  unint64_t v11 = (char *)&v59 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v59 - v12;
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  uint64_t v15 = *(void *)(updated - 8);
  uint64_t v16 = MEMORY[0x270FA5388](updated - 8);
  uint64_t v60 = (uint64_t)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  unint64_t v19 = (char *)&v59 - v18;
  uint64_t v65 = a1;
  sub_251C1EE38(a1, (uint64_t)&v59 - v18, type metadata accessor for StateSnapshot.UpdateType);
  uint64_t v20 = (unint64_t *)(v2 + *(void *)(*(void *)v2 + 128));
  swift_beginAccess();
  unint64_t v21 = *v20;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v20 = v21;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v21 = sub_251F10AFC(0, *(void *)(v21 + 16) + 1, 1, v21);
    *uint64_t v20 = v21;
  }
  unint64_t v24 = *(void *)(v21 + 16);
  unint64_t v23 = *(void *)(v21 + 24);
  if (v24 >= v23 >> 1)
  {
    unint64_t v21 = sub_251F10AFC(v23 > 1, v24 + 1, 1, v21);
    *uint64_t v20 = v21;
  }
  *(void *)(v21 + 16) = v24 + 1;
  sub_251C1EDD0((uint64_t)v19, v21+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(void *)(v15 + 72) * v24, type metadata accessor for StateSnapshot.UpdateType);
  swift_endAccess();
  if (qword_269B9C338 != -1) {
    swift_once();
  }
  if (byte_269B9FF88)
  {
    unint64_t v59 = StateSnapshot.UpdateType.description.getter();
    unint64_t v26 = v25;
    if (qword_26B21ED30 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_251F35020();
    __swift_project_value_buffer(v27, (uint64_t)qword_26B21ED40);
    swift_bridgeObjectRetain_n();
    sub_251F34FD0();
    uint64_t v28 = sub_251F35000();
    os_signpost_type_t v29 = sub_251F36070();
    if (sub_251F36170())
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v64, v11, v66);
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      v68[0] = v31;
      *(_DWORD *)uint64_t v30 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v67 = sub_251A00E84(v59, v26, v68);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      char v32 = v64;
      os_signpost_id_t v33 = sub_251F34FC0();
      _os_signpost_emit_with_name_impl(&dword_2519F3000, v28, v29, v33, "AsyncStreamBatchManager", "added %s", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v31, -1, -1);
      MEMORY[0x2533AC760](v30, -1, -1);

      unint64_t v34 = *(void (**)(char *, uint64_t))(v6 + 8);
      uint64_t v35 = v66;
      v34(v11, v66);
      v34(v32, v35);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v66);
    }
    if (qword_26B21FEF0 != -1) {
      swift_once();
    }
    uint64_t v44 = sub_251F350A0();
    __swift_project_value_buffer(v44, (uint64_t)qword_26B21F6E8);
    swift_bridgeObjectRetain();
    swift_retain();
    char v45 = sub_251F35080();
    os_log_type_t v46 = sub_251F35FD0();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      v68[0] = v48;
      *(_DWORD *)uint64_t v47 = 136315394;
      uint64_t v49 = sub_251F36430();
      uint64_t v67 = sub_251A00E84(v49, v50, v68);
      sub_251F361D0();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v67 = sub_251A00E84(v59, v26, v68);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2519F3000, v45, v46, "%s added %s", (uint8_t *)v47, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v48, -1, -1);
      MEMORY[0x2533AC760](v47, -1, -1);

      goto LABEL_29;
    }

    swift_bridgeObjectRelease_n();
  }
  else
  {
    if (qword_26B21ED30 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_251F35020();
    __swift_project_value_buffer(v36, (uint64_t)qword_26B21ED40);
    sub_251F34FD0();
    unint64_t v37 = sub_251F35000();
    os_signpost_type_t v38 = sub_251F36070();
    if (sub_251F36170())
    {
      uint64_t v39 = v64;
      uint64_t v40 = v66;
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v64, v13, v66);
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v41 = 0;
      os_signpost_id_t v42 = sub_251F34FC0();
      _os_signpost_emit_with_name_impl(&dword_2519F3000, v37, v38, v42, "AsyncStreamBatchManager", "added element", v41, 2u);
      MEMORY[0x2533AC760](v41, -1, -1);

      uint64_t v43 = *(void (**)(char *, uint64_t))(v6 + 8);
      v43(v13, v40);
      v43(v39, v40);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v66);
    }
    if (qword_26B21FEF0 != -1) {
      swift_once();
    }
    uint64_t v51 = sub_251F350A0();
    __swift_project_value_buffer(v51, (uint64_t)qword_26B21F6E8);
    swift_retain();
    uint64_t v52 = sub_251F35080();
    os_log_type_t v53 = sub_251F35FD0();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      v68[0] = v55;
      *(_DWORD *)uint64_t v54 = 136315138;
      uint64_t v56 = sub_251F36430();
      uint64_t v67 = sub_251A00E84(v56, v57, v68);
      sub_251F361D0();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2519F3000, v52, v53, "%s added element", v54, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v55, -1, -1);
      MEMORY[0x2533AC760](v54, -1, -1);

      goto LABEL_29;
    }
  }
  swift_release();
LABEL_29:
  if ((*(unsigned char *)(v2 + *(void *)(*(void *)v2 + 144)) & 1) == 0)
  {
    sub_251C1EE38(v65, v60, type metadata accessor for StateSnapshot.UpdateType);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
    uint64_t v58 = v61;
    sub_251F35CF0();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v58, v63);
  }
}

void sub_251C16134(void *a1, void *a2, int a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E5C0);
  uint64_t v65 = *(void *)(v8 - 8);
  uint64_t v66 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v64 = &v60[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_251F34FE0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v67 = &v60[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = &v60[-v15];
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = &v60[-v17];
  unint64_t v19 = (void **)(v3 + *(void *)(*(void *)v3 + 128));
  swift_beginAccess();
  uint64_t v20 = *v19;
  id v68 = a1;
  id v69 = a2;
  sub_251A4D4C4(a1, a2, a3);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *unint64_t v19 = v20;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v20 = sub_251F10B30(0, v20[2] + 1, 1, v20);
    *unint64_t v19 = v20;
  }
  unint64_t v23 = v20[2];
  unint64_t v22 = v20[3];
  if (v23 >= v22 >> 1)
  {
    uint64_t v20 = sub_251F10B30((void *)(v22 > 1), v23 + 1, 1, v20);
    *unint64_t v19 = v20;
  }
  v20[2] = v23 + 1;
  unint64_t v24 = &v20[3 * v23];
  id v25 = v69;
  long long v24[4] = v68;
  v24[5] = v25;
  *((unsigned char *)v24 + 48) = a3;
  swift_endAccess();
  if (qword_269B9C338 != -1) {
    swift_once();
  }
  if (byte_269B9FF88)
  {
    uint64_t v71 = (uint64_t)v68;
    id v72 = v69;
    char v73 = a3;
    uint64_t updated = MatterStateSnapshot.UpdateType.description.getter();
    unint64_t v27 = v26;
    if (qword_26B21ED30 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_251F35020();
    __swift_project_value_buffer(v28, (uint64_t)qword_26B21ED40);
    swift_bridgeObjectRetain_n();
    sub_251F34FD0();
    os_signpost_type_t v29 = sub_251F35000();
    int v30 = sub_251F36070();
    char v31 = sub_251F36170();
    int v63 = a3;
    if (v31)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 16))(v67, v16, v10);
      uint64_t v32 = swift_slowAlloc();
      int v61 = v30;
      os_signpost_id_t v33 = (uint8_t *)v32;
      uint64_t v34 = swift_slowAlloc();
      uint64_t v71 = v34;
      *(_DWORD *)os_signpost_id_t v33 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v70 = sub_251A00E84(updated, v27, &v71);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      uint64_t v35 = v67;
      os_signpost_id_t v36 = sub_251F34FC0();
      _os_signpost_emit_with_name_impl(&dword_2519F3000, v29, (os_signpost_type_t)v61, v36, "AsyncStreamBatchManager", "added %s", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v34, -1, -1);
      MEMORY[0x2533AC760](v33, -1, -1);

      unint64_t v37 = *(void (**)(unsigned char *, uint64_t))(v11 + 8);
      v37(v16, v10);
      v37(v35, v10);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v16, v10);
    }
    if (qword_26B21FEF0 != -1) {
      swift_once();
    }
    uint64_t v45 = sub_251F350A0();
    __swift_project_value_buffer(v45, (uint64_t)qword_26B21F6E8);
    swift_bridgeObjectRetain();
    swift_retain();
    os_log_type_t v46 = sub_251F35080();
    os_log_type_t v47 = sub_251F35FD0();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      uint64_t v71 = v49;
      *(_DWORD *)uint64_t v48 = 136315394;
      uint64_t v50 = sub_251F36430();
      uint64_t v70 = sub_251A00E84(v50, v51, &v71);
      sub_251F361D0();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v70 = sub_251A00E84(updated, v27, &v71);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2519F3000, v46, v47, "%s added %s", (uint8_t *)v48, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v49, -1, -1);
      MEMORY[0x2533AC760](v48, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release();
    }
    LOBYTE(a3) = v63;
  }
  else
  {
    if (qword_26B21ED30 != -1) {
      swift_once();
    }
    uint64_t v38 = sub_251F35020();
    __swift_project_value_buffer(v38, (uint64_t)qword_26B21ED40);
    sub_251F34FD0();
    uint64_t v39 = sub_251F35000();
    os_signpost_type_t v40 = sub_251F36070();
    if (sub_251F36170())
    {
      uint64_t v41 = v67;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 16))(v67, v18, v10);
      os_signpost_id_t v42 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_signpost_id_t v42 = 0;
      os_signpost_id_t v43 = sub_251F34FC0();
      _os_signpost_emit_with_name_impl(&dword_2519F3000, v39, v40, v43, "AsyncStreamBatchManager", "added element", v42, 2u);
      MEMORY[0x2533AC760](v42, -1, -1);

      uint64_t v44 = *(void (**)(unsigned char *, uint64_t))(v11 + 8);
      v44(v18, v10);
      v44(v41, v10);
    }
    else
    {

      (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v18, v10);
    }
    if (qword_26B21FEF0 != -1) {
      swift_once();
    }
    uint64_t v52 = sub_251F350A0();
    __swift_project_value_buffer(v52, (uint64_t)qword_26B21F6E8);
    swift_retain();
    os_log_type_t v53 = sub_251F35080();
    os_log_type_t v54 = sub_251F35FD0();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      uint64_t v71 = v56;
      *(_DWORD *)uint64_t v55 = 136315138;
      uint64_t v57 = sub_251F36430();
      uint64_t v70 = sub_251A00E84(v57, v58, &v71);
      sub_251F361D0();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2519F3000, v53, v54, "%s added element", v55, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v56, -1, -1);
      MEMORY[0x2533AC760](v55, -1, -1);
    }
    else
    {

      swift_release();
    }
  }
  if ((*(unsigned char *)(v4 + *(void *)(*(void *)v4 + 144)) & 1) == 0)
  {
    uint64_t v71 = (uint64_t)v68;
    id v72 = v69;
    char v73 = a3;
    sub_251A4D4C4(v68, v69, a3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF00);
    unint64_t v59 = v64;
    sub_251F35CF0();
    (*(void (**)(unsigned char *, uint64_t))(v65 + 8))(v59, v66);
  }
}

uint64_t sub_251C16B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(a1, (uint64_t)v7, &qword_26B220BB0);
  uint64_t v8 = sub_251F35CD0();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_251A1B064((uint64_t)v7, &qword_26B220BB0);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
  }
  else
  {
    sub_251F35CC0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
  }
  swift_getObjectType();
  swift_unknownObjectRetain();
  uint64_t v10 = sub_251F35C00();
  uint64_t v12 = v11;
  swift_unknownObjectRelease();
  if (v12 | v10)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v10;
    v14[3] = v12;
  }
  return swift_task_create();
}

uint64_t sub_251C16CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[10] = a6;
  v7[11] = a7;
  v7[8] = a4;
  v7[9] = a5;
  uint64_t v8 = sub_251F35030();
  v7[12] = v8;
  v7[13] = *(void *)(v8 - 8);
  v7[14] = swift_task_alloc();
  uint64_t v9 = sub_251F34FE0();
  v7[15] = v9;
  v7[16] = *(void *)(v9 - 8);
  v7[17] = swift_task_alloc();
  v7[18] = swift_task_alloc();
  v7[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2202A8);
  v7[20] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD8);
  v7[21] = v10;
  v7[22] = *(void *)(v10 - 8);
  v7[23] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251C16EA4, 0, 0);
}

uint64_t sub_251C16EA4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BE0);
  sub_251F35D20();
  swift_beginAccess();
  *(_DWORD *)(v0 + 272) = *MEMORY[0x263F90238];
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_251C16F98;
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 168);
  return MEMORY[0x270FA1F68](v2, 0, 0, v3);
}

uint64_t sub_251C16F98()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251C17094, 0, 0);
}

uint64_t sub_251C17094()
{
  uint64_t v1 = v0[20];
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 48))(v1, 1, updated) == 1)
  {
    (*(void (**)(void, void))(v0[22] + 8))(v0[23], v0[21]);
LABEL_9:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  if ((sub_251F35D80() & 1) != 0 || (uint64_t Strong = swift_weakLoadStrong(), (v0[25] = Strong) == 0))
  {
    uint64_t v4 = v0[20];
    (*(void (**)(void, void))(v0[22] + 8))(v0[23], v0[21]);
    sub_251A1B064(v4, &qword_26B2202A8);
    goto LABEL_9;
  }
  return MEMORY[0x270FA2498](sub_251C17224, Strong, 0);
}

uint64_t sub_251C17224()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 200) + *(void *)(**(void **)(v0 + 200) + 128));
  swift_beginAccess();
  *(void *)(v0 + 208) = *v1;
  *uint64_t v1 = MEMORY[0x263F8EE78];
  return MEMORY[0x270FA2498](sub_251C172C8, 0, 0);
}

uint64_t sub_251C172C8()
{
  uint64_t v34 = v0;
  uint64_t v1 = v0[26];
  if (*(void *)(v1 + 16))
  {
    if (qword_26B21FEF0 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_251F350A0();
    __swift_project_value_buffer(v2, (uint64_t)qword_26B21F6E8);
    swift_bridgeObjectRetain_n();
    swift_retain();
    uint64_t v3 = sub_251F35080();
    os_log_type_t v4 = sub_251F35FD0();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = swift_slowAlloc();
      uint64_t v6 = swift_slowAlloc();
      uint64_t v33 = v6;
      *(_DWORD *)uint64_t v5 = 136315394;
      uint64_t v7 = sub_251F36430();
      *(void *)(v5 + 4) = sub_251A00E84(v7, v8, &v33);
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v5 + 12) = 2048;
      uint64_t v9 = *(void *)(v1 + 16);
      swift_bridgeObjectRelease();
      *(void *)(v5 + 14) = v9;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2519F3000, v3, v4, "%s processing %ld elements", (uint8_t *)v5, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v6, -1, -1);
      MEMORY[0x2533AC760](v5, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_release();
    }

    if (qword_26B21ED30 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_251F35020();
    v0[27] = __swift_project_value_buffer(v13, (uint64_t)qword_26B21ED40);
    swift_bridgeObjectRetain();
    sub_251F34FD0();
    uint64_t v14 = sub_251F35000();
    os_signpost_type_t v15 = sub_251F36060();
    if (sub_251F36170())
    {
      uint64_t v16 = v0[18];
      uint64_t v17 = v0[15];
      uint64_t v18 = v0[16];
      unint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
      v19(v16, v0[19], v17);
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 134217984;
      *(void *)(v20 + 4) = *(void *)(v1 + 16);
      swift_bridgeObjectRelease();
      os_signpost_id_t v21 = sub_251F34FC0();
      _os_signpost_emit_with_name_impl(&dword_2519F3000, v14, v15, v21, "AsyncStreamBatchManager", "Processing %ld elements", (uint8_t *)v20, 0xCu);
      MEMORY[0x2533AC760](v20, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
    }
    else
    {
      uint64_t v22 = v0[16];

      swift_bridgeObjectRelease();
      unint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16);
    }
    uint64_t v24 = v0[18];
    uint64_t v23 = v0[19];
    uint64_t v25 = v0[15];
    uint64_t v26 = v0[16];
    unint64_t v27 = (int *)v0[10];
    v0[28] = v19;
    v0[29] = (v26 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v19(v24, v23, v25);
    sub_251F35060();
    swift_allocObject();
    v0[30] = sub_251F35050();
    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v0[31] = v28;
    v0[32] = (v26 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v28(v23, v25);
    uint64_t v32 = (uint64_t (*)(uint64_t))((char *)v27 + *v27);
    os_signpost_type_t v29 = (void *)swift_task_alloc();
    v0[33] = v29;
    *os_signpost_type_t v29 = v0;
    v29[1] = sub_251C177E8;
    uint64_t v30 = v0[26];
    return v32(v30);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_251A1B064(v0[20], &qword_26B2202A8);
    uint64_t v10 = (void *)swift_task_alloc();
    v0[24] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_251C16F98;
    uint64_t v11 = v0[20];
    uint64_t v12 = v0[21];
    return MEMORY[0x270FA1F68](v11, 0, 0, v12);
  }
}

uint64_t sub_251C177E8()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_251C17900, 0, 0);
}

uint64_t sub_251C17900()
{
  uint64_t v1 = (void *)(v0 + 136);
  uint64_t v2 = sub_251F35000();
  sub_251F35040();
  os_signpost_type_t v3 = sub_251F36050();
  if (sub_251F36170())
  {
    int v4 = *(_DWORD *)(v0 + 272);
    uint64_t v6 = *(void *)(v0 + 104);
    uint64_t v5 = *(void *)(v0 + 112);
    uint64_t v7 = *(void *)(v0 + 96);
    swift_retain();
    sub_251F35070();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v6 + 88))(v5, v7) == v4)
    {
      unint64_t v8 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 104) + 8))(*(void *)(v0 + 112), *(void *)(v0 + 96));
      unint64_t v8 = "";
    }
    uint64_t v1 = (void *)(v0 + 144);
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
    uint64_t v10 = *(void *)(v0 + 136);
    uint64_t v11 = *(void *)(v0 + 120);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 224))(*(void *)(v0 + 144), v10, v11);
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    os_signpost_id_t v13 = sub_251F34FC0();
    _os_signpost_emit_with_name_impl(&dword_2519F3000, v2, v3, v13, "AsyncStreamBatchManager", v8, v12, 2u);
    MEMORY[0x2533AC760](v12, -1, -1);

    v9(v10, v11);
  }
  else
  {
  }
  (*(void (**)(void, void))(v0 + 248))(*v1, *(void *)(v0 + 120));
  char v14 = sub_251F35D80();
  swift_release();
  swift_release();
  if (v14)
  {
    uint64_t v15 = *(void *)(v0 + 160);
    (*(void (**)(void, void))(*(void *)(v0 + 176) + 8))(*(void *)(v0 + 184), *(void *)(v0 + 168));
    sub_251A1B064(v15, &qword_26B2202A8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
    return v16();
  }
  else
  {
    sub_251A1B064(*(void *)(v0 + 160), &qword_26B2202A8);
    uint64_t v18 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_251C16F98;
    uint64_t v19 = *(void *)(v0 + 160);
    uint64_t v20 = *(void *)(v0 + 168);
    return MEMORY[0x270FA1F68](v19, 0, 0, v20);
  }
}

uint64_t sub_251C17BF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[13] = a6;
  v7[14] = a7;
  v7[11] = a4;
  v7[12] = a5;
  uint64_t v8 = sub_251F35030();
  v7[15] = v8;
  v7[16] = *(void *)(v8 - 8);
  v7[17] = swift_task_alloc();
  uint64_t v9 = sub_251F34FE0();
  v7[18] = v9;
  v7[19] = *(void *)(v9 - 8);
  v7[20] = swift_task_alloc();
  v7[21] = swift_task_alloc();
  v7[22] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220C90);
  v7[23] = v10;
  v7[24] = *(void *)(v10 - 8);
  v7[25] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251C17D94, 0, 0);
}

uint64_t sub_251C17D94()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF08);
  sub_251F35D20();
  swift_beginAccess();
  *(_DWORD *)(v0 + 84) = *MEMORY[0x263F90238];
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 208) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_251C17E98;
  uint64_t v2 = *(void *)(v0 + 184);
  return MEMORY[0x270FA1F68](v0 + 64, 0, 0, v2);
}

uint64_t sub_251C17E98()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251C17F94, 0, 0);
}

uint64_t sub_251C17F94()
{
  if (*(unsigned __int8 *)(v0 + 80) == 255)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 192) + 8))(*(void *)(v0 + 200), *(void *)(v0 + 184));
  }
  else
  {
    if ((sub_251F35D80() & 1) == 0)
    {
      uint64_t Strong = swift_weakLoadStrong();
      *(void *)(v0 + 216) = Strong;
      if (Strong)
      {
        return MEMORY[0x270FA2498](sub_251C180D0, Strong, 0);
      }
    }
    (*(void (**)(void, void))(*(void *)(v0 + 192) + 8))(*(void *)(v0 + 200), *(void *)(v0 + 184));
    sub_251C1E730(*(id *)(v0 + 64), *(id *)(v0 + 72), *(unsigned char *)(v0 + 80));
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_251C180D0()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 216) + *(void *)(**(void **)(v0 + 216) + 128));
  swift_beginAccess();
  *(void *)(v0 + 224) = *v1;
  *uint64_t v1 = MEMORY[0x263F8EE78];
  return MEMORY[0x270FA2498](sub_251C18174, 0, 0);
}

uint64_t sub_251C18174()
{
  uint64_t v33 = v0;
  uint64_t v1 = *(void *)(v0 + 224);
  if (*(void *)(v1 + 16))
  {
    if (qword_26B21FEF0 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_251F350A0();
    __swift_project_value_buffer(v2, (uint64_t)qword_26B21F6E8);
    swift_bridgeObjectRetain_n();
    swift_retain();
    uint64_t v3 = sub_251F35080();
    os_log_type_t v4 = sub_251F35FD0();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = swift_slowAlloc();
      uint64_t v6 = swift_slowAlloc();
      uint64_t v32 = v6;
      *(_DWORD *)uint64_t v5 = 136315394;
      uint64_t v7 = sub_251F36430();
      *(void *)(v5 + 4) = sub_251A00E84(v7, v8, &v32);
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v5 + 12) = 2048;
      uint64_t v9 = *(void *)(v1 + 16);
      swift_bridgeObjectRelease();
      *(void *)(v5 + 14) = v9;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2519F3000, v3, v4, "%s processing %ld elements", (uint8_t *)v5, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v6, -1, -1);
      MEMORY[0x2533AC760](v5, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_release();
    }

    if (qword_26B21ED30 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_251F35020();
    *(void *)(v0 + 232) = __swift_project_value_buffer(v12, (uint64_t)qword_26B21ED40);
    swift_bridgeObjectRetain();
    sub_251F34FD0();
    os_signpost_id_t v13 = sub_251F35000();
    os_signpost_type_t v14 = sub_251F36060();
    if (sub_251F36170())
    {
      uint64_t v15 = *(void *)(v0 + 168);
      uint64_t v16 = *(void *)(v0 + 144);
      uint64_t v17 = *(void *)(v0 + 152);
      uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
      v18(v15, *(void *)(v0 + 176), v16);
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 134217984;
      *(void *)(v19 + 4) = *(void *)(v1 + 16);
      swift_bridgeObjectRelease();
      os_signpost_id_t v20 = sub_251F34FC0();
      _os_signpost_emit_with_name_impl(&dword_2519F3000, v13, v14, v20, "AsyncStreamBatchManager", "Processing %ld elements", (uint8_t *)v19, 0xCu);
      MEMORY[0x2533AC760](v19, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    }
    else
    {
      uint64_t v21 = *(void *)(v0 + 152);

      swift_bridgeObjectRelease();
      uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
    }
    uint64_t v23 = *(void *)(v0 + 168);
    uint64_t v22 = *(void *)(v0 + 176);
    uint64_t v24 = *(void *)(v0 + 144);
    uint64_t v25 = *(void *)(v0 + 152);
    uint64_t v26 = *(int **)(v0 + 104);
    *(void *)(v0 + 240) = v18;
    *(void *)(v0 + 248) = (v25 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v18(v23, v22, v24);
    sub_251F35060();
    swift_allocObject();
    *(void *)(v0 + 256) = sub_251F35050();
    unint64_t v27 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    *(void *)(v0 + 264) = v27;
    *(void *)(v0 + 272) = (v25 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v27(v22, v24);
    char v31 = (uint64_t (*)(uint64_t))((char *)v26 + *v26);
    uint64_t v28 = (void *)swift_task_alloc();
    *(void *)(v0 + 280) = v28;
    *uint64_t v28 = v0;
    v28[1] = sub_251C1869C;
    uint64_t v29 = *(void *)(v0 + 224);
    return v31(v29);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_251C1E730(*(id *)(v0 + 64), *(id *)(v0 + 72), *(unsigned char *)(v0 + 80));
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 208) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_251C17E98;
    uint64_t v11 = *(void *)(v0 + 184);
    return MEMORY[0x270FA1F68](v0 + 64, 0, 0, v11);
  }
}

uint64_t sub_251C1869C()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_251C187B4, 0, 0);
}

uint64_t sub_251C187B4()
{
  uint64_t v1 = sub_251F35000();
  sub_251F35040();
  os_signpost_type_t v2 = sub_251F36050();
  if (sub_251F36170())
  {
    int v3 = *(_DWORD *)(v0 + 84);
    uint64_t v5 = *(void *)(v0 + 128);
    uint64_t v4 = *(void *)(v0 + 136);
    uint64_t v6 = *(void *)(v0 + 120);
    swift_retain();
    sub_251F35070();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v4, v6) == v3)
    {
      uint64_t v7 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 128) + 8))(*(void *)(v0 + 136), *(void *)(v0 + 120));
      uint64_t v7 = "";
    }
    unint64_t v8 = (void *)(v0 + 168);
    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v0 + 264);
    uint64_t v9 = *(void *)(v0 + 160);
    uint64_t v10 = *(void *)(v0 + 144);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 240))(*(void *)(v0 + 168), v9, v10);
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    os_signpost_id_t v12 = sub_251F34FC0();
    _os_signpost_emit_with_name_impl(&dword_2519F3000, v1, v2, v12, "AsyncStreamBatchManager", v7, v11, 2u);
    MEMORY[0x2533AC760](v11, -1, -1);

    v18(v9, v10);
  }
  else
  {

    unint64_t v8 = (void *)(v0 + 160);
  }
  (*(void (**)(void, void))(v0 + 264))(*v8, *(void *)(v0 + 144));
  char v13 = sub_251F35D80();
  swift_release();
  swift_release();
  if (v13)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 192) + 8))(*(void *)(v0 + 200), *(void *)(v0 + 184));
    sub_251C1E730(*(id *)(v0 + 64), *(id *)(v0 + 72), *(unsigned char *)(v0 + 80));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_signpost_type_t v14 = *(uint64_t (**)(void))(v0 + 8);
    return v14();
  }
  else
  {
    sub_251C1E730(*(id *)(v0 + 64), *(id *)(v0 + 72), *(unsigned char *)(v0 + 80));
    uint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 208) = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_251C17E98;
    uint64_t v17 = *(void *)(v0 + 184);
    return MEMORY[0x270FA1F68](v0 + 64, 0, 0, v17);
  }
}

uint64_t sub_251C18AAC()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  uint64_t result = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (!qword_26B21FD60)
  {
    os_signpost_id_t v20 = &type metadata for HomeAppFeatures;
    unint64_t v21 = sub_251A23FFC();
    v19[0] = 3;
    char v6 = sub_251F34F60();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
    uint64_t v7 = sub_251F35CD0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
    if (v6)
    {
      uint64_t v8 = swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_251F35C80();
      swift_retain();
      uint64_t v9 = sub_251F35C70();
      uint64_t v10 = (void *)swift_allocObject();
      uint64_t v11 = MEMORY[0x263F8F500];
      _OWORD v10[2] = v9;
      v10[3] = v11;
      v10[4] = v8;
      swift_release();
      os_signpost_id_t v12 = &unk_269BA0688;
      uint64_t v13 = (uint64_t)v5;
      os_signpost_type_t v14 = v10;
    }
    else
    {
      sub_251F35C80();
      id v15 = v0;
      uint64_t v16 = sub_251F35C70();
      os_signpost_type_t v14 = (void *)swift_allocObject();
      uint64_t v17 = MEMORY[0x263F8F500];
      v14[2] = v16;
      v14[3] = v17;
      void v14[4] = v15;
      v14[5] = ObjectType;
      os_signpost_id_t v12 = &unk_269BA0678;
      uint64_t v13 = (uint64_t)v5;
    }
    qword_26B21FD60 = sub_251ACBB48(v13, (uint64_t)v12, (uint64_t)v14);
    return swift_release();
  }
  return result;
}

uint64_t sub_251C18CB8()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = &v21[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v22 = &type metadata for HomeAppFeatures;
  unint64_t v5 = sub_251A23FFC();
  unint64_t v23 = v5;
  v21[0] = 1;
  char v6 = sub_251F34F60();
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
  if ((v6 & 1) != 0 && !qword_26B220BE8)
  {
    uint64_t v22 = &type metadata for HomeAppFeatures;
    unint64_t v23 = v5;
    v21[0] = 3;
    char v8 = sub_251F34F60();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
    uint64_t v9 = sub_251F35CD0();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
    if (v8)
    {
      uint64_t v10 = swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_251F35C80();
      swift_retain();
      uint64_t v11 = sub_251F35C70();
      os_signpost_id_t v12 = (void *)swift_allocObject();
      uint64_t v13 = MEMORY[0x263F8F500];
      v12[2] = v11;
      v12[3] = v13;
      v12[4] = v10;
      swift_release();
      os_signpost_type_t v14 = &unk_269BA0628;
      uint64_t v15 = (uint64_t)v4;
      uint64_t v16 = v12;
    }
    else
    {
      sub_251F35C80();
      id v17 = v0;
      uint64_t v18 = sub_251F35C70();
      uint64_t v16 = (void *)swift_allocObject();
      uint64_t v19 = MEMORY[0x263F8F500];
      v16[2] = v18;
      v16[3] = v19;
      v16[4] = v17;
      v16[5] = ObjectType;
      os_signpost_type_t v14 = &unk_269BA0618;
      uint64_t v15 = (uint64_t)v4;
    }
    qword_26B220BE8 = sub_251ACBB48(v15, (uint64_t)v14, (uint64_t)v16);
    return swift_release();
  }
  return result;
}

uint64_t sub_251C18EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  sub_251F35C80();
  v4[3] = sub_251F35C70();
  uint64_t v6 = sub_251F35C00();
  v4[4] = v6;
  v4[5] = v5;
  return MEMORY[0x270FA2498](sub_251C18F8C, v6, v5);
}

uint64_t sub_251C18F8C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC13HomeDataModel9DataModel_snapshotMetricsAggregator);
  *(void *)(v0 + 48) = v1;
  return MEMORY[0x270FA2498](sub_251C18FBC, v1, 0);
}

uint64_t sub_251C18FBC()
{
  sub_251B40444();
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  return MEMORY[0x270FA2498](sub_251AEA778, v1, v2);
}

uint64_t sub_251C19020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[8] = a4;
  sub_251F35C80();
  v4[9] = sub_251F35C70();
  uint64_t v6 = sub_251F35C00();
  v4[10] = v6;
  v4[11] = v5;
  return MEMORY[0x270FA2498](sub_251C190B8, v6, v5);
}

uint64_t sub_251C190B8()
{
  uint64_t v1 = v0[8] + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x2533AC870](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    uint64_t v4 = v0[8] + 16;
    uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC13HomeDataModel9DataModel_snapshotBatchManager);
    v0[12] = v5;
    swift_retain();

    v0[13] = swift_allocObject();
    swift_beginAccess();
    uint64_t v6 = (void *)MEMORY[0x2533AC870](v4);
    swift_unknownObjectWeakInit();

    return MEMORY[0x270FA2498](sub_251C192B4, v5, 0);
  }
  else
  {
    swift_release();
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_251F350A0();
    __swift_project_value_buffer(v7, (uint64_t)qword_26B21F290);
    uint64_t v8 = sub_251F35080();
    os_log_type_t v9 = sub_251F35FA0();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_2519F3000, v8, v9, "Task streamTask with BatchManager exited", v10, 2u);
      MEMORY[0x2533AC760](v10, -1, -1);
    }

    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

uint64_t sub_251C192B4()
{
  sub_251C13DF8((uint64_t)&unk_269BA0698, v0[13]);
  swift_release();
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  return MEMORY[0x270FA2498](sub_251C19338, v1, v2);
}

uint64_t sub_251C19338()
{
  swift_release();
  swift_release();
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_251F350A0();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B21F290);
  uint64_t v2 = sub_251F35080();
  os_log_type_t v3 = sub_251F35FA0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_2519F3000, v2, v3, "Task streamTask with BatchManager exited", v4, 2u);
    MEMORY[0x2533AC760](v4, -1, -1);
  }

  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_251C19460(uint64_t a1, uint64_t a2)
{
  v2[13] = a1;
  v2[14] = a2;
  v2[15] = *(void *)(type metadata accessor for StateSnapshot.UpdateType(0) - 8);
  v2[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  v2[17] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251C1954C, 0, 0);
}

uint64_t sub_251C1954C()
{
  uint64_t v1 = v0[14] + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x2533AC870](v1);
  v0[18] = v2;
  if (v2)
  {
    sub_251F35C80();
    v0[19] = sub_251F35C70();
    uint64_t v4 = sub_251F35C00();
    return MEMORY[0x270FA2498](sub_251C1964C, v4, v3);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_251C1964C()
{
  uint64_t v1 = *(char **)(v0 + 144);
  swift_release();
  uint64_t v2 = (void **)&v1[OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager];
  swift_beginAccess();
  uint64_t v3 = *v2;
  *(void *)(v0 + 160) = *v2;
  id v4 = v3;

  return MEMORY[0x270FA2498](sub_251C196F4, 0, 0);
}

uint64_t sub_251C196F4()
{
  if (*(void *)(v0 + 160))
  {
    uint64_t v1 = *(void *)(v0 + 112) + 16;
    swift_beginAccess();
    uint64_t v2 = (void *)MEMORY[0x2533AC870](v1);
    *(void *)(v0 + 168) = v2;
    if (v2)
    {
      uint64_t v3 = *(void **)(v0 + 104);
      id v4 = objc_msgSend(*(id *)(v0 + 160), sel_homes);
      sub_251A27C8C();
      unint64_t v5 = sub_251F35AC0();

      uint64_t updated = _s13HomeDataModel13StateSnapshotV10UpdateTypeO6unique7updates2inSayAEGAI_SaySo6HMHomeCGtFZ_0(v3, v5);
      *(void *)(v0 + 176) = updated;
      swift_bridgeObjectRelease();
      if (v3[2] >= 2uLL)
      {
        uint64_t v7 = *(void *)(v0 + 136);
        uint64_t v8 = *(void *)(v0 + 104);
        swift_retain();
        uint64_t v9 = sub_251C13798(v8);
        uint64_t v10 = sub_251C13798(updated);
        uint64_t v11 = sub_251F35CD0();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v7, 1, 1, v11);
        uint64_t v12 = swift_allocObject();
        swift_weakInit();
        uint64_t v13 = (void *)swift_allocObject();
        v13[2] = 0;
        v13[3] = 0;
        v13[4] = v12;
        v13[5] = v9;
        v13[6] = v10;
        sub_251ACBCF4(v7, (uint64_t)&unk_269BA06C8, (uint64_t)v13);
        swift_release();
        swift_release();
      }
      uint64_t v14 = *(void *)(updated + 16);
      *(void *)(v0 + 184) = v14;
      if (v14)
      {
        uint64_t v16 = *(void *)(v0 + 120);
        uint64_t v15 = *(void *)(v0 + 128);
        int v17 = *(_DWORD *)(v16 + 80);
        *(_DWORD *)(v0 + 216) = v17;
        *(void *)(v0 + 192) = *(void *)(v16 + 72);
        *(void *)(v0 + 200) = 0;
        sub_251C1EE38(*(void *)(v0 + 176) + ((v17 + 32) & ~(unint64_t)v17), v15, type metadata accessor for StateSnapshot.UpdateType);
        uint64_t v18 = (void *)swift_task_alloc();
        *(void *)(v0 + 208) = v18;
        *uint64_t v18 = v0;
        v18[1] = sub_251C199F0;
        uint64_t v19 = *(void *)(v0 + 128);
        return sub_251C19C4C(v19);
      }
      unint64_t v21 = *(void **)(v0 + 160);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v2 = *(void **)(v0 + 160);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_251C199F0()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251C19AEC, 0, 0);
}

uint64_t sub_251C19AEC()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 200) + 1;
  sub_251C1EFBC(*(void *)(v0 + 128), type metadata accessor for StateSnapshot.UpdateType);
  if (v2 == v1)
  {
    uint64_t v3 = *(void **)(v0 + 160);
    swift_bridgeObjectRelease();

    swift_task_dealloc();
    swift_task_dealloc();
    id v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 192);
    uint64_t v7 = *(void *)(v0 + 200) + 1;
    *(void *)(v0 + 200) = v7;
    sub_251C1EE38(*(void *)(v0 + 176)+ ((*(unsigned __int8 *)(v0 + 216) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 216))+ v6 * v7, *(void *)(v0 + 128), type metadata accessor for StateSnapshot.UpdateType);
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 208) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_251C199F0;
    uint64_t v9 = *(void *)(v0 + 128);
    return sub_251C19C4C(v9);
  }
}

uint64_t sub_251C19C4C(uint64_t a1)
{
  v2[6] = a1;
  v2[7] = v1;
  type metadata accessor for StateSnapshot(0);
  v2[8] = swift_task_alloc();
  uint64_t v3 = sub_251F365B0();
  v2[9] = v3;
  v2[10] = *(void *)(v3 - 8);
  v2[11] = swift_task_alloc();
  uint64_t v4 = sub_251F365D0();
  v2[12] = v4;
  v2[13] = *(void *)(v4 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = type metadata accessor for PhoenixMetricsAggregator.OpenInterval(0);
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v2[21] = type metadata accessor for StateSnapshot.UpdateType(0);
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  sub_251F35C80();
  v2[24] = sub_251F35C70();
  uint64_t v6 = sub_251F35C00();
  v2[25] = v6;
  v2[26] = v5;
  return MEMORY[0x270FA2498](sub_251C19E88, v6, v5);
}

uint64_t sub_251C19E88()
{
  uint64_t v60 = v0;
  sub_251C1EE38(v0[6], v0[23], type metadata accessor for StateSnapshot.UpdateType);
  if (swift_getEnumCaseMultiPayload() == 8)
  {
    uint64_t v1 = (unsigned char *)v0[23];
    swift_release();
    byte_269BA0600 = (*v1 & 1) == 0;
LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
  sub_251C1EFBC(v0[23], type metadata accessor for StateSnapshot.UpdateType);
  if (byte_269BA0600 != 1
    || (uint64_t v2 = (void **)(v0[7] + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager),
        swift_beginAccess(),
        uint64_t v3 = *v2,
        v0[27] = *v2,
        !v3))
  {
    swift_release();
    goto LABEL_10;
  }
  id v56 = v3;
  id v4 = objc_msgSend(v56, sel_homes);
  sub_251A27C8C();
  uint64_t v5 = sub_251F35AC0();

  uint64_t v6 = (void *)StateSnapshot.UpdateType.relevantHome(in:)((Swift::OpaquePointer)v5);
  v0[28] = v6;
  swift_bridgeObjectRelease();
  if (qword_26B21FEF0 != -1) {
    swift_once();
  }
  uint64_t v7 = v0[22];
  uint64_t v8 = v0[6];
  uint64_t v9 = sub_251F350A0();
  __swift_project_value_buffer(v9, (uint64_t)qword_26B21F6E8);
  sub_251C1EE38(v8, v7, type metadata accessor for StateSnapshot.UpdateType);
  uint64_t v10 = sub_251F35080();
  os_log_type_t v11 = sub_251F35FD0();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = v0[22];
  uint64_t v57 = v6;
  if (v12)
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v58 = v15;
    *(_DWORD *)uint64_t v14 = 136315138;
    unint64_t updated = StateSnapshot.UpdateType.description.getter();
    v0[5] = sub_251A00E84(updated, v17, &v58);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    sub_251C1EFBC(v13, type metadata accessor for StateSnapshot.UpdateType);
    _os_log_impl(&dword_2519F3000, v10, v11, "snapshotBlock processing %s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v15, -1, -1);
    MEMORY[0x2533AC760](v14, -1, -1);
  }
  else
  {
    sub_251C1EFBC(v13, type metadata accessor for StateSnapshot.UpdateType);
  }

  uint64_t v55 = *(void *)(v0[7] + OBJC_IVAR____TtC13HomeDataModel9DataModel_snapshotMetricsAggregator);
  v0[29] = v55;
  uint64_t v58 = 0;
  unint64_t v59 = 0xE000000000000000;
  sub_251F36400();
  swift_bridgeObjectRelease();
  uint64_t v58 = 0xD000000000000013;
  unint64_t v59 = 0x8000000251F6E490;
  StateSnapshot.UpdateType.metricsID.getter();
  sub_251F36430();
  sub_251F35800();
  swift_bridgeObjectRelease();
  unint64_t v53 = v59;
  uint64_t v54 = v58;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v20 = swift_task_alloc();
  if (v6)
  {
    id v21 = objc_msgSend(v6, sel_uniqueIdentifier);
    sub_251F34D80();

    uint64_t v22 = sub_251F34DA0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v20, 0, 1, v22);
  }
  else
  {
    uint64_t v23 = sub_251F34DA0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v20, 1, 1, v23);
  }
  uint64_t v24 = v0[19];
  uint64_t v25 = (uint64_t *)v0[17];
  uint64_t v51 = v0[18];
  uint64_t v52 = v0[20];
  uint64_t v26 = v0[15];
  uint64_t v27 = v0[16];
  uint64_t v29 = v0[13];
  uint64_t v28 = v0[14];
  uint64_t v31 = v0[11];
  uint64_t v30 = v0[12];
  uint64_t v32 = v0[10];
  uint64_t v50 = v0[9];
  *uint64_t v25 = v54;
  v25[1] = v53;
  sub_251A1E9B4(v20, (uint64_t)v25 + *(int *)(v26 + 20));
  swift_task_dealloc();
  sub_251C1EE38((uint64_t)v25, v27, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v28, v55 + OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_clock, v30);
  sub_251C1EE38(v27, v24, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
  sub_251F36580();
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
  sub_251C1EFBC(v27, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v24 + *(int *)(v51 + 20), v31, v50);
  sub_251C1EDD0(v24, v52, type metadata accessor for PhoenixMetricsAggregator.OpenInterval);
  sub_251C1EFBC((uint64_t)v25, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
  if (v57)
  {
    uint64_t v33 = qword_26B21E6F8;
    id v34 = v57;
    if (v33 != -1) {
      swift_once();
    }
    uint64_t v35 = (void *)swift_task_alloc();
    v0[30] = v35;
    *uint64_t v35 = v0;
    v35[1] = sub_251C1A724;
    uint64_t v36 = v0[8];
    uint64_t v37 = v0[6];
    uint64_t v38 = (uint64_t)v56;
    uint64_t v39 = (uint64_t)v34;
    goto LABEL_29;
  }
  id v40 = objc_msgSend(v56, sel_homes);
  unint64_t v41 = sub_251F35AC0();
  v0[31] = v41;

  if (!(v41 >> 62))
  {
    uint64_t v42 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v0[32] = v42;
    if (v42) {
      goto LABEL_23;
    }
LABEL_33:
    swift_bridgeObjectRelease();
    swift_release();
    os_log_type_t v47 = (void *)v0[28];
    uint64_t v48 = (void *)v0[27];
    uint64_t v49 = v0[20];
    sub_251B43168(v49);

    sub_251C1EFBC(v49, type metadata accessor for PhoenixMetricsAggregator.OpenInterval);
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v42 = sub_251F366C0();
  swift_bridgeObjectRelease();
  v0[32] = v42;
  if (!v42) {
    goto LABEL_33;
  }
LABEL_23:
  if (v42 < 1)
  {
    __break(1u);
  }
  else
  {
    v0[33] = 0;
    uint64_t v43 = v0[31];
    if ((v43 & 0xC000000000000001) != 0) {
      id v44 = (id)MEMORY[0x2533AB3A0](0);
    }
    else {
      id v44 = *(id *)(v43 + 32);
    }
    uint64_t v27 = (uint64_t)v44;
    v0[34] = v44;
    if (qword_26B21E6F8 == -1) {
      goto LABEL_28;
    }
  }
  swift_once();
LABEL_28:
  uint64_t v45 = v0[27];
  os_log_type_t v46 = (void *)swift_task_alloc();
  v0[35] = v46;
  *os_log_type_t v46 = v0;
  v46[1] = sub_251C1A990;
  uint64_t v36 = v0[8];
  uint64_t v37 = v0[6];
  uint64_t v38 = v45;
  uint64_t v39 = v27;
LABEL_29:
  return sub_251F2AD24(v36, v37, v38, v39, 0);
}

uint64_t sub_251C1A724()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 64);
  swift_task_dealloc();
  sub_251C1EFBC(v2, type metadata accessor for StateSnapshot);
  uint64_t v3 = *(void *)(v1 + 208);
  uint64_t v4 = *(void *)(v1 + 200);
  return MEMORY[0x270FA2498](sub_251C1A87C, v4, v3);
}

uint64_t sub_251C1A87C()
{
  uint64_t v1 = (void *)v0[28];
  swift_release();

  uint64_t v2 = (void *)v0[28];
  uint64_t v3 = (void *)v0[27];
  uint64_t v4 = v0[20];
  sub_251B43168(v4);

  sub_251C1EFBC(v4, type metadata accessor for PhoenixMetricsAggregator.OpenInterval);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_251C1A990()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 64);
  swift_task_dealloc();
  sub_251C1EFBC(v2, type metadata accessor for StateSnapshot);
  uint64_t v3 = *(void *)(v1 + 208);
  uint64_t v4 = *(void *)(v1 + 200);
  return MEMORY[0x270FA2498](sub_251C1AAE8, v4, v3);
}

uint64_t sub_251C1AAE8()
{
  uint64_t v1 = *(void *)(v0 + 264);
  uint64_t v2 = *(void *)(v0 + 256);

  if (v1 + 1 == v2)
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v3 = *(void **)(v0 + 224);
    uint64_t v4 = *(void **)(v0 + 216);
    uint64_t v5 = *(void *)(v0 + 160);
    sub_251B43168(v5);

    sub_251C1EFBC(v5, type metadata accessor for PhoenixMetricsAggregator.OpenInterval);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 264) + 1;
    *(void *)(v0 + 264) = v8;
    uint64_t v9 = *(void *)(v0 + 248);
    if ((v9 & 0xC000000000000001) != 0) {
      id v10 = (id)MEMORY[0x2533AB3A0]();
    }
    else {
      id v10 = *(id *)(v9 + 8 * v8 + 32);
    }
    uint64_t v11 = (uint64_t)v10;
    *(void *)(v0 + 272) = v10;
    if (qword_26B21E6F8 != -1) {
      swift_once();
    }
    uint64_t v12 = *(void *)(v0 + 216);
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 280) = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_251C1A990;
    uint64_t v14 = *(void *)(v0 + 64);
    uint64_t v15 = *(void *)(v0 + 48);
    return sub_251F2AD24(v14, v15, v12, v11, 0);
  }
}

uint64_t sub_251C1AD10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  v4[3] = updated;
  v4[4] = *(void *)(updated - 8);
  v4[5] = swift_task_alloc();
  v4[6] = swift_task_alloc();
  v4[7] = swift_task_alloc();
  v4[8] = swift_task_alloc();
  v4[9] = swift_task_alloc();
  v4[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2202A8);
  v4[11] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD8);
  v4[12] = v6;
  v4[13] = *(void *)(v6 - 8);
  v4[14] = swift_task_alloc();
  v4[15] = sub_251F35C80();
  v4[16] = sub_251F35C70();
  uint64_t v8 = sub_251F35C00();
  v4[17] = v8;
  v4[18] = v7;
  return MEMORY[0x270FA2498](sub_251C1AED8, v8, v7);
}

uint64_t sub_251C1AED8()
{
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BE0);
  __swift_project_value_buffer(v1, (uint64_t)qword_26B21FF38);
  sub_251F35D20();
  uint64_t v2 = sub_251F35C70();
  v0[19] = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[20] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_251C1AFF4;
  uint64_t v4 = v0[11];
  uint64_t v5 = v0[12];
  uint64_t v6 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v4, v2, v6, v5);
}

uint64_t sub_251C1AFF4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 144);
  uint64_t v3 = *(void *)(v1 + 136);
  return MEMORY[0x270FA2498](sub_251C1B138, v3, v2);
}

uint64_t sub_251C1B138()
{
  uint64_t v51 = v0;
  uint64_t v1 = v0[11];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[4] + 48))(v1, 1, v0[3]) == 1)
  {
    (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
    swift_release();
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_251F350A0();
    __swift_project_value_buffer(v2, (uint64_t)qword_26B21F290);
    uint64_t v3 = sub_251F35080();
    os_log_type_t v4 = sub_251F35FA0();
    if (!os_log_type_enabled(v3, v4)) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  sub_251C1EDD0(v1, v0[10], type metadata accessor for StateSnapshot.UpdateType);
  if (sub_251F35D80())
  {
    uint64_t v9 = v0[13];
    uint64_t v8 = v0[14];
    uint64_t v10 = v0[12];
    uint64_t v11 = v0[10];
    swift_release();
    sub_251C1EFBC(v11, type metadata accessor for StateSnapshot.UpdateType);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_251F350A0();
    __swift_project_value_buffer(v12, (uint64_t)qword_26B21F290);
    uint64_t v3 = sub_251F35080();
    os_log_type_t v4 = sub_251F35FA0();
    if (!os_log_type_enabled(v3, v4)) {
      goto LABEL_6;
    }
LABEL_5:
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_2519F3000, v3, v4, "Task streamTask exited", v5, 2u);
    MEMORY[0x2533AC760](v5, -1, -1);
LABEL_6:

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  sub_251C1EE38(v0[10], v0[9], type metadata accessor for StateSnapshot.UpdateType);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v14 = (unsigned __int8 *)v0[9];
  if (EnumCaseMultiPayload == 8)
  {
    int v15 = *v14;
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_251F350A0();
    __swift_project_value_buffer(v16, (uint64_t)qword_26B21F290);
    unint64_t v17 = sub_251F35080();
    os_log_type_t v18 = sub_251F35FA0();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 67109120;
      *(_DWORD *)(v19 + 4) = v15;
      _os_log_impl(&dword_2519F3000, v17, v18, "Received a snapshotStream update to disable: %{BOOL}d", (uint8_t *)v19, 8u);
      MEMORY[0x2533AC760](v19, -1, -1);
    }

LABEL_31:
    uint64_t v43 = (void *)swift_task_alloc();
    v0[21] = v43;
    *uint64_t v43 = v0;
    v43[1] = sub_251C1B944;
    uint64_t v44 = v0[10];
    return sub_251C19C4C(v44);
  }
  sub_251C1EFBC((uint64_t)v14, type metadata accessor for StateSnapshot.UpdateType);
  if (byte_269BA0600)
  {
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v20 = v0[10];
    uint64_t v21 = v0[7];
    uint64_t v22 = sub_251F350A0();
    __swift_project_value_buffer(v22, (uint64_t)qword_26B21F290);
    sub_251C1EE38(v20, v21, type metadata accessor for StateSnapshot.UpdateType);
    uint64_t v23 = sub_251F35080();
    os_log_type_t v24 = sub_251F35FA0();
    BOOL v25 = os_log_type_enabled(v23, v24);
    uint64_t v26 = v0[7];
    if (v25)
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v50 = v28;
      *(_DWORD *)uint64_t v27 = 136315138;
      unint64_t updated = StateSnapshot.UpdateType.description.getter();
      *(void *)(v27 + 4) = sub_251A00E84(updated, v30, &v50);
      swift_bridgeObjectRelease();
      sub_251C1EFBC(v26, type metadata accessor for StateSnapshot.UpdateType);
      _os_log_impl(&dword_2519F3000, v23, v24, "Processing update %s", (uint8_t *)v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v28, -1, -1);
      MEMORY[0x2533AC760](v27, -1, -1);
    }
    else
    {
      sub_251C1EFBC(v0[7], type metadata accessor for StateSnapshot.UpdateType);
    }

    goto LABEL_31;
  }
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v31 = v0[10];
  uint64_t v32 = v0[8];
  uint64_t v33 = sub_251F350A0();
  __swift_project_value_buffer(v33, (uint64_t)qword_26B21F290);
  sub_251C1EE38(v31, v32, type metadata accessor for StateSnapshot.UpdateType);
  id v34 = sub_251F35080();
  os_log_type_t v35 = sub_251F35FA0();
  BOOL v36 = os_log_type_enabled(v34, v35);
  uint64_t v37 = v0[10];
  uint64_t v38 = v0[8];
  if (v36)
  {
    uint64_t v39 = swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    uint64_t v50 = v40;
    *(_DWORD *)uint64_t v39 = 136315138;
    unint64_t v41 = StateSnapshot.UpdateType.description.getter();
    *(void *)(v39 + 4) = sub_251A00E84(v41, v42, &v50);
    swift_bridgeObjectRelease();
    sub_251C1EFBC(v38, type metadata accessor for StateSnapshot.UpdateType);
    _os_log_impl(&dword_2519F3000, v34, v35, "Updates on streamTask are halted, skipping update: %s", (uint8_t *)v39, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v40, -1, -1);
    MEMORY[0x2533AC760](v39, -1, -1);
  }
  else
  {

    sub_251C1EFBC(v38, type metadata accessor for StateSnapshot.UpdateType);
  }
  sub_251C1EFBC(v37, type metadata accessor for StateSnapshot.UpdateType);
  uint64_t v45 = sub_251F35C70();
  v0[19] = v45;
  os_log_type_t v46 = (void *)swift_task_alloc();
  v0[20] = v46;
  *os_log_type_t v46 = v0;
  v46[1] = sub_251C1AFF4;
  uint64_t v47 = v0[11];
  uint64_t v48 = v0[12];
  uint64_t v49 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v47, v45, v49, v48);
}

uint64_t sub_251C1B944()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 144);
  uint64_t v3 = *(void *)(v1 + 136);
  return MEMORY[0x270FA2498](sub_251C1BA64, v3, v2);
}

uint64_t sub_251C1BA64()
{
  uint64_t v31 = v0;
  if ((byte_269BA0600 & 1) == 0)
  {
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v1 = v0[10];
    uint64_t v2 = v0[6];
    uint64_t v3 = sub_251F350A0();
    __swift_project_value_buffer(v3, (uint64_t)qword_26B21F290);
    sub_251C1EE38(v1, v2, type metadata accessor for StateSnapshot.UpdateType);
    os_log_type_t v4 = sub_251F35080();
    os_log_type_t v5 = sub_251F35FA0();
    BOOL v6 = os_log_type_enabled(v4, v5);
    uint64_t v7 = v0[6];
    if (v6)
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v30 = v9;
      *(_DWORD *)uint64_t v8 = 136315138;
      unint64_t updated = StateSnapshot.UpdateType.description.getter();
      *(void *)(v8 + 4) = sub_251A00E84(updated, v11, &v30);
      swift_bridgeObjectRelease();
      sub_251C1EFBC(v7, type metadata accessor for StateSnapshot.UpdateType);
      _os_log_impl(&dword_2519F3000, v4, v5, "Calling streamUpdateCompleted for update: %s", (uint8_t *)v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v9, -1, -1);
      MEMORY[0x2533AC760](v8, -1, -1);
    }
    else
    {
      sub_251C1EFBC(v0[6], type metadata accessor for StateSnapshot.UpdateType);
    }
  }
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v12 = v0[10];
  uint64_t v13 = v0[5];
  uint64_t v14 = sub_251F350A0();
  __swift_project_value_buffer(v14, (uint64_t)qword_26B21F290);
  sub_251C1EE38(v12, v13, type metadata accessor for StateSnapshot.UpdateType);
  int v15 = sub_251F35080();
  os_log_type_t v16 = sub_251F35FA0();
  BOOL v17 = os_log_type_enabled(v15, v16);
  uint64_t v18 = v0[10];
  uint64_t v19 = v0[5];
  if (v17)
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v30 = v21;
    *(_DWORD *)uint64_t v20 = 136315138;
    unint64_t v22 = StateSnapshot.UpdateType.description.getter();
    *(void *)(v20 + 4) = sub_251A00E84(v22, v23, &v30);
    swift_bridgeObjectRelease();
    sub_251C1EFBC(v19, type metadata accessor for StateSnapshot.UpdateType);
    _os_log_impl(&dword_2519F3000, v15, v16, "asyncStream update handling completed for update: %s", (uint8_t *)v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v21, -1, -1);
    MEMORY[0x2533AC760](v20, -1, -1);
  }
  else
  {

    sub_251C1EFBC(v19, type metadata accessor for StateSnapshot.UpdateType);
  }
  sub_251C1EFBC(v18, type metadata accessor for StateSnapshot.UpdateType);
  uint64_t v24 = sub_251F35C70();
  v0[19] = v24;
  BOOL v25 = (void *)swift_task_alloc();
  v0[20] = v25;
  *BOOL v25 = v0;
  v25[1] = sub_251C1AFF4;
  uint64_t v26 = v0[11];
  uint64_t v27 = v0[12];
  uint64_t v28 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v26, v24, v28, v27);
}

uint64_t sub_251C1BE60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[8] = a4;
  sub_251F35C80();
  v4[9] = sub_251F35C70();
  uint64_t v6 = sub_251F35C00();
  v4[10] = v6;
  v4[11] = v5;
  return MEMORY[0x270FA2498](sub_251C1BEF8, v6, v5);
}

uint64_t sub_251C1BEF8()
{
  uint64_t v1 = v0[8] + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x2533AC870](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    uint64_t v4 = v0[8] + 16;
    uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC13HomeDataModel9DataModel_matterSnapshotBatchManager);
    v0[12] = v5;
    swift_retain();

    v0[13] = swift_allocObject();
    swift_beginAccess();
    uint64_t v6 = (void *)MEMORY[0x2533AC870](v4);
    swift_unknownObjectWeakInit();

    return MEMORY[0x270FA2498](sub_251C1C0F4, v5, 0);
  }
  else
  {
    swift_release();
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_251F350A0();
    __swift_project_value_buffer(v7, (uint64_t)qword_26B21F290);
    uint64_t v8 = sub_251F35080();
    os_log_type_t v9 = sub_251F35FA0();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_2519F3000, v8, v9, "Task matterStreamTask with BatchManager exited", v10, 2u);
      MEMORY[0x2533AC760](v10, -1, -1);
    }

    unint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

uint64_t sub_251C1C0F4()
{
  sub_251C14478((uint64_t)&unk_269BA0638, v0[13]);
  swift_release();
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  return MEMORY[0x270FA2498](sub_251C1C178, v1, v2);
}

uint64_t sub_251C1C178()
{
  swift_release();
  swift_release();
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_251F350A0();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B21F290);
  uint64_t v2 = sub_251F35080();
  os_log_type_t v3 = sub_251F35FA0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_2519F3000, v2, v3, "Task matterStreamTask with BatchManager exited", v4, 2u);
    MEMORY[0x2533AC760](v4, -1, -1);
  }

  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_251C1C2A0(uint64_t a1, uint64_t a2)
{
  v2[16] = a1;
  v2[17] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  v2[18] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251C1C334, 0, 0);
}

uint64_t sub_251C1C334()
{
  if ((sub_251F35D80() & 1) != 0
    || (uint64_t v1 = v0[17] + 16, swift_beginAccess(), v2 = MEMORY[0x2533AC870](v1), (v0[19] = v2) == 0))
  {
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    sub_251F35C80();
    v0[20] = sub_251F35C70();
    uint64_t v4 = sub_251F35C00();
    return MEMORY[0x270FA2498](sub_251C1C434, v4, v3);
  }
}

uint64_t sub_251C1C434()
{
  uint64_t v1 = *(char **)(v0 + 152);
  swift_release();
  uint64_t v2 = (void **)&v1[OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager];
  swift_beginAccess();
  uint64_t v3 = *v2;
  *(void *)(v0 + 168) = *v2;
  id v4 = v3;

  return MEMORY[0x270FA2498](sub_251C1C4DC, 0, 0);
}

uint64_t sub_251C1C4DC()
{
  if (*(void *)(v0 + 168))
  {
    uint64_t v1 = *(void *)(v0 + 136) + 16;
    swift_beginAccess();
    uint64_t v2 = MEMORY[0x2533AC870](v1);
    *(void *)(v0 + 176) = v2;
    uint64_t v3 = *(void **)(v0 + 168);
    if (v2)
    {
      uint64_t v4 = *(void *)(v0 + 128);
      id v5 = objc_msgSend(v3, sel_homes);
      sub_251A27C8C();
      unint64_t v6 = sub_251F35AC0();

      _s13HomeDataModel19MatterStateSnapshotV10UpdateTypeO6unique7updates2inSayAEGAI_SaySo6HMHomeCGtFZ_0(v4, v6);
      uint64_t v8 = v7;
      *(void *)(v0 + 184) = v7;
      swift_bridgeObjectRelease();
      if (*(void *)(v4 + 16) >= 2uLL)
      {
        uint64_t v9 = *(void *)(v0 + 144);
        uint64_t v10 = *(void *)(v0 + 128);
        swift_retain();
        uint64_t v11 = sub_251C13C78(v10);
        uint64_t v12 = sub_251C13C78(v8);
        uint64_t v13 = sub_251F35CD0();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v9, 1, 1, v13);
        uint64_t v14 = swift_allocObject();
        swift_weakInit();
        int v15 = (void *)swift_allocObject();
        v15[2] = 0;
        v15[3] = 0;
        v15[4] = v14;
        v15[5] = v11;
        v15[6] = v12;
        sub_251ACBCF4(v9, (uint64_t)&unk_269BA0668, (uint64_t)v15);
        swift_release();
        swift_release();
      }
      uint64_t v16 = *(void *)(v8 + 16);
      *(void *)(v0 + 192) = v16;
      if (v16)
      {
        *(void *)(v0 + 200) = 0;
        uint64_t v17 = *(void *)(v0 + 184);
        uint64_t v18 = *(void *)(v0 + 168);
        uint64_t v19 = *(void **)(v17 + 32);
        *(void *)(v0 + 208) = v19;
        uint64_t v20 = *(void **)(v17 + 40);
        *(void *)(v0 + 216) = v20;
        char v21 = *(unsigned char *)(v17 + 48);
        *(unsigned char *)(v0 + 105) = v21;
        *(void *)(v0 + 88) = v19;
        *(void *)(v0 + 96) = v20;
        *(unsigned char *)(v0 + 104) = v21;
        sub_251A4D4C4(v19, v20, v21);
        unint64_t v22 = (void *)swift_task_alloc();
        *(void *)(v0 + 224) = v22;
        *unint64_t v22 = v0;
        v22[1] = sub_251C1C7C4;
        return sub_251C1CA18(v0 + 88, v18);
      }
      uint64_t v24 = *(void **)(v0 + 168);
      swift_bridgeObjectRelease();

      uint64_t v3 = *(void **)(v0 + 176);
    }
  }
  swift_task_dealloc();
  BOOL v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_251C1C7C4()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251C1C8C0, 0, 0);
}

uint64_t sub_251C1C8C0()
{
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 200) + 1;
  sub_251A4D4A0(*(id *)(v0 + 208), *(id *)(v0 + 216), *(unsigned char *)(v0 + 105));
  if (v2 == v1)
  {
    uint64_t v3 = *(void **)(v0 + 168);
    swift_bridgeObjectRelease();

    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 200) + 1;
    *(void *)(v0 + 200) = v6;
    uint64_t v7 = *(void *)(v0 + 168);
    uint64_t v8 = *(void *)(v0 + 184) + 24 * v6;
    uint64_t v9 = *(void **)(v8 + 32);
    *(void *)(v0 + 208) = v9;
    uint64_t v10 = *(void **)(v8 + 40);
    *(void *)(v0 + 216) = v10;
    char v11 = *(unsigned char *)(v8 + 48);
    *(unsigned char *)(v0 + 105) = v11;
    *(void *)(v0 + 88) = v9;
    *(void *)(v0 + 96) = v10;
    *(unsigned char *)(v0 + 104) = v11;
    sub_251A4D4C4(v9, v10, v11);
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 224) = v12;
    void *v12 = v0;
    v12[1] = sub_251C1C7C4;
    return sub_251C1CA18(v0 + 88, v7);
  }
}

uint64_t sub_251C1CA18(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 80) = a2;
  *(void *)(v3 + 88) = v2;
  uint64_t v5 = sub_251F365B0();
  *(void *)(v3 + 96) = v5;
  *(void *)(v3 + 104) = *(void *)(v5 - 8);
  *(void *)(v3 + 112) = swift_task_alloc();
  uint64_t v6 = sub_251F365D0();
  *(void *)(v3 + 120) = v6;
  *(void *)(v3 + 128) = *(void *)(v6 - 8);
  *(void *)(v3 + 136) = swift_task_alloc();
  *(void *)(v3 + 144) = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  *(void *)(v3 + 152) = swift_task_alloc();
  *(void *)(v3 + 160) = swift_task_alloc();
  *(void *)(v3 + 168) = type metadata accessor for PhoenixMetricsAggregator.OpenInterval(0);
  *(void *)(v3 + 176) = swift_task_alloc();
  *(void *)(v3 + 184) = swift_task_alloc();
  *(_OWORD *)(v3 + 192) = *(_OWORD *)a1;
  *(unsigned char *)(v3 + 65) = *(unsigned char *)(a1 + 16);
  return MEMORY[0x270FA2498](sub_251C1CBC8, 0, 0);
}

uint64_t sub_251C1CBC8()
{
  uint64_t v60 = v0;
  uint64_t v1 = *(unsigned __int8 *)(v0 + 65);
  id v2 = objc_msgSend(*(id *)(v0 + 80), sel_homes);
  sub_251A27C8C();
  uint64_t v3 = sub_251F35AC0();

  switch(v1)
  {
    case 1:
    case 2:
      uint64_t v4 = *(void *)(v0 + 200);
      goto LABEL_4;
    case 3:
      swift_bridgeObjectRetain();
      unint64_t v6 = v3;
      break;
    default:
      uint64_t v4 = *(void *)(v0 + 192);
LABEL_4:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EBB0);
      uint64_t v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_251F38640;
      *(void *)(v5 + 32) = v4;
      unint64_t v57 = v5;
      sub_251F35AE0();
      unint64_t v6 = v57;
      break;
  }
  *(void *)(v0 + 208) = v6;
  sub_251A4D4C4(*(id *)(v0 + 192), *(id *)(v0 + 200), *(unsigned char *)(v0 + 65));
  swift_bridgeObjectRelease();
  if (qword_26B21FEF0 != -1) {
    swift_once();
  }
  uint64_t v7 = *(void **)(v0 + 192);
  uint64_t v8 = *(void **)(v0 + 200);
  char v9 = *(unsigned char *)(v0 + 65);
  uint64_t v10 = sub_251F350A0();
  __swift_project_value_buffer(v10, (uint64_t)qword_26B21F6E8);
  sub_251A4D4C4(v7, v8, v9);
  sub_251A4D4C4(v7, v8, v9);
  char v11 = sub_251F35080();
  os_log_type_t v12 = sub_251F35FD0();
  BOOL v13 = os_log_type_enabled(v11, v12);
  char v14 = *(unsigned char *)(v0 + 65);
  int v15 = *(void **)(v0 + 192);
  uint64_t v16 = *(void **)(v0 + 200);
  unint64_t v55 = v6;
  if (v13)
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315138;
    uint64_t v56 = v52;
    unint64_t v57 = (unint64_t)v15;
    unint64_t v58 = (unint64_t)v16;
    char v59 = v14;
    uint64_t updated = MatterStateSnapshot.UpdateType.description.getter();
    *(void *)(v0 + 72) = sub_251A00E84(updated, v19, &v56);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    sub_251A4D4A0(v15, v16, v14);
    sub_251A4D4A0(v15, v16, v14);
    _os_log_impl(&dword_2519F3000, v11, v12, "matterSnapshotBlock processing %s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v52, -1, -1);
    uint64_t v20 = v17;
    unint64_t v6 = v55;
    MEMORY[0x2533AC760](v20, -1, -1);
  }
  else
  {
    sub_251A4D4A0(v15, v16, v14);
    sub_251A4D4A0(v15, v16, v14);
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v21 = swift_task_alloc();
  *(void *)(v0 + 216) = v21;
  unint64_t v22 = (void *)(v6 >> 62);
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v27 == 1)
    {
      swift_bridgeObjectRetain();
      if (sub_251F366C0()) {
        goto LABEL_14;
      }
      swift_bridgeObjectRelease();
    }
LABEL_21:
    uint64_t v28 = sub_251F34DA0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v21, 1, 1, v28);
    goto LABEL_22;
  }
  if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1) {
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
LABEL_14:
  if ((v6 & 0xC000000000000001) != 0) {
    goto LABEL_36;
  }
  if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    JUMPOUT(0x251C1D404);
  }
  for (id i = *(id *)(v6 + 32); ; id i = (id)MEMORY[0x2533AB3A0](0, v6))
  {
    uint64_t v24 = i;
    swift_bridgeObjectRelease();
    id v25 = objc_msgSend(v24, sel_uniqueIdentifier);

    sub_251F34D80();
    uint64_t v26 = sub_251F34DA0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v21, 0, 1, v26);
LABEL_22:
    uint64_t v51 = *(void *)(*(void *)(v0 + 88) + OBJC_IVAR____TtC13HomeDataModel9DataModel_snapshotMetricsAggregator);
    *(void *)(v0 + 224) = v51;
    unint64_t v57 = 0;
    unint64_t v58 = 0xE000000000000000;
    sub_251F36400();
    swift_bridgeObjectRelease();
    unint64_t v57 = 0xD000000000000019;
    unint64_t v58 = 0x8000000251F6E470;
    uint64_t v53 = v21;
    uint64_t v54 = v22;
    uint64_t v29 = *(void *)(v0 + 176);
    unint64_t v22 = *(void **)(v0 + 160);
    uint64_t v49 = *(void *)(v0 + 168);
    uint64_t v50 = *(void *)(v0 + 184);
    uint64_t v30 = *(void *)(v0 + 144);
    uint64_t v31 = *(void *)(v0 + 152);
    uint64_t v33 = *(void *)(v0 + 128);
    uint64_t v32 = *(void *)(v0 + 136);
    uint64_t v34 = *(void *)(v0 + 104);
    uint64_t v46 = *(void *)(v0 + 120);
    unint64_t v47 = *(void *)(v0 + 112);
    uint64_t v48 = *(void *)(v0 + 96);
    sub_251F36430();
    sub_251F35800();
    swift_bridgeObjectRelease();
    unint64_t v35 = v57;
    unint64_t v36 = v58;
    sub_251A1B128(v53, (uint64_t)v22 + *(int *)(v30 + 20), &qword_26B21FF90);
    *unint64_t v22 = v35;
    v22[1] = v36;
    sub_251C1EE38((uint64_t)v22, v31, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
    uint64_t v21 = v46;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v32, v51 + OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_clock, v46);
    sub_251C1EE38(v31, v29, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
    unint64_t v6 = v47;
    sub_251F36580();
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v46);
    sub_251C1EFBC(v31, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v34 + 32))(v29 + *(int *)(v49 + 20), v47, v48);
    sub_251C1EDD0(v29, v50, type metadata accessor for PhoenixMetricsAggregator.OpenInterval);
    sub_251C1EFBC((uint64_t)v22, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
    if (v54) {
      break;
    }
    uint64_t v37 = *(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10);
    *(void *)(v0 + 232) = v37;
    if (!v37) {
      goto LABEL_28;
    }
LABEL_24:
    *(void *)(v0 + 240) = sub_251F35C80();
    if (v37 >= 1)
    {
      *(void *)(v0 + 248) = 0;
      uint64_t v38 = *(void *)(v0 + 208);
      if ((v38 & 0xC000000000000001) != 0) {
        id v39 = (id)MEMORY[0x2533AB3A0](0);
      }
      else {
        id v39 = *(id *)(v38 + 32);
      }
      *(void *)(v0 + 256) = v39;
      *(void *)(v0 + 264) = sub_251F35C70();
      uint64_t v45 = sub_251F35C00();
      return MEMORY[0x270FA2498](sub_251C1D424, v45, v44);
    }
    __break(1u);
LABEL_36:
    ;
  }
  swift_bridgeObjectRetain();
  uint64_t v37 = sub_251F366C0();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 232) = v37;
  if (v37) {
    goto LABEL_24;
  }
LABEL_28:
  uint64_t v40 = *(void *)(v0 + 216);
  uint64_t v41 = *(void *)(v0 + 184);
  swift_bridgeObjectRelease();
  sub_251B43168(v41);
  sub_251C1EFBC(v41, type metadata accessor for PhoenixMetricsAggregator.OpenInterval);
  sub_251A1B064(v40, &qword_26B21FF90);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v42 = *(uint64_t (**)(void))(v0 + 8);
  return v42();
}

uint64_t sub_251C1D424()
{
  swift_release();
  if (qword_26B21E388 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251C1D4BC, 0, 0);
}

uint64_t sub_251C1D4BC()
{
  *(void *)(v0 + 272) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251C1D548, v2, v1);
}

uint64_t sub_251C1D548()
{
  char v1 = *(unsigned char *)(v0 + 65);
  uint64_t v3 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 200);
  swift_release();
  *(void *)(v0 + 48) = v3;
  *(void *)(v0 + 56) = v2;
  *(unsigned char *)(v0 + 64) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 280) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_251C1D620;
  uint64_t v5 = *(void *)(v0 + 256);
  return sub_251B5A374(v0 + 16, v0 + 48, v5);
}

uint64_t sub_251C1D620()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_251C1D778, 0, 0);
}

uint64_t sub_251C1D778()
{
  uint64_t v1 = *(void *)(v0 + 248);
  uint64_t v2 = *(void *)(v0 + 232);

  if (v1 + 1 == v2)
  {
    uint64_t v3 = *(void *)(v0 + 216);
    uint64_t v4 = *(void *)(v0 + 184);
    swift_bridgeObjectRelease();
    sub_251B43168(v4);
    sub_251C1EFBC(v4, type metadata accessor for PhoenixMetricsAggregator.OpenInterval);
    sub_251A1B064(v3, &qword_26B21FF90);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 248) + 1;
    *(void *)(v0 + 248) = v7;
    uint64_t v8 = *(void *)(v0 + 208);
    if ((v8 & 0xC000000000000001) != 0) {
      id v9 = (id)MEMORY[0x2533AB3A0]();
    }
    else {
      id v9 = *(id *)(v8 + 8 * v7 + 32);
    }
    *(void *)(v0 + 256) = v9;
    *(void *)(v0 + 264) = sub_251F35C70();
    uint64_t v11 = sub_251F35C00();
    return MEMORY[0x270FA2498](sub_251C1D424, v11, v10);
  }
}

uint64_t sub_251C1D928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[11] = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220C90);
  v4[12] = v5;
  v4[13] = *(void *)(v5 - 8);
  v4[14] = swift_task_alloc();
  v4[15] = sub_251F35C80();
  v4[16] = sub_251F35C70();
  uint64_t v7 = sub_251F35C00();
  v4[17] = v7;
  v4[18] = v6;
  return MEMORY[0x270FA2498](sub_251C1DA24, v7, v6);
}

uint64_t sub_251C1DA24()
{
  if (qword_26B21FD70 != -1) {
    swift_once();
  }
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF08);
  __swift_project_value_buffer(v1, (uint64_t)qword_26B21FD10);
  sub_251F35D20();
  v0[19] = OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager;
  swift_beginAccess();
  uint64_t v2 = sub_251F35C70();
  v0[20] = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[21] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_251C1DB84;
  uint64_t v4 = v0[12];
  uint64_t v5 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v0 + 5, v2, v5, v4);
}

uint64_t sub_251C1DB84()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 144);
  uint64_t v3 = *(void *)(v1 + 136);
  return MEMORY[0x270FA2498](sub_251C1DCC8, v3, v2);
}

uint64_t sub_251C1DCC8()
{
  uint64_t v2 = *(void **)(v0 + 40);
  uint64_t v1 = *(void **)(v0 + 48);
  *(void *)(v0 + 176) = v2;
  *(void *)(v0 + 184) = v1;
  int v3 = *(unsigned __int8 *)(v0 + 56);
  *(unsigned char *)(v0 + 57) = v3;
  if (v3 == 255)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 104) + 8))(*(void *)(v0 + 112), *(void *)(v0 + 96));
    swift_release();
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_251F350A0();
    __swift_project_value_buffer(v8, (uint64_t)qword_26B21F290);
    uint64_t v9 = sub_251F35080();
    os_log_type_t v10 = sub_251F35FA0();
    if (!os_log_type_enabled(v9, v10)) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (byte_269BA0600)
  {
    if ((sub_251F35D80() & 1) == 0)
    {
      uint64_t v4 = *(void **)(*(void *)(v0 + 88) + *(void *)(v0 + 152));
      *(void *)(v0 + 192) = v4;
      if (v4)
      {
        *(void *)(v0 + 64) = v2;
        *(void *)(v0 + 72) = v1;
        *(unsigned char *)(v0 + 80) = v3;
        id v5 = v4;
        uint64_t v6 = (void *)swift_task_alloc();
        *(void *)(v0 + 200) = v6;
        *uint64_t v6 = v0;
        v6[1] = sub_251C1E028;
        return sub_251C1CA18(v0 + 64, (uint64_t)v5);
      }
    }
    (*(void (**)(void, void))(*(void *)(v0 + 104) + 8))(*(void *)(v0 + 112), *(void *)(v0 + 96));
    sub_251C1E730(v2, v1, v3);
    swift_release();
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_251F350A0();
    __swift_project_value_buffer(v17, (uint64_t)qword_26B21F290);
    uint64_t v9 = sub_251F35080();
    os_log_type_t v10 = sub_251F35FA0();
    if (!os_log_type_enabled(v9, v10)) {
      goto LABEL_12;
    }
LABEL_11:
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl(&dword_2519F3000, v9, v10, "Task matterStreamTask exited", v11, 2u);
    MEMORY[0x2533AC760](v11, -1, -1);
LABEL_12:

    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
  sub_251C1E730(v2, v1, v3);
  uint64_t v13 = sub_251F35C70();
  *(void *)(v0 + 160) = v13;
  char v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v14;
  *char v14 = v0;
  v14[1] = sub_251C1DB84;
  uint64_t v15 = *(void *)(v0 + 96);
  uint64_t v16 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v0 + 40, v13, v16, v15);
}

uint64_t sub_251C1E028()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 144);
  uint64_t v3 = *(void *)(v1 + 136);
  return MEMORY[0x270FA2498](sub_251C1E148, v3, v2);
}

uint64_t sub_251C1E148()
{
  uint64_t v1 = *(void **)(v0 + 192);
  sub_251C1E730(*(id *)(v0 + 176), *(id *)(v0 + 184), *(unsigned char *)(v0 + 57));

  uint64_t v2 = sub_251F35C70();
  *(void *)(v0 + 160) = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_251C1DB84;
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v5 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v0 + 40, v2, v5, v4);
}

uint64_t sub_251C1E228(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_251AB3DD4;
  return sub_251C1D928(a1, v4, v5, v6);
}

uint64_t sub_251C1E2E8()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_251C1E324(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_251AB3DD4;
  return sub_251C1BE60(a1, v4, v5, v6);
}

uint64_t sub_251C1E3D8(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_251AB3DD4;
  return sub_251C1C2A0(a1, v1);
}

uint64_t sub_251C1E470()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_251C1E4A8()
{
  return objectdestroy_15Tm(&qword_26B21FF08);
}

uint64_t sub_251C1E4B4(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF08) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  os_log_type_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *os_log_type_t v10 = v2;
  v10[1] = sub_251AB3DD4;
  return sub_251C15144(a1, v6, v7, v8, v9);
}

uint64_t sub_251C1E5DC()
{
  return objectdestroy_20Tm_0(&qword_26B21FF08);
}

uint64_t sub_251C1E5E8(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF08) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v9 = *(void *)(v1 + v6);
  uint64_t v10 = v1 + v5;
  uint64_t v11 = (uint64_t *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  char v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  *char v14 = v2;
  v14[1] = sub_251AB3DD4;
  return sub_251C17BF8(a1, v7, v8, v10, v9, v12, v13);
}

void sub_251C1E730(id a1, id a2, char a3)
{
  if (a3 != -1) {
    sub_251A4D4A0(a1, a2, a3);
  }
}

uint64_t sub_251C1E748(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_251AB3DD4;
  return sub_251B43D44(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_251C1E814(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_251AB3A34;
  return sub_251C1AD10(a1, v4, v5, v6);
}

uint64_t objectdestroy_6Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_251C1E918(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_251AB3DD4;
  return sub_251C19020(a1, v4, v5, v6);
}

uint64_t sub_251C1E9CC(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_251AB3DD4;
  return sub_251C19460(a1, v1);
}

uint64_t sub_251C1EA64()
{
  return objectdestroy_15Tm(&qword_26B220BE0);
}

uint64_t objectdestroy_15Tm(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 32) & ~v4;
  uint64_t v6 = v4 | 7;
  unint64_t v7 = ((*(void *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  swift_release();
  return MEMORY[0x270FA0238](v1, v7, v6);
}

uint64_t sub_251C1EB54(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B220BE0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_251AB3DD4;
  return sub_251C14AF8(a1, v6, v7, v8, v9);
}

uint64_t sub_251C1EC7C()
{
  return objectdestroy_20Tm_0(&qword_26B220BE0);
}

uint64_t sub_251C1EC88(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B220BE0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v9 = *(void *)(v1 + v6);
  uint64_t v10 = v1 + v5;
  uint64_t v11 = (uint64_t *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  char v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  *char v14 = v2;
  v14[1] = sub_251AB3A34;
  return sub_251C16CD8(a1, v7, v8, v10, v9, v12, v13);
}

uint64_t sub_251C1EDD0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251C1EE38(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t objectdestroy_31Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_251C1EEF4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_251AB3DD4;
  return sub_251B43AF4(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_251C1EFBC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id HMHomeManager.matterDevice(with:inHomeWithID:)(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend(v2, sel_homes);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v5 = sub_251F35AC0();

  uint64_t v20 = a2;
  uint64_t v6 = sub_251A95638(sub_251C1F58C, (uint64_t)v19, v5);
  swift_bridgeObjectRelease();
  if (v6)
  {
    id v7 = objc_msgSend(v6, sel_accessories);
    sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
    unint64_t v8 = sub_251F35AC0();

    if (v8 >> 62) {
      goto LABEL_15;
    }
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v9; uint64_t v9 = sub_251F366C0())
    {
      uint64_t v10 = 4;
      while (1)
      {
        id v11 = (v8 & 0xC000000000000001) != 0
            ? (id)MEMORY[0x2533AB3A0](v10 - 4, v8)
            : *(id *)(v8 + 8 * v10);
        uint64_t v12 = v11;
        uint64_t v13 = v10 - 3;
        if (__OFADD__(v10 - 4, 1)) {
          break;
        }
        id v14 = objc_msgSend(v11, sel_hdm_matterNodeID);
        if (v14)
        {
          uint64_t v15 = v14;
          uint64_t v21 = 0;
          char v22 = 1;
          sub_251F36D80();

          if ((v22 & 1) == 0 && v21 == a1)
          {
            swift_bridgeObjectRelease_n();
            id v16 = sub_251D90BA4(v12);

            return v16;
          }
        }

        ++v10;
        if (v13 == v9) {
          goto LABEL_16;
        }
      }
      __break(1u);
LABEL_15:
      swift_bridgeObjectRetain();
    }
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  return 0;
}

void *HMHomeManager.accessory(with:inHomeWithID:)(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend(v2, sel_homes);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v5 = sub_251F35AC0();

  uint64_t v19 = a2;
  uint64_t v6 = sub_251A95638(sub_251C1F5AC, (uint64_t)v18, v5);
  swift_bridgeObjectRelease();
  if (!v6) {
    return 0;
  }
  id v7 = objc_msgSend(v6, sel_accessories);
  sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
  unint64_t v8 = sub_251F35AC0();

  if (v8 >> 62) {
    goto LABEL_16;
  }
  uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v9; uint64_t v9 = sub_251F366C0())
  {
    uint64_t v10 = 4;
    while (1)
    {
      id v11 = (v8 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2533AB3A0](v10 - 4, v8) : *(id *)(v8 + 8 * v10);
      uint64_t v12 = v11;
      uint64_t v13 = v10 - 3;
      if (__OFADD__(v10 - 4, 1)) {
        break;
      }
      id v14 = objc_msgSend(v11, sel_hdm_matterNodeID);
      if (v14)
      {
        uint64_t v15 = v14;
        uint64_t v20 = 0;
        char v21 = 1;
        sub_251F36D80();

        if ((v21 & 1) == 0 && v20 == a1)
        {

          swift_bridgeObjectRelease();
          goto LABEL_18;
        }
      }

      ++v10;
      if (v13 == v9) {
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_17:

  swift_bridgeObjectRelease();
  uint64_t v12 = 0;
LABEL_18:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_251C1F480(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_uniqueIdentifier);
  uint64_t v2 = sub_251F34DA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  char v6 = sub_251F34D70();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6 & 1;
}

uint64_t sub_251C1F58C(id *a1)
{
  return sub_251C1F480(a1) & 1;
}

uint64_t sub_251C1F5AC(id *a1)
{
  return sub_251C1F58C(a1) & 1;
}

uint64_t sub_251C1F5C8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticAccessory(0);
  uint64_t v25 = *(void *)(v2 - 8);
  uint64_t v26 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  unint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  id v7 = (char *)&v23 - v6;
  uint64_t v27 = MEMORY[0x263F8EE78];
  uint64_t v8 = *(void *)(a1 + 56);
  uint64_t v23 = a1 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v24 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v14 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v14++, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v24) {
      goto LABEL_24;
    }
    unint64_t v21 = *(void *)(v23 + 8 * v14);
    if (!v21) {
      break;
    }
LABEL_19:
    unint64_t v11 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v14 << 6);
LABEL_5:
    sub_251C30C48(*(void *)(v12 + 48) + *(void *)(v25 + 72) * v16, (uint64_t)v7, type metadata accessor for StaticAccessory);
    uint64_t v17 = sub_251C30CB0((uint64_t)v7, (uint64_t)v5, type metadata accessor for StaticAccessory);
    uint64_t v18 = *(void *)&v5[*(int *)(v26 + 80)];
    MEMORY[0x270FA5388](v17);
    *(&v23 - 2) = (uint64_t)v5;
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_251A51E88((void (*)(char *))sub_251AB2CBC, (uint64_t)(&v23 - 4), v18);
    swift_bridgeObjectRelease();
    sub_251C30D18((uint64_t)v5, type metadata accessor for StaticAccessory);
    uint64_t result = sub_251ED6260(v19);
  }
  int64_t v22 = v14 + 1;
  if (v14 + 1 >= v24) {
    goto LABEL_24;
  }
  unint64_t v21 = *(void *)(v23 + 8 * v22);
  if (v21) {
    goto LABEL_18;
  }
  int64_t v22 = v14 + 2;
  if (v14 + 2 >= v24) {
    goto LABEL_24;
  }
  unint64_t v21 = *(void *)(v23 + 8 * v22);
  if (v21) {
    goto LABEL_18;
  }
  int64_t v22 = v14 + 3;
  if (v14 + 3 >= v24) {
    goto LABEL_24;
  }
  unint64_t v21 = *(void *)(v23 + 8 * v22);
  if (v21) {
    goto LABEL_18;
  }
  int64_t v22 = v14 + 4;
  if (v14 + 4 >= v24)
  {
LABEL_24:
    swift_release();
    return v27;
  }
  unint64_t v21 = *(void *)(v23 + 8 * v22);
  if (v21)
  {
LABEL_18:
    int64_t v14 = v22;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v14 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v14 >= v24) {
      goto LABEL_24;
    }
    unint64_t v21 = *(void *)(v23 + 8 * v14);
    ++v22;
    if (v21) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t ClimateCategoryInformation.stateSnapshot.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251C30C48(v1, a1, type metadata accessor for StateSnapshot);
}

uint64_t ClimateCategoryInformation.id.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for ClimateCategoryInformation();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for ClimateCategoryInformation()
{
  uint64_t result = qword_269BA0728;
  if (!qword_269BA0728) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ClimateCategoryInformation.categoryStaticAccessories.getter()
{
  type metadata accessor for ClimateCategoryInformation();
  return swift_bridgeObjectRetain();
}

uint64_t static ClimateCategoryInformation.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  if ((_s13HomeDataModel13StateSnapshotV2eeoiySbAC_ACtFZ_0(a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for ClimateCategoryInformation();
  if ((sub_251DB1CC8(*((unsigned char *)a1 + *(int *)(v4 + 20)), *((unsigned char *)a2 + *(int *)(v4 + 20))) & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(int *)(v4 + 24);
  uint64_t v6 = *(uint64_t *)((char *)a1 + v5);
  uint64_t v7 = *(uint64_t *)((char *)a2 + v5);
  return sub_251B04FB8(v6, v7);
}

uint64_t ClimateCategoryInformation.hash(into:)(long long *a1)
{
  StateSnapshot.hash(into:)(a1);
  uint64_t v3 = type metadata accessor for ClimateCategoryInformation();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v1 + *(int *)(v3 + 24));
  swift_bridgeObjectRetain();
  sub_251A54A64(a1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t ClimateCategoryInformation.hashValue.getter()
{
  sub_251F36CA0();
  StateSnapshot.hash(into:)(v3);
  uint64_t v1 = type metadata accessor for ClimateCategoryInformation();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  sub_251A54A64(v3, *(void *)(v0 + *(int *)(v1 + 24)));
  return sub_251F36D00();
}

uint64_t sub_251C1FCBC@<X0>(uint64_t a1@<X8>)
{
  return sub_251C30C48(v1, a1, type metadata accessor for StateSnapshot);
}

uint64_t sub_251C1FCF8()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_251AAD138(v0);
  uint64_t v2 = static ClimateSummarizer.climateSummary(from:)(v1);
  swift_release();
  return v2;
}

uint64_t _s13HomeDataModel26ClimateCategoryInformationV7summarySSSgvg_0()
{
  type metadata accessor for ClimateCategoryInformation();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_251AAD138(v0);
  uint64_t v2 = static ClimateSummarizer.climateSummary(from:)(v1);
  swift_release();
  return v2;
}

uint64_t sub_251C1FDC4()
{
  return swift_bridgeObjectRetain();
}

void *ClimateCategoryInformation.statusItems.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA06D8);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v46 = (char *)&v44 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA06E0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v45 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA06E8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA06F0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA06F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0700);
  MEMORY[0x270FA5388](v13 - 8);
  unint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ClimateCategoryInformation();
  uint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v17 = sub_251AAD138(v16);
  uint64_t v18 = sub_251AAC998();
  *(_OWORD *)&v50[56] = xmmword_251F476E0;
  uint64_t v19 = swift_retain();
  sub_251E2F56C(v19, (uint64_t)v15);
  uint64_t v20 = type metadata accessor for TemperatureStatusItem(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v15, 1, v20) == 1)
  {
    sub_251A1B064((uint64_t)v15, &qword_269BA0700);
    long long v51 = 0u;
    long long v52 = 0u;
    uint64_t v53 = 0;
  }
  else
  {
    *((void *)&v52 + 1) = v20;
    uint64_t v53 = &off_270274B68;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v51);
    sub_251C30CB0((uint64_t)v15, (uint64_t)boxed_opaque_existential_1, type metadata accessor for TemperatureStatusItem);
  }
  uint64_t v22 = swift_retain();
  sub_251E2F87C(v22, (uint64_t)v12);
  uint64_t v23 = type metadata accessor for HumidityStatusItem(0);
  int v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v12, 1, v23);
  uint64_t v25 = (uint64_t)v46;
  if (v24 == 1)
  {
    sub_251A1B064((uint64_t)v12, &qword_269BA06F8);
    long long v54 = 0u;
    long long v55 = 0u;
    uint64_t v56 = 0;
  }
  else
  {
    *((void *)&v55 + 1) = v23;
    uint64_t v56 = &off_270274B90;
    uint64_t v26 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v54);
    sub_251C30CB0((uint64_t)v12, (uint64_t)v26, type metadata accessor for HumidityStatusItem);
  }
  sub_251E2FB90(v17, (uint64_t)v9);
  uint64_t v27 = type metadata accessor for AirQualityStatusItem(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v9, 1, v27) == 1)
  {
    sub_251A1B064((uint64_t)v9, &qword_269BA06F0);
    long long v57 = 0u;
    long long v58 = 0u;
    char v59 = 0;
  }
  else
  {
    *((void *)&v58 + 1) = v27;
    char v59 = &off_270274BB8;
    uint64_t v28 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v57);
    sub_251C30CB0((uint64_t)v9, (uint64_t)v28, type metadata accessor for AirQualityStatusItem);
  }
  uint64_t v29 = swift_bridgeObjectRetain();
  sub_251C20F4C(v29, (uint64_t)v6);
  uint64_t v30 = type metadata accessor for BlindsStatusItem(0);
  int v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v6, 1, v30);
  uint64_t v32 = (uint64_t)v45;
  if (v31 == 1)
  {
    sub_251A1B064((uint64_t)v6, &qword_269BA06E8);
    long long v60 = 0u;
    long long v61 = 0u;
    uint64_t v62 = 0;
  }
  else
  {
    *((void *)&v61 + 1) = v30;
    uint64_t v62 = &off_270274BE0;
    uint64_t v33 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v60);
    sub_251C30CB0((uint64_t)v6, (uint64_t)v33, type metadata accessor for BlindsStatusItem);
  }
  uint64_t v34 = swift_bridgeObjectRetain();
  sub_251E2FE88(v34, v32);
  uint64_t v35 = type metadata accessor for FanStatusItem(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v32, 1, v35) == 1)
  {
    sub_251A1B064(v32, &qword_269BA06E0);
    long long v63 = 0u;
    long long v64 = 0u;
    uint64_t v65 = 0;
  }
  else
  {
    *((void *)&v64 + 1) = v35;
    uint64_t v65 = &off_270274C08;
    unint64_t v36 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v63);
    sub_251C30CB0(v32, (uint64_t)v36, type metadata accessor for FanStatusItem);
  }
  sub_251E304F8(v18, v25);
  uint64_t v37 = type metadata accessor for AirPurifierStatusItem(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 48))(v25, 1, v37) == 1)
  {
    sub_251A1B064(v25, &qword_269BA06D8);
    long long v66 = 0u;
    long long v67 = 0u;
    id v68 = 0;
  }
  else
  {
    *((void *)&v67 + 1) = v37;
    id v68 = &off_270274C30;
    uint64_t v38 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v66);
    sub_251C30CB0(v25, (uint64_t)v38, type metadata accessor for AirPurifierStatusItem);
  }
  id v39 = (void *)MEMORY[0x263F8EE78];
  for (uint64_t i = 32; i != 272; i += 40)
  {
    sub_251A1B128((uint64_t)&v50[i + 40], (uint64_t)v50, &qword_269B9D720);
    sub_251A4ECF0((uint64_t)v50, (uint64_t)&v47, &qword_269B9D720);
    if (v48)
    {
      sub_251A1A444(&v47, (uint64_t)v49);
      sub_251A1A444(v49, (uint64_t)&v47);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v39 = sub_251F0FD30(0, v39[2] + 1, 1, v39);
      }
      unint64_t v42 = v39[2];
      unint64_t v41 = v39[3];
      if (v42 >= v41 >> 1) {
        id v39 = sub_251F0FD30((void *)(v41 > 1), v42 + 1, 1, v39);
      }
      v39[2] = v42 + 1;
      sub_251A1A444(&v47, (uint64_t)&v39[5 * v42 + 4]);
    }
    else
    {
      sub_251A1B064((uint64_t)&v47, &qword_269B9D720);
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D720);
  swift_arrayDestroy();
  return v39;
}

uint64_t ClimateCategoryInformation.init(stateSnapshot:umbrellaCategory:room:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for StateSnapshot(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D138);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = &v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for ClimateCategoryInformation();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  unint64_t v15 = &v24[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_251C30C48(a1, (uint64_t)v15, type metadata accessor for StateSnapshot);
  v15[*(int *)(v12 + 20)] = 0;
  sub_251A1B128(a2, (uint64_t)v11, &qword_269B9D138);
  uint64_t v16 = type metadata accessor for StaticRoom(0);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v11, 1, v16) == 1)
  {
    sub_251A1B064((uint64_t)v11, &qword_269B9D138);
    sub_251C30C48(a1, (uint64_t)v8, type metadata accessor for StateSnapshot);
  }
  else
  {
    uint64_t v17 = swift_bridgeObjectRetain();
    uint64_t v18 = sub_251EDCBC8(v17);
    sub_251C30D18((uint64_t)v11, type metadata accessor for StaticRoom);
    sub_251C30C48(a1, (uint64_t)v8, type metadata accessor for StateSnapshot);
    if (v18) {
      goto LABEL_5;
    }
  }
  uint64_t v19 = swift_bridgeObjectRetain();
  uint64_t v18 = sub_251EDCBC8(v19);
LABEL_5:
  sub_251C30D18((uint64_t)v8, type metadata accessor for StateSnapshot);
  uint64_t v20 = sub_251AAD29C(v18, 0);
  *(void *)&v15[*(int *)(v12 + 24)] = v20;
  uint64_t v21 = *(void *)(v20 + 16);
  sub_251A1B064(a2, &qword_269B9D138);
  sub_251C30D18(a1, type metadata accessor for StateSnapshot);
  if (v21)
  {
    sub_251C30CB0((uint64_t)v15, a3, (uint64_t (*)(void))type metadata accessor for ClimateCategoryInformation);
    uint64_t v22 = 0;
  }
  else
  {
    sub_251C30D18((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ClimateCategoryInformation);
    uint64_t v22 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a3, v22, 1, v12);
}

uint64_t sub_251C2089C()
{
  return MEMORY[0x263F8EE78];
}

uint64_t ClimateCategoryInformation.contextMenuLabelsAndActions()()
{
  return MEMORY[0x263F8EE78];
}

uint64_t sub_251C208B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if ((static StateSnapshot.== infix(_:_:)(a1, a2) & 1) == 0
    || (sub_251DB1CC8(*((unsigned char *)a1 + *(int *)(a3 + 20)), *((unsigned char *)a2 + *(int *)(a3 + 20))) & 1) == 0)
  {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = *(uint64_t *)((char *)a1 + v6);
  uint64_t v8 = *(uint64_t *)((char *)a2 + v6);
  return sub_251B04FB8(v7, v8);
}

uint64_t sub_251C20934(long long *a1, uint64_t a2)
{
  StateSnapshot.hash(into:)(a1);
  sub_251F357B0();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v2 + *(int *)(a2 + 24));
  return sub_251A54A64(a1, v5);
}

uint64_t sub_251C20A4C(uint64_t a1, uint64_t a2)
{
  sub_251F36CA0();
  StateSnapshot.hash(into:)(v5);
  sub_251F357B0();
  swift_bridgeObjectRelease();
  sub_251A54A64(v5, *(void *)(v2 + *(int *)(a2 + 24)));
  return sub_251F36D00();
}

unint64_t ClimateCategoryInformation.statusGaugeData.getter()
{
  uint64_t v0 = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v33 = *(void *)(v0 - 8);
  uint64_t v1 = MEMORY[0x270FA5388](v0);
  uint64_t v34 = (uint64_t)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v1);
  uint64_t v31 = (uint64_t)&v28 - v3;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9E0);
  uint64_t v4 = *(void *)(v29 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v29);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v28 - v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0708);
  uint64_t v10 = *(void *)(v4 + 72);
  unint64_t v11 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_251F3DAB0;
  uint64_t v28 = v12;
  uint64_t v13 = v12 + v11;
  type metadata accessor for ClimateCategoryInformation();
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = sub_251AAD138(v14);
  static ClimateSummarizer.temperatureGaugeData(from:)(v15, v13);
  swift_release();
  uint64_t v32 = v13 + v10;
  uint64_t v30 = v13;
  uint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v17 = sub_251AAD138(v16);
  static ClimateSummarizer.humidityGaugeData(from:addPercentageSign:)(v17, 1, v32);
  swift_release();
  uint64_t v18 = swift_bridgeObjectRetain();
  uint64_t v19 = sub_251AAD138(v18);
  static ClimateSummarizer.airQualityGaugeData(from:)(v19, v13 + 2 * v10);
  swift_release();
  uint64_t v20 = (unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
  unint64_t v21 = MEMORY[0x263F8EE78];
  uint64_t v22 = 3;
  uint64_t v23 = v30;
  uint64_t v32 = v0;
  do
  {
    sub_251A1B128(v23, (uint64_t)v9, &qword_269B9C9E0);
    sub_251A4ECF0((uint64_t)v9, (uint64_t)v7, &qword_269B9C9E0);
    if ((*v20)(v7, 1, v0) == 1)
    {
      sub_251A1B064((uint64_t)v7, &qword_269B9C9E0);
    }
    else
    {
      uint64_t v24 = v31;
      sub_251C30CB0((uint64_t)v7, v31, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
      sub_251C30CB0(v24, v34, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v21 = sub_251F10C54(0, *(void *)(v21 + 16) + 1, 1, v21);
      }
      unint64_t v26 = *(void *)(v21 + 16);
      unint64_t v25 = *(void *)(v21 + 24);
      if (v26 >= v25 >> 1) {
        unint64_t v21 = sub_251F10C54(v25 > 1, v26 + 1, 1, v21);
      }
      *(void *)(v21 + 16) = v26 + 1;
      sub_251C30CB0(v34, v21+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(void *)(v33 + 72) * v26, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
      uint64_t v0 = v32;
    }
    v23 += v10;
    --v22;
  }
  while (v22);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v21;
}

uint64_t sub_251C20F4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v155 = a2;
  uint64_t v153 = type metadata accessor for TilesFilter();
  MEMORY[0x270FA5388](v153);
  uint64_t v154 = (char *)&v150 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v4 = MEMORY[0x270FA5388](v151);
  Swift::Int_optional v150 = (char *)&v150 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v152 = (uint64_t)&v150 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F108);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  unint64_t v162 = (unint64_t)&v150 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v158 = (uint64_t)&v150 - v10;
  unint64_t v11 = (int *)type metadata accessor for StaticService();
  uint64_t v165 = *((void *)v11 - 1);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v156 = (uint64_t)&v150 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v150 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v150 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v164 = (uint64_t)&v150 - v21;
  uint64_t v22 = 0;
  uint64_t v173 = MEMORY[0x263F8EE88];
  uint64_t v174 = MEMORY[0x263F8EE88];
  uint64_t v171 = MEMORY[0x263F8EE88];
  uint64_t v172 = MEMORY[0x263F8EE88];
  uint64_t v166 = a1;
  uint64_t v25 = *(void *)(a1 + 56);
  uint64_t v24 = a1 + 56;
  uint64_t v23 = v25;
  uint64_t v26 = 1 << *(unsigned char *)(v24 - 24);
  uint64_t v27 = -1;
  if (v26 < 64) {
    uint64_t v27 = ~(-1 << v26);
  }
  unint64_t v28 = v27 & v23;
  uint64_t v159 = v24;
  int64_t v160 = (unint64_t)(v26 + 63) >> 6;
  unint64_t v161 = 0x8000000251F65220;
  long long v163 = (int *)v20;
  uint64_t v157 = v16;
  while (v28)
  {
    uint64_t v167 = (char **)((v28 - 1) & v28);
    uint64_t v168 = v22;
    unint64_t v29 = __clz(__rbit64(v28)) | ((void)v22 << 6);
LABEL_24:
    uint64_t v34 = v164;
    sub_251C30C48(*(void *)(v166 + 48) + *(void *)(v165 + 72) * v29, v164, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251C30CB0(v34, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v35 = v11[22];
    int v36 = v19[v35];
    LOBYTE(v170) = v19[v35];
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v37 == v161)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v38 = sub_251F36B10();
      swift_bridgeObjectRelease();
      if ((v38 & 1) == 0) {
        goto LABEL_50;
      }
    }
    LOBYTE(v170) = v36;
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v39 == 0x8000000251F65220)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v40 = sub_251F36B10();
      swift_bridgeObjectRelease();
      if ((v40 & 1) == 0) {
        goto LABEL_50;
      }
    }
    uint64_t v41 = *(void *)&v19[v11[28]];
    if (*(void *)(v41 + 16) && (unint64_t v42 = sub_2519FE568(88), (v43 & 1) != 0))
    {
      unint64_t v44 = v42;
      uint64_t v45 = *(void *)(v41 + 56);
      uint64_t v46 = type metadata accessor for StaticCharacteristic();
      uint64_t v47 = *(void *)(v46 - 8);
      uint64_t v48 = v45 + *(void *)(v47 + 72) * v44;
      unint64_t v11 = v163;
      uint64_t v49 = v158;
      sub_251C30C48(v48, v158, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56))(v49, 0, 1, v46);
    }
    else
    {
      uint64_t v46 = type metadata accessor for StaticCharacteristic();
      uint64_t v49 = v158;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v158, 1, 1, v46);
    }
    uint64_t v50 = v49;
    uint64_t v51 = v162;
    sub_251A4ECF0(v50, v162, &qword_26B21F108);
    type metadata accessor for StaticCharacteristic();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 48))(v51, 1, v46) != 1)
    {
      uint64_t v52 = v51 + *(int *)(v46 + 24);
      uint64_t v16 = v157;
      unint64_t v53 = *(void *)v52;
      switch(*(unsigned char *)(v52 + 16))
      {
        case 0:
          sub_251C30D18(v162, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
          if ((v53 & 1) == 0) {
            goto LABEL_50;
          }
          goto LABEL_48;
        case 1:
          unint64_t v53 = *(void *)v52;
          goto LABEL_46;
        case 2:
          unint64_t v53 = (unsigned __int16)*(void *)v52;
          goto LABEL_46;
        case 3:
          unint64_t v53 = *(void *)v52;
          goto LABEL_46;
        case 4:
          if ((v53 & 0x8000000000000000) == 0) {
            goto LABEL_46;
          }
          goto LABEL_120;
        case 5:
        case 6:
          unint64_t v53 = (int)v53;
LABEL_46:
          if (v53 > 1) {
            goto LABEL_49;
          }
          sub_251C30D18(v162, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
          if (v53 != 1) {
            goto LABEL_50;
          }
LABEL_48:
          uint64_t v54 = sub_251F34DA0();
          uint64_t v55 = *(void *)(v54 - 8);
          uint64_t v56 = MEMORY[0x270FA5388](v54);
          long long v58 = (char *)&v150 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
          MEMORY[0x270FA5388](v56);
          long long v60 = (char *)&v150 - v59;
          (*(void (**)(char *, char *, uint64_t))(v55 + 16))((char *)&v150 - v59, v19, v54);
          sub_251A637B8(v58, v60);
          (*(void (**)(char *, uint64_t))(v55 + 8))(v58, v54);
          break;
        default:
LABEL_49:
          sub_251C30D18(v162, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
          goto LABEL_50;
      }
      goto LABEL_97;
    }
    sub_251A1B064(v51, &qword_26B21F108);
    uint64_t v16 = v157;
LABEL_50:
    LOBYTE(v170) = v36;
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v61 == 0x8000000251F65220)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v62 = sub_251F36B10();
      swift_bridgeObjectRelease();
      if ((v62 & 1) == 0) {
        goto LABEL_68;
      }
    }
    int v63 = v19[v35];
    LOBYTE(v170) = v19[v35];
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v64 == 0x8000000251F65220)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v65 = sub_251F36B10();
      swift_bridgeObjectRelease();
      if ((v65 & 1) == 0)
      {
        if (v63 != 11
          || (uint64_t v170 = *(int **)&v19[v11[28]],
              char v169 = 28,
              Swift::Int_optional v176 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v169),
              v176.is_nil))
        {
LABEL_66:
          sub_251C30C48((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_67:
          sub_251C30D18((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StaticService);
          goto LABEL_68;
        }
        Swift::Int value = v176.value;
        sub_251C30C48((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StaticService);
        if (value != 1) {
          goto LABEL_67;
        }
        goto LABEL_60;
      }
    }
    uint64_t v170 = *(int **)&v19[v11[28]];
    char v169 = -98;
    Swift::Int_optional v175 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v169);
    if (v175.is_nil) {
      goto LABEL_66;
    }
    Swift::Int v66 = v175.value;
    sub_251C30C48((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v66 <= 0) {
      goto LABEL_67;
    }
LABEL_60:
    BOOL v67 = sub_251C3090C((uint64_t)v16);
    sub_251C30D18((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v67) {
      goto LABEL_96;
    }
LABEL_68:
    LOBYTE(v170) = v36;
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v69 == 0x8000000251F65220)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v70 = sub_251F36B10();
      swift_bridgeObjectRelease();
      if ((v70 & 1) == 0) {
        goto LABEL_73;
      }
    }
    if (sub_251C3090C((uint64_t)v19)) {
      goto LABEL_96;
    }
LABEL_73:
    LOBYTE(v170) = v36;
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v71 == 0x8000000251F65220)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v72 = sub_251F36B10();
      swift_bridgeObjectRelease();
      if ((v72 & 1) == 0) {
        goto LABEL_87;
      }
    }
    int v73 = v19[v35];
    LOBYTE(v170) = v19[v35];
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v74 == 0x8000000251F65220)
    {
      swift_bridgeObjectRelease();
LABEL_81:
      uint64_t v170 = *(int **)&v19[v11[28]];
      char v169 = 40;
      Swift::Int_optional v177 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v169);
      if (v177.is_nil || v177.value <= 0) {
        goto LABEL_87;
      }
      goto LABEL_96;
    }
    char v75 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v75) {
      goto LABEL_81;
    }
    if (v73 != 11
      || (uint64_t v170 = *(int **)&v19[v11[28]],
          char v169 = 28,
          Swift::Int_optional v178 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v169),
          v178.is_nil)
      || v178.value != 1)
    {
LABEL_87:
      if (v36 != 11) {
        goto LABEL_4;
      }
      int v76 = v19[v11[24]];
      uint64_t v77 = v156;
      sub_251C30C48((uint64_t)v19, v156, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (v76 == 53) {
        LOBYTE(v76) = *(unsigned char *)(v77 + v11[22]);
      }
      sub_251C30D18(v77, (uint64_t (*)(void))type metadata accessor for StaticService);
      LOBYTE(v170) = v76;
      if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v78 == 0x8000000251F65220)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v79 = sub_251F36B10();
        swift_bridgeObjectRelease();
        if ((v79 & 1) == 0) {
          goto LABEL_4;
        }
      }
      uint64_t v170 = *(int **)&v19[v11[28]];
      char v169 = 28;
      Swift::Int_optional v179 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v169);
      if (v179.is_nil || v179.value != 1)
      {
LABEL_4:
        sub_251C30D18((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StaticService);
        goto LABEL_5;
      }
    }
LABEL_96:
    uint64_t v80 = sub_251F34DA0();
    uint64_t v81 = *(void *)(v80 - 8);
    uint64_t v82 = MEMORY[0x270FA5388](v80);
    uint64_t v84 = (char *)&v150 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
    MEMORY[0x270FA5388](v82);
    uint64_t v86 = (char *)&v150 - v85;
    (*(void (**)(char *, char *, uint64_t))(v81 + 16))((char *)&v150 - v85, v19, v80);
    sub_251A637B8(v84, v86);
    (*(void (**)(char *, uint64_t))(v81 + 8))(v84, v80);
LABEL_97:
    sub_251C30D18((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StaticService);
    unint64_t v11 = v163;
LABEL_5:
    unint64_t v28 = (unint64_t)v167;
    uint64_t v22 = v168;
  }
  int64_t v30 = (int64_t)(v22 + 1);
  if (__OFADD__(v22, 1))
  {
    __break(1u);
    goto LABEL_119;
  }
  if (v30 >= v160) {
    goto LABEL_98;
  }
  unint64_t v31 = *(void *)(v159 + 8 * v30);
  int64_t v32 = (int64_t)(v22 + 1);
  if (v31) {
    goto LABEL_23;
  }
  int64_t v32 = (int64_t)(v22 + 2);
  if ((uint64_t)(v22 + 2) >= v160) {
    goto LABEL_98;
  }
  unint64_t v31 = *(void *)(v159 + 8 * v32);
  if (v31) {
    goto LABEL_23;
  }
  int64_t v32 = (int64_t)(v22 + 3);
  if ((uint64_t)(v22 + 3) >= v160) {
    goto LABEL_98;
  }
  unint64_t v31 = *(void *)(v159 + 8 * v32);
  if (v31) {
    goto LABEL_23;
  }
  int64_t v32 = (int64_t)(v22 + 4);
  if ((uint64_t)(v22 + 4) >= v160) {
    goto LABEL_98;
  }
  unint64_t v31 = *(void *)(v159 + 8 * v32);
  if (v31)
  {
LABEL_23:
    uint64_t v167 = (char **)((v31 - 1) & v31);
    uint64_t v168 = (char *)v32;
    unint64_t v29 = __clz(__rbit64(v31)) + (v32 << 6);
    goto LABEL_24;
  }
  uint64_t v33 = v22 + 5;
  if ((uint64_t)(v22 + 5) < v160)
  {
    unint64_t v31 = *(void *)(v159 + 8 * (void)v33);
    if (!v31)
    {
      while (1)
      {
        int64_t v32 = (int64_t)(v33 + 1);
        if (__OFADD__(v33, 1)) {
          break;
        }
        if (v32 >= v160) {
          goto LABEL_98;
        }
        unint64_t v31 = *(void *)(v159 + 8 * v32);
        ++v33;
        if (v31) {
          goto LABEL_23;
        }
      }
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
      goto LABEL_122;
    }
    int64_t v32 = (int64_t)(v22 + 5);
    goto LABEL_23;
  }
LABEL_98:
  swift_release();
  uint64_t v87 = v173;
  uint64_t v88 = v174;
  uint64_t v89 = *(void *)(v174 + 16);
  uint64_t v90 = *(void *)(v173 + 16);
  BOOL v91 = __OFADD__(v89, v90);
  uint64_t v92 = v89 + v90;
  if (v91) {
    goto LABEL_121;
  }
  uint64_t v93 = v172;
  uint64_t v94 = *(void *)(v172 + 16);
  BOOL v91 = __OFADD__(v92, v94);
  uint64_t v95 = v92 + v94;
  if (v91)
  {
LABEL_122:
    __break(1u);
    goto LABEL_123;
  }
  uint64_t v96 = v171;
  uint64_t v97 = *(void *)(v171 + 16);
  uint64_t v98 = v95 + v97;
  if (__OFADD__(v95, v97))
  {
LABEL_123:
    __break(1u);
    JUMPOUT(0x251C22550);
  }
  uint64_t v99 = swift_bridgeObjectRetain();
  uint64_t v100 = sub_251D8F0C0(v99, v87);
  uint64_t v101 = swift_bridgeObjectRetain();
  uint64_t v102 = sub_251D8F0C0(v101, v100);
  uint64_t v103 = swift_bridgeObjectRetain();
  uint64_t v104 = sub_251D8F0C0(v103, v102);
  if (v98 < 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v108 = type metadata accessor for BlindsStatusItem(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 56))(v155, 1, 1, v108);
  }
  else
  {
    uint64_t v105 = *(void *)(v88 + 16);
    uint64_t v168 = (char *)v104;
    if (v105)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      static String.hfLocalized(_:)(0xD00000000000002BLL, 0x8000000251F6EA80);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
      uint64_t v106 = swift_allocObject();
      *(_OWORD *)(v106 + 16) = xmmword_251F38650;
      uint64_t v107 = *(void *)(v88 + 16);
      goto LABEL_108;
    }
    swift_bridgeObjectRelease();
    uint64_t v110 = *(void *)(v93 + 16);
    if (v110 && v110 == v98)
    {
      swift_bridgeObjectRelease();
      static String.hfLocalized(_:)(0xD000000000000028, 0x8000000251F6EA50);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
      uint64_t v106 = swift_allocObject();
      *(_OWORD *)(v106 + 16) = xmmword_251F38650;
      uint64_t v107 = *(void *)(v93 + 16);
LABEL_108:
      swift_bridgeObjectRelease();
      uint64_t v111 = MEMORY[0x263F8D750];
      *(void *)(v106 + 56) = MEMORY[0x263F8D6C8];
      *(void *)(v106 + 64) = v111;
      *(void *)(v106 + 32) = v107;
LABEL_109:
      uint64_t v112 = sub_251F35710();
      uint64_t v165 = v113;
      uint64_t v166 = v112;
      uint64_t v164 = 0xD000000000000016;
      uint64_t v114 = "blinds.horizontal.open";
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v141 = *(void *)(v96 + 16);
      if (!v141 || v141 != v98)
      {
        swift_bridgeObjectRelease();
        static String.hfLocalized(_:)(0xD000000000000025, 0x8000000251F6E9C0);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
        uint64_t v147 = swift_allocObject();
        uint64_t v148 = MEMORY[0x263F8D6C8];
        *(_OWORD *)(v147 + 16) = xmmword_251F38650;
        uint64_t v149 = MEMORY[0x263F8D750];
        *(void *)(v147 + 56) = v148;
        *(void *)(v147 + 64) = v149;
        *(void *)(v147 + 32) = v98;
        goto LABEL_109;
      }
      static String.hfLocalized(_:)(0xD000000000000028, 0x8000000251F6EA20);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
      uint64_t v142 = swift_allocObject();
      *(_OWORD *)(v142 + 16) = xmmword_251F38650;
      uint64_t v143 = *(void *)(v96 + 16);
      swift_bridgeObjectRelease();
      uint64_t v144 = MEMORY[0x263F8D750];
      *(void *)(v142 + 56) = MEMORY[0x263F8D6C8];
      *(void *)(v142 + 64) = v144;
      *(void *)(v142 + 32) = v143;
      uint64_t v145 = sub_251F35710();
      uint64_t v165 = v146;
      uint64_t v166 = v145;
      uint64_t v164 = 0xD000000000000018;
      uint64_t v114 = "blinds.horizontal.closed";
    }
    unint64_t v162 = (unint64_t)(v114 - 32) | 0x8000000000000000;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v167 = &v150;
    uint64_t v116 = *(void *)(*(void *)(v115 - 8) + 64);
    MEMORY[0x270FA5388](v115 - 8);
    unint64_t v117 = (v116 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v118 = sub_251F34DA0();
    uint64_t v119 = *(void *)(v118 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v119 + 56))((char *)&v150 - v117, 1, 1, v118);
    uint64_t v120 = static String.hfLocalized(_:)(0xD000000000000028, 0x8000000251F6E9F0);
    uint64_t v122 = v121;
    uint64_t v123 = MEMORY[0x270FA5388](v120);
    uint64_t v125 = (char *)&v150 - ((v124 + 15) & 0xFFFFFFFFFFFFFFF0);
    MEMORY[0x270FA5388](v123);
    uint64_t v126 = (char *)&v150 - v117;
    sub_251A1B128((uint64_t)&v150 - v117, (uint64_t)&v150 - v117, &qword_26B21FF90);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v119 + 48))((char *)&v150 - v117, 1, v118) == 1)
    {
      sub_251F34D90();
      sub_251A1B064((uint64_t)&v150 - v117, &qword_26B21FF90);
      sub_251A1B064((uint64_t)v126, &qword_26B21FF90);
      uint64_t v127 = *(void (**)(char *, char *, uint64_t))(v119 + 32);
    }
    else
    {
      sub_251A1B064((uint64_t)&v150 - v117, &qword_26B21FF90);
      uint64_t v127 = *(void (**)(char *, char *, uint64_t))(v119 + 32);
      v127(v125, v126, v118);
    }
    uint64_t v128 = (uint64_t)v150;
    v127(v150, v125, v118);
    uint64_t v129 = (int *)v151;
    char v130 = (void *)(v128 + *(int *)(v151 + 20));
    unint64_t v131 = v162;
    void *v130 = v164;
    v130[1] = v131;
    uint64_t v132 = (uint64_t *)(v128 + v129[6]);
    *uint64_t v132 = v120;
    v132[1] = v122;
    char v133 = (uint64_t *)(v128 + v129[7]);
    uint64_t v134 = v165;
    uint64_t *v133 = v166;
    v133[1] = v134;
    uint64_t v135 = v128 + v129[8];
    *(void *)uint64_t v135 = 0;
    *(void *)(v135 + 8) = 0;
    *(void *)(v135 + 16) = 0;
    *(unsigned char *)(v135 + 24) = -1;
    uint64_t v136 = v152;
    uint64_t v137 = sub_251C30CB0(v128, v152, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    MEMORY[0x270FA5388](v137);
    *(&v150 - 2) = v168;
    uint64_t v170 = v163;
    uint64_t v138 = (uint64_t)v154;
    sub_251F34EF0();
    swift_bridgeObjectRelease();
    swift_storeEnumTagMultiPayload();
    uint64_t v139 = type metadata accessor for BlindsStatusItem(0);
    uint64_t v140 = v155;
    sub_251C30CB0(v138, v155 + *(int *)(v139 + 20), (uint64_t (*)(void))type metadata accessor for TilesFilter);
    *(unsigned char *)(v140 + *(int *)(v139 + 24)) = 3;
    sub_251C30CB0(v136, v140, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v139 - 8) + 56))(v140, 0, 1, v139);
  }
}

uint64_t sub_251C2256C@<X0>(char **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v134 = a2;
  uint64_t v132 = type metadata accessor for TilesFilter();
  MEMORY[0x270FA5388](v132);
  char v133 = (char *)&v129 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v4 = MEMORY[0x270FA5388](v130);
  uint64_t v129 = (char *)&v129 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v131 = (uint64_t)&v129 - v6;
  uint64_t v7 = type metadata accessor for StaticService();
  uint64_t v142 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v129 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v135 = (uint64_t)&v129 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v136 = (uint64_t)&v129 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v129 - v16;
  uint64_t result = MEMORY[0x270FA5388](v15);
  uint64_t v141 = (uint64_t)&v129 - v19;
  int64_t v20 = 0;
  uint64_t v150 = MEMORY[0x263F8EE88];
  uint64_t v151 = MEMORY[0x263F8EE88];
  uint64_t v148 = MEMORY[0x263F8EE88];
  uint64_t v149 = MEMORY[0x263F8EE88];
  uint64_t v143 = a1;
  uint64_t v144 = result;
  uint64_t v21 = a1[7];
  uint64_t v137 = a1 + 7;
  uint64_t v22 = 1 << *((unsigned char *)a1 + 32);
  uint64_t v23 = -1;
  if (v22 < 64) {
    uint64_t v23 = ~(-1 << v22);
  }
  unint64_t v24 = v23 & (unint64_t)v21;
  uint64_t v145 = (uint64_t)"00-8000-0026BB765291";
  int64_t v138 = (unint64_t)(v22 + 63) >> 6;
  unint64_t v139 = 0x8000000251F64E00;
  uint64_t v140 = (uint64_t)v10;
  while (v24)
  {
    unint64_t v32 = __clz(__rbit64(v24));
    v24 &= v24 - 1;
    unint64_t v33 = v32 | (v20 << 6);
LABEL_23:
    uint64_t v37 = v141;
    sub_251C30C48((uint64_t)&v143[6][*(void *)(v142 + 72) * v33], v141, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251C30CB0(v37, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticService);
    char v38 = v17[*(int *)(v7 + 88)];
    LOBYTE(v147) = v38;
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v39 == v139)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v40 = sub_251F36B10();
      swift_bridgeObjectRelease();
      if ((v40 & 1) == 0) {
        goto LABEL_29;
      }
    }
    uint64_t v147 = *(void *)&v17[*(int *)(v7 + 112)];
    char v146 = 38;
    Swift::Int_optional v152 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v146);
    if (!v152.is_nil && v152.value == 2)
    {
      uint64_t v25 = sub_251F34DA0();
      uint64_t v26 = *(void *)(v25 - 8);
      uint64_t v27 = MEMORY[0x270FA5388](v25);
      unint64_t v29 = (char *)&v129 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
      MEMORY[0x270FA5388](v27);
      unint64_t v31 = (char *)&v129 - v30;
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))((char *)&v129 - v30, v17, v25);
      sub_251A637B8(v29, v31);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v29, v25);
      uint64_t v10 = (char *)v140;
      uint64_t result = sub_251C30D18((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v7 = v144;
    }
    else
    {
LABEL_29:
      LOBYTE(v147) = v38;
      if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v41 == (v145 | 0x8000000000000000))
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v42 = sub_251F36B10();
        swift_bridgeObjectRelease();
        if ((v42 & 1) == 0) {
          goto LABEL_42;
        }
      }
      uint64_t v147 = *(void *)&v17[*(int *)(v7 + 112)];
      char v146 = -100;
      Swift::Int_optional v153 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v146);
      if (v153.is_nil)
      {
        uint64_t v44 = v136;
        sub_251C30C48((uint64_t)v17, v136, (uint64_t (*)(void))type metadata accessor for StaticService);
      }
      else
      {
        Swift::Int value = v153.value;
        uint64_t v44 = v136;
        sub_251C30C48((uint64_t)v17, v136, (uint64_t (*)(void))type metadata accessor for StaticService);
        if (value == 1)
        {
          sub_251C30D18(v44, (uint64_t (*)(void))type metadata accessor for StaticService);
          uint64_t v45 = v135;
          sub_251C30C48((uint64_t)v17, v135, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_39:
          sub_251C30D18(v45, (uint64_t (*)(void))type metadata accessor for StaticService);
          goto LABEL_42;
        }
      }
      uint64_t v147 = *(void *)(v44 + *(int *)(v7 + 112));
      char v146 = 38;
      Swift::Int_optional v154 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v146);
      if (v154.is_nil)
      {
        sub_251C30D18(v44, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v45 = v135;
        sub_251C30C48((uint64_t)v17, v135, (uint64_t (*)(void))type metadata accessor for StaticService);
      }
      else
      {
        Swift::Int v46 = v154.value;
        sub_251C30D18(v44, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v45 = v135;
        sub_251C30C48((uint64_t)v17, v135, (uint64_t (*)(void))type metadata accessor for StaticService);
        if (v46 == 3) {
          goto LABEL_39;
        }
      }
      BOOL v47 = sub_251EEA86C(v45);
      sub_251C30D18(v45, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (v47) {
        goto LABEL_60;
      }
LABEL_42:
      LOBYTE(v147) = v38;
      if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v48 == (v145 | 0x8000000000000000))
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v49 = sub_251F36B10();
        swift_bridgeObjectRelease();
        if ((v49 & 1) == 0) {
          goto LABEL_48;
        }
      }
      if (sub_251EEA86C((uint64_t)v17))
      {
        uint64_t v50 = sub_251F34DA0();
        uint64_t v51 = *(void *)(v50 - 8);
        uint64_t v52 = MEMORY[0x270FA5388](v50);
        uint64_t v54 = (char *)&v129 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
        MEMORY[0x270FA5388](v52);
        uint64_t v56 = (char *)&v129 - v55;
        (*(void (**)(char *, char *, uint64_t))(v51 + 16))((char *)&v129 - v55, v17, v50);
        sub_251A637B8(v54, v56);
        (*(void (**)(char *, uint64_t))(v51 + 8))(v54, v50);
        uint64_t result = sub_251C30D18((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v10 = (char *)v140;
        uint64_t v7 = v144;
      }
      else
      {
LABEL_48:
        LOBYTE(v147) = v38;
        if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v57 == (v145 | 0x8000000000000000))
        {
          swift_bridgeObjectRelease();
          uint64_t v7 = v144;
        }
        else
        {
          char v58 = sub_251F36B10();
          swift_bridgeObjectRelease();
          uint64_t v7 = v144;
          if ((v58 & 1) == 0) {
            goto LABEL_58;
          }
        }
        uint64_t v147 = *(void *)&v17[*(int *)(v7 + 112)];
        char v146 = 38;
        Swift::Int_optional v155 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v146);
        if (v155.is_nil)
        {
          sub_251C30C48((uint64_t)v17, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
        }
        else
        {
          Swift::Int v59 = v155.value;
          sub_251C30C48((uint64_t)v17, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
          if (v59 == 1)
          {
            sub_251C30D18((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
            goto LABEL_58;
          }
        }
        uint64_t v147 = *(void *)&v10[*(int *)(v7 + 112)];
        char v146 = 38;
        Swift::Int_optional v156 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v146);
        if (v156.is_nil)
        {
          sub_251C30D18((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_60:
          uint64_t v61 = sub_251F34DA0();
          uint64_t v62 = *(void *)(v61 - 8);
          uint64_t v63 = MEMORY[0x270FA5388](v61);
          char v65 = (char *)&v129 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
          MEMORY[0x270FA5388](v63);
          BOOL v67 = (char *)&v129 - v66;
          (*(void (**)(char *, char *, uint64_t))(v62 + 16))((char *)&v129 - v66, v17, v61);
          sub_251A637B8(v65, v67);
          (*(void (**)(char *, uint64_t))(v62 + 8))(v65, v61);
          uint64_t result = sub_251C30D18((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticService);
          uint64_t v7 = v144;
          uint64_t v10 = (char *)v140;
        }
        else
        {
          Swift::Int v60 = v156.value;
          sub_251C30D18((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
          if (v60 != 3) {
            goto LABEL_60;
          }
LABEL_58:
          uint64_t result = sub_251C30D18((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticService);
        }
      }
    }
  }
  int64_t v34 = v20 + 1;
  if (__OFADD__(v20, 1))
  {
    __break(1u);
    goto LABEL_82;
  }
  if (v34 >= v138) {
    goto LABEL_61;
  }
  unint64_t v35 = (unint64_t)v137[v34];
  ++v20;
  if (v35) {
    goto LABEL_22;
  }
  int64_t v20 = v34 + 1;
  if (v34 + 1 >= v138) {
    goto LABEL_61;
  }
  unint64_t v35 = (unint64_t)v137[v20];
  if (v35) {
    goto LABEL_22;
  }
  int64_t v20 = v34 + 2;
  if (v34 + 2 >= v138) {
    goto LABEL_61;
  }
  unint64_t v35 = (unint64_t)v137[v20];
  if (v35) {
    goto LABEL_22;
  }
  int64_t v20 = v34 + 3;
  if (v34 + 3 >= v138) {
    goto LABEL_61;
  }
  unint64_t v35 = (unint64_t)v137[v20];
  if (v35)
  {
LABEL_22:
    unint64_t v24 = (v35 - 1) & v35;
    unint64_t v33 = __clz(__rbit64(v35)) + (v20 << 6);
    goto LABEL_23;
  }
  int64_t v36 = v34 + 4;
  if (v36 < v138)
  {
    unint64_t v35 = (unint64_t)v137[v36];
    if (!v35)
    {
      while (1)
      {
        int64_t v20 = v36 + 1;
        if (__OFADD__(v36, 1)) {
          break;
        }
        if (v20 >= v138) {
          goto LABEL_61;
        }
        unint64_t v35 = (unint64_t)v137[v20];
        ++v36;
        if (v35) {
          goto LABEL_22;
        }
      }
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    int64_t v20 = v36;
    goto LABEL_22;
  }
LABEL_61:
  uint64_t result = swift_release();
  uint64_t v68 = v150;
  uint64_t v69 = v151;
  uint64_t v70 = *(void *)(v151 + 16);
  uint64_t v71 = *(void *)(v150 + 16);
  BOOL v72 = __OFADD__(v70, v71);
  uint64_t v73 = v70 + v71;
  if (v72) {
    goto LABEL_83;
  }
  uint64_t v74 = v149;
  uint64_t v75 = *(void *)(v149 + 16);
  BOOL v72 = __OFADD__(v73, v75);
  uint64_t v76 = v73 + v75;
  if (v72)
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  uint64_t v77 = v148;
  uint64_t v78 = *(void *)(v148 + 16);
  uint64_t v79 = v76 + v78;
  if (__OFADD__(v76, v78))
  {
LABEL_85:
    __break(1u);
    return result;
  }
  uint64_t v80 = swift_bridgeObjectRetain();
  uint64_t v81 = sub_251D8F0C0(v80, v68);
  uint64_t v82 = swift_bridgeObjectRetain();
  uint64_t v83 = sub_251D8F0C0(v82, v81);
  uint64_t v84 = swift_bridgeObjectRetain();
  uint64_t v85 = sub_251D8F0C0(v84, v83);
  if (v79 < 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v89 = type metadata accessor for DoorLockStatusItem(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 56))(v134, 1, 1, v89);
  }
  uint64_t v86 = *(void *)(v69 + 16);
  uint64_t v145 = v85;
  if (v86)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    static String.hfLocalized(_:)(0xD000000000000025, 0x8000000251F6E970);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
    uint64_t v87 = swift_allocObject();
    *(_OWORD *)(v87 + 16) = xmmword_251F38650;
    uint64_t v88 = *(void *)(v69 + 16);
    goto LABEL_71;
  }
  swift_bridgeObjectRelease();
  uint64_t v90 = *(void *)(v74 + 16);
  if (v90 && v90 == v79)
  {
    swift_bridgeObjectRelease();
    static String.hfLocalized(_:)(0xD000000000000028, 0x8000000251F6E940);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
    uint64_t v87 = swift_allocObject();
    *(_OWORD *)(v87 + 16) = xmmword_251F38650;
    uint64_t v88 = *(void *)(v74 + 16);
LABEL_71:
    swift_bridgeObjectRelease();
    uint64_t v91 = MEMORY[0x263F8D750];
    *(void *)(v87 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v87 + 64) = v91;
    *(void *)(v87 + 32) = v88;
LABEL_72:
    uint64_t v92 = sub_251F35710();
    uint64_t v141 = v93;
    uint64_t v142 = v92;
    uint64_t v140 = 0x65706F2E6B636F6CLL;
    unint64_t v139 = 0xEE006C6C69662E6ELL;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v120 = *(void *)(v77 + 16);
    if (!v120 || v120 != v79)
    {
      swift_bridgeObjectRelease();
      static String.hfLocalized(_:)(0xD000000000000027, 0x8000000251F6E8B0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
      uint64_t v126 = swift_allocObject();
      uint64_t v127 = MEMORY[0x263F8D6C8];
      *(_OWORD *)(v126 + 16) = xmmword_251F38650;
      uint64_t v128 = MEMORY[0x263F8D750];
      *(void *)(v126 + 56) = v127;
      *(void *)(v126 + 64) = v128;
      *(void *)(v126 + 32) = v79;
      goto LABEL_72;
    }
    static String.hfLocalized(_:)(0xD000000000000026, 0x8000000251F6E910);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
    uint64_t v121 = swift_allocObject();
    *(_OWORD *)(v121 + 16) = xmmword_251F38650;
    uint64_t v122 = *(void *)(v77 + 16);
    swift_bridgeObjectRelease();
    uint64_t v123 = MEMORY[0x263F8D750];
    *(void *)(v121 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v121 + 64) = v123;
    *(void *)(v121 + 32) = v122;
    uint64_t v124 = sub_251F35710();
    uint64_t v141 = v125;
    uint64_t v142 = v124;
    unint64_t v139 = 0xE90000000000006CLL;
    uint64_t v140 = 0x6C69662E6B636F6CLL;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v143 = &v129;
  uint64_t v95 = *(void *)(*(void *)(v94 - 8) + 64);
  MEMORY[0x270FA5388](v94 - 8);
  unint64_t v96 = (v95 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v97 = sub_251F34DA0();
  uint64_t v98 = *(void *)(v97 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v98 + 56))((char *)&v129 - v96, 1, 1, v97);
  uint64_t v99 = static String.hfLocalized(_:)(0xD000000000000022, 0x8000000251F6E8E0);
  uint64_t v101 = v100;
  uint64_t v102 = MEMORY[0x270FA5388](v99);
  uint64_t v104 = (char *)&v129 - ((v103 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v102);
  uint64_t v105 = (char *)&v129 - v96;
  sub_251A1B128((uint64_t)&v129 - v96, (uint64_t)&v129 - v96, &qword_26B21FF90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48))((char *)&v129 - v96, 1, v97) == 1)
  {
    sub_251F34D90();
    sub_251A1B064((uint64_t)&v129 - v96, &qword_26B21FF90);
    sub_251A1B064((uint64_t)v105, &qword_26B21FF90);
    uint64_t v106 = *(void (**)(char *, char *, uint64_t))(v98 + 32);
  }
  else
  {
    sub_251A1B064((uint64_t)&v129 - v96, &qword_26B21FF90);
    uint64_t v106 = *(void (**)(char *, char *, uint64_t))(v98 + 32);
    v106(v104, v105, v97);
  }
  uint64_t v107 = (uint64_t)v129;
  v106(v129, v104, v97);
  uint64_t v108 = (int *)v130;
  unint64_t v109 = (uint64_t *)(v107 + *(int *)(v130 + 20));
  unint64_t v110 = v139;
  *unint64_t v109 = v140;
  v109[1] = v110;
  uint64_t v111 = (uint64_t *)(v107 + v108[6]);
  *uint64_t v111 = v99;
  v111[1] = v101;
  uint64_t v112 = (uint64_t *)(v107 + v108[7]);
  uint64_t v113 = v141;
  *uint64_t v112 = v142;
  v112[1] = v113;
  uint64_t v114 = v107 + v108[8];
  *(void *)uint64_t v114 = 0;
  *(void *)(v114 + 8) = 0;
  *(void *)(v114 + 16) = 0;
  *(unsigned char *)(v114 + 24) = -1;
  uint64_t v115 = v131;
  uint64_t v116 = sub_251C30CB0(v107, v131, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
  MEMORY[0x270FA5388](v116);
  *(&v129 - 2) = (char *)v145;
  uint64_t v147 = v144;
  uint64_t v117 = (uint64_t)v133;
  sub_251F34EF0();
  swift_bridgeObjectRelease();
  swift_storeEnumTagMultiPayload();
  uint64_t v118 = type metadata accessor for DoorLockStatusItem(0);
  uint64_t v119 = v134;
  sub_251C30CB0(v117, v134 + *(int *)(v118 + 20), (uint64_t (*)(void))type metadata accessor for TilesFilter);
  sub_251C30CB0(v115, v119, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
  *(unsigned char *)(v119 + *(int *)(v118 + 24)) = 1;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v118 - 8) + 56))(v119, 0, 1, v118);
}

uint64_t sub_251C238E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v161 = a2;
  uint64_t v159 = type metadata accessor for TilesFilter();
  MEMORY[0x270FA5388](v159);
  int64_t v160 = (char *)&v156 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v4 = MEMORY[0x270FA5388](v157);
  Swift::Int_optional v156 = (char *)&v156 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v158 = (uint64_t)&v156 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F108);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v173 = (char **)((char *)&v156 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v156 - v10;
  uint64_t v12 = (int *)type metadata accessor for StaticService();
  uint64_t v171 = *((void *)v12 - 1);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v162 = (uint64_t)&v156 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  unint64_t v169 = (unint64_t)&v156 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v156 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v170 = (uint64_t)&v156 - v21;
  uint64_t v22 = 0;
  uint64_t v179 = MEMORY[0x263F8EE88];
  uint64_t v180 = MEMORY[0x263F8EE88];
  uint64_t v177 = MEMORY[0x263F8EE88];
  uint64_t v178 = MEMORY[0x263F8EE88];
  uint64_t v172 = a1;
  uint64_t v25 = *(void *)(a1 + 56);
  uint64_t v24 = a1 + 56;
  uint64_t v23 = v25;
  uint64_t v26 = 1 << *(unsigned char *)(v24 - 24);
  uint64_t v27 = -1;
  if (v26 < 64) {
    uint64_t v27 = ~(-1 << v26);
  }
  unint64_t v28 = v27 & v23;
  uint64_t v164 = v24;
  int64_t v165 = (unint64_t)(v26 + 63) >> 6;
  uint64_t v166 = (int *)v20;
  unint64_t v167 = 0x8000000251F64BF0;
  uint64_t v168 = v11;
  while (1)
  {
    if (v28)
    {
      unint64_t v29 = __clz(__rbit64(v28));
      v28 &= v28 - 1;
      uint64_t v174 = v22;
      unint64_t v30 = v29 | ((void)v22 << 6);
      goto LABEL_23;
    }
    int64_t v31 = (int64_t)(v22 + 1);
    if (__OFADD__(v22, 1))
    {
      __break(1u);
LABEL_107:
      __break(1u);
      goto LABEL_108;
    }
    if (v31 >= v165) {
      goto LABEL_86;
    }
    unint64_t v32 = *(void *)(v164 + 8 * v31);
    int64_t v33 = (int64_t)(v22 + 1);
    if (!v32)
    {
      int64_t v33 = (int64_t)(v22 + 2);
      if ((uint64_t)(v22 + 2) >= v165) {
        goto LABEL_86;
      }
      unint64_t v32 = *(void *)(v164 + 8 * v33);
      if (!v32)
      {
        int64_t v33 = (int64_t)(v22 + 3);
        if ((uint64_t)(v22 + 3) >= v165) {
          goto LABEL_86;
        }
        unint64_t v32 = *(void *)(v164 + 8 * v33);
        if (!v32)
        {
          int64_t v33 = (int64_t)(v22 + 4);
          if ((uint64_t)(v22 + 4) >= v165) {
            goto LABEL_86;
          }
          unint64_t v32 = *(void *)(v164 + 8 * v33);
          if (!v32) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v28 = (v32 - 1) & v32;
    uint64_t v174 = (char *)v33;
    unint64_t v30 = __clz(__rbit64(v32)) + (v33 << 6);
LABEL_23:
    uint64_t v35 = v170;
    sub_251C30C48(*(void *)(v172 + 48) + *(void *)(v171 + 72) * v30, v170, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251C30CB0(v35, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v36 = v12[22];
    int v37 = v19[v36];
    LOBYTE(v176) = v19[v36];
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v38 == v167)
    {
      swift_bridgeObjectRelease();
LABEL_27:
      uint64_t v40 = *(void *)&v19[v12[28]];
      if (*(void *)(v40 + 16) && (unint64_t v41 = sub_2519FE568(88), (v42 & 1) != 0))
      {
        unint64_t v43 = v41;
        uint64_t v44 = *(void *)(v40 + 56);
        uint64_t v45 = type metadata accessor for StaticCharacteristic();
        uint64_t v46 = *(void *)(v45 - 8);
        uint64_t v47 = v44 + *(void *)(v46 + 72) * v43;
        uint64_t v48 = (uint64_t)v168;
        sub_251C30C48(v47, (uint64_t)v168, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v48, 0, 1, v45);
      }
      else
      {
        uint64_t v45 = type metadata accessor for StaticCharacteristic();
        uint64_t v48 = (uint64_t)v168;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v168, 1, 1, v45);
      }
      uint64_t v49 = v48;
      uint64_t v50 = (uint64_t)v173;
      sub_251A4ECF0(v49, (uint64_t)v173, &qword_26B21F108);
      type metadata accessor for StaticCharacteristic();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 48))(v50, 1, v45) == 1)
      {
        sub_251A1B064(v50, &qword_26B21F108);
        goto LABEL_45;
      }
      uint64_t v51 = v50 + *(int *)(v45 + 24);
      unint64_t v52 = *(void *)v51;
      switch(*(unsigned char *)(v51 + 16))
      {
        case 0:
          sub_251C30D18((uint64_t)v173, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
          if ((v52 & 1) == 0) {
            goto LABEL_45;
          }
          goto LABEL_43;
        case 1:
          unint64_t v52 = *(void *)v51;
          goto LABEL_41;
        case 2:
          unint64_t v52 = (unsigned __int16)*(void *)v51;
          goto LABEL_41;
        case 3:
          unint64_t v52 = *(void *)v51;
          goto LABEL_41;
        case 4:
          if ((v52 & 0x8000000000000000) == 0) {
            goto LABEL_41;
          }
          goto LABEL_107;
        case 5:
        case 6:
          unint64_t v52 = (int)v52;
LABEL_41:
          if (v52 > 1) {
            goto LABEL_44;
          }
          sub_251C30D18((uint64_t)v173, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
          if (v52 != 1) {
            goto LABEL_45;
          }
LABEL_43:
          uint64_t v53 = sub_251F34DA0();
          long long v163 = &v156;
          uint64_t v54 = *(void *)(v53 - 8);
          uint64_t v55 = MEMORY[0x270FA5388](v53);
          uint64_t v57 = (char *)&v156 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
          MEMORY[0x270FA5388](v55);
          Swift::Int v59 = (char *)&v156 - v58;
          (*(void (**)(char *, char *, uint64_t))(v54 + 16))((char *)&v156 - v58, v19, v53);
          sub_251A637B8(v57, v59);
          (*(void (**)(char *, uint64_t))(v54 + 8))(v57, v53);
          sub_251C30D18((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StaticService);
          uint64_t v22 = v174;
          break;
        default:
LABEL_44:
          sub_251C30D18((uint64_t)v173, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
          goto LABEL_45;
      }
    }
    else
    {
      char v39 = sub_251F36B10();
      swift_bridgeObjectRelease();
      if (v39) {
        goto LABEL_27;
      }
LABEL_45:
      LOBYTE(v176) = v37;
      if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v60 == 0x8000000251F64BF0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v61 = sub_251F36B10();
        swift_bridgeObjectRelease();
        if ((v61 & 1) == 0) {
          goto LABEL_57;
        }
      }
      Swift::Int_optional v176 = *(int **)&v19[v12[28]];
      char v175 = -107;
      Swift::Int_optional v181 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v175);
      if (v181.is_nil)
      {
        uint64_t v63 = v169;
        sub_251C30C48((uint64_t)v19, v169, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_56:
        sub_251C30D18(v63, (uint64_t (*)(void))type metadata accessor for StaticService);
        goto LABEL_57;
      }
      Swift::Int value = v181.value;
      uint64_t v63 = v169;
      sub_251C30C48((uint64_t)v19, v169, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (value == 1) {
        goto LABEL_56;
      }
      Swift::Int_optional v176 = *(int **)(v63 + v12[28]);
      uint64_t v64 = v176;
      char v175 = 31;
      Swift::Int_optional v182 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v175);
      Swift::Int v65 = v182.value;
      Swift::Bool is_nil = v182.is_nil;
      Swift::Int_optional v176 = v64;
      char v175 = -107;
      Swift::Int_optional v183 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v175);
      if (is_nil)
      {
        uint64_t v63 = v169;
        if (!v183.is_nil)
        {
LABEL_79:
          sub_251C30D18(v63, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_80:
          uint64_t v78 = sub_251F34DA0();
          uint64_t v79 = *(void *)(v78 - 8);
          uint64_t v80 = MEMORY[0x270FA5388](v78);
          uint64_t v82 = (char *)&v156 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
          MEMORY[0x270FA5388](v80);
          uint64_t v84 = (char *)&v156 - v83;
          (*(void (**)(char *, char *, uint64_t))(v79 + 16))((char *)&v156 - v83, v19, v78);
          sub_251A637B8(v82, v84);
          (*(void (**)(char *, uint64_t))(v79 + 8))(v82, v78);
          sub_251C30D18((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StaticService);
          uint64_t v12 = v166;
          goto LABEL_85;
        }
        goto LABEL_56;
      }
      uint64_t v63 = v169;
      if (v183.is_nil) {
        goto LABEL_79;
      }
      Swift::Int v67 = v183.value;
      sub_251C30D18(v169, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (v65 != v67) {
        goto LABEL_80;
      }
LABEL_57:
      LOBYTE(v176) = v37;
      if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v68 == 0x8000000251F64BF0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v69 = sub_251F36B10();
        swift_bridgeObjectRelease();
        if ((v69 & 1) == 0) {
          goto LABEL_64;
        }
      }
      Swift::Int_optional v176 = *(int **)&v19[v12[28]];
      uint64_t v70 = v176;
      char v175 = 31;
      Swift::Int_optional v184 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v175);
      Swift::Int v71 = v184.value;
      Swift::Bool v72 = v184.is_nil;
      Swift::Int_optional v176 = v70;
      char v175 = -107;
      Swift::Int_optional v185 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v175);
      if (v72)
      {
        if (v185.is_nil) {
          goto LABEL_64;
        }
LABEL_84:
        uint64_t v86 = sub_251F34DA0();
        uint64_t v87 = *(void *)(v86 - 8);
        uint64_t v88 = MEMORY[0x270FA5388](v86);
        uint64_t v90 = (char *)&v156 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0);
        MEMORY[0x270FA5388](v88);
        uint64_t v92 = (char *)&v156 - v91;
        (*(void (**)(char *, char *, uint64_t))(v87 + 16))((char *)&v156 - v91, v19, v86);
        sub_251A637B8(v90, v92);
        (*(void (**)(char *, uint64_t))(v87 + 8))(v90, v86);
        uint64_t v12 = v166;
        sub_251C30D18((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_85:
        uint64_t v22 = v174;
      }
      else
      {
        if (v185.is_nil || v71 != v185.value) {
          goto LABEL_84;
        }
LABEL_64:
        LOBYTE(v176) = v37;
        if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v73 == 0x8000000251F64BF0)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v74 = sub_251F36B10();
          swift_bridgeObjectRelease();
          if ((v74 & 1) == 0) {
            goto LABEL_72;
          }
        }
        Swift::Int_optional v176 = *(int **)&v19[v12[28]];
        char v175 = 31;
        Swift::Int_optional v186 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v175);
        if (!v186.is_nil && v186.value != 1) {
          goto LABEL_84;
        }
LABEL_72:
        if (v37 != 11) {
          goto LABEL_4;
        }
        int v75 = v19[v12[24]];
        uint64_t v76 = v162;
        sub_251C30C48((uint64_t)v19, v162, (uint64_t (*)(void))type metadata accessor for StaticService);
        if (v75 == 53) {
          LOBYTE(v75) = *(unsigned char *)(v76 + v12[22]);
        }
        sub_251C30D18(v76, (uint64_t (*)(void))type metadata accessor for StaticService);
        LOBYTE(v176) = v75;
        if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v77 == 0x8000000251F64BF0)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v85 = sub_251F36B10();
          swift_bridgeObjectRelease();
          if ((v85 & 1) == 0) {
            goto LABEL_4;
          }
        }
        Swift::Int_optional v176 = *(int **)&v19[v12[28]];
        char v175 = 28;
        Swift::Int_optional v187 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v175);
        if (!v187.is_nil && v187.value == 1) {
          goto LABEL_84;
        }
LABEL_4:
        sub_251C30D18((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v22 = v174;
      }
    }
  }
  int64_t v34 = v22 + 5;
  if ((uint64_t)(v22 + 5) < v165)
  {
    unint64_t v32 = *(void *)(v164 + 8 * (void)v34);
    if (!v32)
    {
      while (1)
      {
        int64_t v33 = (int64_t)(v34 + 1);
        if (__OFADD__(v34, 1)) {
          break;
        }
        if (v33 >= v165) {
          goto LABEL_86;
        }
        unint64_t v32 = *(void *)(v164 + 8 * v33);
        ++v34;
        if (v32) {
          goto LABEL_22;
        }
      }
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
      goto LABEL_110;
    }
    int64_t v33 = (int64_t)(v22 + 5);
    goto LABEL_22;
  }
LABEL_86:
  swift_release();
  uint64_t v93 = v179;
  uint64_t v94 = v180;
  uint64_t v95 = *(void *)(v180 + 16);
  uint64_t v96 = *(void *)(v179 + 16);
  BOOL v97 = __OFADD__(v95, v96);
  uint64_t v98 = v95 + v96;
  if (v97) {
    goto LABEL_109;
  }
  uint64_t v99 = v178;
  uint64_t v100 = *(void *)(v178 + 16);
  BOOL v97 = __OFADD__(v98, v100);
  uint64_t v101 = v98 + v100;
  if (v97)
  {
LABEL_110:
    __break(1u);
    goto LABEL_111;
  }
  uint64_t v102 = v177;
  uint64_t v103 = *(void *)(v177 + 16);
  uint64_t v104 = v101 + v103;
  if (__OFADD__(v101, v103))
  {
LABEL_111:
    __break(1u);
    JUMPOUT(0x251C24E7CLL);
  }
  uint64_t v105 = swift_bridgeObjectRetain();
  uint64_t v106 = sub_251D8F0C0(v105, v93);
  uint64_t v107 = swift_bridgeObjectRetain();
  uint64_t v108 = sub_251D8F0C0(v107, v106);
  uint64_t v109 = swift_bridgeObjectRetain();
  uint64_t v110 = sub_251D8F0C0(v109, v108);
  if (v104 < 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v114 = type metadata accessor for GarageDoorStatusItem(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 56))(v161, 1, 1, v114);
  }
  else
  {
    uint64_t v111 = *(void *)(v94 + 16);
    uint64_t v174 = (char *)v110;
    if (v111)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      static String.hfLocalized(_:)(0xD00000000000002FLL, 0x8000000251F6E880);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
      uint64_t v112 = swift_allocObject();
      *(_OWORD *)(v112 + 16) = xmmword_251F38650;
      uint64_t v113 = *(void *)(v94 + 16);
      goto LABEL_96;
    }
    swift_bridgeObjectRelease();
    uint64_t v116 = *(void *)(v99 + 16);
    if (v116 && v116 == v104)
    {
      swift_bridgeObjectRelease();
      static String.hfLocalized(_:)(0xD00000000000002CLL, 0x8000000251F6E850);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
      uint64_t v112 = swift_allocObject();
      *(_OWORD *)(v112 + 16) = xmmword_251F38650;
      uint64_t v113 = *(void *)(v99 + 16);
LABEL_96:
      swift_bridgeObjectRelease();
      uint64_t v117 = MEMORY[0x263F8D750];
      *(void *)(v112 + 56) = MEMORY[0x263F8D6C8];
      *(void *)(v112 + 64) = v117;
      *(void *)(v112 + 32) = v113;
LABEL_97:
      uint64_t v118 = sub_251F35710();
      uint64_t v171 = v119;
      uint64_t v172 = v118;
      uint64_t v170 = 0xD000000000000010;
      uint64_t v120 = "door.garage.open";
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v147 = *(void *)(v102 + 16);
      if (!v147 || v147 != v104)
      {
        swift_bridgeObjectRelease();
        static String.hfLocalized(_:)(0xD000000000000029, 0x8000000251F6E7C0);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
        uint64_t v153 = swift_allocObject();
        uint64_t v154 = MEMORY[0x263F8D6C8];
        *(_OWORD *)(v153 + 16) = xmmword_251F38650;
        uint64_t v155 = MEMORY[0x263F8D750];
        *(void *)(v153 + 56) = v154;
        *(void *)(v153 + 64) = v155;
        *(void *)(v153 + 32) = v104;
        goto LABEL_97;
      }
      static String.hfLocalized(_:)(0xD00000000000002CLL, 0x8000000251F6E820);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
      uint64_t v148 = swift_allocObject();
      *(_OWORD *)(v148 + 16) = xmmword_251F38650;
      uint64_t v149 = *(void *)(v102 + 16);
      swift_bridgeObjectRelease();
      uint64_t v150 = MEMORY[0x263F8D750];
      *(void *)(v148 + 56) = MEMORY[0x263F8D6C8];
      *(void *)(v148 + 64) = v150;
      *(void *)(v148 + 32) = v149;
      uint64_t v151 = sub_251F35710();
      uint64_t v171 = v152;
      uint64_t v172 = v151;
      uint64_t v170 = 0xD000000000000012;
      uint64_t v120 = "door.garage.closed";
    }
    unint64_t v169 = (unint64_t)(v120 - 32) | 0x8000000000000000;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v173 = &v156;
    uint64_t v122 = *(void *)(*(void *)(v121 - 8) + 64);
    MEMORY[0x270FA5388](v121 - 8);
    unint64_t v123 = (v122 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v124 = sub_251F34DA0();
    uint64_t v125 = *(void *)(v124 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v125 + 56))((char *)&v156 - v123, 1, 1, v124);
    uint64_t v126 = static String.hfLocalized(_:)(0xD00000000000002ALL, 0x8000000251F6E7F0);
    uint64_t v128 = v127;
    uint64_t v129 = MEMORY[0x270FA5388](v126);
    uint64_t v131 = (char *)&v156 - ((v130 + 15) & 0xFFFFFFFFFFFFFFF0);
    MEMORY[0x270FA5388](v129);
    uint64_t v132 = (char *)&v156 - v123;
    sub_251A1B128((uint64_t)&v156 - v123, (uint64_t)&v156 - v123, &qword_26B21FF90);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v125 + 48))((char *)&v156 - v123, 1, v124) == 1)
    {
      sub_251F34D90();
      sub_251A1B064((uint64_t)&v156 - v123, &qword_26B21FF90);
      sub_251A1B064((uint64_t)v132, &qword_26B21FF90);
      char v133 = *(void (**)(char *, char *, uint64_t))(v125 + 32);
    }
    else
    {
      sub_251A1B064((uint64_t)&v156 - v123, &qword_26B21FF90);
      char v133 = *(void (**)(char *, char *, uint64_t))(v125 + 32);
      v133(v131, v132, v124);
    }
    uint64_t v134 = (uint64_t)v156;
    v133(v156, v131, v124);
    uint64_t v135 = (int *)v157;
    uint64_t v136 = (void *)(v134 + *(int *)(v157 + 20));
    unint64_t v137 = v169;
    void *v136 = v170;
    v136[1] = v137;
    int64_t v138 = (uint64_t *)(v134 + v135[6]);
    uint64_t *v138 = v126;
    v138[1] = v128;
    unint64_t v139 = (uint64_t *)(v134 + v135[7]);
    uint64_t v140 = v171;
    *unint64_t v139 = v172;
    v139[1] = v140;
    uint64_t v141 = v134 + v135[8];
    *(void *)uint64_t v141 = 0;
    *(void *)(v141 + 8) = 0;
    *(void *)(v141 + 16) = 0;
    *(unsigned char *)(v141 + 24) = -1;
    uint64_t v142 = v158;
    uint64_t v143 = sub_251C30CB0(v134, v158, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    MEMORY[0x270FA5388](v143);
    *(&v156 - 2) = v174;
    Swift::Int_optional v176 = v166;
    uint64_t v144 = (uint64_t)v160;
    sub_251F34EF0();
    swift_bridgeObjectRelease();
    swift_storeEnumTagMultiPayload();
    uint64_t v145 = type metadata accessor for GarageDoorStatusItem(0);
    uint64_t v146 = v161;
    sub_251C30CB0(v144, v161 + *(int *)(v145 + 20), (uint64_t (*)(void))type metadata accessor for TilesFilter);
    sub_251C30CB0(v142, v146, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    *(unsigned char *)(v146 + *(int *)(v145 + 24)) = 1;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v145 - 8) + 56))(v146, 0, 1, v145);
  }
}

uint64_t sub_251C24E98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v159 = a2;
  uint64_t v157 = type metadata accessor for TilesFilter();
  MEMORY[0x270FA5388](v157);
  uint64_t v158 = (char *)&v154 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v4 = MEMORY[0x270FA5388](v155);
  uint64_t v154 = (char *)&v154 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v156 = (uint64_t)&v154 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F108);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v161 = (uint64_t)&v154 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v154 - v10;
  uint64_t v12 = (int *)type metadata accessor for StaticService();
  unint64_t v167 = *((void *)v12 - 1);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v160 = (uint64_t)&v154 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v154 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v154 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  unint64_t v166 = (unint64_t)&v154 - v22;
  uint64_t v23 = 0;
  uint64_t v177 = MEMORY[0x263F8EE88];
  uint64_t v178 = MEMORY[0x263F8EE88];
  uint64_t v175 = MEMORY[0x263F8EE88];
  uint64_t v176 = MEMORY[0x263F8EE88];
  uint64_t v168 = a1;
  unint64_t v169 = v17;
  uint64_t v26 = *(void *)(a1 + 56);
  uint64_t v25 = a1 + 56;
  uint64_t v24 = v26;
  uint64_t v27 = 1 << *(unsigned char *)(v25 - 24);
  uint64_t v28 = -1;
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  unint64_t v29 = v28 & v24;
  uint64_t v162 = v25;
  int64_t v163 = (unint64_t)(v27 + 63) >> 6;
  unint64_t v30 = (unint64_t)"00-8000-0026BB765291";
  unint64_t v164 = 0x8000000251F64B00;
  int64_t v165 = (int *)v21;
  uint64_t v172 = (uint64_t)"00-8000-0026BB765291";
  while (v29)
  {
    uint64_t v170 = (v29 - 1) & v29;
    uint64_t v171 = v23;
    unint64_t v31 = __clz(__rbit64(v29)) | ((void)v23 << 6);
LABEL_24:
    uint64_t v36 = v166;
    sub_251C30C48(*(void *)(v168 + 48) + *(void *)(v167 + 72) * v31, v166, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251C30CB0(v36, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v37 = v12[22];
    int v38 = v20[v37];
    LOBYTE(v174) = v20[v37];
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v39 == v164)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v40 = sub_251F36B10();
      swift_bridgeObjectRelease();
      if ((v40 & 1) == 0) {
        goto LABEL_50;
      }
    }
    LOBYTE(v174) = v38;
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v41 == (v30 | 0x8000000000000000))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v42 = sub_251F36B10();
      swift_bridgeObjectRelease();
      if ((v42 & 1) == 0) {
        goto LABEL_50;
      }
    }
    uint64_t v43 = *(void *)&v20[v12[28]];
    if (*(void *)(v43 + 16) && (unint64_t v44 = sub_2519FE568(88), (v45 & 1) != 0))
    {
      unint64_t v46 = v44;
      uint64_t v47 = *(void *)(v43 + 56);
      uint64_t v48 = type metadata accessor for StaticCharacteristic();
      uint64_t v49 = *(void *)(v48 - 8);
      uint64_t v50 = v165;
      sub_251C30C48(v47 + *(void *)(v49 + 72) * v46, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v11, 0, 1, v48);
    }
    else
    {
      uint64_t v50 = v12;
      uint64_t v48 = type metadata accessor for StaticCharacteristic();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v11, 1, 1, v48);
    }
    uint64_t v51 = v11;
    uint64_t v52 = (uint64_t)v11;
    uint64_t v53 = v161;
    sub_251A4ECF0(v52, v161, &qword_26B21F108);
    type metadata accessor for StaticCharacteristic();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 48))(v53, 1, v48) != 1)
    {
      uint64_t v54 = v53 + *(int *)(v48 + 24);
      uint64_t v12 = v50;
      unint64_t v30 = v172;
      unint64_t v55 = *(void *)v54;
      switch(*(unsigned char *)(v54 + 16))
      {
        case 0:
          sub_251C30D18(v53, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
          uint64_t v11 = v51;
          uint64_t v17 = v169;
          if ((v55 & 1) == 0) {
            goto LABEL_50;
          }
          goto LABEL_48;
        case 1:
          unint64_t v55 = *(void *)v54;
          goto LABEL_46;
        case 2:
          unint64_t v55 = (unsigned __int16)*(void *)v54;
          goto LABEL_46;
        case 3:
          unint64_t v55 = *(void *)v54;
          goto LABEL_46;
        case 4:
          if ((v55 & 0x8000000000000000) == 0) {
            goto LABEL_46;
          }
          goto LABEL_122;
        case 5:
        case 6:
          unint64_t v55 = (int)v55;
LABEL_46:
          if (v55 > 1) {
            goto LABEL_49;
          }
          sub_251C30D18(v53, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
          uint64_t v11 = v51;
          uint64_t v17 = v169;
          if (v55 != 1) {
            goto LABEL_50;
          }
LABEL_48:
          uint64_t v56 = sub_251F34DA0();
          uint64_t v57 = *(void *)(v56 - 8);
          uint64_t v58 = MEMORY[0x270FA5388](v56);
          uint64_t v60 = (char *)&v154 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
          MEMORY[0x270FA5388](v58);
          uint64_t v62 = (char *)&v154 - v61;
          (*(void (**)(char *, char *, uint64_t))(v57 + 16))((char *)&v154 - v61, v20, v56);
          sub_251A637B8(v60, v62);
          (*(void (**)(char *, uint64_t))(v57 + 8))(v60, v56);
          break;
        default:
LABEL_49:
          sub_251C30D18(v53, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
          uint64_t v11 = v51;
          uint64_t v17 = v169;
          goto LABEL_50;
      }
      goto LABEL_99;
    }
    sub_251A1B064(v53, &qword_26B21F108);
    uint64_t v11 = v51;
    uint64_t v17 = v169;
    uint64_t v12 = v50;
    unint64_t v30 = v172;
LABEL_50:
    LOBYTE(v174) = v38;
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v63 == (v30 | 0x8000000000000000))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v64 = sub_251F36B10();
      swift_bridgeObjectRelease();
      if ((v64 & 1) == 0) {
        goto LABEL_69;
      }
    }
    Swift::Int v65 = v12;
    int v66 = v20[v37];
    LOBYTE(v174) = v20[v37];
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v67 == (v172 | 0x8000000000000000))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v68 = sub_251F36B10();
      swift_bridgeObjectRelease();
      if ((v68 & 1) == 0)
      {
        BOOL v71 = v66 == 11;
        uint64_t v12 = v65;
        if (!v71
          || (uint64_t v174 = *(int **)&v20[v65[28]],
              char v173 = 28,
              Swift::Int_optional v180 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v173),
              v180.is_nil))
        {
LABEL_67:
          sub_251C30C48((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticService);
          unint64_t v30 = v172;
LABEL_68:
          sub_251C30D18((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticService);
          goto LABEL_69;
        }
        Swift::Int value = v180.value;
        sub_251C30C48((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticService);
        unint64_t v30 = v172;
        if (value != 1) {
          goto LABEL_68;
        }
        goto LABEL_60;
      }
    }
    uint64_t v12 = v65;
    uint64_t v174 = *(int **)&v20[v65[28]];
    char v173 = -98;
    Swift::Int_optional v179 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v173);
    if (v179.is_nil) {
      goto LABEL_67;
    }
    Swift::Int v69 = v179.value;
    sub_251C30C48((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticService);
    unint64_t v30 = v172;
    if (v69 <= 0) {
      goto LABEL_68;
    }
LABEL_60:
    BOOL v70 = sub_251C30A20((uint64_t)v17);
    sub_251C30D18((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v70) {
      goto LABEL_98;
    }
LABEL_69:
    LOBYTE(v174) = v38;
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v73 == (v30 | 0x8000000000000000))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v74 = sub_251F36B10();
      swift_bridgeObjectRelease();
      if ((v74 & 1) == 0) {
        goto LABEL_74;
      }
    }
    if (sub_251C30A20((uint64_t)v20)) {
      goto LABEL_98;
    }
LABEL_74:
    LOBYTE(v174) = v38;
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v75 == (v30 | 0x8000000000000000))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v76 = sub_251F36B10();
      swift_bridgeObjectRelease();
      if ((v76 & 1) == 0) {
        goto LABEL_89;
      }
    }
    uint64_t v77 = v12;
    int v78 = v20[v37];
    LOBYTE(v174) = v20[v37];
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v79 == (v172 | 0x8000000000000000))
    {
      swift_bridgeObjectRelease();
LABEL_82:
      uint64_t v12 = v77;
      uint64_t v174 = *(int **)&v20[v77[28]];
      char v173 = 40;
      Swift::Int_optional v181 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v173);
      unint64_t v30 = v172;
      if (v181.is_nil || v181.value <= 0) {
        goto LABEL_89;
      }
      goto LABEL_98;
    }
    char v80 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v80) {
      goto LABEL_82;
    }
    BOOL v71 = v78 == 11;
    uint64_t v12 = v77;
    unint64_t v30 = v172;
    if (!v71
      || (uint64_t v174 = *(int **)&v20[v12[28]],
          char v173 = 28,
          Swift::Int_optional v182 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v173),
          v182.is_nil)
      || v182.value != 1)
    {
LABEL_89:
      if (v38 != 11) {
        goto LABEL_4;
      }
      int v81 = v20[v12[24]];
      uint64_t v82 = v160;
      sub_251C30C48((uint64_t)v20, v160, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (v81 == 53) {
        LOBYTE(v81) = *(unsigned char *)(v82 + v12[22]);
      }
      sub_251C30D18(v82, (uint64_t (*)(void))type metadata accessor for StaticService);
      LOBYTE(v174) = v81;
      if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v83 == (v30 | 0x8000000000000000))
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v84 = sub_251F36B10();
        swift_bridgeObjectRelease();
        if ((v84 & 1) == 0) {
          goto LABEL_4;
        }
      }
      uint64_t v174 = *(int **)&v20[v12[28]];
      char v173 = 28;
      Swift::Int_optional v183 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v173);
      if (v183.is_nil || v183.value != 1)
      {
LABEL_4:
        sub_251C30D18((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for StaticService);
        goto LABEL_5;
      }
    }
LABEL_98:
    uint64_t v85 = sub_251F34DA0();
    uint64_t v86 = *(void *)(v85 - 8);
    uint64_t v87 = MEMORY[0x270FA5388](v85);
    uint64_t v89 = (char *)&v154 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0);
    MEMORY[0x270FA5388](v87);
    uint64_t v91 = (char *)&v154 - v90;
    (*(void (**)(char *, char *, uint64_t))(v86 + 16))((char *)&v154 - v90, v20, v85);
    sub_251A637B8(v89, v91);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v89, v85);
LABEL_99:
    sub_251C30D18((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v17 = v169;
    uint64_t v12 = v165;
LABEL_5:
    unint64_t v29 = v170;
    uint64_t v23 = v171;
  }
  int64_t v32 = (int64_t)v23 + 1;
  if (__OFADD__(v23, 1))
  {
    __break(1u);
    goto LABEL_121;
  }
  if (v32 >= v163) {
    goto LABEL_100;
  }
  unint64_t v33 = *(void *)(v162 + 8 * v32);
  int64_t v34 = (int64_t)v23 + 1;
  if (v33) {
    goto LABEL_23;
  }
  int64_t v34 = (int64_t)v23 + 2;
  if ((uint64_t)v23 + 2 >= v163) {
    goto LABEL_100;
  }
  unint64_t v33 = *(void *)(v162 + 8 * v34);
  if (v33) {
    goto LABEL_23;
  }
  int64_t v34 = (int64_t)v23 + 3;
  if ((uint64_t)v23 + 3 >= v163) {
    goto LABEL_100;
  }
  unint64_t v33 = *(void *)(v162 + 8 * v34);
  if (v33) {
    goto LABEL_23;
  }
  int64_t v34 = (int64_t)v23 + 4;
  if ((uint64_t)v23 + 4 >= v163) {
    goto LABEL_100;
  }
  unint64_t v33 = *(void *)(v162 + 8 * v34);
  if (v33)
  {
LABEL_23:
    uint64_t v170 = (v33 - 1) & v33;
    uint64_t v171 = (char **)v34;
    unint64_t v31 = __clz(__rbit64(v33)) + (v34 << 6);
    goto LABEL_24;
  }
  uint64_t v35 = (char *)v23 + 5;
  if ((uint64_t)v23 + 5 < v163)
  {
    unint64_t v33 = *(void *)(v162 + 8 * (void)v35);
    if (!v33)
    {
      while (1)
      {
        int64_t v34 = (int64_t)(v35 + 1);
        if (__OFADD__(v35, 1)) {
          break;
        }
        if (v34 >= v163) {
          goto LABEL_100;
        }
        unint64_t v33 = *(void *)(v162 + 8 * v34);
        ++v35;
        if (v33) {
          goto LABEL_23;
        }
      }
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
      goto LABEL_124;
    }
    int64_t v34 = (int64_t)v23 + 5;
    goto LABEL_23;
  }
LABEL_100:
  swift_release();
  uint64_t v92 = v177;
  uint64_t v93 = v178;
  uint64_t v94 = *(void *)(v178 + 16);
  uint64_t v95 = *(void *)(v177 + 16);
  BOOL v96 = __OFADD__(v94, v95);
  uint64_t v97 = v94 + v95;
  if (v96) {
    goto LABEL_123;
  }
  uint64_t v98 = v176;
  uint64_t v99 = *(void *)(v176 + 16);
  BOOL v96 = __OFADD__(v97, v99);
  uint64_t v100 = v97 + v99;
  if (v96)
  {
LABEL_124:
    __break(1u);
    goto LABEL_125;
  }
  uint64_t v101 = v175;
  uint64_t v102 = *(void *)(v175 + 16);
  uint64_t v103 = v100 + v102;
  if (__OFADD__(v100, v102))
  {
LABEL_125:
    __break(1u);
    JUMPOUT(0x251C264F0);
  }
  uint64_t v104 = swift_bridgeObjectRetain();
  uint64_t v105 = sub_251D8F0C0(v104, v92);
  uint64_t v106 = swift_bridgeObjectRetain();
  uint64_t v107 = sub_251D8F0C0(v106, v105);
  uint64_t v108 = swift_bridgeObjectRetain();
  uint64_t v109 = sub_251D8F0C0(v108, v107);
  if (v103 < 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v113 = type metadata accessor for DoorStatusItem(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 56))(v159, 1, 1, v113);
  }
  else
  {
    uint64_t v110 = *(void *)(v93 + 16);
    uint64_t v172 = v109;
    if (v110)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      static String.hfLocalized(_:)(0xD000000000000029, 0x8000000251F6E790);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
      uint64_t v111 = swift_allocObject();
      *(_OWORD *)(v111 + 16) = xmmword_251F38650;
      uint64_t v112 = *(void *)(v93 + 16);
      goto LABEL_110;
    }
    swift_bridgeObjectRelease();
    uint64_t v115 = *(void *)(v98 + 16);
    if (v115 && v115 == v103)
    {
      swift_bridgeObjectRelease();
      static String.hfLocalized(_:)(0xD000000000000026, 0x8000000251F6E760);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
      uint64_t v111 = swift_allocObject();
      *(_OWORD *)(v111 + 16) = xmmword_251F38650;
      uint64_t v112 = *(void *)(v98 + 16);
LABEL_110:
      swift_bridgeObjectRelease();
      uint64_t v116 = MEMORY[0x263F8D750];
      *(void *)(v111 + 56) = MEMORY[0x263F8D6C8];
      *(void *)(v111 + 64) = v116;
      *(void *)(v111 + 32) = v112;
LABEL_111:
      uint64_t v117 = sub_251F35710();
      uint64_t v168 = v118;
      unint64_t v169 = (char *)v117;
      unint64_t v167 = 0xD000000000000014;
      uint64_t v119 = "door.right.hand.open";
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v145 = *(void *)(v101 + 16);
      if (!v145 || v145 != v103)
      {
        swift_bridgeObjectRelease();
        static String.hfLocalized(_:)(0xD000000000000023, 0x8000000251F6E6E0);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
        uint64_t v151 = swift_allocObject();
        uint64_t v152 = MEMORY[0x263F8D6C8];
        *(_OWORD *)(v151 + 16) = xmmword_251F38650;
        uint64_t v153 = MEMORY[0x263F8D750];
        *(void *)(v151 + 56) = v152;
        *(void *)(v151 + 64) = v153;
        *(void *)(v151 + 32) = v103;
        goto LABEL_111;
      }
      static String.hfLocalized(_:)(0xD000000000000026, 0x8000000251F6E730);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
      uint64_t v146 = swift_allocObject();
      *(_OWORD *)(v146 + 16) = xmmword_251F38650;
      uint64_t v147 = *(void *)(v101 + 16);
      swift_bridgeObjectRelease();
      uint64_t v148 = MEMORY[0x263F8D750];
      *(void *)(v146 + 56) = MEMORY[0x263F8D6C8];
      *(void *)(v146 + 64) = v148;
      *(void *)(v146 + 32) = v147;
      uint64_t v149 = sub_251F35710();
      uint64_t v168 = v150;
      unint64_t v169 = (char *)v149;
      unint64_t v167 = 0xD000000000000016;
      uint64_t v119 = "door.right.hand.closed";
    }
    unint64_t v166 = (unint64_t)(v119 - 32) | 0x8000000000000000;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v171 = &v154;
    uint64_t v121 = *(void *)(*(void *)(v120 - 8) + 64);
    MEMORY[0x270FA5388](v120 - 8);
    unint64_t v122 = (v121 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v123 = sub_251F34DA0();
    uint64_t v124 = *(void *)(v123 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v124 + 56))((char *)&v154 - v122, 1, 1, v123);
    uint64_t v170 = static String.hfLocalized(_:)(0xD00000000000001ELL, 0x8000000251F6E710);
    uint64_t v126 = v125;
    uint64_t v127 = MEMORY[0x270FA5388](v170);
    uint64_t v129 = (char *)&v154 - ((v128 + 15) & 0xFFFFFFFFFFFFFFF0);
    MEMORY[0x270FA5388](v127);
    sub_251A1B128((uint64_t)&v154 - v122, (uint64_t)&v154 - v122, &qword_26B21FF90);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v124 + 48))((char *)&v154 - v122, 1, v123) == 1)
    {
      sub_251F34D90();
      sub_251A1B064((uint64_t)&v154 - v122, &qword_26B21FF90);
      sub_251A1B064((uint64_t)&v154 - v122, &qword_26B21FF90);
      uint64_t v130 = *(void (**)(char *, char *, uint64_t))(v124 + 32);
    }
    else
    {
      sub_251A1B064((uint64_t)&v154 - v122, &qword_26B21FF90);
      uint64_t v130 = *(void (**)(char *, char *, uint64_t))(v124 + 32);
      v130(v129, (char *)&v154 - v122, v123);
    }
    uint64_t v131 = v165;
    uint64_t v132 = (uint64_t)v154;
    v130(v154, v129, v123);
    char v133 = (int *)v155;
    uint64_t v134 = (unint64_t *)(v132 + *(int *)(v155 + 20));
    unint64_t v135 = v166;
    *uint64_t v134 = v167;
    v134[1] = v135;
    uint64_t v136 = (uint64_t *)(v132 + v133[6]);
    uint64_t *v136 = v170;
    v136[1] = v126;
    unint64_t v137 = (void *)(v132 + v133[7]);
    uint64_t v138 = v168;
    void *v137 = v169;
    v137[1] = v138;
    uint64_t v139 = v132 + v133[8];
    *(void *)uint64_t v139 = 0;
    *(void *)(v139 + 8) = 0;
    *(void *)(v139 + 16) = 0;
    *(unsigned char *)(v139 + 24) = -1;
    uint64_t v140 = v156;
    uint64_t v141 = sub_251C30CB0(v132, v156, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    MEMORY[0x270FA5388](v141);
    *(&v154 - 2) = (char *)v172;
    uint64_t v174 = v131;
    uint64_t v142 = (uint64_t)v158;
    sub_251F34EF0();
    swift_bridgeObjectRelease();
    swift_storeEnumTagMultiPayload();
    uint64_t v143 = type metadata accessor for DoorStatusItem(0);
    uint64_t v144 = v159;
    sub_251C30CB0(v142, v159 + *(int *)(v143 + 20), (uint64_t (*)(void))type metadata accessor for TilesFilter);
    sub_251C30CB0(v140, v144, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v143 - 8) + 56))(v144, 0, 1, v143);
  }
}

uint64_t sub_251C2650C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v159 = a2;
  uint64_t v157 = type metadata accessor for TilesFilter();
  MEMORY[0x270FA5388](v157);
  uint64_t v158 = (char *)&v154 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v4 = MEMORY[0x270FA5388](v155);
  uint64_t v154 = (char *)&v154 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v156 = (uint64_t)&v154 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F108);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v161 = (uint64_t)&v154 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v154 - v10;
  uint64_t v12 = (int *)type metadata accessor for StaticService();
  unint64_t v167 = *((void *)v12 - 1);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v160 = (uint64_t)&v154 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v154 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v154 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  unint64_t v166 = (unint64_t)&v154 - v22;
  uint64_t v23 = 0;
  uint64_t v177 = MEMORY[0x263F8EE88];
  uint64_t v178 = MEMORY[0x263F8EE88];
  uint64_t v175 = MEMORY[0x263F8EE88];
  uint64_t v176 = MEMORY[0x263F8EE88];
  uint64_t v168 = a1;
  unint64_t v169 = v17;
  uint64_t v26 = *(void *)(a1 + 56);
  uint64_t v25 = a1 + 56;
  uint64_t v24 = v26;
  uint64_t v27 = 1 << *(unsigned char *)(v25 - 24);
  uint64_t v28 = -1;
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  unint64_t v29 = v28 & v24;
  uint64_t v162 = v25;
  int64_t v163 = (unint64_t)(v27 + 63) >> 6;
  unint64_t v30 = (unint64_t)"00-8000-0026BB765291";
  unint64_t v164 = 0x8000000251F651F0;
  int64_t v165 = (int *)v21;
  uint64_t v172 = (uint64_t)"00-8000-0026BB765291";
  while (v29)
  {
    uint64_t v170 = (v29 - 1) & v29;
    uint64_t v171 = v23;
    unint64_t v31 = __clz(__rbit64(v29)) | ((void)v23 << 6);
LABEL_24:
    uint64_t v36 = v166;
    sub_251C30C48(*(void *)(v168 + 48) + *(void *)(v167 + 72) * v31, v166, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251C30CB0(v36, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v37 = v12[22];
    int v38 = v20[v37];
    LOBYTE(v174) = v20[v37];
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v39 == v164)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v40 = sub_251F36B10();
      swift_bridgeObjectRelease();
      if ((v40 & 1) == 0) {
        goto LABEL_50;
      }
    }
    LOBYTE(v174) = v38;
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v41 == (v30 | 0x8000000000000000))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v42 = sub_251F36B10();
      swift_bridgeObjectRelease();
      if ((v42 & 1) == 0) {
        goto LABEL_50;
      }
    }
    uint64_t v43 = *(void *)&v20[v12[28]];
    if (*(void *)(v43 + 16) && (unint64_t v44 = sub_2519FE568(88), (v45 & 1) != 0))
    {
      unint64_t v46 = v44;
      uint64_t v47 = *(void *)(v43 + 56);
      uint64_t v48 = type metadata accessor for StaticCharacteristic();
      uint64_t v49 = *(void *)(v48 - 8);
      uint64_t v50 = v165;
      sub_251C30C48(v47 + *(void *)(v49 + 72) * v46, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v11, 0, 1, v48);
    }
    else
    {
      uint64_t v50 = v12;
      uint64_t v48 = type metadata accessor for StaticCharacteristic();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v11, 1, 1, v48);
    }
    uint64_t v51 = v11;
    uint64_t v52 = (uint64_t)v11;
    uint64_t v53 = v161;
    sub_251A4ECF0(v52, v161, &qword_26B21F108);
    type metadata accessor for StaticCharacteristic();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 48))(v53, 1, v48) != 1)
    {
      uint64_t v54 = v53 + *(int *)(v48 + 24);
      uint64_t v12 = v50;
      unint64_t v30 = v172;
      unint64_t v55 = *(void *)v54;
      switch(*(unsigned char *)(v54 + 16))
      {
        case 0:
          sub_251C30D18(v53, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
          uint64_t v11 = v51;
          uint64_t v17 = v169;
          if ((v55 & 1) == 0) {
            goto LABEL_50;
          }
          goto LABEL_48;
        case 1:
          unint64_t v55 = *(void *)v54;
          goto LABEL_46;
        case 2:
          unint64_t v55 = (unsigned __int16)*(void *)v54;
          goto LABEL_46;
        case 3:
          unint64_t v55 = *(void *)v54;
          goto LABEL_46;
        case 4:
          if ((v55 & 0x8000000000000000) == 0) {
            goto LABEL_46;
          }
          goto LABEL_122;
        case 5:
        case 6:
          unint64_t v55 = (int)v55;
LABEL_46:
          if (v55 > 1) {
            goto LABEL_49;
          }
          sub_251C30D18(v53, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
          uint64_t v11 = v51;
          uint64_t v17 = v169;
          if (v55 != 1) {
            goto LABEL_50;
          }
LABEL_48:
          uint64_t v56 = sub_251F34DA0();
          uint64_t v57 = *(void *)(v56 - 8);
          uint64_t v58 = MEMORY[0x270FA5388](v56);
          uint64_t v60 = (char *)&v154 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
          MEMORY[0x270FA5388](v58);
          uint64_t v62 = (char *)&v154 - v61;
          (*(void (**)(char *, char *, uint64_t))(v57 + 16))((char *)&v154 - v61, v20, v56);
          sub_251A637B8(v60, v62);
          (*(void (**)(char *, uint64_t))(v57 + 8))(v60, v56);
          break;
        default:
LABEL_49:
          sub_251C30D18(v53, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
          uint64_t v11 = v51;
          uint64_t v17 = v169;
          goto LABEL_50;
      }
      goto LABEL_99;
    }
    sub_251A1B064(v53, &qword_26B21F108);
    uint64_t v11 = v51;
    uint64_t v17 = v169;
    uint64_t v12 = v50;
    unint64_t v30 = v172;
LABEL_50:
    LOBYTE(v174) = v38;
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v63 == (v30 | 0x8000000000000000))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v64 = sub_251F36B10();
      swift_bridgeObjectRelease();
      if ((v64 & 1) == 0) {
        goto LABEL_69;
      }
    }
    Swift::Int v65 = v12;
    int v66 = v20[v37];
    LOBYTE(v174) = v20[v37];
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v67 == (v172 | 0x8000000000000000))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v68 = sub_251F36B10();
      swift_bridgeObjectRelease();
      if ((v68 & 1) == 0)
      {
        BOOL v71 = v66 == 11;
        uint64_t v12 = v65;
        if (!v71
          || (uint64_t v174 = *(int **)&v20[v65[28]],
              char v173 = 28,
              Swift::Int_optional v180 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v173),
              v180.is_nil))
        {
LABEL_67:
          sub_251C30C48((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticService);
          unint64_t v30 = v172;
LABEL_68:
          sub_251C30D18((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticService);
          goto LABEL_69;
        }
        Swift::Int value = v180.value;
        sub_251C30C48((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticService);
        unint64_t v30 = v172;
        if (value != 1) {
          goto LABEL_68;
        }
        goto LABEL_60;
      }
    }
    uint64_t v12 = v65;
    uint64_t v174 = *(int **)&v20[v65[28]];
    char v173 = -98;
    Swift::Int_optional v179 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v173);
    if (v179.is_nil) {
      goto LABEL_67;
    }
    Swift::Int v69 = v179.value;
    sub_251C30C48((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticService);
    unint64_t v30 = v172;
    if (v69 <= 0) {
      goto LABEL_68;
    }
LABEL_60:
    BOOL v70 = sub_251C30B34((uint64_t)v17);
    sub_251C30D18((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v70) {
      goto LABEL_98;
    }
LABEL_69:
    LOBYTE(v174) = v38;
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v73 == (v30 | 0x8000000000000000))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v74 = sub_251F36B10();
      swift_bridgeObjectRelease();
      if ((v74 & 1) == 0) {
        goto LABEL_74;
      }
    }
    if (sub_251C30B34((uint64_t)v20)) {
      goto LABEL_98;
    }
LABEL_74:
    LOBYTE(v174) = v38;
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v75 == (v30 | 0x8000000000000000))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v76 = sub_251F36B10();
      swift_bridgeObjectRelease();
      if ((v76 & 1) == 0) {
        goto LABEL_89;
      }
    }
    uint64_t v77 = v12;
    int v78 = v20[v37];
    LOBYTE(v174) = v20[v37];
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v79 == (v172 | 0x8000000000000000))
    {
      swift_bridgeObjectRelease();
LABEL_82:
      uint64_t v12 = v77;
      uint64_t v174 = *(int **)&v20[v77[28]];
      char v173 = 40;
      Swift::Int_optional v181 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v173);
      unint64_t v30 = v172;
      if (v181.is_nil || v181.value <= 0) {
        goto LABEL_89;
      }
      goto LABEL_98;
    }
    char v80 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v80) {
      goto LABEL_82;
    }
    BOOL v71 = v78 == 11;
    uint64_t v12 = v77;
    unint64_t v30 = v172;
    if (!v71
      || (uint64_t v174 = *(int **)&v20[v12[28]],
          char v173 = 28,
          Swift::Int_optional v182 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v173),
          v182.is_nil)
      || v182.value != 1)
    {
LABEL_89:
      if (v38 != 11) {
        goto LABEL_4;
      }
      int v81 = v20[v12[24]];
      uint64_t v82 = v160;
      sub_251C30C48((uint64_t)v20, v160, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (v81 == 53) {
        LOBYTE(v81) = *(unsigned char *)(v82 + v12[22]);
      }
      sub_251C30D18(v82, (uint64_t (*)(void))type metadata accessor for StaticService);
      LOBYTE(v174) = v81;
      if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v83 == (v30 | 0x8000000000000000))
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v84 = sub_251F36B10();
        swift_bridgeObjectRelease();
        if ((v84 & 1) == 0) {
          goto LABEL_4;
        }
      }
      uint64_t v174 = *(int **)&v20[v12[28]];
      char v173 = 28;
      Swift::Int_optional v183 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v173);
      if (v183.is_nil || v183.value != 1)
      {
LABEL_4:
        sub_251C30D18((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for StaticService);
        goto LABEL_5;
      }
    }
LABEL_98:
    uint64_t v85 = sub_251F34DA0();
    uint64_t v86 = *(void *)(v85 - 8);
    uint64_t v87 = MEMORY[0x270FA5388](v85);
    uint64_t v89 = (char *)&v154 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0);
    MEMORY[0x270FA5388](v87);
    uint64_t v91 = (char *)&v154 - v90;
    (*(void (**)(char *, char *, uint64_t))(v86 + 16))((char *)&v154 - v90, v20, v85);
    sub_251A637B8(v89, v91);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v89, v85);
LABEL_99:
    sub_251C30D18((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v17 = v169;
    uint64_t v12 = v165;
LABEL_5:
    unint64_t v29 = v170;
    uint64_t v23 = v171;
  }
  int64_t v32 = (int64_t)v23 + 1;
  if (__OFADD__(v23, 1))
  {
    __break(1u);
    goto LABEL_121;
  }
  if (v32 >= v163) {
    goto LABEL_100;
  }
  unint64_t v33 = *(void *)(v162 + 8 * v32);
  int64_t v34 = (int64_t)v23 + 1;
  if (v33) {
    goto LABEL_23;
  }
  int64_t v34 = (int64_t)v23 + 2;
  if ((uint64_t)v23 + 2 >= v163) {
    goto LABEL_100;
  }
  unint64_t v33 = *(void *)(v162 + 8 * v34);
  if (v33) {
    goto LABEL_23;
  }
  int64_t v34 = (int64_t)v23 + 3;
  if ((uint64_t)v23 + 3 >= v163) {
    goto LABEL_100;
  }
  unint64_t v33 = *(void *)(v162 + 8 * v34);
  if (v33) {
    goto LABEL_23;
  }
  int64_t v34 = (int64_t)v23 + 4;
  if ((uint64_t)v23 + 4 >= v163) {
    goto LABEL_100;
  }
  unint64_t v33 = *(void *)(v162 + 8 * v34);
  if (v33)
  {
LABEL_23:
    uint64_t v170 = (v33 - 1) & v33;
    uint64_t v171 = (char **)v34;
    unint64_t v31 = __clz(__rbit64(v33)) + (v34 << 6);
    goto LABEL_24;
  }
  uint64_t v35 = (char *)v23 + 5;
  if ((uint64_t)v23 + 5 < v163)
  {
    unint64_t v33 = *(void *)(v162 + 8 * (void)v35);
    if (!v33)
    {
      while (1)
      {
        int64_t v34 = (int64_t)(v35 + 1);
        if (__OFADD__(v35, 1)) {
          break;
        }
        if (v34 >= v163) {
          goto LABEL_100;
        }
        unint64_t v33 = *(void *)(v162 + 8 * v34);
        ++v35;
        if (v33) {
          goto LABEL_23;
        }
      }
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
      goto LABEL_124;
    }
    int64_t v34 = (int64_t)v23 + 5;
    goto LABEL_23;
  }
LABEL_100:
  swift_release();
  uint64_t v92 = v177;
  uint64_t v93 = v178;
  uint64_t v94 = *(void *)(v178 + 16);
  uint64_t v95 = *(void *)(v177 + 16);
  BOOL v96 = __OFADD__(v94, v95);
  uint64_t v97 = v94 + v95;
  if (v96) {
    goto LABEL_123;
  }
  uint64_t v98 = v176;
  uint64_t v99 = *(void *)(v176 + 16);
  BOOL v96 = __OFADD__(v97, v99);
  uint64_t v100 = v97 + v99;
  if (v96)
  {
LABEL_124:
    __break(1u);
    goto LABEL_125;
  }
  uint64_t v101 = v175;
  uint64_t v102 = *(void *)(v175 + 16);
  uint64_t v103 = v100 + v102;
  if (__OFADD__(v100, v102))
  {
LABEL_125:
    __break(1u);
    JUMPOUT(0x251C27B64);
  }
  uint64_t v104 = swift_bridgeObjectRetain();
  uint64_t v105 = sub_251D8F0C0(v104, v92);
  uint64_t v106 = swift_bridgeObjectRetain();
  uint64_t v107 = sub_251D8F0C0(v106, v105);
  uint64_t v108 = swift_bridgeObjectRetain();
  uint64_t v109 = sub_251D8F0C0(v108, v107);
  if (v103 < 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v113 = type metadata accessor for WindowStatusItem(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 56))(v159, 1, 1, v113);
  }
  else
  {
    uint64_t v110 = *(void *)(v93 + 16);
    uint64_t v172 = v109;
    if (v110)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      static String.hfLocalized(_:)(0xD00000000000002BLL, 0x8000000251F6E690);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
      uint64_t v111 = swift_allocObject();
      *(_OWORD *)(v111 + 16) = xmmword_251F38650;
      uint64_t v112 = *(void *)(v93 + 16);
      goto LABEL_110;
    }
    swift_bridgeObjectRelease();
    uint64_t v115 = *(void *)(v98 + 16);
    if (v115 && v115 == v103)
    {
      swift_bridgeObjectRelease();
      static String.hfLocalized(_:)(0xD000000000000028, 0x8000000251F6E660);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
      uint64_t v111 = swift_allocObject();
      *(_OWORD *)(v111 + 16) = xmmword_251F38650;
      uint64_t v112 = *(void *)(v98 + 16);
LABEL_110:
      swift_bridgeObjectRelease();
      uint64_t v116 = MEMORY[0x263F8D750];
      *(void *)(v111 + 56) = MEMORY[0x263F8D6C8];
      *(void *)(v111 + 64) = v116;
      *(void *)(v111 + 32) = v112;
LABEL_111:
      uint64_t v117 = sub_251F35710();
      uint64_t v168 = v118;
      unint64_t v169 = (char *)v117;
      unint64_t v167 = 0xD000000000000014;
      uint64_t v119 = "window.vertical.open";
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v145 = *(void *)(v101 + 16);
      if (!v145 || v145 != v103)
      {
        swift_bridgeObjectRelease();
        static String.hfLocalized(_:)(0xD000000000000025, 0x8000000251F6E5D0);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
        uint64_t v151 = swift_allocObject();
        uint64_t v152 = MEMORY[0x263F8D6C8];
        *(_OWORD *)(v151 + 16) = xmmword_251F38650;
        uint64_t v153 = MEMORY[0x263F8D750];
        *(void *)(v151 + 56) = v152;
        *(void *)(v151 + 64) = v153;
        *(void *)(v151 + 32) = v103;
        goto LABEL_111;
      }
      static String.hfLocalized(_:)(0xD000000000000028, 0x8000000251F6E630);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
      uint64_t v146 = swift_allocObject();
      *(_OWORD *)(v146 + 16) = xmmword_251F38650;
      uint64_t v147 = *(void *)(v101 + 16);
      swift_bridgeObjectRelease();
      uint64_t v148 = MEMORY[0x263F8D750];
      *(void *)(v146 + 56) = MEMORY[0x263F8D6C8];
      *(void *)(v146 + 64) = v148;
      *(void *)(v146 + 32) = v147;
      uint64_t v149 = sub_251F35710();
      uint64_t v168 = v150;
      unint64_t v169 = (char *)v149;
      unint64_t v167 = 0xD000000000000016;
      uint64_t v119 = "window.vertical.closed";
    }
    unint64_t v166 = (unint64_t)(v119 - 32) | 0x8000000000000000;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v171 = &v154;
    uint64_t v121 = *(void *)(*(void *)(v120 - 8) + 64);
    MEMORY[0x270FA5388](v120 - 8);
    unint64_t v122 = (v121 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v123 = sub_251F34DA0();
    uint64_t v124 = *(void *)(v123 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v124 + 56))((char *)&v154 - v122, 1, 1, v123);
    uint64_t v170 = static String.hfLocalized(_:)(0xD000000000000020, 0x8000000251F6E600);
    uint64_t v126 = v125;
    uint64_t v127 = MEMORY[0x270FA5388](v170);
    uint64_t v129 = (char *)&v154 - ((v128 + 15) & 0xFFFFFFFFFFFFFFF0);
    MEMORY[0x270FA5388](v127);
    sub_251A1B128((uint64_t)&v154 - v122, (uint64_t)&v154 - v122, &qword_26B21FF90);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v124 + 48))((char *)&v154 - v122, 1, v123) == 1)
    {
      sub_251F34D90();
      sub_251A1B064((uint64_t)&v154 - v122, &qword_26B21FF90);
      sub_251A1B064((uint64_t)&v154 - v122, &qword_26B21FF90);
      uint64_t v130 = *(void (**)(char *, char *, uint64_t))(v124 + 32);
    }
    else
    {
      sub_251A1B064((uint64_t)&v154 - v122, &qword_26B21FF90);
      uint64_t v130 = *(void (**)(char *, char *, uint64_t))(v124 + 32);
      v130(v129, (char *)&v154 - v122, v123);
    }
    uint64_t v131 = v165;
    uint64_t v132 = (uint64_t)v154;
    v130(v154, v129, v123);
    char v133 = (int *)v155;
    uint64_t v134 = (unint64_t *)(v132 + *(int *)(v155 + 20));
    unint64_t v135 = v166;
    *uint64_t v134 = v167;
    v134[1] = v135;
    uint64_t v136 = (uint64_t *)(v132 + v133[6]);
    uint64_t *v136 = v170;
    v136[1] = v126;
    unint64_t v137 = (void *)(v132 + v133[7]);
    uint64_t v138 = v168;
    void *v137 = v169;
    v137[1] = v138;
    uint64_t v139 = v132 + v133[8];
    *(void *)uint64_t v139 = 0;
    *(void *)(v139 + 8) = 0;
    *(void *)(v139 + 16) = 0;
    *(unsigned char *)(v139 + 24) = -1;
    uint64_t v140 = v156;
    uint64_t v141 = sub_251C30CB0(v132, v156, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    MEMORY[0x270FA5388](v141);
    *(&v154 - 2) = (char *)v172;
    uint64_t v174 = v131;
    uint64_t v142 = (uint64_t)v158;
    sub_251F34EF0();
    swift_bridgeObjectRelease();
    swift_storeEnumTagMultiPayload();
    uint64_t v143 = type metadata accessor for WindowStatusItem(0);
    uint64_t v144 = v159;
    sub_251C30CB0(v142, v159 + *(int *)(v143 + 20), (uint64_t (*)(void))type metadata accessor for TilesFilter);
    sub_251C30CB0(v140, v144, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v143 - 8) + 56))(v144, 0, 1, v143);
  }
}

uint64_t sub_251C27B80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v154 = a2;
  uint64_t v152 = type metadata accessor for TilesFilter();
  MEMORY[0x270FA5388](v152);
  uint64_t v153 = (char *)&v149 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v4 = MEMORY[0x270FA5388](v150);
  uint64_t v149 = (char *)&v149 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v151 = (uint64_t)&v149 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F108);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v155 = (uint64_t)&v149 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v163 = (uint64_t)&v149 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v157 = (uint64_t)&v149 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v149 - v14;
  uint64_t v168 = type metadata accessor for StaticService();
  uint64_t v165 = *(void *)(v168 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v168);
  uint64_t v162 = (uint64_t)&v149 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v160 = (uint64_t)&v149 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  unint64_t v167 = (char **)((char *)&v149 - v21);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v149 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v164 = (uint64_t)&v149 - v25;
  uint64_t v26 = 0;
  uint64_t v172 = MEMORY[0x263F8EE88];
  uint64_t v173 = MEMORY[0x263F8EE88];
  uint64_t v171 = MEMORY[0x263F8EE88];
  uint64_t v166 = a1;
  uint64_t v27 = *(void *)(a1 + 56);
  uint64_t v158 = a1 + 56;
  uint64_t v28 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v29 = -1;
  if (v28 < 64) {
    uint64_t v29 = ~(-1 << v28);
  }
  unint64_t v30 = v29 & v27;
  int64_t v159 = (unint64_t)(v28 + 63) >> 6;
  unint64_t v161 = 0x8000000251F65130;
  uint64_t v156 = v15;
  if ((v29 & v27) != 0) {
    goto LABEL_8;
  }
LABEL_9:
  int64_t v34 = (int64_t)(v26 + 1);
  if (__OFADD__(v26, 1))
  {
    __break(1u);
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
LABEL_105:
    __break(1u);
    goto LABEL_106;
  }
  if (v34 < v159)
  {
    unint64_t v35 = *(void *)(v158 + 8 * v34);
    int64_t v36 = (int64_t)(v26 + 1);
    if (v35) {
      goto LABEL_24;
    }
    int64_t v36 = (int64_t)(v26 + 2);
    if ((uint64_t)(v26 + 2) >= v159) {
      goto LABEL_87;
    }
    unint64_t v35 = *(void *)(v158 + 8 * v36);
    if (v35) {
      goto LABEL_24;
    }
    int64_t v36 = (int64_t)(v26 + 3);
    if ((uint64_t)(v26 + 3) >= v159) {
      goto LABEL_87;
    }
    unint64_t v35 = *(void *)(v158 + 8 * v36);
    if (v35) {
      goto LABEL_24;
    }
    int64_t v36 = (int64_t)(v26 + 4);
    if ((uint64_t)(v26 + 4) >= v159) {
      goto LABEL_87;
    }
    unint64_t v35 = *(void *)(v158 + 8 * v36);
    if (v35)
    {
LABEL_24:
      unint64_t v30 = (v35 - 1) & v35;
      unint64_t v169 = (char *)v36;
      for (unint64_t i = __clz(__rbit64(v35)) + (v36 << 6); ; unint64_t i = v32 | ((void)v26 << 6))
      {
        uint64_t v38 = v164;
        sub_251C30C48(*(void *)(v166 + 48) + *(void *)(v165 + 72) * i, v164, (uint64_t (*)(void))type metadata accessor for StaticService);
        sub_251C30CB0(v38, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v39 = *(int *)(v168 + 88);
        LOBYTE(v170) = v24[v39];
        char v40 = v170;
        ServiceKind.rawValue.getter();
        swift_bridgeObjectRelease();
        LOBYTE(v170) = v40;
        if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v41 == v161) {
          break;
        }
        char v42 = sub_251F36B10();
        swift_bridgeObjectRelease();
        if (v42) {
          goto LABEL_29;
        }
LABEL_54:
        LOBYTE(v170) = v40;
        if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v70 == 0x8000000251F65130)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v71 = sub_251F36B10();
          swift_bridgeObjectRelease();
          if ((v71 & 1) == 0) {
            goto LABEL_62;
          }
        }
        if ((sub_251A1E08C((uint64_t)v24) & 1) == 0)
        {
LABEL_62:
          LOBYTE(v170) = v40;
          if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v79 == 0x8000000251F65130)
          {
            swift_bridgeObjectRelease();
            uint64_t v80 = v163;
LABEL_66:
            LOBYTE(v170) = v24[v39];
            if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v82 == 0x8000000251F65130)
            {
              swift_bridgeObjectRelease();
              uint64_t v31 = v162;
              sub_251C30C48((uint64_t)v24, v162, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_70:
              uint64_t v84 = *(void *)(v31 + *(int *)(v168 + 112));
              if (*(void *)(v84 + 16) && (unint64_t v85 = sub_2519FE568(65), (v86 & 1) != 0))
              {
                unint64_t v87 = v85;
                uint64_t v88 = *(void *)(v84 + 56);
                uint64_t v89 = type metadata accessor for StaticCharacteristic();
                uint64_t v90 = *(void *)(v89 - 8);
                sub_251C30C48(v88 + *(void *)(v90 + 72) * v87, v163, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
                (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v90 + 56))(v163, 0, 1, v89);
                uint64_t v80 = v163;
              }
              else
              {
                uint64_t v89 = type metadata accessor for StaticCharacteristic();
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 56))(v80, 1, 1, v89);
              }
              uint64_t v91 = v155;
              sub_251A4ECF0(v80, v155, &qword_26B21F108);
              type metadata accessor for StaticCharacteristic();
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 48))(v91, 1, v89) != 1)
              {
                uint64_t v92 = v91 + *(int *)(v89 + 24);
                int v93 = *(unsigned __int8 *)(v92 + 16);
                uint64_t v31 = v162;
                unint64_t v94 = *(void *)v92;
                switch(v93)
                {
                  case 0:
                    BOOL v95 = v94 & 1;
                    goto LABEL_84;
                  case 1:
                    unint64_t v94 = v94;
                    goto LABEL_82;
                  case 2:
                    unint64_t v94 = (unsigned __int16)v94;
                    goto LABEL_82;
                  case 3:
                    unint64_t v94 = v94;
                    goto LABEL_82;
                  case 4:
                    if ((v94 & 0x8000000000000000) == 0) {
                      goto LABEL_82;
                    }
                    goto LABEL_105;
                  case 5:
                  case 6:
                    unint64_t v94 = (int)v94;
LABEL_82:
                    if (v94 > 1) {
                      goto LABEL_86;
                    }
                    BOOL v95 = v94 == 1;
LABEL_84:
                    sub_251C30D18(v91, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
                    sub_251C30D18(v162, (uint64_t (*)(void))type metadata accessor for StaticService);
                    if (v95) {
                      goto LABEL_59;
                    }
                    goto LABEL_7;
                  default:
LABEL_86:
                    sub_251C30D18(v91, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
                    goto LABEL_6;
                }
              }
              sub_251A1B064(v91, &qword_26B21F108);
              uint64_t v31 = v162;
            }
            else
            {
              char v83 = sub_251F36B10();
              swift_bridgeObjectRelease();
              uint64_t v31 = v162;
              sub_251C30C48((uint64_t)v24, v162, (uint64_t (*)(void))type metadata accessor for StaticService);
              if (v83) {
                goto LABEL_70;
              }
            }
LABEL_6:
            sub_251C30D18(v31, (uint64_t (*)(void))type metadata accessor for StaticService);
          }
          else
          {
            char v81 = sub_251F36B10();
            swift_bridgeObjectRelease();
            uint64_t v80 = v163;
            if (v81) {
              goto LABEL_66;
            }
          }
LABEL_7:
          sub_251C30D18((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for StaticService);
          uint64_t v26 = v169;
          if (!v30) {
            goto LABEL_9;
          }
          goto LABEL_8;
        }
LABEL_59:
        uint64_t v72 = sub_251F34DA0();
        uint64_t v73 = *(void *)(v72 - 8);
        uint64_t v74 = MEMORY[0x270FA5388](v72);
        char v76 = (char *)&v149 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
        MEMORY[0x270FA5388](v74);
        int v78 = (char *)&v149 - v77;
        (*(void (**)(char *, char *, uint64_t))(v73 + 16))((char *)&v149 - v77, v24, v72);
        sub_251A637B8(v76, v78);
        (*(void (**)(char *, uint64_t))(v73 + 8))(v76, v72);
LABEL_60:
        sub_251C30D18((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v26 = v169;
        if (!v30) {
          goto LABEL_9;
        }
LABEL_8:
        unint64_t v32 = __clz(__rbit64(v30));
        v30 &= v30 - 1;
        unint64_t v169 = v26;
      }
      swift_bridgeObjectRelease();
LABEL_29:
      LOBYTE(v170) = v40;
      if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v43 == 0x8000000251F65130)
      {
        swift_bridgeObjectRelease();
        uint64_t v44 = (uint64_t)v167;
        sub_251C30C48((uint64_t)v24, (uint64_t)v167, (uint64_t (*)(void))type metadata accessor for StaticService);
      }
      else
      {
        char v45 = sub_251F36B10();
        swift_bridgeObjectRelease();
        uint64_t v44 = (uint64_t)v167;
        sub_251C30C48((uint64_t)v24, (uint64_t)v167, (uint64_t (*)(void))type metadata accessor for StaticService);
        if ((v45 & 1) == 0)
        {
LABEL_52:
          sub_251C30D18(v44, (uint64_t (*)(void))type metadata accessor for StaticService);
          uint64_t v61 = v160;
          sub_251C30C48((uint64_t)v24, v160, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_53:
          sub_251C30D18(v61, (uint64_t (*)(void))type metadata accessor for StaticService);
          goto LABEL_54;
        }
      }
      uint64_t v46 = *(void *)(v44 + *(int *)(v168 + 112));
      if (*(void *)(v46 + 16) && (unint64_t v47 = sub_2519FE568(3), (v48 & 1) != 0))
      {
        unint64_t v49 = v47;
        uint64_t v50 = *(void *)(v46 + 56);
        uint64_t v51 = type metadata accessor for StaticCharacteristic();
        uint64_t v52 = *(void *)(v51 - 8);
        uint64_t v53 = v50 + *(void *)(v52 + 72) * v49;
        uint64_t v54 = (uint64_t)v156;
        sub_251C30C48(v53, (uint64_t)v156, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v52 + 56))(v54, 0, 1, v51);
      }
      else
      {
        uint64_t v51 = type metadata accessor for StaticCharacteristic();
        uint64_t v54 = (uint64_t)v156;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v156, 1, 1, v51);
      }
      uint64_t v55 = v54;
      uint64_t v56 = v157;
      sub_251A4ECF0(v55, v157, &qword_26B21F108);
      type metadata accessor for StaticCharacteristic();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 48))(v56, 1, v51) != 1)
      {
        uint64_t v57 = v56 + *(int *)(v51 + 24);
        int v58 = *(unsigned __int8 *)(v57 + 16);
        uint64_t v44 = (uint64_t)v167;
        unint64_t v59 = *(void *)v57;
        switch(v58)
        {
          case 0:
            BOOL v60 = v59 & 1;
            goto LABEL_48;
          case 1:
            unint64_t v59 = v59;
            goto LABEL_46;
          case 2:
            unint64_t v59 = (unsigned __int16)v59;
            goto LABEL_46;
          case 3:
            unint64_t v59 = v59;
            goto LABEL_46;
          case 4:
            if ((v59 & 0x8000000000000000) == 0) {
              goto LABEL_46;
            }
            goto LABEL_104;
          case 5:
          case 6:
            unint64_t v59 = (int)v59;
LABEL_46:
            if (v59 > 1) {
              goto LABEL_51;
            }
            BOOL v60 = v59 == 1;
LABEL_48:
            sub_251C30D18(v56, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
            sub_251C30D18((uint64_t)v167, (uint64_t (*)(void))type metadata accessor for StaticService);
            uint64_t v61 = v160;
            sub_251C30C48((uint64_t)v24, v160, (uint64_t (*)(void))type metadata accessor for StaticService);
            if (!v60) {
              goto LABEL_53;
            }
            char v62 = sub_251A1E08C(v61);
            sub_251C30D18(v61, (uint64_t (*)(void))type metadata accessor for StaticService);
            if ((v62 & 1) == 0) {
              goto LABEL_54;
            }
            uint64_t v63 = sub_251F34DA0();
            uint64_t v64 = *(void *)(v63 - 8);
            uint64_t v65 = MEMORY[0x270FA5388](v63);
            uint64_t v67 = (char *)&v149 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
            MEMORY[0x270FA5388](v65);
            Swift::Int v69 = (char *)&v149 - v68;
            (*(void (**)(char *, char *, uint64_t))(v64 + 16))((char *)&v149 - v68, v24, v63);
            sub_251A637B8(v67, v69);
            (*(void (**)(char *, uint64_t))(v64 + 8))(v67, v63);
            break;
          default:
LABEL_51:
            sub_251C30D18(v56, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
            goto LABEL_52;
        }
        goto LABEL_60;
      }
      sub_251A1B064(v56, &qword_26B21F108);
      uint64_t v44 = (uint64_t)v167;
      goto LABEL_52;
    }
    uint64_t v37 = v26 + 5;
    if ((uint64_t)(v26 + 5) < v159)
    {
      unint64_t v35 = *(void *)(v158 + 8 * (void)v37);
      if (v35)
      {
        int64_t v36 = (int64_t)(v26 + 5);
        goto LABEL_24;
      }
      while (1)
      {
        int64_t v36 = (int64_t)(v37 + 1);
        if (__OFADD__(v37, 1)) {
          goto LABEL_103;
        }
        if (v36 >= v159) {
          break;
        }
        unint64_t v35 = *(void *)(v158 + 8 * v36);
        ++v37;
        if (v35) {
          goto LABEL_24;
        }
      }
    }
  }
LABEL_87:
  swift_release();
  uint64_t v97 = v172;
  uint64_t v96 = v173;
  uint64_t v98 = *(void *)(v173 + 16);
  uint64_t v99 = *(void *)(v172 + 16);
  BOOL v100 = __OFADD__(v98, v99);
  uint64_t v101 = v98 + v99;
  if (v100)
  {
LABEL_106:
    __break(1u);
    goto LABEL_107;
  }
  uint64_t v102 = v171;
  uint64_t v103 = *(void *)(v171 + 16);
  uint64_t v104 = v101 + v103;
  if (__OFADD__(v101, v103))
  {
LABEL_107:
    __break(1u);
    JUMPOUT(0x251C29108);
  }
  uint64_t v105 = swift_bridgeObjectRetain();
  uint64_t v106 = sub_251D8F0C0(v105, v96);
  uint64_t v107 = swift_bridgeObjectRetain();
  uint64_t v108 = sub_251D8F0C0(v107, v106);
  uint64_t v109 = sub_251D8F0C0(MEMORY[0x263F8EE88], v108);
  if (v104 <= 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v114 = type metadata accessor for ValveStatusItem(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 56))(v154, 1, 1, v114);
  }
  else
  {
    uint64_t v110 = *(void *)(v97 + 16);
    unint64_t v169 = (char *)v109;
    if (v110 && v110 == v104)
    {
      swift_bridgeObjectRelease();
      static String.hfLocalized(_:)(0xD000000000000028, 0x8000000251F6E5A0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
      uint64_t v111 = swift_allocObject();
      *(_OWORD *)(v111 + 16) = xmmword_251F38650;
      uint64_t v112 = *(void *)(v97 + 16);
      swift_bridgeObjectRelease();
      uint64_t v113 = MEMORY[0x263F8D750];
      *(void *)(v111 + 56) = MEMORY[0x263F8D6C8];
      *(void *)(v111 + 64) = v113;
      *(void *)(v111 + 32) = v112;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v116 = *(void *)(v102 + 16);
      if (v116 && v116 == v104)
      {
        static String.hfLocalized(_:)(0xD000000000000028, 0x8000000251F6E570);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
        uint64_t v117 = swift_allocObject();
        *(_OWORD *)(v117 + 16) = xmmword_251F38650;
        uint64_t v118 = *(void *)(v102 + 16);
        swift_bridgeObjectRelease();
        uint64_t v119 = MEMORY[0x263F8D750];
        *(void *)(v117 + 56) = MEMORY[0x263F8D6C8];
        *(void *)(v117 + 64) = v119;
        *(void *)(v117 + 32) = v118;
      }
      else
      {
        swift_bridgeObjectRelease();
        static String.hfLocalized(_:)(0xD000000000000027, 0x8000000251F6E540);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
        uint64_t v120 = swift_allocObject();
        uint64_t v121 = MEMORY[0x263F8D6C8];
        *(_OWORD *)(v120 + 16) = xmmword_251F38650;
        uint64_t v122 = MEMORY[0x263F8D750];
        *(void *)(v120 + 56) = v121;
        *(void *)(v120 + 64) = v122;
        *(void *)(v120 + 32) = v104;
      }
    }
    uint64_t v123 = sub_251F35710();
    uint64_t v165 = v124;
    uint64_t v166 = v123;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    unint64_t v167 = &v149;
    uint64_t v126 = *(void *)(*(void *)(v125 - 8) + 64);
    MEMORY[0x270FA5388](v125 - 8);
    unint64_t v127 = (v126 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v128 = sub_251F34DA0();
    uint64_t v129 = *(void *)(v128 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v129 + 56))((char *)&v149 - v127, 1, 1, v128);
    uint64_t v130 = static String.hfLocalized(_:)(0xD000000000000022, 0x8000000251F6C280);
    uint64_t v132 = v131;
    uint64_t v133 = MEMORY[0x270FA5388](v130);
    unint64_t v135 = (char *)&v149 - ((v134 + 15) & 0xFFFFFFFFFFFFFFF0);
    MEMORY[0x270FA5388](v133);
    uint64_t v136 = (char *)&v149 - v127;
    sub_251A1B128((uint64_t)&v149 - v127, (uint64_t)&v149 - v127, &qword_26B21FF90);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v129 + 48))((char *)&v149 - v127, 1, v128) == 1)
    {
      sub_251F34D90();
      sub_251A1B064((uint64_t)&v149 - v127, &qword_26B21FF90);
      sub_251A1B064((uint64_t)v136, &qword_26B21FF90);
      unint64_t v137 = *(void (**)(char *, char *, uint64_t))(v129 + 32);
    }
    else
    {
      sub_251A1B064((uint64_t)&v149 - v127, &qword_26B21FF90);
      unint64_t v137 = *(void (**)(char *, char *, uint64_t))(v129 + 32);
      v137(v135, v136, v128);
    }
    uint64_t v138 = (uint64_t)v149;
    v137(v149, v135, v128);
    uint64_t v139 = (int *)v150;
    uint64_t v140 = (void *)(v138 + *(int *)(v150 + 20));
    void *v140 = 0x662E746F67697073;
    v140[1] = 0xEB000000006C6C69;
    uint64_t v141 = (uint64_t *)(v138 + v139[6]);
    *uint64_t v141 = v130;
    v141[1] = v132;
    uint64_t v142 = (uint64_t *)(v138 + v139[7]);
    uint64_t *v142 = v166;
    v142[1] = v165;
    uint64_t v143 = v138 + v139[8];
    *(void *)uint64_t v143 = 0;
    *(void *)(v143 + 8) = 0;
    *(void *)(v143 + 16) = 0;
    *(unsigned char *)(v143 + 24) = -1;
    uint64_t v144 = v151;
    uint64_t v145 = sub_251C30CB0(v138, v151, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    MEMORY[0x270FA5388](v145);
    *(&v149 - 2) = v169;
    uint64_t v170 = v168;
    uint64_t v146 = (uint64_t)v153;
    sub_251F34EF0();
    swift_bridgeObjectRelease();
    swift_storeEnumTagMultiPayload();
    uint64_t v147 = type metadata accessor for ValveStatusItem(0);
    uint64_t v148 = v154;
    sub_251C30CB0(v146, v154 + *(int *)(v147 + 20), (uint64_t (*)(void))type metadata accessor for TilesFilter);
    sub_251C30CB0(v144, v148, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v147 - 8) + 56))(v148, 0, 1, v147);
  }
}

uint64_t sub_251C29140@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v140 = a2;
  uint64_t v138 = type metadata accessor for TilesFilter();
  MEMORY[0x270FA5388](v138);
  uint64_t v139 = (char *)&v135 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v4 = MEMORY[0x270FA5388](v136);
  unint64_t v135 = (char *)&v135 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v137 = (uint64_t)&v135 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F108);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v143 = (uint64_t)&v135 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v135 - v10;
  uint64_t v12 = type metadata accessor for StaticService();
  uint64_t v150 = *(char ***)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v147 = (uint64_t)&v135 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v152 = (char *)&v135 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v135 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v149 = (uint64_t)&v135 - v21;
  uint64_t v22 = 0;
  uint64_t v156 = MEMORY[0x263F8EE88];
  uint64_t v157 = MEMORY[0x263F8EE88];
  uint64_t v155 = MEMORY[0x263F8EE88];
  uint64_t v151 = a1;
  uint64_t v25 = *(void *)(a1 + 56);
  uint64_t v24 = a1 + 56;
  uint64_t v23 = v25;
  uint64_t v26 = 1 << *(unsigned char *)(v24 - 24);
  uint64_t v27 = -1;
  if (v26 < 64) {
    uint64_t v27 = ~(-1 << v26);
  }
  unint64_t v28 = v27 & v23;
  uint64_t v145 = v24;
  int64_t v146 = (unint64_t)(v26 + 63) >> 6;
  unint64_t v148 = 0x8000000251F64B90;
  uint64_t v144 = v20;
  uint64_t v142 = v11;
  while (1)
  {
    if (v28)
    {
      unint64_t v29 = __clz(__rbit64(v28));
      v28 &= v28 - 1;
      uint64_t v153 = v22;
      unint64_t v30 = v29 | (v22 << 6);
      goto LABEL_23;
    }
    int64_t v31 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_81;
    }
    if (v31 >= v146) {
      goto LABEL_65;
    }
    unint64_t v32 = *(void *)(v145 + 8 * v31);
    int64_t v33 = v22 + 1;
    if (!v32)
    {
      int64_t v33 = v22 + 2;
      if (v22 + 2 >= v146) {
        goto LABEL_65;
      }
      unint64_t v32 = *(void *)(v145 + 8 * v33);
      if (!v32)
      {
        int64_t v33 = v22 + 3;
        if (v22 + 3 >= v146) {
          goto LABEL_65;
        }
        unint64_t v32 = *(void *)(v145 + 8 * v33);
        if (!v32)
        {
          int64_t v33 = v22 + 4;
          if (v22 + 4 >= v146) {
            goto LABEL_65;
          }
          unint64_t v32 = *(void *)(v145 + 8 * v33);
          if (!v32) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v28 = (v32 - 1) & v32;
    uint64_t v153 = v33;
    unint64_t v30 = __clz(__rbit64(v32)) + (v33 << 6);
LABEL_23:
    uint64_t v35 = v149;
    sub_251C30C48(*(void *)(v151 + 48) + (void)v150[9] * v30, v149, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251C30CB0(v35, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StaticService);
    LOBYTE(v154) = v19[*(int *)(v12 + 88)];
    char v36 = v154;
    ServiceKind.rawValue.getter();
    swift_bridgeObjectRelease();
    LOBYTE(v154) = v36;
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v37 == v148)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v38 = sub_251F36B10();
      swift_bridgeObjectRelease();
      if ((v38 & 1) == 0) {
        goto LABEL_53;
      }
    }
    LOBYTE(v154) = v36;
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v39 == 0x8000000251F64B90)
    {
      swift_bridgeObjectRelease();
      uint64_t v40 = (uint64_t)v152;
      sub_251C30C48((uint64_t)v19, (uint64_t)v152, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_31:
      uint64_t v42 = *(void *)(v40 + *(int *)(v12 + 112));
      if (*(void *)(v42 + 16) && (unint64_t v43 = sub_2519FE568(3), (v44 & 1) != 0))
      {
        unint64_t v45 = v43;
        uint64_t v46 = *(void *)(v42 + 56);
        uint64_t v47 = type metadata accessor for StaticCharacteristic();
        uint64_t v48 = *(void *)(v47 - 8);
        uint64_t v49 = v46 + *(void *)(v48 + 72) * v45;
        uint64_t v50 = (uint64_t)v142;
        sub_251C30C48(v49, (uint64_t)v142, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56))(v50, 0, 1, v47);
      }
      else
      {
        uint64_t v47 = type metadata accessor for StaticCharacteristic();
        uint64_t v50 = (uint64_t)v142;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v142, 1, 1, v47);
      }
      uint64_t v51 = v50;
      uint64_t v52 = v143;
      sub_251A4ECF0(v51, v143, &qword_26B21F108);
      type metadata accessor for StaticCharacteristic();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 48))(v52, 1, v47) == 1)
      {
        sub_251A1B064(v52, &qword_26B21F108);
LABEL_50:
        uint64_t v40 = (uint64_t)v152;
        goto LABEL_51;
      }
      uint64_t v53 = v52 + *(int *)(v47 + 24);
      int v54 = *(unsigned __int8 *)(v53 + 16);
      unint64_t v55 = *(void *)v53;
      switch(v54)
      {
        case 0:
          BOOL v56 = v55 & 1;
          goto LABEL_46;
        case 1:
          unint64_t v55 = v55;
          goto LABEL_44;
        case 2:
          unint64_t v55 = (unsigned __int16)v55;
          goto LABEL_44;
        case 3:
          unint64_t v55 = v55;
          goto LABEL_44;
        case 4:
          if ((v55 & 0x8000000000000000) == 0) {
            goto LABEL_44;
          }
          goto LABEL_82;
        case 5:
        case 6:
          unint64_t v55 = (int)v55;
LABEL_44:
          if (v55 > 1) {
            goto LABEL_49;
          }
          BOOL v56 = v55 == 1;
LABEL_46:
          sub_251C30D18(v52, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
          sub_251C30D18((uint64_t)v152, (uint64_t (*)(void))type metadata accessor for StaticService);
          uint64_t v57 = v147;
          sub_251C30C48((uint64_t)v19, v147, (uint64_t (*)(void))type metadata accessor for StaticService);
          if (!v56) {
            goto LABEL_52;
          }
          char v58 = sub_251A1DD44(v57);
          sub_251C30D18(v57, (uint64_t (*)(void))type metadata accessor for StaticService);
          if ((v58 & 1) == 0) {
            goto LABEL_53;
          }
          uint64_t v59 = sub_251F34DA0();
          uint64_t v141 = &v135;
          uint64_t v60 = *(void *)(v59 - 8);
          uint64_t v61 = MEMORY[0x270FA5388](v59);
          uint64_t v63 = (char *)&v135 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
          MEMORY[0x270FA5388](v61);
          uint64_t v65 = (char *)&v135 - v64;
          (*(void (**)(char *, char *, uint64_t))(v60 + 16))((char *)&v135 - v64, v19, v59);
          sub_251A637B8(v63, v65);
          (*(void (**)(char *, uint64_t))(v60 + 8))(v63, v59);
          sub_251C30D18((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StaticService);
          uint64_t v22 = v153;
          break;
        default:
LABEL_49:
          sub_251C30D18(v52, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
          goto LABEL_50;
      }
    }
    else
    {
      char v41 = sub_251F36B10();
      swift_bridgeObjectRelease();
      uint64_t v40 = (uint64_t)v152;
      sub_251C30C48((uint64_t)v19, (uint64_t)v152, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (v41) {
        goto LABEL_31;
      }
LABEL_51:
      sub_251C30D18(v40, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v57 = v147;
      sub_251C30C48((uint64_t)v19, v147, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_52:
      sub_251C30D18(v57, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_53:
      LOBYTE(v154) = v36;
      if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v66 == 0x8000000251F64B90)
      {
        swift_bridgeObjectRelease();
        goto LABEL_57;
      }
      char v67 = sub_251F36B10();
      swift_bridgeObjectRelease();
      if (v67)
      {
LABEL_57:
        if ((sub_251A1DD44((uint64_t)v19) & 1) == 0) {
          goto LABEL_59;
        }
        uint64_t v68 = sub_251F34DA0();
        uint64_t v69 = *(void *)(v68 - 8);
        uint64_t v70 = MEMORY[0x270FA5388](v68);
        uint64_t v72 = (char *)&v135 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
        MEMORY[0x270FA5388](v70);
        uint64_t v74 = (char *)&v135 - v73;
        (*(void (**)(char *, char *, uint64_t))(v69 + 16))((char *)&v135 - v73, v19, v68);
        sub_251A637B8(v72, v74);
        (*(void (**)(char *, uint64_t))(v69 + 8))(v72, v68);
        sub_251C30D18((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v12 = v144;
        uint64_t v22 = v153;
      }
      else
      {
LABEL_59:
        LOBYTE(v154) = v36;
        if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v75 == 0x8000000251F64B90)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v76 = sub_251F36B10();
          swift_bridgeObjectRelease();
          if ((v76 & 1) == 0) {
            goto LABEL_4;
          }
        }
        if (sub_251A1D8E4((uint64_t)v19))
        {
          uint64_t v77 = sub_251F34DA0();
          uint64_t v78 = *(void *)(v77 - 8);
          uint64_t v79 = MEMORY[0x270FA5388](v77);
          char v81 = (char *)&v135 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
          MEMORY[0x270FA5388](v79);
          char v83 = (char *)&v135 - v82;
          (*(void (**)(char *, char *, uint64_t))(v78 + 16))((char *)&v135 - v82, v19, v77);
          sub_251A637B8(v81, v83);
          (*(void (**)(char *, uint64_t))(v78 + 8))(v81, v77);
          sub_251C30D18((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StaticService);
          uint64_t v12 = v144;
          uint64_t v22 = v153;
        }
        else
        {
LABEL_4:
          sub_251C30D18((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StaticService);
          uint64_t v22 = v153;
        }
      }
    }
  }
  uint64_t v34 = v22 + 5;
  if (v22 + 5 < v146)
  {
    unint64_t v32 = *(void *)(v145 + 8 * v34);
    if (!v32)
    {
      while (1)
      {
        int64_t v33 = v34 + 1;
        if (__OFADD__(v34, 1)) {
          break;
        }
        if (v33 >= v146) {
          goto LABEL_65;
        }
        unint64_t v32 = *(void *)(v145 + 8 * v33);
        ++v34;
        if (v32) {
          goto LABEL_22;
        }
      }
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    int64_t v33 = v22 + 5;
    goto LABEL_22;
  }
LABEL_65:
  swift_release();
  uint64_t v85 = v156;
  uint64_t v84 = v157;
  uint64_t v86 = *(void *)(v157 + 16);
  uint64_t v87 = *(void *)(v156 + 16);
  BOOL v88 = __OFADD__(v86, v87);
  uint64_t v89 = v86 + v87;
  if (v88) {
    goto LABEL_83;
  }
  uint64_t v90 = v155;
  uint64_t v91 = *(void *)(v155 + 16);
  uint64_t v92 = v89 + v91;
  if (__OFADD__(v89, v91))
  {
LABEL_84:
    __break(1u);
    JUMPOUT(0x251C2A3E0);
  }
  uint64_t v93 = swift_bridgeObjectRetain();
  uint64_t v94 = sub_251D8F0C0(v93, v84);
  uint64_t v95 = swift_bridgeObjectRetain();
  uint64_t v96 = sub_251D8F0C0(v95, v94);
  uint64_t v97 = sub_251D8F0C0(MEMORY[0x263F8EE88], v96);
  if (v92 <= 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v102 = type metadata accessor for FaucetStatusItem(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v102 - 8) + 56))(v140, 1, 1, v102);
  }
  else
  {
    uint64_t v98 = *(void *)(v85 + 16);
    uint64_t v152 = (char *)v97;
    if (v98 && v98 == v92)
    {
      swift_bridgeObjectRelease();
      static String.hfLocalized(_:)(0xD000000000000029, 0x8000000251F6E510);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
      uint64_t v99 = swift_allocObject();
      *(_OWORD *)(v99 + 16) = xmmword_251F38650;
      uint64_t v100 = *(void *)(v85 + 16);
      swift_bridgeObjectRelease();
      uint64_t v101 = MEMORY[0x263F8D750];
      *(void *)(v99 + 56) = MEMORY[0x263F8D6C8];
      *(void *)(v99 + 64) = v101;
      *(void *)(v99 + 32) = v100;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v104 = *(void *)(v90 + 16);
      if (v104 && v104 == v92)
      {
        static String.hfLocalized(_:)(0xD000000000000029, 0x8000000251F6E4E0);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
        uint64_t v105 = swift_allocObject();
        *(_OWORD *)(v105 + 16) = xmmword_251F38650;
        uint64_t v106 = *(void *)(v90 + 16);
        swift_bridgeObjectRelease();
        uint64_t v107 = MEMORY[0x263F8D750];
        *(void *)(v105 + 56) = MEMORY[0x263F8D6C8];
        *(void *)(v105 + 64) = v107;
        *(void *)(v105 + 32) = v106;
      }
      else
      {
        swift_bridgeObjectRelease();
        static String.hfLocalized(_:)(0xD000000000000028, 0x8000000251F6E4B0);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
        uint64_t v108 = swift_allocObject();
        uint64_t v109 = MEMORY[0x263F8D6C8];
        *(_OWORD *)(v108 + 16) = xmmword_251F38650;
        uint64_t v110 = MEMORY[0x263F8D750];
        *(void *)(v108 + 56) = v109;
        *(void *)(v108 + 64) = v110;
        *(void *)(v108 + 32) = v92;
      }
    }
    uint64_t v153 = sub_251F35710();
    uint64_t v151 = v111;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v150 = &v135;
    uint64_t v113 = *(void *)(*(void *)(v112 - 8) + 64);
    MEMORY[0x270FA5388](v112 - 8);
    unint64_t v114 = (v113 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v115 = sub_251F34DA0();
    uint64_t v116 = *(void *)(v115 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v116 + 56))((char *)&v135 - v114, 1, 1, v115);
    uint64_t v149 = static String.hfLocalized(_:)(0xD000000000000023, 0x8000000251F6C7C0);
    uint64_t v118 = v117;
    uint64_t v119 = MEMORY[0x270FA5388](v149);
    uint64_t v121 = (char *)&v135 - ((v120 + 15) & 0xFFFFFFFFFFFFFFF0);
    MEMORY[0x270FA5388](v119);
    uint64_t v122 = (char *)&v135 - v114;
    sub_251A1B128((uint64_t)&v135 - v114, (uint64_t)&v135 - v114, &qword_26B21FF90);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v116 + 48))((char *)&v135 - v114, 1, v115) == 1)
    {
      sub_251F34D90();
      sub_251A1B064((uint64_t)&v135 - v114, &qword_26B21FF90);
      sub_251A1B064((uint64_t)&v135 - v114, &qword_26B21FF90);
      uint64_t v123 = *(void (**)(char *, char *, uint64_t))(v116 + 32);
    }
    else
    {
      sub_251A1B064((uint64_t)&v135 - v114, &qword_26B21FF90);
      uint64_t v123 = *(void (**)(char *, char *, uint64_t))(v116 + 32);
      v123(v121, v122, v115);
    }
    uint64_t v124 = (uint64_t)v135;
    v123(v135, v121, v115);
    uint64_t v125 = (int *)v136;
    uint64_t v126 = (void *)(v124 + *(int *)(v136 + 20));
    *uint64_t v126 = 0x662E746F67697073;
    v126[1] = 0xEB000000006C6C69;
    unint64_t v127 = (void *)(v124 + v125[6]);
    *unint64_t v127 = v149;
    v127[1] = v118;
    uint64_t v128 = (uint64_t *)(v124 + v125[7]);
    uint64_t *v128 = v153;
    v128[1] = v151;
    uint64_t v129 = v124 + v125[8];
    *(void *)uint64_t v129 = 0;
    *(void *)(v129 + 8) = 0;
    *(void *)(v129 + 16) = 0;
    *(unsigned char *)(v129 + 24) = -1;
    uint64_t v130 = v137;
    uint64_t v131 = sub_251C30CB0(v124, v137, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    MEMORY[0x270FA5388](v131);
    *(&v135 - 2) = v152;
    uint64_t v154 = v144;
    uint64_t v132 = (uint64_t)v139;
    sub_251F34EF0();
    swift_bridgeObjectRelease();
    swift_storeEnumTagMultiPayload();
    uint64_t v133 = type metadata accessor for FaucetStatusItem(0);
    uint64_t v134 = v140;
    sub_251C30CB0(v132, v140 + *(int *)(v133 + 20), (uint64_t (*)(void))type metadata accessor for TilesFilter);
    sub_251C30CB0(v130, v134, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v133 - 8) + 56))(v134, 0, 1, v133);
  }
}

unint64_t ClimateCategoryInformation.statusActivatedStaticAccessories.getter()
{
  uint64_t v0 = type metadata accessor for StaticService();
  uint64_t v50 = *(void *)(v0 - 8);
  uint64_t v51 = v0;
  uint64_t v1 = MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x270FA5388](v1);
  uint64_t v6 = (char *)&v38 - v5;
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v38 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v52 = (uint64_t)&v38 - v10;
  type metadata accessor for ClimateCategoryInformation();
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_251AAD138(v11);
  uint64_t v13 = sub_251C2B978(v12, (uint64_t (*)(char *, unint64_t, uint64_t))sub_251C2C270);
  uint64_t v14 = sub_251C2B978(v13, (uint64_t (*)(char *, unint64_t, uint64_t))sub_251C2BAF0);
  uint64_t v15 = sub_251C1F5C8(v14);
  swift_release();
  uint64_t v16 = MEMORY[0x263F8EE78];
  v55[0] = MEMORY[0x263F8EE78];
  uint64_t v49 = *(void *)(v15 + 16);
  if (v49)
  {
    uint64_t v39 = v3;
    unint64_t v17 = 0;
    uint64_t v18 = MEMORY[0x263F8EE78];
    uint64_t v46 = "13-AA62-01754F256DD5";
    unint64_t v47 = (unint64_t)"00-8000-0026BB765291";
    char v44 = "CE-986D-63B28F62C9E3";
    unint64_t v45 = "73-A058-C5E64BC487B2";
    uint64_t v42 = "7E-BE63-1D00B1500545";
    unint64_t v43 = "60-AD68-D91053B75F44";
    uint64_t v40 = "73-8FBD-0E8978A33403";
    char v41 = "17-A590-755E1AAC02AE";
    uint64_t v48 = v15;
    do
    {
      if (v17 >= *(void *)(v15 + 16))
      {
        __break(1u);
        swift_bridgeObjectRelease();
        sub_251C30D18(v17, (uint64_t (*)(void))type metadata accessor for StaticService);
        swift_release();
        __break(1u);
        swift_release();
        __break(1u);
        JUMPOUT(0x251C2A9B8);
      }
      unint64_t v19 = (*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
      uint64_t v20 = *(void *)(v50 + 72);
      uint64_t v21 = v52;
      sub_251C30C48(v15 + v19 + v20 * v17, v52, (uint64_t (*)(void))type metadata accessor for StaticService);
      int v22 = *(unsigned __int8 *)(v21 + *(int *)(v51 + 96));
      sub_251C30C48(v21, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (v22 == 53) {
        LOBYTE(v22) = v9[*(int *)(v51 + 88)];
      }
      ++v17;
      sub_251C30D18((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
      char v53 = v22;
      ServiceKind.umbrellaCategory.getter(&v54);
      switch(v54)
      {
        case 1:
          uint64_t v23 = v46;
          goto LABEL_16;
        case 2:
          uint64_t v23 = v45;
          goto LABEL_16;
        case 3:
          uint64_t v23 = v44;
          goto LABEL_16;
        case 4:
          uint64_t v23 = v43;
          goto LABEL_16;
        case 5:
          uint64_t v23 = v42;
          goto LABEL_16;
        case 6:
          uint64_t v23 = v41;
          goto LABEL_16;
        case 7:
          uint64_t v23 = v40;
LABEL_16:
          if (((unint64_t)v23 | 0x8000000000000000) == (v47 | 0x8000000000000000)) {
            goto LABEL_17;
          }
          char v24 = sub_251F36B10();
          swift_bridgeObjectRelease();
          if (v24) {
            goto LABEL_19;
          }
          sub_251C30D18(v52, (uint64_t (*)(void))type metadata accessor for StaticService);
          break;
        default:
LABEL_17:
          swift_bridgeObjectRelease();
LABEL_19:
          uint64_t v25 = v9;
          uint64_t v26 = (uint64_t)v6;
          sub_251C30CB0(v52, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_251A3E3E8(0, *(void *)(v18 + 16) + 1, 1);
          }
          uint64_t v18 = v55[0];
          unint64_t v28 = *(void *)(v55[0] + 16);
          unint64_t v27 = *(void *)(v55[0] + 24);
          if (v28 >= v27 >> 1)
          {
            sub_251A3E3E8(v27 > 1, v28 + 1, 1);
            uint64_t v18 = v55[0];
          }
          *(void *)(v18 + 16) = v28 + 1;
          uint64_t v29 = v18 + v19 + v28 * v20;
          uint64_t v6 = (char *)v26;
          sub_251C30CB0(v26, v29, (uint64_t (*)(void))type metadata accessor for StaticService);
          uint64_t v9 = v25;
          break;
      }
      uint64_t v15 = v48;
    }
    while (v49 != v17);
    uint64_t v16 = v55[0];
    uint64_t v3 = v39;
  }
  swift_bridgeObjectRelease();
  v55[0] = MEMORY[0x263F8EE80];
  uint64_t v30 = *(void *)(v16 + 16);
  if (v30)
  {
    uint64_t v31 = v16 + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80));
    uint64_t v32 = *(void *)(v50 + 72);
    swift_retain();
    do
    {
      sub_251C30C48(v31, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StaticService);
      sub_251C2A9D8((unint64_t *)v55, (uint64_t)v3);
      sub_251C30D18((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StaticService);
      v31 += v32;
      --v30;
    }
    while (v30);
    swift_release_n();
    uint64_t v33 = v55[0];
  }
  else
  {
    swift_release();
    uint64_t v33 = MEMORY[0x263F8EE80];
  }
  swift_bridgeObjectRetain_n();
  uint64_t v34 = sub_251A91E2C(v33);
  swift_bridgeObjectRelease();
  v55[0] = v34;
  sub_251C2C93C(v55);
  swift_bridgeObjectRelease();
  uint64_t v35 = v55[0];
  swift_bridgeObjectRetain();
  unint64_t v36 = sub_251C2DDA4(v35, v33);
  swift_release();
  swift_bridgeObjectRelease_n();
  return v36;
}

uint64_t sub_251C2A9D8(unint64_t *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for StaticService();
  uint64_t v61 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v59 = (uint64_t)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v56 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v60 = (uint64_t)&v56 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (uint64_t)&v56 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v56 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v56 - v19;
  uint64_t result = StaticService.isActivated.getter();
  if (result)
  {
    uint64_t v57 = *(int *)(v5 + 96);
    uint64_t v58 = v2;
    int v22 = *(unsigned __int8 *)(a2 + v57);
    sub_251C30C48(a2, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v22 == 53) {
      LOBYTE(v22) = v20[*(int *)(v5 + 88)];
    }
    sub_251C30D18((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for StaticService);
    LOBYTE(v62) = v22;
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v23 == 0x8000000251F64B60)
    {
      swift_bridgeObjectRelease();
      sub_251C30C48(a2, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_13:
      sub_251C30D18((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_14:
      uint64_t v27 = v60;
      sub_251C30C48(a2, v60, (uint64_t (*)(void))type metadata accessor for StaticService);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v62 = (void *)*a1;
      unint64_t v29 = (unint64_t)v62;
      *a1 = 0x8000000000000000;
      unint64_t v31 = sub_2519FEF0C(16);
      uint64_t v32 = *(void *)(v29 + 16);
      BOOL v33 = (v30 & 1) == 0;
      uint64_t v34 = v32 + v33;
      if (__OFADD__(v32, v33))
      {
        __break(1u);
LABEL_42:
        unint64_t v29 = sub_251F0FB28(0, *(void *)(v29 + 16) + 1, 1, v29);
        *(void *)(v15 + 8 * v31) = v29;
LABEL_23:
        unint64_t v41 = *(void *)(v29 + 16);
        unint64_t v40 = *(void *)(v29 + 24);
        unint64_t v42 = v41 + 1;
        if (v41 >= v40 >> 1)
        {
          unint64_t v29 = sub_251F0FB28(v40 > 1, v41 + 1, 1, v29);
          *(void *)(v15 + 8 * v31) = v29;
        }
LABEL_25:
        *(void *)(v29 + 16) = v42;
        return sub_251C30CB0(v27, v29+ ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80))+ *(void *)(v61 + 72) * v41, (uint64_t (*)(void))type metadata accessor for StaticService);
      }
      char v35 = v30;
      if (*(void *)(v29 + 24) >= v34)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_251A16834();
          unint64_t v29 = (unint64_t)v62;
        }
LABEL_20:
        *a1 = v29;
        swift_bridgeObjectRelease();
        uint64_t v38 = (void *)*a1;
        swift_bridgeObjectRetain();
        if ((v35 & 1) == 0) {
          sub_251A11BD0(v31, 16, MEMORY[0x263F8EE78], v38);
        }
        uint64_t v15 = v38[7];
        swift_bridgeObjectRelease();
        unint64_t v29 = *(void *)(v15 + 8 * v31);
        char v39 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v15 + 8 * v31) = v29;
        if (v39) {
          goto LABEL_23;
        }
        goto LABEL_42;
      }
      sub_251A09748(v34, isUniquelyReferenced_nonNull_native);
      unint64_t v29 = (unint64_t)v62;
      unint64_t v36 = sub_2519FEF0C(16);
      if ((v35 & 1) == (v37 & 1))
      {
        unint64_t v31 = v36;
        goto LABEL_20;
      }
LABEL_45:
      uint64_t result = sub_251F36BA0();
      __break(1u);
      return result;
    }
    char v24 = sub_251F36B10();
    swift_bridgeObjectRelease();
    sub_251C30C48(a2, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v24) {
      goto LABEL_13;
    }
    int v25 = v18[*(int *)(v5 + 96)];
    sub_251C30C48((uint64_t)v18, v15, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v25 == 53) {
      LOBYTE(v25) = *(unsigned char *)(v15 + *(int *)(v5 + 88));
    }
    sub_251C30D18(v15, (uint64_t (*)(void))type metadata accessor for StaticService);
    LOBYTE(v62) = v25;
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v26 == 0x8000000251F65160)
    {
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    uint64_t v15 = sub_251F36B10();
    swift_bridgeObjectRelease();
    sub_251C30D18((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v15) {
      goto LABEL_14;
    }
    uint64_t v43 = *(unsigned __int8 *)(a2 + v57);
    sub_251C30C48(a2, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v43 == 53) {
      uint64_t v43 = v10[*(int *)(v5 + 88)];
    }
    sub_251C30D18((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v27 = v59;
    sub_251C30C48(a2, v59, (uint64_t (*)(void))type metadata accessor for StaticService);
    char v44 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v62 = (void *)*a1;
    unint64_t v29 = (unint64_t)v62;
    *a1 = 0x8000000000000000;
    unint64_t v46 = sub_2519FEF0C(v43);
    uint64_t v47 = *(void *)(v29 + 16);
    BOOL v48 = (v45 & 1) == 0;
    uint64_t v49 = v47 + v48;
    if (__OFADD__(v47, v48))
    {
      __break(1u);
    }
    else
    {
      char v50 = v45;
      if (*(void *)(v29 + 24) >= v49)
      {
        if ((v44 & 1) == 0)
        {
          sub_251A16834();
          unint64_t v29 = (unint64_t)v62;
        }
      }
      else
      {
        sub_251A09748(v49, v44);
        unint64_t v29 = (unint64_t)v62;
        unint64_t v51 = sub_2519FEF0C(v43);
        if ((v50 & 1) != (v52 & 1)) {
          goto LABEL_45;
        }
        unint64_t v46 = v51;
      }
      *a1 = v29;
      swift_bridgeObjectRelease();
      char v53 = (void *)*a1;
      swift_bridgeObjectRetain();
      if ((v50 & 1) == 0) {
        sub_251A11BD0(v46, v43, MEMORY[0x263F8EE78], v53);
      }
      uint64_t v43 = v53[7];
      swift_bridgeObjectRelease();
      unint64_t v29 = *(void *)(v43 + 8 * v46);
      char v54 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v43 + 8 * v46) = v29;
      if (v54)
      {
LABEL_39:
        unint64_t v41 = *(void *)(v29 + 16);
        unint64_t v55 = *(void *)(v29 + 24);
        unint64_t v42 = v41 + 1;
        if (v41 >= v55 >> 1)
        {
          unint64_t v29 = sub_251F0FB28(v55 > 1, v41 + 1, 1, v29);
          *(void *)(v43 + 8 * v46) = v29;
        }
        goto LABEL_25;
      }
    }
    unint64_t v29 = sub_251F0FB28(0, *(void *)(v29 + 16) + 1, 1, v29);
    *(void *)(v43 + 8 * v46) = v29;
    goto LABEL_39;
  }
  return result;
}

uint64_t sub_251C2B0CC@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for StaticService();
  uint64_t v90 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v92 = (uint64_t)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v71 - v14;
  if (!*(void *)(a2 + 16)) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a3, 1, 1, v7);
  }
  unint64_t v16 = sub_2519FEF0C(*a1);
  if ((v17 & 1) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a3, 1, 1, v7);
  }
  uint64_t v18 = *(void *)(*(void *)(a2 + 56) + 8 * v16);
  if (!*(void *)(v18 + 16)) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a3, 1, 1, v7);
  }
  uint64_t v84 = v10;
  uint64_t v87 = v8;
  uint64_t v19 = v18 + ((*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80));
  sub_251C30C48(v19, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StaticService);
  uint64_t v20 = *(int *)(v11 + 88);
  uint64_t v21 = (uint64_t)v15;
  int v22 = v15[v20];
  LOBYTE(v94.tileOnStateIconInfo.name._countAndFlagsBits) = v22;
  swift_bridgeObjectRetain();
  uint64_t v23 = v18;
  uint64_t v24 = ServiceKind.serviceStatusCountString.getter();
  if (!v25)
  {
    sub_251C30D18(v21, (uint64_t (*)(void))type metadata accessor for StaticService);
    swift_bridgeObjectRelease();
    uint64_t v8 = v87;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a3, 1, 1, v7);
  }
  uint64_t v26 = v25;
  uint64_t v89 = v24;
  uint64_t v86 = v21;
  uint64_t v82 = (int *)v7;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v80 = &v71;
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v76 = v28;
  unint64_t v29 = (char *)&v71 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_251F34DA0();
  uint64_t v91 = *(void *)(v30 - 8);
  unint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v91 + 56);
  uint64_t v77 = v29;
  v31(v29, 1, 1, v30);
  LOBYTE(v93) = v22;
  char v95 = 5;
  Icon.init(serviceKind:serviceSubKind:)(&v94, (HomeDataModel::ServiceKind)&v93, (HomeDataModel::ServiceSubKind_optional)&v95);
  uint64_t countAndFlagsBits = v94.accessoryControlOnStateIconInfo.name._countAndFlagsBits;
  object = v94.accessoryControlOnStateIconInfo.name._object;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v85 = v23;
  int64_t v32 = *(void *)(v23 + 16);
  if (v32 == 1)
  {
    swift_bridgeObjectRelease();
    LOBYTE(v93) = v22;
    uint64_t v33 = ServiceKind.localizedDescription.getter();
    uint64_t v74 = v34;
  }
  else
  {
    static String.hfLocalized(_:)(v89, v26);
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
    uint64_t v36 = swift_allocObject();
    uint64_t v37 = MEMORY[0x263F8D6C8];
    *(_OWORD *)(v36 + 16) = xmmword_251F38650;
    uint64_t v38 = MEMORY[0x263F8D750];
    *(void *)(v36 + 56) = v37;
    *(void *)(v36 + 64) = v38;
    *(void *)(v36 + 32) = v32;
    uint64_t v33 = sub_251F35720();
    uint64_t v74 = v39;
    swift_bridgeObjectRelease();
  }
  uint64_t v75 = v33;
  if (v22 == 48)
  {
    uint64_t v40 = StaticService.ventilationFanSimple.getter();
  }
  else if (v22 == 16)
  {
    uint64_t v40 = StaticService.fanStringSimple.getter();
  }
  else
  {
    uint64_t v40 = StaticService.tileCharacteristicStateString.getter();
  }
  uint64_t v73 = v40;
  uint64_t v72 = v41;
  uint64_t v81 = a3;
  uint64_t v83 = v3;
  if (v32)
  {
    uint64_t v93 = MEMORY[0x263F8EE78];
    uint64_t v42 = sub_251A3E084(0, v32, 0);
    uint64_t v43 = *(void *)(v91 + 64);
    uint64_t v44 = *(void *)(v90 + 72);
    char v45 = (void (**)(char *, uint64_t, uint64_t))(v91 + 16);
    uint64_t v88 = v91 + 32;
    uint64_t v89 = v44;
    uint64_t v90 = v30;
    do
    {
      MEMORY[0x270FA5388](v42);
      uint64_t v46 = v92;
      sub_251C30C48(v19, v92, (uint64_t (*)(void))type metadata accessor for StaticService);
      (*v45)((char *)&v71 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0), v46, v30);
      sub_251C30D18(v46, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v47 = v93;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3E084(0, *(void *)(v47 + 16) + 1, 1);
        uint64_t v47 = v93;
      }
      unint64_t v49 = *(void *)(v47 + 16);
      unint64_t v48 = *(void *)(v47 + 24);
      if (v49 >= v48 >> 1)
      {
        sub_251A3E084(v48 > 1, v49 + 1, 1);
        uint64_t v47 = v93;
      }
      *(void *)(v47 + 16) = v49 + 1;
      unint64_t v50 = v47
          + ((*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80))
          + *(void *)(v91 + 72) * v49;
      uint64_t v30 = v90;
      uint64_t v42 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v91 + 32))(v50, (char *)&v71 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0), v90);
      uint64_t v93 = v47;
      v19 += v89;
      --v32;
    }
    while (v32);
    uint64_t v51 = swift_bridgeObjectRelease();
    uint64_t v52 = v91;
  }
  else
  {
    uint64_t v51 = swift_bridgeObjectRelease();
    uint64_t v52 = v91;
    uint64_t v43 = *(void *)(v91 + 64);
    uint64_t v47 = MEMORY[0x263F8EE78];
  }
  uint64_t v53 = MEMORY[0x270FA5388](v51);
  char v54 = (char *)&v71 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v53);
  uint64_t v56 = (char *)&v71 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = (uint64_t)v77;
  sub_251A1B128((uint64_t)v77, (uint64_t)v56, &qword_26B21FF90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v56, 1, v30) == 1)
  {
    sub_251F34D90();
    sub_251A1B064(v57, &qword_26B21FF90);
    sub_251A1B064((uint64_t)v56, &qword_26B21FF90);
    uint64_t v58 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
  }
  else
  {
    sub_251A1B064(v57, &qword_26B21FF90);
    uint64_t v58 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
    v58(v54, v56, v30);
  }
  uint64_t v59 = (uint64_t)v84;
  uint64_t v60 = v30;
  uint64_t v61 = v86;
  v58(v84, v54, v60);
  uint64_t v62 = v82;
  uint64_t v63 = (uint64_t *)(v59 + v82[5]);
  uint64_t v64 = (uint64_t)object;
  *uint64_t v63 = countAndFlagsBits;
  v63[1] = v64;
  uint64_t v65 = (uint64_t *)(v59 + v62[6]);
  uint64_t v66 = v74;
  *uint64_t v65 = v75;
  v65[1] = v66;
  char v67 = (uint64_t *)(v59 + v62[7]);
  uint64_t v68 = v72;
  *char v67 = v73;
  v67[1] = v68;
  uint64_t v69 = v59 + v62[8];
  *(void *)(v69 + 8) = 0;
  *(void *)(v69 + 16) = 0;
  *(void *)uint64_t v69 = v47;
  *(unsigned char *)(v69 + 24) = 2;
  uint64_t v70 = v81;
  sub_251C30CB0(v59, v81, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
  sub_251C30D18(v61, (uint64_t (*)(void))type metadata accessor for StaticService);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(v87 + 56))(v70, 0, 1, v62);
}

void sub_251C2B908()
{
  off_269BA06D0 = &unk_270263030;
}

uint64_t static ClimateCategoryInformation.possibleServicesInOrder.getter()
{
  if (qword_269B9C398 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_251C2B978(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v4 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x263EF8340];
  char v5 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v6 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    uint64_t v8 = a2((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v6, v4);
    swift_release();
    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    uint64_t v8 = a2((char *)v9, v6, v4);
    swift_release();
    MEMORY[0x2533AC760](v9, -1, -1);
  }
  return v8;
}

uint64_t sub_251C2BAF0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v53 = a2;
  uint64_t v55 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticAccessory(0);
  uint64_t v61 = *(void *)(v7 - 8);
  uint64_t result = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = a3;
  uint64_t v64 = 0;
  int64_t v11 = 0;
  uint64_t v14 = *(void *)(a3 + 56);
  uint64_t v13 = a3 + 56;
  uint64_t v12 = v14;
  uint64_t v15 = 1 << *(unsigned char *)(v13 - 24);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v12;
  uint64_t v56 = v13;
  int64_t v57 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v62 = result;
  uint64_t v59 = v6;
  uint64_t v60 = v10;
  if (!v17) {
    goto LABEL_8;
  }
  while (1)
  {
LABEL_7:
    int64_t v66 = v11;
    uint64_t v67 = (v17 - 1) & v17;
    unint64_t v19 = __clz(__rbit64(v17)) | (v11 << 6);
LABEL_22:
    uint64_t v24 = *(void *)(v63 + 48);
    uint64_t v25 = *(void *)(v61 + 72);
    unint64_t v65 = v19;
    sub_251C30C48(v24 + v25 * v19, (uint64_t)v10, type metadata accessor for StaticAccessory);
    uint64_t v26 = sub_251F34DA0();
    uint64_t v27 = *(void *)(v26 - 8);
    MEMORY[0x270FA5388](v26);
    unint64_t v29 = (char *)&v53 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    MEMORY[0x270FA5388](v30 - 8);
    int64_t v32 = (char *)&v53 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251A1B128((uint64_t)&v10[*(int *)(v7 + 84)], (uint64_t)v32, &qword_26B21FF90);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v32, 1, v26) == 1)
    {
      sub_251A1B064((uint64_t)v32, &qword_26B21FF90);
      uint64_t v33 = type metadata accessor for StaticService();
      uint64_t v34 = (uint64_t)v59;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v59, 1, 1, v33);
      int64_t v11 = v66;
LABEL_31:
      sub_251A1B064(v34, qword_26B21EE20);
      int v42 = 53;
      goto LABEL_33;
    }
    uint64_t v58 = &v53;
    uint64_t v35 = (uint64_t)v59;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v29, v32, v26);
    uint64_t v36 = *(void *)&v10[*(int *)(v7 + 76)];
    if (*(void *)(v36 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v37 = sub_2519FE584((uint64_t)v29);
      if (v38)
      {
        unint64_t v39 = v37;
        uint64_t v54 = *(void *)(v36 + 56);
        uint64_t v40 = type metadata accessor for StaticService();
        uint64_t v41 = *(void *)(v40 - 8);
        sub_251C30C48(v54 + *(void *)(v41 + 72) * v39, v35, (uint64_t (*)(void))type metadata accessor for StaticService);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v35, 0, 1, v40);
      }
      else
      {
        uint64_t v40 = type metadata accessor for StaticService();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v35, 1, 1, v40);
      }
      uint64_t v34 = v35;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v40 = type metadata accessor for StaticService();
      uint64_t v34 = v35;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v35, 1, 1, v40);
    }
    int64_t v11 = v66;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
    type metadata accessor for StaticService();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48))(v34, 1, v40) == 1) {
      goto LABEL_31;
    }
    int v42 = *(unsigned __int8 *)(v34 + *(int *)(v40 + 88));
    sub_251C30D18(v34, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_33:
    uint64_t v10 = v60;
    uint64_t v43 = qword_270263018;
    if (qword_270263018) {
      break;
    }
LABEL_5:
    uint64_t result = sub_251C30D18((uint64_t)v10, type metadata accessor for StaticAccessory);
    *(unint64_t *)((char *)v55 + ((v65 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v65;
    BOOL v18 = __OFADD__(v64++, 1);
    uint64_t v7 = v62;
    unint64_t v17 = v67;
    if (v18)
    {
      __break(1u);
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    if (!v67) {
      goto LABEL_8;
    }
  }
  uint64_t v44 = &byte_270263028;
  while (1)
  {
    int v46 = *v44++;
    char v45 = v46;
    if (v46 == 53)
    {
      if (v42 == 53) {
        goto LABEL_44;
      }
      goto LABEL_36;
    }
    if (v42 == 53) {
      goto LABEL_36;
    }
    char v69 = v45;
    char v68 = v42;
    unint64_t v47 = ServiceKind.rawValue.getter();
    uint64_t v49 = v48;
    if (v47 == ServiceKind.rawValue.getter() && v49 == v50) {
      break;
    }
    char v51 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v51) {
      goto LABEL_44;
    }
LABEL_36:
    if (!--v43) {
      goto LABEL_5;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_44:
  uint64_t result = sub_251C30D18((uint64_t)v10, type metadata accessor for StaticAccessory);
  uint64_t v7 = v62;
  unint64_t v17 = v67;
  if (v67) {
    goto LABEL_7;
  }
LABEL_8:
  int64_t v20 = v11 + 1;
  if (__OFADD__(v11, 1)) {
    goto LABEL_48;
  }
  if (v20 >= v57) {
    goto LABEL_46;
  }
  unint64_t v21 = *(void *)(v56 + 8 * v20);
  int64_t v22 = v11 + 1;
  if (v21) {
    goto LABEL_21;
  }
  int64_t v22 = v11 + 2;
  if (v11 + 2 >= v57) {
    goto LABEL_46;
  }
  unint64_t v21 = *(void *)(v56 + 8 * v22);
  if (v21) {
    goto LABEL_21;
  }
  int64_t v22 = v11 + 3;
  if (v11 + 3 >= v57) {
    goto LABEL_46;
  }
  unint64_t v21 = *(void *)(v56 + 8 * v22);
  if (v21) {
    goto LABEL_21;
  }
  uint64_t v23 = v11 + 4;
  if (v11 + 4 >= v57)
  {
LABEL_46:
    uint64_t v52 = v63;
    swift_retain();
    return sub_251F1BAE0(v55, v53, v64, v52);
  }
  unint64_t v21 = *(void *)(v56 + 8 * v23);
  if (v21)
  {
    int64_t v22 = v11 + 4;
LABEL_21:
    int64_t v66 = v22;
    uint64_t v67 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v22 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v22 >= v57) {
      goto LABEL_46;
    }
    unint64_t v21 = *(void *)(v56 + 8 * v22);
    ++v23;
    if (v21) {
      goto LABEL_21;
    }
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_251C2C270(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v46 = a2;
  unint64_t v47 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v59 = (uint64_t)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StaticAccessory(0);
  uint64_t v54 = *(void *)(v6 - 8);
  uint64_t result = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = 0;
  int64_t v10 = 0;
  uint64_t v55 = a3;
  uint64_t v13 = *(void *)(a3 + 56);
  uint64_t v12 = a3 + 56;
  uint64_t v11 = v13;
  uint64_t v14 = 1 << *(unsigned char *)(v12 - 24);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v11;
  uint64_t v50 = v12;
  int64_t v51 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v52 = v9;
  uint64_t v53 = result;
  while (v16)
  {
    uint64_t v57 = (v16 - 1) & v16;
    int64_t v58 = v10;
    unint64_t v19 = __clz(__rbit64(v16)) | (v10 << 6);
LABEL_23:
    uint64_t v24 = *(void *)(v55 + 48);
    uint64_t v25 = *(void *)(v54 + 72);
    unint64_t v56 = v19;
    sub_251C30C48(v24 + v25 * v19, (uint64_t)v9, type metadata accessor for StaticAccessory);
    uint64_t v26 = sub_251F34DA0();
    uint64_t v27 = *(void *)(v26 - 8);
    MEMORY[0x270FA5388](v26);
    unint64_t v29 = (char *)&v46 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    MEMORY[0x270FA5388](v30 - 8);
    int64_t v32 = (char *)&v46 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251A1B128((uint64_t)&v9[*(int *)(v6 + 84)], (uint64_t)v32, &qword_26B21FF90);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v32, 1, v26) == 1)
    {
      sub_251A1B064((uint64_t)v32, &qword_26B21FF90);
      uint64_t v17 = type metadata accessor for StaticService();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v59, 1, 1, v17);
LABEL_5:
      sub_251A1B064(v59, qword_26B21EE20);
      uint64_t result = sub_251C30D18((uint64_t)v9, type metadata accessor for StaticAccessory);
      unint64_t v16 = v57;
      int64_t v10 = v58;
LABEL_6:
      *(unint64_t *)((char *)v47 + ((v56 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v56;
      if (__OFADD__(v48++, 1)) {
        goto LABEL_38;
      }
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v29, v32, v26);
      uint64_t v33 = *(void *)&v9[*(int *)(v6 + 76)];
      if (*(void *)(v33 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v34 = sub_2519FE584((uint64_t)v29);
        if (v35)
        {
          unint64_t v36 = v34;
          uint64_t v49 = *(void *)(v33 + 56);
          uint64_t v37 = type metadata accessor for StaticService();
          uint64_t v38 = *(void *)(v37 - 8);
          uint64_t v39 = v49 + *(void *)(v38 + 72) * v36;
          uint64_t v40 = v59;
          sub_251C30C48(v39, v59, (uint64_t (*)(void))type metadata accessor for StaticService);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v38 + 56))(v40, 0, 1, v37);
        }
        else
        {
          uint64_t v37 = type metadata accessor for StaticService();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v59, 1, 1, v37);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v37 = type metadata accessor for StaticService();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v59, 1, 1, v37);
      }
      (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
      type metadata accessor for StaticService();
      int v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 48))(v59, 1, v37);
      uint64_t v9 = v52;
      uint64_t v6 = v53;
      if (v41 == 1) {
        goto LABEL_5;
      }
      if (qword_26B21F080 != -1) {
        swift_once();
      }
      uint64_t v42 = *(int *)(v37 + 88);
      uint64_t v43 = v59;
      char v44 = sub_251DB3C0C(*(unsigned __int8 *)(v59 + v42), (uint64_t)off_26B21F078);
      sub_251C30D18(v43, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t result = sub_251C30D18((uint64_t)v9, type metadata accessor for StaticAccessory);
      unint64_t v16 = v57;
      int64_t v10 = v58;
      if ((v44 & 1) == 0) {
        goto LABEL_6;
      }
    }
  }
  int64_t v20 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v20 >= v51) {
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v50 + 8 * v20);
  int64_t v22 = v10 + 1;
  if (v21) {
    goto LABEL_22;
  }
  int64_t v22 = v10 + 2;
  if (v10 + 2 >= v51) {
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v50 + 8 * v22);
  if (v21) {
    goto LABEL_22;
  }
  int64_t v22 = v10 + 3;
  if (v10 + 3 >= v51) {
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v50 + 8 * v22);
  if (v21)
  {
LABEL_22:
    uint64_t v57 = (v21 - 1) & v21;
    int64_t v58 = v22;
    unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
    goto LABEL_23;
  }
  uint64_t v23 = v10 + 4;
  if (v10 + 4 >= v51)
  {
LABEL_35:
    uint64_t v45 = v55;
    swift_retain();
    return sub_251F1BAE0(v47, v46, v48, v45);
  }
  unint64_t v21 = *(void *)(v50 + 8 * v23);
  if (v21)
  {
    int64_t v22 = v10 + 4;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v22 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v22 >= v51) {
      goto LABEL_35;
    }
    unint64_t v21 = *(void *)(v50 + 8 * v22);
    ++v23;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_251C2C93C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_251ECDD50(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_251C2C9A8(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_251C2C9A8(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_251F36AA0();
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_208;
    }
    if (v4) {
      return sub_251C2D538(0, v4, 1, a1);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_216;
  }
  uint64_t v134 = v4;
  uint64_t v131 = result;
  uint64_t v129 = a1;
  if (v4 < 2)
  {
    uint64_t v9 = (char *)MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    uint64_t v130 = MEMORY[0x263F8EE78];
    if (v4 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_174:
      if (v13 >= 2)
      {
        uint64_t v123 = *v129;
        do
        {
          unint64_t v124 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_203;
          }
          if (!v123) {
            goto LABEL_215;
          }
          uint64_t v125 = *(void *)&v9[16 * v124 + 32];
          uint64_t v126 = *(void *)&v9[16 * v13 + 24];
          sub_251C2D7A8((char *)(v123 + v125), (char *)(v123 + *(void *)&v9[16 * v13 + 16]), v123 + v126, __dst);
          if (v2) {
            break;
          }
          if (v126 < v125) {
            goto LABEL_204;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v9 = sub_251ECDC38((uint64_t)v9);
          }
          if (v124 >= *((void *)v9 + 2)) {
            goto LABEL_205;
          }
          unint64_t v127 = &v9[16 * v124 + 32];
          *(void *)unint64_t v127 = v125;
          *((void *)v127 + 1) = v126;
          unint64_t v128 = *((void *)v9 + 2);
          if (v13 > v128) {
            goto LABEL_206;
          }
          memmove(&v9[16 * v13 + 16], &v9[16 * v13 + 32], 16 * (v128 - v13));
          *((void *)v9 + 2) = v128 - 1;
          unint64_t v13 = v128 - 1;
        }
        while (v128 > 2);
      }
LABEL_185:
      swift_bridgeObjectRelease();
      *(void *)(v130 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v7 = v6 >> 1;
    uint64_t v8 = sub_251F35B50();
    *(void *)(v8 + 16) = v7;
    uint64_t v130 = v8;
    __dst = (char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v9 = (char *)MEMORY[0x263F8EE78];
  uint64_t v12 = v134;
  uint64_t v144 = *a1;
  while (1)
  {
    uint64_t v14 = v10 + 1;
    uint64_t v133 = v9;
    uint64_t v138 = v10;
    if (v10 + 1 < v12)
    {
      if (qword_269B9C398 != -1)
      {
        swift_once();
        uint64_t v11 = v144;
      }
      uint64_t v15 = *((void *)off_269BA06D0 + 2);
      if (v15)
      {
        swift_bridgeObjectRetain();
        unint64_t v16 = 0;
        while (1)
        {
          unint64_t v142 = v16;
          unint64_t v17 = ServiceKind.rawValue.getter();
          uint64_t v19 = v18;
          if (v17 == ServiceKind.rawValue.getter() && v19 == v20) {
            break;
          }
          char v22 = sub_251F36B10();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v22) {
            goto LABEL_29;
          }
          unint64_t v16 = v142 + 1;
          if (v15 == v142 + 1)
          {
            swift_bridgeObjectRelease();
            unint64_t v142 = 0;
            goto LABEL_30;
          }
        }
        swift_bridgeObjectRelease_n();
LABEL_29:
        swift_bridgeObjectRelease();
LABEL_30:
        uint64_t v11 = v144;
      }
      else
      {
        unint64_t v142 = 0;
      }
      uint64_t v23 = *((void *)off_269BA06D0 + 2);
      if (v23)
      {
        swift_bridgeObjectRetain();
        unint64_t v24 = 0;
        while (1)
        {
          unint64_t v25 = ServiceKind.rawValue.getter();
          uint64_t v27 = v26;
          if (v25 == ServiceKind.rawValue.getter() && v27 == v28) {
            break;
          }
          char v30 = sub_251F36B10();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v30) {
            goto LABEL_42;
          }
          if (v23 == ++v24)
          {
            swift_bridgeObjectRelease();
            unint64_t v24 = 0;
            goto LABEL_43;
          }
        }
        swift_bridgeObjectRelease_n();
LABEL_42:
        swift_bridgeObjectRelease();
LABEL_43:
        uint64_t v11 = v144;
      }
      else
      {
        unint64_t v24 = 0;
      }
      uint64_t v31 = v138 + 2;
      if (v138 + 2 < v134)
      {
        do
        {
          uint64_t v135 = v2;
          uint64_t v32 = *((void *)off_269BA06D0 + 2);
          uint64_t v139 = v31;
          if (v32)
          {
            swift_bridgeObjectRetain();
            unint64_t v33 = 0;
            while (1)
            {
              unint64_t v34 = ServiceKind.rawValue.getter();
              uint64_t v36 = v35;
              if (v34 == ServiceKind.rawValue.getter() && v36 == v37) {
                break;
              }
              char v39 = sub_251F36B10();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v39) {
                goto LABEL_59;
              }
              if (v32 == ++v33)
              {
                swift_bridgeObjectRelease();
                unint64_t v33 = 0;
                goto LABEL_60;
              }
            }
            swift_bridgeObjectRelease_n();
LABEL_59:
            swift_bridgeObjectRelease();
LABEL_60:
            uint64_t v11 = v144;
          }
          else
          {
            unint64_t v33 = 0;
          }
          uint64_t v40 = *((void *)off_269BA06D0 + 2);
          if (v40)
          {
            swift_bridgeObjectRetain();
            unint64_t v41 = 0;
            while (1)
            {
              unint64_t v42 = ServiceKind.rawValue.getter();
              uint64_t v44 = v43;
              if (v42 == ServiceKind.rawValue.getter() && v44 == v45) {
                break;
              }
              char v47 = sub_251F36B10();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v47) {
                goto LABEL_71;
              }
              if (v40 == ++v41)
              {
                swift_bridgeObjectRelease();
                uint64_t v11 = v144;
                goto LABEL_46;
              }
            }
            swift_bridgeObjectRelease_n();
LABEL_71:
            swift_bridgeObjectRelease();
            BOOL v48 = v33 >= v41;
            uint64_t v2 = v135;
            uint64_t v9 = v133;
            uint64_t v11 = v144;
            uint64_t v31 = v139;
            if ((((v142 < v24) ^ v48) & 1) == 0) {
              goto LABEL_74;
            }
          }
          else
          {
LABEL_46:
            uint64_t v31 = v139;
            uint64_t v2 = v135;
            uint64_t v9 = v133;
            if (v142 < v24) {
              goto LABEL_75;
            }
          }
          ++v31;
        }
        while (v31 != v134);
        uint64_t v31 = v134;
      }
LABEL_74:
      uint64_t v14 = v31;
      if (v142 < v24)
      {
LABEL_75:
        uint64_t v49 = v138;
        if (v31 < v138) {
          goto LABEL_209;
        }
        if (v138 < v31)
        {
          uint64_t v50 = v31 - 1;
          do
          {
            if (v49 != v50)
            {
              if (!v11) {
                goto LABEL_214;
              }
              char v51 = *(unsigned char *)(v11 + v49);
              *(unsigned char *)(v11 + v49) = *(unsigned char *)(v11 + v50);
              *(unsigned char *)(v11 + v50) = v51;
            }
            BOOL v105 = ++v49 < v50--;
          }
          while (v105);
        }
        uint64_t v14 = v31;
      }
    }
    if (v14 < v134)
    {
      if (__OFSUB__(v14, v138)) {
        goto LABEL_207;
      }
      if (v14 - v138 < v131) {
        break;
      }
    }
LABEL_126:
    if (v14 < v138) {
      goto LABEL_202;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_251ECD5C4(0, *((void *)v9 + 2) + 1, 1, v9);
    }
    unint64_t v74 = *((void *)v9 + 2);
    unint64_t v73 = *((void *)v9 + 3);
    unint64_t v13 = v74 + 1;
    uint64_t v11 = v144;
    if (v74 >= v73 >> 1)
    {
      uint64_t v122 = sub_251ECD5C4((char *)(v73 > 1), v74 + 1, 1, v9);
      uint64_t v11 = v144;
      uint64_t v9 = v122;
    }
    *((void *)v9 + 2) = v13;
    uint64_t v75 = v9 + 32;
    uint64_t v76 = &v9[16 * v74 + 32];
    *(void *)uint64_t v76 = v138;
    *((void *)v76 + 1) = v14;
    uint64_t v141 = v14;
    if (v74)
    {
      while (1)
      {
        unint64_t v77 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v82 = &v75[16 * v13];
          uint64_t v83 = *((void *)v82 - 8);
          uint64_t v84 = *((void *)v82 - 7);
          BOOL v88 = __OFSUB__(v84, v83);
          uint64_t v85 = v84 - v83;
          if (v88) {
            goto LABEL_191;
          }
          uint64_t v87 = *((void *)v82 - 6);
          uint64_t v86 = *((void *)v82 - 5);
          BOOL v88 = __OFSUB__(v86, v87);
          uint64_t v80 = v86 - v87;
          char v81 = v88;
          if (v88) {
            goto LABEL_192;
          }
          unint64_t v89 = v13 - 2;
          uint64_t v90 = &v75[16 * v13 - 32];
          uint64_t v92 = *(void *)v90;
          uint64_t v91 = *((void *)v90 + 1);
          BOOL v88 = __OFSUB__(v91, v92);
          uint64_t v93 = v91 - v92;
          if (v88) {
            goto LABEL_194;
          }
          BOOL v88 = __OFADD__(v80, v93);
          uint64_t v94 = v80 + v93;
          if (v88) {
            goto LABEL_197;
          }
          if (v94 >= v85)
          {
            uint64_t v112 = &v75[16 * v77];
            uint64_t v114 = *(void *)v112;
            uint64_t v113 = *((void *)v112 + 1);
            BOOL v88 = __OFSUB__(v113, v114);
            uint64_t v115 = v113 - v114;
            if (v88) {
              goto LABEL_201;
            }
            BOOL v105 = v80 < v115;
            goto LABEL_163;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v106 = *((void *)v9 + 4);
            uint64_t v107 = *((void *)v9 + 5);
            BOOL v88 = __OFSUB__(v107, v106);
            uint64_t v99 = v107 - v106;
            char v100 = v88;
            goto LABEL_157;
          }
          uint64_t v79 = *((void *)v9 + 4);
          uint64_t v78 = *((void *)v9 + 5);
          BOOL v88 = __OFSUB__(v78, v79);
          uint64_t v80 = v78 - v79;
          char v81 = v88;
        }
        if (v81) {
          goto LABEL_193;
        }
        unint64_t v89 = v13 - 2;
        char v95 = &v75[16 * v13 - 32];
        uint64_t v97 = *(void *)v95;
        uint64_t v96 = *((void *)v95 + 1);
        BOOL v98 = __OFSUB__(v96, v97);
        uint64_t v99 = v96 - v97;
        char v100 = v98;
        if (v98) {
          goto LABEL_196;
        }
        uint64_t v101 = &v75[16 * v77];
        uint64_t v103 = *(void *)v101;
        uint64_t v102 = *((void *)v101 + 1);
        BOOL v88 = __OFSUB__(v102, v103);
        uint64_t v104 = v102 - v103;
        if (v88) {
          goto LABEL_199;
        }
        if (__OFADD__(v99, v104)) {
          goto LABEL_200;
        }
        if (v99 + v104 >= v80)
        {
          BOOL v105 = v80 < v104;
LABEL_163:
          if (v105) {
            unint64_t v77 = v89;
          }
          goto LABEL_165;
        }
LABEL_157:
        if (v100) {
          goto LABEL_195;
        }
        uint64_t v108 = &v75[16 * v77];
        uint64_t v110 = *(void *)v108;
        uint64_t v109 = *((void *)v108 + 1);
        BOOL v88 = __OFSUB__(v109, v110);
        uint64_t v111 = v109 - v110;
        if (v88) {
          goto LABEL_198;
        }
        if (v111 < v99) {
          goto LABEL_14;
        }
LABEL_165:
        unint64_t v116 = v77 - 1;
        if (v77 - 1 >= v13)
        {
          __break(1u);
LABEL_188:
          __break(1u);
LABEL_189:
          __break(1u);
LABEL_190:
          __break(1u);
LABEL_191:
          __break(1u);
LABEL_192:
          __break(1u);
LABEL_193:
          __break(1u);
LABEL_194:
          __break(1u);
LABEL_195:
          __break(1u);
LABEL_196:
          __break(1u);
LABEL_197:
          __break(1u);
LABEL_198:
          __break(1u);
LABEL_199:
          __break(1u);
LABEL_200:
          __break(1u);
LABEL_201:
          __break(1u);
LABEL_202:
          __break(1u);
LABEL_203:
          __break(1u);
LABEL_204:
          __break(1u);
LABEL_205:
          __break(1u);
LABEL_206:
          __break(1u);
LABEL_207:
          __break(1u);
LABEL_208:
          __break(1u);
LABEL_209:
          __break(1u);
LABEL_210:
          __break(1u);
          goto LABEL_211;
        }
        if (!v11) {
          goto LABEL_212;
        }
        uint64_t v117 = &v75[16 * v116];
        uint64_t v118 = *(void *)v117;
        uint64_t v119 = &v75[16 * v77];
        uint64_t v120 = *((void *)v119 + 1);
        sub_251C2D7A8((char *)(v11 + *(void *)v117), (char *)(v11 + *(void *)v119), v11 + v120, __dst);
        if (v2) {
          goto LABEL_185;
        }
        if (v120 < v118) {
          goto LABEL_188;
        }
        if (v77 > *((void *)v9 + 2)) {
          goto LABEL_189;
        }
        *(void *)uint64_t v117 = v118;
        *(void *)&v75[16 * v116 + 8] = v120;
        unint64_t v121 = *((void *)v9 + 2);
        if (v77 >= v121) {
          goto LABEL_190;
        }
        unint64_t v13 = v121 - 1;
        memmove(&v75[16 * v77], v119 + 16, 16 * (v121 - 1 - v77));
        *((void *)v9 + 2) = v121 - 1;
        uint64_t v11 = v144;
        if (v121 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_14:
    uint64_t v12 = v134;
    uint64_t v10 = v141;
    if (v141 >= v134) {
      goto LABEL_174;
    }
  }
  uint64_t v52 = v138 + v131;
  if (__OFADD__(v138, v131)) {
    goto LABEL_210;
  }
  if (v52 >= v134) {
    uint64_t v52 = v134;
  }
  if (v52 >= v138)
  {
    if (v14 != v52)
    {
      uint64_t v132 = v52;
      uint64_t v136 = v2;
      if (qword_269B9C398 != -1) {
        swift_once();
      }
      do
      {
        uint64_t v54 = v14;
        uint64_t v140 = v14;
LABEL_98:
        uint64_t v143 = v54;
        uint64_t v55 = v54 - 1;
        uint64_t v56 = *((void *)off_269BA06D0 + 2);
        if (v56)
        {
          swift_bridgeObjectRetain();
          unint64_t v57 = 0;
          while (1)
          {
            unint64_t v58 = ServiceKind.rawValue.getter();
            uint64_t v60 = v59;
            if (v58 == ServiceKind.rawValue.getter() && v60 == v61) {
              break;
            }
            char v63 = sub_251F36B10();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v63) {
              goto LABEL_109;
            }
            if (v56 == ++v57)
            {
              swift_bridgeObjectRelease();
              unint64_t v57 = 0;
              goto LABEL_110;
            }
          }
          swift_bridgeObjectRelease_n();
LABEL_109:
          swift_bridgeObjectRelease();
        }
        else
        {
          unint64_t v57 = 0;
        }
LABEL_110:
        uint64_t v64 = *((void *)off_269BA06D0 + 2);
        if (!v64) {
          goto LABEL_95;
        }
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v64; ++i)
        {
          unint64_t v66 = ServiceKind.rawValue.getter();
          uint64_t v68 = v67;
          if (v66 == ServiceKind.rawValue.getter() && v68 == v69)
          {
            swift_bridgeObjectRelease_n();
LABEL_120:
            swift_bridgeObjectRelease();
            uint64_t v53 = v140;
            if (v57 >= i) {
              goto LABEL_96;
            }
            if (!v144) {
              goto LABEL_213;
            }
            char v72 = *(unsigned char *)(v144 + v143);
            *(unsigned char *)(v144 + v143) = *(unsigned char *)(v144 + v55);
            *(unsigned char *)(v144 + v55) = v72;
            uint64_t v54 = v55;
            if (v55 == v138) {
              goto LABEL_96;
            }
            goto LABEL_98;
          }
          char v71 = sub_251F36B10();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v71) {
            goto LABEL_120;
          }
        }
        swift_bridgeObjectRelease();
LABEL_95:
        uint64_t v53 = v140;
LABEL_96:
        uint64_t v14 = v53 + 1;
      }
      while (v14 != v132);
      uint64_t v14 = v132;
      uint64_t v9 = v133;
      uint64_t v2 = v136;
    }
    goto LABEL_126;
  }
LABEL_211:
  __break(1u);
LABEL_212:
  __break(1u);
LABEL_213:
  __break(1u);
LABEL_214:
  __break(1u);
LABEL_215:
  __break(1u);
LABEL_216:
  uint64_t result = sub_251F36670();
  __break(1u);
  return result;
}

uint64_t sub_251C2D538(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v24 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v26 = *a4;
    if (qword_269B9C398 != -1) {
      uint64_t result = swift_once();
    }
LABEL_6:
    uint64_t v25 = v4;
    uint64_t v27 = v4;
    while (1)
    {
      uint64_t v5 = v27 - 1;
      uint64_t v6 = *((void *)off_269BA06D0 + 2);
      if (v6)
      {
        swift_bridgeObjectRetain();
        unint64_t v7 = 0;
        while (1)
        {
          unint64_t v8 = ServiceKind.rawValue.getter();
          uint64_t v10 = v9;
          if (v8 == ServiceKind.rawValue.getter() && v10 == v11) {
            break;
          }
          char v13 = sub_251F36B10();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v13) {
            goto LABEL_18;
          }
          if (v6 == ++v7)
          {
            uint64_t result = swift_bridgeObjectRelease();
            unint64_t v7 = 0;
            goto LABEL_19;
          }
        }
        swift_bridgeObjectRelease_n();
LABEL_18:
        uint64_t result = swift_bridgeObjectRelease();
      }
      else
      {
        unint64_t v7 = 0;
      }
LABEL_19:
      uint64_t v14 = *((void *)off_269BA06D0 + 2);
      if (!v14) {
        goto LABEL_5;
      }
      swift_bridgeObjectRetain();
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = ServiceKind.rawValue.getter();
        uint64_t v18 = v17;
        if (v16 == ServiceKind.rawValue.getter() && v18 == v19) {
          break;
        }
        char v21 = sub_251F36B10();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v21) {
          goto LABEL_29;
        }
        if (v14 == ++v15)
        {
          uint64_t result = swift_bridgeObjectRelease();
          goto LABEL_5;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_29:
      uint64_t result = swift_bridgeObjectRelease();
      if (v7 >= v15)
      {
LABEL_5:
        ++v4;
        if (v25 + 1 == a2) {
          return result;
        }
        goto LABEL_6;
      }
      if (!v26) {
        break;
      }
      char v22 = *(unsigned char *)(v26 + v27);
      *(unsigned char *)(v26 + v27) = *(unsigned char *)(v26 + v5);
      *(unsigned char *)(v26 + v5) = v22;
      --v27;
      if (v5 == v24) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_251C2D7A8(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v5 = (char *)a3;
  uint64_t v6 = a2;
  unint64_t v7 = __src;
  size_t v8 = a2 - __src;
  unint64_t v9 = a3 - (void)a2;
  uint64_t v62 = __src;
  uint64_t v61 = __dst;
  if (a2 - __src >= (uint64_t)(a3 - (void)a2))
  {
    if ((v9 & 0x8000000000000000) == 0)
    {
      if (__dst != a2 || a3 <= (unint64_t)__dst) {
        memmove(__dst, a2, a3 - (void)a2);
      }
      uint64_t v28 = &v4[v9];
      uint64_t v60 = &v4[v9];
      uint64_t v62 = v6;
      if (v7 < v6 && v5 != v6)
      {
        if (qword_269B9C398 != -1) {
          swift_once();
        }
        unint64_t v29 = v6;
        uint64_t v55 = v7;
        unint64_t v57 = v4;
        do
        {
          uint64_t v52 = v28;
          uint64_t v54 = v6;
          --v28;
          uint64_t v50 = v29 - 1;
          uint64_t v30 = *((void *)off_269BA06D0 + 2);
          uint64_t v59 = v5;
          if (v30)
          {
            swift_bridgeObjectRetain();
            unint64_t v31 = 0;
            while (1)
            {
              unint64_t v32 = ServiceKind.rawValue.getter();
              uint64_t v34 = v33;
              if (v32 == ServiceKind.rawValue.getter() && v34 == v35) {
                break;
              }
              char v37 = sub_251F36B10();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v37) {
                goto LABEL_66;
              }
              if (v30 == ++v31)
              {
                swift_bridgeObjectRelease();
                unint64_t v31 = 0;
                goto LABEL_67;
              }
            }
            swift_bridgeObjectRelease_n();
LABEL_66:
            swift_bridgeObjectRelease();
LABEL_67:
            uint64_t v5 = v59;
          }
          else
          {
            unint64_t v31 = 0;
          }
          uint64_t v38 = v5 - 1;
          uint64_t v39 = *((void *)off_269BA06D0 + 2);
          if (!v39) {
            goto LABEL_83;
          }
          char v51 = v5 - 1;
          swift_bridgeObjectRetain();
          unint64_t v40 = 0;
          while (1)
          {
            unint64_t v41 = ServiceKind.rawValue.getter();
            uint64_t v43 = v42;
            if (v41 == ServiceKind.rawValue.getter() && v43 == v44) {
              break;
            }
            char v46 = sub_251F36B10();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v46) {
              goto LABEL_78;
            }
            if (v39 == ++v40)
            {
              swift_bridgeObjectRelease();
              uint64_t v5 = v59;
              uint64_t v38 = v51;
              goto LABEL_83;
            }
          }
          swift_bridgeObjectRelease_n();
LABEL_78:
          swift_bridgeObjectRelease();
          uint64_t v5 = v59;
          uint64_t v38 = v51;
          if (v31 < v40)
          {
            unint64_t v29 = v50;
            if (v59 != v54 || v51 >= v54) {
              *char v51 = *v50;
            }
            uint64_t v62 = v50;
            BOOL v48 = v55;
            unint64_t v47 = (unint64_t)v57;
            uint64_t v28 = v52;
          }
          else
          {
LABEL_83:
            uint64_t v60 = v28;
            if (v5 < v52 || v38 >= v52)
            {
              *uint64_t v38 = *v28;
              unint64_t v29 = v54;
              BOOL v48 = v55;
              unint64_t v47 = (unint64_t)v57;
            }
            else
            {
              BOOL v48 = v55;
              unint64_t v47 = (unint64_t)v57;
              unint64_t v29 = v54;
              if (v5 != v52) {
                *uint64_t v38 = *v28;
              }
            }
          }
          if (v29 <= v48) {
            break;
          }
          uint64_t v6 = v29;
          uint64_t v5 = v38;
        }
        while ((unint64_t)v28 > v47);
      }
      goto LABEL_90;
    }
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    if (__dst != __src || a2 <= __dst) {
      memmove(__dst, __src, v8);
    }
    uint64_t v53 = &v4[v8];
    uint64_t v60 = &v4[v8];
    if (v6 != v7 && v6 < v5)
    {
      if (qword_269B9C398 != -1) {
        swift_once();
      }
      unint64_t v58 = v5;
      do
      {
        uint64_t v56 = v4;
        uint64_t v10 = *((void *)off_269BA06D0 + 2);
        if (v10)
        {
          uint64_t v11 = v6;
          swift_bridgeObjectRetain();
          unint64_t v12 = 0;
          while (1)
          {
            unint64_t v13 = ServiceKind.rawValue.getter();
            uint64_t v15 = v14;
            if (v13 == ServiceKind.rawValue.getter() && v15 == v16) {
              break;
            }
            char v18 = sub_251F36B10();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v18) {
              goto LABEL_22;
            }
            if (v10 == ++v12)
            {
              swift_bridgeObjectRelease();
              unint64_t v12 = 0;
              goto LABEL_23;
            }
          }
          swift_bridgeObjectRelease_n();
LABEL_22:
          swift_bridgeObjectRelease();
LABEL_23:
          uint64_t v5 = v58;
        }
        else
        {
          uint64_t v11 = v6;
          unint64_t v12 = 0;
        }
        uint64_t v19 = *((void *)off_269BA06D0 + 2);
        if (!v19) {
          goto LABEL_40;
        }
        swift_bridgeObjectRetain();
        unint64_t v20 = 0;
        while (1)
        {
          unint64_t v21 = ServiceKind.rawValue.getter();
          uint64_t v23 = v22;
          if (v21 == ServiceKind.rawValue.getter() && v23 == v24) {
            break;
          }
          char v26 = sub_251F36B10();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v26) {
            goto LABEL_34;
          }
          if (v19 == ++v20)
          {
            swift_bridgeObjectRelease();
            uint64_t v5 = v58;
            goto LABEL_40;
          }
        }
        swift_bridgeObjectRelease_n();
LABEL_34:
        swift_bridgeObjectRelease();
        uint64_t v5 = v58;
        if (v12 < v20)
        {
          uint64_t v27 = v11 + 1;
          if (v7 < v11 || v7 >= v27 || v7 != v11) {
            *unint64_t v7 = *v11;
          }
          uint64_t v4 = v56;
        }
        else
        {
LABEL_40:
          if (v7 != v56) {
            *unint64_t v7 = *v56;
          }
          uint64_t v4 = v56 + 1;
          uint64_t v61 = v56 + 1;
          uint64_t v27 = v11;
        }
        ++v7;
        if (v4 >= v53) {
          break;
        }
        uint64_t v6 = v27;
      }
      while (v27 < v5);
      uint64_t v62 = v7;
    }
LABEL_90:
    sub_251ECD7E0(&v62, &v61, &v60);
    return 1;
  }
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

unint64_t sub_251C2DDA4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9E0);
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v26 = (uint64_t)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v25 = (uint64_t)&v21 - v12;
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v23 = v11;
  uint64_t v14 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  uint64_t v15 = 0;
  unint64_t v16 = MEMORY[0x263F8EE78];
  uint64_t v24 = a2;
  uint64_t v22 = v13;
  do
  {
    unsigned __int8 v27 = *(unsigned char *)(a1 + v15 + 32);
    sub_251C2B0CC(&v27, a2, (uint64_t)v7);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v16;
    }
    if ((*v14)(v7, 1, v8) == 1)
    {
      sub_251A1B064((uint64_t)v7, &qword_269B9C9E0);
    }
    else
    {
      uint64_t v17 = v25;
      sub_251C30CB0((uint64_t)v7, v25, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
      sub_251C30CB0(v17, v26, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v16 = sub_251F10C54(0, *(void *)(v16 + 16) + 1, 1, v16);
      }
      unint64_t v19 = *(void *)(v16 + 16);
      unint64_t v18 = *(void *)(v16 + 24);
      if (v19 >= v18 >> 1) {
        unint64_t v16 = sub_251F10C54(v18 > 1, v19 + 1, 1, v16);
      }
      *(void *)(v16 + 16) = v19 + 1;
      sub_251C30CB0(v26, v16+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v19, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
      a2 = v24;
      uint64_t v13 = v22;
    }
    ++v15;
  }
  while (v13 != v15);
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_251C2E090(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_251C2E12C(&qword_269BA0710);
  uint64_t result = sub_251C2E12C(&qword_269BA0718);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_251C2E0F8()
{
  return sub_251C2E12C(&qword_269BA0720);
}

uint64_t sub_251C2E12C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ClimateCategoryInformation();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ClimateCategoryInformation(void *a1, void *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v44 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v61 = (int *)type metadata accessor for StateSnapshot(0);
    uint64_t v7 = v61[5];
    char v63 = a2;
    uint64_t v64 = a1;
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_251F34DA0();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    uint64_t v66 = v10;
    v11(v8, v9, v10);
    uint64_t v12 = (int *)type metadata accessor for StaticHome();
    uint64_t v13 = v12[5];
    uint64_t v14 = &v8[v13];
    uint64_t v15 = &v9[v13];
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    uint64_t v17 = v12[6];
    unint64_t v18 = &v8[v17];
    unint64_t v19 = &v9[v17];
    swift_bridgeObjectRetain();
    unint64_t v20 = v11;
    unint64_t v65 = v11;
    v11(v18, v19, v10);
    uint64_t v21 = (int *)type metadata accessor for StaticRoom(0);
    uint64_t v22 = v21[5];
    uint64_t v23 = &v18[v22];
    uint64_t v24 = &v19[v22];
    uint64_t v25 = *((void *)v24 + 1);
    *(void *)uint64_t v23 = *(void *)v24;
    *((void *)v23 + 1) = v25;
    v18[v21[6]] = v19[v21[6]];
    *(void *)&v18[v21[7]] = *(void *)&v19[v21[7]];
    uint64_t v26 = v21[8];
    unsigned __int8 v27 = &v18[v26];
    uint64_t v28 = &v19[v26];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20(v27, v28, v66);
    *(void *)&v18[v21[9]] = *(void *)&v19[v21[9]];
    *(void *)&v18[v21[10]] = *(void *)&v19[v21[10]];
    *(void *)&v18[v21[11]] = *(void *)&v19[v21[11]];
    *(void *)&v18[v21[12]] = *(void *)&v19[v21[12]];
    *(void *)&v18[v21[13]] = *(void *)&v19[v21[13]];
    *(void *)&v18[v21[14]] = *(void *)&v19[v21[14]];
    *(void *)&v18[v21[15]] = *(void *)&v19[v21[15]];
    *(void *)&v18[v21[16]] = *(void *)&v19[v21[16]];
    *(void *)&v18[v21[17]] = *(void *)&v19[v21[17]];
    *(void *)&v18[v21[18]] = *(void *)&v19[v21[18]];
    uint64_t v29 = v12[7];
    uint64_t v30 = &v8[v29];
    unint64_t v31 = &v9[v29];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v65(v30, v31, v66);
    unint64_t v32 = (int *)type metadata accessor for StaticUser();
    uint64_t v33 = v32[5];
    uint64_t v34 = &v30[v33];
    uint64_t v35 = &v31[v33];
    uint64_t v36 = *((void *)v35 + 1);
    *(void *)uint64_t v34 = *(void *)v35;
    *((void *)v34 + 1) = v36;
    uint64_t v37 = v32[6];
    uint64_t v38 = &v30[v37];
    uint64_t v39 = &v31[v37];
    swift_bridgeObjectRetain();
    v65(v38, v39, v66);
    v30[v32[7]] = v31[v32[7]];
    v30[v32[8]] = v31[v32[8]];
    v8[v12[8]] = v9[v12[8]];
    v8[v12[9]] = v9[v12[9]];
    v8[v12[10]] = v9[v12[10]];
    *(void *)&v8[v12[11]] = *(void *)&v9[v12[11]];
    *(void *)&v8[v12[12]] = *(void *)&v9[v12[12]];
    *(void *)&v8[v12[13]] = *(void *)&v9[v12[13]];
    *(void *)&v8[v12[14]] = *(void *)&v9[v12[14]];
    *(void *)&v8[v12[15]] = *(void *)&v9[v12[15]];
    *(void *)&v8[v12[16]] = *(void *)&v9[v12[16]];
    v8[v12[17]] = v9[v12[17]];
    *(void *)&v8[v12[18]] = *(void *)&v9[v12[18]];
    v8[v12[19]] = v9[v12[19]];
    uint64_t v40 = v12[20];
    __dst = &v8[v40];
    unint64_t v41 = &v9[v40];
    uint64_t v42 = (int *)type metadata accessor for StaticResident();
    uint64_t v58 = *((void *)v42 - 1);
    uint64_t v59 = *(unsigned int (**)(char *, uint64_t, int *))(v58 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v59(v41, 1, v42))
    {
      uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FDA0);
      memcpy(__dst, v41, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      v65(__dst, v41, v66);
      uint64_t v45 = v42[5];
      char v46 = &__dst[v45];
      unint64_t v47 = &v41[v45];
      uint64_t v48 = *((void *)v47 + 1);
      *(void *)char v46 = *(void *)v47;
      *((void *)v46 + 1) = v48;
      uint64_t v49 = v42[6];
      uint64_t v50 = &__dst[v49];
      char v51 = &v41[v49];
      uint64_t v52 = *((void *)v51 + 1);
      *(void *)uint64_t v50 = *(void *)v51;
      *((void *)v50 + 1) = v52;
      *(void *)&__dst[v42[7]] = *(void *)&v41[v42[7]];
      *(void *)&__dst[v42[8]] = *(void *)&v41[v42[8]];
      *(_WORD *)&__dst[v42[9]] = *(_WORD *)&v41[v42[9]];
      uint64_t v53 = v42[10];
      uint64_t v54 = &__dst[v53];
      uint64_t v55 = &v41[v53];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v65(v54, v55, v66);
      (*(void (**)(char *, void, uint64_t, int *))(v58 + 56))(__dst, 0, 1, v42);
    }
    uint64_t v44 = v64;
    *(void *)((char *)v64 + v61[6]) = *(void *)((char *)v63 + v61[6]);
    *(void *)((char *)v64 + v61[7]) = *(void *)((char *)v63 + v61[7]);
    *(void *)((char *)v64 + v61[8]) = *(void *)((char *)v63 + v61[8]);
    *(void *)((char *)v64 + v61[9]) = *(void *)((char *)v63 + v61[9]);
    *(void *)((char *)v64 + v61[10]) = *(void *)((char *)v63 + v61[10]);
    *(void *)((char *)v64 + v61[11]) = *(void *)((char *)v63 + v61[11]);
    *(void *)((char *)v64 + v61[12]) = *(void *)((char *)v63 + v61[12]);
    *(void *)((char *)v64 + v61[13]) = *(void *)((char *)v63 + v61[13]);
    *(void *)((char *)v64 + v61[14]) = *(void *)((char *)v63 + v61[14]);
    *(void *)((char *)v64 + v61[15]) = *(void *)((char *)v63 + v61[15]);
    *(void *)((char *)v64 + v61[16]) = *(void *)((char *)v63 + v61[16]);
    *(void *)((char *)v64 + v61[17]) = *(void *)((char *)v63 + v61[17]);
    *(void *)((char *)v64 + v61[18]) = *(void *)((char *)v63 + v61[18]);
    *(void *)((char *)v64 + v61[19]) = *(void *)((char *)v63 + v61[19]);
    uint64_t v56 = *(int *)(a3 + 24);
    *((unsigned char *)v64 + *(int *)(a3 + 20)) = *((unsigned char *)v63 + *(int *)(a3 + 20));
    *(void *)((char *)v64 + v56) = *(void *)((char *)v63 + v56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v44;
}

uint64_t destroy for ClimateCategoryInformation(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for StateSnapshot(0) + 20);
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  v4(v2, v3);
  uint64_t v5 = (int *)type metadata accessor for StaticHome();
  swift_bridgeObjectRelease();
  uint64_t v6 = v2 + v5[6];
  v4(v6, v3);
  uint64_t v7 = type metadata accessor for StaticRoom(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4(v6 + *(int *)(v7 + 32), v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v2 + v5[7];
  v4(v8, v3);
  uint64_t v9 = type metadata accessor for StaticUser();
  swift_bridgeObjectRelease();
  v4(v8 + *(int *)(v9 + 24), v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = v2 + v5[20];
  uint64_t v11 = type metadata accessor for StaticResident();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    v4(v10, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4(v10 + *(int *)(v11 + 40), v3);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ClimateCategoryInformation(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v58 = (int *)type metadata accessor for StateSnapshot(0);
  uint64_t v5 = v58[5];
  uint64_t v60 = a2;
  uint64_t v61 = a1;
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_251F34DA0();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  uint64_t v63 = v8;
  v9(v6, v7, v8);
  uint64_t v10 = (int *)type metadata accessor for StaticHome();
  uint64_t v11 = v10[5];
  uint64_t v12 = &v6[v11];
  uint64_t v13 = &v7[v11];
  uint64_t v14 = *((void *)v13 + 1);
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = v14;
  uint64_t v15 = v10[6];
  uint64_t v16 = &v6[v15];
  uint64_t v17 = &v7[v15];
  swift_bridgeObjectRetain();
  unint64_t v18 = v9;
  uint64_t v62 = v9;
  v9(v16, v17, v8);
  unint64_t v19 = (int *)type metadata accessor for StaticRoom(0);
  uint64_t v20 = v19[5];
  uint64_t v21 = &v16[v20];
  uint64_t v22 = &v17[v20];
  uint64_t v23 = *((void *)v22 + 1);
  *(void *)uint64_t v21 = *(void *)v22;
  *((void *)v21 + 1) = v23;
  v16[v19[6]] = v17[v19[6]];
  *(void *)&v16[v19[7]] = *(void *)&v17[v19[7]];
  uint64_t v24 = v19[8];
  uint64_t v25 = &v16[v24];
  uint64_t v26 = &v17[v24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18(v25, v26, v63);
  *(void *)&v16[v19[9]] = *(void *)&v17[v19[9]];
  *(void *)&v16[v19[10]] = *(void *)&v17[v19[10]];
  *(void *)&v16[v19[11]] = *(void *)&v17[v19[11]];
  *(void *)&v16[v19[12]] = *(void *)&v17[v19[12]];
  *(void *)&v16[v19[13]] = *(void *)&v17[v19[13]];
  *(void *)&v16[v19[14]] = *(void *)&v17[v19[14]];
  *(void *)&v16[v19[15]] = *(void *)&v17[v19[15]];
  *(void *)&v16[v19[16]] = *(void *)&v17[v19[16]];
  *(void *)&v16[v19[17]] = *(void *)&v17[v19[17]];
  *(void *)&v16[v19[18]] = *(void *)&v17[v19[18]];
  uint64_t v27 = v10[7];
  uint64_t v28 = &v6[v27];
  uint64_t v29 = &v7[v27];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v62(v28, v29, v63);
  uint64_t v30 = (int *)type metadata accessor for StaticUser();
  uint64_t v31 = v30[5];
  unint64_t v32 = &v28[v31];
  uint64_t v33 = &v29[v31];
  uint64_t v34 = *((void *)v33 + 1);
  *(void *)unint64_t v32 = *(void *)v33;
  *((void *)v32 + 1) = v34;
  uint64_t v35 = v30[6];
  uint64_t v36 = &v28[v35];
  uint64_t v37 = &v29[v35];
  swift_bridgeObjectRetain();
  v62(v36, v37, v63);
  v28[v30[7]] = v29[v30[7]];
  v28[v30[8]] = v29[v30[8]];
  v6[v10[8]] = v7[v10[8]];
  v6[v10[9]] = v7[v10[9]];
  v6[v10[10]] = v7[v10[10]];
  *(void *)&v6[v10[11]] = *(void *)&v7[v10[11]];
  *(void *)&v6[v10[12]] = *(void *)&v7[v10[12]];
  *(void *)&v6[v10[13]] = *(void *)&v7[v10[13]];
  *(void *)&v6[v10[14]] = *(void *)&v7[v10[14]];
  *(void *)&v6[v10[15]] = *(void *)&v7[v10[15]];
  *(void *)&v6[v10[16]] = *(void *)&v7[v10[16]];
  v6[v10[17]] = v7[v10[17]];
  *(void *)&v6[v10[18]] = *(void *)&v7[v10[18]];
  v6[v10[19]] = v7[v10[19]];
  uint64_t v38 = v10[20];
  __dst = &v6[v38];
  uint64_t v39 = &v7[v38];
  uint64_t v40 = (int *)type metadata accessor for StaticResident();
  uint64_t v55 = *((void *)v40 - 1);
  uint64_t v56 = *(unsigned int (**)(char *, uint64_t, int *))(v55 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v56(v39, 1, v40))
  {
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FDA0);
    memcpy(__dst, v39, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    v62(__dst, v39, v63);
    uint64_t v42 = v40[5];
    uint64_t v43 = &__dst[v42];
    uint64_t v44 = &v39[v42];
    uint64_t v45 = *((void *)v44 + 1);
    *(void *)uint64_t v43 = *(void *)v44;
    *((void *)v43 + 1) = v45;
    uint64_t v46 = v40[6];
    unint64_t v47 = &__dst[v46];
    uint64_t v48 = &v39[v46];
    uint64_t v49 = *((void *)v48 + 1);
    *(void *)unint64_t v47 = *(void *)v48;
    *((void *)v47 + 1) = v49;
    *(void *)&__dst[v40[7]] = *(void *)&v39[v40[7]];
    *(void *)&__dst[v40[8]] = *(void *)&v39[v40[8]];
    *(_WORD *)&__dst[v40[9]] = *(_WORD *)&v39[v40[9]];
    uint64_t v50 = v40[10];
    char v51 = &__dst[v50];
    uint64_t v52 = &v39[v50];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v62(v51, v52, v63);
    (*(void (**)(char *, void, uint64_t, int *))(v55 + 56))(__dst, 0, 1, v40);
  }
  *(void *)((char *)v61 + v58[6]) = *(void *)((char *)v60 + v58[6]);
  *(void *)((char *)v61 + v58[7]) = *(void *)((char *)v60 + v58[7]);
  *(void *)((char *)v61 + v58[8]) = *(void *)((char *)v60 + v58[8]);
  *(void *)((char *)v61 + v58[9]) = *(void *)((char *)v60 + v58[9]);
  *(void *)((char *)v61 + v58[10]) = *(void *)((char *)v60 + v58[10]);
  *(void *)((char *)v61 + v58[11]) = *(void *)((char *)v60 + v58[11]);
  *(void *)((char *)v61 + v58[12]) = *(void *)((char *)v60 + v58[12]);
  *(void *)((char *)v61 + v58[13]) = *(void *)((char *)v60 + v58[13]);
  *(void *)((char *)v61 + v58[14]) = *(void *)((char *)v60 + v58[14]);
  *(void *)((char *)v61 + v58[15]) = *(void *)((char *)v60 + v58[15]);
  *(void *)((char *)v61 + v58[16]) = *(void *)((char *)v60 + v58[16]);
  *(void *)((char *)v61 + v58[17]) = *(void *)((char *)v60 + v58[17]);
  *(void *)((char *)v61 + v58[18]) = *(void *)((char *)v60 + v58[18]);
  *(void *)((char *)v61 + v58[19]) = *(void *)((char *)v60 + v58[19]);
  uint64_t v53 = *(int *)(a3 + 24);
  *((unsigned char *)v61 + *(int *)(a3 + 20)) = *((unsigned char *)v60 + *(int *)(a3 + 20));
  *(void *)((char *)v61 + v53) = *(void *)((char *)v60 + v53);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v61;
}

void *assignWithCopy for ClimateCategoryInformation(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v56 = (int *)type metadata accessor for StateSnapshot(0);
  uint64_t v5 = v56[5];
  uint64_t v55 = a1;
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_251F34DA0();
  uint64_t v53 = *(void *)(v8 - 8);
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v53 + 24);
  v9(v6, v7, v8);
  uint64_t v10 = (int *)type metadata accessor for StaticHome();
  uint64_t v11 = v10[5];
  uint64_t v12 = &v6[v11];
  uint64_t v13 = &v7[v11];
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = v10[6];
  uint64_t v15 = &v6[v14];
  uint64_t v16 = &v7[v14];
  v9(&v6[v14], &v7[v14], v8);
  uint64_t v17 = v9;
  unint64_t v18 = (int *)type metadata accessor for StaticRoom(0);
  uint64_t v19 = v18[5];
  uint64_t v20 = &v15[v19];
  uint64_t v21 = &v16[v19];
  *(void *)uint64_t v20 = *(void *)v21;
  *((void *)v20 + 1) = *((void *)v21 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[v18[6]] = v16[v18[6]];
  *(void *)&v15[v18[7]] = *(void *)&v16[v18[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17(&v15[v18[8]], &v16[v18[8]], v8);
  *(void *)&v15[v18[9]] = *(void *)&v16[v18[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[10]] = *(void *)&v16[v18[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[11]] = *(void *)&v16[v18[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[12]] = *(void *)&v16[v18[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[13]] = *(void *)&v16[v18[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[14]] = *(void *)&v16[v18[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[15]] = *(void *)&v16[v18[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[16]] = *(void *)&v16[v18[16]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[17]] = *(void *)&v16[v18[17]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[18]] = *(void *)&v16[v18[18]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = v10[7];
  uint64_t v23 = &v6[v22];
  uint64_t v24 = &v7[v22];
  v17(&v6[v22], &v7[v22], v8);
  uint64_t v25 = (int *)type metadata accessor for StaticUser();
  uint64_t v26 = v25[5];
  uint64_t v27 = &v23[v26];
  uint64_t v28 = &v24[v26];
  *(void *)uint64_t v27 = *(void *)v28;
  *((void *)v27 + 1) = *((void *)v28 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17(&v23[v25[6]], &v24[v25[6]], v8);
  v23[v25[7]] = v24[v25[7]];
  v23[v25[8]] = v24[v25[8]];
  v6[v10[8]] = v7[v10[8]];
  v6[v10[9]] = v7[v10[9]];
  v6[v10[10]] = v7[v10[10]];
  *(void *)&v6[v10[11]] = *(void *)&v7[v10[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[12]] = *(void *)&v7[v10[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[13]] = *(void *)&v7[v10[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[14]] = *(void *)&v7[v10[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[15]] = *(void *)&v7[v10[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[16]] = *(void *)&v7[v10[16]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6[v10[17]] = v7[v10[17]];
  *(void *)&v6[v10[18]] = *(void *)&v7[v10[18]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6[v10[19]] = v7[v10[19]];
  uint64_t v29 = v10[20];
  uint64_t v30 = &v6[v29];
  uint64_t v31 = &v7[v29];
  unint64_t v32 = (int *)type metadata accessor for StaticResident();
  uint64_t v33 = *((void *)v32 - 1);
  uint64_t v34 = *(uint64_t (**)(char *, uint64_t, int *))(v33 + 48);
  LODWORD(v23) = v34(v30, 1, v32);
  int v35 = v34(v31, 1, v32);
  if (!v23)
  {
    if (!v35)
    {
      v17(v30, v31, v8);
      uint64_t v47 = v32[5];
      uint64_t v48 = &v30[v47];
      uint64_t v49 = &v31[v47];
      *(void *)uint64_t v48 = *(void *)v49;
      *((void *)v48 + 1) = *((void *)v49 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v50 = v32[6];
      char v51 = &v30[v50];
      uint64_t v52 = &v31[v50];
      *(void *)char v51 = *(void *)v52;
      *((void *)v51 + 1) = *((void *)v52 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v30[v32[7]] = *(void *)&v31[v32[7]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v30[v32[8]] = *(void *)&v31[v32[8]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_WORD *)&v30[v32[9]] = *(_WORD *)&v31[v32[9]];
      v17(&v30[v32[10]], &v31[v32[10]], v8);
      goto LABEL_7;
    }
    sub_251C30D18((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for StaticResident);
    goto LABEL_6;
  }
  if (v35)
  {
LABEL_6:
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FDA0);
    memcpy(v30, v31, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
  v36(v30, v31, v8);
  uint64_t v37 = v32[5];
  uint64_t v38 = &v30[v37];
  uint64_t v39 = &v31[v37];
  *(void *)uint64_t v38 = *(void *)v39;
  *((void *)v38 + 1) = *((void *)v39 + 1);
  uint64_t v40 = v32[6];
  uint64_t v41 = &v30[v40];
  uint64_t v42 = &v31[v40];
  *(void *)uint64_t v41 = *(void *)v42;
  *((void *)v41 + 1) = *((void *)v42 + 1);
  *(void *)&v30[v32[7]] = *(void *)&v31[v32[7]];
  *(void *)&v30[v32[8]] = *(void *)&v31[v32[8]];
  *(_WORD *)&v30[v32[9]] = *(_WORD *)&v31[v32[9]];
  uint64_t v43 = v32[10];
  uint64_t v54 = &v30[v43];
  uint64_t v44 = &v31[v43];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v36(v54, v44, v8);
  (*(void (**)(char *, void, uint64_t, int *))(v33 + 56))(v30, 0, 1, v32);
LABEL_7:
  *(void *)((char *)v55 + v56[6]) = *(void *)((char *)a2 + v56[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[7]) = *(void *)((char *)a2 + v56[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[8]) = *(void *)((char *)a2 + v56[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[9]) = *(void *)((char *)a2 + v56[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[10]) = *(void *)((char *)a2 + v56[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[11]) = *(void *)((char *)a2 + v56[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[12]) = *(void *)((char *)a2 + v56[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[13]) = *(void *)((char *)a2 + v56[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[14]) = *(void *)((char *)a2 + v56[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[15]) = *(void *)((char *)a2 + v56[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[16]) = *(void *)((char *)a2 + v56[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[17]) = *(void *)((char *)a2 + v56[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[18]) = *(void *)((char *)a2 + v56[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[19]) = *(void *)((char *)a2 + v56[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)v55 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  *(void *)((char *)v55 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v55;
}

void *initializeWithTake for ClimateCategoryInformation(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v27 = (int *)type metadata accessor for StateSnapshot(0);
  uint64_t v4 = v27[5];
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_251F34DA0();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32);
  v8(v5, v6, v7);
  uint64_t v9 = (int *)type metadata accessor for StaticHome();
  *(_OWORD *)&v5[v9[5]] = *(_OWORD *)&v6[v9[5]];
  uint64_t v10 = v9[6];
  uint64_t v11 = &v5[v10];
  uint64_t v12 = &v6[v10];
  v8(&v5[v10], &v6[v10], v7);
  uint64_t v13 = (int *)type metadata accessor for StaticRoom(0);
  *(_OWORD *)&v11[v13[5]] = *(_OWORD *)&v12[v13[5]];
  v11[v13[6]] = v12[v13[6]];
  *(void *)&v11[v13[7]] = *(void *)&v12[v13[7]];
  v8(&v11[v13[8]], &v12[v13[8]], v7);
  *(void *)&v11[v13[9]] = *(void *)&v12[v13[9]];
  *(void *)&v11[v13[10]] = *(void *)&v12[v13[10]];
  *(void *)&v11[v13[11]] = *(void *)&v12[v13[11]];
  *(void *)&v11[v13[12]] = *(void *)&v12[v13[12]];
  *(void *)&v11[v13[13]] = *(void *)&v12[v13[13]];
  *(void *)&v11[v13[14]] = *(void *)&v12[v13[14]];
  *(void *)&v11[v13[15]] = *(void *)&v12[v13[15]];
  *(void *)&v11[v13[16]] = *(void *)&v12[v13[16]];
  *(void *)&v11[v13[17]] = *(void *)&v12[v13[17]];
  *(void *)&v11[v13[18]] = *(void *)&v12[v13[18]];
  uint64_t v14 = v9[7];
  uint64_t v15 = &v5[v14];
  uint64_t v16 = &v6[v14];
  v8(&v5[v14], &v6[v14], v7);
  uint64_t v17 = (int *)type metadata accessor for StaticUser();
  *(_OWORD *)&v15[v17[5]] = *(_OWORD *)&v16[v17[5]];
  v8(&v15[v17[6]], &v16[v17[6]], v7);
  v15[v17[7]] = v16[v17[7]];
  v15[v17[8]] = v16[v17[8]];
  v5[v9[8]] = v6[v9[8]];
  v5[v9[9]] = v6[v9[9]];
  v5[v9[10]] = v6[v9[10]];
  *(void *)&v5[v9[11]] = *(void *)&v6[v9[11]];
  *(void *)&v5[v9[12]] = *(void *)&v6[v9[12]];
  *(void *)&v5[v9[13]] = *(void *)&v6[v9[13]];
  *(void *)&v5[v9[14]] = *(void *)&v6[v9[14]];
  *(void *)&v5[v9[15]] = *(void *)&v6[v9[15]];
  *(void *)&v5[v9[16]] = *(void *)&v6[v9[16]];
  v5[v9[17]] = v6[v9[17]];
  *(void *)&v5[v9[18]] = *(void *)&v6[v9[18]];
  v5[v9[19]] = v6[v9[19]];
  uint64_t v18 = v9[20];
  uint64_t v19 = &v5[v18];
  uint64_t v20 = &v6[v18];
  uint64_t v21 = (int *)type metadata accessor for StaticResident();
  uint64_t v22 = *((void *)v21 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FDA0);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    v8(v19, v20, v7);
    *(_OWORD *)&v19[v21[5]] = *(_OWORD *)&v20[v21[5]];
    *(_OWORD *)&v19[v21[6]] = *(_OWORD *)&v20[v21[6]];
    *(void *)&v19[v21[7]] = *(void *)&v20[v21[7]];
    *(void *)&v19[v21[8]] = *(void *)&v20[v21[8]];
    *(_WORD *)&v19[v21[9]] = *(_WORD *)&v20[v21[9]];
    v8(&v19[v21[10]], &v20[v21[10]], v7);
    (*(void (**)(char *, void, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
  }
  *(void *)((char *)a1 + v27[6]) = *(void *)((char *)a2 + v27[6]);
  *(void *)((char *)a1 + v27[7]) = *(void *)((char *)a2 + v27[7]);
  *(void *)((char *)a1 + v27[8]) = *(void *)((char *)a2 + v27[8]);
  *(void *)((char *)a1 + v27[9]) = *(void *)((char *)a2 + v27[9]);
  *(void *)((char *)a1 + v27[10]) = *(void *)((char *)a2 + v27[10]);
  *(void *)((char *)a1 + v27[11]) = *(void *)((char *)a2 + v27[11]);
  *(void *)((char *)a1 + v27[12]) = *(void *)((char *)a2 + v27[12]);
  *(void *)((char *)a1 + v27[13]) = *(void *)((char *)a2 + v27[13]);
  *(void *)((char *)a1 + v27[14]) = *(void *)((char *)a2 + v27[14]);
  *(void *)((char *)a1 + v27[15]) = *(void *)((char *)a2 + v27[15]);
  *(void *)((char *)a1 + v27[16]) = *(void *)((char *)a2 + v27[16]);
  *(void *)((char *)a1 + v27[17]) = *(void *)((char *)a2 + v27[17]);
  *(void *)((char *)a1 + v27[18]) = *(void *)((char *)a2 + v27[18]);
  *(void *)((char *)a1 + v27[19]) = *(void *)((char *)a2 + v27[19]);
  uint64_t v24 = *(int *)(a3 + 24);
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  *(void *)((char *)a1 + v24) = *(void *)((char *)a2 + v24);
  return a1;
}

void *assignWithTake for ClimateCategoryInformation(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  unint64_t v57 = a2;
  uint64_t v58 = (int *)type metadata accessor for StateSnapshot(0);
  uint64_t v5 = v58[5];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_251F34DA0();
  uint64_t v55 = *(void *)(v8 - 8);
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v55 + 40);
  v9(v6, v7, v8);
  uint64_t v10 = (int *)type metadata accessor for StaticHome();
  uint64_t v11 = v10[5];
  uint64_t v12 = &v6[v11];
  uint64_t v13 = &v7[v11];
  uint64_t v15 = *(void *)v13;
  uint64_t v14 = *((void *)v13 + 1);
  *(void *)uint64_t v12 = v15;
  *((void *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = v10[6];
  uint64_t v17 = &v6[v16];
  uint64_t v18 = &v7[v16];
  v9(&v6[v16], &v7[v16], v8);
  uint64_t v19 = (int *)type metadata accessor for StaticRoom(0);
  uint64_t v20 = v19[5];
  uint64_t v21 = &v17[v20];
  uint64_t v22 = &v18[v20];
  uint64_t v24 = *(void *)v22;
  uint64_t v23 = *((void *)v22 + 1);
  *(void *)uint64_t v21 = v24;
  *((void *)v21 + 1) = v23;
  swift_bridgeObjectRelease();
  v17[v19[6]] = v18[v19[6]];
  *(void *)&v17[v19[7]] = *(void *)&v18[v19[7]];
  swift_bridgeObjectRelease();
  v9(&v17[v19[8]], &v18[v19[8]], v8);
  *(void *)&v17[v19[9]] = *(void *)&v18[v19[9]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[10]] = *(void *)&v18[v19[10]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[11]] = *(void *)&v18[v19[11]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[12]] = *(void *)&v18[v19[12]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[13]] = *(void *)&v18[v19[13]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[14]] = *(void *)&v18[v19[14]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[15]] = *(void *)&v18[v19[15]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[16]] = *(void *)&v18[v19[16]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[17]] = *(void *)&v18[v19[17]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[18]] = *(void *)&v18[v19[18]];
  swift_bridgeObjectRelease();
  uint64_t v25 = v10[7];
  uint64_t v26 = &v6[v25];
  uint64_t v27 = &v7[v25];
  v9(&v6[v25], &v7[v25], v8);
  uint64_t v28 = (int *)type metadata accessor for StaticUser();
  uint64_t v29 = v28[5];
  uint64_t v30 = &v26[v29];
  uint64_t v31 = &v27[v29];
  uint64_t v33 = *(void *)v31;
  uint64_t v32 = *((void *)v31 + 1);
  *(void *)uint64_t v30 = v33;
  *((void *)v30 + 1) = v32;
  swift_bridgeObjectRelease();
  uint64_t v56 = v8;
  v9(&v26[v28[6]], &v27[v28[6]], v8);
  v26[v28[7]] = v27[v28[7]];
  v26[v28[8]] = v27[v28[8]];
  v6[v10[8]] = v7[v10[8]];
  v6[v10[9]] = v7[v10[9]];
  v6[v10[10]] = v7[v10[10]];
  *(void *)&v6[v10[11]] = *(void *)&v7[v10[11]];
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[12]] = *(void *)&v7[v10[12]];
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[13]] = *(void *)&v7[v10[13]];
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[14]] = *(void *)&v7[v10[14]];
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[15]] = *(void *)&v7[v10[15]];
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[16]] = *(void *)&v7[v10[16]];
  swift_bridgeObjectRelease();
  v6[v10[17]] = v7[v10[17]];
  *(void *)&v6[v10[18]] = *(void *)&v7[v10[18]];
  swift_bridgeObjectRelease();
  v6[v10[19]] = v7[v10[19]];
  uint64_t v34 = v10[20];
  int v35 = &v6[v34];
  uint64_t v36 = &v7[v34];
  uint64_t v37 = (int *)type metadata accessor for StaticResident();
  uint64_t v38 = *((void *)v37 - 1);
  uint64_t v39 = *(uint64_t (**)(char *, uint64_t, int *))(v38 + 48);
  LODWORD(v26) = v39(v35, 1, v37);
  int v40 = v39(v36, 1, v37);
  if (!v26)
  {
    if (!v40)
    {
      v9(v35, v36, v56);
      uint64_t v45 = v37[5];
      uint64_t v46 = &v35[v45];
      uint64_t v47 = &v36[v45];
      uint64_t v49 = *(void *)v47;
      uint64_t v48 = *((void *)v47 + 1);
      *(void *)uint64_t v46 = v49;
      *((void *)v46 + 1) = v48;
      swift_bridgeObjectRelease();
      uint64_t v50 = v37[6];
      char v51 = &v35[v50];
      uint64_t v52 = &v36[v50];
      uint64_t v54 = *(void *)v52;
      uint64_t v53 = *((void *)v52 + 1);
      *(void *)char v51 = v54;
      *((void *)v51 + 1) = v53;
      swift_bridgeObjectRelease();
      *(void *)&v35[v37[7]] = *(void *)&v36[v37[7]];
      swift_bridgeObjectRelease();
      *(void *)&v35[v37[8]] = *(void *)&v36[v37[8]];
      swift_bridgeObjectRelease();
      *(_WORD *)&v35[v37[9]] = *(_WORD *)&v36[v37[9]];
      v9(&v35[v37[10]], &v36[v37[10]], v56);
      goto LABEL_7;
    }
    sub_251C30D18((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for StaticResident);
    goto LABEL_6;
  }
  if (v40)
  {
LABEL_6:
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FDA0);
    memcpy(v35, v36, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v55 + 32);
  v41(v35, v36, v56);
  *(_OWORD *)&v35[v37[5]] = *(_OWORD *)&v36[v37[5]];
  *(_OWORD *)&v35[v37[6]] = *(_OWORD *)&v36[v37[6]];
  *(void *)&v35[v37[7]] = *(void *)&v36[v37[7]];
  *(void *)&v35[v37[8]] = *(void *)&v36[v37[8]];
  *(_WORD *)&v35[v37[9]] = *(_WORD *)&v36[v37[9]];
  v41(&v35[v37[10]], &v36[v37[10]], v56);
  (*(void (**)(char *, void, uint64_t, int *))(v38 + 56))(v35, 0, 1, v37);
LABEL_7:
  *(void *)((char *)a1 + v58[6]) = *(void *)((char *)v57 + v58[6]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[7]) = *(void *)((char *)v57 + v58[7]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[8]) = *(void *)((char *)v57 + v58[8]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[9]) = *(void *)((char *)v57 + v58[9]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[10]) = *(void *)((char *)v57 + v58[10]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[11]) = *(void *)((char *)v57 + v58[11]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[12]) = *(void *)((char *)v57 + v58[12]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[13]) = *(void *)((char *)v57 + v58[13]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[14]) = *(void *)((char *)v57 + v58[14]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[15]) = *(void *)((char *)v57 + v58[15]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[16]) = *(void *)((char *)v57 + v58[16]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[17]) = *(void *)((char *)v57 + v58[17]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[18]) = *(void *)((char *)v57 + v58[18]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[19]) = *(void *)((char *)v57 + v58[19]);
  swift_bridgeObjectRelease();
  uint64_t v43 = *(int *)(a3 + 24);
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)v57 + *(int *)(a3 + 20));
  *(void *)((char *)a1 + v43) = *(void *)((char *)v57 + v43);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClimateCategoryInformation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251C306D0);
}

uint64_t sub_251C306D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for StateSnapshot(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ClimateCategoryInformation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251C307A4);
}

uint64_t sub_251C307A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for StateSnapshot(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_251C30860()
{
  uint64_t result = type metadata accessor for StateSnapshot(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_251C30904@<X0>(uint64_t *a1@<X8>)
{
  return sub_251EEB660(*(void *)(v1 + 16), a1);
}

BOOL sub_251C3090C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticService();
  LOBYTE(v13) = *(unsigned char *)(a1 + *(int *)(v2 + 88));
  if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v3 == 0x8000000251F65220)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v4 = sub_251F36B10();
    swift_bridgeObjectRelease();
    BOOL result = 0;
    if ((v4 & 1) == 0) {
      return result;
    }
  }
  uint64_t v13 = *(void *)(a1 + *(int *)(v2 + 112));
  uint64_t v6 = v13;
  char v12 = 40;
  Swift::Int_optional v14 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v12);
  Swift::Int value = v14.value;
  Swift::Bool is_nil = v14.is_nil;
  uint64_t v13 = v6;
  char v12 = -98;
  Swift::Int_optional v15 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v12);
  BOOL v9 = v15.is_nil;
  BOOL v11 = !v15.is_nil && value == v15.value;
  if (!is_nil) {
    BOOL v9 = v11;
  }
  return !v9;
}

BOOL sub_251C30A20(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticService();
  LOBYTE(v13) = *(unsigned char *)(a1 + *(int *)(v2 + 88));
  if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v3 == 0x8000000251F64B00)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v4 = sub_251F36B10();
    swift_bridgeObjectRelease();
    BOOL result = 0;
    if ((v4 & 1) == 0) {
      return result;
    }
  }
  uint64_t v13 = *(void *)(a1 + *(int *)(v2 + 112));
  uint64_t v6 = v13;
  char v12 = 40;
  Swift::Int_optional v14 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v12);
  Swift::Int value = v14.value;
  Swift::Bool is_nil = v14.is_nil;
  uint64_t v13 = v6;
  char v12 = -98;
  Swift::Int_optional v15 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v12);
  BOOL v9 = v15.is_nil;
  BOOL v11 = !v15.is_nil && value == v15.value;
  if (!is_nil) {
    BOOL v9 = v11;
  }
  return !v9;
}

BOOL sub_251C30B34(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticService();
  LOBYTE(v13) = *(unsigned char *)(a1 + *(int *)(v2 + 88));
  if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v3 == 0x8000000251F651F0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v4 = sub_251F36B10();
    swift_bridgeObjectRelease();
    BOOL result = 0;
    if ((v4 & 1) == 0) {
      return result;
    }
  }
  uint64_t v13 = *(void *)(a1 + *(int *)(v2 + 112));
  uint64_t v6 = v13;
  char v12 = 40;
  Swift::Int_optional v14 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v12);
  Swift::Int value = v14.value;
  Swift::Bool is_nil = v14.is_nil;
  uint64_t v13 = v6;
  char v12 = -98;
  Swift::Int_optional v15 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v12);
  BOOL v9 = v15.is_nil;
  BOOL v11 = !v15.is_nil && value == v15.value;
  if (!is_nil) {
    BOOL v9 = v11;
  }
  return !v9;
}

uint64_t sub_251C30C48(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251C30CB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251C30D18(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t WeakCollection.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  if (*(void *)(a1 + 24))
  {
    sub_251A1A4EC(a1, (uint64_t)&v16);
    if (*((void *)&v17 + 1))
    {
LABEL_3:
      sub_251A1A444(&v16, (uint64_t)v19);
      uint64_t v6 = v20;
      uint64_t v7 = v21;
      uint64_t v8 = __swift_project_boxed_opaque_existential_1(v19, v20);
      MEMORY[0x270FA5388](v8);
      v15[2] = a2;
      uint64_t v9 = type metadata accessor for Weak();
      uint64_t v11 = sub_251AF11FC((void (*)(char *, char *))sub_251C31C44, (uint64_t)v15, v6, v9, MEMORY[0x263F8E628], v7, MEMORY[0x263F8E658], v10);
      if (*(void *)(a1 + 24)) {
        __swift_destroy_boxed_opaque_existential_0(a1);
      }
      char v12 = v19;
      goto LABEL_9;
    }
  }
  else
  {
    long long v13 = *(_OWORD *)(a1 + 16);
    long long v16 = *(_OWORD *)a1;
    long long v17 = v13;
    uint64_t v18 = *(void *)(a1 + 32);
    if (*((void *)&v13 + 1)) {
      goto LABEL_3;
    }
  }
  type metadata accessor for Weak();
  uint64_t result = sub_251F35B40();
  uint64_t v11 = result;
  if (*(void *)(a1 + 24))
  {
    char v12 = (void *)a1;
LABEL_9:
    uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  }
  *a3 = v11;
  return result;
}

uint64_t WeakCollection.append(_:)()
{
  return sub_251F35BA0();
}

Swift::Void __swiftcall WeakCollection.removeAll()()
{
  type metadata accessor for Weak();
  uint64_t v0 = sub_251F35BD0();
  MEMORY[0x270F9DCC8](0, v0);
}

uint64_t WeakCollection.objects()(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = sub_251F34E80();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_251F34E70();
  uint64_t v20 = v4;
  uint64_t v9 = *(void *)(a1 + 16);
  type metadata accessor for Weak();
  uint64_t v10 = sub_251F35BD0();
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x2533AA860](&v21, v10, WitnessTable);
  uint64_t v20 = v21;
  uint64_t v19 = v8;
  uint64_t v15 = v9;
  long long v16 = sub_251C31CE4;
  long long v17 = &v18;
  sub_251F366A0();
  swift_getWitnessTable();
  uint64_t v12 = sub_251F35910();
  swift_bridgeObjectRelease();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_251F35F40();
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  return v12;
}

uint64_t WeakDictionary.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  if (a1)
  {
    MEMORY[0x270FA5388](a1);
    type metadata accessor for Weak();
    uint64_t v3 = sub_251F355B0();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for Weak();
    swift_getTupleTypeMetadata2();
    sub_251F35B40();
    uint64_t result = sub_251F35580();
    uint64_t v3 = result;
  }
  *a2 = v3;
  return result;
}

uint64_t WeakDictionary.set(value:key:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (MEMORY[0x270FA5388](a1))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
    type metadata accessor for Weak();
    v8[1] = sub_251C31C98();
    sub_251F355D0();
    return sub_251F355F0();
  }
  else
  {
    type metadata accessor for Weak();
    sub_251F355D0();
    sub_251F35570();
    return swift_release();
  }
}

uint64_t WeakDictionary.removeValue(forKey:)()
{
  return swift_release();
}

Swift::Void __swiftcall WeakDictionary.removeAll()()
{
  type metadata accessor for Weak();
  uint64_t v0 = sub_251F355D0();
  MEMORY[0x270F9D1C8](0, v0);
}

uint64_t WeakDictionary.dictionary()()
{
  swift_bridgeObjectRetain();
  swift_getTupleTypeMetadata2();
  sub_251F35B40();
  sub_251F35580();
  type metadata accessor for Weak();
  sub_251F355D0();
  sub_251F355D0();
  swift_getWitnessTable();
  sub_251F35950();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_251C31620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v25[4] = a6;
  v25[1] = a3;
  v25[2] = a5;
  v25[3] = a1;
  v25[0] = type metadata accessor for Weak();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v9 = MEMORY[0x270FA5388](TupleTypeMetadata2 - 8);
  uint64_t v11 = (char *)v25 - v10;
  uint64_t v12 = *(void *)(a4 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v9);
  uint64_t v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  char v18 = (char *)v25 - v17;
  uint64_t v19 = *(int *)(v16 + 56);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v20(v11, a2, a4);
  uint64_t v21 = *(void *)(a2 + v19);
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v18, v11, a4);
  uint64_t v22 = MEMORY[0x2533AC870](v21 + 16);
  if (v22)
  {
    uint64_t v23 = v22;
    v20(v15, (uint64_t)v18, a4);
    v25[7] = v23;
    sub_251F355D0();
    sub_251F355F0();
  }
  else
  {
    sub_251F355D0();
    sub_251F35570();
    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v18, a4);
}

uint64_t WeakDictionary.subscript.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = type metadata accessor for Weak();
  MEMORY[0x2533AA520](&v10, a1, v5, v6, v7, *(void *)(a2 + 32));
  if (!v10) {
    return 0;
  }
  uint64_t v8 = MEMORY[0x2533AC870](v10 + 16);
  swift_release();
  return v8;
}

uint64_t sub_251C318D8@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for WeakDictionary();
  uint64_t result = WeakDictionary.subscript.getter(a1, v4);
  *a2 = result;
  return result;
}

uint64_t sub_251C3193C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for WeakDictionary();
  uint64_t v5 = swift_unknownObjectRetain();
  j___s13HomeDataModel14WeakDictionaryV3set5value3keyyq_Sg_xtF(v5, a3, v4);
  return swift_unknownObjectRelease();
}

uint64_t WeakDictionary.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  j___s13HomeDataModel14WeakDictionaryV3set5value3keyyq_Sg_xtF(a1, a2, a3);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 8))(a2);
  return swift_unknownObjectRelease();
}

void (*WeakDictionary.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v7 = malloc(0x30uLL);
  *a1 = v7;
  v7[1] = a3;
  v7[2] = v3;
  uint64_t v8 = *(void *)(a3 + 16);
  v7[3] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = v9;
  v7[4] = v9;
  v7[5] = malloc(*(void *)(v9 + 64));
  (*(void (**)(void))(v10 + 16))();
  *uint64_t v7 = WeakDictionary.subscript.getter(a2, a3);
  return sub_251C31B28;
}

void sub_251C31B28(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = (*a1)[4];
  uint64_t v3 = (void *)(*a1)[5];
  uint64_t v5 = (*a1)[3];
  uint64_t v6 = (*a1)[1];
  uint64_t v7 = **a1;
  if (a2)
  {
    uint64_t v8 = swift_unknownObjectRetain();
    WeakDictionary.set(value:key:)(v8, (uint64_t)v3, v6);
    (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v5);
    swift_unknownObjectRelease();
  }
  else
  {
    WeakDictionary.set(value:key:)(v7, (uint64_t)v3, v6);
    (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v5);
  }
  swift_unknownObjectRelease();
  free(v3);
  free(v2);
}

uint64_t sub_251C31BF4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Weak()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_251C31C44@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for Weak();
  uint64_t result = sub_251C31C98();
  *a1 = result;
  return result;
}

uint64_t sub_251C31C98()
{
  uint64_t v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  return v0;
}

uint64_t sub_251C31CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = MEMORY[0x2533AC870](a2 + 16);
  if (!v2) {
    sub_251F34E60();
  }
  return v2;
}

uint64_t sub_251C31D2C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 24))(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_251C31D74@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for Weak();
  uint64_t result = sub_251C31C98();
  *a1 = result;
  return result;
}

uint64_t sub_251C31DC8(uint64_t a1, uint64_t a2)
{
  return sub_251C31620(a1, a2, v2[5], v2[2], v2[3], v2[4]);
}

uint64_t sub_251C31DF4()
{
  return 24;
}

__n128 sub_251C31E00(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_251C31E14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

uint64_t type metadata accessor for WeakCollection()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for WeakDictionary()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_251C31E4C()
{
  return swift_initClassMetadata2();
}

uint64_t ActionCommand.accessoryID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t ActionCommand.nodeID.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ActionCommand(0) + 20));
}

uint64_t type metadata accessor for ActionCommand(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269BA08E8);
}

uint64_t ActionCommand.endpointID.getter()
{
  return *(unsigned __int16 *)(v0 + *(int *)(type metadata accessor for ActionCommand(0) + 24));
}

uint64_t ActionCommand.matterCommand.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ActionCommand(0);
  return sub_251A1A4EC(v1 + *(int *)(v3 + 28), a1);
}

uint64_t ActionCommand.init(accessoryID:nodeID:endpointID:matterCommand:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int16 a3@<W2>, long long *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(a5, a1, v10);
  uint64_t v11 = (int *)type metadata accessor for ActionCommand(0);
  *(void *)(a5 + v11[5]) = a2;
  *(_WORD *)(a5 + v11[6]) = a3;
  uint64_t v12 = a5 + v11[7];
  return sub_251A1A444(a4, v12);
}

void ActionCommand.init(command:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(a1, sel_accessory);
  uint64_t v4 = sub_251F35F60();
  char v6 = v5;

  if ((v6 & 1) != 0
    || (id v7 = objc_msgSend(a1, sel_clusterID),
        Swift::UInt32 v8 = objc_msgSend(v7, sel_unsignedIntValue),
        v7,
        ClusterKind.init(rawValue:)(v8),
        LOBYTE(v32[0]) == 28)
    || (id v9 = objc_msgSend(a1, sel_expectedValues)) == 0)
  {
    type metadata accessor for ActionCommand.Error(0);
    sub_251C336F4((unint64_t *)&qword_269BA08B8, (void (*)(uint64_t))type metadata accessor for ActionCommand.Error);
    swift_allocError();
    *uint64_t v16 = objc_msgSend(a1, sel_clusterID);
LABEL_7:
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    return;
  }
  uint64_t v10 = v9;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
  sub_251F35AC0();

  unsigned __int8 v33 = v32[0];
  id v11 = objc_msgSend(a1, sel_commandID);
  int v12 = objc_msgSend(v11, sel_unsignedIntValue);

  id v13 = objc_msgSend(a1, sel_commandFields);
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = sub_251F35550();
  }
  else
  {
    uint64_t v15 = 0;
  }
  MatterCommandFields.init(commandFields:)(v15, (uint64_t)&v27);
  uint64_t v17 = v27;
  uint64_t v18 = v28;
  char v19 = v29;
  v25[0] = v27;
  v25[1] = v28;
  char v26 = v29;
  static MatterCommandFactory.matterCommand(clusterKind:commandID:expectedValues:commandFields:)(&v33, v12, (uint64_t)v25, (uint64_t)&v30);
  swift_bridgeObjectRelease();
  sub_251C32408(v17, v18, v19);
  if (!v31)
  {
    sub_251A1B064((uint64_t)&v30, &qword_269BA08C0);
    type metadata accessor for ActionCommand.Error(0);
    sub_251C336F4((unint64_t *)&qword_269BA08B8, (void (*)(uint64_t))type metadata accessor for ActionCommand.Error);
    swift_allocError();
    goto LABEL_7;
  }
  sub_251A1A444(&v30, (uint64_t)v32);
  id v20 = objc_msgSend(a1, sel_accessory);
  id v21 = objc_msgSend(v20, sel_uniqueIdentifier);

  sub_251F34D80();
  uint64_t v22 = (int *)type metadata accessor for ActionCommand(0);
  *(void *)(a2 + v22[5]) = v4;
  id v23 = objc_msgSend(a1, sel_endpointID);
  LOWORD(v21) = (unsigned __int16)objc_msgSend(v23, sel_unsignedShortValue);

  *(_WORD *)(a2 + v22[6]) = (_WORD)v21;
  sub_251A1A444(v32, a2 + v22[7]);
}

uint64_t type metadata accessor for ActionCommand.Error(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269BA08F8);
}

uint64_t sub_251C32408(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1) {
    return sub_251A4EBDC(a2, a3);
  }
  return result;
}

uint64_t ActionCommand.expectedValues()()
{
  uint64_t v1 = type metadata accessor for ActionCommand(0);
  uint64_t v2 = (void *)(v0 + *(int *)(v1 + 28));
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  return MatterCommand.expectedValues(endpointID:)(*(unsigned __int16 *)(v0 + *(int *)(v1 + 24)), v3, v4);
}

char *sub_251C32484(uint64_t a1)
{
  uint64_t v2 = v1;
  if (*(void *)(a1 + 16) && (unint64_t v4 = sub_2519FE584((uint64_t)v2), (v5 & 1) != 0))
  {
    uint64_t v22 = *(void **)(*(void *)(a1 + 56) + 8 * v4);
    char v6 = &v2[*(int *)(type metadata accessor for ActionCommand(0) + 28)];
    uint64_t v7 = *((void *)v6 + 3);
    uint64_t v8 = *((void *)v6 + 4);
    __swift_project_boxed_opaque_existential_1(v6, v7);
    id v9 = *(void (**)(uint64_t, uint64_t))(v8 + 24);
    id v23 = v22;
    v9(v7, v8);
    uint64_t v10 = *((void *)v6 + 3);
    uint64_t v11 = *((void *)v6 + 4);
    __swift_project_boxed_opaque_existential_1(v6, v10);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v11 + 32))(&v24, v10, v11);
    id v12 = objc_allocWithZone(MEMORY[0x263F0E4A8]);
    id v13 = v23;
    uint64_t v14 = (void *)sub_251F36D60();
    uint64_t v15 = (void *)sub_251F36D40();
    uint64_t v16 = (void *)sub_251F36D60();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
    uint64_t v17 = (void *)sub_251F35AA0();
    uint64_t v2 = (char *)objc_msgSend(v12, sel_initWithCommandID_endpointID_clusterID_accessory_commandFields_expectedValues_, v14, v15, v16, v13, 0, v17);

    if (!v2)
    {
      uint64_t v2 = (char *)type metadata accessor for ActionCommand.Error(0);
      sub_251C336F4((unint64_t *)&qword_269BA08B8, (void (*)(uint64_t))type metadata accessor for ActionCommand.Error);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }
  }
  else
  {
    type metadata accessor for ActionCommand.Error(0);
    sub_251C336F4((unint64_t *)&qword_269BA08B8, (void (*)(uint64_t))type metadata accessor for ActionCommand.Error);
    swift_allocError();
    uint64_t v19 = v18;
    uint64_t v20 = sub_251F34DA0();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v19, v2, v20);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v2;
}

uint64_t ActionCommand.hash(into:)()
{
  sub_251F34DA0();
  sub_251AD2788();
  sub_251F35610();
  uint64_t v1 = type metadata accessor for ActionCommand(0);
  sub_251F36CF0();
  sub_251F36CD0();
  __swift_project_boxed_opaque_existential_1((void *)(v0 + *(int *)(v1 + 28)), *(void *)(v0 + *(int *)(v1 + 28) + 24));
  return sub_251F35610();
}

uint64_t ActionCommand.hashValue.getter()
{
  sub_251F36CA0();
  sub_251F34DA0();
  sub_251AD2788();
  sub_251F35610();
  uint64_t v1 = type metadata accessor for ActionCommand(0);
  sub_251F36CF0();
  sub_251F36CD0();
  __swift_project_boxed_opaque_existential_1((void *)(v0 + *(int *)(v1 + 28)), *(void *)(v0 + *(int *)(v1 + 28) + 24));
  sub_251F35610();
  return sub_251F36D00();
}

uint64_t sub_251C328CC(uint64_t a1)
{
  sub_251F36CA0();
  sub_251F34DA0();
  sub_251AD2788();
  sub_251F35610();
  sub_251F36CF0();
  sub_251F36CD0();
  __swift_project_boxed_opaque_existential_1((void *)(v1 + *(int *)(a1 + 28)), *(void *)(v1 + *(int *)(a1 + 28) + 24));
  sub_251F35610();
  return sub_251F36D00();
}

uint64_t sub_251C3297C(uint64_t a1, uint64_t a2)
{
  sub_251F34DA0();
  sub_251AD2788();
  sub_251F35610();
  sub_251F36CF0();
  sub_251F36CD0();
  __swift_project_boxed_opaque_existential_1((void *)(v2 + *(int *)(a2 + 28)), *(void *)(v2 + *(int *)(a2 + 28) + 24));
  return sub_251F35610();
}

uint64_t sub_251C32A18(uint64_t a1, uint64_t a2)
{
  sub_251F36CA0();
  sub_251F34DA0();
  sub_251AD2788();
  sub_251F35610();
  sub_251F36CF0();
  sub_251F36CD0();
  __swift_project_boxed_opaque_existential_1((void *)(v2 + *(int *)(a2 + 28)), *(void *)(v2 + *(int *)(a2 + 28) + 24));
  sub_251F35610();
  return sub_251F36D00();
}

uint64_t ActionCommand.init(template:endpoint:accessoryID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for StaticEndpoint();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA08C8);
  MEMORY[0x270FA5388](v11 - 8);
  id v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1A4EC(a1, (uint64_t)v28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA08D0);
  if (!swift_dynamicCast())
  {
    uint64_t v20 = sub_251F34DA0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(a3, v20);
    sub_251C34208(a2, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    __swift_destroy_boxed_opaque_existential_0(a1);
    goto LABEL_5;
  }
  uint64_t v24 = v26;
  char v25 = v27;
  sub_251C34494(a2, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  uint64_t v14 = sub_251F34DA0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a3, v14);
  ActionCommand.init(template:endpoint:accessoryID:)((uint64_t)&v24, (uint64_t)v10, (uint64_t)v17, (uint64_t)v13);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a3, v14);
  sub_251C34208(a2, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  __swift_destroy_boxed_opaque_existential_0(a1);
  uint64_t v18 = type metadata accessor for ActionCommand(0);
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v13, 1, v18))
  {
    sub_251A1B064((uint64_t)v13, &qword_269BA08C8);
LABEL_5:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
    uint64_t v21 = type metadata accessor for ActionCommand(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(a4, 1, 1, v21);
  }
  sub_251C33578((uint64_t)v13, a4);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56))(a4, 0, 1, v18);
}

{
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned char *v18;
  int *v19;
  uint64_t v21;
  uint64_t v22;
  unsigned char v23[4];
  int v24;
  unsigned char *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  unsigned __int8 v29;
  long long v30;
  long long v31;
  long long v32;
  long long v33;
  long long v34;
  long long v35;
  long long v36;
  long long v37;
  long long v38;
  long long v39;
  long long v40;
  long long v41;
  long long v42;
  _OWORD v43[2];
  unsigned char v44[240];
  _OWORD v45[13];
  _OWORD v46[2];

  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(unsigned char *)(a1 + 8);
  uint64_t v9 = a2 + *(int *)(type metadata accessor for StaticEndpoint() + 20);
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(unsigned __int16 *)(v9 + 8);
  StaticEndpoint.rvcClusterGroup.getter((uint64_t)&v30);
  sub_251C335DC((uint64_t)&v30, (uint64_t)v44);
  sub_251C335DC((uint64_t)v44, (uint64_t)v45);
  if (sub_251B72348((uint64_t)v45) == 1)
  {
    sub_251C33644(v7, v8);
  }
  else
  {
    uint64_t v26 = v7;
    char v27 = v8;
    uint64_t v42 = v45[12];
    v43[0] = v46[0];
    *(_OWORD *)((char *)v43 + 12) = *(_OWORD *)((char *)v46 + 12);
    uint64_t v38 = v45[8];
    uint64_t v39 = v45[9];
    int v40 = v45[10];
    uint64_t v41 = v45[11];
    uint64_t v34 = v45[4];
    int v35 = v45[5];
    uint64_t v36 = v45[6];
    uint64_t v37 = v45[7];
    long long v30 = v45[0];
    uint64_t v31 = v45[1];
    uint64_t v32 = v45[2];
    unsigned __int8 v33 = v45[3];
    StaticRVCClusterGroup.Command.init(commandTemplate:cluster:)(&v26, &v30, (uint64_t)&v28);
    uint64_t v12 = v29;
    if (v29 != 255)
    {
      id v13 = v28;
      uint64_t v14 = sub_251F34DA0();
      char v25 = v23;
      uint64_t v15 = *(void *)(v14 - 8);
      uint64_t v24 = v11;
      uint64_t v16 = v15;
      MEMORY[0x270FA5388](v14);
      uint64_t v18 = &v23[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v16 + 16))(v18, a3, v14);
      *((void *)&v31 + 1) = &type metadata for StaticRVCClusterGroup.Command;
      *(void *)&uint64_t v32 = sub_251C33658();
      *(void *)&long long v30 = v13;
      BYTE8(v30) = v12;
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a3, v14);
      sub_251C34208(a2, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      (*(void (**)(uint64_t, unsigned char *, uint64_t))(v16 + 32))(a4, v18, v14);
      uint64_t v19 = (int *)type metadata accessor for ActionCommand(0);
      *(void *)(a4 + v19[5]) = v10;
      *(_WORD *)(a4 + v19[6]) = v24;
      sub_251A1A444(&v30, a4 + v19[7]);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v19 - 1) + 56))(a4, 0, 1, v19);
    }
  }
  uint64_t v21 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(a3, v21);
  sub_251C34208(a2, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  uint64_t v22 = type metadata accessor for ActionCommand(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a4, 1, 1, v22);
}

BOOL _s13HomeDataModel13ActionCommandV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (int *)type metadata accessor for ActionCommand(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v33 = (uint64_t)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v32 - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v32 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v32 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v32 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v32 - v19;
  char v21 = sub_251F34D70();
  sub_251C34494(a1, (uint64_t)v20, type metadata accessor for ActionCommand);
  sub_251C34494(a2, (uint64_t)v18, type metadata accessor for ActionCommand);
  if ((v21 & 1) == 0)
  {
    sub_251C34208((uint64_t)v18, type metadata accessor for ActionCommand);
    sub_251C34208((uint64_t)v20, type metadata accessor for ActionCommand);
    sub_251C34494(a1, (uint64_t)v15, type metadata accessor for ActionCommand);
    sub_251C34494(a2, (uint64_t)v12, type metadata accessor for ActionCommand);
    goto LABEL_6;
  }
  uint64_t v22 = *(void *)&v20[v4[5]];
  sub_251C34208((uint64_t)v20, type metadata accessor for ActionCommand);
  uint64_t v23 = *(void *)&v18[v4[5]];
  sub_251C34208((uint64_t)v18, type metadata accessor for ActionCommand);
  sub_251C34494(a1, (uint64_t)v15, type metadata accessor for ActionCommand);
  sub_251C34494(a2, (uint64_t)v12, type metadata accessor for ActionCommand);
  if (v22 != v23)
  {
LABEL_6:
    sub_251C34208((uint64_t)v12, type metadata accessor for ActionCommand);
    sub_251C34208((uint64_t)v15, type metadata accessor for ActionCommand);
    sub_251C34494(a1, (uint64_t)v9, type metadata accessor for ActionCommand);
    uint64_t v26 = v33;
    sub_251C34494(a2, v33, type metadata accessor for ActionCommand);
    goto LABEL_7;
  }
  int v24 = *(unsigned __int16 *)&v15[v4[6]];
  sub_251C34208((uint64_t)v15, type metadata accessor for ActionCommand);
  int v25 = *(unsigned __int16 *)&v12[v4[6]];
  sub_251C34208((uint64_t)v12, type metadata accessor for ActionCommand);
  sub_251C34494(a1, (uint64_t)v9, type metadata accessor for ActionCommand);
  uint64_t v26 = v33;
  sub_251C34494(a2, v33, type metadata accessor for ActionCommand);
  if (v24 != v25)
  {
LABEL_7:
    BOOL v30 = 0;
    goto LABEL_8;
  }
  char v27 = &v9[v4[7]];
  uint64_t v28 = *((void *)v27 + 3);
  uint64_t v29 = *((void *)v27 + 4);
  __swift_project_boxed_opaque_existential_1(v27, v28);
  BOOL v30 = MatterCommand.isEqual(_:)((void *)(v26 + v4[7]), v28, v29);
LABEL_8:
  sub_251C34208(v26, type metadata accessor for ActionCommand);
  sub_251C34208((uint64_t)v9, type metadata accessor for ActionCommand);
  return v30;
}

uint64_t sub_251C33578(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActionCommand(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251C335DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9ECC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251C33644(uint64_t a1, char a2)
{
  if ((a2 & 0xC0) == 0x80) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_251C33658()
{
  unint64_t result = qword_269BA08D8;
  if (!qword_269BA08D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA08D8);
  }
  return result;
}

uint64_t sub_251C336AC()
{
  return sub_251C336F4(&qword_269BA08E0, (void (*)(uint64_t))type metadata accessor for ActionCommand);
}

uint64_t sub_251C336F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ActionCommand(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(_WORD *)((char *)a1 + v8) = *(_WORD *)((char *)a2 + v8);
    uint64_t v9 = a3[7];
    long long v10 = *(_OWORD *)((char *)a2 + v9 + 24);
    *(_OWORD *)((char *)a1 + v9 + 24) = v10;
    (**(void (***)(void))(v10 - 8))();
  }
  return a1;
}

uint64_t destroy for ActionCommand(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 28);
  return __swift_destroy_boxed_opaque_existential_0(v5);
}

uint64_t initializeWithCopy for ActionCommand(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(_WORD *)(a1 + v7) = *(_WORD *)(a2 + v7);
  uint64_t v8 = a3[7];
  long long v9 = *(_OWORD *)(a2 + v8 + 24);
  *(_OWORD *)(a1 + v8 + 24) = v9;
  (**(void (***)(void))(v9 - 8))();
  return a1;
}

uint64_t assignWithCopy for ActionCommand(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(_WORD *)(a1 + a3[6]) = *(_WORD *)(a2 + a3[6]);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[7]), (uint64_t *)(a2 + a3[7]));
  return a1;
}

uint64_t initializeWithTake for ActionCommand(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(_WORD *)(a1 + v7) = *(_WORD *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  long long v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(void *)(v9 + 32) = *(void *)(v10 + 32);
  return a1;
}

uint64_t assignWithTake for ActionCommand(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(_WORD *)(a1 + v7) = *(_WORD *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  __swift_destroy_boxed_opaque_existential_0(a1 + v8);
  long long v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(void *)(v9 + 32) = *(void *)(v10 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionCommand(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251C33BA4);
}

uint64_t sub_251C33BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ActionCommand(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251C33C7C);
}

uint64_t sub_251C33C7C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_251F34DA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28) + 24) = (a2 - 1);
  }
  return result;
}

uint64_t sub_251C33D3C()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for ActionCommand.Error(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    unint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = &v10[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v11 = sub_251F34DA0();
      (*(void (**)(char *, char **, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload > 1)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = *a2;
      *(void *)a1 = *a2;
      uint64_t v9 = v8;
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void destroy for ActionCommand.Error(void **a1)
{
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v4 = sub_251F34DA0();
    int v5 = *(void (**)(void **, uint64_t))(*(void *)(v4 - 8) + 8);
    v5(a1, v4);
  }
  else if (EnumCaseMultiPayload <= 1)
  {
    uint64_t v3 = *a1;
  }
}

void **initializeWithCopy for ActionCommand.Error(void **a1, void **a2, uint64_t a3)
{
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v9 = sub_251F34DA0();
    (*(void (**)(void **, void **, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    id v8 = v7;
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void **assignWithCopy for ActionCommand.Error(void **a1, void **a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_251C34208((uint64_t)a1, type metadata accessor for ActionCommand.Error);
    unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v9 = sub_251F34DA0();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = *a2;
      *a1 = *a2;
      id v8 = v7;
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_251C34208(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *initializeWithTake for ActionCommand.Error(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v6 = sub_251F34DA0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for ActionCommand.Error(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_251C34208((uint64_t)a1, type metadata accessor for ActionCommand.Error);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v6 = sub_251F34DA0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_251C343FC()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_251C34494(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t HMAccessory.categoryType.getter()
{
  id v1 = objc_msgSend(v0, sel_category);
  id v2 = objc_msgSend(v1, sel_categoryType);

  uint64_t v3 = sub_251F356F0();
  return v3;
}

void *HMAccessory.subscript.getter()
{
  id v1 = objc_msgSend(v0, sel_services);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
  unint64_t v2 = sub_251F35AC0();

  if (v2 >> 62) {
    goto LABEL_17;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = sub_251F366C0())
  {
    uint64_t v4 = 4;
    while (1)
    {
      id v5 = (v2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2533AB3A0](v4 - 4, v2) : *(id *)(v2 + 8 * v4);
      uint64_t v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      id v8 = objc_msgSend(v5, sel_serviceType);
      uint64_t v9 = sub_251F356F0();
      uint64_t v11 = v10;

      v12._uint64_t countAndFlagsBits = v9;
      v12._object = v11;
      ServiceKind.init(rawValue:)(v12);
      unint64_t v13 = ServiceKind.rawValue.getter();
      uint64_t v15 = v14;
      if (v13 == ServiceKind.rawValue.getter() && v15 == v16)
      {
        swift_bridgeObjectRelease_n();
LABEL_14:
        swift_bridgeObjectRelease_n();
        return v6;
      }
      char v17 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v17) {
        goto LABEL_14;
      }

      ++v4;
      if (v7 == v3) {
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
LABEL_12:
  swift_bridgeObjectRelease_n();
  return 0;
}

{
  void *v0;
  void *v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  void *v16;

  uint64_t v0 = HMAccessory.subscript.getter();
  if (!v0) {
    return 0;
  }
  id v1 = v0;
  unint64_t v2 = objc_msgSend(v0, sel_characteristics);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
  uint64_t v3 = sub_251F35AC0();

  if (v3 >> 62) {
    goto LABEL_21;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_251F366C0())
  {
    uint64_t v16 = v1;
    id v5 = 4;
    while (1)
    {
      uint64_t v6 = (v3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2533AB3A0](v5 - 4, v3) : *(id *)(v3 + 8 * v5);
      uint64_t v7 = v6;
      id v1 = (void *)(v5 - 3);
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      id v8 = objc_msgSend(v6, sel_characteristicType);
      uint64_t v9 = sub_251F356F0();
      uint64_t v11 = v10;

      if (v9 == CharacteristicKind.rawValue.getter() && v11 == v12)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_19:
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
      uint64_t v14 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v14)
      {

        goto LABEL_19;
      }

      ++v5;
      if (v1 == (void *)v4)
      {

        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
  }

LABEL_23:
  swift_bridgeObjectRelease();
  uint64_t v7 = 0;
LABEL_24:
  swift_bridgeObjectRelease();
  return v7;
}

void HMAccessory.specialMediaCategory.getter(unsigned __int16 *a1@<X8>)
{
  unint64_t v2 = v1;
  static StaticAccessory.SpecialMediaCategory.siriEndpoint(from:)(v1, (__int16 *)&v27);
  unsigned __int16 v4 = v27;
  if ((~v27 & 0xFEFC) == 0)
  {
    id v5 = objc_msgSend(v1, sel_category);
    id v6 = objc_msgSend(v5, sel_categoryType);

    uint64_t v7 = sub_251F356F0();
    uint64_t v9 = v8;

    if (sub_251F356F0() == v7 && v10 == v9) {
      goto LABEL_16;
    }
    char v12 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v12)
    {
LABEL_7:
      swift_bridgeObjectRelease();
LABEL_17:
      unsigned __int16 v4 = -32765;
      goto LABEL_18;
    }
    if (sub_251F356F0() == v7 && v13 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      goto LABEL_17;
    }
    char v15 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v15) {
      goto LABEL_7;
    }
    if (sub_251F356F0() == v7 && v16 == v9)
    {
      swift_bridgeObjectRelease_n();
      unsigned __int16 v4 = 0x8000;
      goto LABEL_18;
    }
    char v17 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v17)
    {
      swift_bridgeObjectRelease();
      unsigned __int16 v4 = 0x8000;
      goto LABEL_18;
    }
    if (sub_251F356F0() == v7 && v18 == v9)
    {
      swift_bridgeObjectRelease_n();
      unsigned __int16 v4 = -32767;
      goto LABEL_18;
    }
    char v19 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v19)
    {
      swift_bridgeObjectRelease();
      unsigned __int16 v4 = -32767;
      goto LABEL_18;
    }
    if (sub_251F356F0() == v7 && v20 == v9)
    {
      swift_bridgeObjectRelease_n();
      unsigned __int16 v4 = -32766;
      goto LABEL_18;
    }
    char v21 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v21)
    {
      swift_bridgeObjectRelease();
      unsigned __int16 v4 = -32766;
      goto LABEL_18;
    }
    if (sub_251F356F0() == v7 && v22 == v9)
    {
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    char v23 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v23)
    {
LABEL_35:
      swift_bridgeObjectRelease();
      id v24 = objc_msgSend(v2, sel_homePodVariant);
      if ((unint64_t)v24 >= 4) {
        unsigned __int16 v4 = 1;
      }
      else {
        unsigned __int16 v4 = (unsigned __int16)v24;
      }
      goto LABEL_18;
    }
    if (sub_251F356F0() == v7 && v25 == v9)
    {
      swift_bridgeObjectRelease_n();
      unsigned __int16 v4 = -32512;
    }
    else
    {
      char v26 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v26) {
        unsigned __int16 v4 = -32512;
      }
      else {
        unsigned __int16 v4 = -260;
      }
    }
  }
LABEL_18:
  *a1 = v4;
}

uint64_t HMAccessory.supportsAlarmsAndTimers.getter()
{
  id v1 = objc_msgSend(v0, sel_category);
  id v2 = objc_msgSend(v1, sel_categoryType);

  uint64_t v3 = sub_251F356F0();
  uint64_t v5 = v4;

  if (v3 == sub_251F356F0() && v5 == v6)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v8 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
    {
      uint64_t result = (uint64_t)objc_msgSend(v0, sel_siriEndpointProfile);
      if (!result) {
        return result;
      }
    }
  }
  return 1;
}

uint64_t MatterClusterAttributeID.init(attributeID:clusterKind:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v3 = *a2;
  *(_DWORD *)a3 = result;
  *(unsigned char *)(a3 + 4) = v3;
  return result;
}

uint64_t MatterClusterAttributeID.hash(into:)()
{
  return sub_251F36CE0();
}

BOOL static MatterClusterAttributeID.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(_DWORD *)a1 == *(_DWORD *)a2 && dword_251F47C60[*(char *)(a1 + 4)] == dword_251F47C60[*(char *)(a2 + 4)];
}

uint64_t sub_251C34E74()
{
  if (*v0) {
    return 0x4B72657473756C63;
  }
  else {
    return 0x7475626972747461;
  }
}

uint64_t sub_251C34EC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251C35B08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251C34EE8(uint64_t a1)
{
  unint64_t v2 = sub_251C355F8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C34F24(uint64_t a1)
{
  unint64_t v2 = sub_251C355F8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MatterClusterAttributeID.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0908);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v8 = *v1;
  int v11 = *((unsigned __int8 *)v1 + 4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251C355F8();
  sub_251F36DA0();
  int v15 = v8;
  char v14 = 0;
  type metadata accessor for MTRAttributeIDType(0);
  sub_251C3564C(&qword_269BA0918);
  sub_251F36A20();
  if (!v2)
  {
    char v13 = v11;
    char v12 = 1;
    sub_251B72644();
    sub_251F36A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t MatterClusterAttributeID.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t MatterClusterAttributeID.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0920);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251C355F8();
  sub_251F36D90();
  if (!v2)
  {
    type metadata accessor for MTRAttributeIDType(0);
    char v15 = 0;
    sub_251C3564C(&qword_269BA0928);
    sub_251F36880();
    int v9 = v16;
    char v13 = 1;
    sub_251B7281C();
    sub_251F36880();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v10 = v14;
    *(_DWORD *)a2 = v9;
    *(unsigned char *)(a2 + 4) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_251C3537C()
{
  return sub_251F36D00();
}

uint64_t sub_251C353E4()
{
  return sub_251F36CE0();
}

uint64_t sub_251C3542C()
{
  return sub_251F36D00();
}

BOOL sub_251C35490(uint64_t a1, uint64_t a2)
{
  return *(_DWORD *)a1 == *(_DWORD *)a2 && dword_251F47C60[*(char *)(a1 + 4)] == dword_251F47C60[*(char *)(a2 + 4)];
}

uint64_t sub_251C354CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MatterClusterAttributeID.init(from:)(a1, a2);
}

uint64_t sub_251C354E4(void *a1)
{
  return MatterClusterAttributeID.encode(to:)(a1);
}

void ClusterValue.clusterKind.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t ClusterValue.endpointID.getter()
{
  return *(unsigned __int16 *)(v0 + 2);
}

uint64_t ClusterValue.attributeValues.getter()
{
  return swift_bridgeObjectRetain();
}

unsigned char *ClusterValue.init(clusterKind:endpointID:attributeValues:)@<X0>(unsigned char *result@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(unsigned char *)a4 = *result;
  *(_WORD *)(a4 + 2) = a2;
  *(void *)(a4 + 8) = a3;
  return result;
}

void MatterAttributeDataBuilder.dataValue.getter(void *a1@<X8>)
{
  uint64_t v2 = *v1;
  switch(*((unsigned char *)v1 + 8))
  {
    case 1:
      uint64_t v4 = MEMORY[0x263F8D6C8];
      goto LABEL_8;
    case 2:
      uint64_t v4 = MEMORY[0x263F8D9D0];
LABEL_8:
      a1[3] = v4;
      *a1 = v2;
      break;
    case 3:
      a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CDD0);
      *a1 = v2;
      swift_bridgeObjectRetain();
      break;
    default:
      a1[3] = MEMORY[0x263F8D4F8];
      *(unsigned char *)a1 = v2 & 1;
      break;
  }
}

unint64_t sub_251C355F8()
{
  unint64_t result = qword_269BA0910;
  if (!qword_269BA0910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0910);
  }
  return result;
}

uint64_t sub_251C3564C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for MTRAttributeIDType(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251C35694()
{
  unint64_t result = qword_269BA0930;
  if (!qword_269BA0930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0930);
  }
  return result;
}

uint64_t __swift_memcpy5_4(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for MatterClusterAttributeID(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xE5 && *(unsigned char *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 229);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 4);
  BOOL v4 = v3 >= 0x1C;
  int v5 = v3 - 28;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for MatterClusterAttributeID(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xE4)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)unint64_t result = a2 - 229;
    if (a3 >= 0xE5) {
      *(unsigned char *)(result + 5) = 1;
    }
  }
  else
  {
    if (a3 >= 0xE5) {
      *(unsigned char *)(result + 5) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 4) = a2 + 27;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MatterClusterAttributeID()
{
  return &type metadata for MatterClusterAttributeID;
}

uint64_t sub_251C35798(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 2) = *(_WORD *)(a2 + 2);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ClusterValue(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 2) = *(_WORD *)(a2 + 2);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ClusterValue(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 2) = *(_WORD *)(a2 + 2);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s19MatterCommandActionVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s19MatterCommandActionVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClusterValue()
{
  return &type metadata for ClusterValue;
}

unsigned char *storeEnumTagSinglePayload for MatterClusterAttributeID.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251C359C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MatterClusterAttributeID.CodingKeys()
{
  return &type metadata for MatterClusterAttributeID.CodingKeys;
}

unint64_t sub_251C35A04()
{
  unint64_t result = qword_269BA0938;
  if (!qword_269BA0938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0938);
  }
  return result;
}

unint64_t sub_251C35A5C()
{
  unint64_t result = qword_269BA0940;
  if (!qword_269BA0940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0940);
  }
  return result;
}

unint64_t sub_251C35AB4()
{
  unint64_t result = qword_269BA0948;
  if (!qword_269BA0948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0948);
  }
  return result;
}

uint64_t sub_251C35B08(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7475626972747461 && a2 == 0xEB00000000444965;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4B72657473756C63 && a2 == 0xEB00000000646E69)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_251C35C2C(uint64_t (*a1)(_OWORD *))
{
  uint64_t v17 = MEMORY[0x263F8EE78];
  uint64_t v4 = sub_251F34AA0();
  uint64_t v13 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F360E0();

  sub_251C374E8(&qword_269BA0950, MEMORY[0x270FA8C30]);
  while (1)
  {
    sub_251F361B0();
    if (!v15)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v6, v4);
      sub_251A1B064((uint64_t)&v14, &qword_26B21E190);
      return v17;
    }
    sub_251A0D578(&v14, v16);
    char v7 = a1(v16);
    if (v2) {
      break;
    }
    if (v7)
    {
      sub_251A0D578(v16, &v14);
      uint64_t v8 = v17;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3E300(0, *(void *)(v8 + 16) + 1, 1);
        uint64_t v8 = v17;
      }
      unint64_t v10 = *(void *)(v8 + 16);
      unint64_t v9 = *(void *)(v8 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_251A3E300(v9 > 1, v10 + 1, 1);
        uint64_t v8 = v17;
      }
      *(void *)(v8 + 16) = v10 + 1;
      sub_251A0D578(&v14, (_OWORD *)(v8 + 32 * v10 + 32));
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
    }
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v6, v4);
  return swift_release();
}

uint64_t sub_251C35E64(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_251C35EBC(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup, (void (*)(BOOL, uint64_t, uint64_t))sub_251A3E898);
}

uint64_t sub_251C35EBC(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void), void (*a7)(BOOL, uint64_t, uint64_t))
{
  int v40 = a7;
  uint64_t v45 = a6;
  uint64_t v46 = a1;
  uint64_t v47 = a2;
  uint64_t v10 = a4(0);
  uint64_t v48 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v41 = (uint64_t)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v39 - v14;
  uint64_t result = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v39 - v17;
  int64_t v19 = 0;
  uint64_t v20 = a3;
  uint64_t v21 = *(void *)(a3 + 64);
  uint64_t v43 = a3 + 64;
  uint64_t v22 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v23 = -1;
  if (v22 < 64) {
    uint64_t v23 = ~(-1 << v22);
  }
  unint64_t v42 = MEMORY[0x263F8EE78];
  unint64_t v49 = MEMORY[0x263F8EE78];
  unint64_t v24 = v23 & v21;
  int64_t v44 = (unint64_t)(v22 + 63) >> 6;
  while (1)
  {
    if (v24)
    {
      unint64_t v25 = __clz(__rbit64(v24));
      v24 &= v24 - 1;
      unint64_t v26 = v25 | (v19 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v19++, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v19 >= v44) {
      goto LABEL_32;
    }
    unint64_t v28 = *(void *)(v43 + 8 * v19);
    if (!v28) {
      break;
    }
LABEL_18:
    unint64_t v24 = (v28 - 1) & v28;
    unint64_t v26 = __clz(__rbit64(v28)) + (v19 << 6);
LABEL_19:
    uint64_t v30 = *(void *)(v48 + 72);
    sub_251C37418(*(void *)(v20 + 56) + v30 * v26, (uint64_t)v15, a5);
    sub_251C37480((uint64_t)v15, (uint64_t)v18, a5);
    char v31 = v46(v18);
    if (v7)
    {
      sub_251C37530((uint64_t)v18, v45);
      unint64_t v38 = v42;
      swift_release();
LABEL_33:
      swift_release();
      return v38;
    }
    if (v31)
    {
      sub_251C37480((uint64_t)v18, v41, a5);
      unint64_t v32 = v42;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v40(0, *(void *)(v32 + 16) + 1, 1);
      }
      unint64_t v33 = v49;
      unint64_t v35 = *(void *)(v49 + 16);
      unint64_t v34 = *(void *)(v49 + 24);
      unint64_t v36 = v35 + 1;
      if (v35 >= v34 >> 1)
      {
        unint64_t v42 = v35 + 1;
        unint64_t v39 = v35;
        v40(v34 > 1, v35 + 1, 1);
        unint64_t v36 = v42;
        unint64_t v35 = v39;
        unint64_t v33 = v49;
      }
      *(void *)(v33 + 16) = v36;
      uint64_t v37 = *(unsigned __int8 *)(v48 + 80);
      unint64_t v42 = v33;
      uint64_t result = sub_251C37480(v41, v33 + ((v37 + 32) & ~v37) + v35 * v30, a5);
    }
    else
    {
      uint64_t result = sub_251C37530((uint64_t)v18, v45);
    }
  }
  int64_t v29 = v19 + 1;
  if (v19 + 1 >= v44) {
    goto LABEL_32;
  }
  unint64_t v28 = *(void *)(v43 + 8 * v29);
  if (v28) {
    goto LABEL_17;
  }
  int64_t v29 = v19 + 2;
  if (v19 + 2 >= v44) {
    goto LABEL_32;
  }
  unint64_t v28 = *(void *)(v43 + 8 * v29);
  if (v28) {
    goto LABEL_17;
  }
  int64_t v29 = v19 + 3;
  if (v19 + 3 >= v44) {
    goto LABEL_32;
  }
  unint64_t v28 = *(void *)(v43 + 8 * v29);
  if (v28) {
    goto LABEL_17;
  }
  int64_t v29 = v19 + 4;
  if (v19 + 4 >= v44)
  {
LABEL_32:
    unint64_t v38 = v42;
    goto LABEL_33;
  }
  unint64_t v28 = *(void *)(v43 + 8 * v29);
  if (v28)
  {
LABEL_17:
    int64_t v19 = v29;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v19 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v19 >= v44) {
      goto LABEL_32;
    }
    unint64_t v28 = *(void *)(v43 + 8 * v19);
    ++v29;
    if (v28) {
      goto LABEL_18;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t MatterStateSnapshot.shouldHideVacuumStatus(for:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for StaticMatterDevice();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v26 = (uint64_t)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  unint64_t v9 = (char *)&v24 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v29 = a1;
  swift_bridgeObjectRetain();
  uint64_t result = sub_251C35EBC((uint64_t (*)(char *))sub_251C37590, (uint64_t)v28, v12, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice, (void (*)(BOOL, uint64_t, uint64_t))sub_251A3E71C);
  uint64_t v14 = result;
  uint64_t v15 = MEMORY[0x263F8EE78];
  uint64_t v31 = MEMORY[0x263F8EE78];
  uint64_t v27 = *(void *)(result + 16);
  if (!v27)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v23 = *(void *)(v15 + 16);
    swift_release();
    return v23 == 0;
  }
  unint64_t v16 = 0;
  uint64_t v17 = MEMORY[0x263F8EE78];
  uint64_t v25 = v4;
  while (v16 < *(void *)(v14 + 16))
  {
    unint64_t v18 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v19 = *(void *)(v4 + 72);
    sub_251C37418(v14 + v18 + v19 * v16, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
    StaticMatterDevice.rvcState.getter((char *)&v30);
    int v20 = v30;
    if (v30 == 7)
    {
      sub_251C37418((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
    }
    else
    {
      sub_251C37418((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
      if (!v20)
      {
        sub_251C37530((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
LABEL_12:
        sub_251C37480((uint64_t)v11, v26, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_251A3E71C(0, *(void *)(v17 + 16) + 1, 1);
        }
        uint64_t v17 = v31;
        unint64_t v22 = *(void *)(v31 + 16);
        unint64_t v21 = *(void *)(v31 + 24);
        if (v22 >= v21 >> 1)
        {
          sub_251A3E71C(v21 > 1, v22 + 1, 1);
          uint64_t v17 = v31;
        }
        *(void *)(v17 + 16) = v22 + 1;
        uint64_t result = sub_251C37480(v26, v17 + v18 + v22 * v19, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
        uint64_t v4 = v25;
        goto LABEL_4;
      }
    }
    StaticMatterDevice.rvcState.getter((char *)&v30);
    sub_251C37530((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
    if (v30 == 4) {
      goto LABEL_12;
    }
    uint64_t result = sub_251C37530((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
LABEL_4:
    if (v27 == ++v16)
    {
      uint64_t v15 = v31;
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

uint64_t MatterStateSnapshot.vacuumStatusTitle(for:)(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  v7[2] = a1;
  swift_bridgeObjectRetain();
  unint64_t v3 = *(void *)(sub_251C35EBC((uint64_t (*)(char *))sub_251C373F8, (uint64_t)v7, v2, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice, (void (*)(BOOL, uint64_t, uint64_t))sub_251A3E71C)+ 16);
  swift_bridgeObjectRelease();
  if (v3 < 2)
  {
    uint64_t v5 = 0xD000000000000021;
    uint64_t v4 = 0x8000000251F6EAC0;
  }
  else
  {
    uint64_t v4 = 0x8000000251F6EAF0;
    uint64_t v5 = 0xD00000000000001ALL;
  }
  return static String.hfLocalized(_:)(v5, v4);
}

uint64_t sub_251C366D8(uint64_t a1, uint64_t a2)
{
  uint64_t v75 = (char *)a2;
  uint64_t v3 = type metadata accessor for StaticMatterDevice();
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v62 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D138);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v62 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v62 - v16;
  BOOL v18 = sub_251DB4820(23, *(void *)(a1 + *(int *)(v3 + 32)));
  sub_251A1B128((uint64_t)v75, (uint64_t)v17, &qword_269B9D138);
  sub_251C37418(a1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
  if (v18)
  {
    uint64_t v19 = v3;
    uint64_t v75 = v12;
    uint64_t v20 = type metadata accessor for StaticRoom(0);
    uint64_t v21 = *(void *)(v20 - 8);
    unint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
    uint64_t v23 = v21 + 48;
    int v24 = v22(v17, 1, v20);
    sub_251C37418((uint64_t)v8, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
    sub_251A1B128((uint64_t)v17, (uint64_t)v15, &qword_269B9D138);
    if (v24 == 1)
    {
      sub_251A1B064((uint64_t)v15, &qword_269B9D138);
      sub_251C37530((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
      sub_251C37530((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
      char v25 = 1;
    }
    else
    {
      char v71 = v17;
      char v72 = v8;
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      uint64_t v70 = &v62;
      uint64_t v27 = *(void *)(v26 - 8);
      uint64_t v68 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v22;
      unint64_t v28 = *(void (***)(char *, char *, uint64_t))(v27 + 64);
      MEMORY[0x270FA5388](v26 - 8);
      uint64_t v67 = (char *)v23;
      uint64_t v29 = (char *)&v62 - (((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v30 = *(int *)(v19 + 40);
      unint64_t v73 = v6;
      uint64_t v31 = &v6[v30];
      uint64_t v32 = sub_251F34DA0();
      uint64_t v33 = *(void *)(v32 - 8);
      uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
      v62(v29, v31, v32);
      uint64_t v74 = v33;
      unint64_t v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56);
      uint64_t v69 = v29;
      uint64_t v64 = v34;
      uint64_t v35 = ((uint64_t (*)(char *, void, uint64_t, uint64_t))v34)(v29, 0, 1, v32);
      uint64_t v63 = v28;
      MEMORY[0x270FA5388](v35);
      uint64_t v66 = v15;
      uint64_t v36 = (uint64_t)v75;
      sub_251A1B128((uint64_t)v15, (uint64_t)v75, &qword_269B9D138);
      int v37 = v68(v36, 1, v20);
      unint64_t v65 = &v62;
      if (v37 == 1)
      {
        sub_251A1B064(v36, &qword_269B9D138);
        uint64_t v38 = 1;
      }
      else
      {
        v62(v29, (char *)v36, v32);
        sub_251C37530(v36, type metadata accessor for StaticRoom);
        uint64_t v38 = 0;
      }
      uint64_t v39 = v32;
      uint64_t v40 = v74;
      v64(v29, v38, 1, v32);
      uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
      uint64_t v42 = MEMORY[0x270FA5388](v41 - 8);
      int64_t v44 = (char *)&v62 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v45 = (uint64_t)&v44[*(int *)(v42 + 56)];
      uint64_t v46 = &qword_26B21FF90;
      uint64_t v47 = (uint64_t)v69;
      sub_251A1B128((uint64_t)v69, (uint64_t)v44, &qword_26B21FF90);
      sub_251A1B128((uint64_t)v29, v45, &qword_26B21FF90);
      uint64_t v48 = v40;
      uint64_t v49 = (uint64_t)v44;
      uint64_t v50 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 48);
      uint64_t v51 = v50(v49, 1, v32);
      uint64_t v75 = (char *)v49;
      if (v51 == 1)
      {
        sub_251A1B064((uint64_t)v29, &qword_26B21FF90);
        sub_251A1B064(v47, &qword_26B21FF90);
        sub_251A1B064((uint64_t)v66, &qword_269B9D138);
        sub_251C37530((uint64_t)v73, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
        sub_251C37530((uint64_t)v72, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
        if (v50(v45, 1, v32) == 1)
        {
          char v25 = -1;
        }
        else
        {
          uint64_t v46 = &qword_26B21E6B8;
          char v25 = 0;
        }
      }
      else
      {
        uint64_t v67 = v29;
        uint64_t v68 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))&v62;
        MEMORY[0x270FA5388](v51);
        uint64_t v53 = v49;
        uint64_t v54 = (char *)&v62 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_251A1B128(v53, (uint64_t)v54, &qword_26B21FF90);
        uint64_t v55 = v50(v45, 1, v32);
        uint64_t v56 = (uint64_t)v66;
        if (v55 == 1)
        {
          sub_251A1B064((uint64_t)v67, &qword_26B21FF90);
          sub_251A1B064(v47, &qword_26B21FF90);
          sub_251A1B064(v56, &qword_269B9D138);
          sub_251C37530((uint64_t)v73, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
          sub_251C37530((uint64_t)v72, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
          (*(void (**)(char *, uint64_t))(v74 + 8))(v54, v32);
          uint64_t v46 = &qword_26B21E6B8;
          char v25 = 0;
        }
        else
        {
          uint64_t v63 = &v62;
          uint64_t v64 = (void (*)(char *, uint64_t, uint64_t, uint64_t))&v62;
          uint64_t v57 = v74;
          MEMORY[0x270FA5388](v55);
          uint64_t v59 = (char *)&v62 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v59, v45, v39);
          sub_251C374E8((unint64_t *)&qword_26B21F2B8, MEMORY[0x270FA94F8]);
          char v25 = sub_251F35650();
          uint64_t v60 = *(void (**)(char *, uint64_t))(v57 + 8);
          v60(v59, v39);
          uint64_t v46 = &qword_26B21FF90;
          sub_251A1B064((uint64_t)v67, &qword_26B21FF90);
          sub_251A1B064(v47, &qword_26B21FF90);
          sub_251A1B064(v56, &qword_269B9D138);
          sub_251C37530((uint64_t)v73, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
          sub_251C37530((uint64_t)v72, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
          v60(v54, v39);
        }
      }
      sub_251A1B064((uint64_t)v75, v46);
      uint64_t v17 = v71;
    }
  }
  else
  {
    sub_251C37530((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
    char v25 = 0;
  }
  sub_251A1B064((uint64_t)v17, &qword_269B9D138);
  return v25 & 1;
}

uint64_t MatterStateSnapshot.vacuumStatusDescription(for:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for StaticMatterDevice();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = &v35[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v36 = a1;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_251C35EBC((uint64_t (*)(char *))sub_251C37590, (uint64_t)v35, v7, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice, (void (*)(BOOL, uint64_t, uint64_t))sub_251A3E71C);
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = v8 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v14 = *(void *)(v4 + 72);
  while (2)
  {
    sub_251C37418(v13, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
    StaticMatterDevice.rvcState.getter((char *)v37);
    switch(LOBYTE(v37[0]))
    {
      case 0:
      case 2:
      case 4:
        BOOL v15 = __OFADD__(v12++, 1);
        if (!v15) {
          goto LABEL_4;
        }
        __break(1u);
LABEL_27:
        __break(1u);
        JUMPOUT(0x251C373E4);
      case 3:
        BOOL v15 = __OFADD__(v10++, 1);
        if (!v15) {
          goto LABEL_4;
        }
        goto LABEL_27;
      default:
        BOOL v15 = __OFADD__(v11++, 1);
        if (!v15)
        {
LABEL_4:
          sub_251C37530((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
          v13 += v14;
          if (!--v9) {
            goto LABEL_12;
          }
          continue;
        }
        __break(1u);
LABEL_12:
        swift_bridgeObjectRelease();
        if (!v12 && v11 >= 1 && !v10)
        {
          static String.hfLocalized(_:)(0xD000000000000029, 0x8000000251F6EB40);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
          uint64_t v16 = swift_allocObject();
          uint64_t v17 = MEMORY[0x263F8D6C8];
          *(_OWORD *)(v16 + 16) = xmmword_251F38650;
          uint64_t v18 = MEMORY[0x263F8D750];
          *(void *)(v16 + 56) = v17;
          *(void *)(v16 + 64) = v18;
          *(void *)(v16 + 32) = v11;
          goto LABEL_22;
        }
        if (v10 >= 1)
        {
          static String.hfLocalized(_:)(0xD00000000000002ALL, 0x8000000251F6EB70);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
          uint64_t v20 = swift_allocObject();
          uint64_t v21 = MEMORY[0x263F8D6C8];
          *(_OWORD *)(v20 + 16) = xmmword_251F38650;
          uint64_t v22 = MEMORY[0x263F8D750];
          *(void *)(v20 + 56) = v21;
          *(void *)(v20 + 64) = v22;
          *(void *)(v20 + 32) = v10;
          goto LABEL_22;
        }
        if (v11 || v12 < 1)
        {
          uint64_t v19 = 0;
          if (v12 >= 1 && v11 >= 1)
          {
            static String.hfLocalized(_:)(0xD00000000000002BLL, 0x8000000251F6EB10);
            __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
            uint64_t v27 = swift_allocObject();
            long long v34 = xmmword_251F38650;
            uint64_t v28 = MEMORY[0x263F8D6C8];
            *(_OWORD *)(v27 + 16) = xmmword_251F38650;
            uint64_t v29 = MEMORY[0x263F8D750];
            *(void *)(v27 + 56) = v28;
            *(void *)(v27 + 64) = v29;
            *(void *)(v27 + 32) = v12;
            uint64_t v30 = sub_251F35710();
            uint64_t v32 = v31;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v37[0] = v30;
            v37[1] = v32;
            sub_251F35800();
            static String.hfLocalized(_:)(0xD000000000000029, 0x8000000251F6EB40);
            uint64_t v33 = swift_allocObject();
            *(_OWORD *)(v33 + 16) = v34;
            *(void *)(v33 + 56) = v28;
            *(void *)(v33 + 64) = v29;
            *(void *)(v33 + 32) = v11;
            sub_251F35710();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_251F35800();
            swift_bridgeObjectRelease();
            return v37[0];
          }
        }
        else
        {
          static String.hfLocalized(_:)(0xD00000000000002BLL, 0x8000000251F6EB10);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
          uint64_t v23 = swift_allocObject();
          uint64_t v24 = MEMORY[0x263F8D6C8];
          *(_OWORD *)(v23 + 16) = xmmword_251F38650;
          uint64_t v25 = MEMORY[0x263F8D750];
          *(void *)(v23 + 56) = v24;
          *(void *)(v23 + 64) = v25;
          *(void *)(v23 + 32) = v12;
LABEL_22:
          uint64_t v19 = sub_251F35710();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        return v19;
    }
  }
}

uint64_t sub_251C373F8(uint64_t a1)
{
  return sub_251C366D8(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_251C37418(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251C37480(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251C374E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251C37530(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251C37590(uint64_t a1)
{
  return sub_251C373F8(a1) & 1;
}

unint64_t static HMRoom.roomActionSetsSortedByKey.getter()
{
  return 0xD000000000000028;
}

unint64_t static HMRoom.roomServicesSortedByKey.getter()
{
  return 0xD000000000000026;
}

unint64_t static HMRoom.servicesGroupedByTypeSortedByKeyPrefix.getter()
{
  return 0xD000000000000034;
}

unint64_t sub_251C37600()
{
  id v1 = objc_msgSend(v0, sel_applicationData);
  id v2 = objc_msgSend(v1, sel_dictionary);

  uint64_t v3 = sub_251F35550();
  unint64_t v4 = sub_251C37C98(v3);
  swift_bridgeObjectRelease();
  uint64_t v5 = MEMORY[0x263F8EE78];
  if (v4)
  {
    unint64_t v6 = sub_2519F9A5C(MEMORY[0x263F8EE78]);
    uint64_t v7 = *(void *)(v4 + 64);
    unint64_t v72 = v4 + 64;
    uint64_t v8 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v9 = -1;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    unint64_t v10 = v9 & v7;
    int64_t v73 = (unint64_t)(v8 + 63) >> 6;
    unint64_t result = swift_bridgeObjectRetain();
    int64_t v12 = 0;
    unint64_t v70 = 0x8000000251F6EC00;
    char v71 = "erStrings_roomServices";
    if (v10) {
      goto LABEL_7;
    }
LABEL_8:
    int64_t v15 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
LABEL_51:
      __break(1u);
      return result;
    }
    if (v15 < v73)
    {
      unint64_t v16 = *(void *)(v72 + 8 * v15);
      ++v12;
      if (v16) {
        goto LABEL_25;
      }
      int64_t v12 = v15 + 1;
      if (v15 + 1 >= v73) {
        goto LABEL_46;
      }
      unint64_t v16 = *(void *)(v72 + 8 * v12);
      if (v16) {
        goto LABEL_25;
      }
      int64_t v12 = v15 + 2;
      if (v15 + 2 >= v73) {
        goto LABEL_46;
      }
      unint64_t v16 = *(void *)(v72 + 8 * v12);
      if (v16) {
        goto LABEL_25;
      }
      int64_t v12 = v15 + 3;
      if (v15 + 3 >= v73) {
        goto LABEL_46;
      }
      unint64_t v16 = *(void *)(v72 + 8 * v12);
      if (v16) {
        goto LABEL_25;
      }
      int64_t v12 = v15 + 4;
      if (v15 + 4 >= v73) {
        goto LABEL_46;
      }
      unint64_t v16 = *(void *)(v72 + 8 * v12);
      if (v16)
      {
LABEL_25:
        unint64_t v10 = (v16 - 1) & v16;
        for (unint64_t i = __clz(__rbit64(v16)) + (v12 << 6); ; unint64_t i = v13 | (v12 << 6))
        {
          uint64_t v18 = (uint64_t *)(*(void *)(v4 + 48) + 16 * i);
          uint64_t v19 = *v18;
          unint64_t v20 = v18[1];
          swift_bridgeObjectRetain();
          if (sub_251F35870())
          {
            swift_bridgeObjectRetain();
            unint64_t v21 = sub_251F357C0();
            unint64_t v22 = sub_251C38074(v21, v19, v20);
            uint64_t v24 = v23;
            uint64_t v26 = v25;
            uint64_t v28 = v27;
            swift_bridgeObjectRelease();
            uint64_t v29 = MEMORY[0x2533AA6E0](v22, v24, v26, v28);
            uint64_t v31 = v30;
            swift_bridgeObjectRelease();
            v32._uint64_t countAndFlagsBits = v29;
            v32._object = v31;
            UmbrellaCategory.init(rawValue:)(v32);
            unsigned __int8 v33 = v75;
            if (v75 != 8)
            {
              if (*(void *)(v4 + 16))
              {
                unint64_t v34 = sub_2519FE798(v19, v20);
                if (v35)
                {
                  uint64_t v36 = *(void *)(*(void *)(v4 + 56) + 8 * v34);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  uint64_t v37 = *(void *)(v36 + 16);
                  if (v37)
                  {
                    unint64_t v59 = v6;
                    uint64_t v65 = sub_251F34DA0();
                    uint64_t v38 = *(void *)(*(void *)(v65 - 8) + 64);
                    uint64_t v60 = *(void *)(v65 - 8);
                    uint64_t v62 = (uint64_t (**)(char *, char *, uint64_t))(v60 + 32);
                    uint64_t v63 = (unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48);
                    uint64_t v39 = swift_bridgeObjectRetain();
                    uint64_t v58 = v36;
                    uint64_t v40 = v36 + 40;
                    unint64_t v66 = MEMORY[0x263F8EE78];
                    uint64_t v41 = &qword_26B21FF90;
                    uint64_t v64 = v38;
                    unint64_t v61 = v4;
                    do
                    {
                      uint64_t v67 = v37;
                      uint64_t v68 = &v58;
                      MEMORY[0x270FA5388](v39);
                      unint64_t v43 = (v38 + 15) & 0xFFFFFFFFFFFFFFF0;
                      uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(v41);
                      uint64_t v69 = &v58;
                      MEMORY[0x270FA5388](v44 - 8);
                      uint64_t v46 = v41;
                      uint64_t v47 = (char *)&v58 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
                      swift_bridgeObjectRetain();
                      sub_251F34D30();
                      swift_bridgeObjectRelease();
                      uint64_t v48 = v65;
                      if ((*v63)(v47, 1, v65) == 1)
                      {
                        uint64_t v39 = sub_251A1B064((uint64_t)v47, v46);
                        unint64_t v4 = v61;
                        uint64_t v41 = v46;
                        uint64_t v42 = v67;
                      }
                      else
                      {
                        uint64_t v49 = *v62;
                        uint64_t v50 = (*v62)((char *)&v58 - v43, v47, v48);
                        uint64_t v69 = &v58;
                        MEMORY[0x270FA5388](v50);
                        uint64_t v51 = (char *)&v58 - v43;
                        v49((char *)&v58 - v43, (char *)&v58 - v43, v48);
                        if (swift_isUniquelyReferenced_nonNull_native())
                        {
                          unint64_t v4 = v61;
                          unint64_t v52 = v66;
                          uint64_t v42 = v67;
                        }
                        else
                        {
                          unint64_t v52 = sub_251F0F4DC(0, *(void *)(v66 + 16) + 1, 1, v66);
                          unint64_t v4 = v61;
                          uint64_t v42 = v67;
                        }
                        unint64_t v54 = *(void *)(v52 + 16);
                        unint64_t v53 = *(void *)(v52 + 24);
                        if (v54 >= v53 >> 1) {
                          unint64_t v52 = sub_251F0F4DC(v53 > 1, v54 + 1, 1, v52);
                        }
                        *(void *)(v52 + 16) = v54 + 1;
                        unint64_t v55 = (*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
                        unint64_t v66 = v52;
                        uint64_t v39 = v49((char *)(v52 + v55 + *(void *)(v60 + 72) * v54), v51, v65);
                        uint64_t v41 = &qword_26B21FF90;
                      }
                      v40 += 16;
                      uint64_t v37 = v42 - 1;
                      uint64_t v38 = v64;
                    }
                    while (v37);
                    swift_bridgeObjectRelease();
                    unint64_t v6 = v59;
                    uint64_t v56 = v66;
                  }
                  else
                  {
                    uint64_t v56 = MEMORY[0x263F8EE78];
                  }
                  swift_bridgeObjectRelease();
                  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  unint64_t v74 = v6;
                  sub_251A0C988(v56, v33, isUniquelyReferenced_nonNull_native);
                  unint64_t v6 = v74;
                }
              }
            }
            unint64_t result = swift_bridgeObjectRelease();
            if (!v10) {
              goto LABEL_8;
            }
          }
          else
          {
            unint64_t result = swift_bridgeObjectRelease();
            if (!v10) {
              goto LABEL_8;
            }
          }
LABEL_7:
          unint64_t v13 = __clz(__rbit64(v10));
          v10 &= v10 - 1;
        }
      }
      int64_t v17 = v15 + 5;
      if (v17 < v73)
      {
        unint64_t v16 = *(void *)(v72 + 8 * v17);
        if (v16)
        {
          int64_t v12 = v17;
          goto LABEL_25;
        }
        while (1)
        {
          int64_t v12 = v17 + 1;
          if (__OFADD__(v17, 1)) {
            goto LABEL_51;
          }
          if (v12 >= v73) {
            break;
          }
          unint64_t v16 = *(void *)(v72 + 8 * v12);
          ++v17;
          if (v16) {
            goto LABEL_25;
          }
        }
      }
    }
LABEL_46:
    swift_release();
    swift_bridgeObjectRelease();
    return v6;
  }
  return sub_2519F9A5C(v5);
}

unint64_t sub_251C37C98(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0958);
    id v2 = (void *)sub_251F36700();
  }
  else
  {
    id v2 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v28 = v1 + 64;
  uint64_t v3 = -1;
  uint64_t v4 = -1 << *(unsigned char *)(v1 + 32);
  if (-v4 < 64) {
    uint64_t v3 = ~(-1 << -(char)v4);
  }
  unint64_t v5 = v3 & *(void *)(v1 + 64);
  int64_t v27 = (unint64_t)(63 - v4) >> 6;
  unint64_t v6 = (char *)v36 + 8;
  uint64_t v7 = (char *)v33 + 8;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  uint64_t v26 = v1;
  while (1)
  {
    if (v5)
    {
      uint64_t v14 = (v5 - 1) & v5;
      unint64_t v15 = __clz(__rbit64(v5)) | (v9 << 6);
      int64_t v16 = v9;
    }
    else
    {
      int64_t v17 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v27)
      {
LABEL_36:
        sub_251A1E630();
        return (unint64_t)v2;
      }
      unint64_t v18 = *(void *)(v28 + 8 * v17);
      int64_t v16 = v9 + 1;
      if (!v18)
      {
        int64_t v16 = v9 + 2;
        if (v9 + 2 >= v27) {
          goto LABEL_36;
        }
        unint64_t v18 = *(void *)(v28 + 8 * v16);
        if (!v18)
        {
          int64_t v16 = v9 + 3;
          if (v9 + 3 >= v27) {
            goto LABEL_36;
          }
          unint64_t v18 = *(void *)(v28 + 8 * v16);
          if (!v18)
          {
            int64_t v16 = v9 + 4;
            if (v9 + 4 >= v27) {
              goto LABEL_36;
            }
            unint64_t v18 = *(void *)(v28 + 8 * v16);
            if (!v18)
            {
              int64_t v19 = v9 + 5;
              if (v9 + 5 >= v27) {
                goto LABEL_36;
              }
              unint64_t v18 = *(void *)(v28 + 8 * v19);
              if (!v18)
              {
                while (1)
                {
                  int64_t v16 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_41;
                  }
                  if (v16 >= v27) {
                    goto LABEL_36;
                  }
                  unint64_t v18 = *(void *)(v28 + 8 * v16);
                  ++v19;
                  if (v18) {
                    goto LABEL_26;
                  }
                }
              }
              int64_t v16 = v9 + 5;
            }
          }
        }
      }
LABEL_26:
      uint64_t v14 = (v18 - 1) & v18;
      unint64_t v15 = __clz(__rbit64(v18)) + (v16 << 6);
    }
    sub_251A1A45C(*(void *)(v1 + 48) + 40 * v15, (uint64_t)v35);
    sub_251A0D51C(*(void *)(v1 + 56) + 32 * v15, (uint64_t)v6);
    v33[0] = v36[0];
    v33[1] = v36[1];
    uint64_t v34 = v37;
    v32[0] = v35[0];
    v32[1] = v35[1];
    sub_251A1A45C((uint64_t)v32, (uint64_t)v31);
    if (!swift_dynamicCast())
    {
      sub_251A1B064((uint64_t)v32, &qword_269BA0960);
LABEL_35:
      swift_bridgeObjectRelease();
      sub_251A1E630();
      swift_release();
      return 0;
    }
    sub_251A0D51C((uint64_t)v7, (uint64_t)v31);
    sub_251A1B064((uint64_t)v32, &qword_269BA0960);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAB0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    unint64_t result = sub_2519FE798(v29, v30);
    unint64_t v20 = result;
    if (v21)
    {
      unint64_t v10 = v7;
      uint64_t v11 = v6;
      int64_t v12 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      uint64_t *v12 = v29;
      v12[1] = v30;
      uint64_t v13 = v2[7];
      unint64_t result = swift_bridgeObjectRelease();
      *(void *)(v13 + 8 * v20) = v29;
      unint64_t v6 = v11;
      uint64_t v7 = v10;
      uint64_t v1 = v26;
      goto LABEL_8;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v22 = (uint64_t *)(v2[6] + 16 * result);
    *unint64_t v22 = v29;
    v22[1] = v30;
    *(void *)(v2[7] + 8 * result) = v29;
    uint64_t v23 = v2[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_39;
    }
    _OWORD v2[2] = v25;
LABEL_8:
    int64_t v9 = v16;
    unint64_t v5 = v14;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_251C38074(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  unint64_t result = sub_251F357E0();
  if (v6) {
    unint64_t result = v5;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_14;
  }
  return sub_251F358C0();
}

uint64_t sub_251C38128@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_251C40D80(a2, v4);
  uint64_t v10 = v9;
  sub_251C40A04(a1, objc_msgSend(a3, sel_softwareVersion), (char *)v22);
  int v11 = LOBYTE(v22[0]);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v22[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_251F34DA0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  uint64_t v16 = type metadata accessor for StaticHH2Update(0);
  if (v11 == 5) {
    unsigned __int8 v17 = *(unsigned char *)(v4 + *(int *)(v16 + 20));
  }
  else {
    unsigned __int8 v17 = v11;
  }
  if ((*(unsigned char *)(v4 + *(int *)(v16 + 20)) & 1) != 0
    && (*(unsigned char *)(v4 + *(int *)(v16 + 20)) - 2) >= 6u)
  {
    unsigned __int8 v19 = v17;
  }
  else
  {
    unsigned __int8 v19 = v11;
  }
  unsigned __int8 v23 = v19;
  if (!v10) {
    uint64_t v8 = 0;
  }
  v22[0] = v8;
  v22[1] = v10;
  sub_251C382F0((uint64_t)v14, &v23, v22, 0, 1, a4);
  sub_251C49540(v8, v10);
  sub_251A1B064((uint64_t)v14, &qword_26B21FF90);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a4, 0, 1, v16);
}

uint64_t sub_251C382F0@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  int v51 = a5;
  uint64_t v44 = a4;
  uint64_t v45 = a1;
  uint64_t v52 = a6;
  uint64_t v9 = (int *)type metadata accessor for StaticHH2Update(0);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v50 = (uint64_t)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v47 = (uint64_t)&v43 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v43 - v15;
  MEMORY[0x270FA5388](v14);
  unint64_t v18 = (char *)&v43 - v17;
  int v49 = *a2;
  uint64_t v19 = *a3;
  uint64_t v20 = a3[1];
  uint64_t v46 = v19;
  uint64_t v21 = sub_251F34DA0();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  BOOL v24 = (char *)&v43 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v25 - 8);
  int64_t v27 = (char *)&v43 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(v45, (uint64_t)v27, &qword_26B21FF90);
  sub_251C41D6C(v6, (uint64_t)v18, type metadata accessor for StaticHH2Update);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v27, 1, v21) == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v24, v18, v21);
    sub_251C37530((uint64_t)v18, type metadata accessor for StaticHH2Update);
    sub_251A1B064((uint64_t)v27, &qword_26B21FF90);
  }
  else
  {
    sub_251C37530((uint64_t)v18, type metadata accessor for StaticHH2Update);
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v24, v27, v21);
  }
  uint64_t v48 = v24;
  uint64_t v28 = v6;
  sub_251C41D6C(v6, (uint64_t)v16, type metadata accessor for StaticHH2Update);
  char v29 = v49;
  uint64_t v30 = v46;
  if (v49 == 8) {
    char v29 = v16[v9[5]];
  }
  sub_251C37530((uint64_t)v16, type metadata accessor for StaticHH2Update);
  uint64_t v31 = v47;
  sub_251C41D6C(v6, v47, type metadata accessor for StaticHH2Update);
  uint64_t v32 = v30;
  uint64_t v33 = v20;
  if (v20 == 1)
  {
    uint64_t v34 = (uint64_t *)(v31 + v9[6]);
    uint64_t v32 = *v34;
    uint64_t v33 = v34[1];
    swift_bridgeObjectRetain();
  }
  sub_251C49554(v30, v20);
  sub_251C37530(v31, type metadata accessor for StaticHH2Update);
  uint64_t v35 = v50;
  sub_251C41D6C(v28, v50, type metadata accessor for StaticHH2Update);
  if (v51)
  {
    uint64_t v38 = v35 + v9[7];
    uint64_t v37 = *(void *)v38;
    char v36 = *(unsigned char *)(v38 + 8);
  }
  else
  {
    char v36 = 0;
    uint64_t v37 = v44;
  }
  sub_251C37530(v35, type metadata accessor for StaticHH2Update);
  uint64_t v39 = v52;
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v22 + 32))(v52, v48, v21);
  *(unsigned char *)(v39 + v9[5]) = v29;
  uint64_t v41 = (uint64_t *)(v39 + v9[6]);
  *uint64_t v41 = v32;
  v41[1] = v33;
  uint64_t v42 = v39 + v9[7];
  *(void *)uint64_t v42 = v37;
  *(unsigned char *)(v42 + 8) = v36;
  return result;
}

uint64_t sub_251C38730@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for StaticHH2Update(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v12 = *a1;
  sub_251C41D6C(v3, (uint64_t)v11, type metadata accessor for StaticSoftwareUpdate.Kind);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
      uint64_t v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468) + 48);
      sub_251C42108((uint64_t)v11, a2, type metadata accessor for StaticSoftwareUpdateMetadata);
      *(unsigned char *)(a2 + v13) = v12;
      break;
    case 3u:
      return swift_storeEnumTagMultiPayload();
    default:
      sub_251C42108((uint64_t)v11, (uint64_t)v8, type metadata accessor for StaticHH2Update);
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      MEMORY[0x270FA5388](v14 - 8);
      uint64_t v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v17 = sub_251F34DA0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
      unsigned __int8 v20 = v12;
      long long v19 = xmmword_251F3BEC0;
      sub_251C382F0((uint64_t)v16, &v20, (uint64_t *)&v19, 0, 1, a2);
      sub_251A1B064((uint64_t)v16, &qword_26B21FF90);
      sub_251C37530((uint64_t)v8, type metadata accessor for StaticHH2Update);
      break;
  }
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_251C389C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v25[0] = a1;
  uint64_t v27 = a2;
  uint64_t v29 = a3;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E338);
  MEMORY[0x270FA5388](v3 - 8);
  unint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  uint64_t v6 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v9 = MEMORY[0x270FA5388](v28);
  uint64_t v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v25 - v12;
  uint64_t v14 = sub_251F34DA0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v18 - 8);
  unsigned __int8 v20 = (char *)v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v25[1];
  sub_251A1B128(v25[0], (uint64_t)v20, &qword_26B21FF90);
  sub_251C41D6C(v21, (uint64_t)v13, type metadata accessor for StaticSoftwareUpdate);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v13, v14);
    sub_251C37530((uint64_t)v13, type metadata accessor for StaticSoftwareUpdate);
    sub_251A1B064((uint64_t)v20, &qword_26B21FF90);
  }
  else
  {
    sub_251C37530((uint64_t)v13, type metadata accessor for StaticSoftwareUpdate);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v20, v14);
  }
  sub_251A1B128(v27, (uint64_t)v5, &qword_269B9E338);
  sub_251C41D6C(v21, (uint64_t)v11, type metadata accessor for StaticSoftwareUpdate);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v5, 1, v26) == 1)
  {
    uint64_t v22 = v28;
    sub_251C41D6C((uint64_t)&v11[*(int *)(v28 + 20)], (uint64_t)v8, type metadata accessor for StaticSoftwareUpdate.Kind);
    sub_251C37530((uint64_t)v11, type metadata accessor for StaticSoftwareUpdate);
    sub_251A1B064((uint64_t)v5, &qword_269B9E338);
  }
  else
  {
    sub_251C37530((uint64_t)v11, type metadata accessor for StaticSoftwareUpdate);
    sub_251C42108((uint64_t)v5, (uint64_t)v8, type metadata accessor for StaticSoftwareUpdate.Kind);
    uint64_t v22 = v28;
  }
  uint64_t v23 = v29;
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v29, v17, v14);
  return sub_251C42108((uint64_t)v8, v23 + *(int *)(v22 + 20), type metadata accessor for StaticSoftwareUpdate.Kind);
}

uint64_t StaticSoftwareUpdate.kind.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251C38E5C(type metadata accessor for StaticSoftwareUpdate, (uint64_t)type metadata accessor for StaticSoftwareUpdate.Kind, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_251C41D6C, a1);
}

uint64_t sub_251C38E5C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = a1(0);
  return a3(v4 + *(int *)(v8 + 20), a4, a2);
}

uint64_t static StaticSoftwareUpdate.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_251F34D70() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for StaticSoftwareUpdate(0) + 20);
  return _s13HomeDataModel20StaticSoftwareUpdateV4KindO2eeoiySbAE_AEtFZ_0(a1 + v4, a2 + v4);
}

uint64_t StaticSoftwareUpdate.hash(into:)()
{
  return StaticSoftwareUpdate.Kind.hash(into:)();
}

uint64_t sub_251C38F90()
{
  if (*v0) {
    return 1684957547;
  }
  else {
    return 25705;
  }
}

uint64_t sub_251C38FB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251C488C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251C38FE0(uint64_t a1)
{
  unint64_t v2 = sub_251C41CD0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C3901C(uint64_t a1)
{
  unint64_t v2 = sub_251C41CD0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticSoftwareUpdate.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0968);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251C41CD0();
  sub_251F36DA0();
  v8[15] = 0;
  sub_251F34DA0();
  sub_251C494B8(&qword_26B21E348, MEMORY[0x270FA96D8]);
  sub_251F36A20();
  if (!v1)
  {
    type metadata accessor for StaticSoftwareUpdate(0);
    v8[14] = 1;
    type metadata accessor for StaticSoftwareUpdate.Kind(0);
    sub_251C41D24(&qword_269BA0978, (void (*)(uint64_t))type metadata accessor for StaticSoftwareUpdate.Kind);
    sub_251F36A20();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t StaticSoftwareUpdate.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StaticSoftwareUpdate.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v3 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0980);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v27 = v6;
  uint64_t v28 = v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for StaticSoftwareUpdate(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251C41CD0();
  uint64_t v13 = (uint64_t)v29;
  sub_251F36D90();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v29 = a1;
  v23[1] = v3;
  BOOL v24 = v12;
  uint64_t v25 = v5;
  uint64_t v14 = sub_251F34DA0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v31 = 0;
  sub_251C494B8(&qword_269B9CC80, MEMORY[0x270FA96D8]);
  uint64_t v18 = v27;
  sub_251F36880();
  v23[0] = v15;
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  uint64_t v20 = (uint64_t)v24;
  v19(v24, v17, v14);
  char v30 = 1;
  sub_251C41D24(&qword_269BA0988, (void (*)(uint64_t))type metadata accessor for StaticSoftwareUpdate.Kind);
  uint64_t v21 = (uint64_t)v25;
  sub_251F36880();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v18);
  sub_251C42108(v21, v20 + *(int *)(v10 + 20), type metadata accessor for StaticSoftwareUpdate.Kind);
  sub_251C41D6C(v20, v26, type metadata accessor for StaticSoftwareUpdate);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v29);
  return sub_251C37530(v20, type metadata accessor for StaticSoftwareUpdate);
}

uint64_t sub_251C396D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((sub_251F34D70() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 20);
  return static StaticSoftwareUpdate.Kind.== infix(_:_:)(a1 + v6, a2 + v6);
}

uint64_t sub_251C39740()
{
  return sub_251F36D00();
}

uint64_t sub_251C397CC()
{
  return StaticSoftwareUpdate.Kind.hash(into:)();
}

uint64_t sub_251C39840()
{
  return sub_251F36D00();
}

uint64_t sub_251C398CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticSoftwareUpdate.init(from:)(a1, a2);
}

uint64_t sub_251C398E4(void *a1)
{
  return StaticSoftwareUpdate.encode(to:)(a1);
}

uint64_t StaticSoftwareUpdateMetadata.init(releaseNote:releaseDate:versionString:downloadSizeString:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  *a8 = a1;
  a8[1] = a2;
  uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
  uint64_t result = sub_251BBB1D0(a3, (uint64_t)a8 + updated[5]);
  uint64_t v16 = (void *)((char *)a8 + updated[6]);
  *uint64_t v16 = a4;
  v16[1] = a5;
  uint64_t v17 = (void *)((char *)a8 + updated[7]);
  void *v17 = a6;
  v17[1] = a7;
  return result;
}

uint64_t StaticSoftwareUpdateMetadata.releaseNote.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticSoftwareUpdateMetadata.releaseDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251C38E5C(type metadata accessor for StaticSoftwareUpdateMetadata, (uint64_t)&qword_26B21EC20, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_251A1B128, a1);
}

uint64_t StaticSoftwareUpdateMetadata.versionString.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticSoftwareUpdateMetadata.downloadSizeString.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticSoftwareUpdateMetadata.hash(into:)()
{
  uint64_t v1 = v0;
  if (*(void *)(v0 + 8))
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
  uint64_t v3 = v0 + updated[5];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(v3, (uint64_t)v6, &qword_26B21EC20);
  uint64_t v7 = sub_251F34D20();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (v9 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v9);
    uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
    sub_251F36CC0();
    sub_251C494B8(&qword_269B9CF80, MEMORY[0x270FA91F0]);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  if (*(void *)(v1 + updated[6] + 8))
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  if (!*(void *)(v1 + updated[7] + 8)) {
    return sub_251F36CC0();
  }
  sub_251F36CC0();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  return swift_bridgeObjectRelease();
}

unint64_t sub_251C39D28()
{
  unint64_t result = 0x4E657361656C6572;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x44657361656C6572;
      break;
    case 2:
      unint64_t result = 0x536E6F6973726576;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251C39DDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251C48990(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251C39E04(uint64_t a1)
{
  unint64_t v2 = sub_251C41DF4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C39E40(uint64_t a1)
{
  unint64_t v2 = sub_251C41DF4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticSoftwareUpdateMetadata.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0990);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251C41DF4();
  sub_251F36DA0();
  v8[15] = 0;
  sub_251F36910();
  if (!v1)
  {
    type metadata accessor for StaticSoftwareUpdateMetadata(0);
    v8[14] = 1;
    sub_251F34D20();
    sub_251C494B8(&qword_269B9F590, MEMORY[0x270FA91F0]);
    sub_251F36970();
    v8[13] = 2;
    sub_251F36910();
    v8[12] = 3;
    sub_251F36910();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t StaticSoftwareUpdateMetadata.hashValue.getter()
{
  uint64_t v1 = v0;
  sub_251F36CA0();
  if (*(void *)(v0 + 8))
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
  uint64_t v3 = v0 + updated[5];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(v3, (uint64_t)v6, &qword_26B21EC20);
  uint64_t v7 = sub_251F34D20();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (v9 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v9);
    uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
    sub_251F36CC0();
    sub_251C494B8(&qword_269B9CF80, MEMORY[0x270FA91F0]);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  if (*(void *)(v1 + updated[6] + 8))
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  if (*(void *)(v1 + updated[7] + 8))
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  return sub_251F36D00();
}

uint64_t StaticSoftwareUpdateMetadata.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA09A0);
  uint64_t v4 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v9 = (void *)((char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251C41DF4();
  sub_251F36D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v28 = 0;
  *uint64_t v9 = sub_251F36790();
  v9[1] = v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  v22[1] = v22;
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D20();
  char v27 = 1;
  sub_251C494B8(&qword_269B9DBE8, MEMORY[0x270FA91F0]);
  sub_251F367D0();
  sub_251BBB1D0((uint64_t)v13, (uint64_t)v9 + updated[5]);
  char v26 = 2;
  uint64_t v14 = sub_251F36790();
  uint64_t v15 = (uint64_t *)((char *)v9 + updated[6]);
  uint64_t *v15 = v14;
  v15[1] = v16;
  char v25 = 3;
  uint64_t v17 = sub_251F36790();
  uint64_t v19 = v18;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v24);
  uint64_t v20 = (uint64_t *)((char *)v9 + updated[7]);
  *uint64_t v20 = v17;
  v20[1] = v19;
  sub_251C41D6C((uint64_t)v9, v23, type metadata accessor for StaticSoftwareUpdateMetadata);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_251C37530((uint64_t)v9, type metadata accessor for StaticSoftwareUpdateMetadata);
}

uint64_t sub_251C3A72C(uint64_t a1, int *a2)
{
  uint64_t v4 = v2;
  sub_251F36CA0();
  if (*(void *)(v2 + 8))
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  uint64_t v5 = v2 + a2[5];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(v5, (uint64_t)v8, &qword_26B21EC20);
  uint64_t v9 = sub_251F34D20();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  if (v11 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v11);
    uint64_t v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
    sub_251F36CC0();
    sub_251C494B8(&qword_269B9CF80, MEMORY[0x270FA91F0]);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  if (*(void *)(v4 + a2[6] + 8))
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  if (*(void *)(v4 + a2[7] + 8))
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  return sub_251F36D00();
}

uint64_t sub_251C3A9E0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticSoftwareUpdateMetadata.init(from:)(a1, a2);
}

uint64_t sub_251C3A9F8(void *a1)
{
  return StaticSoftwareUpdateMetadata.encode(to:)(a1);
}

uint64_t StaticHH2Update.HH2State.hash(into:)()
{
  if (!*(void *)(v0 + 8)) {
    return sub_251F36CB0();
  }
  sub_251F36CB0();
  return sub_251F357B0();
}

uint64_t sub_251C3AA8C()
{
  if (*v0) {
    return 0x7964616572;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t sub_251C3AAC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251C48B90(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251C3AAF0(uint64_t a1)
{
  unint64_t v2 = sub_251C41E48();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C3AB2C(uint64_t a1)
{
  unint64_t v2 = sub_251C41E48();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251C3AB68(uint64_t a1)
{
  unint64_t v2 = sub_251C41EF0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C3ABA4(uint64_t a1)
{
  unint64_t v2 = sub_251C41EF0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251C3ABE0()
{
  return 0x4E657361656C6572;
}

uint64_t sub_251C3AC00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x4E657361656C6572 && a2 == 0xEB0000000065746FLL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_251F36B10();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_251C3ACB0(uint64_t a1)
{
  unint64_t v2 = sub_251C41E9C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C3ACEC(uint64_t a1)
{
  unint64_t v2 = sub_251C41E9C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticHH2Update.HH2State.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA09A8);
  uint64_t v21 = *(void *)(v3 - 8);
  uint64_t v22 = v3;
  MEMORY[0x270FA5388](v3);
  char v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA09B0);
  uint64_t v18 = *(void *)(v6 - 8);
  uint64_t v19 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v17 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA09B8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v1[1];
  uint64_t v20 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251C41E48();
  sub_251F36DA0();
  if (v12)
  {
    char v24 = 1;
    sub_251C41E9C();
    sub_251F36900();
    uint64_t v13 = v22;
    sub_251F369D0();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v13);
  }
  else
  {
    char v23 = 0;
    sub_251C41EF0();
    uint64_t v15 = v17;
    sub_251F36900();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v19);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t StaticHH2Update.HH2State.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_251F36CA0();
  sub_251F36CB0();
  if (v1) {
    sub_251F357B0();
  }
  return sub_251F36D00();
}

uint64_t StaticHH2Update.HH2State.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA09D8);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v30 = v3;
  uint64_t v31 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA09E0);
  uint64_t v34 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA09E8);
  uint64_t v33 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251C41E48();
  uint64_t v13 = v35;
  sub_251F36D90();
  if (v13) {
    goto LABEL_7;
  }
  uint64_t v14 = v34;
  uint64_t v29 = v7;
  uint64_t v35 = a1;
  uint64_t v15 = sub_251F368E0();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_251F36490();
    swift_allocError();
    uint64_t v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
    *uint64_t v22 = &type metadata for StaticHH2Update.HH2State;
    sub_251F36780();
    sub_251F36480();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x263F8DCB0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v10);
    a1 = v35;
LABEL_7:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v23);
  }
  if (*(unsigned char *)(v15 + 32))
  {
    char v37 = 1;
    sub_251C41E9C();
    sub_251F36770();
    uint64_t v16 = v30;
    uint64_t v17 = sub_251F36830();
    uint64_t v18 = v6;
    uint64_t v19 = v33;
    uint64_t v26 = v25;
    (*(void (**)(char *, uint64_t))(v31 + 8))(v18, v16);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v10);
  }
  else
  {
    char v36 = 0;
    sub_251C41EF0();
    sub_251F36770();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v10);
    uint64_t v17 = 0;
    uint64_t v26 = 0;
  }
  char v27 = v32;
  *uint64_t v32 = v17;
  v27[1] = v26;
  uint64_t v23 = (uint64_t)v35;
  return __swift_destroy_boxed_opaque_existential_0(v23);
}

uint64_t sub_251C3B530()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_251F36CA0();
  sub_251F36CB0();
  if (v1) {
    sub_251F357B0();
  }
  return sub_251F36D00();
}

uint64_t sub_251C3B5A0()
{
  if (!*(void *)(v0 + 8)) {
    return sub_251F36CB0();
  }
  sub_251F36CB0();
  return sub_251F357B0();
}

uint64_t sub_251C3B618()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_251F36CA0();
  sub_251F36CB0();
  if (v1) {
    sub_251F357B0();
  }
  return sub_251F36D00();
}

uint64_t sub_251C3B684@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return StaticHH2Update.HH2State.init(from:)(a1, a2);
}

uint64_t sub_251C3B69C(void *a1)
{
  return StaticHH2Update.HH2State.encode(to:)(a1);
}

uint64_t StaticHH2Update.state.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for StaticHH2Update(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t StaticHH2Update.hh2State.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for StaticHH2Update(0) + 24));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t StaticHH2Update.installingProgress.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for StaticHH2Update(0) + 28));
}

uint64_t StaticHH2Update.hash(into:)()
{
  sub_251F34DA0();
  sub_251C494B8((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA96D8]);
  sub_251F35610();
  uint64_t v1 = (int *)type metadata accessor for StaticHH2Update(0);
  if ((*(unsigned char *)(v0 + v1[5]) - 2) >= 6u) {
    sub_251F36CB0();
  }
  sub_251F36CB0();
  if (*(void *)(v0 + v1[6] + 8))
  {
    sub_251F36CB0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CB0();
  }
  if (*(unsigned char *)(v0 + v1[7] + 8) == 1) {
    return sub_251F36CC0();
  }
  sub_251F36CC0();
  return sub_251F36CF0();
}

unint64_t sub_251C3B8B4()
{
  unint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6574617473;
      break;
    case 2:
      unint64_t result = 0x6574617453326868;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251C3B938@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251C48C78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251C3B960(uint64_t a1)
{
  unint64_t v2 = sub_251C41F64();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C3B99C(uint64_t a1)
{
  unint64_t v2 = sub_251C41F64();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticHH2Update.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA09F0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251C41F64();
  sub_251F36DA0();
  LOBYTE(v11) = 0;
  sub_251F34DA0();
  sub_251C494B8(&qword_26B21E348, MEMORY[0x270FA96D8]);
  sub_251F36A20();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for StaticHH2Update(0);
    LOBYTE(v11) = *(unsigned char *)(v3 + *(int *)(v9 + 20));
    char v12 = 1;
    sub_251C41FB8();
    sub_251F36A20();
    long long v11 = *(_OWORD *)(v3 + *(int *)(v9 + 24));
    char v12 = 2;
    sub_251C4200C();
    sub_251F36A20();
    LOBYTE(v11) = 3;
    sub_251F36930();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticHH2Update.hashValue.getter()
{
  sub_251F36CA0();
  sub_251F34DA0();
  sub_251C494B8((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA96D8]);
  sub_251F35610();
  uint64_t v1 = (int *)type metadata accessor for StaticHH2Update(0);
  if ((*(unsigned char *)(v0 + v1[5]) - 2) >= 6u) {
    sub_251F36CB0();
  }
  sub_251F36CB0();
  if (*(void *)(v0 + v1[6] + 8))
  {
    sub_251F36CB0();
    sub_251F357B0();
  }
  else
  {
    sub_251F36CB0();
  }
  if (*(unsigned char *)(v0 + v1[7] + 8) == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    sub_251F36CC0();
    sub_251F36CF0();
  }
  return sub_251F36D00();
}

uint64_t StaticHH2Update.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0A10);
  uint64_t v4 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for StaticHH2Update(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251C41F64();
  sub_251F36D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v22 = v9;
  uint64_t v23 = v4;
  uint64_t v10 = sub_251F34DA0();
  char v24 = &v21;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v27) = 0;
  sub_251C494B8(&qword_269B9CC80, MEMORY[0x270FA96D8]);
  uint64_t v14 = v26;
  sub_251F36880();
  uint64_t v21 = v11;
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v16 = (uint64_t)v22;
  v15(v22, v13, v10);
  char v28 = 1;
  sub_251C42060();
  sub_251F36880();
  *(unsigned char *)(v16 + v7[5]) = v27;
  char v28 = 2;
  sub_251C420B4();
  sub_251F36880();
  *(_OWORD *)(v16 + v7[6]) = v27;
  LOBYTE(v27) = 3;
  uint64_t v17 = sub_251F367B0();
  LOBYTE(v13) = v18;
  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v14);
  uint64_t v19 = v16 + v7[7];
  *(void *)uint64_t v19 = v17;
  *(unsigned char *)(v19 + 8) = v13 & 1;
  sub_251C41D6C(v16, v25, type metadata accessor for StaticHH2Update);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_251C37530(v16, type metadata accessor for StaticHH2Update);
}

uint64_t sub_251C3C1B0(uint64_t a1, int *a2)
{
  sub_251F34DA0();
  sub_251C494B8((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA96D8]);
  sub_251F35610();
  if ((*(unsigned char *)(v2 + a2[5]) - 2) >= 6u) {
    sub_251F36CB0();
  }
  sub_251F36CB0();
  if (*(void *)(v2 + a2[6] + 8))
  {
    sub_251F36CB0();
    sub_251F357B0();
  }
  else
  {
    sub_251F36CB0();
  }
  if (*(unsigned char *)(v2 + a2[7] + 8) == 1) {
    return sub_251F36CC0();
  }
  sub_251F36CC0();
  return sub_251F36CF0();
}

uint64_t sub_251C3C2E8(uint64_t a1, int *a2)
{
  sub_251F36CA0();
  sub_251F34DA0();
  sub_251C494B8((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA96D8]);
  sub_251F35610();
  if ((*(unsigned char *)(v2 + a2[5]) - 2) >= 6u) {
    sub_251F36CB0();
  }
  sub_251F36CB0();
  if (*(void *)(v2 + a2[6] + 8))
  {
    sub_251F36CB0();
    sub_251F357B0();
  }
  else
  {
    sub_251F36CB0();
  }
  if (*(unsigned char *)(v2 + a2[7] + 8) == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    sub_251F36CC0();
    sub_251F36CF0();
  }
  return sub_251F36D00();
}

uint64_t sub_251C3C438@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticHH2Update.init(from:)(a1, a2);
}

uint64_t sub_251C3C450(void *a1)
{
  return StaticHH2Update.encode(to:)(a1);
}

uint64_t StaticSoftwareUpdate.Kind.hash(into:)()
{
  uint64_t updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
  uint64_t v2 = MEMORY[0x270FA5388](updated - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v18 - v5;
  uint64_t v7 = (int *)type metadata accessor for StaticHH2Update(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251C41D6C(v0, (uint64_t)v12, type metadata accessor for StaticSoftwareUpdate.Kind);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      char v13 = v12[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468) + 48)];
      sub_251C42108((uint64_t)v12, (uint64_t)v6, type metadata accessor for StaticSoftwareUpdateMetadata);
      sub_251F36CB0();
      StaticSoftwareUpdateMetadata.hash(into:)();
      if ((v13 - 2) >= 6u) {
        sub_251F36CB0();
      }
      sub_251F36CB0();
      uint64_t v16 = type metadata accessor for StaticSoftwareUpdateMetadata;
      uint64_t v17 = (uint64_t)v6;
      return sub_251C37530(v17, v16);
    case 2u:
      char v14 = v12[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468) + 48)];
      sub_251C42108((uint64_t)v12, (uint64_t)v4, type metadata accessor for StaticSoftwareUpdateMetadata);
      sub_251F36CB0();
      StaticSoftwareUpdateMetadata.hash(into:)();
      if ((v14 - 2) >= 6u) {
        sub_251F36CB0();
      }
      sub_251F36CB0();
      uint64_t v16 = type metadata accessor for StaticSoftwareUpdateMetadata;
      uint64_t v17 = (uint64_t)v4;
      return sub_251C37530(v17, v16);
    case 3u:
      return sub_251F36CB0();
    default:
      sub_251C42108((uint64_t)v12, (uint64_t)v9, type metadata accessor for StaticHH2Update);
      sub_251F36CB0();
      sub_251F34DA0();
      sub_251C494B8((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA96D8]);
      sub_251F35610();
      if ((v9[v7[5]] - 2) >= 6u) {
        sub_251F36CB0();
      }
      sub_251F36CB0();
      if (*(void *)&v9[v7[6] + 8])
      {
        sub_251F36CB0();
        sub_251F357B0();
      }
      else
      {
        sub_251F36CB0();
      }
      if (v9[v7[7] + 8] == 1)
      {
        sub_251F36CC0();
      }
      else
      {
        sub_251F36CC0();
        sub_251F36CF0();
      }
      uint64_t v16 = type metadata accessor for StaticHH2Update;
      uint64_t v17 = (uint64_t)v9;
      return sub_251C37530(v17, v16);
  }
}

unint64_t sub_251C3C8AC()
{
  unint64_t result = 0x50656D6F48326868;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x50656D6F48316868;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251C3C94C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251C48E10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251C3C974(uint64_t a1)
{
  unint64_t v2 = sub_251C42170();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C3C9B0(uint64_t a1)
{
  unint64_t v2 = sub_251C42170();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251C3C9EC(uint64_t a1)
{
  unint64_t v2 = sub_251C4226C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C3CA28(uint64_t a1)
{
  unint64_t v2 = sub_251C4226C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251C3CA64(uint64_t a1)
{
  unint64_t v2 = sub_251C422C0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C3CAA0(uint64_t a1)
{
  unint64_t v2 = sub_251C422C0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251C3CADC()
{
  if (*v0) {
    return 0x6574617473;
  }
  else {
    return 0x617461646174656DLL;
  }
}

uint64_t sub_251C3CB14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251C48FB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251C3CB3C(uint64_t a1)
{
  unint64_t v2 = sub_251C42218();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C3CB78(uint64_t a1)
{
  unint64_t v2 = sub_251C42218();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251C3CBB4(uint64_t a1)
{
  unint64_t v2 = sub_251C421C4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C3CBF0(uint64_t a1)
{
  unint64_t v2 = sub_251C421C4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticSoftwareUpdate.Kind.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0A28);
  uint64_t v48 = *(void *)(v2 - 8);
  uint64_t v49 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v46 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0A30);
  uint64_t v55 = *(void *)(v4 - 8);
  uint64_t v56 = v4;
  MEMORY[0x270FA5388](v4);
  unint64_t v54 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0A38);
  uint64_t v52 = *(void *)(v6 - 8);
  uint64_t v53 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v50 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
  uint64_t v8 = MEMORY[0x270FA5388](updated);
  uint64_t v51 = (uint64_t)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v47 = (uint64_t)&v43 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0A40);
  uint64_t v44 = *(void *)(v11 - 8);
  uint64_t v45 = v11;
  MEMORY[0x270FA5388](v11);
  char v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for StaticHH2Update(0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0A48);
  uint64_t v61 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  uint64_t v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251C42170();
  uint64_t v58 = v21;
  sub_251F36DA0();
  sub_251C41D6C(v62, (uint64_t)v19, type metadata accessor for StaticSoftwareUpdate.Kind);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      char v26 = v19[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468) + 48)];
      uint64_t v27 = v47;
      sub_251C42108((uint64_t)v19, v47, type metadata accessor for StaticSoftwareUpdateMetadata);
      char v67 = 1;
      sub_251C4226C();
      char v28 = v50;
      uint64_t v30 = v58;
      uint64_t v29 = v59;
      sub_251F36900();
      char v66 = 0;
      sub_251C41D24(&qword_269BA0A68, (void (*)(uint64_t))type metadata accessor for StaticSoftwareUpdateMetadata);
      uint64_t v31 = v53;
      uint64_t v32 = v60;
      sub_251F36A20();
      if (!v32)
      {
        char v65 = v26;
        char v64 = 1;
        sub_251C41FB8();
        sub_251F36A20();
      }
      (*(void (**)(char *, uint64_t))(v52 + 8))(v28, v31);
      sub_251C37530(v27, type metadata accessor for StaticSoftwareUpdateMetadata);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v30, v29);
      break;
    case 2u:
      char v33 = v19[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468) + 48)];
      uint64_t v34 = v51;
      sub_251C42108((uint64_t)v19, v51, type metadata accessor for StaticSoftwareUpdateMetadata);
      char v71 = 2;
      sub_251C42218();
      uint64_t v35 = v54;
      char v37 = v58;
      uint64_t v36 = v59;
      sub_251F36900();
      char v70 = 0;
      sub_251C41D24(&qword_269BA0A68, (void (*)(uint64_t))type metadata accessor for StaticSoftwareUpdateMetadata);
      uint64_t v38 = v56;
      uint64_t v39 = v60;
      sub_251F36A20();
      if (!v39)
      {
        char v69 = v33;
        char v68 = 1;
        sub_251C41FB8();
        sub_251F36A20();
      }
      (*(void (**)(char *, uint64_t))(v55 + 8))(v35, v38);
      sub_251C37530(v34, type metadata accessor for StaticSoftwareUpdateMetadata);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v37, v36);
      break;
    case 3u:
      char v72 = 3;
      sub_251C421C4();
      uint64_t v40 = v46;
      uint64_t v42 = v58;
      uint64_t v41 = v59;
      sub_251F36900();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v40, v49);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v42, v41);
      break;
    default:
      sub_251C42108((uint64_t)v19, (uint64_t)v16, type metadata accessor for StaticHH2Update);
      char v63 = 0;
      sub_251C422C0();
      uint64_t v23 = v58;
      uint64_t v22 = v59;
      sub_251F36900();
      sub_251C41D24(&qword_269B9E110, (void (*)(uint64_t))type metadata accessor for StaticHH2Update);
      uint64_t v24 = v45;
      sub_251F36A20();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v13, v24);
      sub_251C37530((uint64_t)v16, type metadata accessor for StaticHH2Update);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v23, v22);
      break;
  }
  return result;
}

uint64_t StaticSoftwareUpdate.Kind.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StaticSoftwareUpdate.Kind.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0A80);
  uint64_t v57 = *(void *)(v3 - 8);
  uint64_t v58 = v3;
  MEMORY[0x270FA5388](v3);
  char v64 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0A88);
  uint64_t v61 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  char v65 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0A90);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v59 = v6;
  uint64_t v60 = v7;
  MEMORY[0x270FA5388](v6);
  char v69 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0A98);
  uint64_t v56 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  char v63 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0AA0);
  uint64_t v66 = *(void *)(v10 - 8);
  uint64_t v67 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v52 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v22 = (char *)&v52 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v52 - v23;
  uint64_t v25 = a1[3];
  char v71 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v25);
  sub_251C42170();
  uint64_t v26 = v72;
  sub_251F36D90();
  if (v26) {
    goto LABEL_13;
  }
  uint64_t v52 = v22;
  uint64_t v53 = v19;
  uint64_t v72 = 0;
  uint64_t v28 = v68;
  uint64_t v27 = v69;
  unint64_t v54 = v16;
  uint64_t v55 = v24;
  uint64_t v29 = v70;
  uint64_t v30 = v67;
  uint64_t v31 = sub_251F368E0();
  uint64_t v32 = v31;
  if (*(void *)(v31 + 16) != 1)
  {
    uint64_t v38 = sub_251F36490();
    swift_allocError();
    uint64_t v40 = v39;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
    *uint64_t v40 = v13;
    sub_251F36780();
    sub_251F36480();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v38 - 8) + 104))(v40, *MEMORY[0x263F8DCB0], v38);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v12, v30);
LABEL_13:
    uint64_t v36 = (uint64_t)v71;
    return __swift_destroy_boxed_opaque_existential_0(v36);
  }
  switch(*(unsigned char *)(v31 + 32))
  {
    case 1:
      char v76 = 1;
      sub_251C4226C();
      uint64_t v41 = v27;
      uint64_t v42 = v72;
      sub_251F36770();
      if (v42) {
        goto LABEL_12;
      }
      uint64_t v72 = v32;
      type metadata accessor for StaticSoftwareUpdateMetadata(0);
      char v75 = 0;
      sub_251C41D24(&qword_269BA0AA8, (void (*)(uint64_t))type metadata accessor for StaticSoftwareUpdateMetadata);
      uint64_t v43 = (uint64_t)v53;
      uint64_t v44 = v59;
      sub_251F36880();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
      char v74 = 1;
      sub_251C42060();
      sub_251F36880();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v41, v44);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v12, v30);
      goto LABEL_16;
    case 2:
      char v69 = (char *)v13;
      char v79 = 2;
      sub_251C42218();
      uint64_t v45 = v72;
      sub_251F36770();
      if (v45) {
        goto LABEL_12;
      }
      uint64_t v72 = v32;
      type metadata accessor for StaticSoftwareUpdateMetadata(0);
      char v78 = 0;
      sub_251C41D24(&qword_269BA0AA8, (void (*)(uint64_t))type metadata accessor for StaticSoftwareUpdateMetadata);
      uint64_t v43 = (uint64_t)v54;
      uint64_t v46 = v29;
      sub_251F36880();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
      char v77 = 1;
      sub_251C42060();
      uint64_t v50 = v65;
      sub_251F36880();
      uint64_t v51 = v66;
      (*(void (**)(char *, uint64_t))(v61 + 8))(v50, v46);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v12, v30);
LABEL_16:
      swift_storeEnumTagMultiPayload();
      uint64_t v37 = (uint64_t)v55;
      sub_251C42108(v43, (uint64_t)v55, type metadata accessor for StaticSoftwareUpdate.Kind);
      goto LABEL_17;
    case 3:
      char v80 = 3;
      sub_251C421C4();
      uint64_t v47 = v64;
      uint64_t v48 = v72;
      sub_251F36770();
      if (v48) {
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v57 + 8))(v47, v58);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v12, v30);
      uint64_t v37 = (uint64_t)v55;
      swift_storeEnumTagMultiPayload();
LABEL_17:
      uint64_t v36 = (uint64_t)v71;
      goto LABEL_18;
    default:
      char v73 = 0;
      sub_251C422C0();
      char v33 = v63;
      uint64_t v34 = v72;
      sub_251F36770();
      if (v34)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v66 + 8))(v12, v30);
        goto LABEL_13;
      }
      char v69 = (char *)v13;
      type metadata accessor for StaticHH2Update(0);
      sub_251C41D24(&qword_269B9E208, (void (*)(uint64_t))type metadata accessor for StaticHH2Update);
      uint64_t v35 = (uint64_t)v52;
      sub_251F36880();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v33, v28);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v12, v30);
      uint64_t v36 = (uint64_t)v71;
      swift_storeEnumTagMultiPayload();
      uint64_t v37 = (uint64_t)v55;
      sub_251C42108(v35, (uint64_t)v55, type metadata accessor for StaticSoftwareUpdate.Kind);
LABEL_18:
      sub_251C42108(v37, v62, type metadata accessor for StaticSoftwareUpdate.Kind);
      break;
  }
  return __swift_destroy_boxed_opaque_existential_0(v36);
}

uint64_t sub_251C3DF7C()
{
  return sub_251F36D00();
}

uint64_t sub_251C3DFC0()
{
  return sub_251F36D00();
}

uint64_t sub_251C3DFFC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticSoftwareUpdate.Kind.init(from:)(a1, a2);
}

uint64_t sub_251C3E014(void *a1)
{
  return StaticSoftwareUpdate.Kind.encode(to:)(a1);
}

BOOL static StaticSoftwareUpdate.InstallingStateType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t StaticSoftwareUpdate.InstallingStateType.hash(into:)()
{
  return sub_251F36CB0();
}

uint64_t sub_251C3E070()
{
  if (*v0) {
    return 0x7571655272657375;
  }
  else {
    return 0x65746F6D6572;
  }
}

uint64_t sub_251C3E0B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251C490A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251C3E0DC(uint64_t a1)
{
  unint64_t v2 = sub_251C42314();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C3E118(uint64_t a1)
{
  unint64_t v2 = sub_251C42314();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251C3E154(uint64_t a1)
{
  unint64_t v2 = sub_251C423BC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C3E190(uint64_t a1)
{
  unint64_t v2 = sub_251C423BC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251C3E1CC(uint64_t a1)
{
  unint64_t v2 = sub_251C42368();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C3E208(uint64_t a1)
{
  unint64_t v2 = sub_251C42368();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticSoftwareUpdate.InstallingStateType.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0AB0);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0AB8);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0AC0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251C42314();
  sub_251F36DA0();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_251C42368();
    uint64_t v14 = v18;
    sub_251F36900();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_251C423BC();
    sub_251F36900();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

uint64_t StaticSoftwareUpdate.InstallingStateType.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StaticSoftwareUpdate.InstallingStateType.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0AE0);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0AE8);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0AF0);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251C42314();
  uint64_t v11 = v32;
  sub_251F36D90();
  if (v11) {
    goto LABEL_6;
  }
  uint64_t v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint64_t v14 = v10;
  uint64_t v15 = sub_251F368E0();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_251F36490();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
    *char v22 = &type metadata for StaticSoftwareUpdate.InstallingStateType;
    sub_251F36780();
    sub_251F36480();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x263F8DCB0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_251C42368();
    uint64_t v18 = v14;
    sub_251F36770();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_251C423BC();
    sub_251F36770();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  unsigned char *v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_0(v23);
}

uint64_t sub_251C3E988@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return StaticSoftwareUpdate.InstallingStateType.init(from:)(a1, a2);
}

uint64_t sub_251C3E9A0(void *a1)
{
  return StaticSoftwareUpdate.InstallingStateType.encode(to:)(a1);
}

uint64_t StaticSoftwareUpdate.State.hash(into:)()
{
  if ((*v0 - 2) >= 6u) {
    sub_251F36CB0();
  }
  return sub_251F36CB0();
}

uint64_t sub_251C3EA18(uint64_t a1)
{
  unint64_t v2 = sub_251C4265C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C3EA54(uint64_t a1)
{
  unint64_t v2 = sub_251C4265C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251C3EA90()
{
  uint64_t result = 1701736302;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C62616C69617661;
      break;
    case 2:
      uint64_t result = 0x64616F6C6E776F64;
      break;
    case 3:
      uint64_t result = 0x64616F6C6E776F64;
      break;
    case 4:
      uint64_t result = 0x6574736575716572;
      break;
    case 5:
      uint64_t result = 0x696C6C6174736E69;
      break;
    case 6:
      uint64_t result = 0x656C6C6174736E69;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251C3EB88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251C491B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251C3EBB0(uint64_t a1)
{
  unint64_t v2 = sub_251C42410();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C3EBEC(uint64_t a1)
{
  unint64_t v2 = sub_251C42410();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251C3EC28(uint64_t a1)
{
  unint64_t v2 = sub_251C425B4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C3EC64(uint64_t a1)
{
  unint64_t v2 = sub_251C425B4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251C3ECA0(uint64_t a1)
{
  unint64_t v2 = sub_251C42608();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C3ECDC(uint64_t a1)
{
  unint64_t v2 = sub_251C42608();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251C3ED18(uint64_t a1)
{
  unint64_t v2 = sub_251C42464();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C3ED54(uint64_t a1)
{
  unint64_t v2 = sub_251C42464();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251C3ED90(uint64_t a1)
{
  unint64_t v2 = sub_251C424B8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C3EDCC(uint64_t a1)
{
  unint64_t v2 = sub_251C424B8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251C3EE08(uint64_t a1)
{
  unint64_t v2 = sub_251C426B0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C3EE44(uint64_t a1)
{
  unint64_t v2 = sub_251C426B0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251C3EE80(uint64_t a1)
{
  unint64_t v2 = sub_251C42560();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251C3EEBC(uint64_t a1)
{
  unint64_t v2 = sub_251C42560();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticSoftwareUpdate.State.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0AF8);
  uint64_t v51 = *(void *)(v3 - 8);
  uint64_t v52 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v48 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0B00);
  uint64_t v49 = *(void *)(v5 - 8);
  uint64_t v50 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v47 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0B08);
  uint64_t v45 = *(void *)(v7 - 8);
  uint64_t v46 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v44 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0B10);
  uint64_t v42 = *(void *)(v9 - 8);
  uint64_t v43 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v41 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0B18);
  uint64_t v39 = *(void *)(v11 - 8);
  uint64_t v40 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0B20);
  uint64_t v37 = *(void *)(v14 - 8);
  uint64_t v38 = v14;
  MEMORY[0x270FA5388](v14);
  char v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0B28);
  uint64_t v36 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0B30);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v53 = v20;
  uint64_t v54 = v21;
  MEMORY[0x270FA5388](v20);
  int v23 = *v1;
  uint64_t v24 = a1[3];
  uint64_t v25 = a1;
  uint64_t v26 = (char *)&v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v25, v24);
  sub_251C42410();
  sub_251F36DA0();
  switch(v23)
  {
    case 2:
      char v55 = 0;
      sub_251C426B0();
      uint64_t v27 = v53;
      sub_251F36900();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v19, v17);
      goto LABEL_10;
    case 3:
      char v56 = 1;
      sub_251C4265C();
      uint64_t v27 = v53;
      sub_251F36900();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v38);
      goto LABEL_10;
    case 4:
      char v57 = 2;
      sub_251C42608();
      uint64_t v27 = v53;
      sub_251F36900();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v40);
      goto LABEL_10;
    case 5:
      char v58 = 3;
      sub_251C425B4();
      uint64_t v32 = v41;
      uint64_t v27 = v53;
      sub_251F36900();
      uint64_t v34 = v42;
      uint64_t v33 = v43;
      goto LABEL_9;
    case 6:
      char v59 = 4;
      sub_251C42560();
      uint64_t v32 = v44;
      uint64_t v27 = v53;
      sub_251F36900();
      uint64_t v34 = v45;
      uint64_t v33 = v46;
      goto LABEL_9;
    case 7:
      char v62 = 6;
      sub_251C42464();
      uint64_t v32 = v48;
      uint64_t v27 = v53;
      sub_251F36900();
      uint64_t v34 = v51;
      uint64_t v33 = v52;
LABEL_9:
      (*(void (**)(char *, uint64_t))(v34 + 8))(v32, v33);
LABEL_10:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v26, v27);
      break;
    default:
      char v61 = 5;
      sub_251C424B8();
      uint64_t v28 = v47;
      uint64_t v29 = v53;
      sub_251F36900();
      char v60 = v23 & 1;
      sub_251C4250C();
      uint64_t v30 = v50;
      sub_251F36A20();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v28, v30);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v26, v29);
      break;
  }
  return result;
}

uint64_t StaticSoftwareUpdate.State.hashValue.getter()
{
  char v1 = *v0;
  sub_251F36CA0();
  if ((v1 - 2) >= 6u) {
    sub_251F36CB0();
  }
  sub_251F36CB0();
  return sub_251F36D00();
}

uint64_t StaticSoftwareUpdate.State.init(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  char v62 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0B80);
  uint64_t v57 = *(void *)(v3 - 8);
  uint64_t v58 = v3;
  MEMORY[0x270FA5388](v3);
  char v61 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0B88);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v59 = v5;
  uint64_t v60 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v66 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0B90);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v55 = v8;
  uint64_t v56 = v9;
  MEMORY[0x270FA5388](v8);
  char v65 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0B98);
  uint64_t v53 = *(void *)(v11 - 8);
  uint64_t v54 = v11;
  MEMORY[0x270FA5388](v11);
  char v64 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0BA0);
  uint64_t v51 = *(void *)(v13 - 8);
  uint64_t v52 = v13;
  MEMORY[0x270FA5388](v13);
  char v63 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0BA8);
  uint64_t v49 = *(void *)(v15 - 8);
  uint64_t v50 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0BB0);
  uint64_t v48 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0BB8);
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1[3];
  uint64_t v67 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v25);
  sub_251C42410();
  uint64_t v26 = v68;
  sub_251F36D90();
  if (v26) {
    goto LABEL_12;
  }
  uint64_t v46 = v20;
  uint64_t v45 = v18;
  uint64_t v47 = v17;
  uint64_t v28 = v63;
  uint64_t v27 = v64;
  uint64_t v29 = v65;
  uint64_t v30 = v66;
  uint64_t v68 = v22;
  uint64_t v31 = sub_251F368E0();
  if (*(void *)(v31 + 16) != 1)
  {
    uint64_t v34 = sub_251F36490();
    swift_allocError();
    uint64_t v35 = v21;
    uint64_t v37 = v36;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
    *uint64_t v37 = &type metadata for StaticSoftwareUpdate.State;
    sub_251F36780();
    sub_251F36480();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v34 - 8) + 104))(v37, *MEMORY[0x263F8DCB0], v34);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v24, v35);
LABEL_12:
    uint64_t v42 = (uint64_t)v67;
    return __swift_destroy_boxed_opaque_existential_0(v42);
  }
  switch(*(unsigned char *)(v31 + 32))
  {
    case 1:
      char v70 = 1;
      sub_251C4265C();
      uint64_t v38 = v47;
      sub_251F36770();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v38, v50);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v24, v21);
      char v33 = 3;
      break;
    case 2:
      char v71 = 2;
      sub_251C42608();
      sub_251F36770();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v28, v52);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v24, v21);
      char v33 = 4;
      break;
    case 3:
      char v72 = 3;
      sub_251C425B4();
      sub_251F36770();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v27, v54);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v24, v21);
      char v33 = 5;
      break;
    case 4:
      char v73 = 4;
      sub_251C42560();
      sub_251F36770();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v29, v55);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v24, v21);
      char v33 = 6;
      break;
    case 5:
      char v75 = 5;
      sub_251C424B8();
      sub_251F36770();
      sub_251C42704();
      uint64_t v39 = v59;
      sub_251F36880();
      uint64_t v40 = v68;
      (*(void (**)(char *, uint64_t))(v60 + 8))(v30, v39);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v24, v21);
      char v33 = v74;
      break;
    case 6:
      char v76 = 6;
      sub_251C42464();
      uint64_t v41 = v61;
      sub_251F36770();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v41, v58);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v24, v21);
      char v33 = 7;
      break;
    default:
      char v69 = 0;
      sub_251C426B0();
      uint64_t v32 = v46;
      sub_251F36770();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v32, v45);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v24, v21);
      char v33 = 2;
      break;
  }
  uint64_t v42 = (uint64_t)v67;
  char *v62 = v33;
  return __swift_destroy_boxed_opaque_existential_0(v42);
}

uint64_t sub_251C40094()
{
  if ((*v0 - 2) >= 6u) {
    sub_251F36CB0();
  }
  return sub_251F36CB0();
}

uint64_t sub_251C400F4()
{
  char v1 = *v0;
  sub_251F36CA0();
  if ((v1 - 2) >= 6u) {
    sub_251F36CB0();
  }
  sub_251F36CB0();
  return sub_251F36D00();
}

uint64_t sub_251C4016C@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return StaticSoftwareUpdate.State.init(from:)(a1, a2);
}

uint64_t sub_251C40184(void *a1)
{
  return StaticSoftwareUpdate.State.encode(to:)(a1);
}

uint64_t sub_251C4019C@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v8 = (uint64_t *)((char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = a1;
  sub_251C40888(v13, objc_msgSend(a2, sel_softwareVersion), (char *)&v71);
  LODWORD(a1) = v71;
  id v14 = objc_msgSend(v13, sel_documentation);
  uint64_t v67 = v10;
  uint64_t v68 = a3;
  uint64_t v64 = v9;
  id v69 = a2;
  int v62 = (int)a1;
  char v61 = v12;
  if (v14)
  {
    id v15 = v14;
    id v16 = objc_msgSend(v15, sel_releaseNotes);
    if (v16 || (id v16 = objc_msgSend(v15, sel_releaseNotesSummary)) != 0)
    {
      uint64_t v17 = v16;
      id v18 = objc_msgSend(v16, sel_stringValue);
      uint64_t v19 = sub_251F356F0();
      uint64_t v63 = v20;

      goto LABEL_7;
    }
  }
  uint64_t v19 = 0;
  uint64_t v63 = 0;
LABEL_7:
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  uint64_t v66 = &v61;
  uint64_t v22 = *(void *)(*(void *)(v21 - 8) + 64);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v23 = (char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_251F34D20();
  uint64_t v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  MEMORY[0x270FA5388](v25);
  uint64_t v26 = (uint64_t)v23;
  char v65 = v23;
  sub_251A1B128((uint64_t)v23, (uint64_t)v23, &qword_26B21EC20);
  id v27 = objc_msgSend(v13, sel_displayableVersion);
  uint64_t v28 = sub_251F356F0();
  uint64_t v30 = v29;

  if (objc_msgSend(v13, sel_downloadSize))
  {
    id v70 = objc_msgSend(v13, sel_downloadSize);
    uint64_t v71 = sub_251F36AB0();
    uint64_t v72 = v31;
    sub_251F35800();
    uint64_t v33 = v71;
    uint64_t v32 = v72;
  }
  else
  {
    uint64_t v33 = 0;
    uint64_t v32 = 0;
  }
  uint64_t v34 = v63;
  *uint64_t v8 = v19;
  v8[1] = v34;
  sub_251BBB1D0(v26, (uint64_t)v8 + updated[5]);
  uint64_t v35 = (uint64_t *)((char *)v8 + updated[6]);
  *uint64_t v35 = v28;
  v35[1] = v30;
  uint64_t v36 = (uint64_t *)((char *)v8 + updated[7]);
  *uint64_t v36 = v33;
  v36[1] = v32;
  id v37 = v69;
  id v38 = objc_msgSend(v69, sel_category);
  id v39 = objc_msgSend(v38, sel_categoryType);

  uint64_t v40 = sub_251F356F0();
  uint64_t v42 = v41;

  if (v40 == sub_251F356F0() && v42 == v43)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v44 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v44 & 1) == 0)
    {
      uint64_t v47 = v64;
      uint64_t v48 = (uint64_t)v61;
      uint64_t v53 = (uint64_t)&v61[*(int *)(v64 + 20)];
      uint64_t v54 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468) + 48);
      sub_251C41D6C((uint64_t)v8, v53, type metadata accessor for StaticSoftwareUpdateMetadata);
      *(unsigned char *)(v53 + v54) = v62;
      type metadata accessor for StaticSoftwareUpdate.Kind(0);
      goto LABEL_18;
    }
  }
  id v45 = objc_msgSend(v13, sel_documentation, v61);
  id v46 = objc_msgSend(v45, sel_licenseAgreement);

  uint64_t v47 = v64;
  if (v46)
  {
    uint64_t v48 = (uint64_t)v61;
    uint64_t v49 = (uint64_t)&v61[*(int *)(v64 + 20)];
    uint64_t v50 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468) + 48);
    sub_251C41D6C((uint64_t)v8, v49, type metadata accessor for StaticSoftwareUpdateMetadata);
    *(unsigned char *)(v49 + v50) = v62;
    type metadata accessor for StaticSoftwareUpdate.Kind(0);
LABEL_18:
    swift_storeEnumTagMultiPayload();
    id v55 = objc_msgSend(v37, sel_uniqueIdentifier);
    uint64_t v56 = sub_251F34DA0();
    uint64_t v57 = *(void *)(v56 - 8);
    MEMORY[0x270FA5388](v56);
    uint64_t v59 = (char *)&v61 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34D80();

    sub_251C37530((uint64_t)v8, type metadata accessor for StaticSoftwareUpdateMetadata);
    sub_251A1B064((uint64_t)v65, &qword_26B21EC20);
    (*(void (**)(uint64_t, char *, uint64_t))(v57 + 32))(v48, v59, v56);
    uint64_t v52 = v68;
    sub_251C42108(v48, v68, type metadata accessor for StaticSoftwareUpdate);
    uint64_t v51 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56))(v52, v51, 1, v47);
  }

  sub_251C37530((uint64_t)v8, type metadata accessor for StaticSoftwareUpdateMetadata);
  sub_251A1B064((uint64_t)v65, &qword_26B21EC20);
  uint64_t v51 = 1;
  uint64_t v52 = v68;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56))(v52, v51, 1, v47);
}

void sub_251C40888(void *a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  switch((unint64_t)objc_msgSend(a1, sel_state))
  {
    case 0uLL:

      char v6 = 3;
      break;
    case 1uLL:

      char v6 = 4;
      break;
    case 2uLL:

      char v6 = 5;
      break;
    case 3uLL:

      char v6 = 0;
      break;
    case 4uLL:
      id v7 = objc_msgSend(a1, sel_version);
      if (v7)
      {
        uint64_t v8 = v7;
        if (!a2)
        {

          goto LABEL_4;
        }
        sub_251C49500();
        id v9 = a2;
        id v10 = v8;
        char v11 = sub_251F36120();

        if ((v11 & 1) == 0) {
          goto LABEL_4;
        }
      }
      else
      {

        if (a2)
        {

          goto LABEL_4;
        }
      }
      char v6 = 7;
      break;
    case 5uLL:

      char v6 = 6;
      break;
    default:

LABEL_4:
      char v6 = 2;
      break;
  }
  *a3 = v6;
}

void sub_251C40A04(void *a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  uint64_t v4 = a1;
  switch((unint64_t)objc_msgSend(a1, sel_status))
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 0x11uLL:
      id v7 = objc_msgSend(v4, sel_version);
      if (v7)
      {
        uint64_t v8 = v7;
        if (a2)
        {
          sub_251C49500();
          id v9 = a2;
          id v10 = v8;
          char v11 = sub_251F36120();

          if ((v11 & 1) == 0) {
            goto LABEL_16;
          }
          goto LABEL_12;
        }

LABEL_15:
        goto LABEL_16;
      }

      if (a2)
      {
        uint64_t v4 = a2;
        goto LABEL_15;
      }
LABEL_12:
      char v6 = 7;
LABEL_17:
      *a3 = v6;
      return;
    case 4uLL:
    case 5uLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x12uLL:

      char v6 = 4;
      goto LABEL_17;
    case 6uLL:
    case 7uLL:
    case 8uLL:

      char v6 = 5;
      goto LABEL_17;
    case 9uLL:
    case 0xAuLL:

      char v6 = 0;
      goto LABEL_17;
    case 0xBuLL:

      char v6 = 7;
      goto LABEL_17;
    default:

LABEL_16:
      char v6 = 2;
      goto LABEL_17;
  }
}

uint64_t sub_251C40BA4@<X0>(char *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StaticHH2Update(0);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StaticSoftwareUpdate(0);
  sub_251C41D6C(v1 + *(int *)(v9 + 20), (uint64_t)v8, type metadata accessor for StaticSoftwareUpdate.Kind);
  uint64_t result = swift_getEnumCaseMultiPayload();
  char v11 = 3;
  switch((int)result)
  {
    case 1:
    case 2:
      char v11 = v8[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468) + 48)];
      uint64_t v12 = type metadata accessor for StaticSoftwareUpdateMetadata;
      uint64_t v13 = (uint64_t)v8;
      goto LABEL_7;
    case 3:
      break;
    default:
      sub_251C42108((uint64_t)v8, (uint64_t)v5, type metadata accessor for StaticHH2Update);
      if (*(void *)&v5[*(int *)(v3 + 24) + 8])
      {
        char v11 = v5[*(int *)(v3 + 20)];
      }
      else
      {
        swift_bridgeObjectRelease();
        char v11 = 8;
      }
      swift_bridgeObjectRelease();
      uint64_t v12 = type metadata accessor for StaticHH2Update;
      uint64_t v13 = (uint64_t)v5;
LABEL_7:
      uint64_t result = sub_251C37530(v13, v12);
      break;
  }
  *a1 = v11;
  return result;
}

uint64_t sub_251C40D80(void *a1, uint64_t a2)
{
  if (!a1) {
    goto LABEL_6;
  }
  id v3 = a1;
  id v4 = objc_msgSend(v3, sel_licenseAgreement);

  if (!v4)
  {

LABEL_6:
    uint64_t v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for StaticHH2Update(0) + 24));
    if (!v7[1]) {
      return 0;
    }
    uint64_t v8 = *v7;
    swift_bridgeObjectRetain();
    return v8;
  }
  id v5 = v3;
  id v6 = objc_msgSend(v5, sel_releaseNotes);
  if (v6 || (id v6 = objc_msgSend(v5, sel_releaseNotesSummary)) != 0)
  {
    uint64_t v9 = v6;
    id v10 = objc_msgSend(v6, sel_stringValue);
    uint64_t v8 = sub_251F356F0();
  }
  else
  {

    return 0;
  }
  return v8;
}

uint64_t _s13HomeDataModel15StaticHH2UpdateV0E5StateO2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a2[1];
  if (!v3)
  {
    if (!v4)
    {
      swift_bridgeObjectRelease_n();
      return 1;
    }
    return 0;
  }
  if (!v4) {
    return 0;
  }
  if (*a1 == *a2 && v3 == v4) {
    return 1;
  }
  return sub_251F36B10();
}

uint64_t _s13HomeDataModel15StaticHH2UpdateV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_251F34D70() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for StaticHH2Update(0);
  uint64_t v5 = v4;
  uint64_t v6 = *(int *)(v4 + 20);
  int v7 = *(unsigned __int8 *)(a1 + v6);
  int v8 = *(unsigned __int8 *)(a2 + v6);
  switch(v7)
  {
    case 2:
      if (v8 != 2) {
        return 0;
      }
      break;
    case 3:
      if (v8 != 3) {
        return 0;
      }
      break;
    case 4:
      if (v8 != 4) {
        return 0;
      }
      break;
    case 5:
      if (v8 != 5) {
        return 0;
      }
      break;
    case 6:
      if (v8 != 6) {
        return 0;
      }
      break;
    case 7:
      if (v8 != 7) {
        return 0;
      }
      break;
    default:
      if (v8 - 2) < 6 || ((v8 ^ v7)) {
        return 0;
      }
      break;
  }
  uint64_t v9 = *(int *)(v4 + 24);
  id v10 = (void *)(a1 + v9);
  uint64_t v11 = *(void *)(a1 + v9 + 8);
  uint64_t v12 = (void *)(a2 + v9);
  uint64_t v13 = v12[1];
  if (!v11)
  {
    if (v13) {
      return 0;
    }
    swift_bridgeObjectRelease_n();
    goto LABEL_27;
  }
  if (!v13) {
    return 0;
  }
  BOOL v14 = *v10 == *v12 && v11 == v13;
  if (v14 || (v15 = sub_251F36B10(), uint64_t result = 0, (v15 & 1) != 0))
  {
LABEL_27:
    uint64_t v17 = *(int *)(v5 + 28);
    id v18 = (double *)(a1 + v17);
    char v19 = *(unsigned char *)(a1 + v17 + 8);
    uint64_t v20 = (double *)(a2 + v17);
    char v21 = *(unsigned char *)(a2 + v17 + 8);
    if (v19)
    {
      if (v21) {
        return 1;
      }
    }
    else
    {
      if (*v18 != *v20) {
        char v21 = 1;
      }
      if ((v21 & 1) == 0) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

BOOL _s13HomeDataModel20StaticSoftwareUpdateV5StateO2eeoiySbAE_AEtFZ_0(unsigned char *a1, unsigned __int8 *a2)
{
  int v2 = *a2;
  switch(*a1)
  {
    case 2:
      if (v2 != 2) {
        goto LABEL_15;
      }
      BOOL result = 1;
      break;
    case 3:
      if (v2 != 3) {
        goto LABEL_15;
      }
      BOOL result = 1;
      break;
    case 4:
      if (v2 != 4) {
        goto LABEL_15;
      }
      BOOL result = 1;
      break;
    case 5:
      if (v2 != 5) {
        goto LABEL_15;
      }
      BOOL result = 1;
      break;
    case 6:
      if (v2 != 6) {
        goto LABEL_15;
      }
      BOOL result = 1;
      break;
    case 7:
      if (v2 != 7) {
        goto LABEL_15;
      }
      BOOL result = 1;
      break;
    default:
      if ((v2 - 2) >= 6) {
        BOOL result = ((v2 ^ *a1) & 1) == 0;
      }
      else {
LABEL_15:
      }
        BOOL result = 0;
      break;
  }
  return result;
}

uint64_t type metadata accessor for StaticSoftwareUpdate(uint64_t a1)
{
  return sub_251A1C6FC(a1, qword_26B220B10);
}

uint64_t type metadata accessor for StaticSoftwareUpdate.Kind(uint64_t a1)
{
  return sub_251A1C6FC(a1, qword_26B220A68);
}

uint64_t _s13HomeDataModel28StaticSoftwareUpdateMetadataV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = a1[1];
  uint64_t v5 = a2[1];
  if (!v4)
  {
    if (v5) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v5) {
    return 0;
  }
  BOOL v6 = *a1 == *a2 && v4 == v5;
  if (v6 || (v7 = sub_251F36B10(), uint64_t result = 0, (v7 & 1) != 0))
  {
LABEL_10:
    uint64_t updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
    uint64_t v10 = *(int *)(updated + 20);
    uint64_t v50 = a1;
    uint64_t v11 = (uint64_t)a1 + v10;
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    uint64_t v54 = v48;
    uint64_t v13 = *(void *)(*(void *)(v12 - 8) + 64);
    MEMORY[0x270FA5388](v12 - 8);
    unint64_t v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
    char v15 = (char *)v48 - v14;
    sub_251A1B128(v11, (uint64_t)v48 - v14, &qword_26B21EC20);
    uint64_t v53 = v48;
    uint64_t v49 = updated;
    uint64_t v16 = *(int *)(updated + 20);
    uint64_t v51 = a2;
    uint64_t v17 = MEMORY[0x270FA5388]((char *)a2 + v16);
    id v18 = (char *)v48 - v14;
    sub_251A1B128(v17, (uint64_t)v48 - v14, &qword_26B21EC20);
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EFF8);
    uint64_t v52 = v48;
    uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
    uint64_t v22 = (char *)v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v23 = (uint64_t)&v22[*(int *)(v20 + 56)];
    sub_251A1B128((uint64_t)v48 - v14, (uint64_t)v22, &qword_26B21EC20);
    sub_251A1B128((uint64_t)v48 - v14, v23, &qword_26B21EC20);
    uint64_t v24 = sub_251F34D20();
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
    uint64_t v27 = v26(v22, 1, v24);
    if (v27 == 1)
    {
      sub_251A1B064((uint64_t)v48 - v14, &qword_26B21EC20);
      sub_251A1B064((uint64_t)v48 - v14, &qword_26B21EC20);
      if (v26((char *)v23, 1, v24) == 1)
      {
        sub_251A1B064((uint64_t)v22, &qword_26B21EC20);
LABEL_19:
        uint64_t v35 = v49;
        uint64_t v34 = v50;
        uint64_t v36 = *(int *)(v49 + 24);
        id v37 = (void *)((char *)v50 + v36);
        uint64_t v38 = *(void *)((char *)v50 + v36 + 8);
        id v39 = v51;
        uint64_t v40 = (void *)((char *)v51 + v36);
        uint64_t v41 = v40[1];
        if (v38)
        {
          if (!v41) {
            return 0;
          }
          if (*v37 != *v40 || v38 != v41)
          {
            char v42 = sub_251F36B10();
            uint64_t result = 0;
            if ((v42 & 1) == 0) {
              return result;
            }
          }
        }
        else if (v41)
        {
          return 0;
        }
        uint64_t v43 = *(int *)(v35 + 28);
        char v44 = (void *)((char *)v34 + v43);
        uint64_t v45 = *(void *)((char *)v34 + v43 + 8);
        id v46 = (void *)((char *)v39 + v43);
        uint64_t v47 = v46[1];
        if (v45)
        {
          if (v47 && (*v44 == *v46 && v45 == v47 || (sub_251F36B10() & 1) != 0)) {
            return 1;
          }
        }
        else if (!v47)
        {
          return 1;
        }
        return 0;
      }
    }
    else
    {
      v48[1] = v48;
      MEMORY[0x270FA5388](v27);
      uint64_t v28 = (char *)v48 - v14;
      sub_251A1B128((uint64_t)v22, (uint64_t)v48 - v14, &qword_26B21EC20);
      uint64_t v29 = v26((char *)v23, 1, v24);
      if (v29 != 1)
      {
        MEMORY[0x270FA5388](v29);
        uint64_t v31 = (char *)v48 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(v31, v23, v24);
        sub_251C494B8((unint64_t *)&qword_269B9F5C0, MEMORY[0x270FA91F0]);
        char v32 = sub_251F35650();
        uint64_t v33 = *(void (**)(char *, uint64_t))(v25 + 8);
        v33(v31, v24);
        sub_251A1B064((uint64_t)v18, &qword_26B21EC20);
        sub_251A1B064((uint64_t)v15, &qword_26B21EC20);
        v33(v28, v24);
        sub_251A1B064((uint64_t)v22, &qword_26B21EC20);
        if ((v32 & 1) == 0) {
          return 0;
        }
        goto LABEL_19;
      }
      sub_251A1B064((uint64_t)v48 - v14, &qword_26B21EC20);
      sub_251A1B064((uint64_t)v48 - v14, &qword_26B21EC20);
      (*(void (**)(char *, uint64_t))(v25 + 8))((char *)v48 - v14, v24);
    }
    sub_251A1B064((uint64_t)v22, &qword_26B21EFF8);
    return 0;
  }
  return result;
}

uint64_t _s13HomeDataModel20StaticSoftwareUpdateV4KindO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
  uint64_t v5 = MEMORY[0x270FA5388](updated - 8);
  uint64_t v38 = (void **)((char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  id v37 = (void **)((char *)&v37 - v7);
  uint64_t v8 = type metadata accessor for StaticHH2Update(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  unint64_t v14 = (void **)((char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (void **)((char *)&v37 - v16);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v37 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0DC0);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v23 = (char *)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = (uint64_t)&v23[*(int *)(v21 + 56)];
  sub_251C41D6C(a1, (uint64_t)v23, type metadata accessor for StaticSoftwareUpdate.Kind);
  sub_251C41D6C(a2, v24, type metadata accessor for StaticSoftwareUpdate.Kind);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_251C41D6C((uint64_t)v23, (uint64_t)v17, type metadata accessor for StaticSoftwareUpdate.Kind);
      uint64_t v27 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468) + 48);
      int v28 = *((unsigned __int8 *)v17 + v27);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        uint64_t v25 = type metadata accessor for StaticSoftwareUpdateMetadata;
        uint64_t v26 = (uint64_t)v17;
        goto LABEL_16;
      }
      int v29 = *(unsigned __int8 *)(v24 + v27);
      uint64_t v30 = v37;
      sub_251C42108(v24, (uint64_t)v37, type metadata accessor for StaticSoftwareUpdateMetadata);
      char v31 = _s13HomeDataModel28StaticSoftwareUpdateMetadataV2eeoiySbAC_ACtFZ_0(v17, v30);
      sub_251C37530((uint64_t)v30, type metadata accessor for StaticSoftwareUpdateMetadata);
      sub_251C37530((uint64_t)v17, type metadata accessor for StaticSoftwareUpdateMetadata);
      if (v31)
      {
        switch(v28)
        {
          case 2:
            goto LABEL_10;
          case 3:
            goto LABEL_22;
          case 4:
            goto LABEL_24;
          case 5:
            goto LABEL_26;
          case 6:
            goto LABEL_28;
          case 7:
            goto LABEL_30;
          default:
            goto LABEL_19;
        }
      }
      goto LABEL_31;
    case 2u:
      sub_251C41D6C((uint64_t)v23, (uint64_t)v14, type metadata accessor for StaticSoftwareUpdate.Kind);
      uint64_t v32 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468) + 48);
      int v28 = *((unsigned __int8 *)v14 + v32);
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        uint64_t v25 = type metadata accessor for StaticSoftwareUpdateMetadata;
        uint64_t v26 = (uint64_t)v14;
        goto LABEL_16;
      }
      int v29 = *(unsigned __int8 *)(v24 + v32);
      uint64_t v33 = v38;
      sub_251C42108(v24, (uint64_t)v38, type metadata accessor for StaticSoftwareUpdateMetadata);
      char v34 = _s13HomeDataModel28StaticSoftwareUpdateMetadataV2eeoiySbAC_ACtFZ_0(v14, v33);
      sub_251C37530((uint64_t)v33, type metadata accessor for StaticSoftwareUpdateMetadata);
      sub_251C37530((uint64_t)v14, type metadata accessor for StaticSoftwareUpdateMetadata);
      if (v34)
      {
        switch(v28)
        {
          case 2:
LABEL_10:
            if (v29 != 2) {
              break;
            }
            goto LABEL_13;
          case 3:
LABEL_22:
            if (v29 != 3) {
              break;
            }
            goto LABEL_13;
          case 4:
LABEL_24:
            if (v29 != 4) {
              break;
            }
            goto LABEL_13;
          case 5:
LABEL_26:
            if (v29 != 5) {
              break;
            }
            goto LABEL_13;
          case 6:
LABEL_28:
            if (v29 != 6) {
              break;
            }
            goto LABEL_13;
          case 7:
LABEL_30:
            if (v29 != 7) {
              break;
            }
            goto LABEL_13;
          default:
LABEL_19:
            if (v29 - 2) < 6 || ((v29 ^ v28)) {
              break;
            }
            goto LABEL_13;
        }
      }
LABEL_31:
      sub_251C37530((uint64_t)v23, type metadata accessor for StaticSoftwareUpdate.Kind);
      goto LABEL_32;
    case 3u:
      if (swift_getEnumCaseMultiPayload() != 3) {
        goto LABEL_17;
      }
LABEL_13:
      sub_251C37530((uint64_t)v23, type metadata accessor for StaticSoftwareUpdate.Kind);
      char v35 = 1;
      return v35 & 1;
    default:
      sub_251C41D6C((uint64_t)v23, (uint64_t)v19, type metadata accessor for StaticSoftwareUpdate.Kind);
      if (swift_getEnumCaseMultiPayload())
      {
        uint64_t v25 = type metadata accessor for StaticHH2Update;
        uint64_t v26 = (uint64_t)v19;
LABEL_16:
        sub_251C37530(v26, v25);
LABEL_17:
        sub_251A1B064((uint64_t)v23, &qword_269BA0DC0);
LABEL_32:
        char v35 = 0;
      }
      else
      {
        sub_251C42108(v24, (uint64_t)v10, type metadata accessor for StaticHH2Update);
        char v35 = _s13HomeDataModel15StaticHH2UpdateV2eeoiySbAC_ACtFZ_0((uint64_t)v19, (uint64_t)v10);
        sub_251C37530((uint64_t)v10, type metadata accessor for StaticHH2Update);
        sub_251C37530((uint64_t)v19, type metadata accessor for StaticHH2Update);
        sub_251C37530((uint64_t)v23, type metadata accessor for StaticSoftwareUpdate.Kind);
      }
      return v35 & 1;
  }
}

unint64_t sub_251C41CD0()
{
  unint64_t result = qword_269BA0970;
  if (!qword_269BA0970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0970);
  }
  return result;
}

uint64_t sub_251C41D24(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251C41D6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for StaticSoftwareUpdateMetadata(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_26B21FEE0);
}

unint64_t sub_251C41DF4()
{
  unint64_t result = qword_269BA0998;
  if (!qword_269BA0998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0998);
  }
  return result;
}

unint64_t sub_251C41E48()
{
  unint64_t result = qword_269BA09C0;
  if (!qword_269BA09C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA09C0);
  }
  return result;
}

unint64_t sub_251C41E9C()
{
  unint64_t result = qword_269BA09C8;
  if (!qword_269BA09C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA09C8);
  }
  return result;
}

unint64_t sub_251C41EF0()
{
  unint64_t result = qword_269BA09D0;
  if (!qword_269BA09D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA09D0);
  }
  return result;
}

uint64_t type metadata accessor for StaticHH2Update(uint64_t a1)
{
  return sub_251A1C6FC(a1, qword_26B220768);
}

unint64_t sub_251C41F64()
{
  unint64_t result = qword_269BA09F8;
  if (!qword_269BA09F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA09F8);
  }
  return result;
}

unint64_t sub_251C41FB8()
{
  unint64_t result = qword_269BA0A00;
  if (!qword_269BA0A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0A00);
  }
  return result;
}

unint64_t sub_251C4200C()
{
  unint64_t result = qword_269BA0A08;
  if (!qword_269BA0A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0A08);
  }
  return result;
}

unint64_t sub_251C42060()
{
  unint64_t result = qword_269BA0A18;
  if (!qword_269BA0A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0A18);
  }
  return result;
}

unint64_t sub_251C420B4()
{
  unint64_t result = qword_269BA0A20;
  if (!qword_269BA0A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0A20);
  }
  return result;
}

uint64_t sub_251C42108(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_251C42170()
{
  unint64_t result = qword_269BA0A50;
  if (!qword_269BA0A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0A50);
  }
  return result;
}

unint64_t sub_251C421C4()
{
  unint64_t result = qword_269BA0A58;
  if (!qword_269BA0A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0A58);
  }
  return result;
}

unint64_t sub_251C42218()
{
  unint64_t result = qword_269BA0A60;
  if (!qword_269BA0A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0A60);
  }
  return result;
}

unint64_t sub_251C4226C()
{
  unint64_t result = qword_269BA0A70;
  if (!qword_269BA0A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0A70);
  }
  return result;
}

unint64_t sub_251C422C0()
{
  unint64_t result = qword_269BA0A78;
  if (!qword_269BA0A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0A78);
  }
  return result;
}

unint64_t sub_251C42314()
{
  unint64_t result = qword_269BA0AC8;
  if (!qword_269BA0AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0AC8);
  }
  return result;
}

unint64_t sub_251C42368()
{
  unint64_t result = qword_269BA0AD0;
  if (!qword_269BA0AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0AD0);
  }
  return result;
}

unint64_t sub_251C423BC()
{
  unint64_t result = qword_269BA0AD8;
  if (!qword_269BA0AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0AD8);
  }
  return result;
}

unint64_t sub_251C42410()
{
  unint64_t result = qword_269BA0B38;
  if (!qword_269BA0B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0B38);
  }
  return result;
}

unint64_t sub_251C42464()
{
  unint64_t result = qword_269BA0B40;
  if (!qword_269BA0B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0B40);
  }
  return result;
}

unint64_t sub_251C424B8()
{
  unint64_t result = qword_269BA0B48;
  if (!qword_269BA0B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0B48);
  }
  return result;
}

unint64_t sub_251C4250C()
{
  unint64_t result = qword_269BA0B50;
  if (!qword_269BA0B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0B50);
  }
  return result;
}

unint64_t sub_251C42560()
{
  unint64_t result = qword_269BA0B58;
  if (!qword_269BA0B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0B58);
  }
  return result;
}

unint64_t sub_251C425B4()
{
  unint64_t result = qword_269BA0B60;
  if (!qword_269BA0B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0B60);
  }
  return result;
}

unint64_t sub_251C42608()
{
  unint64_t result = qword_269BA0B68;
  if (!qword_269BA0B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0B68);
  }
  return result;
}

unint64_t sub_251C4265C()
{
  unint64_t result = qword_269BA0B70;
  if (!qword_269BA0B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0B70);
  }
  return result;
}

unint64_t sub_251C426B0()
{
  unint64_t result = qword_269BA0B78;
  if (!qword_269BA0B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0B78);
  }
  return result;
}

unint64_t sub_251C42704()
{
  unint64_t result = qword_269BA0BC0;
  if (!qword_269BA0BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0BC0);
  }
  return result;
}

uint64_t sub_251C42758()
{
  return sub_251C41D24(&qword_269BA0BC8, (void (*)(uint64_t))type metadata accessor for StaticSoftwareUpdate);
}

uint64_t sub_251C427A0()
{
  return sub_251C494B8((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA96D8]);
}

uint64_t sub_251C427D0()
{
  return sub_251C41D24(&qword_269BA0BD0, (void (*)(uint64_t))type metadata accessor for StaticSoftwareUpdateMetadata);
}

unint64_t sub_251C4281C()
{
  unint64_t result = qword_269BA0BD8;
  if (!qword_269BA0BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0BD8);
  }
  return result;
}

uint64_t sub_251C42870()
{
  return sub_251C41D24(&qword_269BA0BE0, (void (*)(uint64_t))type metadata accessor for StaticHH2Update);
}

uint64_t sub_251C428B8()
{
  return sub_251C41D24(&qword_269BA0BE8, (void (*)(uint64_t))type metadata accessor for StaticSoftwareUpdate.Kind);
}

unint64_t sub_251C42904()
{
  unint64_t result = qword_269BA0BF0;
  if (!qword_269BA0BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0BF0);
  }
  return result;
}

unint64_t sub_251C4295C()
{
  unint64_t result = qword_269BA0BF8;
  if (!qword_269BA0BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0BF8);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for StaticSoftwareUpdate(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v25 = v11[1];
      *uint64_t v10 = *v11;
      v10[1] = v25;
      uint64_t updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v27 = *(int *)(updated + 20);
      __dst = (char *)v10 + v27;
      char v61 = (int *)updated;
      int v28 = (char *)v11 + v27;
      uint64_t v29 = sub_251F34D20();
      uint64_t v30 = *(void *)(v29 - 8);
      char v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
      swift_bridgeObjectRetain();
      if (v31(v28, 1, v29))
      {
        uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(__dst, v28, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 16))(__dst, v28, v29);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v29);
      }
      uint64_t v50 = v61[6];
      uint64_t v51 = (void *)((char *)v10 + v50);
      uint64_t v52 = (void *)((char *)v11 + v50);
      uint64_t v53 = v52[1];
      *uint64_t v51 = *v52;
      v51[1] = v53;
      uint64_t v54 = v61[7];
      id v55 = (void *)((char *)v10 + v54);
      uint64_t v56 = (void *)((char *)v11 + v54);
      uint64_t v57 = v56[1];
      *id v55 = *v56;
      v55[1] = v57;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
      *((unsigned char *)v10 + *(int *)(v58 + 48)) = *((unsigned char *)v11 + *(int *)(v58 + 48));
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v33 = v11[1];
      *uint64_t v10 = *v11;
      v10[1] = v33;
      uint64_t v34 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v35 = *(int *)(v34 + 20);
      __dsta = (int *)v34;
      int v62 = (char *)v10 + v35;
      uint64_t v36 = (char *)v11 + v35;
      uint64_t v37 = sub_251F34D20();
      uint64_t v38 = *(void *)(v37 - 8);
      id v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
      swift_bridgeObjectRetain();
      if (v39(v36, 1, v37))
      {
        uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v62, v36, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v62, v36, v37);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v62, 0, 1, v37);
      }
      uint64_t v41 = __dsta[6];
      char v42 = (void *)((char *)v10 + v41);
      uint64_t v43 = (void *)((char *)v11 + v41);
      uint64_t v44 = v43[1];
      *char v42 = *v43;
      v42[1] = v44;
      uint64_t v45 = __dsta[7];
      id v46 = (void *)((char *)v10 + v45);
      uint64_t v47 = (void *)((char *)v11 + v45);
      uint64_t v48 = v47[1];
      *id v46 = *v47;
      v46[1] = v48;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
      *((unsigned char *)v10 + *(int *)(v49 + 48)) = *((unsigned char *)v11 + *(int *)(v49 + 48));
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      unint64_t v14 = (int *)type metadata accessor for StaticHH2Update(0);
      *((unsigned char *)v10 + v14[5]) = *((unsigned char *)v11 + v14[5]);
      uint64_t v15 = v14[6];
      uint64_t v16 = (void *)((char *)v10 + v15);
      uint64_t v17 = (void *)((char *)v11 + v15);
      uint64_t v19 = *v17;
      uint64_t v18 = v17[1];
      *uint64_t v16 = v19;
      v16[1] = v18;
      uint64_t v20 = v14[7];
      uint64_t v21 = (char *)v10 + v20;
      uint64_t v22 = (char *)v11 + v20;
      v21[8] = v22[8];
      *(void *)uint64_t v21 = *(void *)v22;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for StaticSoftwareUpdate(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  type metadata accessor for StaticSoftwareUpdate.Kind(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2 || result == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = v6 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
    uint64_t v9 = sub_251F34D20();
    uint64_t v10 = *(void *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    if (result) {
      return result;
    }
    v5(v6, v4);
    type metadata accessor for StaticHH2Update(0);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StaticSoftwareUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v22 = v10[1];
      *uint64_t v9 = *v10;
      v9[1] = v22;
      uint64_t updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v24 = *(int *)(updated + 20);
      uint64_t v44 = updated;
      __dst = (char *)v9 + v24;
      uint64_t v25 = (char *)v10 + v24;
      uint64_t v26 = sub_251F34D20();
      uint64_t v27 = *(void *)(v26 - 8);
      int v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
      swift_bridgeObjectRetain();
      if (v28(v25, 1, v26)) {
        goto LABEL_8;
      }
      goto LABEL_10;
    case 1:
      uint64_t v29 = v10[1];
      *uint64_t v9 = *v10;
      v9[1] = v29;
      uint64_t v30 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v31 = *(int *)(v30 + 20);
      uint64_t v44 = v30;
      __dst = (char *)v9 + v31;
      uint64_t v25 = (char *)v10 + v31;
      uint64_t v26 = sub_251F34D20();
      uint64_t v27 = *(void *)(v26 - 8);
      uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
      swift_bridgeObjectRetain();
      if (v32(v25, 1, v26))
      {
LABEL_8:
        uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(__dst, v25, *(void *)(*(void *)(v33 - 8) + 64));
LABEL_11:
        uint64_t v34 = *(int *)(v44 + 24);
        uint64_t v35 = (void *)((char *)v9 + v34);
        uint64_t v36 = (void *)((char *)v10 + v34);
        uint64_t v37 = v36[1];
        *uint64_t v35 = *v36;
        v35[1] = v37;
        uint64_t v38 = *(int *)(v44 + 28);
        id v39 = (void *)((char *)v9 + v38);
        uint64_t v40 = (void *)((char *)v10 + v38);
        uint64_t v41 = v40[1];
        *id v39 = *v40;
        v39[1] = v41;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
        *((unsigned char *)v9 + *(int *)(v42 + 48)) = *((unsigned char *)v10 + *(int *)(v42 + 48));
        goto LABEL_12;
      }
LABEL_10:
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(__dst, v25, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
      goto LABEL_11;
    case 0:
      v7((uint64_t)v9, (uint64_t)v10, v6);
      uint64_t v13 = (int *)type metadata accessor for StaticHH2Update(0);
      *((unsigned char *)v9 + v13[5]) = *((unsigned char *)v10 + v13[5]);
      uint64_t v14 = v13[6];
      uint64_t v15 = (void *)((char *)v9 + v14);
      uint64_t v16 = (void *)((char *)v10 + v14);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      void *v15 = v18;
      v15[1] = v17;
      uint64_t v19 = v13[7];
      uint64_t v20 = (char *)v9 + v19;
      uint64_t v21 = (char *)v10 + v19;
      v20[8] = v21[8];
      *(void *)uint64_t v20 = *(void *)v21;
      swift_bridgeObjectRetain();
LABEL_12:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  return a1;
}

uint64_t assignWithCopy for StaticSoftwareUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  if (a1 == a2) {
    return a1;
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  sub_251C37530(a1 + v8, type metadata accessor for StaticSoftwareUpdate.Kind);
  uint64_t v11 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      *uint64_t v9 = *v10;
      v9[1] = v10[1];
      uint64_t updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v22 = *(int *)(updated + 20);
      __dst = (char *)v9 + v22;
      uint64_t v40 = updated;
      uint64_t v23 = (char *)v10 + v22;
      uint64_t v24 = sub_251F34D20();
      uint64_t v25 = *(void *)(v24 - 8);
      uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
      swift_bridgeObjectRetain();
      if (v26(v23, 1, v24))
      {
LABEL_7:
        uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(__dst, v23, *(void *)(*(void *)(v27 - 8) + 64));
LABEL_12:
        uint64_t v31 = *(int *)(v40 + 24);
        uint64_t v32 = (void *)((char *)v9 + v31);
        uint64_t v33 = (void *)((char *)v10 + v31);
        *uint64_t v32 = *v33;
        v32[1] = v33[1];
        uint64_t v34 = *(int *)(v40 + 28);
        uint64_t v35 = (void *)((char *)v9 + v34);
        uint64_t v36 = (void *)((char *)v10 + v34);
        *uint64_t v35 = *v36;
        v35[1] = v36[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
        *((unsigned char *)v9 + *(int *)(v37 + 48)) = *((unsigned char *)v10 + *(int *)(v37 + 48));
        goto LABEL_13;
      }
LABEL_11:
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(__dst, v23, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
      goto LABEL_12;
    case 1:
      *uint64_t v9 = *v10;
      v9[1] = v10[1];
      uint64_t v28 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v29 = *(int *)(v28 + 20);
      __dst = (char *)v9 + v29;
      uint64_t v40 = v28;
      uint64_t v23 = (char *)v10 + v29;
      uint64_t v24 = sub_251F34D20();
      uint64_t v25 = *(void *)(v24 - 8);
      uint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
      swift_bridgeObjectRetain();
      if (v30(v23, 1, v24)) {
        goto LABEL_7;
      }
      goto LABEL_11;
    case 0:
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v9, v10, v6);
      uint64_t v13 = (int *)type metadata accessor for StaticHH2Update(0);
      *((unsigned char *)v9 + v13[5]) = *((unsigned char *)v10 + v13[5]);
      uint64_t v14 = v13[6];
      uint64_t v15 = (void *)((char *)v9 + v14);
      uint64_t v16 = (void *)((char *)v10 + v14);
      void *v15 = *v16;
      v15[1] = v16[1];
      uint64_t v17 = v13[7];
      uint64_t v18 = (char *)v9 + v17;
      uint64_t v19 = (char *)v10 + v17;
      char v20 = v19[8];
      *(void *)uint64_t v18 = *(void *)v19;
      v18[8] = v20;
      swift_bridgeObjectRetain();
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  return a1;
}

uint64_t initializeWithTake for StaticSoftwareUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (_OWORD *)(a1 + v8);
  uint64_t v10 = (_OWORD *)(a2 + v8);
  uint64_t v11 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      *uint64_t v9 = *v10;
      uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v18 = updated[5];
      uint64_t v19 = (char *)v9 + v18;
      char v20 = (char *)v10 + v18;
      uint64_t v21 = sub_251F34D20();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21)) {
        goto LABEL_8;
      }
      goto LABEL_10;
    case 1:
      *uint64_t v9 = *v10;
      uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v23 = updated[5];
      uint64_t v19 = (char *)v9 + v23;
      char v20 = (char *)v10 + v23;
      uint64_t v21 = sub_251F34D20();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
LABEL_8:
        uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v19, v20, *(void *)(*(void *)(v24 - 8) + 64));
LABEL_11:
        *(_OWORD *)((char *)v9 + updated[6]) = *(_OWORD *)((char *)v10 + updated[6]);
        *(_OWORD *)((char *)v9 + updated[7]) = *(_OWORD *)((char *)v10 + updated[7]);
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
        *((unsigned char *)v9 + *(int *)(v25 + 48)) = *((unsigned char *)v10 + *(int *)(v25 + 48));
        goto LABEL_12;
      }
LABEL_10:
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      goto LABEL_11;
    case 0:
      v7((uint64_t)v9, (uint64_t)v10, v6);
      uint64_t v13 = (int *)type metadata accessor for StaticHH2Update(0);
      *((unsigned char *)v9 + v13[5]) = *((unsigned char *)v10 + v13[5]);
      *(_OWORD *)((char *)v9 + v13[6]) = *(_OWORD *)((char *)v10 + v13[6]);
      uint64_t v14 = v13[7];
      uint64_t v15 = (char *)v9 + v14;
      uint64_t v16 = (char *)v10 + v14;
      v15[8] = v16[8];
      *(void *)uint64_t v15 = *(void *)v16;
LABEL_12:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  return a1;
}

uint64_t assignWithTake for StaticSoftwareUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  if (a1 == a2) {
    return a1;
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (_OWORD *)(a1 + v8);
  uint64_t v10 = (_OWORD *)(a2 + v8);
  sub_251C37530(a1 + v8, type metadata accessor for StaticSoftwareUpdate.Kind);
  uint64_t v11 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      *uint64_t v9 = *v10;
      uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v18 = updated[5];
      uint64_t v19 = (char *)v9 + v18;
      char v20 = (char *)v10 + v18;
      uint64_t v21 = sub_251F34D20();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
LABEL_7:
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
LABEL_12:
        *(_OWORD *)((char *)v9 + updated[6]) = *(_OWORD *)((char *)v10 + updated[6]);
        *(_OWORD *)((char *)v9 + updated[7]) = *(_OWORD *)((char *)v10 + updated[7]);
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
        *((unsigned char *)v9 + *(int *)(v25 + 48)) = *((unsigned char *)v10 + *(int *)(v25 + 48));
        goto LABEL_13;
      }
LABEL_11:
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      goto LABEL_12;
    case 1:
      *uint64_t v9 = *v10;
      uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v24 = updated[5];
      uint64_t v19 = (char *)v9 + v24;
      char v20 = (char *)v10 + v24;
      uint64_t v21 = sub_251F34D20();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21)) {
        goto LABEL_7;
      }
      goto LABEL_11;
    case 0:
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v9, v10, v6);
      uint64_t v13 = (int *)type metadata accessor for StaticHH2Update(0);
      *((unsigned char *)v9 + v13[5]) = *((unsigned char *)v10 + v13[5]);
      *(_OWORD *)((char *)v9 + v13[6]) = *(_OWORD *)((char *)v10 + v13[6]);
      uint64_t v14 = v13[7];
      uint64_t v15 = (char *)v9 + v14;
      uint64_t v16 = (char *)v10 + v14;
      v15[8] = v16[8];
      *(void *)uint64_t v15 = *(void *)v16;
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticSoftwareUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251C44018);
}

uint64_t sub_251C44018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for StaticSoftwareUpdate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251C44124);
}

uint64_t sub_251C44124(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_251F34DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_251C44228()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for StaticSoftwareUpdate.Kind(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for StaticSoftwareUpdateMetadata(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_251F34D20();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = a3[7];
    uint64_t v18 = (uint64_t *)((char *)v4 + v16);
    uint64_t v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = (uint64_t *)((char *)v4 + v17);
    uint64_t v22 = (uint64_t *)((char *)a2 + v17);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for StaticSoftwareUpdateMetadata(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_251F34D20();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for StaticSoftwareUpdateMetadata(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_251F34D20();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v14);
  uint64_t v17 = (void *)((char *)a2 + v14);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = (void *)((char *)a1 + v15);
  uint64_t v20 = (void *)((char *)a2 + v15);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for StaticSoftwareUpdateMetadata(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_251F34D20();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[7];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for StaticSoftwareUpdateMetadata(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_251F34D20();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  return a1;
}

void *assignWithTake for StaticSoftwareUpdateMetadata(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_251F34D20();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  void *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[7];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticSoftwareUpdateMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251C44BF8);
}

uint64_t sub_251C44BF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for StaticSoftwareUpdateMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251C44CCC);
}

uint64_t sub_251C44CCC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_251C44D78()
{
  sub_251BBBE60();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *initializeBufferWithCopyOfBuffer for StaticHH2Update(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    uint64_t v12 = a3[7];
    int v13 = (char *)a1 + v12;
    int v14 = (char *)a2 + v12;
    _OWORD v13[8] = v14[8];
    *(void *)int v13 = *(void *)v14;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for StaticHH2Update(uint64_t a1)
{
  uint64_t v2 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StaticHH2Update(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StaticHH2Update(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[7];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = (uint64_t *)(a2 + v10);
  uint64_t v13 = *v12;
  *(unsigned char *)(v11 + 8) = *((unsigned char *)v12 + 8);
  *(void *)uint64_t v11 = v13;
  return a1;
}

uint64_t initializeWithTake for StaticHH2Update(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  return a1;
}

uint64_t assignWithTake for StaticHH2Update(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticHH2Update(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251C4525C);
}

uint64_t sub_251C4525C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for StaticHH2Update(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251C45340);
}

uint64_t sub_251C45340(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_251F34DA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  }
  return result;
}

uint64_t sub_251C45400()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for StaticHH2Update.HH2State(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for StaticHH2Update.HH2State(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for StaticHH2Update.HH2State(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticHH2Update.HH2State(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for StaticHH2Update.HH2State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_251C455F4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_251C4560C(void *result, int a2)
{
  if (a2 < 0)
  {
    *uint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticHH2Update.HH2State()
{
  return &type metadata for StaticHH2Update.HH2State;
}

void *initializeBufferWithCopyOfBuffer for StaticSoftwareUpdate.Kind(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v6 = *(void *)(a3 - 8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v20 = a2[1];
    *a1 = *a2;
    a1[1] = v20;
    uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
    uint64_t v22 = updated[5];
    __dst = (char *)a1 + v22;
    uint64_t v23 = (char *)a2 + v22;
    uint64_t v24 = sub_251F34D20();
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
    swift_bridgeObjectRetain();
    if (v26(v23, 1, v24)) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v27 = a2[1];
    *a1 = *a2;
    a1[1] = v27;
    uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
    uint64_t v28 = updated[5];
    __dst = (char *)a1 + v28;
    uint64_t v23 = (char *)a2 + v28;
    uint64_t v24 = sub_251F34D20();
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
    swift_bridgeObjectRetain();
    if (v29(v23, 1, v24))
    {
LABEL_11:
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
      memcpy(__dst, v23, *(void *)(*(void *)(v30 - 8) + 64));
LABEL_14:
      uint64_t v31 = updated[6];
      uint64_t v32 = (void *)((char *)a1 + v31);
      uint64_t v33 = (void *)((char *)a2 + v31);
      uint64_t v34 = v33[1];
      *uint64_t v32 = *v33;
      v32[1] = v34;
      uint64_t v35 = updated[7];
      uint64_t v36 = (void *)((char *)a1 + v35);
      uint64_t v37 = (void *)((char *)a2 + v35);
      uint64_t v38 = v37[1];
      *uint64_t v36 = *v37;
      v36[1] = v38;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
      *((unsigned char *)a1 + *(int *)(v39 + 48)) = *((unsigned char *)a2 + *(int *)(v39 + 48));
      swift_storeEnumTagMultiPayload();
      return a1;
    }
LABEL_13:
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(__dst, v23, v24);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
    goto LABEL_14;
  }
  if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  else
  {
    uint64_t v8 = sub_251F34DA0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    uint64_t v9 = (int *)type metadata accessor for StaticHH2Update(0);
    *((unsigned char *)a1 + v9[5]) = *((unsigned char *)a2 + v9[5]);
    uint64_t v10 = v9[6];
    int v11 = (void *)((char *)a1 + v10);
    uint64_t v12 = (void *)((char *)a2 + v10);
    uint64_t v14 = *v12;
    uint64_t v13 = v12[1];
    *int v11 = v14;
    v11[1] = v13;
    uint64_t v15 = v9[7];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    v16[8] = v17[8];
    *(void *)uint64_t v16 = *(void *)v17;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for StaticSoftwareUpdate.Kind(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2 || result == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = a1 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
    uint64_t v5 = sub_251F34D20();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    if (result) {
      return result;
    }
    uint64_t v3 = sub_251F34DA0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    type metadata accessor for StaticHH2Update(0);
  }
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for StaticSoftwareUpdate.Kind(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v17 = a2[1];
      *a1 = *a2;
      a1[1] = v17;
      uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v19 = updated[5];
      __dst = (char *)a1 + v19;
      uint64_t v20 = (char *)a2 + v19;
      uint64_t v21 = sub_251F34D20();
      uint64_t v22 = *(void *)(v21 - 8);
      uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
      swift_bridgeObjectRetain();
      if (v23(v20, 1, v21)) {
        goto LABEL_8;
      }
      goto LABEL_10;
    case 1:
      uint64_t v24 = a2[1];
      *a1 = *a2;
      a1[1] = v24;
      uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v25 = updated[5];
      __dst = (char *)a1 + v25;
      uint64_t v20 = (char *)a2 + v25;
      uint64_t v21 = sub_251F34D20();
      uint64_t v22 = *(void *)(v21 - 8);
      uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
      swift_bridgeObjectRetain();
      if (v26(v20, 1, v21))
      {
LABEL_8:
        uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(__dst, v20, *(void *)(*(void *)(v27 - 8) + 64));
LABEL_11:
        uint64_t v28 = updated[6];
        uint64_t v29 = (void *)((char *)a1 + v28);
        uint64_t v30 = (void *)((char *)a2 + v28);
        uint64_t v31 = v30[1];
        *uint64_t v29 = *v30;
        v29[1] = v31;
        uint64_t v32 = updated[7];
        uint64_t v33 = (void *)((char *)a1 + v32);
        uint64_t v34 = (void *)((char *)a2 + v32);
        uint64_t v35 = v34[1];
        *uint64_t v33 = *v34;
        v33[1] = v35;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
        *((unsigned char *)a1 + *(int *)(v36 + 48)) = *((unsigned char *)a2 + *(int *)(v36 + 48));
        goto LABEL_12;
      }
LABEL_10:
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(__dst, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
      goto LABEL_11;
    case 0:
      uint64_t v7 = sub_251F34DA0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = (int *)type metadata accessor for StaticHH2Update(0);
      *((unsigned char *)a1 + v8[5]) = *((unsigned char *)a2 + v8[5]);
      uint64_t v9 = v8[6];
      uint64_t v10 = (void *)((char *)a1 + v9);
      int v11 = (void *)((char *)a2 + v9);
      uint64_t v13 = *v11;
      uint64_t v12 = v11[1];
      *uint64_t v10 = v13;
      v10[1] = v12;
      uint64_t v14 = v8[7];
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      v15[8] = v16[8];
      *(void *)uint64_t v15 = *(void *)v16;
      swift_bridgeObjectRetain();
LABEL_12:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *assignWithCopy for StaticSoftwareUpdate.Kind(void *a1, void *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  sub_251C37530((uint64_t)a1, type metadata accessor for StaticSoftwareUpdate.Kind);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v17 = updated[5];
      __dst = (char *)a1 + v17;
      uint64_t v18 = (char *)a2 + v17;
      uint64_t v19 = sub_251F34D20();
      uint64_t v20 = *(void *)(v19 - 8);
      uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
      swift_bridgeObjectRetain();
      if (v21(v18, 1, v19))
      {
LABEL_7:
        uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(__dst, v18, *(void *)(*(void *)(v22 - 8) + 64));
LABEL_12:
        uint64_t v25 = updated[6];
        uint64_t v26 = (void *)((char *)a1 + v25);
        uint64_t v27 = (void *)((char *)a2 + v25);
        *uint64_t v26 = *v27;
        v26[1] = v27[1];
        uint64_t v28 = updated[7];
        uint64_t v29 = (void *)((char *)a1 + v28);
        uint64_t v30 = (void *)((char *)a2 + v28);
        *uint64_t v29 = *v30;
        v29[1] = v30[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
        *((unsigned char *)a1 + *(int *)(v31 + 48)) = *((unsigned char *)a2 + *(int *)(v31 + 48));
        goto LABEL_13;
      }
LABEL_11:
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(__dst, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
      goto LABEL_12;
    case 1:
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v23 = updated[5];
      __dst = (char *)a1 + v23;
      uint64_t v18 = (char *)a2 + v23;
      uint64_t v19 = sub_251F34D20();
      uint64_t v20 = *(void *)(v19 - 8);
      uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
      swift_bridgeObjectRetain();
      if (v24(v18, 1, v19)) {
        goto LABEL_7;
      }
      goto LABEL_11;
    case 0:
      uint64_t v7 = sub_251F34DA0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = (int *)type metadata accessor for StaticHH2Update(0);
      *((unsigned char *)a1 + v8[5]) = *((unsigned char *)a2 + v8[5]);
      uint64_t v9 = v8[6];
      uint64_t v10 = (void *)((char *)a1 + v9);
      int v11 = (void *)((char *)a2 + v9);
      *uint64_t v10 = *v11;
      v10[1] = v11[1];
      uint64_t v12 = v8[7];
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      char v15 = v14[8];
      *(void *)uint64_t v13 = *(void *)v14;
      _OWORD v13[8] = v15;
      swift_bridgeObjectRetain();
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *initializeWithTake for StaticSoftwareUpdate.Kind(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      *a1 = *a2;
      uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v13 = updated[5];
      uint64_t v14 = (char *)a1 + v13;
      char v15 = (char *)a2 + v13;
      uint64_t v16 = sub_251F34D20();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16)) {
        goto LABEL_8;
      }
      goto LABEL_10;
    case 1:
      *a1 = *a2;
      uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v18 = updated[5];
      uint64_t v14 = (char *)a1 + v18;
      char v15 = (char *)a2 + v18;
      uint64_t v16 = sub_251F34D20();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
LABEL_8:
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
LABEL_11:
        *(_OWORD *)((char *)a1 + updated[6]) = *(_OWORD *)((char *)a2 + updated[6]);
        *(_OWORD *)((char *)a1 + updated[7]) = *(_OWORD *)((char *)a2 + updated[7]);
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
        *((unsigned char *)a1 + *(int *)(v20 + 48)) = *((unsigned char *)a2 + *(int *)(v20 + 48));
        goto LABEL_12;
      }
LABEL_10:
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_11;
    case 0:
      uint64_t v7 = sub_251F34DA0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      uint64_t v8 = (int *)type metadata accessor for StaticHH2Update(0);
      *((unsigned char *)a1 + v8[5]) = *((unsigned char *)a2 + v8[5]);
      *(_OWORD *)((char *)a1 + v8[6]) = *(_OWORD *)((char *)a2 + v8[6]);
      uint64_t v9 = v8[7];
      uint64_t v10 = (char *)a1 + v9;
      int v11 = (char *)a2 + v9;
      v10[8] = v11[8];
      *(void *)uint64_t v10 = *(void *)v11;
LABEL_12:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *assignWithTake for StaticSoftwareUpdate.Kind(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  sub_251C37530((uint64_t)a1, type metadata accessor for StaticSoftwareUpdate.Kind);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      *a1 = *a2;
      uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v13 = updated[5];
      uint64_t v14 = (char *)a1 + v13;
      char v15 = (char *)a2 + v13;
      uint64_t v16 = sub_251F34D20();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
LABEL_7:
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
LABEL_12:
        *(_OWORD *)((char *)a1 + updated[6]) = *(_OWORD *)((char *)a2 + updated[6]);
        *(_OWORD *)((char *)a1 + updated[7]) = *(_OWORD *)((char *)a2 + updated[7]);
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
        *((unsigned char *)a1 + *(int *)(v20 + 48)) = *((unsigned char *)a2 + *(int *)(v20 + 48));
        goto LABEL_13;
      }
LABEL_11:
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_12;
    case 1:
      *a1 = *a2;
      uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v19 = updated[5];
      uint64_t v14 = (char *)a1 + v19;
      char v15 = (char *)a2 + v19;
      uint64_t v16 = sub_251F34D20();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16)) {
        goto LABEL_7;
      }
      goto LABEL_11;
    case 0:
      uint64_t v7 = sub_251F34DA0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      uint64_t v8 = (int *)type metadata accessor for StaticHH2Update(0);
      *((unsigned char *)a1 + v8[5]) = *((unsigned char *)a2 + v8[5]);
      *(_OWORD *)((char *)a1 + v8[6]) = *(_OWORD *)((char *)a2 + v8[6]);
      uint64_t v9 = v8[7];
      uint64_t v10 = (char *)a1 + v9;
      int v11 = (char *)a2 + v9;
      v10[8] = v11[8];
      *(void *)uint64_t v10 = *(void *)v11;
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

uint64_t sub_251C46ADC()
{
  uint64_t result = type metadata accessor for StaticHH2Update(319);
  if (v1 <= 0x3F)
  {
    uint64_t v5 = *(void *)(result - 8) + 64;
    uint64_t result = type metadata accessor for StaticSoftwareUpdateMetadata(319);
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v6 = &v4;
      swift_getTupleTypeLayout2();
      uint64_t v7 = &v3;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.InstallingStateType()
{
  return &type metadata for StaticSoftwareUpdate.InstallingStateType;
}

uint64_t getEnumTagSinglePayload for StaticSoftwareUpdate.State(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF9)
  {
    unsigned int v2 = a2 + 7;
    if (a2 + 7 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 7;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 7;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x251C46CA0);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 7;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 >= 2) {
    unsigned int v8 = v7 - 1;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 7) {
    return v8 - 6;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for StaticSoftwareUpdate.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 7;
  if (a3 + 7 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xF9) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v7 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x251C46D88);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

uint64_t sub_251C46DB0(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 2) {
    return v1 - 1;
  }
  else {
    return 0;
  }
}

unsigned char *sub_251C46DC4(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.State()
{
  return &type metadata for StaticSoftwareUpdate.State;
}

unsigned char *storeEnumTagSinglePayload for StaticSoftwareUpdate.State.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251C46EB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.State.CodingKeys()
{
  return &type metadata for StaticSoftwareUpdate.State.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.State.NoneCodingKeys()
{
  return &type metadata for StaticSoftwareUpdate.State.NoneCodingKeys;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.State.AvailableCodingKeys()
{
  return &type metadata for StaticSoftwareUpdate.State.AvailableCodingKeys;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.State.DownloadingCodingKeys()
{
  return &type metadata for StaticSoftwareUpdate.State.DownloadingCodingKeys;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.State.DownloadedCodingKeys()
{
  return &type metadata for StaticSoftwareUpdate.State.DownloadedCodingKeys;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.State.RequestedCodingKeys()
{
  return &type metadata for StaticSoftwareUpdate.State.RequestedCodingKeys;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.State.InstallingCodingKeys()
{
  return &type metadata for StaticSoftwareUpdate.State.InstallingCodingKeys;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.State.InstalledCodingKeys()
{
  return &type metadata for StaticSoftwareUpdate.State.InstalledCodingKeys;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.InstallingStateType.CodingKeys()
{
  return &type metadata for StaticSoftwareUpdate.InstallingStateType.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.InstallingStateType.RemoteCodingKeys()
{
  return &type metadata for StaticSoftwareUpdate.InstallingStateType.RemoteCodingKeys;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.InstallingStateType.UserRequestedCodingKeys()
{
  return &type metadata for StaticSoftwareUpdate.InstallingStateType.UserRequestedCodingKeys;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.Kind.CodingKeys()
{
  return &type metadata for StaticSoftwareUpdate.Kind.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.Kind.Hh2HomePodCodingKeys()
{
  return &type metadata for StaticSoftwareUpdate.Kind.Hh2HomePodCodingKeys;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.Kind.Hh1HomePodCodingKeys()
{
  return &type metadata for StaticSoftwareUpdate.Kind.Hh1HomePodCodingKeys;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.Kind.HomekitFirmwareUpdateCodingKeys()
{
  return &type metadata for StaticSoftwareUpdate.Kind.HomekitFirmwareUpdateCodingKeys;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.Kind.ThirdPartyFirmwareUpdateCodingKeys()
{
  return &type metadata for StaticSoftwareUpdate.Kind.ThirdPartyFirmwareUpdateCodingKeys;
}

ValueMetadata *type metadata accessor for StaticHH2Update.CodingKeys()
{
  return &type metadata for StaticHH2Update.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticHH2Update.HH2State.CodingKeys()
{
  return &type metadata for StaticHH2Update.HH2State.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticHH2Update.HH2State.PendingDocumentationCodingKeys()
{
  return &type metadata for StaticHH2Update.HH2State.PendingDocumentationCodingKeys;
}

unsigned char *_s13HomeDataModel20StaticSoftwareUpdateV5StateO20InstallingCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x251C470ACLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticHH2Update.HH2State.ReadyCodingKeys()
{
  return &type metadata for StaticHH2Update.HH2State.ReadyCodingKeys;
}

unsigned char *_s13HomeDataModel20StaticSoftwareUpdateV4KindO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251C471B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdateMetadata.CodingKeys()
{
  return &type metadata for StaticSoftwareUpdateMetadata.CodingKeys;
}

unsigned char *_s13HomeDataModel20StaticSoftwareUpdateV19InstallingStateTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251C472B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.CodingKeys()
{
  return &type metadata for StaticSoftwareUpdate.CodingKeys;
}

unint64_t sub_251C472F0()
{
  unint64_t result = qword_269BA0C00;
  if (!qword_269BA0C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0C00);
  }
  return result;
}

unint64_t sub_251C47348()
{
  unint64_t result = qword_269BA0C08;
  if (!qword_269BA0C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0C08);
  }
  return result;
}

unint64_t sub_251C473A0()
{
  unint64_t result = qword_269BA0C10;
  if (!qword_269BA0C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0C10);
  }
  return result;
}

unint64_t sub_251C473F8()
{
  unint64_t result = qword_269BA0C18;
  if (!qword_269BA0C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0C18);
  }
  return result;
}

unint64_t sub_251C47450()
{
  unint64_t result = qword_269BA0C20;
  if (!qword_269BA0C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0C20);
  }
  return result;
}

unint64_t sub_251C474A8()
{
  unint64_t result = qword_269BA0C28;
  if (!qword_269BA0C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0C28);
  }
  return result;
}

unint64_t sub_251C47500()
{
  unint64_t result = qword_269BA0C30;
  if (!qword_269BA0C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0C30);
  }
  return result;
}

unint64_t sub_251C47558()
{
  unint64_t result = qword_269BA0C38;
  if (!qword_269BA0C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0C38);
  }
  return result;
}

unint64_t sub_251C475B0()
{
  unint64_t result = qword_269BA0C40;
  if (!qword_269BA0C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0C40);
  }
  return result;
}

unint64_t sub_251C47608()
{
  unint64_t result = qword_269BA0C48;
  if (!qword_269BA0C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0C48);
  }
  return result;
}

unint64_t sub_251C47660()
{
  unint64_t result = qword_269BA0C50;
  if (!qword_269BA0C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0C50);
  }
  return result;
}

unint64_t sub_251C476B8()
{
  unint64_t result = qword_269BA0C58;
  if (!qword_269BA0C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0C58);
  }
  return result;
}

unint64_t sub_251C47710()
{
  unint64_t result = qword_269BA0C60;
  if (!qword_269BA0C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0C60);
  }
  return result;
}

unint64_t sub_251C47768()
{
  unint64_t result = qword_269BA0C68;
  if (!qword_269BA0C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0C68);
  }
  return result;
}

unint64_t sub_251C477C0()
{
  unint64_t result = qword_269BA0C70;
  if (!qword_269BA0C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0C70);
  }
  return result;
}

unint64_t sub_251C47818()
{
  unint64_t result = qword_269BA0C78;
  if (!qword_269BA0C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0C78);
  }
  return result;
}

unint64_t sub_251C47870()
{
  unint64_t result = qword_269BA0C80;
  if (!qword_269BA0C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0C80);
  }
  return result;
}

unint64_t sub_251C478C8()
{
  unint64_t result = qword_269BA0C88;
  if (!qword_269BA0C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0C88);
  }
  return result;
}

unint64_t sub_251C47920()
{
  unint64_t result = qword_269BA0C90;
  if (!qword_269BA0C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0C90);
  }
  return result;
}

unint64_t sub_251C47978()
{
  unint64_t result = qword_269BA0C98;
  if (!qword_269BA0C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0C98);
  }
  return result;
}

unint64_t sub_251C479D0()
{
  unint64_t result = qword_269BA0CA0;
  if (!qword_269BA0CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0CA0);
  }
  return result;
}

unint64_t sub_251C47A28()
{
  unint64_t result = qword_269BA0CA8;
  if (!qword_269BA0CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0CA8);
  }
  return result;
}

unint64_t sub_251C47A80()
{
  unint64_t result = qword_269BA0CB0;
  if (!qword_269BA0CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0CB0);
  }
  return result;
}

unint64_t sub_251C47AD8()
{
  unint64_t result = qword_269BA0CB8;
  if (!qword_269BA0CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA0CB8);
  }
  return result;
}