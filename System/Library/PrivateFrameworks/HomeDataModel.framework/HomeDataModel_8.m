uint64_t sub_251ED09B8()
{
  uint64_t v1;

  swift_release();
  if (qword_26B21E388 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251ED0A50, 0, 0);
}

uint64_t sub_251ED0A50()
{
  *(void *)(v0 + 120) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251ED0ADC, v2, v1);
}

uint64_t sub_251ED0ADC()
{
  swift_release();
  *(void *)(v0 + 128) = qword_26B21E178;
  return MEMORY[0x270FA2498](sub_251ED0B50, 0, 0);
}

uint64_t sub_251ED0B50()
{
  uint64_t v1 = *(void *)(v0 + 128);
  sub_251A0D51C(*(void *)(v0 + 96), v0 + 16);
  return MEMORY[0x270FA2498](sub_251ED0BC0, v1, 0);
}

uint64_t sub_251ED0BC0()
{
  MatterSnapshotModerator.receivedAttributeReport(for:device:value:error:)(*(void **)(v0 + 80), *(id *)(v0 + 88), v0 + 16, 0);
  sub_251A1B064(v0 + 16, &qword_26B21E190);
  return MEMORY[0x270FA2498](sub_251ED0C48, 0, 0);
}

uint64_t sub_251ED0C48()
{
  v18 = v0;
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = sub_251F350A0();
  __swift_project_value_buffer(v3, (uint64_t)qword_26B21ECB8);
  sub_251A0D51C(v1, (uint64_t)(v0 + 2));
  id v4 = v2;
  v5 = sub_251F35080();
  os_log_type_t v6 = sub_251F35FD0();
  BOOL v7 = os_log_type_enabled(v5, v6);
  v8 = (void *)v0[11];
  if (v7)
  {
    uint64_t v9 = swift_slowAlloc();
    v15 = (void *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v17 = v16;
    *(_DWORD *)uint64_t v9 = 136315394;
    sub_251A0D51C((uint64_t)(v0 + 2), (uint64_t)(v0 + 6));
    uint64_t v10 = sub_251F35790();
    v0[6] = sub_251A00E84(v10, v11, &v17);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
    *(_WORD *)(v9 + 12) = 2112;
    id v12 = objc_msgSend(v8, sel_hdm_nodeID);
    v0[6] = v12;
    sub_251F361D0();
    void *v15 = v12;

    _os_log_impl(&dword_2519F3000, v5, v6, "Updating for MTRDevice delegate receivedAttributeReport with manually extracted value (%s for device: %@", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v15, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v16, -1, -1);
    MEMORY[0x2533AC760](v9, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  }
  v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_251ED0F08(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(id, uint64_t))
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
  uint64_t v8 = sub_251F35AC0();
  id v9 = a3;
  id v10 = a1;
  a5(v9, v8);

  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall DataModel.deviceBecameActive(_:)(MTRDevice a1)
{
}

Swift::Void __swiftcall DataModel.deviceCachePrimed(_:)(MTRDevice a1)
{
}

uint64_t sub_251ED1094(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v3 = MEMORY[0x263F8EE78];
    if (!v2) {
      return v3;
    }
    uint64_t v16 = MEMORY[0x263F8EE78];
    uint64_t result = sub_251A3E690(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v5 = 0;
    uint64_t v3 = v16;
    unint64_t v15 = v1 & 0xC000000000000001;
    unint64_t v6 = v1;
    while (v2 != v5)
    {
      if (v15) {
        id v7 = (id)MEMORY[0x2533AB3A0](v5, v1);
      }
      else {
        id v7 = *(id *)(v1 + 8 * v5 + 32);
      }
      uint64_t v8 = v7;
      id v9 = sub_251D90BA4(v7);
      uint64_t v11 = v10;

      unint64_t v13 = *(void *)(v16 + 16);
      unint64_t v12 = *(void *)(v16 + 24);
      if (v13 >= v12 >> 1) {
        sub_251A3E690(v12 > 1, v13 + 1, 1);
      }
      ++v5;
      *(void *)(v16 + 16) = v13 + 1;
      uint64_t v14 = v16 + 16 * v13;
      *(void *)(v14 + 32) = v9;
      *(void *)(v14 + 40) = v11;
      unint64_t v1 = v6;
      if (v2 == v5) {
        return v3;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_251F366C0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void _s13HomeDataModel0bC0C6device_12stateChangedySo9MTRDeviceC_So0G5StateVtF_0(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E5C0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_251F350A0();
  uint64_t v9 = __swift_project_value_buffer(v8, (uint64_t)qword_26B21ECB8);
  id v10 = a1;
  uint64_t v41 = v9;
  uint64_t v11 = sub_251F35080();
  os_log_type_t v12 = sub_251F35FD0();
  if (os_log_type_enabled(v11, v12))
  {
    v38 = v7;
    uint64_t v39 = v5;
    uint64_t v40 = v4;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = (void *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v42 = v15;
    uint64_t v43 = a2;
    *(_DWORD *)uint64_t v13 = 136315650;
    type metadata accessor for MTRDeviceState(0);
    uint64_t v16 = sub_251F35790();
    uint64_t v43 = sub_251A00E84(v16, v17, &v42);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2112;
    id v18 = objc_msgSend(v10, sel_hdm_nodeID);
    uint64_t v43 = (uint64_t)v18;
    sub_251F361D0();
    *uint64_t v14 = v18;

    *(_WORD *)(v13 + 22) = 1024;
    v46 = &type metadata for HomeKitFeatures;
    unint64_t v47 = sub_251A4DA94();
    LOBYTE(v43) = 4;
    char v19 = sub_251F34F60();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v43);
    if (v19) {
      goto LABEL_8;
    }
    if (qword_269B9C4C0 != -1) {
      swift_once();
    }
    if (byte_269BA38B2)
    {
LABEL_8:
      int v20 = 1;
    }
    else
    {
      v46 = &type metadata for HomeAppFeatures;
      unint64_t v47 = sub_251A23FFC();
      LOBYTE(v43) = 2;
      char v21 = sub_251F34F60();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v43);
      int v20 = v21 & 1;
    }
    LODWORD(v43) = v20;
    sub_251F361D0();
    _os_log_impl(&dword_2519F3000, v11, v12, "Received MTRDevice delegate stateChanged (%s) for device: %@. Will trigger snapshot:%{BOOL}d", (uint8_t *)v13, 0x1Cu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v14, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v15, -1, -1);
    MEMORY[0x2533AC760](v13, -1, -1);

    uint64_t v5 = v39;
    uint64_t v4 = v40;
    id v7 = v38;
  }
  else
  {
  }
  v46 = &type metadata for HomeKitFeatures;
  unint64_t v47 = sub_251A4DA94();
  LOBYTE(v43) = 4;
  char v22 = sub_251F34F60();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v43);
  if (v22) {
    goto LABEL_17;
  }
  if (qword_269B9C4C0 != -1) {
    swift_once();
  }
  if ((byte_269BA38B2 & 1) != 0
    || (v46 = &type metadata for HomeAppFeatures,
        unint64_t v47 = sub_251A23FFC(),
        LOBYTE(v43) = 2,
        char v23 = sub_251F34F60(),
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v43),
        (v23 & 1) != 0))
  {
LABEL_17:
    id v24 = objc_msgSend(v10, sel_hdm_containingHome);
    if (v24)
    {
      uint64_t v25 = (uint64_t)v24;
      id v26 = objc_msgSend(v10, sel_hdm_nodeID);
      id v27 = objc_msgSend(v26, sel_unsignedLongLongValue);

      if (v27)
      {
        if (qword_26B21FD70 != -1) {
          swift_once();
        }
        uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF00);
        __swift_project_value_buffer(v28, (uint64_t)qword_26B21FCF8);
        uint64_t v43 = (uint64_t)v27;
        uint64_t v44 = v25;
        char v45 = 1;
      }
      else
      {
        if (qword_26B21FD70 != -1) {
          swift_once();
        }
        uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF00);
        __swift_project_value_buffer(v37, (uint64_t)qword_26B21FCF8);
        uint64_t v43 = v25;
        uint64_t v44 = 0;
        char v45 = 0;
      }
      sub_251F35CF0();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    else
    {
      id v29 = v10;
      v30 = sub_251F35080();
      os_log_type_t v31 = sub_251F35FB0();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = swift_slowAlloc();
        v33 = (void *)swift_slowAlloc();
        uint64_t v34 = swift_slowAlloc();
        uint64_t v43 = v34;
        *(_DWORD *)uint64_t v32 = 136315650;
        uint64_t v42 = sub_251A00E84(0xD00000000000002DLL, 0x8000000251F73110, &v43);
        sub_251F361D0();
        *(_WORD *)(v32 + 12) = 2112;
        id v35 = objc_msgSend(v29, sel_hdm_nodeID);
        uint64_t v42 = (uint64_t)v35;
        sub_251F361D0();
        void *v33 = v35;
        *(_WORD *)(v32 + 22) = 2112;
        uint64_t v42 = (uint64_t)v29;
        id v36 = v29;
        sub_251F361D0();
        v33[1] = v29;

        _os_log_impl(&dword_2519F3000, v30, v31, "%s: Could not find Home for MTRDevice: %@ %@", (uint8_t *)v32, 0x20u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v33, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v34, -1, -1);
        MEMORY[0x2533AC760](v32, -1, -1);
      }
      else
      {
      }
    }
  }
}

void _s13HomeDataModel0bC0C6device_23receivedAttributeReportySo9MTRDeviceC_SaySDySSypGGtF_0(void *a1, uint64_t a2)
{
  id v165 = a1;
  uint64_t v194 = *MEMORY[0x263EF8340];
  uint64_t v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E5C0);
  uint64_t v159 = *(void *)(v160 - 8);
  MEMORY[0x270FA5388](v160);
  v158 = (char *)v156 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = *(void *)(a2 + 16);
  if (!v8)
  {
LABEL_93:
    if (qword_26B21ECD0 != -1) {
LABEL_112:
    }
      swift_once();
    uint64_t v132 = sub_251F350A0();
    __swift_project_value_buffer(v132, (uint64_t)qword_26B21ECB8);
    swift_bridgeObjectRetain_n();
    id v133 = v165;
    v134 = sub_251F35080();
    os_log_type_t v135 = sub_251F35FD0();
    if (os_log_type_enabled(v134, v135))
    {
      uint64_t v136 = swift_slowAlloc();
      v137 = (void *)swift_slowAlloc();
      uint64_t v138 = swift_slowAlloc();
      *(void *)&long long v192 = v138;
      *(_DWORD *)uint64_t v136 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
      uint64_t v140 = MEMORY[0x2533AAA10](a2, v139);
      unint64_t v142 = v141;
      swift_bridgeObjectRelease();
      *(void *)&long long v190 = sub_251A00E84(v140, v142, (uint64_t *)&v192);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v136 + 12) = 2112;
      id v143 = objc_msgSend(v133, sel_hdm_nodeID);
      *(void *)&long long v190 = v143;
      sub_251F361D0();
      void *v137 = v143;

      _os_log_impl(&dword_2519F3000, v134, v135, "Skipping update for MTRDevice delegate receivedAttributeReport (%s) for device: %@", (uint8_t *)v136, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
LABEL_96:
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v137, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v138, -1, -1);
      MEMORY[0x2533AC760](v136, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return;
  }
  v161 = (char *)v156 - v6;
  uint64_t v157 = v7;
  uint64_t v176 = a2 + 32;
  v179 = (char *)&v192 + 8;
  uint64_t v170 = *MEMORY[0x263F10B70];
  uint64_t v174 = *MEMORY[0x263F10BB8];
  uint64_t v171 = *MEMORY[0x263F10B90];
  uint64_t v166 = *MEMORY[0x263F10C30];
  swift_bridgeObjectRetain();
  int v164 = 0;
  unint64_t v9 = 0;
  unint64_t v162 = v8 - 1;
  uint64_t v175 = MEMORY[0x263F8EE58] + 8;
  *(void *)&long long v10 = 138412802;
  long long v167 = v10;
  v156[1] = MEMORY[0x263F8EE60] + 8;
  *(void *)&long long v10 = 136315394;
  long long v163 = v10;
  uint64_t v169 = a2;
  unint64_t v168 = v8;
LABEL_3:
  if (v9 <= v8) {
    unint64_t v11 = v8;
  }
  else {
    unint64_t v11 = v9;
  }
  unint64_t v178 = v11;
  do
  {
    if (v178 == v9)
    {
      __break(1u);
      goto LABEL_112;
    }
    uint64_t v12 = *(void *)(v176 + 8 * v9);
    id v13 = objc_allocWithZone(MEMORY[0x263F10C58]);
    swift_bridgeObjectRetain_n();
    uint64_t v14 = (void *)sub_251F35540();
    swift_bridgeObjectRelease();
    *(void *)&long long v192 = 0;
    id v15 = objc_msgSend(v13, sel_initWithResponseValue_error_, v14, &v192);

    if (v15)
    {
      id v75 = (id)v192;
      swift_bridgeObjectRelease();
      id v76 = objc_msgSend(v15, sel_error);
      if (v76)
      {
        v77 = v76;
        if (qword_26B21ECD0 != -1) {
          swift_once();
        }
        uint64_t v78 = sub_251F350A0();
        __swift_project_value_buffer(v78, (uint64_t)qword_26B21ECB8);
        id v79 = v15;
        id v80 = v77;
        id v81 = v79;
        id v82 = v80;
        v83 = sub_251F35080();
        os_log_type_t v84 = sub_251F35FB0();
        if (os_log_type_enabled(v83, v84))
        {
          uint64_t v85 = swift_slowAlloc();
          uint64_t v86 = swift_slowAlloc();
          *(void *)&long long v192 = v86;
          *(_DWORD *)uint64_t v85 = v163;
          *(void *)&long long v190 = objc_msgSend(v81, sel_path);
          sub_251A1A568(0, &qword_269BA5560);
          uint64_t v87 = sub_251F35790();
          *(void *)(v85 + 4) = sub_251A00E84(v87, v88, (uint64_t *)&v192);

          swift_bridgeObjectRelease();
          *(_WORD *)(v85 + 12) = 2080;
          *(void *)&long long v190 = v82;
          id v89 = v82;
          __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1B0);
          uint64_t v90 = sub_251F35790();
          *(void *)(v85 + 14) = sub_251A00E84(v90, v91, (uint64_t *)&v192);

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_2519F3000, v83, v84, "AttributeReport: path (%s) has error: %s", (uint8_t *)v85, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2533AC760](v86, -1, -1);
          MEMORY[0x2533AC760](v85, -1, -1);
        }
        else
        {
        }
      }
      uint64_t v92 = sub_251F35CD0();
      uint64_t v93 = *(void *)(v92 - 8);
      uint64_t v94 = (uint64_t)v161;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v93 + 56))(v161, 1, 1, v92);
      v95 = (void *)swift_allocObject();
      v95[2] = 0;
      v95[3] = 0;
      v95[4] = v15;
      id v96 = v165;
      v95[5] = v165;
      int v97 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v93 + 48))(v94, 1, v92);
      id v98 = v15;
      id v99 = v96;
      if (v97 == 1)
      {
        sub_251A1B064(v94, &qword_26B220BB0);
      }
      else
      {
        sub_251F35CC0();
        (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v94, v92);
      }
      unint64_t v8 = v168;
      if (v95[2])
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v100 = sub_251F35C00();
        uint64_t v102 = v101;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v100 = 0;
        uint64_t v102 = 0;
      }
      uint64_t v103 = swift_allocObject();
      *(void *)(v103 + 16) = &unk_269BA5598;
      *(void *)(v103 + 24) = v95;
      a2 = v169;
      if (v102 | v100)
      {
        uint64_t v181 = 0;
        uint64_t v182 = 0;
        uint64_t v183 = v100;
        uint64_t v184 = v102;
      }
      swift_task_create();

      swift_release();
      goto LABEL_77;
    }
    id v16 = (id)v192;
    unint64_t v17 = (void *)sub_251F34A30();

    swift_willThrow();
    if (qword_26B21ECD0 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_251F350A0();
    char v19 = (void *)__swift_project_value_buffer(v18, (uint64_t)qword_26B21ECB8);
    swift_bridgeObjectRetain_n();
    id v20 = v17;
    swift_bridgeObjectRetain();
    id v21 = v17;
    id v177 = v19;
    char v22 = sub_251F35080();
    os_log_type_t v23 = sub_251F35FB0();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v25 = (void *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      *(void *)&long long v190 = v26;
      *(_DWORD *)uint64_t v24 = v167;
      id v27 = v17;
      uint64_t v28 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)&long long v192 = v28;
      sub_251F361D0();
      *uint64_t v25 = v28;

      *(_WORD *)(v24 + 12) = 2080;
      uint64_t v29 = sub_251F356F0();
      uint64_t v31 = *(void *)(v12 + 16);
      uint64_t v180 = v9;
      v173 = v17;
      uint64_t v172 = v26;
      if (v31 && (unint64_t v32 = sub_2519FE798(v29, v30), (v33 & 1) != 0))
      {
        sub_251A0D51C(*(void *)(v12 + 56) + 32 * v32, (uint64_t)&v192);
      }
      else
      {
        long long v192 = 0u;
        long long v193 = 0u;
      }
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E190);
      uint64_t v34 = sub_251F35790();
      *(void *)&long long v192 = sub_251A00E84(v34, v35, (uint64_t *)&v190);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_251F35560();
      unint64_t v38 = v37;
      swift_bridgeObjectRelease();
      *(void *)&long long v192 = sub_251A00E84(v36, v38, (uint64_t *)&v190);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2519F3000, v22, v23, "Failed to decode attribute report with error: %@, path: (%s), report: %s", (uint8_t *)v24, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v25, -1, -1);
      uint64_t v39 = v172;
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v39, -1, -1);
      MEMORY[0x2533AC760](v24, -1, -1);

      a2 = v169;
      unint64_t v8 = v168;
      unint64_t v9 = v180;
      unint64_t v17 = v173;
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v40 = sub_251F356F0();
    if (*(void *)(v12 + 16) && (unint64_t v42 = sub_2519FE798(v40, v41), (v43 & 1) != 0))
    {
      sub_251A0D51C(*(void *)(v12 + 56) + 32 * v42, (uint64_t)&v192);
    }
    else
    {
      long long v192 = 0u;
      long long v193 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v193 + 1))
    {
      if (swift_dynamicCast())
      {
        long long v44 = v190;
        sub_251A1A568(0, &qword_269BA5580);
        sub_251A1A568(0, &qword_269BA5588);
        char v45 = (void *)sub_251F35FE0();
        if (v45)
        {
          uint64_t v180 = v9;
          id v60 = v45;
          swift_bridgeObjectRetain();
          id v61 = v60;
          v62 = sub_251F35080();
          os_log_type_t v63 = sub_251F35FB0();
          if (os_log_type_enabled(v62, v63))
          {
            uint64_t v64 = swift_slowAlloc();
            uint64_t v172 = swift_slowAlloc();
            *(void *)&long long v190 = v172;
            *(_DWORD *)uint64_t v64 = v163;
            *(void *)&long long v192 = v61;
            id v65 = v61;
            uint64_t v66 = sub_251F35790();
            *(void *)&long long v192 = sub_251A00E84(v66, v67, (uint64_t *)&v190);
            sub_251F361D0();

            id v177 = v65;
            swift_bridgeObjectRelease();
            *(_WORD *)(v64 + 12) = 2080;
            uint64_t v68 = sub_251F356F0();
            if (*(void *)(v12 + 16))
            {
              unint64_t v70 = sub_2519FE798(v68, v69);
              unint64_t v8 = v168;
              if (v71)
              {
                sub_251A0D51C(*(void *)(v12 + 56) + 32 * v70, (uint64_t)&v192);
              }
              else
              {
                long long v192 = 0u;
                long long v193 = 0u;
              }
            }
            else
            {
              long long v192 = 0u;
              long long v193 = 0u;
              unint64_t v8 = v168;
            }
            swift_bridgeObjectRelease();
            __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E190);
            uint64_t v72 = sub_251F35790();
            *(void *)&long long v192 = sub_251A00E84(v72, v73, (uint64_t *)&v190);
            sub_251F361D0();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_2519F3000, v62, v63, "Manually decoded error: (%s), path: (%s)", (uint8_t *)v64, 0x16u);
            uint64_t v74 = v172;
            swift_arrayDestroy();
            MEMORY[0x2533AC760](v74, -1, -1);
            MEMORY[0x2533AC760](v64, -1, -1);
            sub_251A1AD94(v44, *((unint64_t *)&v44 + 1));
          }
          else
          {

            sub_251A1AD94(v44, *((unint64_t *)&v44 + 1));
            swift_bridgeObjectRelease_n();

            unint64_t v8 = v168;
          }
          unint64_t v9 = v180;
          a2 = v169;
          goto LABEL_8;
        }
        sub_251A1AD94(v44, *((unint64_t *)&v44 + 1));
      }
    }
    else
    {
      sub_251A1B064((uint64_t)&v192, &qword_26B21E190);
    }
    uint64_t v46 = sub_251F356F0();
    if (*(void *)(v12 + 16) && (unint64_t v48 = sub_2519FE798(v46, v47), (v49 & 1) != 0))
    {
      sub_251A0D51C(*(void *)(v12 + 56) + 32 * v48, (uint64_t)&v192);
    }
    else
    {
      long long v192 = 0u;
      long long v193 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((void *)&v193 + 1))
    {

      swift_bridgeObjectRelease();
      v55 = &v192;
LABEL_53:
      sub_251A1B064((uint64_t)v55, &qword_26B21E190);
      goto LABEL_8;
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
    if ((swift_dynamicCast() & 1) == 0)
    {

      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    uint64_t v50 = v190;
    uint64_t v51 = sub_251F356F0();
    if (*(void *)(v50 + 16) && (unint64_t v53 = sub_2519FE798(v51, v52), (v54 & 1) != 0))
    {
      sub_251A0D51C(*(void *)(v50 + 56) + 32 * v53, (uint64_t)&v190);
    }
    else
    {
      long long v190 = 0u;
      long long v191 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!*((void *)&v191 + 1))
    {

      swift_bridgeObjectRelease();
      v55 = &v190;
      goto LABEL_53;
    }
    sub_251A0D578(&v190, &v192);
    uint64_t v56 = sub_251F356F0();
    if (*(void *)(v12 + 16) && (unint64_t v58 = sub_2519FE798(v56, v57), (v59 & 1) != 0))
    {
      sub_251A0D51C(*(void *)(v12 + 56) + 32 * v58, (uint64_t)&v190);
    }
    else
    {
      long long v190 = 0u;
      long long v191 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((void *)&v191 + 1))
    {
      sub_251A1A568(0, &qword_269BA5560);
      if (swift_dynamicCast())
      {
        v173 = v17;
        unint64_t v104 = v9;
        v105 = v189;
        uint64_t v106 = sub_251F35CD0();
        uint64_t v107 = *(void *)(v106 - 8);
        uint64_t v108 = v157;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v107 + 56))(v157, 1, 1, v106);
        sub_251A0D51C((uint64_t)&v192, (uint64_t)&v190);
        uint64_t v109 = swift_allocObject();
        *(void *)(v109 + 16) = 0;
        *(void *)(v109 + 24) = 0;
        *(void *)(v109 + 32) = v105;
        id v110 = v165;
        *(void *)(v109 + 40) = v165;
        sub_251A0D578(&v190, (_OWORD *)(v109 + 48));
        int v111 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v107 + 48))(v108, 1, v106);
        id v112 = v110;
        id v113 = v105;
        if (v111 == 1)
        {
          sub_251A1B064(v108, &qword_26B220BB0);
        }
        else
        {
          sub_251F35CC0();
          (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v108, v106);
        }
        unint64_t v9 = v104;
        if (*(void *)(v109 + 16))
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v114 = sub_251F35C00();
          uint64_t v116 = v115;
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v114 = 0;
          uint64_t v116 = 0;
        }
        a2 = v169;
        v117 = v173;
        uint64_t v118 = swift_allocObject();
        *(void *)(v118 + 16) = &unk_269BA5570;
        *(void *)(v118 + 24) = v109;
        if (v116 | v114)
        {
          uint64_t v185 = 0;
          uint64_t v186 = 0;
          uint64_t v187 = v114;
          uint64_t v188 = v116;
        }
        swift_task_create();

        swift_release();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v192);
LABEL_77:
        if (v162 != v9)
        {
          ++v9;
          int v164 = 1;
          goto LABEL_3;
        }
        swift_bridgeObjectRelease();
        goto LABEL_89;
      }
    }
    else
    {

      sub_251A1B064((uint64_t)&v190, &qword_26B21E190);
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v192);
LABEL_8:
    ++v9;
  }
  while (v8 != v9);
  swift_bridgeObjectRelease();
  if ((v164 & 1) == 0) {
    goto LABEL_93;
  }
LABEL_89:
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v119 = sub_251F350A0();
  uint64_t v120 = __swift_project_value_buffer(v119, (uint64_t)qword_26B21ECB8);
  swift_bridgeObjectRetain_n();
  id v121 = v165;
  uint64_t v180 = v120;
  v122 = sub_251F35080();
  os_log_type_t v123 = sub_251F35FD0();
  if (os_log_type_enabled(v122, v123))
  {
    uint64_t v124 = swift_slowAlloc();
    v125 = (void *)swift_slowAlloc();
    uint64_t v126 = swift_slowAlloc();
    *(void *)&long long v192 = v126;
    *(_DWORD *)uint64_t v124 = v163;
    swift_bridgeObjectRetain();
    uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
    uint64_t v128 = MEMORY[0x2533AAA10](a2, v127);
    unint64_t v130 = v129;
    swift_bridgeObjectRelease();
    *(void *)&long long v190 = sub_251A00E84(v128, v130, (uint64_t *)&v192);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v124 + 12) = 2112;
    id v131 = objc_msgSend(v121, sel_hdm_nodeID);
    *(void *)&long long v190 = v131;
    sub_251F361D0();
    void *v125 = v131;

    _os_log_impl(&dword_2519F3000, v122, v123, "Updating for MTRDevice delegate receivedAttributeReport (%s) for device: %@", (uint8_t *)v124, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v125, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v126, -1, -1);
    MEMORY[0x2533AC760](v124, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v144 = objc_msgSend(v121, sel_hdm_containingHome);
  if (v144)
  {
    unint64_t v145 = (unint64_t)v144;
    id v146 = objc_msgSend(v121, sel_hdm_nodeID);
    id v147 = objc_msgSend(v146, sel_unsignedLongLongValue);

    if (v147)
    {
      if (qword_26B21FD70 != -1) {
        swift_once();
      }
      uint64_t v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF00);
      __swift_project_value_buffer(v148, (uint64_t)qword_26B21FCF8);
      *(void *)&long long v192 = v147;
      *((void *)&v192 + 1) = v145;
      LOBYTE(v193) = 1;
      v149 = v158;
      sub_251F35CF0();
      (*(void (**)(char *, uint64_t))(v159 + 8))(v149, v160);
    }
    else
    {
      if (qword_26B21FD70 != -1) {
        swift_once();
      }
      uint64_t v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF00);
      __swift_project_value_buffer(v154, (uint64_t)qword_26B21FCF8);
      long long v192 = v145;
      LOBYTE(v193) = 0;
      v155 = v158;
      sub_251F35CF0();
      (*(void (**)(char *, uint64_t))(v159 + 8))(v155, v160);
    }
  }
  else
  {
    id v150 = v121;
    v134 = sub_251F35080();
    os_log_type_t v151 = sub_251F35FB0();
    if (os_log_type_enabled(v134, v151))
    {
      uint64_t v136 = swift_slowAlloc();
      v137 = (void *)swift_slowAlloc();
      uint64_t v138 = swift_slowAlloc();
      *(void *)&long long v192 = v138;
      *(_DWORD *)uint64_t v136 = 136315650;
      *(void *)&long long v190 = sub_251A00E84(0xD00000000000002DLL, 0x8000000251F73110, (uint64_t *)&v192);
      sub_251F361D0();
      *(_WORD *)(v136 + 12) = 2112;
      id v152 = objc_msgSend(v150, (SEL)&selRef_softwareUpdateController_accessory_didUpdateProgress_ + 6);
      *(void *)&long long v190 = v152;
      sub_251F361D0();
      void *v137 = v152;
      *(_WORD *)(v136 + 22) = 2112;
      *(void *)&long long v190 = v150;
      id v153 = v150;
      sub_251F361D0();
      v137[1] = v150;

      _os_log_impl(&dword_2519F3000, v134, v151, "%s: Could not find Home for MTRDevice: %@ %@", (uint8_t *)v136, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      goto LABEL_96;
    }
  }
}

void _s13HomeDataModel0bC0C6device_19receivedEventReportySo9MTRDeviceC_SaySDySSypGGtF_0(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E5C0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_251F350A0();
  uint64_t v9 = __swift_project_value_buffer(v8, (uint64_t)qword_26B21ECB8);
  swift_bridgeObjectRetain_n();
  id v10 = a1;
  uint64_t v44 = v9;
  unint64_t v11 = sub_251F35080();
  os_log_type_t v12 = sub_251F35FD0();
  id v13 = &off_26536F000;
  if (os_log_type_enabled(v11, v12))
  {
    unint64_t v42 = v7;
    uint64_t v43 = v5;
    uint64_t v41 = v4;
    uint64_t v14 = swift_slowAlloc();
    id v15 = (void *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v45 = v16;
    *(_DWORD *)uint64_t v14 = 136315650;
    swift_bridgeObjectRetain();
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
    uint64_t v18 = MEMORY[0x2533AAA10](a2, v17);
    unint64_t v20 = v19;
    swift_bridgeObjectRelease();
    uint64_t v46 = sub_251A00E84(v18, v20, &v45);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2112;
    id v21 = objc_msgSend(v10, sel_hdm_nodeID);
    uint64_t v46 = (uint64_t)v21;
    sub_251F361D0();
    void *v15 = v21;

    *(_WORD *)(v14 + 22) = 1024;
    char v49 = &type metadata for HomeKitFeatures;
    unint64_t v50 = sub_251A4DA94();
    LOBYTE(v46) = 4;
    char v22 = sub_251F34F60();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v46);
    if (v22)
    {
      int v23 = 1;
      uint64_t v4 = v41;
    }
    else
    {
      if (qword_269B9C4C0 != -1) {
        swift_once();
      }
      uint64_t v4 = v41;
      if (byte_269BA38B2)
      {
        int v23 = 1;
      }
      else
      {
        char v49 = &type metadata for HomeAppFeatures;
        unint64_t v50 = sub_251A23FFC();
        LOBYTE(v46) = 2;
        char v24 = sub_251F34F60();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v46);
        int v23 = v24 & 1;
      }
    }
    LODWORD(v46) = v23;
    sub_251F361D0();
    _os_log_impl(&dword_2519F3000, v11, v12, "Received MTRDevice delegate receivedEventReport (%s) for device: %@. Will trigger snapshot:%{BOOL}d", (uint8_t *)v14, 0x1Cu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v15, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v16, -1, -1);
    MEMORY[0x2533AC760](v14, -1, -1);

    uint64_t v7 = v42;
    uint64_t v5 = v43;
    id v13 = &off_26536F000;
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  char v49 = &type metadata for HomeKitFeatures;
  unint64_t v50 = sub_251A4DA94();
  LOBYTE(v46) = 4;
  char v25 = sub_251F34F60();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v46);
  if (v25) {
    goto LABEL_18;
  }
  if (qword_269B9C4C0 != -1) {
    swift_once();
  }
  if ((byte_269BA38B2 & 1) != 0
    || (char v49 = &type metadata for HomeAppFeatures,
        unint64_t v50 = sub_251A23FFC(),
        LOBYTE(v46) = 2,
        char v26 = sub_251F34F60(),
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v46),
        (v26 & 1) != 0))
  {
LABEL_18:
    id v27 = objc_msgSend(v10, sel_hdm_containingHome);
    if (v27)
    {
      uint64_t v28 = (uint64_t)v27;
      id v29 = [v10 (SEL)v13[346]];
      id v30 = objc_msgSend(v29, sel_unsignedLongLongValue);

      if (v30)
      {
        if (qword_26B21FD70 != -1) {
          swift_once();
        }
        uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF00);
        __swift_project_value_buffer(v31, (uint64_t)qword_26B21FCF8);
        uint64_t v46 = (uint64_t)v30;
        uint64_t v47 = v28;
        char v48 = 1;
      }
      else
      {
        if (qword_26B21FD70 != -1) {
          swift_once();
        }
        uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF00);
        __swift_project_value_buffer(v40, (uint64_t)qword_26B21FCF8);
        uint64_t v46 = v28;
        uint64_t v47 = 0;
        char v48 = 0;
      }
      sub_251F35CF0();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    else
    {
      id v32 = v10;
      char v33 = sub_251F35080();
      os_log_type_t v34 = sub_251F35FB0();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = swift_slowAlloc();
        uint64_t v36 = (void *)swift_slowAlloc();
        uint64_t v37 = swift_slowAlloc();
        uint64_t v46 = v37;
        *(_DWORD *)uint64_t v35 = 136315650;
        uint64_t v45 = sub_251A00E84(0xD00000000000002DLL, 0x8000000251F73110, &v46);
        sub_251F361D0();
        *(_WORD *)(v35 + 12) = 2112;
        id v38 = [v32 (SEL)v13[346]];
        uint64_t v45 = (uint64_t)v38;
        sub_251F361D0();
        *uint64_t v36 = v38;
        *(_WORD *)(v35 + 22) = 2112;
        uint64_t v45 = (uint64_t)v32;
        id v39 = v32;
        sub_251F361D0();
        v36[1] = v32;

        _os_log_impl(&dword_2519F3000, v33, v34, "%s: Could not find Home for MTRDevice: %@ %@", (uint8_t *)v35, 0x20u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v36, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v37, -1, -1);
        MEMORY[0x2533AC760](v35, -1, -1);
      }
      else
      {
      }
    }
  }
}

void sub_251ED3AB8(void *a1, const char *a2)
{
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_251F350A0();
  __swift_project_value_buffer(v4, (uint64_t)qword_26B21ECB8);
  id v9 = a1;
  uint64_t v5 = sub_251F35080();
  os_log_type_t v6 = sub_251F35FD0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    id v10 = objc_msgSend(v9, sel_hdm_nodeID);
    sub_251F361D0();
    void *v8 = v10;

    _os_log_impl(&dword_2519F3000, v5, v6, a2, v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v8, -1, -1);
    MEMORY[0x2533AC760](v7, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_251ED3C80()
{
  swift_unknownObjectRelease();

  __swift_destroy_boxed_opaque_existential_0(v0 + 48);
  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_251ED3CD0()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_251AB3A34;
  *(void *)(v2 + 96) = v0 + 48;
  *(_OWORD *)(v2 + 80) = v3;
  return MEMORY[0x270FA2498](sub_251ED0920, 0, 0);
}

uint64_t sub_251ED3D84()
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_251ED3DCC()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_251AB3DD4;
  *(_OWORD *)(v2 + 48) = v3;
  return MEMORY[0x270FA2498](sub_251ECFCE8, 0, 0);
}

uint64_t sub_251ED3E78()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t StaticRVCClusterGroup.actionStatusString.getter()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t result = 0;
  switch(*(unsigned char *)(v0 + 11))
  {
    case 1:
    case 2:
    case 5:
    case 6:
      uint64_t v6 = 0xD000000000000014;
      uint64_t v7 = "HFRVCAutomation_Stop";
      goto LABEL_12;
    case 3:
      return result;
    case 4:
      uint64_t v6 = 0xD000000000000018;
      uint64_t v7 = "HFRVCAutomation_SendHome";
      goto LABEL_12;
    default:
      if (!v4) {
        goto LABEL_11;
      }
      sub_251A1AC64(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
      if (sub_251A81B84((uint64_t)&unk_270261DE8, v3))
      {
        sub_251A4DE90(v2, v1, v4);
        uint64_t v6 = 0xD00000000000001CLL;
        uint64_t v7 = "HFRVCAutomation_VacuumAndMop";
      }
      else if (StaticRVCClusterGroup.CleanMode.isVacuum.getter())
      {
        sub_251A4DE90(v2, v1, v4);
        uint64_t v6 = 0xD000000000000016;
        uint64_t v7 = "HFRVCAutomation_Vacuum";
      }
      else
      {
        BOOL v8 = StaticRVCClusterGroup.CleanMode.isMop.getter();
        sub_251A4DE90(v2, v1, v4);
        if (v8)
        {
          unint64_t v9 = 0x8000000251F731B0;
          uint64_t v6 = 0xD000000000000013;
          return static String.hfLocalized(_:)(v6, v9);
        }
LABEL_11:
        uint64_t v6 = 0xD00000000000001BLL;
        uint64_t v7 = "HFStatusVacuumStateCleaning";
      }
LABEL_12:
      unint64_t v9 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      return static String.hfLocalized(_:)(v6, v9);
  }
}

uint64_t dispatch thunk of MatterActionStatusProvider.actionStatusString.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_251ED4080(unint64_t a1)
{
  unint64_t v2 = v1;
  unint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
    if (!v4) {
      return v5;
    }
    uint64_t v20 = MEMORY[0x263F8EE78];
    uint64_t result = sub_251A3E084(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0) {
      break;
    }
    v16[1] = v2;
    uint64_t v5 = v20;
    unint64_t v18 = v3 & 0xC000000000000001;
    uint64_t v7 = sub_251F34DA0();
    uint64_t v8 = 0;
    uint64_t v17 = v7;
    uint64_t v9 = *(void *)(v7 - 8);
    uint64_t v10 = *(void *)(v9 + 64);
    v16[2] = v9 + 32;
    unint64_t v19 = v3;
    while (v4 != v8)
    {
      MEMORY[0x270FA5388](v7);
      if (v18) {
        id v11 = (id)MEMORY[0x2533AB3A0](v8, v3);
      }
      else {
        id v11 = *(id *)(v3 + 8 * v8 + 32);
      }
      os_log_type_t v12 = v11;
      id v13 = objc_msgSend(v11, sel_uniqueIdentifier);
      sub_251F34D80();

      uint64_t v20 = v5;
      unint64_t v15 = *(void *)(v5 + 16);
      unint64_t v14 = *(void *)(v5 + 24);
      unint64_t v2 = v15 + 1;
      if (v15 >= v14 >> 1)
      {
        sub_251A3E084(v14 > 1, v15 + 1, 1);
        uint64_t v5 = v20;
      }
      ++v8;
      *(void *)(v5 + 16) = v2;
      uint64_t v7 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))(v5+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v15, (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v17);
      unint64_t v3 = v19;
      if (v4 == v8) {
        return v5;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_251F366C0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_251ED42B8(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA08C8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v7 = a1;
  uint64_t v35 = type metadata accessor for ActionCommand(0);
  uint64_t v30 = *(void *)(v35 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v35);
  uint64_t v34 = (uint64_t)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  os_log_type_t v12 = (char *)&v28 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v29 = (uint64_t)&v28 - v13;
  if (a1 >> 62)
  {
LABEL_22:
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_251F366C0();
    if (v14) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v14)
    {
LABEL_3:
      id v32 = (void (**)(char *, void, uint64_t, uint64_t))(v30 + 56);
      unint64_t v33 = v7 & 0xC000000000000001;
      uint64_t v31 = (unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
      unint64_t v36 = MEMORY[0x263F8EE78];
      uint64_t v15 = 4;
      unint64_t v28 = v7;
      do
      {
        uint64_t v16 = v15 - 4;
        if (v33)
        {
          unint64_t v17 = v7;
          id v18 = (id)MEMORY[0x2533AB3A0](v15 - 4, v7);
          uint64_t v19 = v15 - 3;
          if (__OFADD__(v16, 1)) {
            goto LABEL_21;
          }
        }
        else
        {
          unint64_t v17 = v7;
          id v18 = *(id *)(v7 + 8 * v15);
          uint64_t v19 = v15 - 3;
          if (__OFADD__(v16, 1))
          {
LABEL_21:
            __break(1u);
            goto LABEL_22;
          }
        }
        id v20 = v18;
        ActionCommand.init(command:)(v20, (uint64_t)v12);
        if (v2)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          return;
        }
        id v21 = v12;
        sub_251EDBCC8((uint64_t)v12, (uint64_t)v6, type metadata accessor for ActionCommand);
        uint64_t v22 = v35;
        (*v32)(v6, 0, 1, v35);

        if ((*v31)(v6, 1, v22) == 1)
        {
          sub_251A1B064((uint64_t)v6, &qword_269BA08C8);
          unint64_t v7 = v17;
        }
        else
        {
          uint64_t v23 = v29;
          sub_251EDBCC8((uint64_t)v6, v29, type metadata accessor for ActionCommand);
          sub_251EDBCC8(v23, v34, type metadata accessor for ActionCommand);
          if (swift_isUniquelyReferenced_nonNull_native()) {
            unint64_t v24 = v36;
          }
          else {
            unint64_t v24 = sub_251F11048(0, *(void *)(v36 + 16) + 1, 1, v36);
          }
          unint64_t v26 = *(void *)(v24 + 16);
          unint64_t v25 = *(void *)(v24 + 24);
          if (v26 >= v25 >> 1) {
            unint64_t v24 = sub_251F11048(v25 > 1, v26 + 1, 1, v24);
          }
          *(void *)(v24 + 16) = v26 + 1;
          unint64_t v27 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
          unint64_t v36 = v24;
          sub_251EDBCC8(v34, v24 + v27 + *(void *)(v30 + 72) * v26, type metadata accessor for ActionCommand);
          unint64_t v7 = v28;
        }
        ++v15;
        os_log_type_t v12 = v21;
      }
      while (v19 != v14);
    }
  }
  swift_bridgeObjectRelease();
}

int *StaticTrigger.init(trigger:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v121 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA55A8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v117 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Action();
  uint64_t v135 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v118 = (unsigned __int8 *)&v117 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v124 = (uint64_t)&v117 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  os_log_type_t v123 = (unint64_t *)((char *)&v117 - v12);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v136 = (uint64_t *)((char *)&v117 - v14);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  unint64_t v17 = (char *)&v117 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v134 = (uint64_t)&v117 - v18;
  id v19 = objc_msgSend(a1, sel_events);
  sub_251A1A568(0, (unint64_t *)&unk_269BA0320);
  unint64_t v20 = sub_251F35AC0();

  id v21 = a1;
  uint64_t v22 = 0;
  uint64_t v120 = sub_251EDADDC(v20, v21);
  swift_bridgeObjectRelease();

  id v125 = v21;
  id v23 = objc_msgSend(v21, sel_actionSets);
  uint64_t v126 = (const char *)sub_251A1A568(0, &qword_26B21EB00);
  unint64_t v24 = sub_251F35AC0();

  unint64_t v141 = MEMORY[0x263F8EE78];
  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_251F366C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v137 = v6;
  uint64_t v138 = v5;
  uint64_t v139 = v17;
  if (v25)
  {
    if (v25 < 1)
    {
      __break(1u);
      goto LABEL_87;
    }
    v122 = 0;
    uint64_t v26 = 0;
    uint64_t v140 = "HMActionSetTypeUserDefined";
    *(void *)&long long v133 = "HMActionSetTypeHomeArrival";
    id v131 = "HMActionSetTypeHomeDeparture";
    uint64_t v132 = (const char *)0xD000000000000015;
    unint64_t v130 = (const char *)0xD000000000000014;
    unint64_t v129 = "HMActionSetTypeWakeUp";
    uint64_t v128 = "HMActionSetTypeSleep";
    uint64_t v127 = "HMActionSetTypeTriggerOwned";
    do
    {
      if ((v24 & 0xC000000000000001) != 0) {
        id v27 = (id)MEMORY[0x2533AB3A0](v26, v24);
      }
      else {
        id v27 = *(id *)(v24 + 8 * v26 + 32);
      }
      unint64_t v28 = v27;
      id v29 = objc_msgSend(v27, sel_actionSetType);
      sub_251F356F0();

      uint64_t v30 = sub_251F36750();
      swift_bridgeObjectRelease();
      switch(v30)
      {
        case 0:
        case 1:
        case 2:
        case 3:
        case 4:
        case 6:
          char v31 = sub_251F36B10();
          swift_bridgeObjectRelease();
          if ((v31 & 1) == 0) {
            goto LABEL_6;
          }

          break;
        case 5:

          swift_bridgeObjectRelease();
          break;
        default:
LABEL_6:
          sub_251F364F0();
          sub_251F36530();
          sub_251F36540();
          sub_251F36500();
          break;
      }
      ++v26;
    }
    while (v25 != v26);
    swift_bridgeObjectRelease();
    unint64_t v32 = v141;
    uint64_t v6 = v137;
    uint64_t v5 = v138;
    unint64_t v17 = v139;
    uint64_t v22 = v122;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v32 = MEMORY[0x263F8EE78];
  }
  uint64_t v119 = sub_251ED4080(v32);
  swift_release();
  id v33 = objc_msgSend(v125, sel_actionSets);
  unint64_t v34 = sub_251F35AC0();

  unint64_t v141 = MEMORY[0x263F8EE78];
  if (v34 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_251F366C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v35 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  v122 = v22;
  if (!v35)
  {
    swift_bridgeObjectRelease();
    unint64_t v42 = MEMORY[0x263F8EE78];
    goto LABEL_33;
  }
  if (v35 < 1)
  {
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
  uint64_t v36 = 0;
  *(void *)&long long v133 = "HMActionSetTypeUserDefined";
  uint64_t v140 = (const char *)0x8000000251F65D40;
  uint64_t v132 = "HMActionSetTypeHomeArrival";
  unint64_t v130 = "HMActionSetTypeHomeDeparture";
  id v131 = (const char *)0xD000000000000015;
  unint64_t v129 = (const char *)0xD000000000000014;
  uint64_t v128 = "HMActionSetTypeWakeUp";
  uint64_t v127 = "HMActionSetTypeSleep";
  uint64_t v126 = "HMActionSetTypeTriggerOwned";
  do
  {
    if ((v34 & 0xC000000000000001) != 0) {
      id v37 = (id)MEMORY[0x2533AB3A0](v36, v34);
    }
    else {
      id v37 = *(id *)(v34 + 8 * v36 + 32);
    }
    id v38 = v37;
    id v39 = objc_msgSend(v37, sel_actionSetType);
    sub_251F356F0();

    uint64_t v40 = sub_251F36750();
    swift_bridgeObjectRelease();
    switch(v40)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 6:
        char v41 = sub_251F36B10();
        swift_bridgeObjectRelease();
        if (v41) {
          goto LABEL_23;
        }
        goto LABEL_30;
      case 5:
        swift_bridgeObjectRelease();
LABEL_23:
        sub_251F364F0();
        sub_251F36530();
        sub_251F36540();
        sub_251F36500();
        break;
      default:
LABEL_30:

        break;
    }
    ++v36;
  }
  while (v35 != v36);
  swift_bridgeObjectRelease();
  unint64_t v42 = v141;
  uint64_t v6 = v137;
  uint64_t v5 = v138;
  unint64_t v17 = v139;
  uint64_t v22 = v122;
LABEL_33:
  unint64_t v141 = MEMORY[0x263F8EE78];
  if ((v42 & 0x8000000000000000) == 0 && (v42 & 0x4000000000000000) == 0)
  {
    uint64_t v43 = *(void *)(v42 + 16);
    swift_retain();
    if (v43) {
      goto LABEL_36;
    }
LABEL_78:
    swift_release_n();
    unint64_t v49 = MEMORY[0x263F8EE78];
    if (!(MEMORY[0x263F8EE78] >> 62)) {
      goto LABEL_43;
    }
    goto LABEL_79;
  }
  swift_retain();
  uint64_t v43 = sub_251F366C0();
  if (!v43) {
    goto LABEL_78;
  }
LABEL_36:
  if (v43 < 1)
  {
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
  uint64_t v44 = 0;
  do
  {
    if ((v42 & 0xC000000000000001) != 0) {
      id v45 = (id)MEMORY[0x2533AB3A0](v44, v42);
    }
    else {
      id v45 = *(id *)(v42 + 8 * v44 + 32);
    }
    uint64_t v46 = v45;
    ++v44;
    id v47 = objc_msgSend(v45, sel_actions);
    sub_251A1A568(0, (unint64_t *)&qword_26B21EB40);
    sub_251A5E2A0();
    uint64_t v48 = sub_251F35E40();

    sub_251ED587C(v48);
  }
  while (v43 != v44);
  swift_release_n();
  unint64_t v49 = v141;
  uint64_t v6 = v137;
  uint64_t v5 = v138;
  unint64_t v17 = v139;
  uint64_t v22 = v122;
  if (!(v141 >> 62))
  {
LABEL_43:
    uint64_t v50 = *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v132 = (const char *)v49;
    if (v50) {
      goto LABEL_44;
    }
    goto LABEL_80;
  }
LABEL_79:
  swift_bridgeObjectRetain();
  uint64_t v50 = sub_251F366C0();
  uint64_t v132 = (const char *)v49;
  if (v50)
  {
LABEL_44:
    if (v50 >= 1)
    {
      uint64_t v52 = (void **)(v49 + 32);
      unint64_t v53 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v135 + 56);
      uint64_t v140 = (const char *)MEMORY[0x263F8EE78];
      *(void *)&long long v51 = 138412546;
      long long v133 = v51;
      while (1)
      {
        char v54 = *v52;
        self;
        uint64_t v55 = swift_dynamicCastObjCClass();
        if (v55) {
          break;
        }
        self;
        uint64_t v59 = swift_dynamicCastObjCClass();
        if (v59)
        {
          id v60 = (void *)v59;
          id v61 = v54;
          Action.MediaPlaybackAction.init(action:)(v60, (uint64_t)&v141);
          if (v22) {
            goto LABEL_67;
          }
          char v62 = v142;
          unint64_t v63 = v143;
          char v64 = v144;
          unint64_t v65 = v145;
          uint64_t v66 = v123;
          *os_log_type_t v123 = v141;
          *((unsigned char *)v66 + 8) = v62;
          v66[2] = v63;
          *((unsigned char *)v66 + 24) = v64;
          v66[4] = v65;
          swift_storeEnumTagMultiPayload();
          uint64_t v58 = (uint64_t)v66;
          goto LABEL_55;
        }
        self;
        uint64_t v71 = swift_dynamicCastObjCClass();
        if (v71)
        {
          uint64_t v72 = (void *)v71;
          id v73 = v54;
          uint64_t v74 = v124;
          Action.NaturalLightAction.init(action:)(v72, v124);
          if (v22) {
            goto LABEL_67;
          }
          swift_storeEnumTagMultiPayload();
          uint64_t v75 = v74;
        }
        else
        {
          self;
          uint64_t v76 = swift_dynamicCastObjCClass();
          if (!v76)
          {
            sub_251E21C10();
            v83 = (void *)swift_allocError();
            swift_willThrow();
            goto LABEL_68;
          }
          v77 = (void *)v76;
          id v78 = v54;
          unsigned __int8 v79 = objc_msgSend(v77, sel_enforceExecutionOrder);
          id v80 = objc_msgSend(v77, sel_commands);
          sub_251A1A568(0, (unint64_t *)&qword_269B9D608);
          unint64_t v81 = sub_251F35AC0();

          sub_251ED42B8(v81);
          if (v22)
          {
            swift_bridgeObjectRelease();

LABEL_67:
            v83 = v22;
LABEL_68:
            uint64_t v22 = 0;
            if (qword_269B9C320 != -1) {
              swift_once();
            }
            uint64_t v84 = sub_251F350A0();
            __swift_project_value_buffer(v84, (uint64_t)qword_269B9FBF0);
            id v85 = v54;
            id v86 = v83;
            id v87 = v85;
            id v88 = v83;
            id v89 = sub_251F35080();
            os_log_type_t v90 = sub_251F35FB0();
            if (os_log_type_enabled(v89, v90))
            {
              uint64_t v91 = swift_slowAlloc();
              uint64_t v92 = (void *)swift_slowAlloc();
              *(_DWORD *)uint64_t v91 = v133;
              id v93 = v83;
              uint64_t v94 = _swift_stdlib_bridgeErrorToNSError();
              *(void *)(v91 + 4) = v94;
              *uint64_t v92 = v94;

              *(_WORD *)(v91 + 12) = 2112;
              *(void *)(v91 + 14) = v87;
              v92[1] = v87;

              _os_log_impl(&dword_2519F3000, v89, v90, "Error: (%@) processing event: %@", (uint8_t *)v91, 0x16u);
              __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
              swift_arrayDestroy();
              MEMORY[0x2533AC760](v92, -1, -1);
              MEMORY[0x2533AC760](v91, -1, -1);
            }
            else
            {
            }
            uint64_t v6 = v137;
            uint64_t v5 = v138;
            (*v53)(v138, 1, 1, v137);
            sub_251A1B064((uint64_t)v5, &qword_269BA55A8);
            unint64_t v17 = v139;
            goto LABEL_48;
          }
          uint64_t v95 = v82;
          swift_bridgeObjectRelease();

          id v96 = v118;
          *uint64_t v118 = v79;
          *((void *)v96 + 1) = v95;
          uint64_t v6 = v137;
          swift_storeEnumTagMultiPayload();
          uint64_t v75 = (uint64_t)v96;
          uint64_t v5 = v138;
        }
        sub_251EDBCC8(v75, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for Action);
        unint64_t v17 = v139;
LABEL_56:
        (*v53)(v5, 0, 1, v6);
        uint64_t v67 = v134;
        sub_251EDBCC8((uint64_t)v5, v134, (uint64_t (*)(void))type metadata accessor for Action);
        sub_251EDBCC8(v67, (uint64_t)v136, (uint64_t (*)(void))type metadata accessor for Action);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v140 = (const char *)sub_251F0FB5C(0, *((void *)v140 + 2) + 1, 1, (unint64_t)v140);
        }
        unint64_t v69 = *((void *)v140 + 2);
        unint64_t v68 = *((void *)v140 + 3);
        if (v69 >= v68 >> 1) {
          uint64_t v140 = (const char *)sub_251F0FB5C(v68 > 1, v69 + 1, 1, (unint64_t)v140);
        }
        unint64_t v70 = v140;
        *((void *)v140 + 2) = v69 + 1;
        sub_251EDBCC8((uint64_t)v136, (uint64_t)&v70[((*(unsigned __int8 *)(v135 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v135 + 80))+ *(void *)(v135 + 72) * v69], (uint64_t (*)(void))type metadata accessor for Action);
LABEL_48:
        ++v52;
        if (!--v50) {
          goto LABEL_81;
        }
      }
      uint64_t v56 = (void *)v55;
      id v57 = v54;
      Action.CharacteristicAction.init(action:)(v56, (uint64_t)v17);
      if (v22) {
        goto LABEL_67;
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v58 = (uint64_t)v17;
LABEL_55:
      sub_251EDBCC8(v58, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for Action);
      goto LABEL_56;
    }
LABEL_89:
    __break(1u);
    JUMPOUT(0x251ED57E8);
  }
LABEL_80:
  uint64_t v140 = (const char *)MEMORY[0x263F8EE78];
LABEL_81:
  swift_bridgeObjectRelease_n();
  id v97 = v125;
  id v98 = objc_msgSend(v125, sel_uniqueIdentifier);
  uint64_t v99 = sub_251F34DA0();
  uint64_t v136 = &v117;
  uint64_t v100 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99);
  uint64_t v102 = (char *)&v117 - ((v101 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  id v103 = objc_msgSend(v97, sel_name);
  uint64_t v104 = sub_251F356F0();
  uint64_t v138 = v105;
  uint64_t v139 = (char *)v104;

  LODWORD(v137) = objc_msgSend(v97, sel_isEnabled);
  uint64_t v106 = sub_251EE0C08(v120);
  swift_bridgeObjectRelease();
  uint64_t v107 = sub_251EE0D94((uint64_t)v140);
  swift_bridgeObjectRelease();
  uint64_t v108 = sub_251EE04F8(v119);
  swift_bridgeObjectRelease();
  unsigned __int8 v109 = objc_msgSend(v97, sel_executeOnce);
  id v110 = objc_msgSend(v97, sel_policy);

  if (!v110) {
    goto LABEL_84;
  }
  self;
  int v111 = (void *)swift_dynamicCastObjCClass();
  if (!v111)
  {

LABEL_84:
    int v111 = 0;
  }
  BOOL v112 = v111 != 0;

  uint64_t v113 = v121;
  (*(void (**)(uint64_t, char *, uint64_t))(v100 + 32))(v121, v102, v99);
  uint64_t result = (int *)type metadata accessor for StaticTrigger();
  uint64_t v115 = (void *)(v113 + result[5]);
  uint64_t v116 = v138;
  *uint64_t v115 = v139;
  v115[1] = v116;
  *(void *)(v113 + result[7]) = v106;
  *(void *)(v113 + result[8]) = v107;
  *(void *)(v113 + result[9]) = v108;
  *(unsigned char *)(v113 + result[10]) = v109;
  *(unsigned char *)(v113 + result[6]) = v137;
  *(unsigned char *)(v113 + result[11]) = v112;
  return result;
}

uint64_t sub_251ED5820(uint64_t a1)
{
  return sub_251ED774C(a1, (uint64_t (*)(void))sub_251F0F4F8, (uint64_t (*)(void))type metadata accessor for StaticHome);
}

uint64_t sub_251ED584C(unint64_t a1)
{
  return sub_251ED7B24(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_251A94234);
}

uint64_t sub_251ED5864(unint64_t a1)
{
  return sub_251ED7B24(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_251A94454);
}

uint64_t sub_251ED587C(uint64_t result)
{
  uint64_t v4 = v2;
  uint64_t v5 = result;
  if ((result & 0xC000000000000001) != 0)
  {
    uint64_t result = sub_251F36300();
    uint64_t v6 = result;
  }
  else
  {
    uint64_t v6 = *(void *)(result + 16);
  }
  if ((unint64_t)*v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_251F366C0();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v8 = v20 + v6;
    if (!__OFADD__(v20, v6)) {
      goto LABEL_6;
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v7 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 + v6;
  if (__OFADD__(v7, v6)) {
    goto LABEL_24;
  }
LABEL_6:
  unint64_t v9 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v4 = v9;
  uint64_t v11 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v9 & 0x8000000000000000) == 0 && (v9 & 0x4000000000000000) == 0)
  {
    uint64_t v12 = v9 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_16;
    }
    uint64_t v11 = 1;
  }
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_251F366C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v13 <= v8) {
    uint64_t v13 = v8;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = MEMORY[0x2533AB3B0](v11, v13, 1, v9);
  swift_bridgeObjectRelease();
  *uint64_t v4 = v14;
  uint64_t v12 = v14 & 0xFFFFFFFFFFFFFF8;
LABEL_16:
  uint64_t v15 = *(void *)(v12 + 16);
  uint64_t v16 = (*(void *)(v12 + 24) >> 1) - v15;
  uint64_t result = (uint64_t)sub_251A926D8(&v44, (void *)(v12 + 8 * v15 + 32), v16, v5);
  if (result < v6)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (result >= 1)
  {
    uint64_t v17 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v18 = __OFADD__(v17, result);
    uint64_t v19 = v17 + result;
    if (v18)
    {
      __break(1u);
LABEL_33:
      if (!sub_251F36340()) {
        goto LABEL_21;
      }
      sub_251A1A568(0, (unint64_t *)&qword_26B21EB40);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      unint64_t v24 = v43;
      swift_unknownObjectRelease();
      while (2)
      {
        if (!v24) {
          goto LABEL_21;
        }
        while (1)
        {
          uint64_t v26 = *v4 & 0xFFFFFFFFFFFFFF8;
          if (v3 + 1 > *(void *)(v26 + 0x18) >> 1)
          {
            sub_251F35B10();
            uint64_t v26 = *v4 & 0xFFFFFFFFFFFFFF8;
          }
          uint64_t v27 = *(void *)(v26 + 24) >> 1;
          if (v3 < v27) {
            break;
          }
LABEL_37:
          *(void *)(v26 + 16) = v3;
        }
        uint64_t v28 = v26 + 32;
        while (1)
        {
          *(void *)(v28 + 8 * v3++) = v24;
          int64_t v29 = v47;
          if (v44 < 0)
          {
            if (!sub_251F36340()) {
              goto LABEL_74;
            }
            sub_251A1A568(0, (unint64_t *)&qword_26B21EB40);
            swift_unknownObjectRetain();
            swift_dynamicCast();
            unint64_t v24 = v43;
            swift_unknownObjectRelease();
            goto LABEL_49;
          }
          if (!v48) {
            break;
          }
          unint64_t v30 = (v48 - 1) & v48;
          unint64_t v31 = __clz(__rbit64(v48)) | (v47 << 6);
LABEL_45:
          unint64_t v24 = *(void **)(*(void *)(v44 + 48) + 8 * v31);
          id v32 = v24;
LABEL_46:
          int64_t v47 = v29;
          unint64_t v48 = v30;
LABEL_49:
          if (!v24)
          {
LABEL_74:
            *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v3;
            goto LABEL_21;
          }
          if (v3 >= v27)
          {
            uint64_t v26 = *v4 & 0xFFFFFFFFFFFFFF8;
            goto LABEL_37;
          }
        }
        int64_t v33 = v47 + 1;
        if (__OFADD__(v47, 1))
        {
          __break(1u);
LABEL_98:
          unint64_t v24 = 0;
          unint64_t v22 = 0;
          int64_t v21 = v1;
LABEL_30:
          int64_t v47 = v21;
          unint64_t v48 = v22;
          continue;
        }
        break;
      }
      int64_t v34 = (unint64_t)(v46 + 64) >> 6;
      if (v33 >= v34)
      {
        unint64_t v24 = 0;
        unint64_t v30 = 0;
        goto LABEL_46;
      }
      unint64_t v35 = *(void *)(v45 + 8 * v33);
      if (!v35)
      {
        int64_t v36 = v47 + 2;
        if (v47 + 2 >= v34) {
          goto LABEL_71;
        }
        unint64_t v35 = *(void *)(v45 + 8 * v36);
        if (!v35)
        {
          int64_t v1 = v47 + 3;
          if (v47 + 3 >= v34) {
            goto LABEL_72;
          }
          unint64_t v35 = *(void *)(v45 + 8 * v1);
          if (v35)
          {
            int64_t v33 = v47 + 3;
            goto LABEL_55;
          }
          int64_t v36 = v47 + 4;
          if (v47 + 4 >= v34)
          {
            unint64_t v24 = 0;
            unint64_t v30 = 0;
            int64_t v29 = v47 + 3;
            goto LABEL_46;
          }
          unint64_t v35 = *(void *)(v45 + 8 * v36);
          if (!v35)
          {
            int64_t v33 = v47 + 5;
            if (v47 + 5 >= v34)
            {
LABEL_72:
              unint64_t v24 = 0;
              unint64_t v30 = 0;
              int64_t v29 = v36;
              goto LABEL_46;
            }
            unint64_t v35 = *(void *)(v45 + 8 * v33);
            if (!v35)
            {
              int64_t v33 = v34 - 1;
              uint64_t v37 = v47 + 6;
              while (v34 != v37)
              {
                unint64_t v35 = *(void *)(v45 + 8 * v37++);
                if (v35)
                {
                  int64_t v33 = v37 - 1;
                  goto LABEL_55;
                }
              }
LABEL_71:
              unint64_t v24 = 0;
              unint64_t v30 = 0;
              int64_t v29 = v33;
              goto LABEL_46;
            }
            goto LABEL_55;
          }
        }
        int64_t v33 = v36;
      }
LABEL_55:
      unint64_t v30 = (v35 - 1) & v35;
      unint64_t v31 = __clz(__rbit64(v35)) + (v33 << 6);
      int64_t v29 = v33;
      goto LABEL_45;
    }
    *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v19;
  }
  if (result != v16)
  {
LABEL_21:
    sub_251A1E630();
    return sub_251F35AE0();
  }
LABEL_26:
  uint64_t v3 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  int64_t v21 = v47;
  if (v44 < 0) {
    goto LABEL_33;
  }
  if (v48)
  {
    unint64_t v22 = (v48 - 1) & v48;
    unint64_t v23 = __clz(__rbit64(v48)) | (v47 << 6);
LABEL_29:
    unint64_t v24 = *(void **)(*(void *)(v44 + 48) + 8 * v23);
    id v25 = v24;
    goto LABEL_30;
  }
  int64_t v38 = v47 + 1;
  if (!__OFADD__(v47, 1))
  {
    int64_t v39 = (unint64_t)(v46 + 64) >> 6;
    if (v38 >= v39)
    {
      unint64_t v24 = 0;
      unint64_t v22 = 0;
      goto LABEL_30;
    }
    unint64_t v40 = *(void *)(v45 + 8 * v38);
    if (v40) {
      goto LABEL_79;
    }
    int64_t v41 = v47 + 2;
    if (v47 + 2 >= v39)
    {
LABEL_95:
      unint64_t v24 = 0;
      unint64_t v22 = 0;
      int64_t v21 = v38;
      goto LABEL_30;
    }
    unint64_t v40 = *(void *)(v45 + 8 * v41);
    if (v40) {
      goto LABEL_83;
    }
    int64_t v1 = v47 + 3;
    if (v47 + 3 < v39)
    {
      unint64_t v40 = *(void *)(v45 + 8 * v1);
      if (v40)
      {
        int64_t v38 = v47 + 3;
        goto LABEL_79;
      }
      int64_t v41 = v47 + 4;
      if (v47 + 4 >= v39) {
        goto LABEL_98;
      }
      unint64_t v40 = *(void *)(v45 + 8 * v41);
      if (v40)
      {
LABEL_83:
        int64_t v38 = v41;
LABEL_79:
        unint64_t v22 = (v40 - 1) & v40;
        unint64_t v23 = __clz(__rbit64(v40)) + (v38 << 6);
        int64_t v21 = v38;
        goto LABEL_29;
      }
      int64_t v38 = v47 + 5;
      if (v47 + 5 < v39)
      {
        unint64_t v40 = *(void *)(v45 + 8 * v38);
        if (!v40)
        {
          int64_t v38 = v39 - 1;
          uint64_t v42 = v47 + 6;
          do
          {
            if (v39 == v42) {
              goto LABEL_95;
            }
            unint64_t v40 = *(void *)(v45 + 8 * v42++);
          }
          while (!v40);
          int64_t v38 = v42 - 1;
        }
        goto LABEL_79;
      }
    }
    unint64_t v24 = 0;
    unint64_t v22 = 0;
    int64_t v21 = v41;
    goto LABEL_30;
  }
  __break(1u);
  return result;
}

uint64_t sub_251ED5E7C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v6 = a1;
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (int64_t v8 = *((void *)v3 + 3) >> 1, v8 < v5))
  {
    if (v4 <= v5) {
      int64_t v9 = v4 + v2;
    }
    else {
      int64_t v9 = v4;
    }
    uint64_t v3 = sub_251F0F754(isUniquelyReferenced_nonNull_native, v9, 1, v3);
    int64_t v8 = *((void *)v3 + 3) >> 1;
  }
  uint64_t v10 = *((void *)v3 + 2);
  uint64_t v11 = v8 - v10;
  uint64_t result = (uint64_t)sub_251A926F4(v44, &v3[v10 + 32], v8 - v10, v6);
  if (result < v2) {
    goto LABEL_15;
  }
  if (result)
  {
    uint64_t v16 = *((void *)v3 + 2);
    BOOL v17 = __OFADD__(v16, result);
    uint64_t v18 = v16 + result;
    if (v17)
    {
      __break(1u);
      goto LABEL_51;
    }
    *((void *)v3 + 2) = v18;
  }
  if (result != v11) {
    goto LABEL_13;
  }
LABEL_16:
  uint64_t v6 = *((void *)v3 + 2);
  uint64_t result = v44[0];
  uint64_t v13 = (char *)v44[1];
  uint64_t v14 = v44[2];
  int64_t v15 = v45;
  if (!v46)
  {
LABEL_51:
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      return result;
    }
    int64_t v24 = (unint64_t)(v14 + 64) >> 6;
    if (v22 >= v24) {
      goto LABEL_13;
    }
    id v25 = v13;
    unint64_t v37 = *(void *)&v13[8 * v22];
    if (!v37)
    {
      int64_t v38 = v15 + 2;
      if (v15 + 2 >= v24) {
        goto LABEL_13;
      }
      unint64_t v37 = *(void *)&v13[8 * v38];
      if (v37)
      {
LABEL_59:
        int64_t v22 = v38;
      }
      else
      {
        if (v15 + 3 >= v24) {
          goto LABEL_13;
        }
        unint64_t v37 = *(void *)&v13[8 * v15 + 24];
        if (!v37) {
          goto LABEL_65;
        }
        int64_t v22 = v15 + 3;
      }
    }
LABEL_54:
    unint64_t v19 = (v37 - 1) & v37;
    unint64_t v20 = __clz(__rbit64(v37)) + (v22 << 6);
    int64_t v15 = v22;
    uint64_t v13 = v25;
    goto LABEL_18;
  }
  unint64_t v19 = (v46 - 1) & v46;
  unint64_t v20 = __clz(__rbit64(v46)) | (v45 << 6);
LABEL_18:
  unsigned int v21 = *(unsigned __int8 *)(*(void *)(result + 48) + v20);
  if (v21 > 0xEF) {
    goto LABEL_13;
  }
  int64_t v22 = (unint64_t)(v14 + 64) >> 6;
  while (1)
  {
    unint64_t v23 = *((void *)v3 + 3);
    int64_t v24 = v23 >> 1;
    if ((uint64_t)(v23 >> 1) < v6 + 1)
    {
      int64_t v42 = v22;
      uint64_t v43 = result;
      uint64_t v40 = v14;
      int64_t v41 = v13;
      int64_t v33 = v15;
      int64_t v34 = v3;
      unint64_t v35 = v19;
      int64_t v36 = sub_251F0F754((char *)(v23 > 1), v6 + 1, 1, v34);
      uint64_t v13 = v41;
      int64_t v22 = v42;
      unint64_t v19 = v35;
      int64_t v15 = v33;
      uint64_t v14 = v40;
      uint64_t v3 = v36;
      uint64_t result = v43;
      int64_t v24 = *((void *)v3 + 3) >> 1;
    }
    id v25 = v3 + 32;
    if (v6 < v24) {
      break;
    }
LABEL_20:
    *((void *)v3 + 2) = v6;
    if (v21 > 0xEF) {
      goto LABEL_13;
    }
  }
  while (1)
  {
    v25[v6++] = v21;
    if (!v19) {
      break;
    }
    unint64_t v26 = __clz(__rbit64(v19));
    v19 &= v19 - 1;
    unint64_t v27 = v26 | (v15 << 6);
LABEL_26:
    unsigned int v21 = *(unsigned __int8 *)(*(void *)(result + 48) + v27);
    if (v21 > 0xEF || v6 >= v24) {
      goto LABEL_20;
    }
  }
  int64_t v29 = v15 + 1;
  if (!__OFADD__(v15, 1))
  {
    if (v29 >= v22) {
      goto LABEL_55;
    }
    unint64_t v30 = *(void *)&v13[8 * v29];
    if (v30) {
      goto LABEL_41;
    }
    int64_t v31 = v15 + 2;
    if (v15 + 2 >= v22) {
      goto LABEL_55;
    }
    unint64_t v30 = *(void *)&v13[8 * v31];
    if (!v30)
    {
      if (v15 + 3 >= v22) {
        goto LABEL_55;
      }
      unint64_t v30 = *(void *)&v13[8 * v15 + 24];
      if (v30)
      {
        int64_t v29 = v15 + 3;
        goto LABEL_41;
      }
      int64_t v31 = v15 + 4;
      if (v15 + 4 >= v22) {
        goto LABEL_55;
      }
      unint64_t v30 = *(void *)&v13[8 * v31];
      if (!v30)
      {
        int64_t v29 = v15 + 5;
        if (v15 + 5 >= v22) {
          goto LABEL_55;
        }
        unint64_t v30 = *(void *)&v13[8 * v29];
        if (!v30)
        {
          int64_t v32 = v15 + 6;
          while (v22 != v32)
          {
            unint64_t v30 = *(void *)&v13[8 * v32++];
            if (v30)
            {
              int64_t v29 = v32 - 1;
              goto LABEL_41;
            }
          }
LABEL_55:
          *((void *)v3 + 2) = v6;
          goto LABEL_13;
        }
        goto LABEL_41;
      }
    }
    int64_t v29 = v31;
LABEL_41:
    unint64_t v19 = (v30 - 1) & v30;
    unint64_t v27 = __clz(__rbit64(v30)) + (v29 << 6);
    int64_t v15 = v29;
    goto LABEL_26;
  }
  __break(1u);
LABEL_65:
  int64_t v38 = v22 + 3;
  if (v22 + 3 < v24)
  {
    unint64_t v37 = *(void *)&v25[8 * v38];
    if (v37) {
      goto LABEL_59;
    }
    v22 += 4;
    if (v22 >= v24) {
      goto LABEL_13;
    }
    unint64_t v37 = *(void *)&v25[8 * v22];
    if (!v37)
    {
      int64_t v39 = v15 + 6;
      while (v24 != v39)
      {
        unint64_t v37 = *(void *)&v25[8 * v39++];
        if (v37)
        {
          int64_t v22 = v39 - 1;
          goto LABEL_54;
        }
      }
      goto LABEL_13;
    }
    goto LABEL_54;
  }
LABEL_13:
  uint64_t result = sub_251A1E630();
  *int64_t v1 = v3;
  return result;
}

uint64_t sub_251ED6248(unint64_t a1)
{
  return sub_251ED7B24(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_251A94894);
}

uint64_t sub_251ED6260(uint64_t a1)
{
  return sub_251ED774C(a1, (uint64_t (*)(void))sub_251F0FB28, (uint64_t (*)(void))type metadata accessor for StaticService);
}

uint64_t sub_251ED628C(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v79 = (uint64_t)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D148);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v80 = (uint64_t)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v78 = (uint64_t)&v66 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v66 - v13;
  uint64_t v15 = *(void *)(a1 + 16);
  unint64_t v16 = *v1;
  int64_t v17 = *(void *)(*v1 + 16);
  int64_t v18 = v17 + v15;
  if (__OFADD__(v17, v15))
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v2 = v5;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *int64_t v1 = v16;
  uint64_t v81 = v4;
  if (!isUniquelyReferenced_nonNull_native || (int64_t v20 = *(void *)(v16 + 24) >> 1, v20 < v18))
  {
    if (v17 <= v18) {
      int64_t v21 = v17 + v15;
    }
    else {
      int64_t v21 = v17;
    }
    unint64_t v16 = sub_251F0FD44(isUniquelyReferenced_nonNull_native, v21, 1, v16);
    *int64_t v1 = v16;
    int64_t v20 = *(void *)(v16 + 24) >> 1;
  }
  uint64_t v22 = *(void *)(v16 + 16);
  int64_t v17 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  int64_t v18 = *(void *)(v5 + 72);
  int64_t v23 = v20 - v22;
  uint64_t v24 = sub_251A93014(&v82, v16 + v17 + v18 * v22, v20 - v22, a1);
  if (v24 < v15) {
    goto LABEL_17;
  }
  if (v24)
  {
    uint64_t v26 = *(void *)(v16 + 16);
    BOOL v27 = __OFADD__(v26, v24);
    uint64_t v28 = v26 + v24;
    if (v27)
    {
      __break(1u);
      goto LABEL_22;
    }
    *(void *)(v16 + 16) = v28;
  }
  if (v24 == v23)
  {
LABEL_18:
    int64_t v68 = *(void *)(v16 + 16);
    uint64_t v25 = v82;
    int64_t v23 = v85;
    uint64_t v76 = v83;
    uint64_t v77 = v84;
    if (v86)
    {
      unint64_t v75 = (v86 - 1) & v86;
      unint64_t v30 = __clz(__rbit64(v86)) | (v85 << 6);
      uint64_t v31 = v81;
LABEL_20:
      uint64_t v32 = v25;
      sub_251EDBC00(*(void *)(v25 + 48) + v30 * v18, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      unint64_t v70 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
      v70(v14, 0, 1, v31);
      uint64_t v15 = v23;
      goto LABEL_44;
    }
LABEL_22:
    int64_t v33 = v23 + 1;
    uint64_t v31 = v81;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
LABEL_42:
      uint64_t v31 = v81;
      uint64_t v25 = v12;
    }
    else
    {
      int64_t v34 = (unint64_t)(v77 + 64) >> 6;
      uint64_t v15 = v23;
      if (v33 < v34)
      {
        unint64_t v35 = *(void *)(v76 + 8 * v33);
        if (v35)
        {
LABEL_25:
          unint64_t v75 = (v35 - 1) & v35;
          unint64_t v30 = __clz(__rbit64(v35)) + (v33 << 6);
          int64_t v23 = v33;
          goto LABEL_20;
        }
        int64_t v36 = v23 + 2;
        uint64_t v15 = v23 + 1;
        if (v23 + 2 < v34)
        {
          uint64_t v12 = v25;
          unint64_t v35 = *(void *)(v76 + 8 * v36);
          if (v35)
          {
LABEL_28:
            int64_t v33 = v36;
LABEL_29:
            uint64_t v31 = v81;
            goto LABEL_25;
          }
          uint64_t v15 = v23 + 2;
          uint64_t v31 = v81;
          if (v23 + 3 < v34)
          {
            unint64_t v35 = *(void *)(v76 + 8 * (v23 + 3));
            if (v35)
            {
              int64_t v33 = v23 + 3;
              goto LABEL_29;
            }
            int64_t v36 = v23 + 4;
            uint64_t v15 = v23 + 3;
            uint64_t v31 = v81;
            if (v23 + 4 < v34)
            {
              unint64_t v35 = *(void *)(v76 + 8 * v36);
              if (v35) {
                goto LABEL_28;
              }
              int64_t v33 = v23 + 5;
              uint64_t v15 = v23 + 4;
              uint64_t v31 = v81;
              if (v23 + 5 < v34)
              {
                unint64_t v35 = *(void *)(v76 + 8 * v33);
                if (v35) {
                  goto LABEL_25;
                }
                uint64_t v15 = v34 - 1;
                int64_t v37 = v23 + 6;
                do
                {
                  if (v34 == v37) {
                    goto LABEL_42;
                  }
                  unint64_t v35 = *(void *)(v76 + 8 * v37++);
                }
                while (!v35);
                int64_t v33 = v37 - 1;
                goto LABEL_29;
              }
            }
          }
        }
      }
    }
    uint64_t v32 = v25;
    unint64_t v70 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
    v70(v14, 1, 1, v31);
    unint64_t v75 = 0;
LABEL_44:
    uint64_t v38 = v32;
    uint64_t v82 = v32;
    uint64_t v83 = v76;
    uint64_t v84 = v77;
    int64_t v85 = v15;
    uint64_t v71 = v15;
    unint64_t v86 = v75;
    uint64_t v39 = v78;
    sub_251A1B128((uint64_t)v14, v78, &qword_269B9D148);
    uint64_t v74 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
    if (v74(v39, 1, v31) == 1)
    {
      uint64_t v40 = v78;
LABEL_46:
      sub_251A1B064((uint64_t)v14, &qword_269B9D148);
      sub_251A1E630();
      return sub_251A1B064(v40, &qword_269B9D148);
    }
    uint64_t v69 = v5 + 56;
    uint64_t v40 = v78;
    int64_t v41 = v68;
    while (1)
    {
      uint64_t v67 = v38;
      sub_251A1B064(v40, &qword_269B9D148);
      unint64_t v42 = *v1;
      unint64_t v43 = *(void *)(*v1 + 24);
      int64_t v44 = v43 >> 1;
      int64_t v68 = v41;
      if ((uint64_t)(v43 >> 1) < v41 + 1)
      {
        unint64_t v42 = sub_251F0FD44(v43 > 1, v41 + 1, 1, v42);
        *int64_t v1 = v42;
        int64_t v44 = *(void *)(v42 + 24) >> 1;
      }
      uint64_t v45 = v80;
      sub_251A1B128((uint64_t)v14, v80, &qword_269B9D148);
      if (v74(v45, 1, v81) == 1)
      {
        uint64_t v46 = v45;
        uint64_t v38 = v67;
        int64_t v41 = v68;
LABEL_87:
        sub_251A1B064(v46, &qword_269B9D148);
        uint64_t v40 = v78;
        goto LABEL_49;
      }
      unint64_t v72 = v42 + v17;
      uint64_t v47 = v79;
      sub_251EDBCC8(v45, v79, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      uint64_t v38 = v67;
      BOOL v48 = v68 < v44;
      int64_t v49 = v68 <= v44 ? v44 : v68;
      int64_t v73 = v49;
      uint64_t v50 = v47;
      int64_t v51 = v68;
      if (v48) {
        break;
      }
LABEL_48:
      sub_251EDBC68(v50, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      int64_t v41 = v73;
      uint64_t v40 = v78;
LABEL_49:
      *(void *)(*v1 + 16) = v41;
      sub_251A1B128((uint64_t)v14, v40, &qword_269B9D148);
      if (v74(v40, 1, v81) == 1) {
        goto LABEL_46;
      }
    }
    while (1)
    {
      sub_251A1B064((uint64_t)v14, &qword_269B9D148);
      uint64_t result = sub_251EDBCC8(v50, v72 + v51 * v18, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      uint64_t v52 = v82;
      int64_t v53 = v85;
      uint64_t v76 = v83;
      uint64_t v77 = v84;
      if (v86) {
        break;
      }
      int64_t v58 = v85 + 1;
      if (__OFADD__(v85, 1))
      {
        __break(1u);
        return result;
      }
      int64_t v59 = (unint64_t)(v77 + 64) >> 6;
      int64_t v60 = v85;
      if (v58 < v59)
      {
        unint64_t v61 = *(void *)(v76 + 8 * v58);
        if (v61) {
          goto LABEL_65;
        }
        int64_t v60 = v85 + 1;
        if (v85 + 2 < v59)
        {
          unint64_t v61 = *(void *)(v76 + 8 * (v85 + 2));
          if (v61)
          {
            int64_t v58 = v85 + 2;
            goto LABEL_65;
          }
          int64_t v60 = v85 + 2;
          if (v85 + 3 < v59)
          {
            unint64_t v61 = *(void *)(v76 + 8 * (v85 + 3));
            if (v61)
            {
              int64_t v58 = v85 + 3;
              goto LABEL_65;
            }
            int64_t v60 = v85 + 3;
            if (v85 + 4 < v59)
            {
              unint64_t v61 = *(void *)(v76 + 8 * (v85 + 4));
              if (v61)
              {
                int64_t v58 = v85 + 4;
LABEL_65:
                uint64_t v54 = v51;
                unint64_t v75 = (v61 - 1) & v61;
                unint64_t v55 = __clz(__rbit64(v61)) + (v58 << 6);
                int64_t v53 = v58;
LABEL_61:
                sub_251EDBC00(*(void *)(v82 + 48) + v55 * v18, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
                uint64_t v56 = v81;
                v70(v14, 0, 1, v81);
                int64_t v57 = v53;
                uint64_t v50 = v79;
                goto LABEL_83;
              }
              int64_t v58 = v85 + 5;
              int64_t v60 = v85 + 4;
              uint64_t v50 = v79;
              if (v85 + 5 < v59)
              {
                unint64_t v61 = *(void *)(v76 + 8 * v58);
                if (v61) {
                  goto LABEL_65;
                }
                int64_t v62 = v85 + 6;
                while (v59 != v62)
                {
                  unint64_t v61 = *(void *)(v76 + 8 * v62++);
                  if (v61)
                  {
                    int64_t v58 = v62 - 1;
                    goto LABEL_65;
                  }
                }
                uint64_t v50 = v79;
                int64_t v60 = v59 - 1;
              }
            }
          }
        }
      }
      uint64_t v54 = v51;
      uint64_t v56 = v81;
      int64_t v63 = v60;
      v70(v14, 1, 1, v81);
      int64_t v57 = v63;
      unint64_t v75 = 0;
LABEL_83:
      uint64_t v64 = v54 + 1;
      uint64_t v38 = v52;
      uint64_t v82 = v52;
      uint64_t v83 = v76;
      uint64_t v84 = v77;
      int64_t v85 = v57;
      uint64_t v71 = v57;
      unint64_t v86 = v75;
      uint64_t v65 = v80;
      sub_251A1B128((uint64_t)v14, v80, &qword_269B9D148);
      if (v74(v65, 1, v56) == 1)
      {
        int64_t v41 = v64;
        uint64_t v46 = v65;
        goto LABEL_87;
      }
      sub_251EDBCC8(v65, v50, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      int64_t v51 = v64;
      if (v64 == v73) {
        goto LABEL_48;
      }
    }
    uint64_t v54 = v51;
    unint64_t v75 = (v86 - 1) & v86;
    unint64_t v55 = __clz(__rbit64(v86)) | (v85 << 6);
    goto LABEL_61;
  }
  return sub_251A1E630();
}

uint64_t sub_251ED6B94(uint64_t a1)
{
  return sub_251ED774C(a1, (uint64_t (*)(void))sub_251F0FD44, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
}

uint64_t sub_251ED6BC0(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_251F0FD78(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[4 * v9 + 4];
  if (a1 + 32 < v10 + 32 * v8 && v10 < a1 + 32 + 32 * v8) {
    goto LABEL_24;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA55D0);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251ED6D30(unint64_t a1)
{
  return sub_251ED7B24(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_251A94AF8);
}

uint64_t sub_251ED6D48(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for StaticLightProfile();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v79 = (uint64_t)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9A8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v80 = (uint64_t)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v78 = (uint64_t)&v66 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v66 - v13;
  uint64_t v15 = *(void *)(a1 + 16);
  unint64_t v16 = *v1;
  int64_t v17 = *(void *)(*v1 + 16);
  int64_t v18 = v17 + v15;
  if (__OFADD__(v17, v15))
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v2 = v5;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v16;
  uint64_t v81 = v4;
  if (!isUniquelyReferenced_nonNull_native || (int64_t v20 = *(void *)(v16 + 24) >> 1, v20 < v18))
  {
    if (v17 <= v18) {
      int64_t v21 = v17 + v15;
    }
    else {
      int64_t v21 = v17;
    }
    unint64_t v16 = sub_251F0FFAC(isUniquelyReferenced_nonNull_native, v21, 1, v16);
    *uint64_t v1 = v16;
    int64_t v20 = *(void *)(v16 + 24) >> 1;
  }
  uint64_t v22 = *(void *)(v16 + 16);
  int64_t v17 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  int64_t v18 = *(void *)(v5 + 72);
  int64_t v23 = v20 - v22;
  uint64_t v24 = sub_251A93348(&v82, v16 + v17 + v18 * v22, v20 - v22, a1);
  if (v24 < v15) {
    goto LABEL_17;
  }
  if (v24)
  {
    uint64_t v26 = *(void *)(v16 + 16);
    BOOL v27 = __OFADD__(v26, v24);
    uint64_t v28 = v26 + v24;
    if (v27)
    {
      __break(1u);
      goto LABEL_22;
    }
    *(void *)(v16 + 16) = v28;
  }
  if (v24 == v23)
  {
LABEL_18:
    int64_t v68 = *(void *)(v16 + 16);
    uint64_t v25 = v82;
    int64_t v23 = v85;
    uint64_t v76 = v83;
    uint64_t v77 = v84;
    if (v86)
    {
      unint64_t v75 = (v86 - 1) & v86;
      unint64_t v30 = __clz(__rbit64(v86)) | (v85 << 6);
      uint64_t v31 = v81;
LABEL_20:
      uint64_t v32 = v25;
      sub_251EDBC00(*(void *)(v25 + 56) + v30 * v18, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
      unint64_t v70 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
      v70(v14, 0, 1, v31);
      uint64_t v15 = v23;
      goto LABEL_44;
    }
LABEL_22:
    int64_t v33 = v23 + 1;
    uint64_t v31 = v81;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
LABEL_42:
      uint64_t v31 = v81;
      uint64_t v25 = v12;
    }
    else
    {
      int64_t v34 = (unint64_t)(v77 + 64) >> 6;
      uint64_t v15 = v23;
      if (v33 < v34)
      {
        unint64_t v35 = *(void *)(v76 + 8 * v33);
        if (v35)
        {
LABEL_25:
          unint64_t v75 = (v35 - 1) & v35;
          unint64_t v30 = __clz(__rbit64(v35)) + (v33 << 6);
          int64_t v23 = v33;
          goto LABEL_20;
        }
        int64_t v36 = v23 + 2;
        uint64_t v15 = v23 + 1;
        if (v23 + 2 < v34)
        {
          uint64_t v12 = v25;
          unint64_t v35 = *(void *)(v76 + 8 * v36);
          if (v35)
          {
LABEL_28:
            int64_t v33 = v36;
LABEL_29:
            uint64_t v31 = v81;
            goto LABEL_25;
          }
          uint64_t v15 = v23 + 2;
          uint64_t v31 = v81;
          if (v23 + 3 < v34)
          {
            unint64_t v35 = *(void *)(v76 + 8 * (v23 + 3));
            if (v35)
            {
              int64_t v33 = v23 + 3;
              goto LABEL_29;
            }
            int64_t v36 = v23 + 4;
            uint64_t v15 = v23 + 3;
            uint64_t v31 = v81;
            if (v23 + 4 < v34)
            {
              unint64_t v35 = *(void *)(v76 + 8 * v36);
              if (v35) {
                goto LABEL_28;
              }
              int64_t v33 = v23 + 5;
              uint64_t v15 = v23 + 4;
              uint64_t v31 = v81;
              if (v23 + 5 < v34)
              {
                unint64_t v35 = *(void *)(v76 + 8 * v33);
                if (v35) {
                  goto LABEL_25;
                }
                uint64_t v15 = v34 - 1;
                int64_t v37 = v23 + 6;
                do
                {
                  if (v34 == v37) {
                    goto LABEL_42;
                  }
                  unint64_t v35 = *(void *)(v76 + 8 * v37++);
                }
                while (!v35);
                int64_t v33 = v37 - 1;
                goto LABEL_29;
              }
            }
          }
        }
      }
    }
    uint64_t v32 = v25;
    unint64_t v70 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
    v70(v14, 1, 1, v31);
    unint64_t v75 = 0;
LABEL_44:
    uint64_t v38 = v32;
    uint64_t v82 = v32;
    uint64_t v83 = v76;
    uint64_t v84 = v77;
    int64_t v85 = v15;
    uint64_t v71 = v15;
    unint64_t v86 = v75;
    uint64_t v39 = v78;
    sub_251A1B128((uint64_t)v14, v78, &qword_269B9C9A8);
    uint64_t v74 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
    if (v74(v39, 1, v31) == 1)
    {
      uint64_t v40 = v78;
LABEL_46:
      sub_251A1B064((uint64_t)v14, &qword_269B9C9A8);
      sub_251A1E630();
      return sub_251A1B064(v40, &qword_269B9C9A8);
    }
    uint64_t v69 = v5 + 56;
    uint64_t v40 = v78;
    int64_t v41 = v68;
    while (1)
    {
      uint64_t v67 = v38;
      sub_251A1B064(v40, &qword_269B9C9A8);
      unint64_t v42 = *v1;
      unint64_t v43 = *(void *)(*v1 + 24);
      int64_t v44 = v43 >> 1;
      int64_t v68 = v41;
      if ((uint64_t)(v43 >> 1) < v41 + 1)
      {
        unint64_t v42 = sub_251F0FFAC(v43 > 1, v41 + 1, 1, v42);
        *uint64_t v1 = v42;
        int64_t v44 = *(void *)(v42 + 24) >> 1;
      }
      uint64_t v45 = v80;
      sub_251A1B128((uint64_t)v14, v80, &qword_269B9C9A8);
      if (v74(v45, 1, v81) == 1)
      {
        uint64_t v46 = v45;
        uint64_t v38 = v67;
        int64_t v41 = v68;
LABEL_87:
        sub_251A1B064(v46, &qword_269B9C9A8);
        uint64_t v40 = v78;
        goto LABEL_49;
      }
      unint64_t v72 = v42 + v17;
      uint64_t v47 = v79;
      sub_251EDBCC8(v45, v79, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
      uint64_t v38 = v67;
      BOOL v48 = v68 < v44;
      int64_t v49 = v68 <= v44 ? v44 : v68;
      int64_t v73 = v49;
      uint64_t v50 = v47;
      int64_t v51 = v68;
      if (v48) {
        break;
      }
LABEL_48:
      sub_251EDBC68(v50, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
      int64_t v41 = v73;
      uint64_t v40 = v78;
LABEL_49:
      *(void *)(*v1 + 16) = v41;
      sub_251A1B128((uint64_t)v14, v40, &qword_269B9C9A8);
      if (v74(v40, 1, v81) == 1) {
        goto LABEL_46;
      }
    }
    while (1)
    {
      sub_251A1B064((uint64_t)v14, &qword_269B9C9A8);
      uint64_t result = sub_251EDBCC8(v50, v72 + v51 * v18, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
      uint64_t v52 = v82;
      int64_t v53 = v85;
      uint64_t v76 = v83;
      uint64_t v77 = v84;
      if (v86) {
        break;
      }
      int64_t v58 = v85 + 1;
      if (__OFADD__(v85, 1))
      {
        __break(1u);
        return result;
      }
      int64_t v59 = (unint64_t)(v77 + 64) >> 6;
      int64_t v60 = v85;
      if (v58 < v59)
      {
        unint64_t v61 = *(void *)(v76 + 8 * v58);
        if (v61) {
          goto LABEL_65;
        }
        int64_t v60 = v85 + 1;
        if (v85 + 2 < v59)
        {
          unint64_t v61 = *(void *)(v76 + 8 * (v85 + 2));
          if (v61)
          {
            int64_t v58 = v85 + 2;
            goto LABEL_65;
          }
          int64_t v60 = v85 + 2;
          if (v85 + 3 < v59)
          {
            unint64_t v61 = *(void *)(v76 + 8 * (v85 + 3));
            if (v61)
            {
              int64_t v58 = v85 + 3;
              goto LABEL_65;
            }
            int64_t v60 = v85 + 3;
            if (v85 + 4 < v59)
            {
              unint64_t v61 = *(void *)(v76 + 8 * (v85 + 4));
              if (v61)
              {
                int64_t v58 = v85 + 4;
LABEL_65:
                uint64_t v54 = v51;
                unint64_t v75 = (v61 - 1) & v61;
                unint64_t v55 = __clz(__rbit64(v61)) + (v58 << 6);
                int64_t v53 = v58;
LABEL_61:
                sub_251EDBC00(*(void *)(v82 + 56) + v55 * v18, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
                uint64_t v56 = v81;
                v70(v14, 0, 1, v81);
                int64_t v57 = v53;
                uint64_t v50 = v79;
                goto LABEL_83;
              }
              int64_t v58 = v85 + 5;
              int64_t v60 = v85 + 4;
              uint64_t v50 = v79;
              if (v85 + 5 < v59)
              {
                unint64_t v61 = *(void *)(v76 + 8 * v58);
                if (v61) {
                  goto LABEL_65;
                }
                int64_t v62 = v85 + 6;
                while (v59 != v62)
                {
                  unint64_t v61 = *(void *)(v76 + 8 * v62++);
                  if (v61)
                  {
                    int64_t v58 = v62 - 1;
                    goto LABEL_65;
                  }
                }
                uint64_t v50 = v79;
                int64_t v60 = v59 - 1;
              }
            }
          }
        }
      }
      uint64_t v54 = v51;
      uint64_t v56 = v81;
      int64_t v63 = v60;
      v70(v14, 1, 1, v81);
      int64_t v57 = v63;
      unint64_t v75 = 0;
LABEL_83:
      uint64_t v64 = v54 + 1;
      uint64_t v38 = v52;
      uint64_t v82 = v52;
      uint64_t v83 = v76;
      uint64_t v84 = v77;
      int64_t v85 = v57;
      uint64_t v71 = v57;
      unint64_t v86 = v75;
      uint64_t v65 = v80;
      sub_251A1B128((uint64_t)v14, v80, &qword_269B9C9A8);
      if (v74(v65, 1, v56) == 1)
      {
        int64_t v41 = v64;
        uint64_t v46 = v65;
        goto LABEL_87;
      }
      sub_251EDBCC8(v65, v50, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
      int64_t v51 = v64;
      if (v64 == v73) {
        goto LABEL_48;
      }
    }
    uint64_t v54 = v51;
    unint64_t v75 = (v86 - 1) & v86;
    unint64_t v55 = __clz(__rbit64(v86)) | (v85 << 6);
    goto LABEL_61;
  }
  return sub_251A1E630();
}

uint64_t sub_251ED7650(uint64_t a1)
{
  return sub_251ED794C(a1, (uint64_t (*)(void))sub_251F0FFF4, type metadata accessor for ScrubberElement);
}

uint64_t sub_251ED767C(uint64_t a1)
{
  return sub_251ED774C(a1, (uint64_t (*)(void))sub_251F0F18C, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
}

uint64_t sub_251ED76A8(uint64_t a1)
{
  return sub_251ED774C(a1, (uint64_t (*)(void))sub_251F1005C, type metadata accessor for StaticRoom);
}

uint64_t sub_251ED76D4(uint64_t a1)
{
  return sub_251ED774C(a1, (uint64_t (*)(void))sub_251F10090, type metadata accessor for RoomType);
}

uint64_t sub_251ED7700(uint64_t a1)
{
  return sub_251ED774C(a1, (uint64_t (*)(void))sub_251F0F4DC, MEMORY[0x270FA9598]);
}

uint64_t sub_251ED7720(uint64_t a1)
{
  return sub_251ED774C(a1, (uint64_t (*)(void))sub_251F10234, _s8IntervalVMa);
}

uint64_t sub_251ED774C(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(void *)(v5 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  uint64_t v5 = a2();
  if (!*(void *)(a1 + 16))
  {
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v10 = *(void *)(v5 + 16);
  uint64_t v11 = (*(void *)(v5 + 24) >> 1) - v10;
  uint64_t v12 = *(void *)(a3(0) - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v15 = v5 + v14 + v13 * v10;
  unint64_t v16 = a1 + v14;
  uint64_t v17 = v13 * v4;
  unint64_t v18 = v15 + v17;
  unint64_t v19 = v16 + v17;
  if (v16 < v18 && v15 < v19) {
    goto LABEL_21;
  }
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v3 = v5;
    return result;
  }
  uint64_t v21 = *(void *)(v5 + 16);
  BOOL v22 = __OFADD__(v21, v4);
  uint64_t v23 = v21 + v4;
  if (!v22)
  {
    *(void *)(v5 + 16) = v23;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251ED7908(unint64_t a1)
{
  return sub_251ED7B24(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_251A94D18);
}

uint64_t sub_251ED7920(uint64_t a1)
{
  return sub_251ED794C(a1, (uint64_t (*)(void))sub_251F1027C, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
}

uint64_t sub_251ED794C(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  unint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  if (swift_isUniquelyReferenced_nonNull_native()
    && (int64_t)(v6 + v4) <= *(void *)(v5 + 24) >> 1)
  {
    unint64_t v10 = *(void *)(a1 + 16);
    if (v10) {
      goto LABEL_5;
    }
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
  uint64_t v5 = a2();
  unint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    goto LABEL_15;
  }
LABEL_5:
  uint64_t v11 = *(void *)(v5 + 16);
  uint64_t v12 = (*(void *)(v5 + 24) >> 1) - v11;
  uint64_t v13 = *(void *)(a3(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  if (v12 < (uint64_t)v10)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = v5 + v15 + v14 * v11;
  unint64_t v17 = a1 + v15;
  uint64_t v18 = v14 * v10;
  unint64_t v19 = v16 + v18;
  unint64_t v20 = v17 + v18;
  if (v17 < v19 && v16 < v20) {
    goto LABEL_21;
  }
  swift_arrayInitWithCopy();
  if (v10 < v4)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v22 = *(void *)(v5 + 16);
  BOOL v23 = __OFADD__(v22, v10);
  uint64_t v24 = v22 + v10;
  if (!v23)
  {
    *(void *)(v5 + 16) = v24;
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v3 = v5;
    return result;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251ED7B0C(unint64_t a1)
{
  return sub_251ED7B24(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_251A94F38);
}

uint64_t sub_251ED7B24(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_251F366C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_251F366C0();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 + v5;
  if (__OFADD__(v7, v5)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v6 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v6;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v7 = 1;
  }
  if (v6 >> 62) {
    goto LABEL_27;
  }
  uint64_t v11 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8) {
      uint64_t v11 = v8;
    }
    swift_bridgeObjectRetain();
    unint64_t v6 = MEMORY[0x2533AB3B0](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *uint64_t v2 = v6;
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_251F366C0();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();
  return sub_251F35AE0();
}

uint64_t sub_251ED7CF8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_251F0F8B4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[v8 + 4];
  if (a1 + 32 < v9 + 8 * v2 && v9 < a1 + 32 + 8 * v2) {
    goto LABEL_24;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251ED7E5C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_251F102B0(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2) {
    goto LABEL_24;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF78);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251ED7FC8(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v79 = (uint64_t)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F090);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v80 = (uint64_t)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v78 = (uint64_t)&v66 - v11;
  MEMORY[0x270FA5388](v10);
  int64_t v14 = (char *)&v66 - v13;
  uint64_t v15 = *(void *)(a1 + 16);
  unint64_t v16 = *v1;
  int64_t v17 = *(void *)(*v1 + 16);
  int64_t v18 = v17 + v15;
  if (__OFADD__(v17, v15))
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v2 = v5;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v16;
  uint64_t v81 = v4;
  if (!isUniquelyReferenced_nonNull_native || (int64_t v20 = *(void *)(v16 + 24) >> 1, v20 < v18))
  {
    if (v17 <= v18) {
      int64_t v21 = v17 + v15;
    }
    else {
      int64_t v21 = v17;
    }
    unint64_t v16 = sub_251F10DF8(isUniquelyReferenced_nonNull_native, v21, 1, v16);
    *uint64_t v1 = v16;
    int64_t v20 = *(void *)(v16 + 24) >> 1;
  }
  uint64_t v22 = *(void *)(v16 + 16);
  int64_t v17 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  int64_t v18 = *(void *)(v5 + 72);
  int64_t v23 = v20 - v22;
  uint64_t v24 = sub_251A93C48(&v82, v16 + v17 + v18 * v22, v20 - v22, a1);
  if (v24 < v15) {
    goto LABEL_17;
  }
  if (v24)
  {
    uint64_t v26 = *(void *)(v16 + 16);
    BOOL v27 = __OFADD__(v26, v24);
    uint64_t v28 = v26 + v24;
    if (v27)
    {
      __break(1u);
      goto LABEL_22;
    }
    *(void *)(v16 + 16) = v28;
  }
  if (v24 == v23)
  {
LABEL_18:
    int64_t v68 = *(void *)(v16 + 16);
    uint64_t v25 = v82;
    int64_t v23 = v85;
    uint64_t v76 = v83;
    uint64_t v77 = v84;
    if (v86)
    {
      unint64_t v75 = (v86 - 1) & v86;
      unint64_t v30 = __clz(__rbit64(v86)) | (v85 << 6);
      uint64_t v31 = v81;
LABEL_20:
      uint64_t v32 = v25;
      sub_251EDBC00(*(void *)(v25 + 48) + v30 * v18, (uint64_t)v14, type metadata accessor for StaticAccessory.DeviceIdentifier);
      unint64_t v70 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
      v70(v14, 0, 1, v31);
      uint64_t v15 = v23;
      goto LABEL_44;
    }
LABEL_22:
    int64_t v33 = v23 + 1;
    uint64_t v31 = v81;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
LABEL_42:
      uint64_t v31 = v81;
      uint64_t v25 = v12;
    }
    else
    {
      int64_t v34 = (unint64_t)(v77 + 64) >> 6;
      uint64_t v15 = v23;
      if (v33 < v34)
      {
        unint64_t v35 = *(void *)(v76 + 8 * v33);
        if (v35)
        {
LABEL_25:
          unint64_t v75 = (v35 - 1) & v35;
          unint64_t v30 = __clz(__rbit64(v35)) + (v33 << 6);
          int64_t v23 = v33;
          goto LABEL_20;
        }
        int64_t v36 = v23 + 2;
        uint64_t v15 = v23 + 1;
        if (v23 + 2 < v34)
        {
          uint64_t v12 = v25;
          unint64_t v35 = *(void *)(v76 + 8 * v36);
          if (v35)
          {
LABEL_28:
            int64_t v33 = v36;
LABEL_29:
            uint64_t v31 = v81;
            goto LABEL_25;
          }
          uint64_t v15 = v23 + 2;
          uint64_t v31 = v81;
          if (v23 + 3 < v34)
          {
            unint64_t v35 = *(void *)(v76 + 8 * (v23 + 3));
            if (v35)
            {
              int64_t v33 = v23 + 3;
              goto LABEL_29;
            }
            int64_t v36 = v23 + 4;
            uint64_t v15 = v23 + 3;
            uint64_t v31 = v81;
            if (v23 + 4 < v34)
            {
              unint64_t v35 = *(void *)(v76 + 8 * v36);
              if (v35) {
                goto LABEL_28;
              }
              int64_t v33 = v23 + 5;
              uint64_t v15 = v23 + 4;
              uint64_t v31 = v81;
              if (v23 + 5 < v34)
              {
                unint64_t v35 = *(void *)(v76 + 8 * v33);
                if (v35) {
                  goto LABEL_25;
                }
                uint64_t v15 = v34 - 1;
                int64_t v37 = v23 + 6;
                do
                {
                  if (v34 == v37) {
                    goto LABEL_42;
                  }
                  unint64_t v35 = *(void *)(v76 + 8 * v37++);
                }
                while (!v35);
                int64_t v33 = v37 - 1;
                goto LABEL_29;
              }
            }
          }
        }
      }
    }
    uint64_t v32 = v25;
    unint64_t v70 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
    v70(v14, 1, 1, v31);
    unint64_t v75 = 0;
LABEL_44:
    uint64_t v38 = v32;
    uint64_t v82 = v32;
    uint64_t v83 = v76;
    uint64_t v84 = v77;
    int64_t v85 = v15;
    uint64_t v71 = v15;
    unint64_t v86 = v75;
    uint64_t v39 = v78;
    sub_251A1B128((uint64_t)v14, v78, &qword_26B21F090);
    uint64_t v74 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
    if (v74(v39, 1, v31) == 1)
    {
      uint64_t v40 = v78;
LABEL_46:
      sub_251A1B064((uint64_t)v14, &qword_26B21F090);
      sub_251A1E630();
      return sub_251A1B064(v40, &qword_26B21F090);
    }
    uint64_t v69 = v5 + 56;
    uint64_t v40 = v78;
    int64_t v41 = v68;
    while (1)
    {
      uint64_t v67 = v38;
      sub_251A1B064(v40, &qword_26B21F090);
      unint64_t v42 = *v1;
      unint64_t v43 = *(void *)(*v1 + 24);
      int64_t v44 = v43 >> 1;
      int64_t v68 = v41;
      if ((uint64_t)(v43 >> 1) < v41 + 1)
      {
        unint64_t v42 = sub_251F10DF8(v43 > 1, v41 + 1, 1, v42);
        *uint64_t v1 = v42;
        int64_t v44 = *(void *)(v42 + 24) >> 1;
      }
      uint64_t v45 = v80;
      sub_251A1B128((uint64_t)v14, v80, &qword_26B21F090);
      if (v74(v45, 1, v81) == 1)
      {
        uint64_t v46 = v45;
        uint64_t v38 = v67;
        int64_t v41 = v68;
LABEL_87:
        sub_251A1B064(v46, &qword_26B21F090);
        uint64_t v40 = v78;
        goto LABEL_49;
      }
      unint64_t v72 = v42 + v17;
      uint64_t v47 = v79;
      sub_251EDBCC8(v45, v79, type metadata accessor for StaticAccessory.DeviceIdentifier);
      uint64_t v38 = v67;
      BOOL v48 = v68 < v44;
      int64_t v49 = v68 <= v44 ? v44 : v68;
      int64_t v73 = v49;
      uint64_t v50 = v47;
      int64_t v51 = v68;
      if (v48) {
        break;
      }
LABEL_48:
      sub_251EDBC68(v50, type metadata accessor for StaticAccessory.DeviceIdentifier);
      int64_t v41 = v73;
      uint64_t v40 = v78;
LABEL_49:
      *(void *)(*v1 + 16) = v41;
      sub_251A1B128((uint64_t)v14, v40, &qword_26B21F090);
      if (v74(v40, 1, v81) == 1) {
        goto LABEL_46;
      }
    }
    while (1)
    {
      sub_251A1B064((uint64_t)v14, &qword_26B21F090);
      uint64_t result = sub_251EDBCC8(v50, v72 + v51 * v18, type metadata accessor for StaticAccessory.DeviceIdentifier);
      uint64_t v52 = v82;
      int64_t v53 = v85;
      uint64_t v76 = v83;
      uint64_t v77 = v84;
      if (v86) {
        break;
      }
      int64_t v58 = v85 + 1;
      if (__OFADD__(v85, 1))
      {
        __break(1u);
        return result;
      }
      int64_t v59 = (unint64_t)(v77 + 64) >> 6;
      int64_t v60 = v85;
      if (v58 < v59)
      {
        unint64_t v61 = *(void *)(v76 + 8 * v58);
        if (v61) {
          goto LABEL_65;
        }
        int64_t v60 = v85 + 1;
        if (v85 + 2 < v59)
        {
          unint64_t v61 = *(void *)(v76 + 8 * (v85 + 2));
          if (v61)
          {
            int64_t v58 = v85 + 2;
            goto LABEL_65;
          }
          int64_t v60 = v85 + 2;
          if (v85 + 3 < v59)
          {
            unint64_t v61 = *(void *)(v76 + 8 * (v85 + 3));
            if (v61)
            {
              int64_t v58 = v85 + 3;
              goto LABEL_65;
            }
            int64_t v60 = v85 + 3;
            if (v85 + 4 < v59)
            {
              unint64_t v61 = *(void *)(v76 + 8 * (v85 + 4));
              if (v61)
              {
                int64_t v58 = v85 + 4;
LABEL_65:
                uint64_t v54 = v51;
                unint64_t v75 = (v61 - 1) & v61;
                unint64_t v55 = __clz(__rbit64(v61)) + (v58 << 6);
                int64_t v53 = v58;
LABEL_61:
                sub_251EDBC00(*(void *)(v82 + 48) + v55 * v18, (uint64_t)v14, type metadata accessor for StaticAccessory.DeviceIdentifier);
                uint64_t v56 = v81;
                v70(v14, 0, 1, v81);
                int64_t v57 = v53;
                uint64_t v50 = v79;
                goto LABEL_83;
              }
              int64_t v58 = v85 + 5;
              int64_t v60 = v85 + 4;
              uint64_t v50 = v79;
              if (v85 + 5 < v59)
              {
                unint64_t v61 = *(void *)(v76 + 8 * v58);
                if (v61) {
                  goto LABEL_65;
                }
                int64_t v62 = v85 + 6;
                while (v59 != v62)
                {
                  unint64_t v61 = *(void *)(v76 + 8 * v62++);
                  if (v61)
                  {
                    int64_t v58 = v62 - 1;
                    goto LABEL_65;
                  }
                }
                uint64_t v50 = v79;
                int64_t v60 = v59 - 1;
              }
            }
          }
        }
      }
      uint64_t v54 = v51;
      uint64_t v56 = v81;
      int64_t v63 = v60;
      v70(v14, 1, 1, v81);
      int64_t v57 = v63;
      unint64_t v75 = 0;
LABEL_83:
      uint64_t v64 = v54 + 1;
      uint64_t v38 = v52;
      uint64_t v82 = v52;
      uint64_t v83 = v76;
      uint64_t v84 = v77;
      int64_t v85 = v57;
      uint64_t v71 = v57;
      unint64_t v86 = v75;
      uint64_t v65 = v80;
      sub_251A1B128((uint64_t)v14, v80, &qword_26B21F090);
      if (v74(v65, 1, v56) == 1)
      {
        int64_t v41 = v64;
        uint64_t v46 = v65;
        goto LABEL_87;
      }
      sub_251EDBCC8(v65, v50, type metadata accessor for StaticAccessory.DeviceIdentifier);
      int64_t v51 = v64;
      if (v64 == v73) {
        goto LABEL_48;
      }
    }
    uint64_t v54 = v51;
    unint64_t v75 = (v86 - 1) & v86;
    unint64_t v55 = __clz(__rbit64(v86)) | (v85 << 6);
    goto LABEL_61;
  }
  return sub_251A1E630();
}

uint64_t sub_251ED88D0(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for StaticMediaSystemComponent();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v79 = (uint64_t)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D520);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v80 = (uint64_t)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v78 = (uint64_t)&v66 - v11;
  MEMORY[0x270FA5388](v10);
  int64_t v14 = (char *)&v66 - v13;
  uint64_t v15 = *(void *)(a1 + 16);
  unint64_t v16 = *v1;
  int64_t v17 = *(void *)(*v1 + 16);
  int64_t v18 = v17 + v15;
  if (__OFADD__(v17, v15))
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v2 = v5;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v16;
  uint64_t v81 = v4;
  if (!isUniquelyReferenced_nonNull_native || (int64_t v20 = *(void *)(v16 + 24) >> 1, v20 < v18))
  {
    if (v17 <= v18) {
      int64_t v21 = v17 + v15;
    }
    else {
      int64_t v21 = v17;
    }
    unint64_t v16 = sub_251F0FBC4(isUniquelyReferenced_nonNull_native, v21, 1, v16);
    *uint64_t v1 = v16;
    int64_t v20 = *(void *)(v16 + 24) >> 1;
  }
  uint64_t v22 = *(void *)(v16 + 16);
  int64_t v17 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  int64_t v18 = *(void *)(v5 + 72);
  int64_t v23 = v20 - v22;
  uint64_t v24 = sub_251A93C74(&v82, v16 + v17 + v18 * v22, v20 - v22, a1);
  if (v24 < v15) {
    goto LABEL_17;
  }
  if (v24)
  {
    uint64_t v26 = *(void *)(v16 + 16);
    BOOL v27 = __OFADD__(v26, v24);
    uint64_t v28 = v26 + v24;
    if (v27)
    {
      __break(1u);
      goto LABEL_22;
    }
    *(void *)(v16 + 16) = v28;
  }
  if (v24 == v23)
  {
LABEL_18:
    int64_t v68 = *(void *)(v16 + 16);
    uint64_t v25 = v82;
    int64_t v23 = v85;
    uint64_t v76 = v83;
    uint64_t v77 = v84;
    if (v86)
    {
      unint64_t v75 = (v86 - 1) & v86;
      unint64_t v30 = __clz(__rbit64(v86)) | (v85 << 6);
      uint64_t v31 = v81;
LABEL_20:
      uint64_t v32 = v25;
      sub_251EDBC00(*(void *)(v25 + 48) + v30 * v18, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
      unint64_t v70 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
      v70(v14, 0, 1, v31);
      uint64_t v15 = v23;
      goto LABEL_44;
    }
LABEL_22:
    int64_t v33 = v23 + 1;
    uint64_t v31 = v81;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
LABEL_42:
      uint64_t v31 = v81;
      uint64_t v25 = v12;
    }
    else
    {
      int64_t v34 = (unint64_t)(v77 + 64) >> 6;
      uint64_t v15 = v23;
      if (v33 < v34)
      {
        unint64_t v35 = *(void *)(v76 + 8 * v33);
        if (v35)
        {
LABEL_25:
          unint64_t v75 = (v35 - 1) & v35;
          unint64_t v30 = __clz(__rbit64(v35)) + (v33 << 6);
          int64_t v23 = v33;
          goto LABEL_20;
        }
        int64_t v36 = v23 + 2;
        uint64_t v15 = v23 + 1;
        if (v23 + 2 < v34)
        {
          uint64_t v12 = v25;
          unint64_t v35 = *(void *)(v76 + 8 * v36);
          if (v35)
          {
LABEL_28:
            int64_t v33 = v36;
LABEL_29:
            uint64_t v31 = v81;
            goto LABEL_25;
          }
          uint64_t v15 = v23 + 2;
          uint64_t v31 = v81;
          if (v23 + 3 < v34)
          {
            unint64_t v35 = *(void *)(v76 + 8 * (v23 + 3));
            if (v35)
            {
              int64_t v33 = v23 + 3;
              goto LABEL_29;
            }
            int64_t v36 = v23 + 4;
            uint64_t v15 = v23 + 3;
            uint64_t v31 = v81;
            if (v23 + 4 < v34)
            {
              unint64_t v35 = *(void *)(v76 + 8 * v36);
              if (v35) {
                goto LABEL_28;
              }
              int64_t v33 = v23 + 5;
              uint64_t v15 = v23 + 4;
              uint64_t v31 = v81;
              if (v23 + 5 < v34)
              {
                unint64_t v35 = *(void *)(v76 + 8 * v33);
                if (v35) {
                  goto LABEL_25;
                }
                uint64_t v15 = v34 - 1;
                int64_t v37 = v23 + 6;
                do
                {
                  if (v34 == v37) {
                    goto LABEL_42;
                  }
                  unint64_t v35 = *(void *)(v76 + 8 * v37++);
                }
                while (!v35);
                int64_t v33 = v37 - 1;
                goto LABEL_29;
              }
            }
          }
        }
      }
    }
    uint64_t v32 = v25;
    unint64_t v70 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
    v70(v14, 1, 1, v31);
    unint64_t v75 = 0;
LABEL_44:
    uint64_t v38 = v32;
    uint64_t v82 = v32;
    uint64_t v83 = v76;
    uint64_t v84 = v77;
    int64_t v85 = v15;
    uint64_t v71 = v15;
    unint64_t v86 = v75;
    uint64_t v39 = v78;
    sub_251A1B128((uint64_t)v14, v78, &qword_269B9D520);
    uint64_t v74 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
    if (v74(v39, 1, v31) == 1)
    {
      uint64_t v40 = v78;
LABEL_46:
      sub_251A1B064((uint64_t)v14, &qword_269B9D520);
      sub_251A1E630();
      return sub_251A1B064(v40, &qword_269B9D520);
    }
    uint64_t v69 = v5 + 56;
    uint64_t v40 = v78;
    int64_t v41 = v68;
    while (1)
    {
      uint64_t v67 = v38;
      sub_251A1B064(v40, &qword_269B9D520);
      unint64_t v42 = *v1;
      unint64_t v43 = *(void *)(*v1 + 24);
      int64_t v44 = v43 >> 1;
      int64_t v68 = v41;
      if ((uint64_t)(v43 >> 1) < v41 + 1)
      {
        unint64_t v42 = sub_251F0FBC4(v43 > 1, v41 + 1, 1, v42);
        *uint64_t v1 = v42;
        int64_t v44 = *(void *)(v42 + 24) >> 1;
      }
      uint64_t v45 = v80;
      sub_251A1B128((uint64_t)v14, v80, &qword_269B9D520);
      if (v74(v45, 1, v81) == 1)
      {
        uint64_t v46 = v45;
        uint64_t v38 = v67;
        int64_t v41 = v68;
LABEL_87:
        sub_251A1B064(v46, &qword_269B9D520);
        uint64_t v40 = v78;
        goto LABEL_49;
      }
      unint64_t v72 = v42 + v17;
      uint64_t v47 = v79;
      sub_251EDBCC8(v45, v79, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
      uint64_t v38 = v67;
      BOOL v48 = v68 < v44;
      int64_t v49 = v68 <= v44 ? v44 : v68;
      int64_t v73 = v49;
      uint64_t v50 = v47;
      int64_t v51 = v68;
      if (v48) {
        break;
      }
LABEL_48:
      sub_251EDBC68(v50, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
      int64_t v41 = v73;
      uint64_t v40 = v78;
LABEL_49:
      *(void *)(*v1 + 16) = v41;
      sub_251A1B128((uint64_t)v14, v40, &qword_269B9D520);
      if (v74(v40, 1, v81) == 1) {
        goto LABEL_46;
      }
    }
    while (1)
    {
      sub_251A1B064((uint64_t)v14, &qword_269B9D520);
      uint64_t result = sub_251EDBCC8(v50, v72 + v51 * v18, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
      uint64_t v52 = v82;
      int64_t v53 = v85;
      uint64_t v76 = v83;
      uint64_t v77 = v84;
      if (v86) {
        break;
      }
      int64_t v58 = v85 + 1;
      if (__OFADD__(v85, 1))
      {
        __break(1u);
        return result;
      }
      int64_t v59 = (unint64_t)(v77 + 64) >> 6;
      int64_t v60 = v85;
      if (v58 < v59)
      {
        unint64_t v61 = *(void *)(v76 + 8 * v58);
        if (v61) {
          goto LABEL_65;
        }
        int64_t v60 = v85 + 1;
        if (v85 + 2 < v59)
        {
          unint64_t v61 = *(void *)(v76 + 8 * (v85 + 2));
          if (v61)
          {
            int64_t v58 = v85 + 2;
            goto LABEL_65;
          }
          int64_t v60 = v85 + 2;
          if (v85 + 3 < v59)
          {
            unint64_t v61 = *(void *)(v76 + 8 * (v85 + 3));
            if (v61)
            {
              int64_t v58 = v85 + 3;
              goto LABEL_65;
            }
            int64_t v60 = v85 + 3;
            if (v85 + 4 < v59)
            {
              unint64_t v61 = *(void *)(v76 + 8 * (v85 + 4));
              if (v61)
              {
                int64_t v58 = v85 + 4;
LABEL_65:
                uint64_t v54 = v51;
                unint64_t v75 = (v61 - 1) & v61;
                unint64_t v55 = __clz(__rbit64(v61)) + (v58 << 6);
                int64_t v53 = v58;
LABEL_61:
                sub_251EDBC00(*(void *)(v82 + 48) + v55 * v18, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
                uint64_t v56 = v81;
                v70(v14, 0, 1, v81);
                int64_t v57 = v53;
                uint64_t v50 = v79;
                goto LABEL_83;
              }
              int64_t v58 = v85 + 5;
              int64_t v60 = v85 + 4;
              uint64_t v50 = v79;
              if (v85 + 5 < v59)
              {
                unint64_t v61 = *(void *)(v76 + 8 * v58);
                if (v61) {
                  goto LABEL_65;
                }
                int64_t v62 = v85 + 6;
                while (v59 != v62)
                {
                  unint64_t v61 = *(void *)(v76 + 8 * v62++);
                  if (v61)
                  {
                    int64_t v58 = v62 - 1;
                    goto LABEL_65;
                  }
                }
                uint64_t v50 = v79;
                int64_t v60 = v59 - 1;
              }
            }
          }
        }
      }
      uint64_t v54 = v51;
      uint64_t v56 = v81;
      int64_t v63 = v60;
      v70(v14, 1, 1, v81);
      int64_t v57 = v63;
      unint64_t v75 = 0;
LABEL_83:
      uint64_t v64 = v54 + 1;
      uint64_t v38 = v52;
      uint64_t v82 = v52;
      uint64_t v83 = v76;
      uint64_t v84 = v77;
      int64_t v85 = v57;
      uint64_t v71 = v57;
      unint64_t v86 = v75;
      uint64_t v65 = v80;
      sub_251A1B128((uint64_t)v14, v80, &qword_269B9D520);
      if (v74(v65, 1, v56) == 1)
      {
        int64_t v41 = v64;
        uint64_t v46 = v65;
        goto LABEL_87;
      }
      sub_251EDBCC8(v65, v50, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
      int64_t v51 = v64;
      if (v64 == v73) {
        goto LABEL_48;
      }
    }
    uint64_t v54 = v51;
    unint64_t v75 = (v86 - 1) & v86;
    unint64_t v55 = __clz(__rbit64(v86)) | (v85 << 6);
    goto LABEL_61;
  }
  return sub_251A1E630();
}

uint64_t sub_251ED91D8(uint64_t a1)
{
  uint64_t v5 = *(void *)(a1 + 16);
  unint64_t v6 = *v1;
  uint64_t v7 = *(void *)(*v1 + 16);
  uint64_t v8 = v7 + v5;
  if (__OFADD__(v7, v5))
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v9 = a1;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v6;
  if (!isUniquelyReferenced_nonNull_native || v8 > *(void *)(v6 + 24) >> 1)
  {
    if (v7 <= v8) {
      int64_t v11 = v7 + v5;
    }
    else {
      int64_t v11 = v7;
    }
    unint64_t v6 = sub_251F0F4DC(isUniquelyReferenced_nonNull_native, v11, 1, v6);
    *uint64_t v1 = v6;
  }
  unint64_t v3 = *(void *)(v6 + 16);
  uint64_t v7 = sub_251F34DA0();
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v2 = *(void *)(v8 + 72);
  uint64_t v12 = (*(void *)(v6 + 24) >> 1) - v3;
  uint64_t v13 = sub_251A9367C(&v85, (char *)(v6 + v4 + v2 * v3), v12, v9);
  if ((uint64_t)v13 < v5) {
    goto LABEL_17;
  }
  if (v13)
  {
    uint64_t v18 = *(void *)(v6 + 16);
    BOOL v19 = __OFADD__(v18, v13);
    int64_t v20 = (char *)v13 + v18;
    if (v19)
    {
      __break(1u);
      goto LABEL_22;
    }
    *(void *)(v6 + 16) = v20;
  }
  if (v13 == (void *)v12)
  {
LABEL_18:
    uint64_t v9 = *(void *)(v6 + 16);
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    MEMORY[0x270FA5388](v22 - 8);
    uint64_t v79 = v14;
    uint64_t v84 = (uint64_t)v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v12 = v85;
    unint64_t v16 = v86;
    unint64_t v17 = v87;
    unint64_t v6 = v88;
    v66[1] = v23;
    uint64_t v82 = v87;
    uint64_t v83 = v86;
    if (v89)
    {
      unint64_t v81 = (v89 - 1) & v89;
      unint64_t v24 = __clz(__rbit64(v89)) | (v88 << 6);
LABEL_20:
      uint64_t v25 = v84;
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))(v84, *(void *)(v12 + 48) + v24 * v2, v7);
      uint64_t v71 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
      uint64_t v26 = v71(v25, 0, 1, v7);
      unint64_t v3 = v6;
LABEL_43:
      uint64_t v80 = v12;
      uint64_t v85 = v12;
      unint64_t v86 = v83;
      unint64_t v87 = v82;
      unint64_t v88 = v3;
      unint64_t v89 = v81;
      MEMORY[0x270FA5388](v26);
      int64_t v33 = (char *)v66 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_251A1B128(v25, (uint64_t)v33, &qword_26B21FF90);
      uint64_t v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
      uint64_t v78 = v8 + 48;
      if (v77(v33, 1, v7) == 1)
      {
LABEL_79:
        sub_251A1B064(v84, &qword_26B21FF90);
        sub_251A1E630();
        return sub_251A1B064((uint64_t)v33, &qword_26B21FF90);
      }
      unint64_t v75 = (void (**)(void, void, void))(v8 + 32);
      uint64_t v69 = (void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16);
      uint64_t v70 = v8 + 56;
      uint64_t v67 = (uint64_t (**)(char *, uint64_t))(v8 + 8);
      while (1)
      {
        sub_251A1B064((uint64_t)v33, &qword_26B21FF90);
        uint64_t v37 = *v1;
        unint64_t v38 = *(void *)(*v1 + 24);
        if ((uint64_t)(v38 >> 1) < v9 + 1)
        {
          uint64_t v37 = sub_251F0F4DC(v38 > 1, v9 + 1, 1, *v1);
          *uint64_t v1 = v37;
          uint64_t v82 = *(void *)(v37 + 24) >> 1;
        }
        else
        {
          uint64_t v82 = v38 >> 1;
        }
        uint64_t v83 = v66;
        uint64_t v39 = MEMORY[0x270FA5388](v84);
        uint64_t v76 = v40;
        int64_t v41 = (char *)v66 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v42 = MEMORY[0x270FA5388](v39);
        int64_t v44 = (char *)v66 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_251A1B128(v42, (uint64_t)v44, &qword_26B21FF90);
        if (v77(v44, 1, v7) != 1) {
          break;
        }
LABEL_45:
        uint64_t v34 = sub_251A1B064((uint64_t)v44, &qword_26B21FF90);
        uint64_t v35 = v9;
LABEL_46:
        *(void *)(*v1 + 16) = v35;
        MEMORY[0x270FA5388](v34);
        int64_t v33 = (char *)v66 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_251A1B128(v84, (uint64_t)v33, &qword_26B21FF90);
        if (v77(v33, 1, v7) == 1) {
          goto LABEL_79;
        }
      }
      unint64_t v73 = v37 + v4;
      uint64_t v45 = *v75;
      uint64_t v46 = v82;
      if (v9 > v82) {
        uint64_t v46 = v9;
      }
      uint64_t v74 = v46;
      unint64_t v72 = v45;
      while (1)
      {
        v45(v41, v44, v7);
        uint64_t v35 = v74;
        if (v9 == v74)
        {
          uint64_t v34 = (*v67)(v41, v7);
          uint64_t v9 = v35;
          goto LABEL_46;
        }
        sub_251A1B064(v84, &qword_26B21FF90);
        uint64_t v82 = v9;
        uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v45)(v73 + v9 * v2, v41, v7);
        uint64_t v50 = v85;
        uint64_t v56 = v86;
        int64_t v57 = v88;
        unint64_t v81 = v87;
        if (v89) {
          break;
        }
        uint64_t v68 = v85;
        int64_t v61 = v88 + 1;
        if (__OFADD__(v88, 1))
        {
          __break(1u);
          return result;
        }
        int64_t v62 = (v87 + 64) >> 6;
        int64_t v60 = v88;
        if (v61 < v62)
        {
          unint64_t v63 = v86[v61];
          if (v63) {
            goto LABEL_62;
          }
          int64_t v64 = v88 + 2;
          int64_t v60 = v88 + 1;
          if ((uint64_t)(v88 + 2) < v62)
          {
            unint64_t v63 = v86[v64];
            if (v63) {
              goto LABEL_65;
            }
            int64_t v60 = v88 + 2;
            if ((uint64_t)(v88 + 3) < v62)
            {
              unint64_t v63 = v86[v88 + 3];
              if (v63)
              {
                int64_t v61 = v88 + 3;
LABEL_62:
                uint64_t v80 = (uint64_t)v86;
                unint64_t v49 = (v63 - 1) & v63;
                unint64_t v58 = __clz(__rbit64(v63)) + (v61 << 6);
                int64_t v57 = v61;
                uint64_t v50 = v68;
LABEL_58:
                uint64_t v59 = v84;
                (*v69)(v84, *(void *)(v50 + 48) + v58 * v2, v7);
                v71(v59, 0, 1, v7);
                int64_t v60 = v57;
                uint64_t v48 = v59;
                uint64_t v56 = (void *)v80;
                goto LABEL_54;
              }
              int64_t v64 = v88 + 4;
              int64_t v60 = v88 + 3;
              if ((uint64_t)(v88 + 4) < v62)
              {
                unint64_t v63 = v86[v64];
                if (v63)
                {
LABEL_65:
                  int64_t v61 = v64;
                  goto LABEL_62;
                }
                int64_t v61 = v88 + 5;
                int64_t v60 = v88 + 4;
                if ((uint64_t)(v88 + 5) < v62)
                {
                  unint64_t v63 = v86[v61];
                  if (v63) {
                    goto LABEL_62;
                  }
                  int64_t v60 = v62 - 1;
                  unint64_t v65 = v88 + 6;
                  while (v62 != v65)
                  {
                    unint64_t v63 = v86[v65++];
                    if (v63)
                    {
                      int64_t v61 = v65 - 1;
                      goto LABEL_62;
                    }
                  }
                }
              }
            }
          }
        }
        uint64_t v47 = v84;
        v71(v84, 1, 1, v7);
        uint64_t v48 = v47;
        unint64_t v49 = 0;
        uint64_t v50 = v68;
LABEL_54:
        uint64_t v9 = v82 + 1;
        uint64_t v85 = v50;
        unint64_t v86 = v56;
        unint64_t v87 = v81;
        unint64_t v88 = v60;
        unint64_t v89 = v49;
        uint64_t v83 = v66;
        uint64_t v51 = MEMORY[0x270FA5388](v48);
        int64_t v41 = (char *)v66 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v53 = MEMORY[0x270FA5388](v51);
        int64_t v44 = (char *)v66 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_251A1B128(v53, (uint64_t)v44, &qword_26B21FF90);
        unsigned int v55 = v77(v44, 1, v7);
        uint64_t v45 = v72;
        if (v55 == 1) {
          goto LABEL_45;
        }
      }
      uint64_t v80 = (uint64_t)v86;
      unint64_t v49 = (v89 - 1) & v89;
      unint64_t v58 = __clz(__rbit64(v89)) | (v88 << 6);
      goto LABEL_58;
    }
LABEL_22:
    int64_t v27 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
LABEL_41:
      uint64_t v9 = v14;
      uint64_t v12 = v15;
    }
    else
    {
      int64_t v28 = (v17 + 64) >> 6;
      unint64_t v3 = v6;
      if (v27 < v28)
      {
        unint64_t v29 = v16[v27];
        if (v29)
        {
LABEL_25:
          unint64_t v81 = (v29 - 1) & v29;
          unint64_t v24 = __clz(__rbit64(v29)) + (v27 << 6);
          unint64_t v6 = v27;
          goto LABEL_20;
        }
        unint64_t v30 = v6 + 2;
        unint64_t v3 = v6 + 1;
        if ((uint64_t)(v6 + 2) < v28)
        {
          uint64_t v15 = v12;
          uint64_t v14 = v9;
          unint64_t v29 = v16[v30];
          if (v29)
          {
LABEL_28:
            int64_t v27 = v30;
            goto LABEL_25;
          }
          unint64_t v3 = v6 + 2;
          if ((uint64_t)(v6 + 3) < v28)
          {
            unint64_t v29 = v83[v6 + 3];
            if (v29)
            {
              int64_t v27 = v6 + 3;
              goto LABEL_25;
            }
            unint64_t v30 = v6 + 4;
            unint64_t v3 = v6 + 3;
            if ((uint64_t)(v6 + 4) < v28)
            {
              unint64_t v29 = v83[v30];
              if (v29) {
                goto LABEL_28;
              }
              int64_t v27 = v6 + 5;
              unint64_t v3 = v6 + 4;
              if ((uint64_t)(v6 + 5) < v28)
              {
                unint64_t v29 = v83[v27];
                if (!v29)
                {
                  unint64_t v3 = v28 - 1;
                  unint64_t v31 = v6 + 6;
                  do
                  {
                    if (v28 == v31) {
                      goto LABEL_41;
                    }
                    unint64_t v29 = v83[v31++];
                  }
                  while (!v29);
                  int64_t v27 = v31 - 1;
                }
                goto LABEL_25;
              }
            }
          }
        }
      }
    }
    uint64_t v25 = v84;
    uint64_t v71 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
    uint64_t v26 = v71(v84, 1, 1, v7);
    unint64_t v81 = 0;
    goto LABEL_43;
  }
  return sub_251A1E630();
}

uint64_t sub_251ED9B3C(uint64_t a1)
{
  return sub_251ED9B94(a1, (uint64_t (*)(void))sub_251F0F1C0, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
}

uint64_t sub_251ED9B68(uint64_t a1)
{
  return sub_251ED9B94(a1, (uint64_t (*)(void))sub_251F0F5FC, (uint64_t (*)(void))type metadata accessor for StaticResident);
}

uint64_t sub_251ED9B94(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  unint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native()
    && (int64_t)(v6 + v4) <= *(void *)(v5 + 24) >> 1)
  {
    uint64_t v10 = *(void *)(a1 + 16);
    if (v10) {
      goto LABEL_5;
    }
LABEL_16:
    if (!v4) {
      goto LABEL_17;
    }
    goto LABEL_19;
  }
  uint64_t v5 = a2();
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    goto LABEL_16;
  }
LABEL_5:
  uint64_t v11 = *(void *)(v5 + 16);
  uint64_t v12 = (*(void *)(v5 + 24) >> 1) - v11;
  uint64_t v13 = *(void *)(a3(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  if (v12 < v10)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = v5 + v15 + v14 * v11;
  unint64_t v17 = a1 + v15;
  uint64_t v18 = v14 * v10;
  unint64_t v19 = v16 + v18;
  unint64_t v20 = v17 + v18;
  if (v17 < v19 && v16 < v20) {
    goto LABEL_22;
  }
  swift_arrayInitWithCopy();
  unint64_t v22 = *(void *)(a1 + 16);
  if (v22 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!v22)
  {
LABEL_17:
    uint64_t result = swift_bridgeObjectRelease();
    *unint64_t v3 = v5;
    return result;
  }
  uint64_t v23 = *(void *)(v5 + 16);
  BOOL v24 = __OFADD__(v23, v22);
  uint64_t v25 = v23 + v22;
  if (!v24)
  {
    *(void *)(v5 + 16) = v25;
    goto LABEL_17;
  }
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t StaticTrigger.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t StaticTrigger.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticTrigger() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticTrigger.enabled.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticTrigger() + 24));
}

uint64_t StaticTrigger.events.getter()
{
  type metadata accessor for StaticTrigger();
  return swift_bridgeObjectRetain();
}

uint64_t StaticTrigger.actions.getter()
{
  type metadata accessor for StaticTrigger();
  return swift_bridgeObjectRetain();
}

uint64_t StaticTrigger.activatedScenes.getter()
{
  type metadata accessor for StaticTrigger();
  return swift_bridgeObjectRetain();
}

uint64_t StaticTrigger.executesOnce.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticTrigger() + 40));
}

uint64_t StaticTrigger.deletesAfterExecution.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticTrigger() + 44));
}

int *StaticTrigger.init(id:name:enabled:events:actions:activatedScenes:executesOnce:deletesAfterExecution:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, char a10)
{
  uint64_t v19 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(a9, a1, v19);
  uint64_t result = (int *)type metadata accessor for StaticTrigger();
  int64_t v21 = (void *)(a9 + result[5]);
  *int64_t v21 = a2;
  v21[1] = a3;
  *(void *)(a9 + result[7]) = a5;
  *(void *)(a9 + result[8]) = a6;
  *(void *)(a9 + result[9]) = a7;
  *(unsigned char *)(a9 + result[10]) = a8;
  *(unsigned char *)(a9 + result[6]) = a4;
  *(unsigned char *)(a9 + result[11]) = a10;
  return result;
}

uint64_t StaticTrigger.hash(into:)(long long *a1)
{
  uint64_t v2 = v1;
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  unint64_t v4 = (int *)type metadata accessor for StaticTrigger();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  sub_251F36CC0();
  uint64_t v5 = *(void *)(v1 + v4[7]);
  swift_bridgeObjectRetain();
  sub_251A55D7C((uint64_t)a1, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v2 + v4[8]);
  swift_bridgeObjectRetain();
  sub_251A55B00(a1, v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(v2 + v4[9]);
  swift_bridgeObjectRetain();
  sub_251A54708(a1, v7);
  swift_bridgeObjectRelease();
  sub_251F36CC0();
  return sub_251F36CC0();
}

uint64_t StaticTrigger.hashValue.getter()
{
  sub_251F36CA0();
  StaticTrigger.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251EDA168()
{
  sub_251F36CA0();
  StaticTrigger.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251EDA1AC()
{
  sub_251F36CA0();
  StaticTrigger.hash(into:)(v1);
  return sub_251F36D00();
}

void StaticTrigger.trigger.getter()
{
  uint64_t v1 = v0;
  if (qword_26B2200E0 != -1) {
LABEL_45:
  }
    swift_once();
  uint64_t v2 = qword_26B21FF50;
  swift_getKeyPath();
  uint64_t v80 = v2;
  uint64_t v69 = sub_251EDB3CC((unint64_t *)&qword_26B21F280, (void (*)(uint64_t))type metadata accessor for DataModel);
  sub_251F34F10();
  swift_release();
  uint64_t v3 = *(void **)(v2 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome);
  if (v3)
  {
    id v4 = v3;
    id v5 = objc_msgSend(v4, sel_triggers);
    sub_251A1A568(0, &qword_269BA55B0);
    uint64_t v6 = v1;
    unint64_t v7 = sub_251F35AC0();

    MEMORY[0x270FA5388](v8);
    v62[2] = v6;
    uint64_t v9 = 0;
    uint64_t v10 = sub_251A95638(sub_251EDB364, (uint64_t)v62, v7);

    swift_bridgeObjectRelease();
    if (v10) {
      return;
    }
    uint64_t v1 = v6;
  }
  else
  {
    uint64_t v9 = 0;
  }
  id v11 = objc_msgSend((id)qword_26B21FF50, sel_sortedHomes);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v12 = sub_251F35AC0();

  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v13)
    {
LABEL_8:
      unint64_t v14 = 0;
      unint64_t v67 = v12;
      unint64_t v68 = v12 & 0xC000000000000001;
      unint64_t v64 = v12 + 32;
      uint64_t v65 = v12 & 0xFFFFFFFFFFFFFF8;
      unint64_t v15 = &off_26536F000;
      unint64_t v75 = v1;
      uint64_t v66 = v13;
      while (1)
      {
        if (v68)
        {
          id v16 = (id)MEMORY[0x2533AB3A0](v14, v12);
        }
        else
        {
          if (v14 >= *(void *)(v65 + 16))
          {
            __break(1u);
            return;
          }
          id v16 = *(id *)(v64 + 8 * v14);
        }
        unint64_t v17 = v16;
        BOOL v18 = __OFADD__(v14, 1);
        unint64_t v19 = v14 + 1;
        if (v18) {
          goto LABEL_44;
        }
        uint64_t v70 = v9;
        unint64_t v71 = v19;
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        uint64_t v21 = *(void *)(*(void *)(v20 - 8) + 64);
        MEMORY[0x270FA5388](v20 - 8);
        uint64_t v1 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
        unint64_t v22 = (const char *)v15[241];
        id v74 = v17;
        id v23 = [v17 v22];
        sub_251F34D80();

        uint64_t v24 = sub_251F34DA0();
        uint64_t v25 = *(void *)(v24 - 8);
        uint64_t v78 = (uint64_t)v1;
        uint64_t v79 = v25;
        uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
        uint64_t v27 = 1;
        uint64_t v77 = v24;
        uint64_t v28 = ((uint64_t (*)(char *, void, uint64_t))v26)(v1, 0, 1);
        unint64_t v73 = &v63;
        MEMORY[0x270FA5388](v28);
        uint64_t v29 = qword_26B21FF50;
        swift_getKeyPath();
        uint64_t v80 = v29;
        sub_251F34F10();
        swift_release();
        unint64_t v30 = *(void **)(v29 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome);
        uint64_t v76 = &v63;
        if (v30)
        {
          id v31 = [v30 (SEL)v15[241]];
          sub_251F34D80();

          uint64_t v27 = 0;
        }
        uint64_t v32 = v77;
        v26(v1, v27, 1, v77);
        uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
        unint64_t v72 = &v63;
        uint64_t v34 = MEMORY[0x270FA5388](v33 - 8);
        uint64_t v36 = (char *)&v63 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v37 = (uint64_t)&v36[*(int *)(v34 + 56)];
        uint64_t v38 = v78;
        sub_251A1B128(v78, (uint64_t)v36, &qword_26B21FF90);
        sub_251A1B128((uint64_t)v1, v37, &qword_26B21FF90);
        uint64_t v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v79 + 48);
        uint64_t v40 = v39(v36, 1, v32);
        if (v40 == 1) {
          break;
        }
        MEMORY[0x270FA5388](v40);
        uint64_t v43 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_251A1B128((uint64_t)v36, (uint64_t)v43, &qword_26B21FF90);
        uint64_t v44 = v39((char *)v37, 1, v32);
        if (v44 == 1)
        {
          sub_251A1B064((uint64_t)v1, &qword_26B21FF90);
          sub_251A1B064(v78, &qword_26B21FF90);
          (*(void (**)(char *, uint64_t))(v79 + 8))(v43, v32);
          id v42 = v74;
LABEL_23:
          sub_251A1B064((uint64_t)v36, &qword_26B21E6B8);
          goto LABEL_27;
        }
        uint64_t v63 = (uint64_t)&v63;
        uint64_t v45 = v79;
        MEMORY[0x270FA5388](v44);
        uint64_t v47 = (char *)&v63 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v47, v37, v32);
        sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
        char v48 = sub_251F35650();
        unint64_t v49 = *(void (**)(char *, uint64_t))(v45 + 8);
        v49(v47, v32);
        sub_251A1B064((uint64_t)v1, &qword_26B21FF90);
        sub_251A1B064(v78, &qword_26B21FF90);
        v49(v43, v32);
        sub_251A1B064((uint64_t)v36, &qword_26B21FF90);
        unint64_t v14 = v71;
        id v42 = v74;
        if (v48)
        {

          goto LABEL_26;
        }
LABEL_27:
        uint64_t v1 = (char *)objc_msgSend(v42, sel_triggers);
        sub_251A1A568(0, &qword_269BA55B0);
        unint64_t v50 = sub_251F35AC0();

        uint64_t v78 = v50;
        if (v50 >> 62)
        {
          if (v78 < 0) {
            uint64_t v1 = (char *)v78;
          }
          else {
            uint64_t v1 = (char *)(v78 & 0xFFFFFFFFFFFFFF8);
          }
          swift_bridgeObjectRetain_n();
          uint64_t v51 = sub_251F366C0();
          swift_bridgeObjectRelease();
          if (v51)
          {
LABEL_29:
            uint64_t v76 = (uint64_t *)(v78 & 0xC000000000000001);
            uint64_t v52 = 4;
            while (1)
            {
              id v53 = v76 ? (id)MEMORY[0x2533AB3A0](v52 - 4, v78) : *(id *)(v78 + 8 * v52);
              uint64_t v54 = v53;
              uint64_t v55 = v52 - 3;
              if (__OFADD__(v52 - 4, 1)) {
                break;
              }
              uint64_t v56 = v51;
              int64_t v57 = v15;
              id v58 = [v53 (SEL)v15[241]];
              uint64_t v1 = (char *)&v63;
              uint64_t v59 = v79;
              MEMORY[0x270FA5388](v58);
              int64_t v61 = (char *)&v63 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
              sub_251F34D80();

              LOBYTE(v58) = sub_251F34D70();
              (*(void (**)(char *, uint64_t))(v59 + 8))(v61, v77);
              if (v58)
              {
                swift_bridgeObjectRelease();

                swift_bridgeObjectRelease_n();
                return;
              }

              ++v52;
              uint64_t v51 = v56;
              unint64_t v15 = v57;
              if (v55 == v56) {
                goto LABEL_9;
              }
            }
            __break(1u);
LABEL_44:
            __break(1u);
            goto LABEL_45;
          }
        }
        else
        {
          uint64_t v51 = *(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v51) {
            goto LABEL_29;
          }
        }
LABEL_9:
        swift_bridgeObjectRelease_n();

        uint64_t v9 = v70;
        unint64_t v14 = v71;
        unint64_t v12 = v67;
LABEL_10:
        if (v14 == v66) {
          goto LABEL_47;
        }
      }
      sub_251A1B064((uint64_t)v1, &qword_26B21FF90);
      sub_251A1B064(v38, &qword_26B21FF90);
      int v41 = v39((char *)v37, 1, v32);
      id v42 = v74;
      if (v41 == 1)
      {
        sub_251A1B064((uint64_t)v36, &qword_26B21FF90);

        unint64_t v14 = v71;
LABEL_26:
        uint64_t v9 = v70;
        unint64_t v12 = v67;
        goto LABEL_10;
      }
      goto LABEL_23;
    }
  }
LABEL_47:
  swift_bridgeObjectRelease();
}

HMTrigger_optional __swiftcall StaticTrigger.trigger(in:)(HMHome in)
{
  id v2 = [(objc_class *)in.super.isa triggers];
  sub_251A1A568(0, &qword_269BA55B0);
  unint64_t v3 = sub_251F35AC0();

  uint64_t v8 = v1;
  id v4 = (objc_class *)sub_251A95638(sub_251EDBD30, (uint64_t)&v7, v3);
  swift_bridgeObjectRelease();
  uint64_t v6 = v4;
  result.value.super.isa = v6;
  result.is_nil = v5;
  return result;
}

uint64_t sub_251EDABD4(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_uniqueIdentifier);
  uint64_t v2 = sub_251F34DA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  Swift::Bool v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  char v6 = sub_251F34D70();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6 & 1;
}

uint64_t _s13HomeDataModel13StaticTriggerV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_251F34D70() & 1) == 0)
  {
LABEL_12:
    char v11 = 0;
    return v11 & 1;
  }
  uint64_t v4 = (int *)type metadata accessor for StaticTrigger();
  uint64_t v5 = v4[5];
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  uint64_t v8 = (void *)(a2 + v5);
  BOOL v9 = v6 == *v8 && v7 == v8[1];
  if (v9 || (char v10 = sub_251F36B10(), v11 = 0, (v10 & 1) != 0))
  {
    if (*(unsigned __int8 *)(a1 + v4[6]) == *(unsigned __int8 *)(a2 + v4[6])
      && (sub_251B06C90(*(void *)(a1 + v4[7]), *(void *)(a2 + v4[7])) & 1) != 0
      && (sub_251B07C98(*(void *)(a1 + v4[8]), *(void *)(a2 + v4[8])) & 1) != 0
      && (sub_251B04848(*(void *)(a1 + v4[9]), *(void *)(a2 + v4[9])) & 1) != 0
      && *(unsigned __int8 *)(a1 + v4[10]) == *(unsigned __int8 *)(a2 + v4[10]))
    {
      char v11 = *(unsigned char *)(a1 + v4[11]) ^ *(unsigned char *)(a2 + v4[11]) ^ 1;
      return v11 & 1;
    }
    goto LABEL_12;
  }
  return v11 & 1;
}

uint64_t sub_251EDADDC(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA55D8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for Event();
  uint64_t v47 = *(void *)(v54 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v54);
  uint64_t v53 = (uint64_t)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v46 = (uint64_t)&v43 - v11;
  if (a1 >> 62)
  {
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_251F366C0();
    if (v12) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v12)
    {
LABEL_3:
      unint64_t v52 = a1 & 0xC000000000000001;
      unint64_t v50 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56);
      uint64_t v14 = MEMORY[0x263F8EE78];
      unint64_t v49 = (unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
      uint64_t v15 = 4;
      *(void *)&long long v13 = 138412546;
      long long v43 = v13;
      uint64_t v44 = a2;
      unint64_t v45 = a1;
      char v48 = v8;
      uint64_t v51 = v12;
      while (1)
      {
        unint64_t v55 = v14;
        uint64_t v17 = v15 - 4;
        if (v52)
        {
          id v18 = (id)MEMORY[0x2533AB3A0](v15 - 4, a1);
          uint64_t v19 = v15 - 3;
          if (__OFADD__(v17, 1)) {
            goto LABEL_26;
          }
        }
        else
        {
          id v18 = *(id *)(a1 + 8 * v15);
          uint64_t v19 = v15 - 3;
          if (__OFADD__(v17, 1))
          {
LABEL_26:
            __break(1u);
            goto LABEL_27;
          }
        }
        id v20 = v18;
        Event.init(event:in:)(v20, a2, (uint64_t)v8);
        if (v3)
        {
          if (qword_269B9C320 != -1) {
            swift_once();
          }
          uint64_t v21 = sub_251F350A0();
          __swift_project_value_buffer(v21, (uint64_t)qword_269B9FBF0);
          id v22 = v20;
          id v23 = v3;
          id v24 = v22;
          id v25 = v3;
          uint64_t v26 = sub_251F35080();
          os_log_type_t v27 = sub_251F35FB0();
          if (os_log_type_enabled(v26, v27))
          {
            uint64_t v28 = swift_slowAlloc();
            uint64_t v29 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v28 = v43;
            id v30 = v3;
            uint64_t v31 = _swift_stdlib_bridgeErrorToNSError();
            *(void *)(v28 + 4) = v31;
            *uint64_t v29 = v31;

            *(_WORD *)(v28 + 12) = 2112;
            *(void *)(v28 + 14) = v24;
            v29[1] = v24;

            _os_log_impl(&dword_2519F3000, v26, v27, "Error: (%@) processing event: %@", (uint8_t *)v28, 0x16u);
            __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
            swift_arrayDestroy();
            uint64_t v32 = v29;
            a2 = v44;
            MEMORY[0x2533AC760](v32, -1, -1);
            uint64_t v33 = v28;
            a1 = v45;
            MEMORY[0x2533AC760](v33, -1, -1);
          }
          else
          {
          }
          uint64_t v3 = 0;
          uint64_t v34 = 1;
          uint64_t v8 = v48;
        }
        else
        {
          uint64_t v34 = 0;
        }
        uint64_t v35 = v54;
        (*v50)(v8, v34, 1, v54);

        if ((*v49)(v8, 1, v35) == 1)
        {
          sub_251A1B064((uint64_t)v8, &qword_269BA55D8);
          uint64_t v16 = v51;
          uint64_t v14 = v55;
        }
        else
        {
          uint64_t v36 = v46;
          sub_251EDBCC8((uint64_t)v8, v46, (uint64_t (*)(void))type metadata accessor for Event);
          sub_251EDBCC8(v36, v53, (uint64_t (*)(void))type metadata accessor for Event);
          unint64_t v37 = v55;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v16 = v51;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            unint64_t v37 = sub_251F0FB90(0, *(void *)(v37 + 16) + 1, 1, v37);
          }
          unint64_t v40 = *(void *)(v37 + 16);
          unint64_t v39 = *(void *)(v37 + 24);
          uint64_t v41 = v37;
          if (v40 >= v39 >> 1) {
            uint64_t v41 = sub_251F0FB90(v39 > 1, v40 + 1, 1, v37);
          }
          *(void *)(v41 + 16) = v40 + 1;
          uint64_t v14 = v41;
          sub_251EDBCC8(v53, v41+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(void *)(v47 + 72) * v40, (uint64_t (*)(void))type metadata accessor for Event);
        }
        ++v15;
        if (v19 == v16)
        {
          swift_bridgeObjectRelease();
          return v14;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

uint64_t type metadata accessor for StaticTrigger()
{
  uint64_t result = qword_269BA55C0;
  if (!qword_269BA55C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_251EDB364(id *a1)
{
  return sub_251EDABD4(a1) & 1;
}

uint64_t sub_251EDB384()
{
  return sub_251EDB3CC(&qword_269BA55B8, (void (*)(uint64_t))type metadata accessor for StaticTrigger);
}

uint64_t sub_251EDB3CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251EDB414()
{
  return sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
}

void *initializeBufferWithCopyOfBuffer for StaticTrigger(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
    uint64_t v13 = a3[8];
    *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
    uint64_t v14 = a3[10];
    *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
    *((unsigned char *)a1 + v14) = *((unsigned char *)a2 + v14);
    *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for StaticTrigger(uint64_t a1)
{
  uint64_t v2 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StaticTrigger(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v12 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StaticTrigger(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t initializeWithTake for StaticTrigger(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(a2 + v9);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithTake for StaticTrigger(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticTrigger(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251EDB9B4);
}

uint64_t sub_251EDB9B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for StaticTrigger(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251EDBA8C);
}

uint64_t sub_251EDBA8C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_251F34DA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_251EDBB4C()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_251EDBC00(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251EDBC68(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251EDBCC8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251EDBD30(id *a1)
{
  return sub_251EDB364(a1) & 1;
}

uint64_t sub_251EDBD4C(uint64_t a1)
{
  unint64_t v22 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0) {
    uint64_t v2 = sub_251F36300();
  }
  else {
    uint64_t v2 = *(void *)(a1 + 16);
  }
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v27 = MEMORY[0x263F8EE78];
    sub_251A3E200(0, v2 & ~(v2 >> 63), 0);
    if (v22)
    {
      uint64_t result = sub_251F362A0();
      unsigned __int8 v5 = 1;
    }
    else
    {
      uint64_t result = sub_251B72004(a1);
      unsigned __int8 v5 = v6 & 1;
    }
    uint64_t v24 = result;
    uint64_t v25 = v4;
    unsigned __int8 v26 = v5;
    if (v2 < 0)
    {
      __break(1u);
LABEL_23:
      __break(1u);
    }
    else
    {
      do
      {
        while (1)
        {
          uint64_t v13 = v24;
          uint64_t v12 = v25;
          uint64_t v14 = v26;
          sub_251A54044(v24, v25, v26, a1);
          uint64_t v16 = v15;
          unsigned __int16 v17 = (unsigned __int16)objc_msgSend(v15, sel_unsignedShortValue);

          uint64_t v18 = v27;
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = sub_251A3E200(0, *(void *)(v18 + 16) + 1, 1);
            uint64_t v18 = v27;
          }
          unint64_t v20 = *(void *)(v18 + 16);
          unint64_t v19 = *(void *)(v18 + 24);
          if (v20 >= v19 >> 1)
          {
            uint64_t result = sub_251A3E200(v19 > 1, v20 + 1, 1);
            uint64_t v18 = v27;
          }
          *(void *)(v18 + 16) = v20 + 1;
          *(_WORD *)(v18 + 2 * v20 + 32) = v17;
          if (v22) {
            break;
          }
          uint64_t v7 = sub_251A53F5C(v13, v12, v14, a1);
          uint64_t v9 = v8;
          char v11 = v10;
          sub_251A4ECE4(v13, v12, v14);
          uint64_t v24 = v7;
          uint64_t v25 = v9;
          unsigned __int8 v26 = v11 & 1;
          if (!--v2) {
            goto LABEL_20;
          }
        }
        if ((v14 & 1) == 0) {
          goto LABEL_23;
        }
        if (sub_251F362C0()) {
          swift_isUniquelyReferenced_nonNull_native();
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_269B9ECA8);
        uint64_t v21 = (void (*)(unsigned char *, void))sub_251F35E80();
        sub_251F36370();
        v21(v23, 0);
        --v2;
      }
      while (v2);
LABEL_20:
      sub_251A4ECE4(v24, v25, v26);
      return v27;
    }
  }
  return result;
}

Swift::Void __swiftcall MatterDevice.prefetch()()
{
  if ((*(uint64_t (**)(void))(v0 + 24))(0))
  {
    uint64_t v2 = v1;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v2 + 16))(ObjectType, v2);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
}

uint64_t MatterDescriptorCluster.availableClusterKinds.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (*(uint64_t (**)(void))(a2 + 24))();
  uint64_t v3 = sub_251EDF934(v2);
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_251EE14AC(v3, (void (*)(void))sub_251A2C2DC, (uint64_t)&type metadata for ClusterKind, (void (*)(char *, void))sub_251A62E14);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t MatterDevice.allEndpointIDs.getter(uint64_t a1, uint64_t a2)
{
  if (!(*(uint64_t (**)(void, uint64_t))(a2 + 24))(0, a1)) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(ObjectType, v3);
  swift_unknownObjectRelease();
  uint64_t v6 = sub_251EDBD4C(v5);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_251EDC188(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticService();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v24 - v8;
  MEMORY[0x270FA5388](v7);
  char v11 = (char *)&v24 - v10;
  sub_251EE19AC(&qword_269BA3888, (void (*)(uint64_t))type metadata accessor for StaticService);
  uint64_t result = sub_251F35E60();
  int64_t v13 = 0;
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v24 = a1 + 64;
  uint64_t v25 = result;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v18) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v18) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v24 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v18) {
          goto LABEL_23;
        }
        unint64_t v22 = *(void *)(v24 + 8 * v13);
        if (!v22)
        {
          int64_t v13 = v21 + 3;
          if (v21 + 3 >= v18) {
            goto LABEL_23;
          }
          unint64_t v22 = *(void *)(v24 + 8 * v13);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v17 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_5:
    sub_251EE19F4(*(void *)(a1 + 56) + *(void *)(v3 + 72) * v20, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251EE1944((uint64_t)v11, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251A82120((uint64_t)v9, (uint64_t)v6);
    uint64_t result = sub_251EE1A5C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v18)
  {
LABEL_23:
    swift_release();
    return v25;
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v18) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_251EDC460(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticMediaProfile();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v24 - v8;
  MEMORY[0x270FA5388](v7);
  char v11 = (char *)&v24 - v10;
  sub_251EE19AC(&qword_269BA2C90, (void (*)(uint64_t))type metadata accessor for StaticMediaProfile);
  uint64_t result = sub_251F35E60();
  int64_t v13 = 0;
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v24 = a1 + 64;
  uint64_t v25 = result;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v18) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v18) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v24 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v18) {
          goto LABEL_23;
        }
        unint64_t v22 = *(void *)(v24 + 8 * v13);
        if (!v22)
        {
          int64_t v13 = v21 + 3;
          if (v21 + 3 >= v18) {
            goto LABEL_23;
          }
          unint64_t v22 = *(void *)(v24 + 8 * v13);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v17 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_5:
    sub_251EE19F4(*(void *)(a1 + 56) + *(void *)(v3 + 72) * v20, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    sub_251EE1944((uint64_t)v11, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    sub_251A62000((uint64_t)v9, (uint64_t)v6);
    uint64_t result = sub_251EE1A5C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v18)
  {
LABEL_23:
    swift_release();
    return v25;
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v18) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_251EDC738(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticMediaSystem();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v24 - v8;
  MEMORY[0x270FA5388](v7);
  char v11 = (char *)&v24 - v10;
  sub_251EE19AC(&qword_269BA3A40, (void (*)(uint64_t))type metadata accessor for StaticMediaSystem);
  uint64_t result = sub_251F35E60();
  int64_t v13 = 0;
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v24 = a1 + 64;
  uint64_t v25 = result;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v18) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v18) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v24 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v18) {
          goto LABEL_23;
        }
        unint64_t v22 = *(void *)(v24 + 8 * v13);
        if (!v22)
        {
          int64_t v13 = v21 + 3;
          if (v21 + 3 >= v18) {
            goto LABEL_23;
          }
          unint64_t v22 = *(void *)(v24 + 8 * v13);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v17 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_5:
    sub_251EE19F4(*(void *)(a1 + 56) + *(void *)(v3 + 72) * v20, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    sub_251EE1944((uint64_t)v11, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    sub_251A62284((uint64_t)v9, (uint64_t)v6);
    uint64_t result = sub_251EE1A5C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v18)
  {
LABEL_23:
    swift_release();
    return v25;
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v18) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_251EDCA10(uint64_t a1)
{
  sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
  sub_251EE1804((unint64_t *)&qword_269B9D158, (unint64_t *)&qword_26B21F170);
  int64_t v2 = 0;
  v13[1] = (id)sub_251F35E60();
  uint64_t v3 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      int64_t v2 = v10 + 1;
      if (v10 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v2);
      if (!v11)
      {
        int64_t v2 = v10 + 2;
        if (v10 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        if (!v11)
        {
          int64_t v2 = v10 + 3;
          if (v10 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v11 = *(void *)(v3 + 8 * v2);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    sub_251A62CF4(v13, *(id *)(*(void *)(a1 + 48) + 8 * v9));
  }
  int64_t v12 = v10 + 4;
  if (v12 >= v7)
  {
LABEL_23:
    swift_release();
    return;
  }
  unint64_t v11 = *(void *)(v3 + 8 * v12);
  if (v11)
  {
    int64_t v2 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v2 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v2 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v2);
    ++v12;
    if (v11) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_251EDCBC8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticAccessory(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  unint64_t v9 = (char *)&v24 - v8;
  MEMORY[0x270FA5388](v7);
  unint64_t v11 = (char *)&v24 - v10;
  sub_251EE19AC(&qword_269BA3D10, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
  uint64_t result = sub_251F35E60();
  int64_t v13 = 0;
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v24 = a1 + 64;
  uint64_t v25 = result;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v18) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v18) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v24 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v18) {
          goto LABEL_23;
        }
        unint64_t v22 = *(void *)(v24 + 8 * v13);
        if (!v22)
        {
          int64_t v13 = v21 + 3;
          if (v21 + 3 >= v18) {
            goto LABEL_23;
          }
          unint64_t v22 = *(void *)(v24 + 8 * v13);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v17 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_5:
    sub_251EE19F4(*(void *)(a1 + 56) + *(void *)(v3 + 72) * v20, (uint64_t)v11, type metadata accessor for StaticAccessory);
    sub_251EE1944((uint64_t)v11, (uint64_t)v6, type metadata accessor for StaticAccessory);
    sub_251A6444C((uint64_t)v9, (uint64_t)v6);
    uint64_t result = sub_251EE1A5C((uint64_t)v9, type metadata accessor for StaticAccessory);
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v18)
  {
LABEL_23:
    swift_release();
    return v25;
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v18) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_251EDCEA0(uint64_t *a1)
{
  void (*v43)(uint64_t *__return_ptr, uint64_t);
  uint64_t v44;
  char *v45;
  uint64_t v46;
  unsigned int (**v47)(uint64_t, uint64_t, uint64_t);
  void (**v48)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(char *);
  uint64_t v57;
  void (**v58)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void v62[2];

  uint64_t v2 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v54 = (uint64_t)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v53 = (uint64_t)&v42 - v6;
  unint64_t v49 = type metadata accessor for StaticService();
  uint64_t v7 = *(void *)(v49 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v49);
  uint64_t v44 = (uint64_t)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)&v42 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  unint64_t v45 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v51 = (uint64_t)&v42 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D148);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  unint64_t v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  int64_t v21 = (char *)&v42 - v20;
  uint64_t v22 = *a1;
  uint64_t v56 = (uint64_t (*)(char *))a1[1];
  unint64_t v52 = a1[2];
  long long v43 = (void (*)(uint64_t *__return_ptr, uint64_t))a1[3];
  unint64_t v50 = a1[4];
  v62[0] = v22;
  sub_251EE19AC(&qword_269BA55E8, (void (*)(uint64_t))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
  uint64_t result = sub_251F35E60();
  unint64_t v24 = 0;
  int64_t v61 = result;
  int64_t v57 = v7;
  id v58 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  unint64_t v55 = v3 + 48;
  uint64_t v47 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  char v48 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
  uint64_t v46 = v2;
  uint64_t v59 = 0;
  while (1)
  {
    do
    {
      uint64_t v30 = v62[0];
      unint64_t v31 = *(void *)(v62[0] + 16);
      if (v24 != v31)
      {
        unint64_t v35 = v24;
        while (1)
        {
          if ((v24 & 0x8000000000000000) != 0) {
            goto LABEL_25;
          }
          if (v35 >= *(void *)(v30 + 16)) {
            goto LABEL_26;
          }
          unint64_t v36 = v35 + 1;
          sub_251EE19F4(v30+ ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80))+ *(void *)(v57 + 72) * v35, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
          if (v56(v11)) {
            break;
          }
          uint64_t result = sub_251EE1A5C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
          unint64_t v35 = v36;
          if (v31 == v36)
          {
            uint64_t v32 = 1;
            uint64_t v59 = v31;
LABEL_17:
            uint64_t v34 = (uint64_t)v45;
            uint64_t v33 = v46;
            goto LABEL_18;
          }
        }
        sub_251EE1944((uint64_t)v11, v51, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v32 = 0;
        uint64_t v59 = v36;
        goto LABEL_17;
      }
      uint64_t v32 = 1;
      uint64_t v34 = (uint64_t)v45;
      uint64_t v33 = v46;
LABEL_18:
      uint64_t v37 = v49;
      uint64_t v38 = v51;
      (*v48)(v51, v32, 1, v49);
      sub_251A4ECF0(v38, v34, qword_26B21EE20);
      if ((*v47)(v34, 1, v37) == 1)
      {
        (*v58)(v21, 1, 1, v33);
        sub_251CC8954((uint64_t)v62);
LABEL_22:
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        return v61;
      }
      uint64_t v39 = v44;
      sub_251EE1944(v34, v44, (uint64_t (*)(void))type metadata accessor for StaticService);
      v43(&v60, v39);
      uint64_t v40 = v60;
      sub_251EE1A5C(v39, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v41 = v40;
      unint64_t v24 = v59;
    }
    while (!v40);
    unint64_t v25 = *(void *)(v40 + 16);
    if (v25) {
      break;
    }
LABEL_7:
    (*v58)(v19, 1, 1, v33);
    uint64_t result = sub_251EE1750((uint64_t)v19);
  }
  unint64_t v26 = 0;
  while (v26 < v25)
  {
    sub_251EE19F4(v41+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v26, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v19, 0, 1, v33);
    sub_251A4ECF0((uint64_t)v19, (uint64_t)v21, &qword_269B9D148);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v21, 1, v33) == 1)
    {
      sub_251CC8954((uint64_t)v62);
      goto LABEL_22;
    }
    ++v26;
    uint64_t v27 = v54;
    sub_251EE1944((uint64_t)v21, v54, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
    uint64_t v28 = v53;
    sub_251A646D0(v53, v27);
    uint64_t v29 = v28;
    unint64_t v24 = v59;
    uint64_t result = sub_251EE1A5C(v29, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
    unint64_t v25 = *(void *)(v41 + 16);
    if (v26 == v25) {
      goto LABEL_7;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_251EDD4F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticMediaSystemComponent();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v24 - v8;
  MEMORY[0x270FA5388](v7);
  unint64_t v11 = (char *)&v24 - v10;
  sub_251EE19AC(&qword_269BA5600, (void (*)(uint64_t))type metadata accessor for StaticMediaSystemComponent);
  uint64_t result = sub_251F35E60();
  int64_t v13 = 0;
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v24 = a1 + 64;
  uint64_t v25 = result;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v18) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v18) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v24 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v18) {
          goto LABEL_23;
        }
        unint64_t v22 = *(void *)(v24 + 8 * v13);
        if (!v22)
        {
          int64_t v13 = v21 + 3;
          if (v21 + 3 >= v18) {
            goto LABEL_23;
          }
          unint64_t v22 = *(void *)(v24 + 8 * v13);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v17 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_5:
    sub_251EE19F4(*(void *)(a1 + 56) + *(void *)(v3 + 72) * v20, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
    sub_251EE1944((uint64_t)v11, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
    sub_251A649E8((uint64_t)v9, (uint64_t)v6);
    uint64_t result = sub_251EE1A5C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v18)
  {
LABEL_23:
    swift_release();
    return v25;
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v18) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_251EDD7D0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticZone();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v24 - v8;
  MEMORY[0x270FA5388](v7);
  unint64_t v11 = (char *)&v24 - v10;
  sub_251EE19AC(&qword_26B21ED58, (void (*)(uint64_t))type metadata accessor for StaticZone);
  uint64_t result = sub_251F35E60();
  int64_t v13 = 0;
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v24 = a1 + 64;
  uint64_t v25 = result;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v18) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v18) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v24 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v18) {
          goto LABEL_23;
        }
        unint64_t v22 = *(void *)(v24 + 8 * v13);
        if (!v22)
        {
          int64_t v13 = v21 + 3;
          if (v21 + 3 >= v18) {
            goto LABEL_23;
          }
          unint64_t v22 = *(void *)(v24 + 8 * v13);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v17 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_5:
    sub_251EE19F4(*(void *)(a1 + 56) + *(void *)(v3 + 72) * v20, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticZone);
    sub_251EE1944((uint64_t)v11, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticZone);
    sub_251A652C8((uint64_t)v9, (uint64_t)v6);
    uint64_t result = sub_251EE1A5C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticZone);
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v18)
  {
LABEL_23:
    swift_release();
    return v25;
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v18) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_251EDDAA8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticActionSet();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v24 - v8;
  MEMORY[0x270FA5388](v7);
  unint64_t v11 = (char *)&v24 - v10;
  sub_251EE19AC(&qword_269BA48B0, (void (*)(uint64_t))type metadata accessor for StaticActionSet);
  uint64_t result = sub_251F35E60();
  int64_t v13 = 0;
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v24 = a1 + 64;
  uint64_t v25 = result;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v18) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v18) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v24 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v18) {
          goto LABEL_23;
        }
        unint64_t v22 = *(void *)(v24 + 8 * v13);
        if (!v22)
        {
          int64_t v13 = v21 + 3;
          if (v21 + 3 >= v18) {
            goto LABEL_23;
          }
          unint64_t v22 = *(void *)(v24 + 8 * v13);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v17 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_5:
    sub_251EE19F4(*(void *)(a1 + 56) + *(void *)(v3 + 72) * v20, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    sub_251EE1944((uint64_t)v11, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    sub_251A6587C((uint64_t)v9, (uint64_t)v6);
    uint64_t result = sub_251EE1A5C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v18)
  {
LABEL_23:
    swift_release();
    return v25;
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v18) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_251EDDD80(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticCameraProfile();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v24 - v8;
  MEMORY[0x270FA5388](v7);
  unint64_t v11 = (char *)&v24 - v10;
  sub_251EE19AC(&qword_269BA2DD8, (void (*)(uint64_t))type metadata accessor for StaticCameraProfile);
  uint64_t result = sub_251F35E60();
  int64_t v13 = 0;
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v24 = a1 + 64;
  uint64_t v25 = result;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v18) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v18) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v24 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v18) {
          goto LABEL_23;
        }
        unint64_t v22 = *(void *)(v24 + 8 * v13);
        if (!v22)
        {
          int64_t v13 = v21 + 3;
          if (v21 + 3 >= v18) {
            goto LABEL_23;
          }
          unint64_t v22 = *(void *)(v24 + 8 * v13);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v17 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_5:
    sub_251EE19F4(*(void *)(a1 + 56) + *(void *)(v3 + 72) * v20, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
    sub_251EE1944((uint64_t)v11, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
    sub_251A65CEC((uint64_t)v9, (uint64_t)v6);
    uint64_t result = sub_251EE1A5C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v18)
  {
LABEL_23:
    swift_release();
    return v25;
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v18) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_251EDE058(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticRoom(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v24 - v8;
  MEMORY[0x270FA5388](v7);
  unint64_t v11 = (char *)&v24 - v10;
  sub_251EE19AC(&qword_269BA5640, (void (*)(uint64_t))type metadata accessor for StaticRoom);
  uint64_t result = sub_251F35E60();
  int64_t v13 = 0;
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v24 = a1 + 64;
  uint64_t v25 = result;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v18) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v18) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v24 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v18) {
          goto LABEL_23;
        }
        unint64_t v22 = *(void *)(v24 + 8 * v13);
        if (!v22)
        {
          int64_t v13 = v21 + 3;
          if (v21 + 3 >= v18) {
            goto LABEL_23;
          }
          unint64_t v22 = *(void *)(v24 + 8 * v13);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v17 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_5:
    sub_251EE19F4(*(void *)(a1 + 56) + *(void *)(v3 + 72) * v20, (uint64_t)v11, type metadata accessor for StaticRoom);
    sub_251EE1944((uint64_t)v11, (uint64_t)v6, type metadata accessor for StaticRoom);
    sub_251A65F70((uint64_t)v9, (uint64_t)v6);
    uint64_t result = sub_251EE1A5C((uint64_t)v9, type metadata accessor for StaticRoom);
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v18)
  {
LABEL_23:
    swift_release();
    return v25;
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v18) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_251EDE330(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticServiceGroup();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v24 - v8;
  MEMORY[0x270FA5388](v7);
  unint64_t v11 = (char *)&v24 - v10;
  sub_251EE19AC(&qword_269BA3938, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
  uint64_t result = sub_251F35E60();
  int64_t v13 = 0;
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v24 = a1 + 64;
  uint64_t v25 = result;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v18) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v18) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v24 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v18) {
          goto LABEL_23;
        }
        unint64_t v22 = *(void *)(v24 + 8 * v13);
        if (!v22)
        {
          int64_t v13 = v21 + 3;
          if (v21 + 3 >= v18) {
            goto LABEL_23;
          }
          unint64_t v22 = *(void *)(v24 + 8 * v13);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v17 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_5:
    sub_251EE19F4(*(void *)(a1 + 56) + *(void *)(v3 + 72) * v20, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    sub_251EE1944((uint64_t)v11, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    sub_251A661F4((uint64_t)v9, (uint64_t)v6);
    uint64_t result = sub_251EE1A5C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v18)
  {
LABEL_23:
    swift_release();
    return v25;
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v18) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_251EDE608(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticUser();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v24 - v8;
  MEMORY[0x270FA5388](v7);
  unint64_t v11 = (char *)&v24 - v10;
  sub_251EE19AC(&qword_269BA5638, (void (*)(uint64_t))type metadata accessor for StaticUser);
  uint64_t result = sub_251F35E60();
  int64_t v13 = 0;
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v24 = a1 + 64;
  uint64_t v25 = result;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v18) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v18) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v24 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v18) {
          goto LABEL_23;
        }
        unint64_t v22 = *(void *)(v24 + 8 * v13);
        if (!v22)
        {
          int64_t v13 = v21 + 3;
          if (v21 + 3 >= v18) {
            goto LABEL_23;
          }
          unint64_t v22 = *(void *)(v24 + 8 * v13);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v17 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_5:
    sub_251EE19F4(*(void *)(a1 + 56) + *(void *)(v3 + 72) * v20, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticUser);
    sub_251EE1944((uint64_t)v11, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticUser);
    sub_251A66584((uint64_t)v9, (uint64_t)v6);
    uint64_t result = sub_251EE1A5C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticUser);
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v18)
  {
LABEL_23:
    swift_release();
    return v25;
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v18) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_251EDE8E0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticResident();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v24 - v8;
  MEMORY[0x270FA5388](v7);
  unint64_t v11 = (char *)&v24 - v10;
  sub_251EE19AC(&qword_269BA5630, (void (*)(uint64_t))type metadata accessor for StaticResident);
  uint64_t result = sub_251F35E60();
  int64_t v13 = 0;
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v24 = a1 + 64;
  uint64_t v25 = result;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v18) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v18) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v24 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v18) {
          goto LABEL_23;
        }
        unint64_t v22 = *(void *)(v24 + 8 * v13);
        if (!v22)
        {
          int64_t v13 = v21 + 3;
          if (v21 + 3 >= v18) {
            goto LABEL_23;
          }
          unint64_t v22 = *(void *)(v24 + 8 * v13);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v17 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_5:
    sub_251EE19F4(*(void *)(a1 + 56) + *(void *)(v3 + 72) * v20, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticResident);
    sub_251EE1944((uint64_t)v11, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticResident);
    sub_251A66934((uint64_t)v9, (uint64_t)v6);
    uint64_t result = sub_251EE1A5C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticResident);
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v18)
  {
LABEL_23:
    swift_release();
    return v25;
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v18) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_251EDEBB8(uint64_t a1)
{
  uint64_t v2 = sub_251F34DA0();
  sub_251AD2788();
  uint64_t v28 = a1;
  uint64_t v29 = sub_251F35E60();
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v25 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v24 = (uint64_t)&v24;
  uint64_t result = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = 0;
  int64_t v26 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v27 = v2 - 8;
  if (!v6) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    uint64_t v17 = *(void *)(v2 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v10, *(void *)(v28 + 48) + *(void *)(v17 + 72) * i, v2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v10, 0, 1, v2);
    uint64_t v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v10, 1, v2);
    if (v18 == 1) {
      goto LABEL_25;
    }
    uint64_t v19 = MEMORY[0x270FA5388](v18);
    int64_t v21 = (char *)&v24 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    MEMORY[0x270FA5388](v19);
    int64_t v23 = (char *)&v24 - v22;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))((char *)&v24 - v22, v10, v2);
    sub_251A637B8(v21, v23);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v21, v2);
    if (v6) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v14 >= v26) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v25 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v26) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v25 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v26) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v25 + 8 * v11);
        if (!v15)
        {
          int64_t v11 = v14 + 3;
          if (v14 + 3 >= v26) {
            goto LABEL_24;
          }
          unint64_t v15 = *(void *)(v25 + 8 * v11);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v6 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v26)
  {
LABEL_24:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v10, 1, 1, v2);
LABEL_25:
    swift_release();
    return v29;
  }
  unint64_t v15 = *(void *)(v25 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v26) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v25 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_251EDEF68(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ActionService();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v24 - v8;
  MEMORY[0x270FA5388](v7);
  int64_t v11 = (char *)&v24 - v10;
  sub_251EE19AC(&qword_269BA55E0, (void (*)(uint64_t))type metadata accessor for ActionService);
  uint64_t result = sub_251F35E60();
  int64_t v13 = 0;
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v24 = a1 + 64;
  uint64_t v25 = result;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v18) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v18) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v24 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v18) {
          goto LABEL_23;
        }
        unint64_t v22 = *(void *)(v24 + 8 * v13);
        if (!v22)
        {
          int64_t v13 = v21 + 3;
          if (v21 + 3 >= v18) {
            goto LABEL_23;
          }
          unint64_t v22 = *(void *)(v24 + 8 * v13);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v17 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_5:
    sub_251EE19F4(*(void *)(a1 + 56) + *(void *)(v3 + 72) * v20, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ActionService);
    sub_251EE1944((uint64_t)v11, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ActionService);
    sub_251A678B0((uint64_t)v9, (uint64_t)v6);
    uint64_t result = sub_251EE1A5C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ActionService);
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v18)
  {
LABEL_23:
    swift_release();
    return v25;
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v18) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_251EDF240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
  sub_251EE1804((unint64_t *)&qword_269B9D158, (unint64_t *)&qword_26B21F170);
  v20[1] = (id)sub_251F35E60();
  sub_251EE0268(a1, a2, a3, (uint64_t)v21);
  uint64_t v6 = v21[0];
  uint64_t v7 = v21[3];
  unint64_t v9 = v21[4];
  uint64_t v8 = (uint64_t (*)(id *))v21[5];
  uint64_t v18 = v21[1];
  int64_t v10 = (unint64_t)(v21[2] + 64) >> 6;
  while (v6 < 0)
  {
    if (!sub_251F36340()) {
      goto LABEL_31;
    }
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v14 = v19;
    swift_unknownObjectRelease();
    uint64_t v13 = v7;
    uint64_t v11 = v9;
    if (!v19) {
      goto LABEL_31;
    }
LABEL_29:
    v20[0] = v14;
    if (v8(v20))
    {
      sub_251A62CF4(v20, v14);
    }
    else
    {
    }
    uint64_t v7 = v13;
    unint64_t v9 = v11;
  }
  if (v9)
  {
    uint64_t v11 = (v9 - 1) & v9;
    unint64_t v12 = __clz(__rbit64(v9)) | (v7 << 6);
    uint64_t v13 = v7;
LABEL_28:
    id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v12);
    if (!v14) {
      goto LABEL_31;
    }
    goto LABEL_29;
  }
  int64_t v15 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v15 >= v10) {
      goto LABEL_31;
    }
    unint64_t v16 = *(void *)(v18 + 8 * v15);
    uint64_t v13 = v7 + 1;
    if (!v16)
    {
      uint64_t v13 = v7 + 2;
      if (v7 + 2 >= v10) {
        goto LABEL_31;
      }
      unint64_t v16 = *(void *)(v18 + 8 * v13);
      if (!v16)
      {
        uint64_t v13 = v7 + 3;
        if (v7 + 3 >= v10) {
          goto LABEL_31;
        }
        unint64_t v16 = *(void *)(v18 + 8 * v13);
        if (!v16)
        {
          uint64_t v13 = v7 + 4;
          if (v7 + 4 >= v10) {
            goto LABEL_31;
          }
          unint64_t v16 = *(void *)(v18 + 8 * v13);
          if (!v16)
          {
            uint64_t v13 = v7 + 5;
            if (v7 + 5 >= v10) {
              goto LABEL_31;
            }
            unint64_t v16 = *(void *)(v18 + 8 * v13);
            if (!v16)
            {
              uint64_t v13 = v7 + 6;
              if (v7 + 6 >= v10) {
                goto LABEL_31;
              }
              unint64_t v16 = *(void *)(v18 + 8 * v13);
              if (!v16)
              {
                uint64_t v17 = v7 + 7;
                while (v10 != v17)
                {
                  unint64_t v16 = *(void *)(v18 + 8 * v17++);
                  if (v16)
                  {
                    uint64_t v13 = v17 - 1;
                    goto LABEL_27;
                  }
                }
LABEL_31:
                sub_251A1E630();
                swift_release();
                return;
              }
            }
          }
        }
      }
    }
LABEL_27:
    uint64_t v11 = (v16 - 1) & v16;
    unint64_t v12 = __clz(__rbit64(v16)) + (v13 << 6);
    goto LABEL_28;
  }
  __break(1u);
}

uint64_t sub_251EDF4E4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticService();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  unint64_t v9 = (char *)&v24 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v24 - v10;
  sub_251EE19AC(&qword_269BA3888, (void (*)(uint64_t))type metadata accessor for StaticService);
  uint64_t result = sub_251F35E60();
  int64_t v13 = 0;
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v24 = a1 + 64;
  uint64_t v25 = result;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v18) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v18) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v24 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v18) {
          goto LABEL_23;
        }
        unint64_t v22 = *(void *)(v24 + 8 * v13);
        if (!v22)
        {
          int64_t v13 = v21 + 3;
          if (v21 + 3 >= v18) {
            goto LABEL_23;
          }
          unint64_t v22 = *(void *)(v24 + 8 * v13);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v17 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_5:
    sub_251EE19F4(*(void *)(a1 + 56) + *(void *)(v3 + 72) * v20, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251EE1944((uint64_t)v11, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251A641C8((uint64_t)v9, (uint64_t)v6);
    uint64_t result = sub_251EE1A5C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v18)
  {
LABEL_23:
    swift_release();
    return v25;
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v18) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_251EDF7BC(uint64_t a1)
{
  sub_251AF7578();
  uint64_t result = sub_251F35E60();
  int64_t v3 = 0;
  uint64_t v15 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    uint64_t result = sub_251A66ED4(&v14, *(unsigned __int8 *)(*(void *)(a1 + 48) + v10));
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

char sub_251EDF934(uint64_t a1)
{
  uint64_t v2 = a1 + 56;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 56);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  LOBYTE(v7) = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v24 = (char *)MEMORY[0x263F8EE78];
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_22;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v11 >= v6) {
      goto LABEL_36;
    }
    unint64_t v12 = *(void *)(v2 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v6) {
        goto LABEL_36;
      }
      unint64_t v12 = *(void *)(v2 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v6) {
          goto LABEL_36;
        }
        unint64_t v12 = *(void *)(v2 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v6) {
            goto LABEL_36;
          }
          unint64_t v12 = *(void *)(v2 + 8 * v8);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_22:
    LOBYTE(v7) = ClusterKind.init(rawValue:)(*(_DWORD *)(*(void *)(a1 + 48) + 4 * v10));
    uint64_t v14 = v21[0];
    if (v21[0] != 28)
    {
      unint64_t v22 = &type metadata for HomeKitFeatures;
      unint64_t v23 = sub_251A4DA94();
      v21[0] = 4;
      char v15 = sub_251F34F60();
      LOBYTE(v7) = __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
      if (v15) {
        goto LABEL_31;
      }
      if (qword_269B9C4C0 != -1) {
        LOBYTE(v7) = swift_once();
      }
      if ((byte_269BA38B2 & 1) != 0
        || (int v16 = dword_251F5E424[v14], dword_251F5E424[byte_27025FAF8] == v16)
        || dword_251F5E424[byte_27025FAF9] == v16
        || dword_251F5E424[byte_27025FAFA] == v16
        || dword_251F5E424[byte_27025FAFB] == v16)
      {
LABEL_31:
        LOBYTE(v7) = swift_isUniquelyReferenced_nonNull_native();
        if ((v7 & 1) == 0)
        {
          unint64_t v7 = sub_251F0F630(0, *((void *)v24 + 2) + 1, 1, v24);
          uint64_t v24 = v7;
        }
        unint64_t v18 = *((void *)v24 + 2);
        unint64_t v17 = *((void *)v24 + 3);
        if (v18 >= v17 >> 1)
        {
          unint64_t v7 = sub_251F0F630((char *)(v17 > 1), v18 + 1, 1, v24);
          uint64_t v24 = v7;
        }
        unint64_t v19 = v24;
        *((void *)v24 + 2) = v18 + 1;
        v19[v18 + 32] = v14;
      }
    }
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v6)
  {
LABEL_36:
    swift_release();
    LOBYTE(v7) = (_BYTE)v24;
    return (char)v7;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v13);
  if (v12)
  {
    int64_t v8 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_36;
    }
    unint64_t v12 = *(void *)(v2 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_21;
    }
  }
LABEL_38:
  __break(1u);
  return (char)v7;
}

void sub_251EDFC00(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_251F362B0();
    sub_251A1A568(0, (unint64_t *)&unk_269BA04B0);
    sub_251EE1804(&qword_269BA5620, (unint64_t *)&unk_269BA04B0);
    sub_251F35E90();
    uint64_t v1 = v34;
    uint64_t v33 = v35;
    uint64_t v2 = v36;
    uint64_t v3 = v37;
    unint64_t v4 = v38;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v33 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
  }
  uint64_t v30 = v2;
  unint64_t v31 = (char *)MEMORY[0x263F8EE78];
  int64_t v32 = (unint64_t)(v2 + 64) >> 6;
  while (1)
  {
    uint64_t v8 = v3;
    if ((v1 & 0x8000000000000000) == 0) {
      break;
    }
    if (!sub_251F36340()) {
      goto LABEL_42;
    }
    sub_251A1A568(0, (unint64_t *)&unk_269BA04B0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v11 = v39;
    swift_unknownObjectRelease();
    if (!v11) {
      goto LABEL_42;
    }
LABEL_32:
    id v15 = objc_msgSend(v11, sel_deviceType, v30);
    Swift::UInt32 v16 = objc_msgSend(v15, sel_unsignedIntValue);

    MatterDeviceType.init(rawValue:)(v16);
    char v17 = (char)v39;
    if (v39 == 27)
    {
      if (qword_26B21ECD0 != -1) {
        swift_once();
      }
      uint64_t v18 = sub_251F350A0();
      __swift_project_value_buffer(v18, (uint64_t)qword_26B21ECB8);
      id v19 = v11;
      unint64_t v20 = sub_251F35080();
      os_log_type_t v21 = sub_251F35FB0();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = swift_slowAlloc();
        uint64_t v23 = swift_slowAlloc();
        uint64_t v39 = (void *)v23;
        *(_DWORD *)uint64_t v22 = 136315138;
        sub_251A1A568(0, (unint64_t *)&unk_269BA04B0);
        id v24 = v19;
        uint64_t v25 = sub_251F35790();
        *(void *)(v22 + 4) = sub_251A00E84(v25, v26, (uint64_t *)&v39);

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2519F3000, v20, v21, "(MatterDescriptorCluster): deviceType is nil. Are we missing a definition? (%s)", (uint8_t *)v22, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v23, -1, -1);
        MEMORY[0x2533AC760](v22, -1, -1);
      }
      else
      {
      }
    }
    else
    {

      uint64_t v27 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v27 = sub_251F0F63C(0, *((void *)v31 + 2) + 1, 1, v31);
      }
      unint64_t v29 = *((void *)v27 + 2);
      unint64_t v28 = *((void *)v27 + 3);
      if (v29 >= v28 >> 1) {
        uint64_t v27 = sub_251F0F63C((char *)(v28 > 1), v29 + 1, 1, v27);
      }
      *((void *)v27 + 2) = v29 + 1;
      unint64_t v31 = v27;
      v27[v29 + 32] = v17;
    }
  }
  if (v4)
  {
    unint64_t v9 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v10 = v9 | (v3 << 6);
LABEL_31:
    id v11 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v11) {
      goto LABEL_42;
    }
    goto LABEL_32;
  }
  int64_t v12 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v12 >= v32) {
      goto LABEL_42;
    }
    unint64_t v13 = *(void *)(v33 + 8 * v12);
    ++v3;
    if (!v13)
    {
      uint64_t v3 = v8 + 2;
      if (v8 + 2 >= v32) {
        goto LABEL_42;
      }
      unint64_t v13 = *(void *)(v33 + 8 * v3);
      if (!v13)
      {
        uint64_t v3 = v8 + 3;
        if (v8 + 3 >= v32) {
          goto LABEL_42;
        }
        unint64_t v13 = *(void *)(v33 + 8 * v3);
        if (!v13)
        {
          uint64_t v3 = v8 + 4;
          if (v8 + 4 >= v32) {
            goto LABEL_42;
          }
          unint64_t v13 = *(void *)(v33 + 8 * v3);
          if (!v13)
          {
            uint64_t v3 = v8 + 5;
            if (v8 + 5 >= v32) {
              goto LABEL_42;
            }
            unint64_t v13 = *(void *)(v33 + 8 * v3);
            if (!v13)
            {
              uint64_t v14 = v8 + 6;
              while (v32 != v14)
              {
                unint64_t v13 = *(void *)(v33 + 8 * v14++);
                if (v13)
                {
                  uint64_t v3 = v14 - 1;
                  goto LABEL_30;
                }
              }
LABEL_42:
              sub_251A1E630();
              return;
            }
          }
        }
      }
    }
LABEL_30:
    unint64_t v4 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v3 << 6);
    goto LABEL_31;
  }
  __break(1u);
}

uint64_t MatterDescriptorCluster.deviceTypes.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (*(uint64_t (**)(void))(a2 + 8))();
  sub_251EDFC00(v2);
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_251EE14AC(v4, (void (*)(void))sub_251B72548, (uint64_t)&type metadata for MatterDeviceType, (void (*)(char *, void))sub_251A62F8C);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t MatterDevice.rootDescriptorCluster.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, uint64_t, uint64_t))(a2 + 24))(0, a1, a2);
}

uint64_t MatterDevice.supportsDiagnosticsLogs.getter(uint64_t a1, uint64_t a2)
{
  uint64_t result = (*(uint64_t (**)(void, uint64_t))(a2 + 24))(0, a1);
  if (result)
  {
    uint64_t v4 = v3;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v6 = MatterDescriptorCluster.availableClusterKinds.getter(ObjectType, v4);
    swift_unknownObjectRelease();
    BOOL v7 = sub_251DB3B04(4, v6);
    swift_bridgeObjectRelease();
    return v7;
  }
  return result;
}

uint64_t sub_251EE0268@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if ((result & 0xC000000000000001) != 0)
  {
    sub_251F362B0();
    sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
    sub_251EE1804((unint64_t *)&qword_269B9D158, (unint64_t *)&qword_26B21F170);
    sub_251F35E90();
    uint64_t result = v14;
    uint64_t v7 = v15;
    long long v8 = v16;
    uint64_t v9 = v17;
  }
  else
  {
    uint64_t v10 = -1;
    uint64_t v11 = -1 << *(unsigned char *)(result + 32);
    uint64_t v12 = ~v11;
    uint64_t v7 = result + 56;
    uint64_t v13 = -v11;
    if (v13 < 64) {
      uint64_t v10 = ~(-1 << v13);
    }
    uint64_t v9 = v10 & *(void *)(result + 56);
    long long v8 = (unint64_t)v12;
  }
  *(void *)a4 = result;
  *(void *)(a4 + 8) = v7;
  *(_OWORD *)(a4 + 16) = v8;
  *(void *)(a4 + 32) = v9;
  *(void *)(a4 + 40) = a2;
  *(void *)(a4 + 48) = a3;
  return result;
}

uint64_t sub_251EE036C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticZone();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  long long v8 = (char *)&v13 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_251EE19AC(&qword_26B21ED58, (void (*)(uint64_t))type metadata accessor for StaticZone);
  uint64_t result = sub_251F35E60();
  uint64_t v14 = result;
  if (v9)
  {
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v12 = *(void *)(v3 + 72);
    do
    {
      sub_251EE19F4(v11, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticZone);
      sub_251A62508((uint64_t)v8, (uint64_t)v6);
      sub_251EE1A5C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticZone);
      v11 += v12;
      --v9;
    }
    while (v9);
    return v14;
  }
  return result;
}

uint64_t sub_251EE04F8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = sub_251F34DA0();
  sub_251AD2788();
  uint64_t v23 = sub_251F35E60();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(void *)(v3 - 8);
  v17[1] = v3 - 8;
  if (v2)
  {
    uint64_t v7 = v17[0];
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v18 = *(void *)(v17[0] + 72);
    uint64_t v22 = (void (**)(char *, void, uint64_t, uint64_t))(v17[0] + 56);
    uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v17[0] + 16);
    uint64_t v20 = v17[0] + 16;
    os_log_type_t v21 = v9;
    id v19 = (uint64_t (**)(char *, uint64_t, uint64_t))(v17[0] + 48);
    v17[2] = v17[0] + 8;
    v17[3] = v17[0] + 32;
    while (1)
    {
      v21(v6, v8, v3);
      (*v22)(v6, 0, 1, v3);
      uint64_t v10 = (*v19)(v6, 1, v3);
      if (v10 == 1) {
        break;
      }
      uint64_t v11 = MEMORY[0x270FA5388](v10);
      uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
      MEMORY[0x270FA5388](v11);
      uint64_t v15 = (char *)v17 - v14;
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))((char *)v17 - v14, v6, v3);
      sub_251A637B8(v13, v15);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v3);
      v8 += v18;
      if (!--v2) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17[0] + 56))(v6, 1, 1, v3);
  }
  return v23;
}

uint64_t sub_251EE07A0(unint64_t a1)
{
  return sub_251EE12F8(a1, &qword_26B21EB28, 0x263F0E6F0, &qword_269BA5628, (void (*)(id *, uint64_t))sub_251A67B34);
}

uint64_t sub_251EE07D0(uint64_t a1)
{
  return sub_251EE14AC(a1, (void (*)(void))sub_251EE18F0, (uint64_t)&type metadata for SymptomError, (void (*)(char *, void))sub_251A66D88);
}

uint64_t sub_251EE0804(unint64_t a1)
{
  return sub_251EE12F8(a1, (unint64_t *)&qword_269BA04A0, 0x263F08A20, &qword_269BA5648, (void (*)(id *, uint64_t))sub_251A62F54);
}

uint64_t sub_251EE0834(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_251F35E60();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (unsigned int *)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_251A62D10(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_251EE08A8(uint64_t a1)
{
  return sub_251EE14AC(a1, (void (*)(void))sub_251A2C2DC, (uint64_t)&type metadata for ClusterKind, (void (*)(char *, void))sub_251A62E14);
}

uint64_t sub_251EE08DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_251F35E60();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (unsigned __int16 *)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_251A636B4(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_251EE0950(unint64_t a1)
{
  return sub_251EE12F8(a1, (unint64_t *)&unk_269BA04B0, 0x263F10DA0, &qword_269BA5620, (void (*)(id *, uint64_t))sub_251A62F70);
}

uint64_t sub_251EE0980(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_251E62C2C();
  uint64_t result = sub_251F35E60();
  uint64_t v10 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v5 = *(v4 - 3);
      uint64_t v6 = *(v4 - 2);
      uint64_t v7 = *(v4 - 1);
      uint64_t v8 = *v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_251A630CC((uint64_t)v9, v5, v6, v7, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 += 4;
      --v2;
    }
    while (v2);
    return v10;
  }
  return result;
}

uint64_t sub_251EE0A3C(uint64_t a1)
{
  return sub_251EE0B88(a1, (void (*)(void))sub_251EE189C, (uint64_t)&type metadata for StaticRVCClusterGroup.OperationalState, (void (*)(char *, void))sub_251A63514);
}

uint64_t sub_251EE0A70(uint64_t a1)
{
  return sub_251EE14AC(a1, (void (*)(void))sub_251EE1848, (uint64_t)&type metadata for StaticRVCClusterGroup.State, (void (*)(char *, void))sub_251A636A0);
}

uint64_t sub_251EE0AA4(unint64_t a1)
{
  return sub_251EE12F8(a1, (unint64_t *)&qword_26B21F2D0, 0x263F0E390, &qword_269BA5618, (void (*)(id *, uint64_t))sub_251A63AE0);
}

uint64_t sub_251EE0AD4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_251EE1ABC();
  uint64_t result = sub_251F35E60();
  uint64_t v9 = result;
  if (v2)
  {
    uint64_t v4 = (unsigned __int8 *)(a1 + 42);
    do
    {
      uint64_t v5 = *(void *)(v4 - 10);
      int v6 = *((unsigned __int16 *)v4 - 1);
      int v7 = *v4;
      v4 += 16;
      sub_251A63AFC((uint64_t)v8, v5, v6 | (v7 << 16));
      --v2;
    }
    while (v2);
    return v9;
  }
  return result;
}

uint64_t sub_251EE0B54(uint64_t a1)
{
  return sub_251EE0B88(a1, (void (*)(void))sub_251C94828, (uint64_t)&type metadata for ModeClusterSemanticTag, (void (*)(char *, void))sub_251A6331C);
}

uint64_t sub_251EE0B88(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(char *, void))
{
  uint64_t v6 = *(void *)(a1 + 16);
  a2();
  uint64_t result = sub_251F35E60();
  uint64_t v11 = result;
  if (v6)
  {
    uint64_t v8 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v9 = *v8++;
      a4(&v10, v9);
      --v6;
    }
    while (v6);
    return v11;
  }
  return result;
}

uint64_t sub_251EE0C08(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Event();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_251EE19AC(&qword_269B9D188, (void (*)(uint64_t))type metadata accessor for Event);
  uint64_t result = sub_251F35E60();
  uint64_t v14 = result;
  if (v9)
  {
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v12 = *(void *)(v3 + 72);
    do
    {
      sub_251EE19F4(v11, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Event);
      sub_251A63F0C((uint64_t)v8, (uint64_t)v6);
      sub_251EE1A5C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Event);
      v11 += v12;
      --v9;
    }
    while (v9);
    return v14;
  }
  return result;
}

uint64_t sub_251EE0D94(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Action();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_251EE19AC(&qword_269B9D190, (void (*)(uint64_t))type metadata accessor for Action);
  uint64_t result = sub_251F35E60();
  uint64_t v14 = result;
  if (v9)
  {
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v12 = *(void *)(v3 + 72);
    do
    {
      sub_251EE19F4(v11, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Action);
      sub_251A63C88((uint64_t)v8, (uint64_t)v6);
      sub_251EE1A5C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Action);
      v11 += v12;
      --v9;
    }
    while (v9);
    return v14;
  }
  return result;
}

uint64_t sub_251EE0F20(unint64_t a1)
{
  return sub_251EE12F8(a1, (unint64_t *)&qword_26B21EB40, 0x263F0E0B0, (unint64_t *)&qword_26B21EB48, (void (*)(id *, uint64_t))sub_251A64190);
}

uint64_t sub_251EE0F50(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_251EE19AC(&qword_269BA55E8, (void (*)(uint64_t))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
  uint64_t result = sub_251F35E60();
  uint64_t v14 = result;
  if (v9)
  {
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v12 = *(void *)(v3 + 72);
    do
    {
      sub_251EE19F4(v11, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      sub_251A646D0((uint64_t)v8, (uint64_t)v6);
      sub_251EE1A5C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      v11 += v12;
      --v9;
    }
    while (v9);
    return v14;
  }
  return result;
}

uint64_t sub_251EE10DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticService();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_251EE19AC(&qword_269BA3888, (void (*)(uint64_t))type metadata accessor for StaticService);
  uint64_t result = sub_251F35E60();
  uint64_t v14 = result;
  if (v9)
  {
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v12 = *(void *)(v3 + 72);
    do
    {
      sub_251EE19F4(v11, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
      sub_251A82120((uint64_t)v8, (uint64_t)v6);
      sub_251EE1A5C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
      v11 += v12;
      --v9;
    }
    while (v9);
    return v14;
  }
  return result;
}

uint64_t sub_251EE1268(unint64_t a1)
{
  return sub_251EE12F8(a1, (unint64_t *)&qword_26B21F170, 0x263F0E248, (unint64_t *)&qword_269B9D158, (void (*)(id *, uint64_t))sub_251A62CF4);
}

uint64_t sub_251EE1298(unint64_t a1)
{
  return sub_251EE12F8(a1, (unint64_t *)&qword_269B9D238, 0x263F0E230, &qword_269B9FF18, (void (*)(id *, uint64_t))sub_251A67660);
}

uint64_t sub_251EE12C8(unint64_t a1)
{
  return sub_251EE12F8(a1, (unint64_t *)&qword_26B21EAF8, 0x263F0DF00, &qword_269BA55F8, (void (*)(id *, uint64_t))sub_251A6767C);
}

uint64_t sub_251EE12F8(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, void (*a5)(id *, uint64_t))
{
  unint64_t v9 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_251F366C0();
    swift_bridgeObjectRelease();
  }
  sub_251A1A568(0, a2);
  sub_251EE1804(a4, a2);
  uint64_t result = sub_251F35E60();
  uint64_t v17 = result;
  if (v9)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_251F366C0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v11) {
      return v17;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v11) {
      return v17;
    }
  }
  if (v11 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        uint64_t v13 = MEMORY[0x2533AB3A0](i, a1);
        a5(&v16, v13);
      }
    }
    else
    {
      uint64_t v14 = (void **)(a1 + 32);
      do
      {
        uint64_t v15 = *v14++;
        a5(&v16, (uint64_t)v15);

        --v11;
      }
      while (v11);
    }
    return v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_251EE1478(uint64_t a1)
{
  return sub_251EE14AC(a1, (void (*)(void))sub_251EE17B0, (uint64_t)&type metadata for ServiceKind, (void (*)(char *, void))sub_251A67698);
}

uint64_t sub_251EE14AC(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(char *, void))
{
  uint64_t v6 = *(void *)(a1 + 16);
  a2();
  uint64_t result = sub_251F35E60();
  uint64_t v11 = result;
  if (v6)
  {
    uint64_t v8 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v9 = *v8++;
      a4(&v10, v9);
      --v6;
    }
    while (v6);
    return v11;
  }
  return result;
}

uint64_t sub_251EE152C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticService();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_251EE19AC(&qword_269BA3888, (void (*)(uint64_t))type metadata accessor for StaticService);
  uint64_t result = sub_251F35E60();
  uint64_t v14 = result;
  if (v9)
  {
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v12 = *(void *)(v3 + 72);
    do
    {
      sub_251EE19F4(v11, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
      sub_251A641C8((uint64_t)v8, (uint64_t)v6);
      sub_251EE1A5C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
      v11 += v12;
      --v9;
    }
    while (v9);
    return v14;
  }
  return result;
}

uint64_t sub_251EE16B8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_251F35E60();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_251A67E1C(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_251EE1750(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D148);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_251EE17B0()
{
  unint64_t result = qword_269BA55F0;
  if (!qword_269BA55F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA55F0);
  }
  return result;
}

uint64_t sub_251EE1804(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_251A1A568(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251EE1848()
{
  unint64_t result = qword_269BA5608;
  if (!qword_269BA5608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5608);
  }
  return result;
}

unint64_t sub_251EE189C()
{
  unint64_t result = qword_269BA5610;
  if (!qword_269BA5610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5610);
  }
  return result;
}

unint64_t sub_251EE18F0()
{
  unint64_t result = qword_26B21F060;
  if (!qword_26B21F060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21F060);
  }
  return result;
}

uint64_t sub_251EE1944(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251EE19AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251EE19F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251EE1A5C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_251EE1ABC()
{
  unint64_t result = qword_269BA5650;
  if (!qword_269BA5650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5650);
  }
  return result;
}

uint64_t StaticBasicInfoCluster.init(path:device:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  void (*v9)(long long *__return_ptr, long long *, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  char v34;
  int v35;
  char v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  long long v42;
  long long v43;
  long long v44;
  long long v45;
  long long v46;
  long long v47;
  long long v48;
  int v49;
  id v50;
  void *v51;
  unsigned __int8 v52;
  int v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  long long v68;
  unsigned int v69;
  uint64_t v70;
  int v71;
  long long v72;
  __int16 v73;
  long long v74;
  uint64_t v75;
  __int16 v76;
  uint64_t v77;
  uint64_t v78;
  _OWORD *v79;
  uint64_t v80;
  uint64_t v81;
  long long v82;
  long long v83;
  long long v84;
  long long v85;
  long long v86;
  long long v87;
  unsigned char v88[32];
  long long v89;
  long long v90;
  long long v91;
  long long v92;
  long long v93;
  long long v94;
  unsigned char v95[28];
  void v96[4];
  long long v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __int16 v103;
  uint64_t v104;
  uint64_t v105;
  long long v106;
  __int16 v107;
  long long v108;
  int v109;
  long long v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  __int16 v125;
  char v126;
  char v127;

  uint64_t v5 = *a1;
  __int16 v6 = *((_WORD *)a1 + 4);
  char v7 = *((unsigned char *)a1 + 10);
  uint64_t ObjectType = swift_getObjectType();
  *(void *)&uint64_t v82 = v5;
  WORD4(v82) = v6;
  BYTE10(v82) = v7;
  uint64_t v9 = *(void (**)(long long *__return_ptr, long long *, uint64_t, uint64_t, uint64_t))(a2 + 48);
  v9(&v97, &v82, 1, ObjectType, a2);
  if (!v99)
  {
    swift_unknownObjectRelease();
    sub_251A9090C((uint64_t)&v97);
LABEL_33:
    sub_251C6E7B0(&v97);
    return sub_251EE5CC8((uint64_t)&v97, a3);
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_unknownObjectRelease();
    goto LABEL_33;
  }
  char v10 = *((void *)&v82 + 1);
  unint64_t v81 = v82;
  *(void *)&uint64_t v82 = v5;
  WORD4(v82) = v6;
  BYTE10(v82) = v7;
  swift_bridgeObjectRetain();
  v9(&v97, &v82, 2, ObjectType, a2);
  if (!v99) {
    goto LABEL_30;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_31:
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    goto LABEL_32;
  }
  uint64_t v80 = v82;
  *(void *)&uint64_t v82 = v5;
  WORD4(v82) = v6;
  BYTE10(v82) = v7;
  v9(&v97, &v82, 3, ObjectType, a2);
  if (!v99)
  {
LABEL_30:
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_251A9090C((uint64_t)&v97);
    goto LABEL_32;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_31;
  }
  uint64_t v79 = (_OWORD *)a3;
  uint64_t v11 = *((void *)&v82 + 1);
  uint64_t v77 = v82;
  *(void *)&uint64_t v82 = v5;
  WORD4(v82) = v6;
  BYTE10(v82) = v7;
  swift_bridgeObjectRetain();
  v9(&v97, &v82, 4, ObjectType, a2);
  if (!v99)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_251A9090C((uint64_t)&v97);
    uint64_t v18 = 0;
    id v19 = 0;
    uint64_t v20 = 0;
LABEL_38:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a3 = (uint64_t)v79;
    if (v18)
    {
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0) {
        goto LABEL_40;
      }
    }
    else if (!v19)
    {
LABEL_40:
      if (!v20) {
        goto LABEL_33;
      }
      goto LABEL_32;
    }
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0) {
      goto LABEL_33;
    }
LABEL_32:
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  uint64_t v78 = v11;
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_34;
  }
  uint64_t v12 = v82;
  *(void *)&uint64_t v82 = v5;
  WORD4(v82) = v6;
  BYTE10(v82) = v7;
  v9(&v97, &v82, 5, ObjectType, a2);
  if (!v99)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_251A9090C((uint64_t)&v97);
    goto LABEL_37;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_34:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
LABEL_37:
    uint64_t v18 = 0;
    id v19 = 0;
    uint64_t v20 = 0;
    goto LABEL_38;
  }
  uint64_t v76 = v12;
  uint64_t v13 = *((void *)&v82 + 1);
  unint64_t v75 = v82;
  *(void *)&uint64_t v82 = v5;
  WORD4(v82) = v6;
  BYTE10(v82) = v7;
  swift_bridgeObjectRetain();
  v9(&v97, &v82, 6, ObjectType, a2);
  if (!v99)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_251A9090C((uint64_t)&v97);
    id v19 = 0;
    uint64_t v20 = 0;
    uint64_t v18 = 1;
    goto LABEL_38;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    id v19 = 0;
    uint64_t v20 = 0;
    uint64_t v18 = 1;
    goto LABEL_38;
  }
  id v74 = v82;
  *(void *)&uint64_t v82 = v5;
  WORD4(v82) = v6;
  BYTE10(v82) = v7;
  swift_bridgeObjectRetain();
  v9(&v97, &v82, 7, ObjectType, a2);
  if (!v99) {
    goto LABEL_47;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_48:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    goto LABEL_49;
  }
  unint64_t v73 = v82;
  *(void *)&uint64_t v82 = v5;
  WORD4(v82) = v6;
  BYTE10(v82) = v7;
  v9(&v97, &v82, 8, ObjectType, a2);
  if (!v99)
  {
LABEL_47:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_251A9090C((uint64_t)&v97);
LABEL_49:
    uint64_t v20 = 0;
    uint64_t v18 = 1;
    id v19 = 1;
    goto LABEL_38;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_48;
  }
  unint64_t v72 = v82;
  *(void *)&uint64_t v82 = v5;
  WORD4(v82) = v6;
  BYTE10(v82) = v7;
  swift_bridgeObjectRetain();
  v9(&v97, &v82, 9, ObjectType, a2);
  if (!v99) {
    goto LABEL_50;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_51:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    goto LABEL_52;
  }
  unint64_t v71 = v82;
  *(void *)&uint64_t v82 = v5;
  WORD4(v82) = v6;
  BYTE10(v82) = v7;
  v9(&v97, &v82, 10, ObjectType, a2);
  if (!v99)
  {
LABEL_50:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_251A9090C((uint64_t)&v97);
LABEL_52:
    uint64_t v18 = 1;
    id v19 = 1;
    uint64_t v20 = 1;
    goto LABEL_38;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_51;
  }
  unint64_t v68 = v82;
  *(void *)&uint64_t v82 = v5;
  WORD4(v82) = v6;
  BYTE10(v82) = v7;
  swift_bridgeObjectRetain();
  v9(&v97, &v82, 11, ObjectType, a2);
  if (v99)
  {
    uint64_t v14 = swift_dynamicCast();
    uint64_t v15 = v82;
    if (!v14) {
      uint64_t v15 = 0;
    }
    unint64_t v67 = v15;
    if (v14) {
      id v16 = *((void *)&v82 + 1);
    }
    else {
      id v16 = 0;
    }
    uint64_t v70 = v16;
  }
  else
  {
    sub_251A9090C((uint64_t)&v97);
    unint64_t v67 = 0;
    uint64_t v70 = 0;
  }
  *(void *)&uint64_t v82 = v5;
  WORD4(v82) = v6;
  BYTE10(v82) = v7;
  swift_bridgeObjectRetain();
  v9(&v97, &v82, 12, ObjectType, a2);
  if (v99)
  {
    os_log_type_t v21 = swift_dynamicCast();
    if (v21) {
      uint64_t v22 = v82;
    }
    else {
      uint64_t v22 = 0;
    }
    if (v21) {
      uint64_t v23 = *((void *)&v82 + 1);
    }
    else {
      uint64_t v23 = 0;
    }
    uint64_t v65 = v23;
    uint64_t v66 = v22;
  }
  else
  {
    sub_251A9090C((uint64_t)&v97);
    uint64_t v65 = 0;
    uint64_t v66 = 0;
  }
  *(void *)&uint64_t v82 = v5;
  WORD4(v82) = v6;
  BYTE10(v82) = v7;
  swift_bridgeObjectRetain();
  v9(&v97, &v82, 13, ObjectType, a2);
  if (v99)
  {
    id v24 = swift_dynamicCast();
    if (v24) {
      uint64_t v25 = v82;
    }
    else {
      uint64_t v25 = 0;
    }
    if (v24) {
      unint64_t v26 = *((void *)&v82 + 1);
    }
    else {
      unint64_t v26 = 0;
    }
    uint64_t v63 = v26;
    unint64_t v64 = v25;
  }
  else
  {
    sub_251A9090C((uint64_t)&v97);
    uint64_t v63 = 0;
    unint64_t v64 = 0;
  }
  *(void *)&uint64_t v82 = v5;
  WORD4(v82) = v6;
  BYTE10(v82) = v7;
  swift_bridgeObjectRetain();
  v9(&v97, &v82, 14, ObjectType, a2);
  if (v99)
  {
    uint64_t v27 = swift_dynamicCast();
    if (v27) {
      unint64_t v28 = v82;
    }
    else {
      unint64_t v28 = 0;
    }
    if (v27) {
      unint64_t v29 = *((void *)&v82 + 1);
    }
    else {
      unint64_t v29 = 0;
    }
    int64_t v61 = v29;
    int64_t v62 = v28;
  }
  else
  {
    sub_251A9090C((uint64_t)&v97);
    int64_t v61 = 0;
    int64_t v62 = 0;
  }
  *(void *)&uint64_t v82 = v5;
  WORD4(v82) = v6;
  BYTE10(v82) = v7;
  swift_bridgeObjectRetain();
  v9(&v97, &v82, 15, ObjectType, a2);
  if (v99)
  {
    uint64_t v30 = swift_dynamicCast();
    if (v30) {
      unint64_t v31 = v82;
    }
    else {
      unint64_t v31 = 0;
    }
    if (v30) {
      int64_t v32 = *((void *)&v82 + 1);
    }
    else {
      int64_t v32 = 0;
    }
    uint64_t v59 = v32;
    uint64_t v60 = v31;
  }
  else
  {
    sub_251A9090C((uint64_t)&v97);
    uint64_t v59 = 0;
    uint64_t v60 = 0;
  }
  *(void *)&uint64_t v82 = v5;
  WORD4(v82) = v6;
  BYTE10(v82) = v7;
  swift_bridgeObjectRetain();
  v9(&v97, &v82, 16, ObjectType, a2);
  if (v99)
  {
    uint64_t v33 = swift_dynamicCast();
    uint64_t v34 = v82;
    if (!v33) {
      uint64_t v34 = 2;
    }
  }
  else
  {
    sub_251A9090C((uint64_t)&v97);
    uint64_t v34 = 2;
  }
  id v58 = v34;
  *(void *)&uint64_t v82 = v5;
  WORD4(v82) = v6;
  BYTE10(v82) = v7;
  v9(&v97, &v82, 17, ObjectType, a2);
  if (v99)
  {
    uint64_t v35 = swift_dynamicCast();
    uint64_t v36 = v82;
    if (!v35) {
      uint64_t v36 = 2;
    }
  }
  else
  {
    sub_251A9090C((uint64_t)&v97);
    uint64_t v36 = 2;
  }
  int64_t v57 = v36;
  *(void *)&uint64_t v82 = v5;
  WORD4(v82) = v6;
  BYTE10(v82) = v7;
  v9(&v97, &v82, 18, ObjectType, a2);
  if (v99)
  {
    uint64_t v37 = swift_dynamicCast();
    if (v37) {
      unint64_t v38 = v82;
    }
    else {
      unint64_t v38 = 0;
    }
    if (v37) {
      uint64_t v39 = *((void *)&v82 + 1);
    }
    else {
      uint64_t v39 = 0;
    }
    unint64_t v55 = v39;
    uint64_t v56 = v38;
  }
  else
  {
    sub_251A9090C((uint64_t)&v97);
    unint64_t v55 = 0;
    uint64_t v56 = 0;
  }
  *(void *)&id v97 = v5;
  WORD4(v97) = v6;
  BYTE10(v97) = v7;
  swift_bridgeObjectRetain();
  v9((long long *)v96, &v97, 20, ObjectType, a2);
  sub_251AA82A4((uint64_t)v96, (uint64_t)&v97);
  if (v99)
  {
    sub_251EE5E0C();
    if (swift_dynamicCast())
    {
      uint64_t v40 = (void *)v82;
      uint64_t v41 = objc_msgSend((id)v82, sel_finish);
      LOWORD(v97) = 256;
      sub_251F36C60();

      if (BYTE1(v97) != 1)
      {
        unint64_t v49 = v97;
        unint64_t v50 = objc_msgSend(v40, sel_primaryColor);
        if (v50)
        {
          uint64_t v51 = v50;
          LOWORD(v97) = 256;
          sub_251F36C60();
          swift_unknownObjectRelease();

          unint64_t v52 = v97;
          if (BYTE1(v97))
          {
            unint64_t v52 = 0;
            uint64_t v53 = 0x10000;
          }
          else
          {
            uint64_t v53 = 0;
          }
        }
        else
        {
          swift_unknownObjectRelease();

          unint64_t v52 = 0;
          uint64_t v53 = 0x10000;
        }
        uint64_t v54 = 0;
        uint64_t v69 = v49 & 0xFFFF00FF | (v52 << 8) | v53;
        goto LABEL_114;
      }
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    swift_unknownObjectRelease();
    sub_251A9090C((uint64_t)&v97);
  }
  uint64_t v69 = 0;
  uint64_t v54 = 1;
LABEL_114:
  sub_251A9090C((uint64_t)v96);
  *(void *)&uint64_t v82 = v5;
  WORD4(v82) = v6;
  BYTE10(v82) = v7;
  *(void *)&uint64_t v83 = v81;
  *((void *)&v83 + 1) = v10;
  *(void *)&uint64_t v84 = v80;
  *((void *)&v84 + 1) = v77;
  *(void *)&uint64_t v85 = v78;
  WORD4(v85) = v76;
  *(void *)&unint64_t v86 = v75;
  *((void *)&v86 + 1) = v13;
  unint64_t v87 = v74;
  *(_WORD *)unint64_t v88 = v73;
  *(_OWORD *)&v88[8] = v72;
  *(_DWORD *)&v88[24] = v71;
  unint64_t v89 = v68;
  *(void *)&os_log_type_t v90 = v67;
  *((void *)&v90 + 1) = v70;
  *(void *)&uint64_t v91 = v66;
  *((void *)&v91 + 1) = v65;
  *(void *)&uint64_t v92 = v64;
  *((void *)&v92 + 1) = v63;
  *(void *)&id v93 = v62;
  *((void *)&v93 + 1) = v61;
  *(void *)&uint64_t v94 = v60;
  *((void *)&v94 + 1) = v59;
  v95[0] = v58;
  v95[1] = v57;
  *(void *)&v95[8] = v56;
  *(void *)&v95[16] = v55;
  v95[26] = BYTE2(v69);
  *(_WORD *)&v95[24] = v69;
  v95[27] = v54;
  sub_251BE6894((uint64_t)&v82);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v42 = v94;
  v79[12] = v93;
  v79[13] = v42;
  v79[14] = *(_OWORD *)v95;
  *(_OWORD *)((char *)v79 + 236) = *(_OWORD *)&v95[12];
  long long v43 = v90;
  v79[8] = v89;
  v79[9] = v43;
  uint64_t v44 = v92;
  v79[10] = v91;
  v79[11] = v44;
  unint64_t v45 = v87;
  v79[4] = v86;
  v79[5] = v45;
  uint64_t v46 = *(_OWORD *)&v88[16];
  v79[6] = *(_OWORD *)v88;
  v79[7] = v46;
  uint64_t v47 = v83;
  *uint64_t v79 = v82;
  v79[1] = v47;
  char v48 = v85;
  v79[2] = v84;
  v79[3] = v48;
  nullsub_1(v79);
  *(void *)&id v97 = v5;
  WORD4(v97) = v6;
  BYTE10(v97) = v7;
  id v98 = v81;
  uint64_t v99 = v10;
  uint64_t v100 = v80;
  uint64_t v101 = v77;
  uint64_t v102 = v78;
  id v103 = v76;
  uint64_t v104 = v75;
  v105 = v13;
  uint64_t v106 = v74;
  uint64_t v107 = v73;
  uint64_t v108 = v72;
  unsigned __int8 v109 = v71;
  id v110 = v68;
  int v111 = v67;
  BOOL v112 = v70;
  uint64_t v113 = v66;
  uint64_t v114 = v65;
  uint64_t v115 = v64;
  uint64_t v116 = v63;
  uint64_t v117 = v62;
  uint64_t v118 = v61;
  uint64_t v119 = v60;
  uint64_t v120 = v59;
  uint64_t v121 = v58;
  v122 = v57;
  os_log_type_t v123 = v56;
  uint64_t v124 = v55;
  uint64_t v126 = BYTE2(v69);
  id v125 = v69;
  uint64_t v127 = v54;
  return sub_251EE5D30((uint64_t)&v97);
}

uint64_t sub_251EE2ACC()
{
  return sub_251F35A60();
}

uint64_t sub_251EE2B5C()
{
  return sub_251F35A00();
}

uint64_t sub_251EE2BDC()
{
  return sub_251F35A60();
}

uint64_t sub_251EE2C6C()
{
  return sub_251F35A00();
}

uint64_t StaticBasicInfoCluster.ProductAppearance.finish.getter()
{
  return *v0;
}

uint64_t StaticBasicInfoCluster.ProductAppearance.primaryColor.getter()
{
  return *(unsigned __int8 *)(v0 + 1) | (*(unsigned __int8 *)(v0 + 2) << 8);
}

uint64_t static StaticBasicInfoCluster.ProductAppearance.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  char v2 = a2[2];
  if (a1[2])
  {
    if ((a2[2] & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (a1[1] != a2[1]) {
      char v2 = 1;
    }
    if (v2) {
      return 0;
    }
  }
  return 1;
}

uint64_t StaticBasicInfoCluster.ProductAppearance.hash(into:)()
{
  char v1 = *(unsigned char *)(v0 + 2);
  sub_251F36CC0();
  if ((v1 & 1) == 0) {
    sub_251F36CC0();
  }
  return sub_251F36CC0();
}

uint64_t sub_251EE2DA8()
{
  if (*v0) {
    return 0x437972616D697270;
  }
  else {
    return 0x6873696E6966;
  }
}

uint64_t sub_251EE2DE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251EE6E40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251EE2E10(uint64_t a1)
{
  unint64_t v2 = sub_251EE5E4C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251EE2E4C(uint64_t a1)
{
  unint64_t v2 = sub_251EE5E4C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticBasicInfoCluster.ProductAppearance.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5660);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  int v9 = v1[1];
  int v12 = v1[2];
  int v13 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251EE5E4C();
  sub_251F36DA0();
  char v18 = v8;
  char v17 = 0;
  type metadata accessor for MTRBasicInformationProductFinish(0);
  sub_251EE77A4(&qword_269BA5670, type metadata accessor for MTRBasicInformationProductFinish);
  sub_251F36A20();
  if (!v2)
  {
    char v15 = v13;
    char v16 = v12;
    char v14 = 1;
    type metadata accessor for MTRBasicInformationColor(0);
    sub_251EE77A4(&qword_269BA5678, type metadata accessor for MTRBasicInformationColor);
    sub_251F36970();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t StaticBasicInfoCluster.ProductAppearance.hashValue.getter()
{
  char v1 = *(unsigned char *)(v0 + 2);
  sub_251F36CA0();
  sub_251F36CC0();
  if ((v1 & 1) == 0) {
    sub_251F36CC0();
  }
  sub_251F36CC0();
  return sub_251F36D00();
}

uint64_t StaticBasicInfoCluster.ProductAppearance.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5680);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251EE5E4C();
  sub_251F36D90();
  if (!v2)
  {
    type metadata accessor for MTRBasicInformationProductFinish(0);
    char v17 = 0;
    sub_251EE77A4(&qword_269BA5688, type metadata accessor for MTRBasicInformationProductFinish);
    sub_251F36880();
    char v9 = v18;
    type metadata accessor for MTRBasicInformationColor(0);
    char v14 = 1;
    sub_251EE77A4(&qword_269BA5690, type metadata accessor for MTRBasicInformationColor);
    sub_251F367D0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v10 = v15;
    char v11 = v16;
    *a2 = v9;
    a2[1] = v10;
    a2[2] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_251EE3364(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2)
  {
    char v2 = a2[2];
    if (a1[2])
    {
      if (a2[2]) {
        return 1;
      }
    }
    else
    {
      if (a1[1] != a2[1]) {
        char v2 = 1;
      }
      if ((v2 & 1) == 0) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_251EE33A8()
{
  char v1 = *(unsigned char *)(v0 + 2);
  sub_251F36CA0();
  sub_251F36CC0();
  if ((v1 & 1) == 0) {
    sub_251F36CC0();
  }
  sub_251F36CC0();
  return sub_251F36D00();
}

uint64_t sub_251EE3424()
{
  char v1 = *(unsigned char *)(v0 + 2);
  sub_251F36CC0();
  if ((v1 & 1) == 0) {
    sub_251F36CC0();
  }
  return sub_251F36CC0();
}

uint64_t sub_251EE347C()
{
  char v1 = *(unsigned char *)(v0 + 2);
  sub_251F36CA0();
  sub_251F36CC0();
  if ((v1 & 1) == 0) {
    sub_251F36CC0();
  }
  sub_251F36CC0();
  return sub_251F36D00();
}

uint64_t sub_251EE34F4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return StaticBasicInfoCluster.ProductAppearance.init(from:)(a1, a2);
}

uint64_t sub_251EE350C(void *a1)
{
  return StaticBasicInfoCluster.ProductAppearance.encode(to:)(a1);
}

void StaticBasicInfoCluster.id.getter(uint64_t a1@<X8>)
{
  __int16 v2 = *(_WORD *)(v1 + 8);
  char v3 = *(unsigned char *)(v1 + 10);
  *(void *)a1 = *(void *)v1;
  *(_WORD *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 10) = v3;
}

uint64_t StaticBasicInfoCluster.vendorName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticBasicInfoCluster.vendorID.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t StaticBasicInfoCluster.productName.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticBasicInfoCluster.productID.getter()
{
  return *(unsigned __int16 *)(v0 + 56);
}

uint64_t StaticBasicInfoCluster.nodeLabel.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticBasicInfoCluster.location.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticBasicInfoCluster.hardwareVersion.getter()
{
  return *(unsigned __int16 *)(v0 + 96);
}

uint64_t StaticBasicInfoCluster.hardwareVersionString.getter()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticBasicInfoCluster.softwareVersion.getter()
{
  return *(unsigned int *)(v0 + 120);
}

uint64_t StaticBasicInfoCluster.softwareVersionString.getter()
{
  uint64_t v1 = *(void *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticBasicInfoCluster.manufacturingDate.getter()
{
  uint64_t v1 = *(void *)(v0 + 144);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticBasicInfoCluster.partNumber.getter()
{
  uint64_t v1 = *(void *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticBasicInfoCluster.productURL.getter()
{
  uint64_t v1 = *(void *)(v0 + 176);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticBasicInfoCluster.productLabel.getter()
{
  uint64_t v1 = *(void *)(v0 + 192);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticBasicInfoCluster.serialNumber.getter()
{
  uint64_t v1 = *(void *)(v0 + 208);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticBasicInfoCluster.localConfigDisabled.getter()
{
  return *(unsigned __int8 *)(v0 + 224);
}

uint64_t StaticBasicInfoCluster.reachable.getter()
{
  return *(unsigned __int8 *)(v0 + 225);
}

uint64_t StaticBasicInfoCluster.uniqueID.getter()
{
  uint64_t v1 = *(void *)(v0 + 232);
  swift_bridgeObjectRetain();
  return v1;
}

void StaticBasicInfoCluster.productAppearance.getter(uint64_t a1@<X8>)
{
  __int16 v2 = *(_WORD *)(v1 + 248);
  char v3 = *(unsigned char *)(v1 + 251);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(v1 + 250);
  *(_WORD *)a1 = v2;
  *(unsigned char *)(a1 + 3) = v3;
}

uint64_t StaticBasicInfoCluster.init(id:vendorName:vendorID:productName:productID:nodeLabel:location:hardwareVersion:hardwareVersionString:softwareVersion:softwareVersionString:manufacturingDate:partNumber:productURL:productLabel:serialNumber:localConfigDisabled:reachable:uniqueID:productAppearance:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, __int16 a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, uint64_t a11, __int16 a12, uint64_t a13, uint64_t a14, int a15, long long a16, long long a17, long long a18, long long a19, long long a20,uint64_t a21,uint64_t a22,__int16 a23,uint64_t a24,uint64_t a25,__int16 *a26)
{
  uint64_t v26 = *a1;
  __int16 v27 = *((_WORD *)a1 + 4);
  uint64_t result = *((unsigned __int8 *)a1 + 10);
  __int16 v29 = *a26;
  char v30 = *((unsigned char *)a26 + 2);
  char v31 = *((unsigned char *)a26 + 3);
  *(void *)a9 = v26;
  *(_WORD *)(a9 + 8) = v27;
  *(unsigned char *)(a9 + 10) = result;
  *(void *)(a9 + 16) = a2;
  *(void *)(a9 + 24) = a3;
  *(void *)(a9 + 32) = a4;
  *(void *)(a9 + 40) = a5;
  *(void *)(a9 + 48) = a6;
  *(_WORD *)(a9 + 56) = a7;
  *(void *)(a9 + 64) = a8;
  *(_OWORD *)(a9 + 72) = a10;
  *(void *)(a9 + 88) = a11;
  *(_WORD *)(a9 + 96) = a12;
  *(void *)(a9 + 104) = a13;
  *(void *)(a9 + 112) = a14;
  *(_DWORD *)(a9 + 120) = a15;
  *(_OWORD *)(a9 + 128) = a16;
  *(_OWORD *)(a9 + 144) = a17;
  *(_OWORD *)(a9 + 160) = a18;
  *(_OWORD *)(a9 + 176) = a19;
  *(_OWORD *)(a9 + 192) = a20;
  *(void *)(a9 + 208) = a21;
  *(void *)(a9 + 216) = a22;
  *(_WORD *)(a9 + 224) = a23;
  *(void *)(a9 + 232) = a24;
  *(void *)(a9 + 240) = a25;
  *(unsigned char *)(a9 + 250) = v30;
  *(_WORD *)(a9 + 248) = v29;
  *(unsigned char *)(a9 + 251) = v31;
  return result;
}

uint64_t StaticBasicInfoCluster.hash(into:)()
{
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 168);
  uint64_t v6 = *(void *)(v0 + 184);
  uint64_t v7 = *(void *)(v0 + 200);
  uint64_t v8 = *(void *)(v0 + 216);
  int v9 = *(unsigned __int8 *)(v0 + 224);
  int v10 = *(unsigned __int8 *)(v0 + 225);
  uint64_t v11 = *(void *)(v0 + 240);
  int v2 = *(unsigned __int16 *)(v0 + 248);
  int v3 = *(unsigned __int8 *)(v0 + 250);
  char v12 = *(unsigned char *)(v0 + 251);
  sub_251F36CF0();
  sub_251F36CD0();
  sub_251F36CE0();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  sub_251F36CB0();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  sub_251F36CD0();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  sub_251F36CD0();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  sub_251F36CE0();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  sub_251F36CC0();
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  if (v5)
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_5;
    }
  }
  else
  {
    sub_251F36CC0();
    if (v6)
    {
LABEL_5:
      sub_251F36CC0();
      swift_bridgeObjectRetain();
      sub_251F357B0();
      swift_bridgeObjectRelease();
      if (v7) {
        goto LABEL_6;
      }
LABEL_10:
      sub_251F36CC0();
      if (v8) {
        goto LABEL_7;
      }
      goto LABEL_11;
    }
  }
  sub_251F36CC0();
  if (!v7) {
    goto LABEL_10;
  }
LABEL_6:
  sub_251F36CC0();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  if (v8)
  {
LABEL_7:
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
LABEL_11:
  sub_251F36CC0();
LABEL_12:
  if (v9 != 2) {
    sub_251F36CC0();
  }
  sub_251F36CC0();
  if (v10 != 2) {
    sub_251F36CC0();
  }
  sub_251F36CC0();
  if (v11)
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    if (v12) {
      return sub_251F36CC0();
    }
  }
  else
  {
    sub_251F36CC0();
    if (v12) {
      return sub_251F36CC0();
    }
  }
  sub_251F36CC0();
  sub_251F36CC0();
  if (((v2 | (v3 << 16)) & 0x10000) == 0) {
    sub_251F36CC0();
  }
  return sub_251F36CC0();
}

uint64_t sub_251EE3CA8(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x614E726F646E6576;
      break;
    case 2:
      uint64_t result = 0x4449726F646E6576;
      break;
    case 3:
      uint64_t result = 0x4E746375646F7270;
      break;
    case 4:
      uint64_t result = 0x49746375646F7270;
      break;
    case 5:
      uint64_t result = 0x6562614C65646F6ELL;
      break;
    case 6:
      uint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 7:
      unsigned int v3 = 1685217640;
      goto LABEL_11;
    case 8:
      uint64_t result = 0xD000000000000015;
      break;
    case 9:
      unsigned int v3 = 1952870259;
LABEL_11:
      uint64_t result = v3 | 0x6572617700000000;
      break;
    case 10:
      uint64_t result = 0xD000000000000015;
      break;
    case 11:
    case 19:
      uint64_t result = 0xD000000000000011;
      break;
    case 12:
      uint64_t result = 0x626D754E74726170;
      break;
    case 13:
      uint64_t result = 0x55746375646F7270;
      break;
    case 14:
      uint64_t result = 0x4C746375646F7270;
      break;
    case 15:
      uint64_t result = 0x754E6C6169726573;
      break;
    case 16:
      uint64_t result = 0xD000000000000013;
      break;
    case 17:
      uint64_t result = 0x6C62616863616572;
      break;
    case 18:
      uint64_t result = 0x4449657571696E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251EE3F34()
{
  return sub_251EE3CA8(*v0);
}

uint64_t sub_251EE3F3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251EE6F44(a1, a2);
  *a3 = result;
  return result;
}

void sub_251EE3F64(unsigned char *a1@<X8>)
{
  *a1 = 20;
}

uint64_t sub_251EE3F70(uint64_t a1)
{
  unint64_t v2 = sub_251EE5EA0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251EE3FAC(uint64_t a1)
{
  unint64_t v2 = sub_251EE5EA0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticBasicInfoCluster.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5698);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  __int16 v8 = *((_WORD *)v1 + 4);
  char v9 = *((unsigned char *)v1 + 10);
  uint64_t v10 = v1[2];
  uint64_t v53 = v1[3];
  uint64_t v54 = v10;
  uint64_t v11 = v1[4];
  uint64_t v51 = v1[5];
  uint64_t v52 = v11;
  uint64_t v12 = v1[6];
  int v59 = *((unsigned __int16 *)v1 + 28);
  uint64_t v13 = v1[8];
  uint64_t v49 = v1[9];
  uint64_t v50 = v12;
  uint64_t v46 = v1[10];
  uint64_t v47 = v1[11];
  uint64_t v48 = v13;
  int v45 = *((unsigned __int16 *)v1 + 48);
  uint64_t v14 = v1[14];
  uint64_t v43 = v1[13];
  uint64_t v44 = v14;
  int v42 = *((_DWORD *)v1 + 30);
  uint64_t v15 = v1[17];
  uint64_t v40 = v1[16];
  uint64_t v41 = v15;
  uint64_t v16 = v1[19];
  uint64_t v38 = v1[18];
  uint64_t v39 = v16;
  uint64_t v36 = v1[20];
  uint64_t v37 = v1[21];
  uint64_t v34 = v1[22];
  uint64_t v35 = v1[23];
  uint64_t v32 = v1[24];
  uint64_t v33 = v1[25];
  uint64_t v30 = v1[26];
  uint64_t v31 = v1[27];
  int v29 = *((unsigned __int8 *)v1 + 224);
  v23[1] = *((unsigned __int8 *)v1 + 225);
  uint64_t v24 = v1[29];
  uint64_t v25 = v1[30];
  int v26 = *((unsigned __int8 *)v1 + 250);
  int v27 = *((unsigned __int16 *)v1 + 124);
  int v28 = *((unsigned __int8 *)v1 + 251);
  uint64_t v17 = a1[3];
  char v18 = a1;
  uint64_t v20 = v19;
  __swift_project_boxed_opaque_existential_1(v18, v17);
  sub_251EE5EA0();
  sub_251F36DA0();
  uint64_t v56 = v7;
  __int16 v57 = v8;
  char v58 = v9;
  char v60 = 0;
  sub_251A900F8();
  uint64_t v21 = v55;
  sub_251F36A20();
  if (v21) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v20);
  }
  uint64_t v55 = v4;
  LOBYTE(v56) = 1;
  sub_251F369D0();
  LOBYTE(v56) = 2;
  sub_251F36A00();
  LOBYTE(v56) = 3;
  sub_251F369D0();
  LOBYTE(v56) = 4;
  sub_251F36A50();
  LOBYTE(v56) = 5;
  sub_251F369D0();
  LOBYTE(v56) = 6;
  sub_251F369D0();
  LOBYTE(v56) = 7;
  sub_251F36A50();
  LOBYTE(v56) = 8;
  sub_251F369D0();
  LOBYTE(v56) = 9;
  sub_251F36A60();
  LOBYTE(v56) = 10;
  sub_251F369D0();
  LOBYTE(v56) = 11;
  sub_251F36910();
  LOBYTE(v56) = 12;
  sub_251F36910();
  LOBYTE(v56) = 13;
  sub_251F36910();
  LOBYTE(v56) = 14;
  sub_251F36910();
  LOBYTE(v56) = 15;
  sub_251F36910();
  LOBYTE(v56) = 16;
  sub_251F36920();
  LOBYTE(v56) = 17;
  sub_251F36920();
  LOBYTE(v56) = 18;
  sub_251F36910();
  BYTE2(v56) = (v27 | (v26 << 16)) >> 16;
  LOWORD(v56) = v27;
  BYTE3(v56) = v28;
  char v60 = 19;
  sub_251EE5EF4();
  sub_251F36970();
  return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v6, v20);
}

uint64_t StaticBasicInfoCluster.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StaticBasicInfoCluster.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA56B0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  __int16 v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  v155 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_251EE5EA0();
  sub_251F36D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v155);
  }
  uint64_t v78 = a2;
  LOBYTE(v86) = 0;
  sub_251A9014C();
  sub_251F36880();
  uint64_t v10 = v101;
  int v11 = v102;
  int v12 = v103;
  LOBYTE(v101) = 1;
  uint64_t v75 = sub_251F36830();
  int v76 = v12;
  int v77 = v11;
  LOBYTE(v101) = 2;
  uint64_t v14 = v13;
  swift_bridgeObjectRetain();
  uint64_t v74 = sub_251F36860();
  uint64_t v15 = v14;
  LOBYTE(v101) = 3;
  uint64_t v16 = sub_251F36830();
  uint64_t v73 = v10;
  LOBYTE(v101) = 4;
  uint64_t v18 = v17;
  swift_bridgeObjectRetain();
  int v19 = sub_251F368B0();
  uint64_t v85 = v18;
  int v72 = v19;
  LOBYTE(v101) = 5;
  uint64_t v71 = sub_251F36830();
  LOBYTE(v101) = 6;
  uint64_t v21 = v20;
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_251F36830();
  uint64_t v84 = v21;
  uint64_t v70 = v22;
  LOBYTE(v101) = 7;
  uint64_t v24 = v23;
  swift_bridgeObjectRetain();
  int v25 = sub_251F368B0();
  uint64_t v83 = v24;
  int v69 = v25;
  LOBYTE(v101) = 8;
  uint64_t v26 = sub_251F36830();
  uint64_t v67 = v16;
  uint64_t v68 = v26;
  LOBYTE(v101) = 9;
  uint64_t v82 = v27;
  swift_bridgeObjectRetain();
  LODWORD(v16) = sub_251F368C0();
  LOBYTE(v101) = 10;
  *(void *)&long long v66 = sub_251F36830();
  *((void *)&v66 + 1) = v28;
  LOBYTE(v101) = 11;
  swift_bridgeObjectRetain();
  *(void *)&long long v65 = sub_251F36790();
  *((void *)&v65 + 1) = v29;
  LOBYTE(v101) = 12;
  swift_bridgeObjectRetain();
  uint64_t v64 = sub_251F36790();
  uint64_t v81 = v30;
  LOBYTE(v101) = 13;
  swift_bridgeObjectRetain();
  uint64_t v63 = sub_251F36790();
  uint64_t v80 = v31;
  LOBYTE(v101) = 14;
  swift_bridgeObjectRetain();
  uint64_t v62 = sub_251F36790();
  uint64_t v79 = v32;
  LOBYTE(v101) = 15;
  swift_bridgeObjectRetain();
  uint64_t v61 = sub_251F36790();
  uint64_t v34 = v33;
  LOBYTE(v101) = 16;
  swift_bridgeObjectRetain();
  int v60 = sub_251F367A0();
  LOBYTE(v101) = 17;
  int v59 = sub_251F367A0();
  LOBYTE(v101) = 18;
  uint64_t v57 = sub_251F36790();
  uint64_t v58 = v35;
  char v144 = 19;
  sub_251EE5F48();
  swift_bridgeObjectRetain();
  sub_251F367D0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v146 = HIBYTE(v145);
  int v54 = BYTE2(v145);
  int v55 = (unsigned __int16)v145;
  *(void *)&long long v86 = v73;
  WORD4(v86) = v77;
  BYTE10(v86) = v76;
  *(void *)&long long v87 = v75;
  *((void *)&v87 + 1) = v15;
  uint64_t v56 = v15;
  *(void *)&long long v88 = v74;
  *((void *)&v88 + 1) = v67;
  *(void *)&long long v89 = v85;
  WORD4(v89) = v72;
  *(void *)&long long v90 = v71;
  *((void *)&v90 + 1) = v84;
  uint64_t v36 = v82;
  *(void *)&long long v91 = v70;
  *((void *)&v91 + 1) = v83;
  LOWORD(v92) = v69;
  *((void *)&v92 + 1) = v68;
  *(void *)&long long v93 = v82;
  int v53 = v16;
  DWORD2(v93) = v16;
  uint64_t v37 = *((void *)&v66 + 1);
  long long v94 = v66;
  long long v95 = v65;
  uint64_t v39 = v80;
  uint64_t v38 = v81;
  *(void *)&long long v96 = v64;
  *((void *)&v96 + 1) = v81;
  *(void *)&long long v97 = v63;
  *((void *)&v97 + 1) = v80;
  uint64_t v40 = v79;
  *(void *)&long long v98 = v62;
  *((void *)&v98 + 1) = v79;
  *(void *)&long long v99 = v61;
  *((void *)&v99 + 1) = v34;
  uint64_t v52 = v34;
  v100[0] = v60;
  v100[1] = v59;
  uint64_t v41 = v58;
  *(void *)&v100[8] = v57;
  *(void *)&v100[16] = v58;
  *(_DWORD *)&v100[24] = v145;
  sub_251BE6894((uint64_t)&v86);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v42 = v52;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v43 = v99;
  uint64_t v44 = v78;
  v78[12] = v98;
  v44[13] = v43;
  v44[14] = *(_OWORD *)v100;
  *(_OWORD *)((char *)v44 + 236) = *(_OWORD *)&v100[12];
  long long v45 = v95;
  v44[8] = v94;
  v44[9] = v45;
  long long v46 = v97;
  v44[10] = v96;
  v44[11] = v46;
  long long v47 = v91;
  v44[4] = v90;
  v44[5] = v47;
  long long v48 = v93;
  v44[6] = v92;
  v44[7] = v48;
  long long v49 = v87;
  *uint64_t v44 = v86;
  v44[1] = v49;
  long long v50 = v89;
  v44[2] = v88;
  void v44[3] = v50;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v155);
  uint64_t v101 = v73;
  unsigned __int16 v102 = v77;
  unsigned __int8 v103 = v76;
  uint64_t v106 = v75;
  uint64_t v107 = v56;
  uint64_t v108 = v74;
  uint64_t v109 = v67;
  int v104 = v153;
  char v105 = v154;
  uint64_t v110 = v85;
  __int16 v111 = v72;
  int v112 = v151;
  __int16 v113 = v152;
  uint64_t v114 = v71;
  uint64_t v115 = v84;
  uint64_t v116 = v70;
  uint64_t v117 = v83;
  __int16 v118 = v69;
  int v119 = v149;
  __int16 v120 = v150;
  uint64_t v121 = v68;
  uint64_t v122 = v36;
  int v123 = v53;
  uint64_t v124 = v66;
  uint64_t v125 = v37;
  long long v126 = v65;
  uint64_t v127 = v64;
  uint64_t v128 = v38;
  uint64_t v129 = v63;
  uint64_t v130 = v39;
  uint64_t v131 = v62;
  uint64_t v132 = v40;
  uint64_t v133 = v61;
  uint64_t v134 = v42;
  char v135 = v60;
  char v136 = v59;
  int v137 = v147;
  __int16 v138 = v148;
  uint64_t v139 = v57;
  uint64_t v140 = v41;
  char v142 = v54;
  __int16 v141 = v55;
  char v143 = v146;
  return sub_251EE5D30((uint64_t)&v101);
}

uint64_t sub_251EE5520()
{
  return sub_251F36D00();
}

uint64_t sub_251EE5564()
{
  return sub_251F36D00();
}

uint64_t sub_251EE55A0@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return StaticBasicInfoCluster.init(from:)(a1, a2);
}

uint64_t sub_251EE55B8(void *a1)
{
  return StaticBasicInfoCluster.encode(to:)(a1);
}

uint64_t _s13HomeDataModel22StaticBasicInfoClusterV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t result = 0;
  if (*(void *)a1 != *(void *)a2 || *(unsigned __int16 *)(a1 + 8) != *(unsigned __int16 *)(a2 + 8)) {
    return result;
  }
  if (dword_251F5E9B4[*(char *)(a1 + 10)] != dword_251F5E9B4[*(char *)(a2 + 10)]) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  int v6 = *(unsigned __int16 *)(a1 + 56);
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 72);
  uint64_t v92 = *(void *)(a1 + 80);
  uint64_t v91 = *(void *)(a1 + 88);
  int v90 = *(unsigned __int16 *)(a1 + 96);
  uint64_t v88 = *(void *)(a1 + 104);
  uint64_t v87 = *(void *)(a1 + 112);
  int v84 = *(_DWORD *)(a1 + 120);
  uint64_t v82 = *(void *)(a1 + 128);
  uint64_t v80 = *(void *)(a1 + 136);
  uint64_t v74 = *(void *)(a1 + 144);
  uint64_t v78 = *(void *)(a1 + 152);
  uint64_t v70 = *(void *)(a1 + 160);
  uint64_t v76 = *(void *)(a1 + 168);
  uint64_t v66 = *(void *)(a1 + 176);
  uint64_t v72 = *(void *)(a1 + 184);
  uint64_t v62 = *(void *)(a1 + 192);
  uint64_t v68 = *(void *)(a1 + 200);
  uint64_t v59 = *(void *)(a1 + 208);
  uint64_t v64 = *(void *)(a1 + 216);
  int v57 = *(unsigned __int8 *)(a1 + 224);
  int v56 = *(unsigned __int8 *)(a1 + 225);
  uint64_t v50 = *(void *)(a1 + 232);
  uint64_t v54 = *(void *)(a1 + 240);
  unsigned int v48 = *(unsigned __int16 *)(a1 + 248);
  char v45 = *(unsigned char *)(a1 + 250);
  char v51 = *(unsigned char *)(a1 + 251);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  int v12 = *(unsigned __int16 *)(a2 + 56);
  uint64_t v13 = *(void *)(a2 + 64);
  uint64_t v14 = *(void *)(a2 + 72);
  uint64_t v16 = *(void *)(a2 + 80);
  uint64_t v15 = *(void *)(a2 + 88);
  int v89 = *(unsigned __int16 *)(a2 + 96);
  uint64_t v86 = *(void *)(a2 + 104);
  uint64_t v85 = *(void *)(a2 + 112);
  int v83 = *(_DWORD *)(a2 + 120);
  uint64_t v81 = *(void *)(a2 + 128);
  uint64_t v79 = *(void *)(a2 + 136);
  uint64_t v73 = *(void *)(a2 + 144);
  uint64_t v77 = *(void *)(a2 + 152);
  uint64_t v69 = *(void *)(a2 + 160);
  uint64_t v75 = *(void *)(a2 + 168);
  uint64_t v65 = *(void *)(a2 + 176);
  uint64_t v71 = *(void *)(a2 + 184);
  uint64_t v61 = *(void *)(a2 + 192);
  uint64_t v67 = *(void *)(a2 + 200);
  uint64_t v58 = *(void *)(a2 + 208);
  uint64_t v63 = *(void *)(a2 + 216);
  int v60 = *(unsigned __int8 *)(a2 + 224);
  int v55 = *(unsigned __int8 *)(a2 + 225);
  uint64_t v49 = *(void *)(a2 + 232);
  uint64_t v53 = *(void *)(a2 + 240);
  int v47 = *(unsigned __int8 *)(a2 + 250);
  int v46 = *(unsigned __int16 *)(a2 + 248);
  unsigned int v52 = *(unsigned __int8 *)(a2 + 251);
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24))
  {
    if (*(void *)(a1 + 32) != v10) {
      return 0;
    }
  }
  else
  {
    uint64_t v41 = *(void *)(a2 + 48);
    uint64_t v42 = *(void *)(a2 + 40);
    int v43 = *(unsigned __int16 *)(a2 + 56);
    uint64_t v17 = *(void *)(a1 + 32);
    uint64_t v44 = *(void *)(a2 + 72);
    uint64_t v18 = *(void *)(a2 + 64);
    uint64_t v19 = *(void *)(a1 + 40);
    uint64_t v20 = *(void *)(a1 + 48);
    uint64_t v21 = *(void *)(a2 + 88);
    uint64_t v22 = *(void *)(a2 + 80);
    uint64_t v23 = *(void *)(a1 + 72);
    uint64_t v24 = *(void *)(a1 + 64);
    char v25 = sub_251F36B10();
    uint64_t result = 0;
    if ((v25 & 1) == 0) {
      return result;
    }
    BOOL v26 = v17 == v10;
    uint64_t v7 = v24;
    uint64_t v8 = v23;
    uint64_t v16 = v22;
    uint64_t v15 = v21;
    uint64_t v5 = v20;
    uint64_t v4 = v19;
    uint64_t v13 = v18;
    uint64_t v14 = v44;
    int v12 = v43;
    uint64_t v11 = v41;
    uint64_t v9 = v42;
    if (!v26) {
      return result;
    }
  }
  if (v4 == v9 && v5 == v11)
  {
    if (v6 != v12) {
      return 0;
    }
  }
  else
  {
    uint64_t v27 = v7;
    char v28 = sub_251F36B10();
    uint64_t result = 0;
    if ((v28 & 1) == 0) {
      return result;
    }
    uint64_t v7 = v27;
    if (v6 != v12) {
      return result;
    }
  }
  if (v7 == v13 && v8 == v14 || (v29 = sub_251F36B10(), uint64_t result = 0, (v29 & 1) != 0))
  {
    if (v92 == v16 && v91 == v15)
    {
      if (v90 != v89) {
        return 0;
      }
    }
    else
    {
      char v30 = sub_251F36B10();
      uint64_t result = 0;
      if ((v30 & 1) == 0 || v90 != v89) {
        return result;
      }
    }
    if (v88 == v86 && v87 == v85)
    {
      if (v84 != v83) {
        return 0;
      }
    }
    else
    {
      char v31 = sub_251F36B10();
      uint64_t result = 0;
      if ((v31 & 1) == 0 || v84 != v83) {
        return result;
      }
    }
    if (v82 == v81 && v80 == v79 || (v32 = sub_251F36B10(), uint64_t result = 0, (v32 & 1) != 0))
    {
      if (v78)
      {
        if (!v77) {
          return 0;
        }
        if (v74 != v73 || v78 != v77)
        {
          char v33 = sub_251F36B10();
          uint64_t result = 0;
          if ((v33 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v77)
      {
        return 0;
      }
      if (v76)
      {
        if (!v75) {
          return 0;
        }
        if (v70 != v69 || v76 != v75)
        {
          char v34 = sub_251F36B10();
          uint64_t result = 0;
          if ((v34 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v75)
      {
        return 0;
      }
      if (v72)
      {
        if (!v71) {
          return 0;
        }
        if (v66 != v65 || v72 != v71)
        {
          char v35 = sub_251F36B10();
          uint64_t result = 0;
          if ((v35 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v71)
      {
        return 0;
      }
      if (v68)
      {
        if (!v67) {
          return 0;
        }
        if (v62 != v61 || v68 != v67)
        {
          char v36 = sub_251F36B10();
          uint64_t result = 0;
          if ((v36 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v67)
      {
        return 0;
      }
      if (v64)
      {
        if (!v63) {
          return 0;
        }
        if (v59 != v58 || v64 != v63)
        {
          char v37 = sub_251F36B10();
          uint64_t result = 0;
          if ((v37 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v63)
      {
        return 0;
      }
      if (v57 == 2)
      {
        if (v60 != 2) {
          return 0;
        }
      }
      else
      {
        uint64_t result = 0;
        if (v60 == 2 || ((((v57 & 1) == 0) ^ v60) & 1) == 0) {
          return result;
        }
      }
      if (v56 == 2)
      {
        if (v55 != 2) {
          return 0;
        }
      }
      else
      {
        uint64_t result = 0;
        if (v55 == 2 || ((((v56 & 1) == 0) ^ v55) & 1) == 0) {
          return result;
        }
      }
      if (v54)
      {
        if (!v53) {
          return 0;
        }
        if (v50 == v49 && v54 == v53)
        {
          if (v51) {
            return v52;
          }
        }
        else
        {
          int v39 = sub_251F36B10();
          if (v51 & 1 | ((v39 & 1) == 0)) {
            return v39 & v52;
          }
        }
      }
      else
      {
        char v38 = v51;
        if (v53)
        {
          char v38 = 1;
          uint64_t result = 0;
        }
        else
        {
          uint64_t result = v52;
        }
        if (v38) {
          return result;
        }
      }
      if (v52) {
        return 0;
      }
      int v40 = v46 | (v47 << 16);
      if (v48 != v46) {
        return 0;
      }
      if ((v45 & 1) == 0) {
        return (v40 & 0x10000) == 0 && v48 >> 8 == BYTE1(v46);
      }
      return (v40 & 0x10000) != 0;
    }
  }
  return result;
}

uint64_t sub_251EE5CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FE18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251EE5D30(uint64_t a1)
{
  return a1;
}

unint64_t sub_251EE5E0C()
{
  unint64_t result = qword_269BA5658;
  if (!qword_269BA5658)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269BA5658);
  }
  return result;
}

unint64_t sub_251EE5E4C()
{
  unint64_t result = qword_269BA5668;
  if (!qword_269BA5668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5668);
  }
  return result;
}

unint64_t sub_251EE5EA0()
{
  unint64_t result = qword_269BA56A0;
  if (!qword_269BA56A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA56A0);
  }
  return result;
}

unint64_t sub_251EE5EF4()
{
  unint64_t result = qword_269BA56A8;
  if (!qword_269BA56A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA56A8);
  }
  return result;
}

unint64_t sub_251EE5F48()
{
  unint64_t result = qword_269BA56B8;
  if (!qword_269BA56B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA56B8);
  }
  return result;
}

unint64_t sub_251EE5FA0()
{
  unint64_t result = qword_269BA56C0;
  if (!qword_269BA56C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA56C0);
  }
  return result;
}

unint64_t sub_251EE5FF8()
{
  unint64_t result = qword_269BA56C8;
  if (!qword_269BA56C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA56C8);
  }
  return result;
}

uint64_t destroy for StaticBasicInfoCluster()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StaticBasicInfoCluster(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 7) = *(_DWORD *)(a2 + 7);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  uint64_t v4 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v4;
  uint64_t v5 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v5;
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  uint64_t v6 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v6;
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  uint64_t v7 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v7;
  uint64_t v8 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v8;
  uint64_t v9 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v9;
  uint64_t v10 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v10;
  uint64_t v11 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v11;
  uint64_t v12 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v12;
  *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
  *(unsigned char *)(a1 + 225) = *(unsigned char *)(a2 + 225);
  uint64_t v13 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v13;
  *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StaticBasicInfoCluster(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
  *(unsigned char *)(a1 + 225) = *(unsigned char *)(a2 + 225);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
  return a1;
}

uint64_t assignWithTake for StaticBasicInfoCluster(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v6;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  uint64_t v7 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v7;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  uint64_t v8 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v13;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 224) = *(_WORD *)(a2 + 224);
  uint64_t v14 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v14;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticBasicInfoCluster(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 252)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticBasicInfoCluster(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 248) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 252) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 252) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticBasicInfoCluster()
{
  return &type metadata for StaticBasicInfoCluster;
}

uint64_t getEnumTagSinglePayload for StaticBasicInfoCluster.ProductAppearance(unsigned __int16 *a1, int a2)
{
  if (a2)
  {
    if ((a2 + 0x1FFFFFF) >> 24)
    {
      int v2 = *((unsigned __int8 *)a1 + 3);
      if (*((unsigned char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 0xFFFFFF;
      }
    }
    else
    {
      int v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 0xFFFFFF;
      }
    }
  }
  return 0;
}

uint64_t storeEnumTagSinglePayload for StaticBasicInfoCluster.ProductAppearance(uint64_t result, int a2, int a3)
{
  if ((a3 + 0x1FFFFFF) >> 24) {
    int v3 = 1;
  }
  else {
    int v3 = 2;
  }
  if (!a3) {
    int v3 = 0;
  }
  if (a2)
  {
    *(_WORD *)unint64_t result = a2 - 1;
    *(unsigned char *)(result + 2) = (a2 - 1) >> 16;
    if (v3)
    {
      unsigned int v4 = ((a2 - 1) >> 24) + 1;
      if (v3 == 2) {
        *(_WORD *)(result + 3) = v4;
      }
      else {
        *(unsigned char *)(result + 3) = v4;
      }
    }
  }
  else if (v3)
  {
    if (v3 == 2) {
      *(_WORD *)(result + 3) = 0;
    }
    else {
      *(unsigned char *)(result + 3) = 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticBasicInfoCluster.ProductAppearance()
{
  return &type metadata for StaticBasicInfoCluster.ProductAppearance;
}

uint64_t getEnumTagSinglePayload for StaticBasicInfoCluster.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xED) {
    goto LABEL_17;
  }
  if (a2 + 19 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 19) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 19;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x14;
  int v8 = v6 - 20;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StaticBasicInfoCluster.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 19 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 19) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xED) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEC)
  {
    unsigned int v6 = ((a2 - 237) >> 8) + 1;
    *unint64_t result = a2 + 19;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251EE6860);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 19;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticBasicInfoCluster.CodingKeys()
{
  return &type metadata for StaticBasicInfoCluster.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for StaticBasicInfoCluster.ProductAppearance.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251EE6964);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticBasicInfoCluster.ProductAppearance.CodingKeys()
{
  return &type metadata for StaticBasicInfoCluster.ProductAppearance.CodingKeys;
}

unint64_t sub_251EE69A0()
{
  unint64_t result = qword_269BA56D0;
  if (!qword_269BA56D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA56D0);
  }
  return result;
}

unint64_t sub_251EE69F8()
{
  unint64_t result = qword_269BA56D8;
  if (!qword_269BA56D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA56D8);
  }
  return result;
}

unint64_t sub_251EE6A50()
{
  unint64_t result = qword_269BA56E0;
  if (!qword_269BA56E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA56E0);
  }
  return result;
}

unint64_t sub_251EE6AA8()
{
  unint64_t result = qword_269BA56E8;
  if (!qword_269BA56E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA56E8);
  }
  return result;
}

unint64_t sub_251EE6B00()
{
  unint64_t result = qword_269BA56F0;
  if (!qword_269BA56F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA56F0);
  }
  return result;
}

unint64_t sub_251EE6B58()
{
  unint64_t result = qword_269BA56F8;
  if (!qword_269BA56F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA56F8);
  }
  return result;
}

uint64_t sub_251EE6BAC(int a1)
{
  uint64_t result = 0;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x614E726F646E6576;
      break;
    case 2:
      uint64_t result = 0x4449726F646E6576;
      break;
    case 3:
      uint64_t result = 0x4E746375646F7270;
      break;
    case 4:
      uint64_t result = 0x49746375646F7270;
      break;
    case 5:
      uint64_t result = 0x6562614C65646F6ELL;
      break;
    case 6:
      uint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 7:
      unsigned int v3 = 1685217640;
      goto LABEL_11;
    case 8:
      uint64_t result = 0xD000000000000015;
      break;
    case 9:
      unsigned int v3 = 1952870259;
LABEL_11:
      uint64_t result = v3 | 0x6572617700000000;
      break;
    case 10:
      uint64_t result = 0xD000000000000015;
      break;
    case 11:
    case 20:
      uint64_t result = 0xD000000000000011;
      break;
    case 12:
      uint64_t result = 0x626D754E74726170;
      break;
    case 13:
      uint64_t result = 0x55746375646F7270;
      break;
    case 14:
      uint64_t result = 0x4C746375646F7270;
      break;
    case 15:
      uint64_t result = 0x754E6C6169726573;
      break;
    case 16:
      uint64_t result = 0xD000000000000013;
      break;
    case 17:
      uint64_t result = 0x6C62616863616572;
      break;
    case 18:
      uint64_t result = 0x4449657571696E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251EE6E40(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6873696E6966 && a2 == 0xE600000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x437972616D697270 && a2 == 0xEC000000726F6C6FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_251EE6F44(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x614E726F646E6576 && a2 == 0xEA0000000000656DLL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4449726F646E6576 && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4E746375646F7270 && a2 == 0xEB00000000656D61 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x49746375646F7270 && a2 == 0xE900000000000044 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6562614C65646F6ELL && a2 == 0xE90000000000006CLL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6572617764726168 && a2 == 0xEF6E6F6973726556 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000251F73230 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6572617774666F73 && a2 == 0xEF6E6F6973726556 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000251F73250 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000251F73270 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x626D754E74726170 && a2 == 0xEA00000000007265 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x55746375646F7270 && a2 == 0xEA00000000004C52 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x4C746375646F7270 && a2 == 0xEC0000006C656261 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x754E6C6169726573 && a2 == 0xEC0000007265626DLL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000251F73290 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x6C62616863616572 && a2 == 0xE900000000000065 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x4449657571696E75 && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000251F732B0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 19;
    }
    else {
      return 20;
    }
  }
}

uint64_t sub_251EE77A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251EE77EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = type metadata accessor for IconTextValueStringDataHolder();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(v5 + 32);
  int v7 = *(unsigned __int8 *)(v6 + 24);
  if (v7 != 255) {
    sub_251A1B604(*(void *)v6, *(void *)(v6 + 8), *(void *)(v6 + 16), v7);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 20);
  type metadata accessor for TilesFilter();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if ((result - 1) <= 2)
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(off_26536EE08[(int)result - 1]);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    return v11(v8, v10);
  }
  return result;
}

uint64_t sub_251EE7938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_8Tm_0);
}

uint64_t sub_251EE7950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_9Tm_0);
}

uint64_t type metadata accessor for LeakAlarmStatusItem(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269BA5710);
}

uint64_t sub_251EE798C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = type metadata accessor for IconTextValueStringDataHolder();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(v5 + 32);
  int v7 = *(unsigned __int8 *)(v6 + 24);
  if (v7 != 255) {
    sub_251A1B604(*(void *)v6, *(void *)(v6 + 8), *(void *)(v6 + 16), v7);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 24);
  type metadata accessor for TilesFilter();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if ((result - 1) <= 2)
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(off_26536EE08[(int)result - 1]);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    return v11(v8, v10);
  }
  return result;
}

uint64_t sub_251EE7AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  int v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = v7[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = v7[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  void *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = v7[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (long long *)(a2 + v17);
  int v20 = *(unsigned __int8 *)(a2 + v17 + 24);
  if (*(unsigned __int8 *)(a1 + v17 + 24) == 255)
  {
    if (v20 == 255)
    {
      long long v32 = *v19;
      *(_OWORD *)(v18 + 9) = *(long long *)((char *)v19 + 9);
      *(_OWORD *)uint64_t v18 = v32;
    }
    else
    {
      uint64_t v28 = *(void *)v19;
      uint64_t v29 = *((void *)v19 + 1);
      uint64_t v30 = *((void *)v19 + 2);
      sub_251A1B4AC(v28, v29, v30, v20);
      *(void *)uint64_t v18 = v28;
      *(void *)(v18 + 8) = v29;
      *(void *)(v18 + 16) = v30;
      *(unsigned char *)(v18 + 24) = v20;
    }
  }
  else if (v20 == 255)
  {
    sub_251A1B620(v18);
    long long v31 = *(long long *)((char *)v19 + 9);
    *(_OWORD *)uint64_t v18 = *v19;
    *(_OWORD *)(v18 + 9) = v31;
  }
  else
  {
    uint64_t v21 = *(void *)v19;
    uint64_t v22 = *((void *)v19 + 1);
    uint64_t v23 = *((void *)v19 + 2);
    sub_251A1B4AC(v21, v22, v23, v20);
    uint64_t v24 = *(void *)v18;
    uint64_t v25 = *(void *)(v18 + 8);
    uint64_t v26 = *(void *)(v18 + 16);
    *(void *)uint64_t v18 = v21;
    *(void *)(v18 + 8) = v22;
    *(void *)(v18 + 16) = v23;
    char v27 = *(unsigned char *)(v18 + 24);
    *(unsigned char *)(v18 + 24) = v20;
    sub_251A1B604(v24, v25, v26, v27);
  }
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  if (a1 != a2)
  {
    uint64_t v33 = *(int *)(a3 + 24);
    char v34 = (void *)(a1 + v33);
    char v35 = (const void *)(a2 + v33);
    sub_251EEAA44(a1 + v33, (uint64_t (*)(void))type metadata accessor for TilesFilter);
    uint64_t v36 = type metadata accessor for TilesFilter();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC00);
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v39 - 8) + 16))(v34, v35, v39);
        swift_storeEnumTagMultiPayload();
        break;
      case 2:
        uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF8);
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v40 - 8) + 16))(v34, v35, v40);
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF0);
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v38 - 8) + 16))(v34, v35, v38);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_251EE7E28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  int v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = v7[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = v7[7];
  uint64_t v19 = (void *)(a1 + v18);
  int v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = v7[8];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  int v26 = *(unsigned __int8 *)(a1 + v23 + 24);
  if (v26 != 255)
  {
    int v27 = *(unsigned __int8 *)(v25 + 24);
    if (v27 != 255)
    {
      uint64_t v28 = *(void *)(v25 + 16);
      uint64_t v29 = *(void *)v24;
      uint64_t v30 = *(void *)(v24 + 8);
      uint64_t v31 = *(void *)(v24 + 16);
      *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
      *(void *)(v24 + 16) = v28;
      *(unsigned char *)(v24 + 24) = v27;
      sub_251A1B604(v29, v30, v31, v26);
      goto LABEL_6;
    }
    sub_251A1B620(v24);
  }
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 9) = *(_OWORD *)(v25 + 9);
LABEL_6:
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  if (a1 != a2)
  {
    uint64_t v32 = *(int *)(a3 + 24);
    uint64_t v33 = (void *)(a1 + v32);
    char v34 = (const void *)(a2 + v32);
    sub_251EEAA44(a1 + v32, (uint64_t (*)(void))type metadata accessor for TilesFilter);
    uint64_t v35 = type metadata accessor for TilesFilter();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC00);
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v38 - 8) + 32))(v33, v34, v38);
        swift_storeEnumTagMultiPayload();
        break;
      case 2:
        uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF8);
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v39 - 8) + 32))(v33, v34, v39);
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF0);
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v37 - 8) + 32))(v33, v34, v37);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_251EE80E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251EE80FC);
}

uint64_t sub_251EE80FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 252)
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 4) {
      return v10 - 3;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v11 = type metadata accessor for TilesFilter();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_251EE8220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251EE8234);
}

uint64_t sub_251EE8234(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 252)
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 3;
  }
  else
  {
    uint64_t v11 = type metadata accessor for TilesFilter();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for SecuritySystemStatusItem(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269BA5720);
}

uint64_t sub_251EE837C()
{
  uint64_t result = type metadata accessor for IconTextValueStringDataHolder();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TilesFilter();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_251EE844C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_8Tm_1);
}

uint64_t sub_251EE8464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_9Tm_1);
}

uint64_t type metadata accessor for DoorLockStatusItem(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269BA5730);
}

uint64_t sub_251EE849C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_8Tm_2);
}

uint64_t sub_251EE84B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_9Tm_2);
}

uint64_t type metadata accessor for GarageDoorStatusItem(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269BA5740);
}

uint64_t sub_251EE84F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm_6);
}

uint64_t sub_251EE850C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm_6);
}

uint64_t type metadata accessor for DoorStatusItem(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269BA5750);
}

uint64_t sub_251EE8544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  unsigned int v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = v7[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = v7[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  void *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = v7[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (long long *)(a2 + v17);
  int v20 = *(unsigned __int8 *)(a2 + v17 + 24);
  if (*(unsigned __int8 *)(a1 + v17 + 24) == 255)
  {
    if (v20 == 255)
    {
      long long v32 = *v19;
      *(_OWORD *)(v18 + 9) = *(long long *)((char *)v19 + 9);
      *(_OWORD *)uint64_t v18 = v32;
      if (a1 == a2) {
        return a1;
      }
    }
    else
    {
      uint64_t v28 = *(void *)v19;
      uint64_t v29 = *((void *)v19 + 1);
      uint64_t v30 = *((void *)v19 + 2);
      sub_251A1B4AC(v28, v29, v30, v20);
      *(void *)uint64_t v18 = v28;
      *(void *)(v18 + 8) = v29;
      *(void *)(v18 + 16) = v30;
      *(unsigned char *)(v18 + 24) = v20;
      if (a1 == a2) {
        return a1;
      }
    }
  }
  else if (v20 == 255)
  {
    sub_251A1B620(v18);
    long long v31 = *(long long *)((char *)v19 + 9);
    *(_OWORD *)uint64_t v18 = *v19;
    *(_OWORD *)(v18 + 9) = v31;
    if (a1 == a2) {
      return a1;
    }
  }
  else
  {
    uint64_t v21 = *(void *)v19;
    uint64_t v22 = *((void *)v19 + 1);
    uint64_t v23 = *((void *)v19 + 2);
    sub_251A1B4AC(v21, v22, v23, v20);
    uint64_t v24 = *(void *)v18;
    uint64_t v25 = *(void *)(v18 + 8);
    uint64_t v26 = *(void *)(v18 + 16);
    *(void *)uint64_t v18 = v21;
    *(void *)(v18 + 8) = v22;
    *(void *)(v18 + 16) = v23;
    char v27 = *(unsigned char *)(v18 + 24);
    *(unsigned char *)(v18 + 24) = v20;
    sub_251A1B604(v24, v25, v26, v27);
    if (a1 == a2) {
      return a1;
    }
  }
  uint64_t v33 = *(int *)(a3 + 20);
  char v34 = (void *)(a1 + v33);
  uint64_t v35 = (const void *)(a2 + v33);
  sub_251EEAA44(a1 + v33, (uint64_t (*)(void))type metadata accessor for TilesFilter);
  uint64_t v36 = type metadata accessor for TilesFilter();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC00);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v39 - 8) + 16))(v34, v35, v39);
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF8);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v40 - 8) + 16))(v34, v35, v40);
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF0);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v38 - 8) + 16))(v34, v35, v38);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t sub_251EE88A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  unsigned int v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = v7[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = v7[7];
  uint64_t v19 = (void *)(a1 + v18);
  int v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = v7[8];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  int v26 = *(unsigned __int8 *)(a1 + v23 + 24);
  if (v26 == 255)
  {
LABEL_6:
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    *(_OWORD *)(v24 + 9) = *(_OWORD *)(v25 + 9);
    if (a1 == a2) {
      return a1;
    }
    goto LABEL_7;
  }
  int v27 = *(unsigned __int8 *)(v25 + 24);
  if (v27 == 255)
  {
    sub_251A1B620(v24);
    goto LABEL_6;
  }
  uint64_t v28 = *(void *)(v25 + 16);
  uint64_t v29 = *(void *)v24;
  uint64_t v30 = *(void *)(v24 + 8);
  uint64_t v31 = *(void *)(v24 + 16);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *(void *)(v24 + 16) = v28;
  *(unsigned char *)(v24 + 24) = v27;
  sub_251A1B604(v29, v30, v31, v26);
  if (a1 == a2) {
    return a1;
  }
LABEL_7:
  uint64_t v32 = *(int *)(a3 + 20);
  uint64_t v33 = (void *)(a1 + v32);
  char v34 = (const void *)(a2 + v32);
  sub_251EEAA44(a1 + v32, (uint64_t (*)(void))type metadata accessor for TilesFilter);
  uint64_t v35 = type metadata accessor for TilesFilter();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC00);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v38 - 8) + 32))(v33, v34, v38);
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF8);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v39 - 8) + 32))(v33, v34, v39);
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF0);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v37 - 8) + 32))(v33, v34, v37);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t sub_251EE8B64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm_7);
}

uint64_t sub_251EE8B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm_7);
}

uint64_t type metadata accessor for WindowStatusItem(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269BA5760);
}

uint64_t sub_251EE8BB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_8Tm_3);
}

uint64_t sub_251EE8BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_9Tm_3);
}

uint64_t type metadata accessor for SmokeAlarmStatusItem(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269BA5770);
}

uint64_t sub_251EE8C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_8Tm_4);
}

uint64_t sub_251EE8C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_9Tm_4);
}

uint64_t type metadata accessor for CarbonDioxideAlarmStatusItem(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269BA5780);
}

uint64_t sub_251EE8C54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_8Tm_5);
}

uint64_t sub_251EE8C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_9Tm_5);
}

uint64_t type metadata accessor for CarbonMonoxideAlarmStatusItem(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269BA5790);
}

uint64_t sub_251EE8CA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_8Tm_6);
}

uint64_t sub_251EE8CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_9Tm_6);
}

uint64_t type metadata accessor for ContactSensorStatusItem(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269BA57A0);
}

uint64_t sub_251EE8CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_8Tm_7);
}

uint64_t sub_251EE8D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_9Tm_7);
}

uint64_t type metadata accessor for MotionSensorStatusItem(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269BA57B0);
}

uint64_t sub_251EE8D44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  unsigned int v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = v7[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = v7[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  void *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = v7[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (long long *)(a2 + v17);
  int v20 = *(unsigned __int8 *)(a2 + v17 + 24);
  if (*(unsigned __int8 *)(a1 + v17 + 24) == 255)
  {
    if (v20 == 255)
    {
      long long v32 = *v19;
      *(_OWORD *)(v18 + 9) = *(long long *)((char *)v19 + 9);
      *(_OWORD *)uint64_t v18 = v32;
      if (a1 == a2) {
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v28 = *(void *)v19;
      uint64_t v29 = *((void *)v19 + 1);
      uint64_t v30 = *((void *)v19 + 2);
      sub_251A1B4AC(v28, v29, v30, v20);
      *(void *)uint64_t v18 = v28;
      *(void *)(v18 + 8) = v29;
      *(void *)(v18 + 16) = v30;
      *(unsigned char *)(v18 + 24) = v20;
      if (a1 == a2) {
        goto LABEL_18;
      }
    }
  }
  else if (v20 == 255)
  {
    sub_251A1B620(v18);
    long long v31 = *(long long *)((char *)v19 + 9);
    *(_OWORD *)uint64_t v18 = *v19;
    *(_OWORD *)(v18 + 9) = v31;
    if (a1 == a2) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v21 = *(void *)v19;
    uint64_t v22 = *((void *)v19 + 1);
    uint64_t v23 = *((void *)v19 + 2);
    sub_251A1B4AC(v21, v22, v23, v20);
    uint64_t v24 = *(void *)v18;
    uint64_t v25 = *(void *)(v18 + 8);
    uint64_t v26 = *(void *)(v18 + 16);
    *(void *)uint64_t v18 = v21;
    *(void *)(v18 + 8) = v22;
    *(void *)(v18 + 16) = v23;
    char v27 = *(unsigned char *)(v18 + 24);
    *(unsigned char *)(v18 + 24) = v20;
    sub_251A1B604(v24, v25, v26, v27);
    if (a1 == a2) {
      goto LABEL_18;
    }
  }
  uint64_t v33 = *(int *)(a3 + 20);
  char v34 = (void *)(a1 + v33);
  uint64_t v35 = (const void *)(a2 + v33);
  sub_251EEAA44(a1 + v33, (uint64_t (*)(void))type metadata accessor for TilesFilter);
  uint64_t v36 = type metadata accessor for TilesFilter();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC00);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v39 - 8) + 16))(v34, v35, v39);
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF8);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v40 - 8) + 16))(v34, v35, v40);
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF0);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v38 - 8) + 16))(v34, v35, v38);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
      break;
  }
LABEL_18:
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_251EE90B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  unsigned int v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = v7[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = v7[7];
  uint64_t v19 = (void *)(a1 + v18);
  int v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = v7[8];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  int v26 = *(unsigned __int8 *)(a1 + v23 + 24);
  if (v26 == 255)
  {
LABEL_6:
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    *(_OWORD *)(v24 + 9) = *(_OWORD *)(v25 + 9);
    if (a1 == a2) {
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  int v27 = *(unsigned __int8 *)(v25 + 24);
  if (v27 == 255)
  {
    sub_251A1B620(v24);
    goto LABEL_6;
  }
  uint64_t v28 = *(void *)(v25 + 16);
  uint64_t v29 = *(void *)v24;
  uint64_t v30 = *(void *)(v24 + 8);
  uint64_t v31 = *(void *)(v24 + 16);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *(void *)(v24 + 16) = v28;
  *(unsigned char *)(v24 + 24) = v27;
  sub_251A1B604(v29, v30, v31, v26);
  if (a1 == a2) {
    goto LABEL_14;
  }
LABEL_7:
  uint64_t v32 = *(int *)(a3 + 20);
  uint64_t v33 = (void *)(a1 + v32);
  char v34 = (const void *)(a2 + v32);
  sub_251EEAA44(a1 + v32, (uint64_t (*)(void))type metadata accessor for TilesFilter);
  uint64_t v35 = type metadata accessor for TilesFilter();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC00);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v38 - 8) + 32))(v33, v34, v38);
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF8);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v39 - 8) + 32))(v33, v34, v39);
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF0);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v37 - 8) + 32))(v33, v34, v37);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
      break;
  }
LABEL_14:
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_251EE937C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_8Tm_8);
}

uint64_t sub_251EE9394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_9Tm_8);
}

uint64_t type metadata accessor for OccupancySensorStatusItem(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269BA57C0);
}

uint64_t sub_251EE93CC()
{
  uint64_t result = type metadata accessor for IconTextValueStringDataHolder();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TilesFilter();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_251EE949C(void *a1, uint64_t *a2)
{
  void (*v17)(uint64_t *__return_ptr, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unsigned int (**v27)(char *, uint64_t, uint64_t);
  uint64_t result;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  int64_t v34;
  unint64_t v35;
  unsigned int (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v51;
  uint64_t (*v52)(uint64_t *);
  void (*v53)(uint64_t *__return_ptr, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(char *);
  uint64_t v65;
  void (**v66)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  char v68;
  uint64_t v69;
  char v70;
  void *v71;
  uint64_t v72;

  uint64_t v4 = type metadata accessor for StaticService();
  uint64_t v63 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v54 = (uint64_t)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v47 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  int v57 = (uint64_t)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v47 - v13;
  MEMORY[0x270FA5388](v12);
  int v56 = (uint64_t)&v47 - v15;
  uint64_t v71 = a1;
  uint64_t v16 = *a2;
  uint64_t v64 = (uint64_t (*)(char *))a2[1];
  uint64_t v18 = a2[2];
  uint64_t v17 = (void (*)(uint64_t *__return_ptr, uint64_t))a2[3];
  uint64_t v19 = a2[4];
  unsigned int v52 = (uint64_t (*)(uint64_t *))a2[5];
  uint64_t v53 = v17;
  uint64_t v72 = v16;
  int v20 = *(void *)(v16 + 56);
  int v60 = v16 + 56;
  uint64_t v62 = v16;
  uint64_t v21 = -1 << *(unsigned char *)(v16 + 32);
  uint64_t v49 = ~v21;
  if (-v21 < 64) {
    uint64_t v22 = ~(-1 << -(char)v21);
  }
  else {
    uint64_t v22 = -1;
  }
  uint64_t v23 = v22 & v20;
  uint64_t v24 = a2[6];
  uint64_t v50 = (void (*)(uint64_t *__return_ptr, uint64_t *))a2[7];
  uint64_t v25 = a2[8];
  sub_251EEAAAC((uint64_t)&v72);
  int v26 = (unint64_t)(63 - v21) >> 6;
  uint64_t v66 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v63 + 56);
  int v27 = (unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
  uint64_t v61 = v26;
  unsigned int v48 = v26 - 1;
  uint64_t v65 = v18;
  swift_retain();
  uint64_t v59 = v19;
  swift_retain();
  uint64_t v58 = v24;
  swift_retain();
  char v51 = v25;
  uint64_t result = swift_retain();
  uint64_t v29 = 0;
  while (1)
  {
    if (v23)
    {
      uint64_t v30 = __clz(__rbit64(v23));
      v23 &= v23 - 1;
      uint64_t v31 = v30 | (v29 << 6);
LABEL_8:
      uint64_t v32 = v63;
      sub_251EEA7DC(*(void *)(v62 + 48) + *(void *)(v63 + 72) * v31, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
      v33(v14, 0, 1, v4);
      goto LABEL_18;
    }
    char v34 = v29 + 1;
    if (__OFADD__(v29, 1))
    {
      __break(1u);
      goto LABEL_47;
    }
    if (v34 < v61)
    {
      uint64_t v35 = *(void *)(v60 + 8 * v34);
      if (v35) {
        goto LABEL_12;
      }
      v29 += 2;
      if (v34 + 1 >= v61)
      {
        uint64_t v29 = v34;
        goto LABEL_17;
      }
      uint64_t v35 = *(void *)(v60 + 8 * v29);
      if (v35) {
        goto LABEL_15;
      }
      int v46 = v34 + 2;
      if (v34 + 2 < v61)
      {
        uint64_t v35 = *(void *)(v60 + 8 * v46);
        if (v35) {
          goto LABEL_28;
        }
        uint64_t v29 = v34 + 3;
        if (v34 + 3 >= v61)
        {
          uint64_t v29 = v34 + 2;
          goto LABEL_17;
        }
        uint64_t v35 = *(void *)(v60 + 8 * v29);
        if (v35)
        {
LABEL_15:
          char v34 = v29;
LABEL_12:
          uint64_t v23 = (v35 - 1) & v35;
          uint64_t v31 = __clz(__rbit64(v35)) + (v34 << 6);
          uint64_t v29 = v34;
          goto LABEL_8;
        }
        if (v34 + 4 < v61) {
          break;
        }
      }
    }
LABEL_17:
    uint64_t v33 = *v66;
    (*v66)(v14, 1, 1, v4);
    uint64_t v23 = 0;
LABEL_18:
    uint64_t v36 = *v27;
    if ((*v27)(v14, 1, v4) == 1)
    {
      sub_251A1B064((uint64_t)v14, qword_26B21EE20);
      uint64_t v38 = 1;
      uint64_t v37 = v56;
      goto LABEL_22;
    }
    sub_251EEAAD8((uint64_t)v14, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v64(v8))
    {
      uint64_t v37 = v56;
      sub_251EEAAD8((uint64_t)v8, v56, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v38 = 0;
LABEL_22:
      v33((char *)v37, v38, 1, v4);
      uint64_t v39 = v37;
      uint64_t v40 = v57;
      sub_251D18644(v39, v57);
      if (v36((char *)v40, 1, v4) == 1)
      {
        sub_251A1E630();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        return (uint64_t)v71;
      }
      uint64_t v41 = v54;
      sub_251EEAAD8(v40, v54, (uint64_t (*)(void))type metadata accessor for StaticService);
      v53(&v67, v41);
      uint64_t v42 = v68;
      int v43 = v41;
      uint64_t v44 = v67;
      sub_251EEAA44(v43, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v69 = v44;
      uint64_t v70 = v42;
      uint64_t result = v52(&v69);
      if (result)
      {
        uint64_t v69 = v44;
        uint64_t v70 = v42;
        v50(&v67, &v69);
        char v45 = v55;
        uint64_t result = sub_251EEA67C(&v71, &v67);
        if (v45)
        {
          swift_bridgeObjectRelease();
          sub_251A1E630();
          swift_release();
          swift_release();
          swift_release();
          return swift_release();
        }
        int v55 = 0;
      }
    }
    else
    {
      uint64_t result = sub_251EEAA44((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
    }
  }
  uint64_t v35 = *(void *)(v60 + 8 * (v34 + 4));
  if (v35)
  {
    v34 += 4;
    goto LABEL_12;
  }
  int v46 = v34 + 5;
  if (v34 + 5 >= v61)
  {
    uint64_t v29 = v34 + 4;
    goto LABEL_17;
  }
  uint64_t v35 = *(void *)(v60 + 8 * v46);
  if (v35)
  {
LABEL_28:
    char v34 = v46;
    goto LABEL_12;
  }
  while (1)
  {
    char v34 = v46 + 1;
    if (__OFADD__(v46, 1)) {
      break;
    }
    if (v34 >= v61)
    {
      uint64_t v29 = v48;
      goto LABEL_17;
    }
    uint64_t v35 = *(void *)(v60 + 8 * v34);
    ++v46;
    if (v35) {
      goto LABEL_12;
    }
  }
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_251EE9B0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for IconTextValueStringDataHolder();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SecuritySystemStatusItem(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t)&v11[*(int *)(v9 + 24)];
  char v61 = 35;
  uint64_t v62 = type metadata accessor for StaticService();
  sub_251F34EF0();
  type metadata accessor for TilesFilter();
  swift_storeEnumTagMultiPayload();
  v63[0] = a1;
  v63[1] = (uint64_t)sub_251EEA55C;
  v63[2] = 0;
  v63[3] = (uint64_t)sub_251EEA610;
  v63[4] = 0;
  v63[5] = (uint64_t)sub_251EEA844;
  v63[6] = 0;
  v63[7] = (uint64_t)sub_251EEA854;
  v63[8] = 0;
  uint64_t v13 = (void *)sub_251A1A254(MEMORY[0x263F8EE78]);
  uint64_t v14 = sub_251EE949C(v13, v63);
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v14 + 16);
  int v60 = (int *)v4;
  if (v15)
  {
    unint64_t v16 = sub_2519FF064(4);
    if (v17)
    {
      uint64_t v18 = *(void *)(*(void *)(v14 + 56) + 8 * v16);
      if (!*(void *)(v14 + 16)) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v18 = 0;
      if (!*(void *)(v14 + 16)) {
        goto LABEL_9;
      }
    }
    unint64_t v19 = sub_2519FF064(3);
    if (v20)
    {
      uint64_t v21 = *(void *)(*(void *)(v14 + 56) + 8 * v19);
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v18 = 0;
  }
LABEL_9:
  uint64_t v21 = 0;
LABEL_10:
  uint64_t result = swift_bridgeObjectRelease();
  if (__OFADD__(v18, v21))
  {
    __break(1u);
  }
  else if (v18 + v21 < 1)
  {
    sub_251EEAA44(v12, (uint64_t (*)(void))type metadata accessor for TilesFilter);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, 1, 1, v7);
  }
  else
  {
    uint64_t v59 = a2;
    uint64_t v57 = v8;
    if (v18 < 1)
    {
      static String.hfLocalized(_:)(0xD000000000000032, 0x8000000251F732D0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
      uint64_t v29 = swift_allocObject();
      uint64_t v30 = MEMORY[0x263F8D6C8];
      *(_OWORD *)(v29 + 16) = xmmword_251F38650;
      uint64_t v31 = MEMORY[0x263F8D750];
      *(void *)(v29 + 56) = v30;
      *(void *)(v29 + 64) = v31;
      *(void *)(v29 + 32) = v21;
      uint64_t v32 = sub_251F35710();
      uint64_t v55 = v33;
      uint64_t v56 = v32;
      char v28 = 1;
    }
    else
    {
      static String.hfLocalized(_:)(0xD000000000000033, 0x8000000251F73340);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
      uint64_t v23 = swift_allocObject();
      uint64_t v24 = MEMORY[0x263F8D6C8];
      *(_OWORD *)(v23 + 16) = xmmword_251F38650;
      uint64_t v25 = MEMORY[0x263F8D750];
      *(void *)(v23 + 56) = v24;
      *(void *)(v23 + 64) = v25;
      *(void *)(v23 + 32) = v18;
      uint64_t v26 = sub_251F35710();
      uint64_t v55 = v27;
      uint64_t v56 = v26;
      char v28 = 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v58 = v7;
    v11[*(int *)(v7 + 20)] = v28;
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v54 = &v51;
    uint64_t v35 = *(void *)(*(void *)(v34 - 8) + 64);
    MEMORY[0x270FA5388](v34 - 8);
    unint64_t v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v37 = sub_251F34DA0();
    uint64_t v38 = *(void *)(v37 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56))((char *)&v51 - v36, 1, 1, v37);
    uint64_t v53 = static String.hfLocalized(_:)(0xD000000000000028, 0x8000000251F73310);
    uint64_t v52 = v39;
    uint64_t v40 = MEMORY[0x270FA5388](v53);
    uint64_t v42 = (char *)&v51 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
    MEMORY[0x270FA5388](v40);
    int v43 = (char *)&v51 - v36;
    sub_251A1E280((uint64_t)&v51 - v36, (uint64_t)&v51 - v36);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))((char *)&v51 - v36, 1, v37) == 1)
    {
      sub_251F34D90();
      sub_251A1B064((uint64_t)&v51 - v36, &qword_26B21FF90);
      sub_251A1B064((uint64_t)v43, &qword_26B21FF90);
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v6, v42, v37);
    }
    else
    {
      sub_251A1B064((uint64_t)&v51 - v36, &qword_26B21FF90);
      uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
      v44(v42, v43, v37);
      v44(v6, v42, v37);
    }
    char v45 = v60;
    int v46 = &v6[v60[5]];
    *(void *)int v46 = 0xD000000000000015;
    *((void *)v46 + 1) = 0x8000000251F658C0;
    int v47 = (uint64_t *)&v6[v45[6]];
    *int v47 = v53;
    v47[1] = v52;
    unsigned int v48 = &v6[v45[7]];
    *(void *)unsigned int v48 = v56;
    *((void *)v48 + 1) = v55;
    uint64_t v49 = &v6[v45[8]];
    *(void *)uint64_t v49 = 0;
    *((void *)v49 + 1) = 0;
    *((void *)v49 + 2) = 0;
    v49[24] = -1;
    sub_251EEAAD8((uint64_t)v6, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    uint64_t v50 = v59;
    sub_251EEA7DC((uint64_t)v11, v59, type metadata accessor for SecuritySystemStatusItem);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56))(v50, 0, 1, v58);
    return sub_251EEAA44((uint64_t)v11, type metadata accessor for SecuritySystemStatusItem);
  }
  return result;
}

uint64_t sub_251EEA1DC@<X0>(uint64_t a1@<X8>)
{
  return sub_251EEA7DC(v1, a1, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
}

uint64_t sub_251EEA210@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251EEA7DC(v2 + *(int *)(a1 + 20), a2, (uint64_t (*)(void))type metadata accessor for TilesFilter);
}

uint64_t sub_251EEA248@<X0>(char a1@<W1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA42D0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC50);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_251A1E590(&qword_269B9CC58, &qword_269B9CC50);
  sub_251F34990();
  swift_getKeyPath();
  sub_251F34920();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA42D8);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = &v17[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17[15] = a1;
  sub_251F34980();
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA42E0);
  a2[4] = sub_251E321D4();
  __swift_allocate_boxed_opaque_existential_1(a2);
  sub_251A1E590(&qword_269BA4300, &qword_269BA42D0);
  sub_251A1E590(&qword_269BA4308, &qword_269BA42D8);
  sub_251BD2FE8();
  sub_251F34910();
  (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_251EEA55C()
{
  type metadata accessor for StaticService();
  if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v0 == 0x8000000251F64EF0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v2 = sub_251F36B10();
    swift_bridgeObjectRelease();
    return v2 & 1;
  }
}

Swift::Int sub_251EEA610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = *(void *)(a1 + *(int *)(type metadata accessor for StaticService() + 112));
  char v5 = 42;
  Swift::Int_optional v7 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v5);
  if (v7.is_nil) {
    Swift::Int value = 0;
  }
  else {
    Swift::Int value = v7.value;
  }
  *(void *)a2 = value;
  *(unsigned char *)(a2 + 8) = v7.is_nil;
  return v7.value;
}

unint64_t sub_251EEA67C(void **a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v6 = *a1;
  char v20 = *a1;
  *a1 = (void *)0x8000000000000000;
  unint64_t v8 = sub_2519FF064(v4);
  uint64_t v9 = v6[2];
  BOOL v10 = (v7 & 1) == 0;
  uint64_t v11 = v9 + v10;
  if (__OFADD__(v9, v10))
  {
    __break(1u);
    goto LABEL_11;
  }
  char v2 = v7;
  if (v6[3] >= v11)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      goto LABEL_12;
    }
  }
  else
  {
    sub_251A0B2E0(v11, isUniquelyReferenced_nonNull_native);
    uint64_t v6 = v20;
    unint64_t v12 = sub_2519FF064(v4);
    if ((v2 & 1) != (v13 & 1))
    {
      type metadata accessor for HMCharacteristicValueCurrentSecuritySystemState(0);
      unint64_t result = sub_251F36BA0();
      __break(1u);
      return result;
    }
    unint64_t v8 = v12;
  }
  while (1)
  {
    *a1 = v6;
    unint64_t result = swift_bridgeObjectRelease();
    uint64_t v15 = *a1;
    if ((v2 & 1) == 0) {
      unint64_t result = sub_251A11CF0(v8, v4, 0, *a1);
    }
    uint64_t v16 = v15[7];
    uint64_t v17 = *(void *)(v16 + 8 * v8);
    BOOL v18 = __OFADD__(v17, 1);
    uint64_t v19 = v17 + 1;
    if (!v18) {
      break;
    }
LABEL_11:
    __break(1u);
LABEL_12:
    sub_251A17B04();
    uint64_t v6 = v20;
  }
  *(void *)(v16 + 8 * v8) = v19;
  return result;
}

uint64_t sub_251EEA7A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251EEA7DC(v2 + *(int *)(a1 + 24), a2, (uint64_t (*)(void))type metadata accessor for TilesFilter);
}

uint64_t sub_251EEA7DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

BOOL sub_251EEA844(uint64_t a1)
{
  return (*(unsigned char *)(a1 + 8) & 1) == 0;
}

uint64_t sub_251EEA854@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (*(unsigned char *)(result + 8)) {
    __break(1u);
  }
  else {
    *a2 = *(void *)result;
  }
  return result;
}

BOOL sub_251EEA86C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticService();
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a1 + *(int *)(v3 + 112));
  uint64_t v6 = v13;
  HIBYTE(v12) = 38;
  Swift::Int_optional v14 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)((char *)&v12 + 7));
  Swift::Int value = v14.value;
  Swift::Bool is_nil = v14.is_nil;
  uint64_t v13 = v6;
  HIBYTE(v12) = -100;
  Swift::Int_optional v15 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)((char *)&v12 + 7));
  if (is_nil)
  {
    if (v15.is_nil)
    {
      sub_251EEA7DC(a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_11:
      sub_251EEAA44((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
      return 0;
    }
    goto LABEL_6;
  }
  if (v15.is_nil)
  {
LABEL_6:
    sub_251EEA7DC(a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
    goto LABEL_7;
  }
  Swift::Int v9 = v15.value;
  sub_251EEA7DC(a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (value == v9) {
    goto LABEL_11;
  }
LABEL_7:
  uint64_t v13 = *(void *)&v5[*(int *)(v2 + 112)];
  HIBYTE(v12) = 38;
  Swift::Int_optional v16 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)((char *)&v12 + 7));
  if (v16.is_nil)
  {
    sub_251EEAA44((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
    return 1;
  }
  else
  {
    Swift::Int v10 = v16.value;
    sub_251EEAA44((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
    return v10 != 3;
  }
}

uint64_t sub_251EEAA44(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251EEAAA4@<X0>(uint64_t *a1@<X8>)
{
  return sub_251EEA248(*(unsigned char *)(v1 + 16), a1);
}

uint64_t sub_251EEAAAC(uint64_t a1)
{
  return a1;
}

uint64_t sub_251EEAAD8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t LegacyHFImageIdentifiers.rawValue.getter(char a1)
{
  unint64_t result = 0xD000000000000025;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000028;
      break;
    case 2:
      unint64_t result = 0xD000000000000024;
      break;
    case 4:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000026;
      break;
    case 6:
      unint64_t result = 0xD000000000000026;
      break;
    case 7:
      unint64_t result = 0xD000000000000020;
      break;
    case 8:
      unint64_t result = 0xD000000000000022;
      break;
    case 9:
      unint64_t result = 0xD000000000000020;
      break;
    case 10:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 11:
      unint64_t result = 0xD000000000000022;
      break;
    case 12:
      unint64_t result = 0xD000000000000027;
      break;
    case 13:
      unint64_t result = 0xD000000000000027;
      break;
    case 14:
      unint64_t result = 0xD000000000000032;
      break;
    case 15:
      unint64_t result = 0xD000000000000028;
      break;
    case 16:
      unint64_t result = 0xD000000000000029;
      break;
    case 17:
      unint64_t result = 0xD000000000000022;
      break;
    case 18:
      unint64_t result = 0xD000000000000027;
      break;
    case 19:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case 20:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 21:
      unint64_t result = 0xD00000000000002ELL;
      break;
    case 22:
      unint64_t result = 0xD00000000000002FLL;
      break;
    case 23:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case 24:
      unint64_t result = 0xD00000000000002FLL;
      break;
    case 25:
      unint64_t result = 0xD000000000000031;
      break;
    case 26:
      unint64_t result = 0xD000000000000032;
      break;
    case 27:
      unint64_t result = 0xD000000000000032;
      break;
    case 28:
      unint64_t result = 0xD000000000000033;
      break;
    case 29:
      unint64_t result = 0xD000000000000028;
      break;
    case 30:
      unint64_t result = 0xD000000000000029;
      break;
    case 31:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 32:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case 33:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case 34:
      unint64_t result = 0xD00000000000002ELL;
      break;
    case 35:
      unint64_t result = 0xD000000000000029;
      break;
    case 36:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 37:
      unint64_t result = 0xD000000000000026;
      break;
    case 38:
      unint64_t result = 0xD000000000000028;
      break;
    case 39:
      unint64_t result = 0xD000000000000026;
      break;
    case 41:
      unint64_t result = 0xD000000000000021;
      break;
    case 42:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 44:
      unint64_t result = 0xD000000000000024;
      break;
    case 45:
      unint64_t result = 0xD000000000000028;
      break;
    case 46:
      unint64_t result = 0xD000000000000027;
      break;
    case 47:
      unint64_t result = 0xD000000000000023;
      break;
    case 48:
      unint64_t result = 0xD000000000000024;
      break;
    case 49:
      unint64_t result = 0xD000000000000026;
      break;
    case 50:
      unint64_t result = 0xD000000000000027;
      break;
    case 51:
      unint64_t result = 0xD000000000000022;
      break;
    case 52:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 53:
      unint64_t result = 0xD000000000000032;
      break;
    case 55:
      unint64_t result = 0xD00000000000002CLL;
      break;
    case 56:
      unint64_t result = 0xD000000000000024;
      break;
    case 57:
      unint64_t result = 0xD000000000000024;
      break;
    case 58:
      unint64_t result = 0xD000000000000027;
      break;
    case 59:
      unint64_t result = 0xD000000000000024;
      break;
    case 61:
      unint64_t result = 0xD000000000000026;
      break;
    case 62:
      unint64_t result = 0xD000000000000023;
      break;
    case 63:
      unint64_t result = 0xD000000000000022;
      break;
    case 64:
      unint64_t result = 0xD000000000000020;
      break;
    case 65:
      unint64_t result = 0xD000000000000020;
      break;
    case 67:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 68:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 69:
      unint64_t result = 0xD000000000000021;
      break;
    case 70:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 71:
      unint64_t result = 0xD000000000000020;
      break;
    case 72:
      unint64_t result = 0xD00000000000001CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251EEB11C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s13HomeDataModel24LegacyHFImageIdentifiersO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

unint64_t sub_251EEB14C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = LegacyHFImageIdentifiers.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_251EEB178()
{
  return sub_251F35A30();
}

uint64_t sub_251EEB1D8()
{
  return sub_251F359D0();
}

uint64_t sub_251EEB228(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = LegacyHFImageIdentifiers.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == LegacyHFImageIdentifiers.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_251F36B10();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_251EEB2B4()
{
  char v1 = *v0;
  sub_251F36CA0();
  LegacyHFImageIdentifiers.rawValue.getter(v1);
  sub_251F357B0();
  swift_bridgeObjectRelease();
  return sub_251F36D00();
}

uint64_t sub_251EEB318()
{
  LegacyHFImageIdentifiers.rawValue.getter(*v0);
  sub_251F357B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251EEB36C()
{
  char v1 = *v0;
  sub_251F36CA0();
  LegacyHFImageIdentifiers.rawValue.getter(v1);
  sub_251F357B0();
  swift_bridgeObjectRelease();
  return sub_251F36D00();
}

uint64_t _s13HomeDataModel24LegacyHFImageIdentifiersO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_251F36B50();
  swift_bridgeObjectRelease();
  if (v0 >= 0x49) {
    return 73;
  }
  else {
    return v0;
  }
}

unint64_t sub_251EEB424()
{
  unint64_t result = qword_269BA57D0;
  if (!qword_269BA57D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA57D0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for LegacyHFImageIdentifiers(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xB8) {
    goto LABEL_17;
  }
  if (a2 + 72 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 72) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 72;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 72;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 72;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x49;
  int v8 = v6 - 73;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for LegacyHFImageIdentifiers(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 72 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 72) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xB8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xB7)
  {
    unsigned int v6 = ((a2 - 184) >> 8) + 1;
    *unint64_t result = a2 + 72;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251EEB5D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 72;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LegacyHFImageIdentifiers()
{
  return &type metadata for LegacyHFImageIdentifiers;
}

unint64_t sub_251EEB60C()
{
  unint64_t result = qword_269BA57D8;
  if (!qword_269BA57D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA57D8);
  }
  return result;
}

uint64_t sub_251EEB660@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC38);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v19 = v4;
  uint64_t v20 = v5;
  MEMORY[0x270FA5388](v4);
  BOOL v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC40);
  sub_251F34980();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC48);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC50);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  Swift::Int_optional v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E590(&qword_269B9CC58, &qword_269B9CC50);
  sub_251F34990();
  swift_getKeyPath();
  sub_251F34920();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC60);
  a2[4] = sub_251A1E358();
  __swift_allocate_boxed_opaque_existential_1(a2);
  sub_251A1E590(&qword_269B9CCA0, &qword_269B9CC38);
  sub_251A1E590(&qword_269B9CCA8, &qword_269B9CC48);
  sub_251A1E5D4();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
  uint64_t v16 = v19;
  sub_251F34940();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v7, v16);
}

uint64_t StaticRVCClusterGroup.selectMap(mapID:)(int a1)
{
  *(_DWORD *)(v2 + 252) = a1;
  long long v3 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v2 + 320) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v2 + 336) = v3;
  *(_OWORD *)(v2 + 352) = *(_OWORD *)(v1 + 96);
  *(void *)(v2 + 368) = *(void *)(v1 + 112);
  long long v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 + 256) = *(_OWORD *)v1;
  *(_OWORD *)(v2 + 272) = v4;
  long long v5 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v2 + 288) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v2 + 304) = v5;
  long long v6 = *(_OWORD *)(v1 + 136);
  *(_OWORD *)(v2 + 384) = *(_OWORD *)(v1 + 120);
  *(_OWORD *)(v2 + 400) = v6;
  long long v7 = *(_OWORD *)(v1 + 168);
  *(_OWORD *)(v2 + 416) = *(_OWORD *)(v1 + 152);
  *(_OWORD *)(v2 + 432) = v7;
  long long v8 = *(_OWORD *)(v1 + 200);
  *(_OWORD *)(v2 + 448) = *(_OWORD *)(v1 + 184);
  *(_OWORD *)(v2 + 464) = v8;
  *(_OWORD *)(v2 + 480) = *(_OWORD *)(v1 + 216);
  *(_DWORD *)(v2 + 512) = *(_DWORD *)(v1 + 232);
  return MEMORY[0x270FA2498](sub_251EEBA18, 0, 0);
}

uint64_t sub_251EEBA18()
{
  uint64_t v1 = *(void *)(v0 + 384);
  if (v1)
  {
    uint64_t v2 = v0 + 256;
    uint64_t v3 = *(void *)(v1 + 16);
    if (v3)
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = 0;
      uint64_t v5 = MEMORY[0x263F8EE78];
      uint64_t v36 = v1;
      do
      {
        uint64_t v10 = v1 + v4;
        if ((*(unsigned char *)(v1 + v4 + 40) & 1) == 0 && *(_DWORD *)(v10 + 36) == *(_DWORD *)(v0 + 252))
        {
          int v11 = *(_DWORD *)(v10 + 32);
          uint64_t v13 = *(void *)(v10 + 48);
          uint64_t v12 = *(void *)(v10 + 56);
          __int16 v14 = *(_WORD *)(v10 + 64);
          char v48 = *(unsigned char *)(v10 + 66);
          char v46 = *(unsigned char *)(v10 + 67);
          char v44 = *(unsigned char *)(v10 + 68);
          char v42 = *(unsigned char *)(v10 + 69);
          char v40 = *(unsigned char *)(v10 + 70);
          char v37 = *(unsigned char *)(v10 + 72);
          char v38 = *(unsigned char *)(v10 + 71);
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_251A3E220(0, *(void *)(v5 + 16) + 1, 1);
          }
          unint64_t v7 = *(void *)(v5 + 16);
          unint64_t v6 = *(void *)(v5 + 24);
          if (v7 >= v6 >> 1) {
            sub_251A3E220(v6 > 1, v7 + 1, 1);
          }
          int v8 = *(_DWORD *)(v0 + 252);
          *(void *)(v5 + 16) = v7 + 1;
          uint64_t v9 = v5 + 48 * v7;
          *(_DWORD *)(v9 + 32) = v11;
          *(_DWORD *)(v9 + 36) = v8;
          *(unsigned char *)(v9 + 40) = 0;
          *(void *)(v9 + 48) = v13;
          *(void *)(v9 + 56) = v12;
          *(_WORD *)(v9 + 64) = v14;
          *(unsigned char *)(v9 + 66) = v48;
          *(unsigned char *)(v9 + 67) = v46;
          *(unsigned char *)(v9 + 68) = v44;
          *(unsigned char *)(v9 + 69) = v42;
          *(unsigned char *)(v9 + 70) = v40;
          *(unsigned char *)(v9 + 71) = v38;
          *(unsigned char *)(v9 + 72) = v37;
          uint64_t v1 = v36;
        }
        v4 += 48;
        --v3;
      }
      while (v3);
      swift_bridgeObjectRelease();
      uint64_t v1 = *(void *)(v0 + 384);
      uint64_t v2 = v0 + 256;
    }
    else
    {
      uint64_t v5 = MEMORY[0x263F8EE78];
    }
    int v17 = *(_DWORD *)(v0 + 512);
    uint64_t v18 = *(void *)(v0 + 488);
    long long v47 = *(_OWORD *)(v0 + 456);
    long long v49 = *(_OWORD *)(v0 + 472);
    long long v43 = *(_OWORD *)(v0 + 424);
    long long v45 = *(_OWORD *)(v0 + 440);
    long long v39 = *(_OWORD *)(v0 + 392);
    long long v41 = *(_OWORD *)(v0 + 408);
    uint64_t v19 = sub_251A2C95C(v5);
    *(void *)(v0 + 496) = v19;
    swift_release();
    long long v20 = *(_OWORD *)(v2 + 80);
    *(_OWORD *)(v0 + 80) = *(_OWORD *)(v2 + 64);
    *(_OWORD *)(v0 + 96) = v20;
    *(_OWORD *)(v0 + 112) = *(_OWORD *)(v2 + 96);
    uint64_t v21 = *(void *)(v2 + 112);
    long long v22 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)v2;
    *(_OWORD *)(v0 + 32) = v22;
    long long v23 = *(_OWORD *)(v2 + 48);
    *(_OWORD *)(v0 + 48) = *(_OWORD *)(v2 + 32);
    *(_OWORD *)(v0 + 64) = v23;
    *(void *)(v0 + 128) = v21;
    *(void *)(v0 + 136) = v1;
    *(_OWORD *)(v0 + 144) = v39;
    *(_OWORD *)(v0 + 160) = v41;
    *(_OWORD *)(v0 + 176) = v43;
    *(_OWORD *)(v0 + 192) = v45;
    *(_OWORD *)(v0 + 208) = v47;
    *(_OWORD *)(v0 + 224) = v49;
    *(void *)(v0 + 240) = v18;
    *(_DWORD *)(v0 + 248) = v17;
    uint64_t v24 = swift_task_alloc();
    *(void *)(v0 + 504) = v24;
    *(void *)uint64_t v24 = v0;
    *(void *)(v24 + 8) = sub_251EEBD9C;
    *(void *)(v24 + 328) = v19;
    long long v25 = *(_OWORD *)(v0 + 192);
    long long v26 = *(_OWORD *)(v0 + 208);
    long long v27 = *(_OWORD *)(v0 + 224);
    *(_OWORD *)(v24 + 236) = *(_OWORD *)(v0 + 236);
    *(_OWORD *)(v24 + 208) = v26;
    *(_OWORD *)(v24 + 224) = v27;
    *(_OWORD *)(v24 + 192) = v25;
    long long v28 = *(_OWORD *)(v0 + 128);
    long long v29 = *(_OWORD *)(v0 + 144);
    long long v30 = *(_OWORD *)(v0 + 176);
    *(_OWORD *)(v24 + 160) = *(_OWORD *)(v0 + 160);
    *(_OWORD *)(v24 + 176) = v30;
    *(_OWORD *)(v24 + 128) = v28;
    *(_OWORD *)(v24 + 144) = v29;
    long long v31 = *(_OWORD *)(v0 + 64);
    long long v32 = *(_OWORD *)(v0 + 80);
    long long v33 = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v24 + 96) = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v24 + 112) = v33;
    *(_OWORD *)(v24 + 64) = v31;
    *(_OWORD *)(v24 + 80) = v32;
    long long v34 = *(_OWORD *)(v0 + 16);
    long long v35 = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v24 + 32) = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v24 + 48) = v35;
    *(_OWORD *)(v24 + 16) = v34;
    return MEMORY[0x270FA2498](sub_251EEBF0C, 0, 0);
  }
  else
  {
    Swift::Int_optional v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
}

uint64_t sub_251EEBD9C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t StaticRVCClusterGroup.selectAreas(newAreas:)(uint64_t a1)
{
  *(void *)(v2 + 328) = a1;
  long long v3 = v1[13];
  *(_OWORD *)(v2 + 208) = v1[12];
  *(_OWORD *)(v2 + 224) = v3;
  *(_OWORD *)(v2 + 236) = *(_OWORD *)((char *)v1 + 220);
  long long v4 = v1[9];
  *(_OWORD *)(v2 + 144) = v1[8];
  *(_OWORD *)(v2 + 160) = v4;
  long long v5 = v1[11];
  *(_OWORD *)(v2 + 176) = v1[10];
  *(_OWORD *)(v2 + 192) = v5;
  long long v6 = v1[5];
  *(_OWORD *)(v2 + 80) = v1[4];
  *(_OWORD *)(v2 + 96) = v6;
  long long v7 = v1[7];
  *(_OWORD *)(v2 + 112) = v1[6];
  *(_OWORD *)(v2 + 128) = v7;
  long long v8 = v1[1];
  *(_OWORD *)(v2 + 16) = *v1;
  *(_OWORD *)(v2 + 32) = v8;
  long long v9 = v1[3];
  *(_OWORD *)(v2 + 48) = v1[2];
  *(_OWORD *)(v2 + 64) = v9;
  return MEMORY[0x270FA2498](sub_251EEBF0C, 0, 0);
}

uint64_t sub_251EEBF0C()
{
  uint64_t v1 = *(void *)(v0 + 328);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1D8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_251F38650;
  *(_DWORD *)(inited + 32) = 2;
  *(void *)(inited + 40) = v1;
  *(unsigned char *)(inited + 48) = 3;
  unint64_t v3 = sub_251A19C30(inited);
  swift_setDeallocating();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
  swift_arrayDestroy();
  uint64_t v4 = *(void *)(v0 + 16);
  *(void *)(v0 + 336) = v4;
  __int16 v5 = *(_WORD *)(v0 + 24);
  *(_WORD *)(v0 + 252) = v5;
  *(unsigned char *)(v0 + 254) = *(unsigned char *)(v0 + 26);
  sub_251AA4920(v3);
  *(void *)(v0 + 344) = v6;
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F10FC0]), sel_init);
  *(void *)(v0 + 352) = v7;
  unint64_t v8 = sub_251EEC73C(v1);
  sub_251EEC7E4(v8);
  swift_bridgeObjectRelease();
  long long v9 = (void *)sub_251F35AA0();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setNewAreas_, v9);

  sub_251A4DB38(v0 + 16);
  sub_251A1A568(0, &qword_269BA57F0);
  *(void *)(v0 + 312) = v4;
  *(_WORD *)(v0 + 320) = v5;
  *(unsigned char *)(v0 + 322) = 26;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 360) = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_251EEC120;
  return sub_251C4E0D4((uint64_t *)(v0 + 312));
}

uint64_t sub_251EEC120(uint64_t a1)
{
  uint64_t v2 = *(void *)v1 + 16;
  *(void *)(*(void *)v1 + 368) = a1;
  swift_task_dealloc();
  sub_251A81D30(v2);
  return MEMORY[0x270FA2498](sub_251EEC22C, 0, 0);
}

uint64_t sub_251EEC22C()
{
  uint64_t v1 = *(void *)(v0 + 344);
  id v2 = *(id *)(v0 + 352);
  ClusterPath.description.getter();
  sub_251F35800();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 376) = 0x8000000251F68280;
  id v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269B9D6E8
                                                                                             + dword_269B9D6E8);
  unint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 384) = v3;
  *unint64_t v3 = v0;
  v3[1] = sub_251EEC36C;
  uint64_t v4 = *(void *)(v0 + 368);
  uint64_t v5 = *(void *)(v0 + 352);
  return v7(0x72417463656C6573, 0xEB00000000736165, v4, v1, 0xD000000000000016, 0x8000000251F68280, v5);
}

uint64_t sub_251EEC36C()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 368);
  id v2 = *(void **)(*(void *)v0 + 352);
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA2498](sub_251E60568, 0, 0);
}

uint64_t sub_251EEC4D8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_251A3E300(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v9;
    do
    {
      v4 += 4;
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3E300(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_251A3E300(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      *(void *)(v2 + 16) = v6 + 1;
      sub_251A0D578(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_251EEC5F8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_251A3E320(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v9;
    do
    {
      swift_bridgeObjectRetain_n();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ECE0);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3E320(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_251A3E320(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      *(void *)(v2 + 16) = v6 + 1;
      *(void *)(v2 + 8 * v6 + 32) = v8;
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_251EEC73C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
    sub_251F36520();
    uint64_t v4 = a1 + 32;
    do
    {
      v4 += 4;
      sub_251F36D60();
      sub_251F364F0();
      sub_251F36530();
      sub_251F36540();
      sub_251F36500();
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

uint64_t sub_251EEC7E4(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_251F366C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (!v2) {
    return v3;
  }
  uint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t result = sub_251A3E300(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        MEMORY[0x2533AB3A0](i, a1);
        sub_251A1A568(0, (unint64_t *)&qword_269BA04A0);
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_251A3E300(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v7 = *(void *)(v3 + 16);
        unint64_t v6 = *(void *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_251A3E300(v6 > 1, v7 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v7 + 1;
        sub_251A0D578(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      uint64_t v8 = (id *)(a1 + 32);
      sub_251A1A568(0, (unint64_t *)&qword_269BA04A0);
      do
      {
        id v9 = *v8;
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_251A3E300(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v11 = *(void *)(v3 + 16);
        unint64_t v10 = *(void *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_251A3E300(v10 > 1, v11 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v11 + 1;
        sub_251A0D578(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_251EECA48(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_251A3E300(0, v1, 0);
    uint64_t v2 = v9;
    uint64_t v4 = a1 + 64;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3E300(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_251A3E300(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v4 += 96;
      *(void *)(v2 + 16) = v6 + 1;
      sub_251A0D578(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_251EECBC0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_251A3E300(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v9;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3E300(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_251A3E300(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v4 += 24;
      *(void *)(v2 + 16) = v6 + 1;
      sub_251A0D578(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_251EECCF0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticActionSet();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    sub_251A3E5F8(0, v6, 0);
    uint64_t v8 = a1 + 32;
    do
    {
      sub_251A1A4EC(v8, (uint64_t)v12);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF78);
      swift_dynamicCast();
      uint64_t v7 = v13;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3E5F8(0, *(void *)(v7 + 16) + 1, 1);
        uint64_t v7 = v13;
      }
      unint64_t v10 = *(void *)(v7 + 16);
      unint64_t v9 = *(void *)(v7 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_251A3E5F8(v9 > 1, v10 + 1, 1);
        uint64_t v7 = v13;
      }
      *(void *)(v7 + 16) = v10 + 1;
      sub_251EF61F0((uint64_t)v5, v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v10);
      v8 += 40;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_251EECEA4(uint64_t a1)
{
  return sub_251EED03C(a1, (uint64_t (*)(void))type metadata accessor for StaticService, (void (*)(uint64_t))type metadata accessor for StaticService, &qword_269B9E270, (uint64_t)&protocol conformance descriptor for StaticService);
}

uint64_t sub_251EECEEC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    sub_251A3E934(0, v1, 0);
    uint64_t v2 = v13;
    uint64_t v4 = (char *)(a1 + 40);
    do
    {
      uint64_t v5 = *((void *)v4 - 1);
      char v6 = *v4;
      sub_251EBED78(v5, *v4);
      uint64_t v13 = v2;
      unint64_t v8 = *(void *)(v2 + 16);
      unint64_t v7 = *(void *)(v2 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_251A3E934(v7 > 1, v8 + 1, 1);
        uint64_t v2 = v13;
      }
      v4 += 16;
      unint64_t v11 = &type metadata for StaticRVCClusterGroup.Command;
      unint64_t v12 = sub_251C33658();
      *(void *)&long long v10 = v5;
      BYTE8(v10) = v6;
      *(void *)(v2 + 16) = v8 + 1;
      sub_251A1A444(&v10, v2 + 40 * v8 + 32);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_251EECFF4(uint64_t a1)
{
  return sub_251EED03C(a1, type metadata accessor for StaticAccessory, (void (*)(uint64_t))type metadata accessor for StaticAccessory, &qword_269B9E288, (uint64_t)&protocol conformance descriptor for StaticAccessory);
}

uint64_t sub_251EED03C(uint64_t a1, uint64_t (*a2)(void), void (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  v20[1] = a5;
  uint64_t v8 = a2(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)v20 - v10;
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = MEMORY[0x263F8EE78];
  if (v12)
  {
    uint64_t v24 = MEMORY[0x263F8EE78];
    sub_251A3E6EC(0, v12, 0);
    uint64_t v13 = v24;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v15 = *(void *)(v9 + 72);
    do
    {
      sub_251EF60E0(v14, (uint64_t)v11, (uint64_t (*)(void))a3);
      uint64_t v24 = v13;
      unint64_t v17 = *(void *)(v13 + 16);
      unint64_t v16 = *(void *)(v13 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_251A3E6EC(v16 > 1, v17 + 1, 1);
        uint64_t v13 = v24;
      }
      uint64_t v22 = v8;
      uint64_t v23 = sub_251EF6148(a4, a3);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v21);
      sub_251EF60E0((uint64_t)v11, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))a3);
      *(void *)(v13 + 16) = v17 + 1;
      sub_251A1A444(&v21, v13 + 40 * v17 + 32);
      sub_251EF6190((uint64_t)v11, (uint64_t (*)(void))a3);
      v14 += v15;
      --v12;
    }
    while (v12);
  }
  return v13;
}

void *static ServiceArea.Progress.OperationalStatus.allCases.getter()
{
  return &unk_2702629A8;
}

__n128 sub_251EED200@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  unint64_t v5 = *(void *)a1;
  unsigned __int16 v6 = *(_WORD *)(a1 + 8);
  uint64_t ObjectType = swift_getObjectType();
  v53.n128_u64[0] = v5;
  v53.n128_u16[4] = v6;
  v53.n128_u8[10] = 26;
  uint64_t v8 = (*(uint64_t (**)(__n128 *, uint64_t, uint64_t))(a2 + 80))(&v53, ObjectType, a2);
  if ((v8 & 0x100000000) != 0)
  {
    if (qword_26B21ECD0 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_251F350A0();
    __swift_project_value_buffer(v12, (uint64_t)qword_26B21ECB8);
    uint64_t v13 = sub_251F35080();
    os_log_type_t v14 = sub_251F35FB0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315138;
      uint64_t v55 = v16;
      v53.n128_u64[0] = v5;
      v53.n128_u16[4] = v6;
      v53.n128_u8[10] = 26;
      uint64_t v17 = ClusterPath.description.getter();
      v53.n128_u64[0] = sub_251A00E84(v17, v18, &v55);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      uint64_t v19 = "Couldn't get value for feature map attribute '%s'";
LABEL_13:
      _os_log_impl(&dword_2519F3000, v13, v14, v19, v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v16, -1, -1);
      MEMORY[0x2533AC760](v15, -1, -1);

LABEL_15:
      swift_unknownObjectRelease();
      *(_DWORD *)(a3 + 112) = 0;
      result.n128_u64[0] = 0;
      *(_OWORD *)(a3 + 80) = 0u;
      *(_OWORD *)(a3 + 96) = 0u;
      *(_OWORD *)(a3 + 48) = 0u;
      *(_OWORD *)(a3 + 64) = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
      *(_OWORD *)(a3 + 32) = 0u;
      *(_OWORD *)a3 = 0u;
      return result;
    }
LABEL_14:

    goto LABEL_15;
  }
  char v9 = v8;
  v53.n128_u64[0] = v5;
  v53.n128_u16[4] = v6;
  v53.n128_u8[10] = 26;
  uint64_t v10 = sub_251EEDDE0((uint64_t *)&v53, ObjectType, a2);
  if (!v10)
  {
    if (qword_26B21ECD0 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_251F350A0();
    __swift_project_value_buffer(v20, (uint64_t)qword_26B21ECB8);
    uint64_t v13 = sub_251F35080();
    os_log_type_t v14 = sub_251F35FB0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315138;
      uint64_t v55 = v16;
      v53.n128_u64[0] = v5;
      v53.n128_u16[4] = v6;
      v53.n128_u8[10] = 26;
      uint64_t v21 = ClusterPath.description.getter();
      v53.n128_u64[0] = sub_251A00E84(v21, v22, &v55);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      uint64_t v19 = "Failed to fetch supportedAreas %s";
      goto LABEL_13;
    }
    goto LABEL_14;
  }
  uint64_t v11 = v10;
  int v52 = v9 & 2;
  if ((v9 & 4) != 0)
  {
    v53.n128_u64[0] = v5;
    v53.n128_u16[4] = v6;
    v53.n128_u8[10] = 26;
    uint64_t v51 = sub_251EEE1C8((uint64_t *)&v53, ObjectType, a2);
  }
  else
  {
    uint64_t v51 = 0;
  }
  v53.n128_u64[0] = v5;
  v53.n128_u16[4] = v6;
  v53.n128_u8[10] = 26;
  uint64_t v47 = sub_251EEE588((uint64_t *)&v53, ObjectType, a2);
  v53.n128_u64[0] = v5;
  v53.n128_u16[4] = v6;
  v53.n128_u8[10] = 26;
  unint64_t v24 = sub_251EEE7EC((uint64_t *)&v53, ObjectType, a2, 3, "Couldn't decode currentAreaID from value '%s'");
  v53.n128_u64[0] = v5;
  v53.n128_u16[4] = v6;
  v53.n128_u8[10] = 26;
  unint64_t v50 = sub_251EEE7EC((uint64_t *)&v53, ObjectType, a2, 4, "Couldn't decode estimatedEndTime from value '%s'");
  if ((v9 & 2) != 0)
  {
    v53.n128_u64[0] = v5;
    v53.n128_u16[4] = v6;
    v53.n128_u8[10] = 26;
    uint64_t v49 = sub_251EEEA74((uint64_t *)&v53, ObjectType, a2);
  }
  else
  {
    uint64_t v49 = 0;
  }
  v53.n128_u64[0] = v5;
  v53.n128_u16[4] = v6;
  v53.n128_u8[10] = 26;
  uint64_t v25 = (*(uint64_t (**)(__n128 *, uint64_t, uint64_t))(a2 + 96))(&v53, ObjectType, a2);
  if ((v9 & 2) != 0)
  {
    uint64_t v27 = v47;
    if ((v24 & 0x100000000) != 0)
    {
      swift_bridgeObjectRelease();
      int v26 = 0;
      if (!v47)
      {
LABEL_30:
        uint64_t v29 = 0;
        goto LABEL_31;
      }
    }
    else
    {
      char v30 = sub_251D81EDC(2, v25);
      swift_bridgeObjectRelease();
      if (v30) {
        int v26 = 0x1000000;
      }
      else {
        int v26 = 0;
      }
      if (!v47) {
        goto LABEL_30;
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    int v26 = 0;
    uint64_t v27 = v47;
    if (!v47) {
      goto LABEL_30;
    }
  }
  uint64_t v28 = swift_bridgeObjectRetain();
  uint64_t v29 = sub_251E62C80(v28, v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_31:
  uint64_t v31 = *(void *)(v11 + 16);
  int v46 = v9 & 1;
  int v48 = v26;
  int v45 = v9 & 4;
  if (v31)
  {
    long long v32 = (unsigned __int8 *)(v11 + 72);
    uint64_t v33 = 1;
    while ((v24 & 0x100000000) != 0 || *((_DWORD *)v32 - 10) != v24)
    {
      v32 += 48;
      if (!--v31)
      {
        uint64_t v34 = 0;
        uint64_t v35 = 0;
        uint64_t v36 = 0;
        unint64_t v43 = 0;
        uint64_t v37 = 0;
        goto LABEL_45;
      }
    }
    uint64_t v34 = *((void *)v32 - 5);
    uint64_t v35 = *(v32 - 32);
    uint64_t v36 = *((void *)v32 - 3);
    uint64_t v33 = *((void *)v32 - 2);
    uint64_t v37 = *v32;
    uint64_t v38 = 0x10000;
    if (!*(v32 - 6)) {
      uint64_t v38 = 0;
    }
    unint64_t v39 = v38 | *((unsigned __int16 *)v32 - 4) | ((unint64_t)*(v32 - 5) << 24);
    uint64_t v40 = 0x100000000;
    if (!*(v32 - 4)) {
      uint64_t v40 = 0;
    }
    unint64_t v41 = v39 | v40 | ((unint64_t)*(v32 - 3) << 40);
    uint64_t v42 = 0x1000000000000;
    if (!*(v32 - 2)) {
      uint64_t v42 = 0;
    }
    unint64_t v43 = v41 | v42 | ((unint64_t)*(v32 - 1) << 56);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v34 = 0;
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    unint64_t v43 = 0;
    uint64_t v37 = 0;
    uint64_t v33 = 1;
  }
LABEL_45:
  sub_251EF0BB8(v29, v51, &v53);
  swift_unknownObjectRelease();
  uint64_t v44 = v54;
  __n128 result = v53;
  *(void *)a3 = v11;
  *(void *)(a3 + 8) = v51;
  *(void *)(a3 + 16) = v29;
  *(__n128 *)(a3 + 24) = result;
  *(void *)(a3 + 40) = v44;
  *(void *)(a3 + 48) = v34;
  *(void *)(a3 + 56) = v35;
  *(void *)(a3 + 64) = v36;
  *(void *)(a3 + 72) = v33;
  *(void *)(a3 + 80) = v43;
  *(void *)(a3 + 88) = v37 | (v50 << 32);
  *(void *)(a3 + 96) = HIDWORD(v50) & 1;
  *(void *)(a3 + 104) = v49;
  *(_DWORD *)(a3 + 112) = v48 | v46 | (v52 << 7) | (v45 << 14);
  return result;
}

uint64_t ServiceArea.map(for:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 8);
  if (v3 && (uint64_t v4 = *(void *)(v3 + 16)) != 0)
  {
    unint64_t v5 = (void *)(v3 + 48);
    while (*((_DWORD *)v5 - 4) != result)
    {
      v5 += 3;
      if (!--v4) {
        goto LABEL_6;
      }
    }
    uint64_t v7 = *(v5 - 1);
    uint64_t v6 = *v5;
    *a2 = result;
    a2[1] = v7;
    a2[2] = v6;
    return swift_bridgeObjectRetain();
  }
  else
  {
LABEL_6:
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
  return result;
}

uint64_t ServiceArea.supportedAreas(for:)(int *a1)
{
  return ServiceArea.supportedAreas(for:)(*a1);
}

uint64_t ServiceArea.validAreas.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 16);
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = 0;
  uint64_t v4 = MEMORY[0x263F8EE78];
  uint64_t v16 = v1;
  do
  {
    uint64_t v5 = v1 + v3;
    uint64_t v6 = *(void *)(v1 + v3 + 56);
    if (v6)
    {
      uint64_t v7 = *(void *)(v5 + 32);
      char v8 = *(unsigned char *)(v5 + 40);
      uint64_t v9 = *(void *)(v5 + 48);
      __int16 v10 = *(_WORD *)(v5 + 64);
      char v11 = *(unsigned char *)(v5 + 66);
      char v21 = *(unsigned char *)(v5 + 68);
      char v22 = *(unsigned char *)(v5 + 67);
      char v19 = *(unsigned char *)(v5 + 70);
      char v20 = *(unsigned char *)(v5 + 69);
      char v17 = *(unsigned char *)(v5 + 72);
      char v18 = *(unsigned char *)(v5 + 71);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_251A3E220(0, *(void *)(v4 + 16) + 1, 1);
      }
      unint64_t v13 = *(void *)(v4 + 16);
      unint64_t v12 = *(void *)(v4 + 24);
      if (v13 >= v12 >> 1) {
        sub_251A3E220(v12 > 1, v13 + 1, 1);
      }
      *(void *)(v4 + 16) = v13 + 1;
      uint64_t v14 = v4 + 48 * v13;
      *(void *)(v14 + 32) = v7;
      *(unsigned char *)(v14 + 40) = v8;
      *(void *)(v14 + 48) = v9;
      *(void *)(v14 + 56) = v6;
      *(_WORD *)(v14 + 64) = v10;
      *(unsigned char *)(v14 + 66) = v11;
      *(unsigned char *)(v14 + 67) = v22;
      *(unsigned char *)(v14 + 68) = v21;
      *(unsigned char *)(v14 + 69) = v20;
      *(unsigned char *)(v14 + 70) = v19;
      *(unsigned char *)(v14 + 71) = v18;
      *(unsigned char *)(v14 + 72) = v17;
      uint64_t v1 = v16;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v3 += 48;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v4;
}

HomeDataModel::ServiceArea::Progress::OperationalStatus_optional __swiftcall ServiceArea.Progress.OperationalStatus.init(rawValue:)(HomeDataModel::ServiceArea::Progress::OperationalStatus_optional rawValue)
{
  HomeDataModel::ServiceArea::Progress::OperationalStatus value = rawValue.value;
  if ((rawValue.value & 0xFC) != 0) {
    HomeDataModel::ServiceArea::Progress::OperationalStatus value = HomeDataModel_ServiceArea_Progress_OperationalStatus_unknownDefault;
  }
  *uint64_t v1 = value;
  return rawValue;
}

void sub_251EEDAF4(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_areaID);
  unsigned int v5 = objc_msgSend(v4, sel_unsignedIntValue);

  id v6 = objc_msgSend(a1, sel_mapID);
  uint64_t v7 = v6;
  if (v6)
  {
    unsigned int v8 = objc_msgSend(v6, sel_unsignedIntValue);
  }
  else
  {
    unsigned int v8 = 0;
  }
  id v9 = objc_msgSend(a1, sel_areaInfo);
  id v10 = objc_msgSend(v9, sel_locationInfo);

  if (v10)
  {
    id v11 = objc_msgSend(v10, sel_locationName);
    uint64_t v12 = sub_251F356F0();
    uint64_t v33 = v13;
    uint64_t v34 = v12;

    id v14 = objc_msgSend(v10, sel_floorNumber);
    BOOL v32 = v14 == 0;
    if (v14)
    {
      uint64_t v15 = v14;
      unsigned __int16 v31 = (unsigned __int16)objc_msgSend(v14, sel_shortValue);
    }
    else
    {
      unsigned __int16 v31 = 0;
    }
    id v16 = objc_msgSend(v10, sel_areaType);
    if (v16)
    {
      char v17 = v16;
      unsigned __int8 v30 = objc_msgSend(v16, sel_unsignedCharValue);

      char v29 = 0;
    }
    else
    {
      char v29 = 1;
      unsigned __int8 v30 = 0;
    }
  }
  else
  {
    unsigned __int8 v30 = 0;
    unsigned __int16 v31 = 0;
    uint64_t v33 = 0;
    uint64_t v34 = 0;
    char v29 = 1;
    BOOL v32 = 1;
  }
  id v18 = objc_msgSend(a1, sel_areaInfo);
  id v19 = objc_msgSend(v18, sel_landmarkInfo);

  if (v19)
  {
    uint64_t v28 = v7;
    unsigned int v20 = v8;
    unsigned int v21 = v5;
    id v22 = objc_msgSend(v19, sel_landmarkTag);
    unsigned __int8 v23 = objc_msgSend(v22, sel_unsignedCharValue);

    id v24 = objc_msgSend(v19, sel_relativePositionTag);
    BOOL v25 = v24 == 0;
    if (v24)
    {
      int v26 = v24;
      unsigned __int8 v27 = objc_msgSend(v24, (SEL)&off_26536F050 + 7);
    }
    else
    {
      unsigned __int8 v27 = 0;
    }
    unsigned int v5 = v21;

    unsigned int v8 = v20;
    uint64_t v7 = v28;
  }
  else
  {
    unsigned __int8 v27 = 0;
    unsigned __int8 v23 = 0;
    BOOL v25 = 1;
  }

  *(_DWORD *)a2 = v5;
  *(_DWORD *)(a2 + 4) = v8;
  *(unsigned char *)(a2 + 8) = v7 == 0;
  *(void *)(a2 + 16) = v34;
  *(void *)(a2 + 24) = v33;
  *(_WORD *)(a2 + 32) = v31;
  *(unsigned char *)(a2 + 34) = v32;
  *(unsigned char *)(a2 + 35) = v30;
  *(unsigned char *)(a2 + 36) = v29;
  *(unsigned char *)(a2 + 37) = v23;
  *(unsigned char *)(a2 + 38) = v19 == 0;
  *(unsigned char *)(a2 + 39) = v27;
  *(unsigned char *)(a2 + 40) = v25;
}

uint64_t sub_251EEDDE0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  __int16 v3 = *((_WORD *)a1 + 4);
  char v4 = *((unsigned char *)a1 + 10);
  uint64_t v39 = *a1;
  __int16 v40 = v3;
  char v41 = v4;
  (*(void (**)(void *__return_ptr, uint64_t *, void, uint64_t))(a3 + 48))(v53, &v39, 0, a2);
  sub_251AA82A4((uint64_t)v53, (uint64_t)&v39);
  if (!*((void *)&v42 + 1))
  {
    sub_251A9090C((uint64_t)&v39);
    goto LABEL_16;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA59A8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    if (qword_26B21ECD0 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_251F350A0();
    __swift_project_value_buffer(v25, (uint64_t)qword_26B21ECB8);
    sub_251AA82A4((uint64_t)v53, (uint64_t)&v39);
    int v26 = sub_251F35080();
    os_log_type_t v27 = sub_251F35FB0();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v52 = v29;
      *(_DWORD *)uint64_t v28 = 136315138;
      sub_251AA82A4((uint64_t)&v39, (uint64_t)v51);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E190);
      uint64_t v30 = sub_251F35790();
      v51[0] = sub_251A00E84(v30, v31, &v52);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      sub_251A9090C((uint64_t)&v39);
      _os_log_impl(&dword_2519F3000, v26, v27, "Couldn't create [MTRServiceAreaClusterAreaStruct] from value '%s'", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v29, -1, -1);
      MEMORY[0x2533AC760](v28, -1, -1);
    }
    else
    {

      sub_251A9090C((uint64_t)&v39);
    }
    sub_251A9090C((uint64_t)v53);
    return 0;
  }
  unint64_t v5 = v51[0];
  if (v51[0] >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_251F366C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v51[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v7 = MEMORY[0x263F8EE78];
  if (!v6)
  {
LABEL_22:
    sub_251A9090C((uint64_t)v53);
    swift_bridgeObjectRelease();
    return v7;
  }
  v51[0] = MEMORY[0x263F8EE78];
  uint64_t result = sub_251A3E220(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = 0;
    unint64_t v7 = v51[0];
    unint64_t v36 = v5 & 0xC000000000000001;
    uint64_t v37 = v6;
    unint64_t v38 = v5;
    do
    {
      if (v36) {
        id v10 = (id)MEMORY[0x2533AB3A0](v9, v5);
      }
      else {
        id v10 = *(id *)(v5 + 8 * v9 + 32);
      }
      sub_251EEDAF4(v10, (uint64_t)&v39);
      uint64_t v11 = v39;
      char v12 = v40;
      long long v13 = v42;
      __int16 v14 = v43;
      char v15 = v44;
      char v16 = v45;
      char v17 = v46;
      char v18 = v47;
      char v19 = v48;
      unint64_t v21 = *(void *)(v7 + 16);
      unint64_t v20 = *(void *)(v7 + 24);
      char v22 = v49;
      char v23 = v50;
      v51[0] = v7;
      if (v21 >= v20 >> 1)
      {
        long long v35 = v42;
        char v33 = v47;
        char v34 = v46;
        char v32 = v48;
        sub_251A3E220(v20 > 1, v21 + 1, 1);
        char v19 = v32;
        char v18 = v33;
        char v17 = v34;
        long long v13 = v35;
        unint64_t v7 = v51[0];
      }
      *(void *)(v7 + 16) = v21 + 1;
      unint64_t v24 = v7 + 48 * v21;
      *(void *)(v24 + 32) = v11;
      ++v9;
      *(unsigned char *)(v24 + 40) = v12;
      *(_OWORD *)(v24 + 48) = v13;
      *(_WORD *)(v24 + 64) = v14;
      *(unsigned char *)(v24 + 66) = v15;
      *(unsigned char *)(v24 + 67) = v16;
      *(unsigned char *)(v24 + 68) = v17;
      *(unsigned char *)(v24 + 69) = v18;
      *(unsigned char *)(v24 + 70) = v19;
      *(unsigned char *)(v24 + 71) = v22;
      *(unsigned char *)(v24 + 72) = v23;
      unint64_t v5 = v38;
    }
    while (v37 != v9);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_251EEE1C8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  __int16 v3 = *((_WORD *)a1 + 4);
  char v4 = *((unsigned char *)a1 + 10);
  uint64_t v30 = *a1;
  __int16 v31 = v3;
  char v32 = v4;
  (*(void (**)(void *__return_ptr, uint64_t *, uint64_t, uint64_t))(a3 + 48))(v34, &v30, 1, a2);
  sub_251AA82A4((uint64_t)v34, (uint64_t)&v30);
  if (!v33)
  {
    sub_251A9090C((uint64_t)&v30);
    goto LABEL_16;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5998);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    if (qword_26B21ECD0 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_251F350A0();
    __swift_project_value_buffer(v21, (uint64_t)qword_26B21ECB8);
    sub_251AA82A4((uint64_t)v34, (uint64_t)&v30);
    char v22 = sub_251F35080();
    os_log_type_t v23 = sub_251F35FB0();
    if (os_log_type_enabled(v22, v23))
    {
      unint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v29 = v25;
      *(_DWORD *)unint64_t v24 = 136315138;
      sub_251AA82A4((uint64_t)&v30, (uint64_t)v28);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E190);
      uint64_t v26 = sub_251F35790();
      v28[0] = sub_251A00E84(v26, v27, &v29);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      sub_251A9090C((uint64_t)&v30);
      _os_log_impl(&dword_2519F3000, v22, v23, "Couldn't create [MTRServiceAreaClusterMapStruct] from value '%s'", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v25, -1, -1);
      MEMORY[0x2533AC760](v24, -1, -1);
    }
    else
    {

      sub_251A9090C((uint64_t)&v30);
    }
    sub_251A9090C((uint64_t)v34);
    return 0;
  }
  unint64_t v5 = v28[0];
  if (v28[0] >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_251F366C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v28[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (!v6)
  {
LABEL_22:
    sub_251A9090C((uint64_t)v34);
    swift_bridgeObjectRelease();
    return v7;
  }
  uint64_t v30 = MEMORY[0x263F8EE78];
  uint64_t result = sub_251A3E240(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = 0;
    uint64_t v7 = v30;
    do
    {
      if ((v5 & 0xC000000000000001) != 0) {
        id v10 = (id)MEMORY[0x2533AB3A0](v9, v5);
      }
      else {
        id v10 = *(id *)(v5 + 8 * v9 + 32);
      }
      uint64_t v11 = v10;
      id v12 = objc_msgSend(v10, sel_mapID);
      unsigned int v13 = objc_msgSend(v12, sel_unsignedIntValue);

      id v14 = objc_msgSend(v11, sel_name);
      uint64_t v15 = sub_251F356F0();
      uint64_t v17 = v16;

      uint64_t v30 = v7;
      unint64_t v19 = *(void *)(v7 + 16);
      unint64_t v18 = *(void *)(v7 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_251A3E240(v18 > 1, v19 + 1, 1);
        uint64_t v7 = v30;
      }
      *(void *)(v7 + 16) = v19 + 1;
      uint64_t v20 = v7 + 24 * v19;
      *(_DWORD *)(v20 + 32) = v13;
      ++v9;
      *(void *)(v20 + 40) = v15;
      *(void *)(v20 + 48) = v17;
    }
    while (v6 != v9);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_251EEE588(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  __int16 v3 = *((_WORD *)a1 + 4);
  char v4 = *((unsigned char *)a1 + 10);
  uint64_t v16 = *a1;
  __int16 v17 = v3;
  char v18 = v4;
  (*(void (**)(void *__return_ptr, uint64_t *, uint64_t, uint64_t))(a3 + 48))(v20, &v16, 2, a2);
  sub_251AA82A4((uint64_t)v20, (uint64_t)&v16);
  if (v19)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CDD0);
    if (swift_dynamicCast())
    {
      uint64_t v5 = v14[0];
      sub_251A9090C((uint64_t)v20);
      return v5;
    }
  }
  else
  {
    sub_251A9090C((uint64_t)&v16);
  }
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_251F350A0();
  __swift_project_value_buffer(v6, (uint64_t)qword_26B21ECB8);
  sub_251AA82A4((uint64_t)v20, (uint64_t)&v16);
  uint64_t v7 = sub_251F35080();
  os_log_type_t v8 = sub_251F35FB0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    sub_251AA82A4((uint64_t)&v16, (uint64_t)v14);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E190);
    uint64_t v11 = sub_251F35790();
    v14[0] = sub_251A00E84(v11, v12, &v15);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    sub_251A9090C((uint64_t)&v16);
    _os_log_impl(&dword_2519F3000, v7, v8, "Couldn't decode selectedAreaIDs from value '%s'", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v10, -1, -1);
    MEMORY[0x2533AC760](v9, -1, -1);
  }
  else
  {

    sub_251A9090C((uint64_t)&v16);
  }
  sub_251A9090C((uint64_t)v20);
  return 0;
}

unint64_t sub_251EEE7EC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, const char *a5)
{
  __int16 v6 = *((_WORD *)a1 + 4);
  char v7 = *((unsigned char *)a1 + 10);
  uint64_t v20 = *a1;
  __int16 v21 = v6;
  char v22 = v7;
  (*(void (**)(void *__return_ptr, uint64_t *, uint64_t, uint64_t, uint64_t))(a3 + 72))(v24, &v20, a4, a2, a3);
  sub_251AA82A4((uint64_t)v24, (uint64_t)&v20);
  if (v23)
  {
    if (swift_dynamicCast())
    {
      uint64_t v8 = LODWORD(v18[0]);
      sub_251A9090C((uint64_t)v24);
      unsigned __int8 v9 = 0;
      return v8 | ((unint64_t)v9 << 32);
    }
  }
  else
  {
    sub_251A9090C((uint64_t)&v20);
  }
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_251F350A0();
  __swift_project_value_buffer(v10, (uint64_t)qword_26B21ECB8);
  sub_251AA82A4((uint64_t)v24, (uint64_t)&v20);
  uint64_t v11 = sub_251F35080();
  os_log_type_t v12 = sub_251F35FB0();
  if (os_log_type_enabled(v11, v12))
  {
    unsigned int v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v19 = v14;
    *(_DWORD *)unsigned int v13 = 136315138;
    sub_251AA82A4((uint64_t)&v20, (uint64_t)v18);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E190);
    uint64_t v15 = sub_251F35790();
    v18[0] = sub_251A00E84(v15, v16, &v19);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    sub_251A9090C((uint64_t)&v20);
    _os_log_impl(&dword_2519F3000, v11, v12, a5, v13, 0xCu);
    unsigned __int8 v9 = 1;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v14, -1, -1);
    MEMORY[0x2533AC760](v13, -1, -1);

    sub_251A9090C((uint64_t)v24);
    uint64_t v8 = 0;
  }
  else
  {

    sub_251A9090C((uint64_t)&v20);
    sub_251A9090C((uint64_t)v24);
    uint64_t v8 = 0;
    unsigned __int8 v9 = 1;
  }
  return v8 | ((unint64_t)v9 << 32);
}

uint64_t sub_251EEEA74(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  __int16 v3 = *((_WORD *)a1 + 4);
  char v4 = *((unsigned char *)a1 + 10);
  uint64_t v43 = *a1;
  __int16 v44 = v3;
  char v45 = v4;
  (*(void (**)(void *__return_ptr, uint64_t *, uint64_t, uint64_t))(a3 + 48))(v47, &v43, 5, a2);
  sub_251AA82A4((uint64_t)v47, (uint64_t)&v43);
  if (!v46)
  {
    sub_251A9090C((uint64_t)&v43);
    goto LABEL_30;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA59A0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_30:
    if (qword_26B21ECD0 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_251F350A0();
    __swift_project_value_buffer(v30, (uint64_t)qword_26B21ECB8);
    sub_251AA82A4((uint64_t)v47, (uint64_t)&v43);
    __int16 v31 = sub_251F35080();
    os_log_type_t v32 = sub_251F35FB0();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      uint64_t v42 = v34;
      *(_DWORD *)uint64_t v33 = 136315138;
      sub_251AA82A4((uint64_t)&v43, (uint64_t)v41);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E190);
      uint64_t v35 = sub_251F35790();
      v41[0] = sub_251A00E84(v35, v36, &v42);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      sub_251A9090C((uint64_t)&v43);
      _os_log_impl(&dword_2519F3000, v31, v32, "Couldn't create [MTRServiceAreaClusterProgressStruct] from value '%s'", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v34, -1, -1);
      MEMORY[0x2533AC760](v33, -1, -1);
    }
    else
    {

      sub_251A9090C((uint64_t)&v43);
    }
    sub_251A9090C((uint64_t)v47);
    return 0;
  }
  unint64_t v5 = v41[0];
  if (v41[0] >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_251F366C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v41[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (!v6)
  {
LABEL_36:
    sub_251A9090C((uint64_t)v47);
    swift_bridgeObjectRelease();
    return v7;
  }
  uint64_t v43 = MEMORY[0x263F8EE78];
  uint64_t result = sub_251A3E260(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = 0;
    uint64_t v7 = v43;
    unint64_t v37 = v41[0] & 0xC000000000000001;
    uint64_t v38 = v6;
    uint64_t v10 = &off_26536F000;
    unint64_t v39 = v41[0];
    do
    {
      if (v37) {
        id v11 = (id)MEMORY[0x2533AB3A0](v9, v5);
      }
      else {
        id v11 = *(id *)(v5 + 8 * v9 + 32);
      }
      os_log_type_t v12 = v11;
      id v13 = objc_msgSend(v11, sel_areaID);
      unsigned int v40 = [v13 (SEL)v10[325]];

      uint64_t v14 = objc_msgSend(v12, sel_status);
      unsigned int v15 = [v14 unsignedCharValue];
      if (v15 >= 4)
      {
        if (qword_26B21ECD0 != -1) {
          swift_once();
        }
        uint64_t v17 = sub_251F350A0();
        __swift_project_value_buffer(v17, (uint64_t)qword_26B21ECB8);
        char v18 = v14;
        uint64_t v14 = sub_251F35080();
        os_log_type_t v19 = sub_251F35FC0();
        if (os_log_type_enabled(v14, v19))
        {
          uint64_t v20 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v20 = 16777472;
          void v20[4] = [v18 unsignedCharValue];

          _os_log_impl(&dword_2519F3000, v14, v19, "Couldn't create MTRServiceAreaOperationalStatus from value '%hhu'", v20, 5u);
          MEMORY[0x2533AC760](v20, -1, -1);
        }
        else
        {

          uint64_t v14 = v18;
        }

        char v16 = 0;
      }
      else
      {
        char v16 = v15;
      }

      id v21 = objc_msgSend(v12, sel_totalOperationalTime);
      char v22 = v21;
      if (v21)
      {
        unsigned int v23 = [v21 (SEL)v10[325]];
      }
      else
      {
        unsigned int v23 = 0;
      }
      id v24 = objc_msgSend(v12, sel_estimatedTime);
      uint64_t v25 = v24;
      if (v24)
      {
        unsigned int v26 = [v24 (SEL)v10[325]];
      }
      else
      {
        unsigned int v26 = 0;
      }

      uint64_t v43 = v7;
      unint64_t v28 = *(void *)(v7 + 16);
      unint64_t v27 = *(void *)(v7 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_251A3E260(v27 > 1, v28 + 1, 1);
        uint64_t v7 = v43;
      }
      *(void *)(v7 + 16) = v28 + 1;
      uint64_t v29 = v7 + 24 * v28;
      *(_DWORD *)(v29 + 32) = v40;
      *(unsigned char *)(v29 + 36) = v16;
      ++v9;
      *(_DWORD *)(v29 + 40) = v23;
      *(unsigned char *)(v29 + 44) = v22 == 0;
      *(_DWORD *)(v29 + 48) = v26;
      *(unsigned char *)(v29 + 52) = v25 == 0;
      unint64_t v5 = v39;
      uint64_t v10 = &off_26536F000;
    }
    while (v38 != v9);
    goto LABEL_36;
  }
  __break(1u);
  return result;
}

uint64_t ServiceArea.Progress.OperationalStatus.rawValue.getter()
{
  return *v0;
}

HomeDataModel::ServiceArea::Progress::OperationalStatus_optional sub_251EEEFE8(Swift::UInt8 *a1)
{
  return ServiceArea.Progress.OperationalStatus.init(rawValue:)(*a1);
}

void sub_251EEEFF0(void *a1@<X8>)
{
  *a1 = &unk_270264F50;
}

uint64_t sub_251EEF000()
{
  return sub_251F35A60();
}

uint64_t sub_251EEF060()
{
  return sub_251F35A00();
}

uint64_t ServiceArea.Progress.id.getter()
{
  return *v0;
}

void ServiceArea.Progress.status.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 4);
}

unint64_t ServiceArea.Progress.totalOperationalTime.getter()
{
  return *(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned __int8 *)(v0 + 12) << 32);
}

unint64_t ServiceArea.Progress.estimatedTime.getter()
{
  return *(unsigned int *)(v0 + 16) | ((unint64_t)*(unsigned __int8 *)(v0 + 20) << 32);
}

double ServiceArea.Progress.currentProgress.getter()
{
  double result = 0.0;
  if ((*(unsigned char *)(v0 + 12) & 1) == 0 && (*(unsigned char *)(v0 + 20) & 1) == 0) {
    return (double)*(unsigned int *)(v0 + 8) / (double)*(unsigned int *)(v0 + 16);
  }
  return result;
}

uint64_t ServiceArea.Progress.hash(into:)()
{
  int v1 = *(unsigned __int8 *)(v0 + 12);
  int v2 = *(unsigned __int8 *)(v0 + 20);
  sub_251F36CE0();
  sub_251F36CC0();
  if (v1 == 1)
  {
    sub_251F36CC0();
    if (!v2)
    {
LABEL_3:
      sub_251F36CC0();
      return sub_251F36CE0();
    }
  }
  else
  {
    sub_251F36CC0();
    sub_251F36CE0();
    if (!v2) {
      goto LABEL_3;
    }
  }
  return sub_251F36CC0();
}

unint64_t sub_251EEF1D0()
{
  unint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x737574617473;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0x6574616D69747365;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251EEF260@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251EF5660(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251EEF288(uint64_t a1)
{
  unint64_t v2 = sub_251EF3EDC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251EEF2C4(uint64_t a1)
{
  unint64_t v2 = sub_251EF3EDC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ServiceArea.Progress.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA57F8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *(unsigned __int8 *)(v1 + 4);
  uint64_t v15 = *(unsigned int *)(v1 + 8);
  int v14 = *(unsigned __int8 *)(v1 + 12);
  uint64_t v13 = *(unsigned int *)(v1 + 16);
  int v12 = *(unsigned __int8 *)(v1 + 20);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251EF3EDC();
  sub_251F36DA0();
  char v23 = 0;
  sub_251F36A60();
  if (!v2)
  {
    char v8 = v14;
    char v9 = v12;
    char v22 = v16;
    char v21 = 1;
    sub_251EF3F30();
    sub_251F36A20();
    char v20 = 2;
    char v18 = v8;
    sub_251F369B0();
    char v19 = 3;
    char v17 = v9;
    sub_251F369B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ServiceArea.Progress.hashValue.getter()
{
  int v1 = *(unsigned __int8 *)(v0 + 12);
  int v2 = *(unsigned __int8 *)(v0 + 20);
  sub_251F36CA0();
  sub_251F36CE0();
  sub_251F36CC0();
  if (v1 != 1)
  {
    sub_251F36CC0();
    sub_251F36CE0();
    if (!v2) {
      goto LABEL_3;
    }
LABEL_5:
    sub_251F36CC0();
    return sub_251F36D00();
  }
  sub_251F36CC0();
  if (v2) {
    goto LABEL_5;
  }
LABEL_3:
  sub_251F36CC0();
  sub_251F36CE0();
  return sub_251F36D00();
}

uint64_t ServiceArea.Progress.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5810);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251EF3EDC();
  sub_251F36D90();
  if (!v2)
  {
    char v20 = 0;
    int v9 = sub_251F368C0();
    char v18 = 1;
    sub_251EF3F84();
    sub_251F36880();
    int v10 = v19;
    char v17 = 2;
    uint64_t v14 = sub_251F36810();
    int v15 = v10;
    char v16 = 3;
    uint64_t v12 = sub_251F36810();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_DWORD *)a2 = v9;
    *(unsigned char *)(a2 + 4) = v15;
    char v13 = BYTE4(v14);
    *(_DWORD *)(a2 + 8) = v14;
    *(unsigned char *)(a2 + 12) = v13 & 1;
    *(_DWORD *)(a2 + 16) = v12;
    *(unsigned char *)(a2 + 20) = BYTE4(v12) & 1;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_251EEF828()
{
  int v1 = *(unsigned __int8 *)(v0 + 12);
  int v2 = *(unsigned __int8 *)(v0 + 20);
  sub_251F36CA0();
  sub_251F36CE0();
  sub_251F36CC0();
  if (v1 != 1)
  {
    sub_251F36CC0();
    sub_251F36CE0();
    if (!v2) {
      goto LABEL_3;
    }
LABEL_5:
    sub_251F36CC0();
    return sub_251F36D00();
  }
  sub_251F36CC0();
  if (v2) {
    goto LABEL_5;
  }
LABEL_3:
  sub_251F36CC0();
  sub_251F36CE0();
  return sub_251F36D00();
}

uint64_t sub_251EEF900@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ServiceArea.Progress.init(from:)(a1, a2);
}

uint64_t sub_251EEF918(void *a1)
{
  return ServiceArea.Progress.encode(to:)(a1);
}

uint64_t ServiceArea.Area.id.getter()
{
  return *v0;
}

unint64_t ServiceArea.Area.mapID.getter()
{
  return *(unsigned int *)(v0 + 4) | ((unint64_t)*(unsigned __int8 *)(v0 + 8) << 32);
}

uint64_t ServiceArea.Area.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServiceArea.Area.floor.getter()
{
  return *(unsigned __int16 *)(v0 + 32) | (*(unsigned __int8 *)(v0 + 34) << 16);
}

uint64_t ServiceArea.Area.areaType.getter()
{
  return *(unsigned __int8 *)(v0 + 35) | (*(unsigned __int8 *)(v0 + 36) << 8);
}

uint64_t ServiceArea.Area.landmarkTag.getter()
{
  return *(unsigned __int8 *)(v0 + 37) | (*(unsigned __int8 *)(v0 + 38) << 8);
}

uint64_t ServiceArea.Area.relativePositionTag.getter()
{
  return *(unsigned __int8 *)(v0 + 39) | (*(unsigned __int8 *)(v0 + 40) << 8);
}

uint64_t ServiceArea.Area.hash(into:)()
{
  int v1 = *(unsigned __int8 *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 24);
  int v3 = *(unsigned __int8 *)(v0 + 34);
  char v4 = *(unsigned char *)(v0 + 36);
  char v5 = *(unsigned char *)(v0 + 38);
  char v6 = *(unsigned char *)(v0 + 40);
  sub_251F36CE0();
  if (v1 == 1)
  {
    sub_251F36CC0();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    sub_251F36CC0();
    sub_251F36CE0();
    if (v2)
    {
LABEL_3:
      sub_251F36CC0();
      swift_bridgeObjectRetain();
      sub_251F357B0();
      swift_bridgeObjectRelease();
      if (v3) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  sub_251F36CC0();
  if (v3)
  {
LABEL_4:
    sub_251F36CC0();
    if (v4) {
      goto LABEL_9;
    }
    goto LABEL_5;
  }
LABEL_8:
  sub_251F36CC0();
  sub_251F36CD0();
  if ((v4 & 1) == 0) {
LABEL_5:
  }
    sub_251F36CC0();
LABEL_9:
  sub_251F36CC0();
  if ((v5 & 1) == 0)
  {
    sub_251F36CC0();
    sub_251F36CC0();
    if (v6) {
      return sub_251F36CC0();
    }
    goto LABEL_11;
  }
  sub_251F36CC0();
  if ((v6 & 1) == 0) {
LABEL_11:
  }
    sub_251F36CC0();
  return sub_251F36CC0();
}

unint64_t sub_251EEFB44(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x444970616DLL;
      break;
    case 2:
      unint64_t result = 1701667182;
      break;
    case 3:
      unint64_t result = 0x726F6F6C66;
      break;
    case 4:
      unint64_t result = 0x6570795461657261;
      break;
    case 5:
      unint64_t result = 0x6B72616D646E616CLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_251EEFC1C()
{
  return sub_251EEFB44(*v0);
}

uint64_t sub_251EEFC24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251EF5818(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251EEFC4C(uint64_t a1)
{
  unint64_t v2 = sub_251EF3FD8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251EEFC88(uint64_t a1)
{
  unint64_t v2 = sub_251EF3FD8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ServiceArea.Area.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5820);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(unsigned int *)(v1 + 4);
  int v13 = *(unsigned __int8 *)(v1 + 8);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v12 = v7;
  LODWORD(v5) = *(unsigned __int8 *)(v1 + 34);
  v10[6] = *(unsigned __int16 *)(v1 + 32);
  v10[7] = v5;
  LODWORD(v7) = *(unsigned __int8 *)(v1 + 35);
  v10[4] = *(unsigned __int8 *)(v1 + 36);
  v10[5] = v7;
  LODWORD(v7) = *(unsigned __int8 *)(v1 + 37);
  v10[2] = *(unsigned __int8 *)(v1 + 38);
  v10[3] = v7;
  v10[1] = *(unsigned __int8 *)(v1 + 39);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251EF3FD8();
  sub_251F36DA0();
  char v23 = 0;
  uint64_t v8 = v15;
  sub_251F36A60();
  if (!v8)
  {
    char v22 = 1;
    char v20 = v13;
    sub_251F369B0();
    char v21 = 2;
    sub_251F36910();
    char v19 = 3;
    sub_251F36980();
    char v18 = 4;
    sub_251F36990();
    char v17 = 5;
    sub_251F36990();
    char v16 = 6;
    sub_251F36990();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ServiceArea.Area.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t ServiceArea.Area.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5830);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251EF3FD8();
  sub_251F36D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v27 = 0;
  int v9 = sub_251F368C0();
  char v26 = 1;
  uint64_t v20 = sub_251F36810();
  char v25 = 2;
  uint64_t v10 = sub_251F36790();
  uint64_t v12 = v11;
  uint64_t v19 = v10;
  char v24 = 3;
  swift_bridgeObjectRetain();
  int v18 = sub_251F367E0();
  char v23 = 4;
  int v17 = sub_251F367F0();
  char v22 = 5;
  HIDWORD(v16) = sub_251F367F0();
  char v21 = 6;
  __int16 v14 = sub_251F367F0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = v20;
  *(_DWORD *)a2 = v9;
  *(_DWORD *)(a2 + 4) = v15;
  *(unsigned char *)(a2 + 8) = BYTE4(v15) & 1;
  *(void *)(a2 + 16) = v19;
  *(void *)(a2 + 24) = v12;
  BYTE2(v15) = BYTE2(v18);
  *(_WORD *)(a2 + 32) = v18;
  *(unsigned char *)(a2 + 34) = BYTE2(v15) & 1;
  BYTE1(v15) = BYTE1(v17);
  *(unsigned char *)(a2 + 35) = v17;
  *(unsigned char *)(a2 + 36) = BYTE1(v15) & 1;
  BYTE1(v15) = BYTE5(v16);
  *(unsigned char *)(a2 + 37) = BYTE4(v16);
  *(unsigned char *)(a2 + 38) = BYTE1(v15) & 1;
  *(unsigned char *)(a2 + 39) = v14;
  *(unsigned char *)(a2 + 40) = HIBYTE(v14) & 1;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_251EF02FC()
{
  return sub_251F36D00();
}

uint64_t sub_251EF039C()
{
  return sub_251F36D00();
}

uint64_t sub_251EF0438@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ServiceArea.Area.init(from:)(a1, a2);
}

uint64_t sub_251EF0450(void *a1)
{
  return ServiceArea.Area.encode(to:)(a1);
}

uint64_t ServiceArea.Map.id.getter()
{
  return *v0;
}

uint64_t ServiceArea.Map.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServiceArea.Map.hash(into:)()
{
  sub_251F36CE0();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  return swift_bridgeObjectRelease();
}

uint64_t static ServiceArea.Map.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 != *(_DWORD *)a2) {
    return 0;
  }
  if (*(void *)(a1 + 8) == *(void *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16)) {
    return 1;
  }
  else {
    return sub_251F36B10();
  }
}

uint64_t sub_251EF054C()
{
  if (*v0) {
    return 1701667182;
  }
  else {
    return 25705;
  }
}

uint64_t sub_251EF0574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251EF5ADC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251EF059C(uint64_t a1)
{
  unint64_t v2 = sub_251EF402C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251EF05D8(uint64_t a1)
{
  unint64_t v2 = sub_251EF402C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ServiceArea.Map.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5838);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 8);
  v10[0] = *(void *)(v1 + 16);
  v10[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251EF402C();
  sub_251F36DA0();
  char v12 = 0;
  sub_251F36A60();
  if (!v2)
  {
    char v11 = 1;
    sub_251F369D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ServiceArea.Map.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t ServiceArea.Map.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5848);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251EF402C();
  sub_251F36D90();
  if (!v2)
  {
    char v16 = 0;
    int v9 = sub_251F368C0();
    char v15 = 1;
    uint64_t v11 = sub_251F36830();
    uint64_t v13 = v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_DWORD *)a2 = v9;
    *(void *)(a2 + 8) = v11;
    *(void *)(a2 + 16) = v13;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_251EF0990()
{
  return sub_251F36D00();
}

uint64_t sub_251EF09F4()
{
  sub_251F36CE0();
  return sub_251F357B0();
}

uint64_t sub_251EF0A48()
{
  return sub_251F36D00();
}

uint64_t sub_251EF0AA8(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 != *(_DWORD *)a2) {
    return 0;
  }
  if (*(void *)(a1 + 8) == *(void *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16)) {
    return 1;
  }
  else {
    return sub_251F36B10();
  }
}

uint64_t sub_251EF0AF0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ServiceArea.Map.init(from:)(a1, a2);
}

uint64_t sub_251EF0B08(void *a1)
{
  return ServiceArea.Map.encode(to:)(a1);
}

uint64_t ServiceArea.supportedAreas.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ServiceArea.supportedMaps.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ServiceArea.selectedAreas.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ServiceArea.selectedMap.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 24);
  *(void *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t ServiceArea.currentArea.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 56);
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = *(void *)(v1 + 72);
  uint64_t v6 = *(void *)(v1 + 80);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(v1 + 88);
  return sub_251A1AD5C(v2, v3, v4, v5);
}

unint64_t ServiceArea.estimatedEndTime.getter()
{
  return *(unsigned int *)(v0 + 92) | ((unint64_t)*(unsigned __int8 *)(v0 + 96) << 32);
}

uint64_t ServiceArea.progress.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ServiceArea.supportsChangingSelectedAreasWhileRunning.getter()
{
  return *(unsigned __int8 *)(v0 + 112);
}

uint64_t ServiceArea.supportsProgress.getter()
{
  return *(unsigned __int8 *)(v0 + 113);
}

uint64_t ServiceArea.supportsMaps.getter()
{
  return *(unsigned __int8 *)(v0 + 114);
}

uint64_t ServiceArea.supportsSkipAreaCommand.getter()
{
  return *(unsigned __int8 *)(v0 + 115);
}

void sub_251EF0BB8(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (a1 && a2 && (uint64_t v4 = *(void *)(a1 + 16)) != 0 && (*(unsigned char *)(a1 + 40) & 1) == 0)
  {
    uint64_t v5 = *(unsigned int *)(a1 + 36);
    uint64_t v6 = (unsigned char *)(a1 + 40);
    do
    {
      if ((*v6 & 1) != 0 || *((_DWORD *)v6 - 1) != v5)
      {
        uint64_t v9 = qword_26B21ECD0;
        swift_bridgeObjectRetain();
        if (v9 != -1) {
          swift_once();
        }
        uint64_t v10 = sub_251F350A0();
        __swift_project_value_buffer(v10, (uint64_t)qword_26B21ECB8);
        swift_bridgeObjectRetain();
        uint64_t v11 = sub_251F35080();
        os_log_type_t v12 = sub_251F35FB0();
        if (os_log_type_enabled(v11, v12))
        {
          uint64_t v13 = (uint8_t *)swift_slowAlloc();
          uint64_t v14 = swift_slowAlloc();
          uint64_t v21 = v14;
          *(_DWORD *)uint64_t v13 = 136315138;
          uint64_t v15 = swift_bridgeObjectRetain();
          uint64_t v16 = MEMORY[0x2533AAA10](v15, &type metadata for ServiceArea.Area);
          unint64_t v18 = v17;
          swift_bridgeObjectRelease();
          sub_251A00E84(v16, v18, &v21);
          sub_251F361D0();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_2519F3000, v11, v12, "Selected locations have a mix of map IDs!! %s", v13, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2533AC760](v14, -1, -1);
          MEMORY[0x2533AC760](v13, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        goto LABEL_19;
      }
      v6 += 48;
      --v4;
    }
    while (v4);
    uint64_t v7 = *(void *)(a2 + 16);
    if (!v7) {
      goto LABEL_19;
    }
    uint64_t v8 = (void *)(a2 + 48);
    while (*((_DWORD *)v8 - 4) != v5)
    {
      v8 += 3;
      if (!--v7) {
        goto LABEL_19;
      }
    }
    uint64_t v20 = *(v8 - 1);
    uint64_t v19 = *v8;
    *a3 = v5;
    a3[1] = v20;
    a3[2] = v19;
    swift_bridgeObjectRetain();
  }
  else
  {
LABEL_19:
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
  }
}

uint64_t ServiceArea.supportedAreas(for:)(int a1)
{
  uint64_t v2 = ServiceArea.validAreas.getter();
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = (unsigned char *)(v2 + 72);
    uint64_t v5 = MEMORY[0x263F8EE78];
    do
    {
      if ((*(v4 - 32) & 1) == 0 && *((_DWORD *)v4 - 9) == a1)
      {
        int v9 = *((_DWORD *)v4 - 10);
        uint64_t v11 = *((void *)v4 - 3);
        uint64_t v10 = *((void *)v4 - 2);
        __int16 v12 = *((_WORD *)v4 - 4);
        char v19 = *(v4 - 5);
        char v20 = *(v4 - 6);
        char v17 = *(v4 - 3);
        char v18 = *(v4 - 4);
        char v15 = *(v4 - 1);
        char v16 = *(v4 - 2);
        char v14 = *v4;
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_251A3E220(0, *(void *)(v5 + 16) + 1, 1);
        }
        unint64_t v7 = *(void *)(v5 + 16);
        unint64_t v6 = *(void *)(v5 + 24);
        if (v7 >= v6 >> 1) {
          sub_251A3E220(v6 > 1, v7 + 1, 1);
        }
        *(void *)(v5 + 16) = v7 + 1;
        uint64_t v8 = v5 + 48 * v7;
        *(_DWORD *)(v8 + 32) = v9;
        *(_DWORD *)(v8 + 36) = a1;
        *(unsigned char *)(v8 + 40) = 0;
        *(void *)(v8 + 48) = v11;
        *(void *)(v8 + 56) = v10;
        *(_WORD *)(v8 + 64) = v12;
        *(unsigned char *)(v8 + 66) = v20;
        *(unsigned char *)(v8 + 67) = v19;
        *(unsigned char *)(v8 + 68) = v18;
        *(unsigned char *)(v8 + 69) = v17;
        *(unsigned char *)(v8 + 70) = v16;
        *(unsigned char *)(v8 + 71) = v15;
        *(unsigned char *)(v8 + 72) = v14;
      }
      v4 += 48;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t ServiceArea.areas(for:)(uint64_t a1)
{
  swift_bridgeObjectRetain();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_251E62C80(v2, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t ServiceArea.area(for:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)v2 + 16);
  if (v3)
  {
    uint64_t v4 = (unsigned char *)(*(void *)v2 + 72);
    while (*((_DWORD *)v4 - 10) != result)
    {
      v4 += 48;
      if (!--v3) {
        goto LABEL_5;
      }
    }
    uint64_t v5 = *((void *)v4 - 5);
    uint64_t v6 = *(v4 - 32);
    uint64_t v8 = *((void *)v4 - 3);
    uint64_t v7 = *((void *)v4 - 2);
    char v9 = *v4;
    uint64_t v10 = 0x10000;
    if (!*(v4 - 6)) {
      uint64_t v10 = 0;
    }
    unint64_t v11 = v10 | *((unsigned __int16 *)v4 - 4) | ((unint64_t)*(v4 - 5) << 24);
    uint64_t v12 = 0x100000000;
    if (!*(v4 - 4)) {
      uint64_t v12 = 0;
    }
    unint64_t v13 = v11 | v12 | ((unint64_t)*(v4 - 3) << 40);
    uint64_t v14 = 0x1000000000000;
    if (!*(v4 - 2)) {
      uint64_t v14 = 0;
    }
    unint64_t v15 = v13 | v14 | ((unint64_t)*(v4 - 1) << 56);
    *(void *)a2 = v5;
    *(void *)(a2 + 8) = v6;
    *(void *)(a2 + 16) = v8;
    *(void *)(a2 + 24) = v7;
    *(void *)(a2 + 32) = v15;
    *(unsigned char *)(a2 + 40) = v9;
    return swift_bridgeObjectRetain();
  }
  else
  {
LABEL_5:
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
    *(_OWORD *)(a2 + 24) = xmmword_251F3BBE0;
    *(unsigned char *)(a2 + 40) = 0;
  }
  return result;
}

uint64_t ServiceArea.hash(into:)(uint64_t a1)
{
  uint64_t v4 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 40);
  uint64_t v12 = *(void *)(v1 + 72);
  int v10 = *(unsigned __int8 *)(v1 + 96);
  uint64_t v11 = *(void *)(v1 + 104);
  swift_bridgeObjectRetain();
  sub_251A42440(a1, v4);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    sub_251F36CC0();
    if (v5) {
      goto LABEL_7;
    }
LABEL_10:
    sub_251F36CC0();
    if (v6) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
  sub_251F36CC0();
  sub_251F36CB0();
  uint64_t v7 = *(void *)(v3 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = v3 + 48;
    do
    {
      sub_251F36CE0();
      swift_bridgeObjectRetain();
      sub_251F357B0();
      swift_bridgeObjectRelease();
      v8 += 24;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  if (!v5) {
    goto LABEL_10;
  }
LABEL_7:
  sub_251F36CC0();
  swift_bridgeObjectRetain();
  sub_251A42440(a1, v5);
  swift_bridgeObjectRelease();
  if (v6)
  {
LABEL_8:
    sub_251F36CC0();
    sub_251F36CE0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
LABEL_11:
  sub_251F36CC0();
LABEL_12:
  sub_251F36CC0();
  if (v12 != 1) {
    ServiceArea.Area.hash(into:)();
  }
  if (!v10)
  {
    sub_251F36CC0();
    sub_251F36CE0();
    if (v11) {
      goto LABEL_16;
    }
LABEL_18:
    sub_251F36CC0();
    goto LABEL_19;
  }
  sub_251F36CC0();
  if (!v11) {
    goto LABEL_18;
  }
LABEL_16:
  sub_251F36CC0();
  sub_251A42374(a1, v11);
LABEL_19:
  sub_251F36CC0();
  sub_251F36CC0();
  sub_251F36CC0();
  return sub_251F36CC0();
}

unint64_t sub_251EF1448(char a1)
{
  unint64_t result = 0x6574726F70707573;
  switch(a1)
  {
    case 2:
    case 3:
      unint64_t result = 0x64657463656C6573;
      break;
    case 4:
      unint64_t result = 0x41746E6572727563;
      break;
    case 5:
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0x73736572676F7270;
      break;
    case 7:
      unint64_t result = 0xD000000000000029;
      break;
    case 9:
      unint64_t result = 0x7374726F70707573;
      break;
    case 10:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_251EF15BC()
{
  return sub_251EF1448(*v0);
}

uint64_t sub_251EF15C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251EF5BA8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251EF15EC(uint64_t a1)
{
  unint64_t v2 = sub_251EF4080();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251EF1628(uint64_t a1)
{
  unint64_t v2 = sub_251EF4080();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ServiceArea.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5850);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v30 = v1[2];
  uint64_t v31 = v8;
  uint64_t v10 = v1[3];
  uint64_t v29 = v1[4];
  uint64_t v11 = v1[5];
  uint64_t v27 = v10;
  uint64_t v28 = v11;
  uint64_t v12 = v1[6];
  uint64_t v13 = v1[7];
  uint64_t v25 = v1[8];
  uint64_t v26 = v13;
  uint64_t v24 = v1[9];
  uint64_t v14 = v1[10];
  uint64_t v22 = v12;
  uint64_t v23 = v14;
  int v38 = *((unsigned __int8 *)v1 + 88);
  uint64_t v21 = *((unsigned int *)v1 + 23);
  int v20 = *((unsigned __int8 *)v1 + 96);
  uint64_t v19 = v1[13];
  LODWORD(v12) = *((unsigned __int8 *)v1 + 112);
  v18[2] = *((unsigned __int8 *)v1 + 113);
  v18[3] = v12;
  LODWORD(v12) = *((unsigned __int8 *)v1 + 114);
  v18[0] = *((unsigned __int8 *)v1 + 115);
  v18[1] = v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251EF4080();
  sub_251F36DA0();
  uint64_t v32 = v9;
  char v39 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5860);
  sub_251EF4278(&qword_269BA5868, &qword_269BA5860, (void (*)(void))sub_251EF40D4);
  unint64_t v15 = v7;
  sub_251F36A20();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v17 = v30;
  uint64_t v32 = v31;
  char v39 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5878);
  sub_251EF4278(&qword_269BA5880, &qword_269BA5878, (void (*)(void))sub_251EF4128);
  sub_251F36970();
  uint64_t v32 = v17;
  char v39 = 2;
  sub_251F36970();
  uint64_t v32 = v27;
  uint64_t v33 = v29;
  uint64_t v34 = v28;
  char v39 = 3;
  sub_251EF4128();
  sub_251F36970();
  uint64_t v32 = v22;
  uint64_t v33 = v26;
  uint64_t v34 = v25;
  uint64_t v35 = v24;
  uint64_t v36 = v23;
  char v37 = v38;
  char v39 = 4;
  sub_251EF40D4();
  sub_251F36970();
  LOBYTE(v32) = 5;
  char v39 = v20;
  sub_251F369B0();
  uint64_t v32 = v19;
  char v39 = 6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5890);
  sub_251EF4278(&qword_269BA5898, &qword_269BA5890, (void (*)(void))sub_251EF417C);
  sub_251F36970();
  LOBYTE(v32) = 7;
  sub_251F369E0();
  LOBYTE(v32) = 8;
  sub_251F369E0();
  LOBYTE(v32) = 9;
  sub_251F369E0();
  LOBYTE(v32) = 10;
  sub_251F369E0();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v15, v4);
}

uint64_t ServiceArea.hashValue.getter()
{
  char v1 = *(unsigned char *)(v0 + 88);
  int v2 = *(_DWORD *)(v0 + 92);
  char v3 = *(unsigned char *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 104);
  char v5 = *(unsigned char *)(v0 + 112);
  char v6 = *(unsigned char *)(v0 + 113);
  char v7 = *(unsigned char *)(v0 + 114);
  char v8 = *(unsigned char *)(v0 + 115);
  v11[9] = *(void *)v0;
  long long v9 = *(_OWORD *)(v0 + 24);
  long long v12 = *(_OWORD *)(v0 + 8);
  long long v13 = v9;
  long long v14 = *(_OWORD *)(v0 + 40);
  long long v15 = *(_OWORD *)(v0 + 56);
  long long v16 = *(_OWORD *)(v0 + 72);
  char v17 = v1;
  int v18 = v2;
  char v19 = v3;
  uint64_t v20 = v4;
  char v21 = v5;
  char v22 = v6;
  char v23 = v7;
  char v24 = v8;
  sub_251F36CA0();
  ServiceArea.hash(into:)((uint64_t)v11);
  return sub_251F36D00();
}

uint64_t ServiceArea.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA58A8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251EF4080();
  sub_251F36D90();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return v53;
  }
  else
  {
    uint64_t v51 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5860);
    char v64 = 0;
    sub_251EF4278(&qword_269BA58B0, &qword_269BA5860, (void (*)(void))sub_251EF41D0);
    sub_251F36880();
    char v50 = a2;
    uint64_t v9 = v57;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5878);
    char v64 = 1;
    sub_251EF4278(&qword_269BA58C0, &qword_269BA5878, (void (*)(void))sub_251EF4224);
    swift_bridgeObjectRetain();
    sub_251F367D0();
    uint64_t v10 = v9;
    uint64_t v11 = v57;
    char v64 = 2;
    swift_bridgeObjectRetain();
    sub_251F367D0();
    uint64_t v49 = v11;
    uint64_t v12 = v57;
    char v64 = 3;
    sub_251EF4224();
    swift_bridgeObjectRetain();
    sub_251F367D0();
    uint64_t v13 = v58;
    uint64_t v47 = v57;
    uint64_t v48 = v12;
    uint64_t v14 = v59;
    char v64 = 4;
    sub_251EF41D0();
    swift_bridgeObjectRetain();
    sub_251F367D0();
    uint64_t v46 = v13;
    uint64_t v15 = v14;
    uint64_t v16 = v57;
    uint64_t v17 = v61;
    LODWORD(v14) = v62;
    LOBYTE(v57) = 5;
    uint64_t v53 = v16;
    uint64_t v54 = v58;
    uint64_t v55 = v59;
    uint64_t v56 = v60;
    sub_251A1AD5C(v16, v58, v59, v60);
    uint64_t v18 = sub_251F36810();
    uint64_t v52 = v17;
    int v63 = v14;
    uint64_t v45 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5890);
    char v64 = 6;
    sub_251EF4278(&qword_269BA58D0, &qword_269BA5890, (void (*)(void))sub_251EF42E4);
    sub_251F367D0();
    uint64_t v19 = v57;
    LOBYTE(v57) = 7;
    swift_bridgeObjectRetain();
    int v20 = sub_251F36840();
    uint64_t v44 = v19;
    int v43 = v20;
    LOBYTE(v57) = 8;
    int v42 = sub_251F36840();
    LOBYTE(v57) = 9;
    LOBYTE(v14) = sub_251F36840();
    LOBYTE(v57) = 10;
    char v21 = sub_251F36840();
    char v22 = (void (**)(char *, uint64_t))(v51 + 8);
    char v23 = v21;
    LODWORD(v51) = v43 & 1;
    int v24 = v42 & 1;
    int v42 = v14 & 1;
    int v43 = v24;
    (*v22)(v8, v5);
    int v40 = v23 & 1;
    uint64_t v41 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v39 = v15;
    swift_bridgeObjectRetain();
    uint64_t v25 = v53;
    uint64_t v26 = v54;
    uint64_t v27 = v55;
    uint64_t v28 = v56;
    sub_251A1AD5C(v53, v54, v55, v56);
    sub_251A4DF84(v25, v26, v27, v28);
    uint64_t v29 = v41;
    swift_bridgeObjectRelease();
    uint64_t v30 = v49;
    swift_bridgeObjectRelease();
    uint64_t v31 = v48;
    swift_bridgeObjectRelease();
    uint64_t v32 = v39;
    swift_bridgeObjectRelease();
    uint64_t v33 = v50;
    *char v50 = v29;
    v33[1] = v30;
    uint64_t v34 = v47;
    v33[2] = v31;
    v33[3] = v34;
    v33[4] = v46;
    v33[5] = v32;
    uint64_t v35 = v52;
    v33[6] = v53;
    v33[7] = v26;
    uint64_t v37 = v55;
    uint64_t v36 = v56;
    v33[8] = v55;
    v33[9] = v36;
    v33[10] = v35;
    *((unsigned char *)v33 + 88) = v63;
    BYTE4(v34) = BYTE4(v45);
    *((_DWORD *)v33 + 23) = v45;
    *((unsigned char *)v33 + 96) = BYTE4(v34) & 1;
    v33[13] = v19;
    *((unsigned char *)v33 + 112) = v51;
    *((unsigned char *)v33 + 113) = v43;
    *((unsigned char *)v33 + 114) = v42;
    *((unsigned char *)v33 + 115) = v40;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_251A4DF84(v53, v54, v37, v36);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_251EF25CC()
{
  char v1 = *(unsigned char *)(v0 + 88);
  int v2 = *(_DWORD *)(v0 + 92);
  char v3 = *(unsigned char *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 104);
  char v5 = *(unsigned char *)(v0 + 112);
  char v6 = *(unsigned char *)(v0 + 113);
  char v7 = *(unsigned char *)(v0 + 114);
  char v8 = *(unsigned char *)(v0 + 115);
  v11[9] = *(void *)v0;
  long long v9 = *(_OWORD *)(v0 + 24);
  long long v12 = *(_OWORD *)(v0 + 8);
  long long v13 = v9;
  long long v14 = *(_OWORD *)(v0 + 40);
  long long v15 = *(_OWORD *)(v0 + 56);
  long long v16 = *(_OWORD *)(v0 + 72);
  char v17 = v1;
  int v18 = v2;
  char v19 = v3;
  uint64_t v20 = v4;
  char v21 = v5;
  char v22 = v6;
  char v23 = v7;
  char v24 = v8;
  sub_251F36CA0();
  ServiceArea.hash(into:)((uint64_t)v11);
  return sub_251F36D00();
}

uint64_t sub_251EF2684()
{
  char v1 = *(unsigned char *)(v0 + 88);
  int v2 = *(_DWORD *)(v0 + 92);
  char v3 = *(unsigned char *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 104);
  char v5 = *(unsigned char *)(v0 + 112);
  char v6 = *(unsigned char *)(v0 + 113);
  char v7 = *(unsigned char *)(v0 + 114);
  char v8 = *(unsigned char *)(v0 + 115);
  v11[9] = *(void *)v0;
  long long v9 = *(_OWORD *)(v0 + 24);
  long long v12 = *(_OWORD *)(v0 + 8);
  long long v13 = v9;
  long long v14 = *(_OWORD *)(v0 + 40);
  long long v15 = *(_OWORD *)(v0 + 56);
  long long v16 = *(_OWORD *)(v0 + 72);
  char v17 = v1;
  int v18 = v2;
  char v19 = v3;
  uint64_t v20 = v4;
  char v21 = v5;
  char v22 = v6;
  char v23 = v7;
  char v24 = v8;
  sub_251F36CA0();
  ServiceArea.hash(into:)((uint64_t)v11);
  return sub_251F36D00();
}

uint64_t sub_251EF2738@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return ServiceArea.init(from:)(a1, a2);
}

uint64_t sub_251EF2750(void *a1)
{
  return ServiceArea.encode(to:)(a1);
}

uint64_t sub_251EF2768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[19] = a4;
  v5[20] = a5;
  v5[17] = a2;
  v5[18] = a3;
  v5[16] = a1;
  return MEMORY[0x270FA2498](sub_251EF2790, 0, 0);
}

uint64_t sub_251EF2790()
{
  uint64_t v1 = v0[18];
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
    uint64_t v1 = sub_251F35AA0();
  }
  v0[21] = v1;
  uint64_t v3 = v0[19];
  uint64_t v2 = v0[20];
  uint64_t v4 = (void *)v0[17];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_251EF28D4;
  uint64_t v5 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_251E5F62C;
  v0[13] = &block_descriptor_42;
  v0[14] = v5;
  objc_msgSend(v4, sel_selectAreasWithParams_expectedValues_expectedValueInterval_completion_, v2, v1, v3, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_251EF28D4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 176) = v1;
  if (v1) {
    uint64_t v2 = sub_251A5F6C4;
  }
  else {
    uint64_t v2 = sub_251EF29E4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251EF29E4()
{
  uint64_t v1 = (void *)v0[21];
  uint64_t v3 = v0[15];
  uint64_t v2 = (void *)v0[16];
  v2[3] = sub_251A1A568(0, &qword_269B9DDB0);
  *uint64_t v2 = v3;

  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t StaticRVCClusterGroup.clearRoomSelection()()
{
  uint64_t v2 = *(void *)(v0 + 120);
  if (v2)
  {
    int v3 = *(_DWORD *)(v0 + 232);
    uint64_t v4 = *(void *)(v0 + 224);
    long long v5 = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v1 + 80) = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v1 + 96) = v5;
    *(_OWORD *)(v1 + 112) = *(_OWORD *)(v0 + 96);
    uint64_t v6 = *(void *)(v0 + 112);
    long long v7 = *(_OWORD *)(v0 + 16);
    *(_OWORD *)(v1 + 16) = *(_OWORD *)v0;
    *(_OWORD *)(v1 + 32) = v7;
    long long v8 = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v1 + 48) = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v1 + 64) = v8;
    *(void *)(v1 + 128) = v6;
    *(void *)(v1 + 136) = v2;
    long long v9 = *(_OWORD *)(v0 + 144);
    *(_OWORD *)(v1 + 144) = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v1 + 160) = v9;
    long long v10 = *(_OWORD *)(v0 + 176);
    *(_OWORD *)(v1 + 176) = *(_OWORD *)(v0 + 160);
    *(_OWORD *)(v1 + 192) = v10;
    long long v11 = *(_OWORD *)(v0 + 208);
    *(_OWORD *)(v1 + 208) = *(_OWORD *)(v0 + 192);
    *(_OWORD *)(v1 + 224) = v11;
    *(void *)(v1 + 240) = v4;
    *(_DWORD *)(v1 + 248) = v3;
    uint64_t v12 = swift_task_alloc();
    *(void *)(v1 + 256) = v12;
    *(void *)uint64_t v12 = v1;
    *(void *)(v12 + 8) = sub_251E55D14;
    *(void *)(v12 + 328) = MEMORY[0x263F8EE78];
    long long v13 = *(_OWORD *)(v1 + 192);
    long long v14 = *(_OWORD *)(v1 + 208);
    long long v15 = *(_OWORD *)(v1 + 224);
    *(_OWORD *)(v12 + 236) = *(_OWORD *)(v1 + 236);
    *(_OWORD *)(v12 + 208) = v14;
    *(_OWORD *)(v12 + 224) = v15;
    *(_OWORD *)(v12 + 192) = v13;
    long long v16 = *(_OWORD *)(v1 + 128);
    long long v17 = *(_OWORD *)(v1 + 144);
    long long v18 = *(_OWORD *)(v1 + 176);
    *(_OWORD *)(v12 + 160) = *(_OWORD *)(v1 + 160);
    *(_OWORD *)(v12 + 176) = v18;
    *(_OWORD *)(v12 + 128) = v16;
    *(_OWORD *)(v12 + 144) = v17;
    long long v19 = *(_OWORD *)(v1 + 64);
    long long v20 = *(_OWORD *)(v1 + 80);
    long long v21 = *(_OWORD *)(v1 + 112);
    *(_OWORD *)(v12 + 96) = *(_OWORD *)(v1 + 96);
    *(_OWORD *)(v12 + 112) = v21;
    *(_OWORD *)(v12 + 64) = v19;
    *(_OWORD *)(v12 + 80) = v20;
    long long v22 = *(_OWORD *)(v1 + 16);
    long long v23 = *(_OWORD *)(v1 + 48);
    *(_OWORD *)(v12 + 32) = *(_OWORD *)(v1 + 32);
    *(_OWORD *)(v12 + 48) = v23;
    *(_OWORD *)(v12 + 16) = v22;
    return MEMORY[0x270FA2498](sub_251EEBF0C, 0, 0);
  }
  else
  {
    char v24 = *(uint64_t (**)(void))(v1 + 8);
    return v24();
  }
}

uint64_t StaticRVCClusterGroup.skipArea(areaToSkip:)(int a1)
{
  *(_DWORD *)(v2 + 252) = a1;
  long long v3 = v1[13];
  *(_OWORD *)(v2 + 208) = v1[12];
  *(_OWORD *)(v2 + 224) = v3;
  *(_OWORD *)(v2 + 236) = *(_OWORD *)((char *)v1 + 220);
  long long v4 = v1[9];
  *(_OWORD *)(v2 + 144) = v1[8];
  *(_OWORD *)(v2 + 160) = v4;
  long long v5 = v1[11];
  *(_OWORD *)(v2 + 176) = v1[10];
  *(_OWORD *)(v2 + 192) = v5;
  long long v6 = v1[5];
  *(_OWORD *)(v2 + 80) = v1[4];
  *(_OWORD *)(v2 + 96) = v6;
  long long v7 = v1[7];
  *(_OWORD *)(v2 + 112) = v1[6];
  *(_OWORD *)(v2 + 128) = v7;
  long long v8 = v1[1];
  *(_OWORD *)(v2 + 16) = *v1;
  *(_OWORD *)(v2 + 32) = v8;
  long long v9 = v1[3];
  *(_OWORD *)(v2 + 48) = v1[2];
  *(_OWORD *)(v2 + 64) = v9;
  return MEMORY[0x270FA2498](sub_251EF2C54, 0, 0);
}

uint64_t sub_251EF2C54()
{
  uint64_t v1 = *(void *)(v0 + 152);
  if (*(void *)(v0 + 136)) {
    BOOL v2 = v1 == 0;
  }
  else {
    BOOL v2 = 1;
  }
  if (v2) {
    goto LABEL_22;
  }
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    uint64_t v7 = MEMORY[0x263F8EE78];
    do
    {
      uint64_t v11 = v1 + v6;
      *(void *)&long long v5 = *(void *)(v1 + v6 + 32);
      if (v5 != *(_DWORD *)(v0 + 252))
      {
        long long v39 = v5;
        char v12 = *(unsigned char *)(v11 + 40);
        uint64_t v14 = *(void *)(v11 + 48);
        uint64_t v13 = *(void *)(v11 + 56);
        char v37 = *(unsigned char *)(v11 + 66);
        __int16 v38 = *(_WORD *)(v11 + 64);
        char v35 = *(unsigned char *)(v11 + 68);
        char v36 = *(unsigned char *)(v11 + 67);
        char v33 = *(unsigned char *)(v11 + 70);
        char v34 = *(unsigned char *)(v11 + 69);
        char v31 = *(unsigned char *)(v11 + 72);
        char v32 = *(unsigned char *)(v11 + 71);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_251A3E220(0, *(void *)(v7 + 16) + 1, 1);
        }
        unint64_t v9 = *(void *)(v7 + 16);
        unint64_t v8 = *(void *)(v7 + 24);
        long long v5 = v39;
        if (v9 >= v8 >> 1)
        {
          sub_251A3E220(v8 > 1, v9 + 1, 1);
          long long v5 = v39;
        }
        *(void *)(v7 + 16) = v9 + 1;
        uint64_t v10 = v7 + 48 * v9;
        *(void *)(v10 + 32) = v5;
        *(unsigned char *)(v10 + 40) = v12;
        *(void *)(v10 + 48) = v14;
        *(void *)(v10 + 56) = v13;
        *(_WORD *)(v10 + 64) = v38;
        *(unsigned char *)(v10 + 66) = v37;
        *(unsigned char *)(v10 + 67) = v36;
        *(unsigned char *)(v10 + 68) = v35;
        *(unsigned char *)(v10 + 69) = v34;
        *(unsigned char *)(v10 + 70) = v33;
        *(unsigned char *)(v10 + 71) = v32;
        *(unsigned char *)(v10 + 72) = v31;
      }
      v6 += 48;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    uint64_t v4 = MEMORY[0x263F8EE78];
    int64_t v15 = *(void *)(v7 + 16);
    if (v15) {
      goto LABEL_15;
    }
    goto LABEL_21;
  }
  uint64_t v7 = MEMORY[0x263F8EE78];
  int64_t v15 = *(void *)(MEMORY[0x263F8EE78] + 16);
  if (!v15)
  {
LABEL_21:
    swift_release();
LABEL_22:
    uint64_t v17 = MEMORY[0x263F8EE78];
    goto LABEL_23;
  }
LABEL_15:
  uint64_t v40 = v4;
  uint64_t v16 = v0;
  sub_251A3E1E0(0, v15, 0);
  uint64_t v17 = v40;
  unint64_t v18 = *(void *)(v40 + 16);
  uint64_t v19 = 32;
  do
  {
    int v20 = *(_DWORD *)(v7 + v19);
    unint64_t v21 = *(void *)(v40 + 24);
    if (v18 >= v21 >> 1)
    {
      sub_251A3E1E0(v21 > 1, v18 + 1, 1);
      uint64_t v0 = v16;
    }
    *(void *)(v40 + 16) = v18 + 1;
    *(_DWORD *)(v40 + 4 * v18 + 32) = v20;
    v19 += 48;
    ++v18;
    --v15;
  }
  while (v15);
  swift_release();
LABEL_23:
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1D8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_251F38650;
  *(_DWORD *)(inited + 32) = 2;
  *(void *)(inited + 40) = v17;
  *(unsigned char *)(inited + 48) = 3;
  unint64_t v23 = sub_251A19C30(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
  swift_arrayDestroy();
  uint64_t v24 = *(void *)(v0 + 16);
  *(void *)(v0 + 328) = v24;
  __int16 v25 = *(_WORD *)(v0 + 24);
  *(_WORD *)(v0 + 324) = v25;
  *(unsigned char *)(v0 + 323) = *(unsigned char *)(v0 + 26);
  sub_251AA4920(v23);
  *(void *)(v0 + 336) = v26;
  swift_bridgeObjectRelease();
  id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F10FD0]), sel_init);
  *(void *)(v0 + 344) = v27;
  uint64_t v28 = (void *)sub_251F36D60();
  objc_msgSend(v27, sel_setSkippedArea_, v28);

  sub_251A4DB38(v0 + 16);
  sub_251A1A568(0, &qword_269BA57F0);
  *(void *)(v0 + 312) = v24;
  *(_WORD *)(v0 + 320) = v25;
  *(unsigned char *)(v0 + 322) = 26;
  uint64_t v29 = (void *)swift_task_alloc();
  *(void *)(v0 + 352) = v29;
  *uint64_t v29 = v0;
  v29[1] = sub_251EF306C;
  return sub_251C4E0D4((uint64_t *)(v0 + 312));
}

uint64_t sub_251EF306C(uint64_t a1)
{
  uint64_t v2 = *(void *)v1 + 16;
  *(void *)(*(void *)v1 + 360) = a1;
  swift_task_dealloc();
  sub_251A81D30(v2);
  return MEMORY[0x270FA2498](sub_251EF3178, 0, 0);
}

uint64_t sub_251EF3178()
{
  uint64_t v1 = *(void *)(v0 + 336);
  id v2 = *(id *)(v0 + 344);
  ClusterPath.description.getter();
  sub_251F35800();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 368) = 0x8000000251F68280;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269B9D690
                                                                                             + dword_269B9D690);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 376) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_251EF32B0;
  uint64_t v4 = *(void *)(v0 + 360);
  uint64_t v5 = *(void *)(v0 + 344);
  return v7(0x6165724170696B73, 0xE800000000000000, v4, v1, 0xD000000000000016, 0x8000000251F68280, v5);
}

uint64_t sub_251EF32B0()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 360);
  id v2 = *(void **)(*(void *)v0 + 344);
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA2498](sub_251EF341C, 0, 0);
}

uint64_t sub_251EF341C()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251EF347C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[19] = a4;
  v5[20] = a5;
  v5[17] = a2;
  v5[18] = a3;
  v5[16] = a1;
  return MEMORY[0x270FA2498](sub_251EF34A4, 0, 0);
}

uint64_t sub_251EF34A4()
{
  uint64_t v1 = v0[18];
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
    uint64_t v1 = sub_251F35AA0();
  }
  v0[21] = v1;
  uint64_t v3 = v0[19];
  uint64_t v2 = v0[20];
  uint64_t v4 = (void *)v0[17];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_251EF35E8;
  uint64_t v5 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_251E5F62C;
  v0[13] = &block_descriptor_21;
  v0[14] = v5;
  objc_msgSend(v4, sel_skipAreaWithParams_expectedValues_expectedValueInterval_completion_, v2, v1, v3, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_251EF35E8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 176) = v1;
  if (v1) {
    uint64_t v2 = sub_251EF6254;
  }
  else {
    uint64_t v2 = sub_251EF36F8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251EF36F8()
{
  uint64_t v1 = (void *)v0[21];
  uint64_t v3 = v0[15];
  uint64_t v2 = (void *)v0[16];
  v2[3] = sub_251A1A568(0, &qword_269B9DD58);
  *uint64_t v2 = v3;

  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t ServiceArea.validSelectedAreas.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = 0;
  uint64_t v4 = MEMORY[0x263F8EE78];
  uint64_t v16 = v1;
  do
  {
    uint64_t v5 = v1 + v3;
    uint64_t v6 = *(void *)(v1 + v3 + 56);
    if (v6)
    {
      uint64_t v7 = *(void *)(v5 + 32);
      char v8 = *(unsigned char *)(v5 + 40);
      uint64_t v9 = *(void *)(v5 + 48);
      __int16 v10 = *(_WORD *)(v5 + 64);
      char v11 = *(unsigned char *)(v5 + 66);
      char v21 = *(unsigned char *)(v5 + 68);
      char v22 = *(unsigned char *)(v5 + 67);
      char v19 = *(unsigned char *)(v5 + 70);
      char v20 = *(unsigned char *)(v5 + 69);
      char v17 = *(unsigned char *)(v5 + 72);
      char v18 = *(unsigned char *)(v5 + 71);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_251A3E220(0, *(void *)(v4 + 16) + 1, 1);
      }
      unint64_t v13 = *(void *)(v4 + 16);
      unint64_t v12 = *(void *)(v4 + 24);
      if (v13 >= v12 >> 1) {
        sub_251A3E220(v12 > 1, v13 + 1, 1);
      }
      *(void *)(v4 + 16) = v13 + 1;
      uint64_t v14 = v4 + 48 * v13;
      *(void *)(v14 + 32) = v7;
      *(unsigned char *)(v14 + 40) = v8;
      *(void *)(v14 + 48) = v9;
      *(void *)(v14 + 56) = v6;
      *(_WORD *)(v14 + 64) = v10;
      *(unsigned char *)(v14 + 66) = v11;
      *(unsigned char *)(v14 + 67) = v22;
      *(unsigned char *)(v14 + 68) = v21;
      *(unsigned char *)(v14 + 69) = v20;
      *(unsigned char *)(v14 + 70) = v19;
      *(unsigned char *)(v14 + 71) = v18;
      *(unsigned char *)(v14 + 72) = v17;
      uint64_t v1 = v16;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v3 += 48;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v4;
}

BOOL _s13HomeDataModel11ServiceAreaV0E0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 != *(_DWORD *)a2) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  int v6 = *(unsigned __int16 *)(a1 + 32);
  char v7 = *(unsigned char *)(a1 + 34);
  int v8 = *(unsigned __int8 *)(a1 + 35);
  char v9 = *(unsigned char *)(a1 + 36);
  int v10 = *(unsigned __int8 *)(a1 + 37);
  char v11 = *(unsigned char *)(a1 + 38);
  int v12 = *(unsigned __int8 *)(a1 + 39);
  char v13 = *(unsigned char *)(a1 + 40);
  uint64_t v14 = *(void *)(a2 + 16);
  uint64_t v15 = *(void *)(a2 + 24);
  int v16 = *(unsigned __int16 *)(a2 + 32);
  int v17 = *(unsigned __int8 *)(a2 + 34);
  int v18 = *(unsigned __int8 *)(a2 + 35);
  int v19 = *(unsigned __int8 *)(a2 + 36);
  int v20 = *(unsigned __int8 *)(a2 + 37);
  int v21 = *(unsigned __int8 *)(a2 + 38);
  int v22 = *(unsigned __int8 *)(a2 + 39);
  char v23 = *(unsigned char *)(a2 + 40);
  if (*(unsigned char *)(a1 + 8))
  {
    if (!*(unsigned char *)(a2 + 8)) {
      return 0;
    }
  }
  else
  {
    if (*(_DWORD *)(a1 + 4) == *(_DWORD *)(a2 + 4)) {
      char v24 = *(unsigned char *)(a2 + 8);
    }
    else {
      char v24 = 1;
    }
    if (v24) {
      return 0;
    }
  }
  if (!v5)
  {
    if (v15) {
      return 0;
    }
    goto LABEL_16;
  }
  if (!v15) {
    return 0;
  }
  if (v4 == v14 && v5 == v15) {
    goto LABEL_16;
  }
  char v36 = *(unsigned char *)(a1 + 40);
  int v37 = *(unsigned __int8 *)(a1 + 39);
  char v34 = v23;
  int v35 = *(unsigned __int8 *)(a1 + 37);
  char v32 = *(unsigned char *)(a1 + 38);
  int v33 = v22;
  char v25 = sub_251F36B10();
  char v11 = v32;
  int v22 = v33;
  char v23 = v34;
  int v10 = v35;
  char v13 = v36;
  int v12 = v37;
  char v26 = v25;
  BOOL result = 0;
  if (v26)
  {
LABEL_16:
    if (v7)
    {
      if (!v17) {
        return 0;
      }
    }
    else
    {
      if (v6 == v16) {
        char v28 = v17;
      }
      else {
        char v28 = 1;
      }
      if (v28) {
        return 0;
      }
    }
    if (v9)
    {
      if (!v19) {
        return 0;
      }
    }
    else
    {
      if (v8 == v18) {
        char v29 = v19;
      }
      else {
        char v29 = 1;
      }
      if (v29) {
        return 0;
      }
    }
    if (v11)
    {
      if (!v21) {
        return 0;
      }
    }
    else
    {
      if (v10 == v20) {
        char v30 = v21;
      }
      else {
        char v30 = 1;
      }
      if (v30) {
        return 0;
      }
    }
    if ((v13 & 1) == 0)
    {
      if (v12 == v22) {
        char v31 = v23;
      }
      else {
        char v31 = 1;
      }
      return (v31 & 1) == 0;
    }
    return (v23 & 1) != 0;
  }
  return result;
}

uint64_t _s13HomeDataModel11ServiceAreaV8ProgressV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t result = 0;
  if (*(_DWORD *)a1 == *(_DWORD *)a2 && *(unsigned __int8 *)(a1 + 4) == *(unsigned __int8 *)(a2 + 4))
  {
    int v4 = *(_DWORD *)(a1 + 16);
    char v5 = *(unsigned char *)(a1 + 20);
    if (*(unsigned char *)(a1 + 12))
    {
      if (!*(unsigned char *)(a2 + 12)) {
        return 0;
      }
    }
    else
    {
      if (*(_DWORD *)(a1 + 8) == *(_DWORD *)(a2 + 8)) {
        char v6 = *(unsigned char *)(a2 + 12);
      }
      else {
        char v6 = 1;
      }
      if (v6) {
        return 0;
      }
    }
    if (v5)
    {
      if ((*(unsigned char *)(a2 + 20) & 1) == 0) {
        return 0;
      }
    }
    else
    {
      if (v4 == *(_DWORD *)(a2 + 16)) {
        char v7 = *(unsigned char *)(a2 + 20);
      }
      else {
        char v7 = 1;
      }
      if (v7) {
        return 0;
      }
    }
    return 1;
  }
  return result;
}

uint64_t _s13HomeDataModel11ServiceAreaV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v40 = *(void *)(a1 + 56);
  uint64_t v41 = *(void *)(a1 + 48);
  uint64_t v43 = *(void *)(a1 + 72);
  uint64_t v38 = *(void *)(a1 + 80);
  uint64_t v39 = *(void *)(a1 + 64);
  char v37 = *(unsigned char *)(a1 + 88);
  int v28 = *(_DWORD *)(a1 + 92);
  char v31 = *(unsigned char *)(a1 + 96);
  uint64_t v29 = *(void *)(a1 + 104);
  int v25 = *(unsigned __int8 *)(a1 + 112);
  int v23 = *(unsigned __int8 *)(a1 + 113);
  int v21 = *(unsigned __int8 *)(a1 + 114);
  int v19 = *(unsigned __int8 *)(a1 + 115);
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v11 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v32 = *(void *)(a2 + 48);
  uint64_t v33 = *(void *)(a2 + 56);
  uint64_t v42 = *(void *)(a2 + 72);
  uint64_t v34 = *(void *)(a2 + 64);
  uint64_t v35 = *(void *)(a2 + 80);
  char v36 = *(unsigned char *)(a2 + 88);
  int v27 = *(_DWORD *)(a2 + 92);
  int v30 = *(unsigned __int8 *)(a2 + 96);
  uint64_t v26 = *(void *)(a2 + 104);
  int v24 = *(unsigned __int8 *)(a2 + 112);
  int v22 = *(unsigned __int8 *)(a2 + 113);
  int v20 = *(unsigned __int8 *)(a2 + 114);
  int v18 = *(unsigned __int8 *)(a2 + 115);
  if ((sub_251AB717C(*(void *)a1, *(void *)a2) & 1) == 0) {
    return 0;
  }
  if (v2)
  {
    if (!v7 || (sub_251AB736C(v2, v7) & 1) == 0) {
      return 0;
    }
  }
  else if (v7)
  {
    return 0;
  }
  if (v3)
  {
    if (!v8 || (sub_251AB717C(v3, v8) & 1) == 0) {
      return 0;
    }
  }
  else if (v8)
  {
    return 0;
  }
  if (!v5)
  {
    if (!v10) {
      goto LABEL_20;
    }
LABEL_24:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!v10)
  {
    swift_bridgeObjectRetain();
    goto LABEL_24;
  }
  if (v4 != v9) {
    return 0;
  }
  if (v6 == v11 && v5 == v10 || (char v12 = sub_251F36B10(), result = 0, (v12 & 1) != 0))
  {
LABEL_20:
    if (v43 == 1)
    {
      uint64_t v14 = v42;
      if (v42 == 1)
      {
LABEL_31:
        if (v31)
        {
          if (!v30) {
            return 0;
          }
        }
        else
        {
          char v16 = v30;
          if (v28 != v27) {
            char v16 = 1;
          }
          if (v16) {
            return 0;
          }
        }
        if (v29)
        {
          if (v26)
          {
            char v17 = sub_251AB7404(v29, v26);
            uint64_t result = 0;
            if (v17 & 1) == 0 || ((v25 ^ v24)) {
              return result;
            }
            goto LABEL_44;
          }
        }
        else if (!v26)
        {
          uint64_t result = 0;
          if (v25 != v24) {
            return result;
          }
LABEL_44:
          if (((v23 ^ v22) & 1) == 0 && ((v21 ^ v20) & 1) == 0) {
            return v19 ^ v18 ^ 1u;
          }
          return result;
        }
        return 0;
      }
    }
    else
    {
      uint64_t v14 = v42;
      v53[0] = v41;
      v53[1] = v40;
      v53[2] = v39;
      v53[3] = v43;
      v53[4] = v38;
      char v54 = v37;
      if (v42 != 1)
      {
        uint64_t v44 = v32;
        char v45 = v33 & 1;
        uint64_t v46 = v34;
        uint64_t v47 = v42;
        __int16 v48 = v35;
        char v49 = BYTE2(v35) & 1;
        int v50 = *(_DWORD *)((unsigned char *)&v35 + 3) & 0x1FF01FF;
        char v51 = HIBYTE(v35);
        char v52 = v36 & 1;
        BOOL v15 = _s13HomeDataModel11ServiceAreaV0E0V2eeoiySbAE_AEtFZ_0((uint64_t)v53, (uint64_t)&v44);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if (!v15) {
          return 0;
        }
        goto LABEL_31;
      }
      swift_bridgeObjectRetain();
    }
    sub_251A1AD5C(v32, v33, v34, v14);
    sub_251A4DF84(v41, v40, v39, v43);
    sub_251A4DF84(v32, v33, v34, v14);
    return 0;
  }
  return result;
}

unint64_t sub_251EF3EDC()
{
  unint64_t result = qword_269BA5800;
  if (!qword_269BA5800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5800);
  }
  return result;
}

unint64_t sub_251EF3F30()
{
  unint64_t result = qword_269BA5808;
  if (!qword_269BA5808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5808);
  }
  return result;
}

unint64_t sub_251EF3F84()
{
  unint64_t result = qword_269BA5818;
  if (!qword_269BA5818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5818);
  }
  return result;
}

unint64_t sub_251EF3FD8()
{
  unint64_t result = qword_269BA5828;
  if (!qword_269BA5828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5828);
  }
  return result;
}

unint64_t sub_251EF402C()
{
  unint64_t result = qword_269BA5840;
  if (!qword_269BA5840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5840);
  }
  return result;
}

unint64_t sub_251EF4080()
{
  unint64_t result = qword_269BA5858;
  if (!qword_269BA5858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5858);
  }
  return result;
}

unint64_t sub_251EF40D4()
{
  unint64_t result = qword_269BA5870;
  if (!qword_269BA5870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5870);
  }
  return result;
}

unint64_t sub_251EF4128()
{
  unint64_t result = qword_269BA5888;
  if (!qword_269BA5888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5888);
  }
  return result;
}

unint64_t sub_251EF417C()
{
  unint64_t result = qword_269BA58A0;
  if (!qword_269BA58A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA58A0);
  }
  return result;
}

unint64_t sub_251EF41D0()
{
  unint64_t result = qword_269BA58B8;
  if (!qword_269BA58B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA58B8);
  }
  return result;
}

unint64_t sub_251EF4224()
{
  unint64_t result = qword_269BA58C8;
  if (!qword_269BA58C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA58C8);
  }
  return result;
}

uint64_t sub_251EF4278(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251EF42E4()
{
  unint64_t result = qword_269BA58D8;
  if (!qword_269BA58D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA58D8);
  }
  return result;
}

unint64_t sub_251EF433C()
{
  unint64_t result = qword_269BA58F0;
  if (!qword_269BA58F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA58F0);
  }
  return result;
}

unint64_t sub_251EF4394()
{
  unint64_t result = qword_269BA58F8;
  if (!qword_269BA58F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269BA5900);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA58F8);
  }
  return result;
}

unint64_t sub_251EF43F4()
{
  unint64_t result = qword_269BA5908;
  if (!qword_269BA5908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5908);
  }
  return result;
}

uint64_t sub_251EF4448()
{
  return MEMORY[0x263F8E908];
}

unint64_t sub_251EF4458()
{
  unint64_t result = qword_269BA5910;
  if (!qword_269BA5910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5910);
  }
  return result;
}

unint64_t sub_251EF44B0()
{
  unint64_t result = qword_269BA5918;
  if (!qword_269BA5918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5918);
  }
  return result;
}

unint64_t sub_251EF4508()
{
  unint64_t result = qword_269BA5920;
  if (!qword_269BA5920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5920);
  }
  return result;
}

uint64_t destroy for ServiceArea(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 72) != 1) {
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ServiceArea(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6 == 1)
  {
    long long v7 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v7;
    *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  }
  else
  {
    int v8 = *(_DWORD *)(a2 + 52);
    *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 52) = v8;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v6;
    *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
    *(unsigned char *)(a1 + 82) = *(unsigned char *)(a2 + 82);
    *(_DWORD *)(a1 + 83) = *(_DWORD *)(a2 + 83);
    *(_WORD *)(a1 + 87) = *(_WORD *)(a2 + 87);
    swift_bridgeObjectRetain();
  }
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ServiceArea(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (long long *)(a1 + 48);
  uint64_t v5 = (long long *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 72);
  if (*(void *)(a1 + 72) == 1)
  {
    if (v6 == 1)
    {
      long long v7 = *v5;
      long long v8 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
      *uint64_t v4 = v7;
      *(_OWORD *)(a1 + 64) = v8;
    }
    else
    {
      *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
      int v11 = *(_DWORD *)(a2 + 52);
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      *(_DWORD *)(a1 + 52) = v11;
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      LOWORD(v11) = *(_WORD *)(a2 + 80);
      *(unsigned char *)(a1 + 82) = *(unsigned char *)(a2 + 82);
      *(_WORD *)(a1 + 80) = v11;
      *(_WORD *)(a1 + 83) = *(_WORD *)(a2 + 83);
      *(_WORD *)(a1 + 85) = *(_WORD *)(a2 + 85);
      *(_WORD *)(a1 + 87) = *(_WORD *)(a2 + 87);
      swift_bridgeObjectRetain();
    }
  }
  else if (v6 == 1)
  {
    sub_251E63814(a1 + 48);
    long long v9 = *(_OWORD *)(a2 + 73);
    long long v10 = *(_OWORD *)(a2 + 64);
    *uint64_t v4 = *v5;
    *(_OWORD *)(a1 + 64) = v10;
    *(_OWORD *)(a1 + 73) = v9;
  }
  else
  {
    *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
    int v12 = *(_DWORD *)(a2 + 52);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *(_DWORD *)(a1 + 52) = v12;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    __int16 v13 = *(_WORD *)(a2 + 80);
    *(unsigned char *)(a1 + 82) = *(unsigned char *)(a2 + 82);
    *(_WORD *)(a1 + 80) = v13;
    *(_WORD *)(a1 + 83) = *(_WORD *)(a2 + 83);
    *(_WORD *)(a1 + 85) = *(_WORD *)(a2 + 85);
    *(_WORD *)(a1 + 87) = *(_WORD *)(a2 + 87);
  }
  int v14 = *(_DWORD *)(a2 + 92);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_DWORD *)(a1 + 92) = v14;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
  *(unsigned char *)(a1 + 114) = *(unsigned char *)(a2 + 114);
  *(unsigned char *)(a1 + 115) = *(unsigned char *)(a2 + 115);
  return a1;
}

__n128 __swift_memcpy116_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(_DWORD *)(a1 + 112) = *((_DWORD *)a2 + 28);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for ServiceArea(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 72) != 1)
  {
    uint64_t v5 = *(void *)(a2 + 72);
    if (v5 != 1)
    {
      int v7 = *(_DWORD *)(a2 + 52);
      *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
      *(_DWORD *)(a1 + 52) = v7;
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v5;
      swift_bridgeObjectRelease();
      *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
      *(unsigned char *)(a1 + 82) = *(unsigned char *)(a2 + 82);
      *(_WORD *)(a1 + 83) = *(_WORD *)(a2 + 83);
      *(_DWORD *)(a1 + 85) = *(_DWORD *)(a2 + 85);
      goto LABEL_6;
    }
    sub_251E63814(a1 + 48);
  }
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
LABEL_6:
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
  *(unsigned char *)(a1 + 114) = *(unsigned char *)(a2 + 114);
  *(unsigned char *)(a1 + 115) = *(unsigned char *)(a2 + 115);
  return a1;
}

uint64_t getEnumTagSinglePayload for ServiceArea(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 116)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ServiceArea(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 112) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 116) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 116) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServiceArea()
{
  return &type metadata for ServiceArea;
}

__n128 __swift_memcpy21_4(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(void *)(a1 + 13) = *(void *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ServiceArea.Progress(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 21)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 4);
  BOOL v4 = v3 >= 4;
  int v5 = v3 - 4;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ServiceArea.Progress(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 20) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 21) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 21) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 4) = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServiceArea.Progress()
{
  return &type metadata for ServiceArea.Progress;
}

ValueMetadata *type metadata accessor for ServiceArea.Progress.OperationalStatus()
{
  return &type metadata for ServiceArea.Progress.OperationalStatus;
}

uint64_t destroy for ServiceArea.Area()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ServiceArea.Area(uint64_t a1, uint64_t a2)
{
  int v3 = *(_DWORD *)(a2 + 4);
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = v3;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
  *(_WORD *)(a1 + 39) = *(_WORD *)(a2 + 39);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ServiceArea.Area(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  int v4 = *(_DWORD *)(a2 + 4);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_DWORD *)(a1 + 4) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __int16 v5 = *(_WORD *)(a2 + 32);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(_WORD *)(a1 + 32) = v5;
  *(_WORD *)(a1 + 35) = *(_WORD *)(a2 + 35);
  *(_WORD *)(a1 + 37) = *(_WORD *)(a2 + 37);
  *(_WORD *)(a1 + 39) = *(_WORD *)(a2 + 39);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ServiceArea.Area(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 4);
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = v4;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(_WORD *)(a1 + 35) = *(_WORD *)(a2 + 35);
  *(_DWORD *)(a1 + 37) = *(_DWORD *)(a2 + 37);
  return a1;
}

uint64_t getEnumTagSinglePayload for ServiceArea.Area(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ServiceArea.Area(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServiceArea.Area()
{
  return &type metadata for ServiceArea.Area;
}

uint64_t assignWithCopy for ServiceArea.Map(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ServiceArea.Map()
{
  return &type metadata for ServiceArea.Map;
}

unsigned char *storeEnumTagSinglePayload for ServiceArea.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *__n128 result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251EF4EFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServiceArea.CodingKeys()
{
  return &type metadata for ServiceArea.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ServiceArea.Map.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251EF5000);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServiceArea.Map.CodingKeys()
{
  return &type metadata for ServiceArea.Map.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ServiceArea.Area.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251EF5104);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServiceArea.Area.CodingKeys()
{
  return &type metadata for ServiceArea.Area.CodingKeys;
}

unsigned char *_s13HomeDataModel11ServiceAreaV8ProgressV17OperationalStatusOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251EF5208);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServiceArea.Progress.CodingKeys()
{
  return &type metadata for ServiceArea.Progress.CodingKeys;
}

unint64_t sub_251EF5244()
{
  unint64_t result = qword_269BA5928;
  if (!qword_269BA5928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5928);
  }
  return result;
}

unint64_t sub_251EF529C()
{
  unint64_t result = qword_269BA5930;
  if (!qword_269BA5930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5930);
  }
  return result;
}

unint64_t sub_251EF52F4()
{
  unint64_t result = qword_269BA5938;
  if (!qword_269BA5938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5938);
  }
  return result;
}

unint64_t sub_251EF534C()
{
  unint64_t result = qword_269BA5940;
  if (!qword_269BA5940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5940);
  }
  return result;
}

unint64_t sub_251EF53A4()
{
  unint64_t result = qword_269BA5948;
  if (!qword_269BA5948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5948);
  }
  return result;
}

unint64_t sub_251EF53FC()
{
  unint64_t result = qword_269BA5950;
  if (!qword_269BA5950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5950);
  }
  return result;
}

unint64_t sub_251EF5454()
{
  unint64_t result = qword_269BA5958;
  if (!qword_269BA5958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5958);
  }
  return result;
}

unint64_t sub_251EF54AC()
{
  unint64_t result = qword_269BA5960;
  if (!qword_269BA5960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5960);
  }
  return result;
}

unint64_t sub_251EF5504()
{
  unint64_t result = qword_269BA5968;
  if (!qword_269BA5968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5968);
  }
  return result;
}

unint64_t sub_251EF555C()
{
  unint64_t result = qword_269BA5970;
  if (!qword_269BA5970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5970);
  }
  return result;
}

unint64_t sub_251EF55B4()
{
  unint64_t result = qword_269BA5978;
  if (!qword_269BA5978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5978);
  }
  return result;
}

unint64_t sub_251EF560C()
{
  unint64_t result = qword_269BA5980;
  if (!qword_269BA5980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5980);
  }
  return result;
}

uint64_t sub_251EF5660(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000251F73380 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6574616D69747365 && a2 == 0xED0000656D695464)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_251EF5818(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x444970616DLL && a2 == 0xE500000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726F6F6C66 && a2 == 0xE500000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6570795461657261 && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6B72616D646E616CLL && a2 == 0xEB00000000676154 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000251F733A0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_251EF5ADC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_251EF5BA8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6574726F70707573 && a2 == 0xEE00736165724164;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574726F70707573 && a2 == 0xED00007370614D64 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64657463656C6573 && a2 == 0xED00007361657241 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x64657463656C6573 && a2 == 0xEB0000000070614DLL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x41746E6572727563 && a2 == 0xEB00000000616572 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000251F729D0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x73736572676F7270 && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000029 && a2 == 0x8000000251F733C0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000251F733F0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x7374726F70707573 && a2 == 0xEC0000007370614DLL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000251F73410)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

unint64_t sub_251EF608C()
{
  unint64_t result = qword_269BA5988;
  if (!qword_269BA5988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269BA5988);
  }
  return result;
}

uint64_t sub_251EF60E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251EF6148(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251EF6190(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251EF61F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticActionSet();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251EF6258(unint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    unint64_t v33 = 0;
    uint64_t v1 = 0;
    unint64_t v2 = 0;
    unint64_t v3 = sub_251F36650() | 0x8000000000000000;
  }
  else
  {
    uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v1 = ~v4;
    uint64_t v5 = *(void *)(a1 + 64);
    unint64_t v33 = a1 + 64;
    uint64_t v6 = -v4;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v2 = v7 & v5;
    unint64_t v3 = a1;
  }
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  v31[3] = v3 & 0x7FFFFFFFFFFFFFFFLL;
  unint64_t v36 = MEMORY[0x263F8EE78];
  int64_t v32 = (unint64_t)(v1 + 64) >> 6;
  v31[2] = MEMORY[0x263F8EE50] + 8;
  unint64_t v34 = v3;
  uint64_t v35 = v1;
  while ((v3 & 0x8000000000000000) != 0)
  {
    uint64_t v13 = sub_251F36660();
    if (!v13) {
      goto LABEL_39;
    }
    uint64_t v41 = v13;
    sub_251A1A568(0, &qword_269B9FF80);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v14 = v42;
    swift_unknownObjectRelease();
    uint64_t v12 = v9;
    uint64_t v10 = v2;
    if (!v14) {
      goto LABEL_39;
    }
LABEL_33:
    unint64_t v38 = v10;
    uint64_t v39 = v12;
    uint64_t v18 = sub_251F34DA0();
    char v37 = v31;
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = *(void *)(v19 + 64);
    MEMORY[0x270FA5388](v18);
    unint64_t v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v40 = v31;
    MEMORY[0x270FA5388](v22 - 8);
    int v24 = (char *)v31 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F356F0();
    sub_251F34D30();

    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v24, 1, v18) == 1)
    {
      uint64_t result = sub_251A1B064((uint64_t)v24, &qword_26B21FF90);
    }
    else
    {
      int v25 = *(uint64_t (**)(char *, char *, uint64_t))(v19 + 32);
      uint64_t v26 = v25((char *)v31 - v21, v24, v18);
      uint64_t v40 = v31;
      MEMORY[0x270FA5388](v26);
      int v27 = (char *)v31 - v21;
      v25((char *)v31 - v21, (char *)v31 - v21, v18);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v36 = sub_251F0F4DC(0, *(void *)(v36 + 16) + 1, 1, v36);
      }
      unint64_t v29 = *(void *)(v36 + 16);
      unint64_t v28 = *(void *)(v36 + 24);
      if (v29 >= v28 >> 1) {
        unint64_t v36 = sub_251F0F4DC(v28 > 1, v29 + 1, 1, v36);
      }
      unint64_t v30 = v36;
      *(void *)(v36 + 16) = v29 + 1;
      uint64_t result = v25((char *)(v30+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(void *)(v19 + 72) * v29), v27, v18);
    }
    unint64_t v3 = v34;
    unint64_t v2 = v38;
    uint64_t v9 = v39;
  }
  if (v2)
  {
    uint64_t v10 = (v2 - 1) & v2;
    unint64_t v11 = __clz(__rbit64(v2)) | (v9 << 6);
    uint64_t v12 = v9;
LABEL_32:
    id v14 = *(id *)(*(void *)(v3 + 48) + 8 * v11);
    if (!v14) {
      goto LABEL_39;
    }
    goto LABEL_33;
  }
  int64_t v15 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v15 >= v32) {
      goto LABEL_39;
    }
    unint64_t v16 = *(void *)(v33 + 8 * v15);
    uint64_t v12 = v9 + 1;
    if (!v16)
    {
      uint64_t v12 = v9 + 2;
      if (v9 + 2 >= v32) {
        goto LABEL_39;
      }
      unint64_t v16 = *(void *)(v33 + 8 * v12);
      if (!v16)
      {
        uint64_t v12 = v9 + 3;
        if (v9 + 3 >= v32) {
          goto LABEL_39;
        }
        unint64_t v16 = *(void *)(v33 + 8 * v12);
        if (!v16)
        {
          uint64_t v12 = v9 + 4;
          if (v9 + 4 >= v32) {
            goto LABEL_39;
          }
          unint64_t v16 = *(void *)(v33 + 8 * v12);
          if (!v16)
          {
            uint64_t v12 = v9 + 5;
            if (v9 + 5 >= v32) {
              goto LABEL_39;
            }
            unint64_t v16 = *(void *)(v33 + 8 * v12);
            if (!v16)
            {
              uint64_t v17 = v9 + 6;
              while (v32 != v17)
              {
                unint64_t v16 = *(void *)(v33 + 8 * v17++);
                if (v16)
                {
                  uint64_t v12 = v17 - 1;
                  goto LABEL_31;
                }
              }
LABEL_39:
              sub_251A1E630();
              return v36;
            }
          }
        }
      }
    }
LABEL_31:
    uint64_t v10 = (v16 - 1) & v16;
    unint64_t v11 = __clz(__rbit64(v16)) + (v12 << 6);
    goto LABEL_32;
  }
  __break(1u);
  return result;
}

void HMAccessory.isFavorite.setter(char a1)
{
  id v3 = objc_msgSend(v1, sel_applicationData);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A20]), sel_initWithBool_, a1 & 1);
  uint64_t v5 = (void *)sub_251F356C0();
  objc_msgSend(v3, sel_setObject_forKeyedSubscript_, v4, v5);

  id v6 = objc_msgSend(v1, sel_applicationData);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v1;
  v10[4] = sub_251EF8A30;
  v10[5] = v7;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  void v10[2] = sub_251C97A44;
  v10[3] = &block_descriptor_44;
  long long v8 = _Block_copy(v10);
  id v9 = v1;
  swift_release();
  objc_msgSend(v9, sel_updateApplicationData_completionHandler_, v6, v8);
  _Block_release(v8);
}

void HMAccessory.shouldShowInDashboard.setter(char a1)
{
  id v3 = objc_msgSend(v1, sel_applicationData);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A20]), sel_initWithBool_, a1 & 1);
  uint64_t v5 = (void *)sub_251F356C0();
  objc_msgSend(v3, sel_setObject_forKeyedSubscript_, v4, v5);

  id v6 = objc_msgSend(v1, sel_applicationData);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v1;
  v10[4] = sub_251EF8A30;
  v10[5] = v7;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  void v10[2] = sub_251C97A44;
  v10[3] = &block_descriptor_6_4;
  long long v8 = _Block_copy(v10);
  id v9 = v1;
  swift_release();
  objc_msgSend(v9, sel_updateApplicationData_completionHandler_, v6, v8);
  _Block_release(v8);
}

void HMAccessory.contributesToHomeStatus.setter(char a1)
{
  id v3 = objc_msgSend(v1, sel_applicationData);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A20]), sel_initWithBool_, a1 & 1);
  uint64_t v5 = (void *)sub_251F356C0();
  objc_msgSend(v3, sel_setObject_forKeyedSubscript_, v4, v5);

  id v6 = objc_msgSend(v1, sel_applicationData);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v1;
  v10[4] = sub_251EF75DC;
  v10[5] = v7;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  void v10[2] = sub_251C97A44;
  v10[3] = &block_descriptor_12_2;
  long long v8 = _Block_copy(v10);
  id v9 = v1;
  swift_release();
  objc_msgSend(v9, sel_updateApplicationData_completionHandler_, v6, v8);
  _Block_release(v8);
}

uint64_t HMAccessory.dateAdded.getter@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_applicationData);
  id v4 = (void *)sub_251F356C0();
  id v5 = objc_msgSend(v3, sel_objectForKeyedSubscript_, v4);

  if (!v5) {
    goto LABEL_5;
  }
  id v23 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v7 = v21;
  unint64_t v6 = v22;
  sub_251A1A568(0, &qword_269BA5580);
  sub_251A1A568(0, &qword_269BA3988);
  uint64_t v8 = sub_251F35FE0();
  unint64_t v11 = (void *)v8;
  if (!v8)
  {
    sub_251A1AD94(v21, v22);
LABEL_5:
    uint64_t v9 = sub_251F34D20();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  MEMORY[0x270FA5388](v12 - 8);
  id v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_251F34D20();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v17(v14, 1, 1, v15);
  sub_251DDF544();
  sub_251F36740();
  sub_251A1AD94(v7, v6);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    uint64_t v18 = a1;
    uint64_t v19 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a1, v14, v15);
    uint64_t v18 = a1;
    uint64_t v19 = 0;
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v17)(v18, v19, 1, v15);
}

uint64_t HMAccessory.isFavorite.getter()
{
  return sub_251EF734C();
}

uint64_t HMAccessory.shouldShowInDashboard.getter()
{
  return sub_251DEEE04();
}

uint64_t HMAccessory.customNearbyAccessoryIdentifiers.getter()
{
  id v1 = objc_msgSend(v0, sel_applicationData);
  unint64_t v2 = (void *)sub_251F356C0();
  id v3 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v2);

  if (!v3) {
    return 0;
  }
  id v42 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = v40;
  sub_251A1A568(0, &qword_269BA5580);
  sub_251A1A568(0, &qword_269B9FF80);
  unint64_t v5 = sub_251F35FF0();
  if (!v5)
  {
    sub_251A1AD94(v40, v41);
    return 0;
  }
  uint64_t v7 = sub_251EF6258(v5);
  swift_bridgeObjectRelease();
  uint64_t v40 = MEMORY[0x263F8EE88];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v7 + 16);
  uint64_t v28 = v4;
  unint64_t v29 = v41;
  v27[0] = v12;
  v27[1] = v7;
  if (v11)
  {
    uint64_t v13 = sub_251F34DA0();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = v14;
    unint64_t v16 = v7 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    uint64_t v32 = *(void *)(v14 + 72);
    unint64_t v36 = (void (**)(char *, void, uint64_t, uint64_t))(v14 + 56);
    uint64_t v18 = v14 + 16;
    uint64_t v17 = *(void (**)(char *, unint64_t, uint64_t))(v14 + 16);
    uint64_t v38 = v18;
    uint64_t v39 = v17;
    uint64_t v34 = v15;
    uint64_t v35 = (uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
    uint64_t v30 = v15 + 8;
    uint64_t v31 = v15 + 32;
    swift_bridgeObjectRetain();
    unint64_t v33 = v10;
    uint64_t v19 = v34;
    while (1)
    {
      v39(v10, v16, v13);
      (*v36)(v10, 0, 1, v13);
      uint64_t v20 = (*v35)(v10, 1, v13);
      if (v20 == 1) {
        break;
      }
      char v37 = v27;
      uint64_t v21 = *(void *)(v19 + 64);
      MEMORY[0x270FA5388](v20);
      unint64_t v22 = (char *)v27 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v23 = (*(uint64_t (**)(char *, char *, uint64_t))(v19 + 32))(v22, v10, v13);
      uint64_t v24 = MEMORY[0x270FA5388](v23);
      MEMORY[0x270FA5388](v24);
      v39(v22, (unint64_t)v22, v13);
      sub_251A637B8(v22, v22);
      int v25 = *(void (**)(char *, uint64_t))(v19 + 8);
      v25(v22, v13);
      uint64_t v10 = v33;
      v25(v22, v13);
      v16 += v32;
      if (!--v11) {
        goto LABEL_13;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_13:
    uint64_t v26 = sub_251F34DA0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v10, 1, 1, v26);
  }
  swift_bridgeObjectRelease();
  sub_251A1AD94(v28, v29);
  swift_bridgeObjectRelease();
  return v40;
}

uint64_t HMAccessory.showAsIndividualTiles.getter()
{
  return sub_251EF734C();
}

uint64_t sub_251EF734C()
{
  id v1 = objc_msgSend(v0, sel_applicationData);
  unint64_t v2 = (void *)sub_251F356C0();
  id v3 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v2);

  if (!v3) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50);
  uint64_t result = swift_dynamicCast();
  if (result) {
    return v5;
  }
  return result;
}

uint64_t HMAccessory.contributesToHomeStatus.getter()
{
  return sub_251DEEE04();
}

unint64_t static HMAccessory.accessoryIsFavoriteKey.getter()
{
  return 0xD00000000000002ALL;
}

unint64_t static HMAccessory.accessoryContributesToHomeStatusKey.getter()
{
  return 0xD000000000000032;
}

unint64_t static HMAccessory.accessoryNearbyAccessoriesKey.getter()
{
  return 0xD000000000000022;
}

unint64_t static HMAccessory.accessoryShowAsIndividualTilesKey.getter()
{
  return 0xD000000000000026;
}

unint64_t static HMAccessory.accessoryShouldShowInHomeDashboardKey.getter()
{
  return 0xD00000000000002DLL;
}

void (*HMAccessory.shouldShowInDashboard.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = HMAccessory.shouldShowInDashboard.getter() & 1;
  return sub_251EF7508;
}

void sub_251EF7508(uint64_t a1)
{
}

uint64_t sub_251EF7530()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void (*HMAccessory.isFavorite.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = HMAccessory.isFavorite.getter() & 1;
  return sub_251EF75B4;
}

void sub_251EF75B4(uint64_t a1)
{
}

uint64_t sub_251EF75DC(uint64_t a1)
{
  return sub_251EF85A8(a1, *(void **)(v1 + 16));
}

void (*HMAccessory.contributesToHomeStatus.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = HMAccessory.contributesToHomeStatus.getter() & 1;
  return sub_251EF7644;
}

void sub_251EF7644(uint64_t a1)
{
}

void HMAccessory.showAsIndividualTiles.setter(char a1)
{
  id v3 = objc_msgSend(v1, sel_applicationData);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A20]), sel_initWithBool_, a1 & 1);
  unsigned __int8 v5 = (void *)sub_251F356C0();
  objc_msgSend(v3, sel_setObject_forKeyedSubscript_, v4, v5);

  id v6 = objc_msgSend(v1, sel_applicationData);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v1;
  v10[4] = sub_251EF8A30;
  v10[5] = v7;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  void v10[2] = sub_251C97A44;
  v10[3] = &block_descriptor_20_1;
  uint64_t v8 = _Block_copy(v10);
  id v9 = v1;
  swift_release();
  objc_msgSend(v9, sel_updateApplicationData_completionHandler_, v6, v8);
  _Block_release(v8);
}

void (*HMAccessory.showAsIndividualTiles.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = HMAccessory.showAsIndividualTiles.getter() & 1;
  return sub_251EF783C;
}

void sub_251EF783C(uint64_t a1)
{
}

uint64_t sub_251EF7864(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  MEMORY[0x270FA5388](v2 - 8);
  id v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251BB9660(a1, (uint64_t)v4);
  return HMAccessory.dateAdded.setter((uint64_t)v4);
}

uint64_t HMAccessory.dateAdded.setter(uint64_t a1)
{
  uint64_t v35 = *MEMORY[0x263EF8340];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  MEMORY[0x270FA5388](v3 - 8);
  unsigned __int8 v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251BB9660(a1, (uint64_t)v5);
  uint64_t v6 = sub_251F34D20();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_251A1B064((uint64_t)v5, &qword_26B21EC20);
    id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF908]), sel_init);
    uint64_t v30 = (void *)sub_251A1A568(0, &qword_269BA3988);
    *(void *)&long long aBlock = v8;
  }
  else
  {
    uint64_t v34 = v6;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v33);
    (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 32))(boxed_opaque_existential_1, v5, v6);
    sub_251A0D578(v33, &aBlock);
  }
  uint64_t v10 = self;
  __swift_project_boxed_opaque_existential_1(&aBlock, (uint64_t)v30);
  uint64_t v11 = sub_251F36B00();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);
  *(void *)&long long aBlock = 0;
  id v12 = objc_msgSend(v10, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v11, 1, &aBlock);
  swift_unknownObjectRelease();
  id v13 = (id)aBlock;
  if (v12)
  {
    uint64_t v14 = sub_251F34C20();
    unint64_t v16 = v15;

    id v17 = objc_msgSend(v1, sel_applicationData);
    uint64_t v18 = (void *)sub_251F34BF0();
    uint64_t v19 = (void *)sub_251F356C0();
    objc_msgSend(v17, sel_setObject_forKeyedSubscript_, v18, v19);

    id v20 = objc_msgSend(v1, sel_applicationData);
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v1;
    uint64_t v31 = sub_251EF8A30;
    uint64_t v32 = v21;
    *(void *)&long long aBlock = MEMORY[0x263EF8330];
    *((void *)&aBlock + 1) = 1107296256;
    unint64_t v29 = sub_251C97A44;
    uint64_t v30 = &block_descriptor_27_2;
    unint64_t v22 = _Block_copy(&aBlock);
    id v23 = v1;
    swift_release();
    objc_msgSend(v23, sel_updateApplicationData_completionHandler_, v20, v22);
    _Block_release(v22);

    sub_251A1AD94(v14, v16);
  }
  else
  {
    uint64_t v24 = v13;
    int v25 = (void *)sub_251F34A30();

    swift_willThrow();
  }
  return sub_251A1B064(a1, &qword_26B21EC20);
}

void (*HMAccessory.dateAdded.modify(void *a1))(uint64_t a1, char a2)
{
  *a1 = v1;
  size_t v3 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20) - 8) + 64);
  a1[1] = v3;
  uint64_t v4 = malloc(v3);
  a1[2] = v4;
  HMAccessory.dateAdded.getter((uint64_t)v4);
  return sub_251EF7D20;
}

void sub_251EF7D20(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)(a1 + 16);
  if (a2)
  {
    MEMORY[0x270FA5388](a1);
    uint64_t v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251BB9660((uint64_t)v2, (uint64_t)v4);
    HMAccessory.dateAdded.setter((uint64_t)v4);
    sub_251A1B064((uint64_t)v2, &qword_26B21EC20);
    free(v2);
  }
  else
  {
    HMAccessory.dateAdded.setter(*(void *)(a1 + 16));
    free(v2);
  }
}

void HMAccessory.customNearbyAccessoryIdentifiers.setter(uint64_t a1)
{
  aBlock[6] = *(id *)MEMORY[0x263EF8340];
  if (a1) {
    uint64_t v1 = a1;
  }
  else {
    uint64_t v1 = MEMORY[0x263F8EE88];
  }
  uint64_t v2 = (void *)sub_2519FC028(MEMORY[0x263F8EE78]);
  uint64_t v3 = *(void *)(v1 + 56);
  uint64_t v61 = v1 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v60 = &v58;
  MEMORY[0x270FA5388](v7 - 8);
  id v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v62 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v10 = 0;
  uint64_t v63 = v1;
  while (1)
  {
    if (v6)
    {
      unint64_t v12 = __clz(__rbit64(v6));
      uint64_t v13 = (v6 - 1) & v6;
      unint64_t v14 = v12 | (v10 << 6);
      goto LABEL_29;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_48;
    }
    if (v15 >= v62) {
      break;
    }
    unint64_t v16 = *(void *)(v61 + 8 * v15);
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v62) {
        break;
      }
      unint64_t v16 = *(void *)(v61 + 8 * v10);
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v62) {
          break;
        }
        unint64_t v16 = *(void *)(v61 + 8 * v10);
        if (!v16)
        {
          int64_t v10 = v15 + 3;
          if (v15 + 3 >= v62) {
            break;
          }
          unint64_t v16 = *(void *)(v61 + 8 * v10);
          if (!v16)
          {
            int64_t v10 = v15 + 4;
            if (v15 + 4 >= v62) {
              break;
            }
            unint64_t v16 = *(void *)(v61 + 8 * v10);
            if (!v16)
            {
              int64_t v17 = v15 + 5;
              if (v17 >= v62) {
                break;
              }
              unint64_t v16 = *(void *)(v61 + 8 * v17);
              if (!v16)
              {
                while (1)
                {
                  int64_t v10 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_49;
                  }
                  if (v10 >= v62) {
                    goto LABEL_41;
                  }
                  unint64_t v16 = *(void *)(v61 + 8 * v10);
                  ++v17;
                  if (v16) {
                    goto LABEL_28;
                  }
                }
              }
              int64_t v10 = v17;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v13 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_29:
    uint64_t v18 = *(void *)(v1 + 48);
    uint64_t v19 = sub_251F34DA0();
    uint64_t v20 = *(void *)(v19 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v20 + 16))(v9, v18 + *(void *)(v20 + 72) * v14, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v9, 0, 1, v19);
    uint64_t v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v9, 1, v19);
    if (v21 == 1) {
      goto LABEL_42;
    }
    unint64_t v64 = v13;
    int64_t v65 = v10;
    MEMORY[0x270FA5388](v21);
    id v23 = (char *)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v24 = v9;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v23, v9, v19);
    sub_251F34D40();
    int v25 = (void *)sub_251F356C0();
    swift_bridgeObjectRelease();
    *(void *)&long long v68 = v25;
    uint64_t v26 = sub_251A1A568(0, &qword_269B9FF80);
    sub_251EF87F4();
    id v27 = v25;
    sub_251F363A0();
    uint64_t v69 = v26;
    *(void *)&long long v68 = v27;
    sub_251A0D578(&v68, v67);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v66 = v2;
    unint64_t v30 = sub_2519FEA74((uint64_t)aBlock);
    uint64_t v31 = v2[2];
    BOOL v32 = (v29 & 1) == 0;
    uint64_t v33 = v31 + v32;
    if (__OFADD__(v31, v32))
    {
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
    }
    char v34 = v29;
    if (v2[3] >= v33)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v2 = v66;
        if (v29) {
          goto LABEL_7;
        }
      }
      else
      {
        sub_251A17C94();
        uint64_t v2 = v66;
        if (v34) {
          goto LABEL_7;
        }
      }
    }
    else
    {
      sub_251A0B5B0(v33, isUniquelyReferenced_nonNull_native);
      unint64_t v35 = sub_2519FEA74((uint64_t)aBlock);
      if ((v34 & 1) != (v36 & 1))
      {
        sub_251F36BA0();
        __break(1u);
        return;
      }
      unint64_t v30 = v35;
      uint64_t v2 = v66;
      if (v34)
      {
LABEL_7:
        uint64_t v11 = (_OWORD *)(v2[7] + 32 * v30);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
        sub_251A0D578(v67, v11);
        goto LABEL_8;
      }
    }
    v2[(v30 >> 6) + 8] |= 1 << v30;
    sub_251A1A45C((uint64_t)aBlock, v2[6] + 40 * v30);
    sub_251A0D578(v67, (_OWORD *)(v2[7] + 32 * v30));
    uint64_t v37 = v2[2];
    BOOL v38 = __OFADD__(v37, 1);
    uint64_t v39 = v37 + 1;
    if (v38) {
      goto LABEL_47;
    }
    v2[2] = v39;
LABEL_8:
    swift_bridgeObjectRelease();
    sub_251A1A624((uint64_t)aBlock);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
    uint64_t v1 = v63;
    unint64_t v6 = v64;
    id v9 = v24;
    int64_t v10 = v65;
  }
LABEL_41:
  uint64_t v40 = sub_251F34DA0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v9, 1, 1, v40);
LABEL_42:
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v41 = self;
  id v42 = (void *)sub_251F35540();
  swift_bridgeObjectRelease();
  aBlock[0] = 0;
  id v43 = objc_msgSend(v41, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v42, 1, aBlock);

  id v44 = aBlock[0];
  if (v43)
  {
    uint64_t v45 = sub_251F34C20();
    unint64_t v47 = v46;

    id v48 = v59;
    id v49 = objc_msgSend(v59, sel_applicationData);
    int v50 = (void *)sub_251F34BF0();
    char v51 = (void *)sub_251F356C0();
    objc_msgSend(v49, sel_setObject_forKeyedSubscript_, v50, v51);

    id v52 = objc_msgSend(v48, sel_applicationData);
    uint64_t v53 = (void *)swift_allocObject();
    v53[2] = v48;
    aBlock[4] = sub_251EF8A30;
    aBlock[5] = v53;
    aBlock[0] = (id)MEMORY[0x263EF8330];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_251C97A44;
    aBlock[3] = &block_descriptor_33_1;
    char v54 = _Block_copy(aBlock);
    id v55 = v48;
    swift_release();
    objc_msgSend(v55, sel_updateApplicationData_completionHandler_, v52, v54);
    _Block_release(v54);

    sub_251A1AD94(v45, v47);
  }
  else
  {
    uint64_t v56 = v44;
    uint64_t v57 = (void *)sub_251F34A30();

    swift_willThrow();
  }
}

uint64_t sub_251EF85A8(uint64_t a1, void *a2)
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v10, (uint64_t)qword_26B21FF20);
  void *v5 = objc_msgSend(a2, sel_home);
  swift_storeEnumTagMultiPayload();
  sub_251F35CF0();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void (*HMAccessory.customNearbyAccessoryIdentifiers.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  *a1 = HMAccessory.customNearbyAccessoryIdentifiers.getter();
  return sub_251EF879C;
}

void sub_251EF879C(uint64_t *a1, char a2)
{
  if (a2)
  {
    uint64_t v2 = swift_bridgeObjectRetain();
    HMAccessory.customNearbyAccessoryIdentifiers.setter(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    HMAccessory.customNearbyAccessoryIdentifiers.setter(*a1);
  }
}

unint64_t sub_251EF87F4()
{
  unint64_t result = qword_269BA59B8;
  if (!qword_269BA59B8)
  {
    sub_251A1A568(255, &qword_269B9FF80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA59B8);
  }
  return result;
}

uint64_t sub_251EF8850@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = HMAccessory.shouldShowInDashboard.getter();
  *a1 = result & 1;
  return result;
}

void sub_251EF8880(char *a1)
{
}

uint64_t sub_251EF88A8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = HMAccessory.isFavorite.getter();
  *a1 = result & 1;
  return result;
}

void sub_251EF88D8(char *a1)
{
}

uint64_t sub_251EF8900@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = HMAccessory.contributesToHomeStatus.getter();
  *a1 = result & 1;
  return result;
}

void sub_251EF8930(char *a1)
{
}

uint64_t sub_251EF8958@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = HMAccessory.showAsIndividualTiles.getter();
  *a1 = result & 1;
  return result;
}

void sub_251EF8988(char *a1)
{
}

uint64_t sub_251EF89B0@<X0>(uint64_t a1@<X8>)
{
  return HMAccessory.dateAdded.getter(a1);
}

uint64_t sub_251EF89D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = HMAccessory.customNearbyAccessoryIdentifiers.getter();
  *a1 = result;
  return result;
}

void sub_251EF8A04()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  HMAccessory.customNearbyAccessoryIdentifiers.setter(v0);
}

Swift::Void __swiftcall HMApplicationData.set(_:forKey:)(Swift::Bool _, Swift::String forKey)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A20]), sel_initWithBool_, _);
  id v4 = (id)sub_251F356C0();
  objc_msgSend(v2, sel_setObject_forKeyedSubscript_, v3, v4);
}

Swift::Void __swiftcall HMApplicationData.set(_:forKey:)(Swift::String _, Swift::String forKey)
{
}

Swift::Void __swiftcall HMApplicationData.set(_:forKey:)(Swift::OpaquePointer _, Swift::String forKey)
{
  id v3 = (void *)sub_251F35540();
  id v4 = (id)sub_251F356C0();
  objc_msgSend(v2, sel_setObject_forKeyedSubscript_, v3, v4);
}

{
  void *v2;
  void *v3;
  id v4;
  uint64_t vars8;

  id v3 = (void *)sub_251F35AA0();
  id v4 = (id)sub_251F356C0();
  objc_msgSend(v2, sel_setObject_forKeyedSubscript_, v3, v4);
}

{
  void *v2;
  void *v3;
  id v4;
  uint64_t vars8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50);
  id v3 = (void *)sub_251F35AA0();
  id v4 = (id)sub_251F356C0();
  objc_msgSend(v2, sel_setObject_forKeyedSubscript_, v3, v4);
}

Swift::String_optional __swiftcall HMApplicationData.string(forKey:)(Swift::String forKey)
{
  uint64_t v2 = (void *)sub_251F356C0();
  id v3 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v2);

  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50);
    int v4 = swift_dynamicCast();
    BOOL v5 = v4 == 0;
    if (v4) {
      uint64_t v6 = v9;
    }
    else {
      uint64_t v6 = 0;
    }
    if (v5) {
      uint64_t v7 = 0;
    }
    else {
      uint64_t v7 = v10;
    }
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
  }
  result.value._object = v7;
  result.value._countAndFlagsBits = v6;
  return result;
}

Swift::Void __swiftcall HMApplicationData.clear(forKey:)(Swift::String forKey)
{
  id v2 = (id)sub_251F356C0();
  objc_msgSend(v1, sel_setObject_forKeyedSubscript_, 0, v2);
}

void HMApplicationData.set(_:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_251EF8D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = (void *)a5();
  id v7 = (id)sub_251F356C0();
  objc_msgSend(v5, sel_setObject_forKeyedSubscript_, v6, v7);
}

Swift::OpaquePointer_optional __swiftcall HMApplicationData.array(forKey:)(Swift::String forKey)
{
  uint64_t v1 = (void *)sub_251EF9528(forKey._countAndFlagsBits, (uint64_t)forKey._object, &qword_26B21EAC8);
  result.value._rawValue = v1;
  result.Swift::Bool is_nil = v2;
  return result;
}

Swift::OpaquePointer_optional __swiftcall HMApplicationData.stringArray(forKey:)(Swift::String forKey)
{
  uint64_t v1 = (void *)sub_251EF9528(forKey._countAndFlagsBits, (uint64_t)forKey._object, &qword_26B21EAB0);
  result.value._rawValue = v1;
  result.Swift::Bool is_nil = v2;
  return result;
}

Swift::Bool_optional __swiftcall HMApplicationData.BOOL(forKey:)(Swift::String forKey)
{
  Swift::Bool v2 = (void *)sub_251F356C0();
  id v3 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v2);

  v4.HomeDataModel::ServiceArea::Progress::OperationalStatus value = 2;
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50);
    if (swift_dynamicCast()) {
      return v6;
    }
    else {
      return (Swift::Bool_optional)2;
    }
  }
  return v4;
}

uint64_t HMApplicationData.data(forKey:)()
{
  uint64_t v1 = (void *)sub_251F356C0();
  id v2 = objc_msgSend(v0, sel_objectForKeyedSubscript_, v1);

  if (!v2) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50);
  if (swift_dynamicCast()) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t HMApplicationData.date(forKey:)@<X0>(uint64_t a1@<X8>)
{
  id v3 = (void *)sub_251F356C0();
  id v4 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v3);

  if (v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50);
    uint64_t v5 = sub_251F34D20();
    int v6 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a1, v6 ^ 1u, 1, v5);
  }
  else
  {
    uint64_t v8 = sub_251F34D20();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    return v9(a1, 1, 1, v8);
  }
}

void HMApplicationData.set(_:forKey:)()
{
  uint64_t v1 = v0;
  id v2 = (void *)sub_251F34C70();
  id v3 = (id)sub_251F356C0();
  objc_msgSend(v1, sel_setObject_forKeyedSubscript_, v2, v3);
}

Swift::Double_optional __swiftcall HMApplicationData.double(forKey:)(Swift::String forKey)
{
  id v2 = (void *)sub_251F356C0();
  id v3 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v2);

  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50);
    if (swift_dynamicCast()) {
      Swift::Bool v5 = v6;
    }
    else {
      Swift::Bool v5 = 0;
    }
  }
  else
  {
    Swift::Bool v5 = 0;
  }
  result.HomeDataModel::ServiceArea::Progress::OperationalStatus value = v4;
  result.Swift::Bool is_nil = v5;
  return result;
}

Swift::Void __swiftcall HMApplicationData.set(_:forKey:)(Swift::Double _, Swift::String forKey)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A20]), sel_initWithDouble_, _);
  id v4 = (id)sub_251F356C0();
  objc_msgSend(v2, sel_setObject_forKeyedSubscript_, v3, v4);
}

void __swiftcall HMApplicationData.float(forKey:)(Swift::Float_optional *__return_ptr retstr, Swift::String forKey)
{
  id v3 = (void *)sub_251F356C0();
  id v4 = objc_msgSend(v2, sel_objectForKeyedSubscript_, v3);

  if (v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50);
    swift_dynamicCast();
  }
}

Swift::Void __swiftcall HMApplicationData.set(_:forKey:)(Swift::Float _, Swift::String forKey)
{
  id v4 = objc_allocWithZone(MEMORY[0x263F08A20]);
  *(Swift::Float *)&double v5 = _;
  id v6 = objc_msgSend(v4, sel_initWithFloat_, v5);
  id v7 = (id)sub_251F356C0();
  objc_msgSend(v2, sel_setObject_forKeyedSubscript_, v6, v7);
}

Swift::Int_optional __swiftcall HMApplicationData.int(forKey:)(Swift::String forKey)
{
  id v2 = (void *)sub_251F356C0();
  id v3 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v2);

  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50);
    int v4 = swift_dynamicCast();
    if (v4) {
      Swift::Int v5 = v7;
    }
    else {
      Swift::Int v5 = 0;
    }
    char v6 = v4 ^ 1;
  }
  else
  {
    Swift::Int v5 = 0;
    char v6 = 1;
  }
  result.HomeDataModel::ServiceArea::Progress::OperationalStatus value = v5;
  result.Swift::Bool is_nil = v6;
  return result;
}

Swift::Void __swiftcall HMApplicationData.set(_:forKey:)(Swift::Int _, Swift::String forKey)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A20]), sel_initWithInteger_, _);
  id v4 = (id)sub_251F356C0();
  objc_msgSend(v2, sel_setObject_forKeyedSubscript_, v3, v4);
}

Swift::OpaquePointer_optional __swiftcall HMApplicationData.dictionary(forKey:)(Swift::String forKey)
{
  uint64_t v1 = (void *)sub_251EF9528(forKey._countAndFlagsBits, (uint64_t)forKey._object, (uint64_t *)&unk_269BA5550);
  result.value._rawValue = v1;
  result.Swift::Bool is_nil = v2;
  return result;
}

uint64_t sub_251EF9528(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  Swift::Int v5 = (void *)sub_251F356C0();
  id v6 = objc_msgSend(v3, sel_objectForKeyedSubscript_, v5);

  if (!v6) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  if (swift_dynamicCast()) {
    return v8;
  }
  else {
    return 0;
  }
}

uint64_t static MatterTileMetadata.empty.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_269B9C520 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for MatterTileMetadata();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269BA59C0);
  return sub_251EFB27C(v3, a1);
}

uint64_t MatterTileMetadata.init(displayName:iconIdentifier:associatedType:tileSize:favorite:showOnDashboard:includeInStatus:dateAdded:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __int16 a10, uint64_t a11)
{
  char v11 = *a7;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(unsigned char *)(a9 + 48) = v11;
  *(unsigned char *)(a9 + 49) = a8;
  *(_WORD *)(a9 + 50) = a10;
  uint64_t v12 = a9 + *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  return sub_251BBB1D0(a11, v12);
}

double MatterTileMetadata.init(accessory:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  char v4 = sub_251AC52B8();
  if (v4 == 2) {
    char v5 = 2;
  }
  else {
    char v5 = v4 & 1;
  }
  char v6 = HMAccessory.isFavorite.getter() & 1;
  char v7 = HMAccessory.shouldShowInDashboard.getter() & 1;
  char v8 = HMAccessory.contributesToHomeStatus.getter() & 1;
  uint64_t v9 = type metadata accessor for MatterTileMetadata();
  HMAccessory.dateAdded.getter(a2 + *(int *)(v9 + 44));

  double result = 0.0;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)a2 = 0u;
  *(unsigned char *)(a2 + 48) = v5;
  *(unsigned char *)(a2 + 49) = v6;
  *(unsigned char *)(a2 + 50) = v7;
  *(unsigned char *)(a2 + 51) = v8;
  return result;
}

uint64_t MatterTileMetadata.displayName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MatterTileMetadata.iconIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MatterTileMetadata.associatedType.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void MatterTileMetadata.tileSize.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 48);
}

uint64_t MatterTileMetadata.favorite.getter()
{
  return *(unsigned __int8 *)(v0 + 49);
}

uint64_t MatterTileMetadata.showOnDashboard.getter()
{
  return *(unsigned __int8 *)(v0 + 50);
}

uint64_t MatterTileMetadata.includeInStatus.getter()
{
  return *(unsigned __int8 *)(v0 + 51);
}

uint64_t MatterTileMetadata.dateAdded.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  return sub_251BB9660(v3, a1);
}

uint64_t MatterTileMetadata.hash(into:)()
{
  if (*(void *)(v0 + 8))
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 24)) {
      goto LABEL_3;
    }
LABEL_6:
    sub_251F36CC0();
    if (*(void *)(v0 + 40)) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  sub_251F36CC0();
  if (!*(void *)(v0 + 24)) {
    goto LABEL_6;
  }
LABEL_3:
  sub_251F36CC0();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 40))
  {
LABEL_4:
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
LABEL_7:
  sub_251F36CC0();
LABEL_8:
  if (*(unsigned char *)(v0 + 48) == 2)
  {
    sub_251F36CC0();
  }
  else
  {
    sub_251F36CC0();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  if (*(unsigned char *)(v0 + 49) != 2) {
    sub_251F36CC0();
  }
  sub_251F36CC0();
  if (*(unsigned char *)(v0 + 50) != 2) {
    sub_251F36CC0();
  }
  sub_251F36CC0();
  if (*(unsigned char *)(v0 + 51) != 2) {
    sub_251F36CC0();
  }
  sub_251F36CC0();
  uint64_t v1 = v0 + *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  MEMORY[0x270FA5388](v2 - 8);
  char v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251BB9660(v1, (uint64_t)v4);
  uint64_t v5 = sub_251F34D20();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (v7 == 1) {
    return sub_251F36CC0();
  }
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v11 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v10, v4, v5);
  sub_251F36CC0();
  sub_251EFC584(&qword_269B9CF80);
  sub_251F35610();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v10, v5);
}

uint64_t sub_251EF9B90()
{
  uint64_t result = 0x4E79616C70736964;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E6564496E6F6369;
      break;
    case 2:
      uint64_t result = 0x746169636F737361;
      break;
    case 3:
      uint64_t result = 0x657A6953656C6974;
      break;
    case 4:
      uint64_t result = 0x657469726F766166;
      break;
    case 5:
      uint64_t result = 0x61446E4F776F6873;
      break;
    case 6:
      uint64_t result = 0x496564756C636E69;
      break;
    case 7:
      uint64_t result = 0x6564644165746164;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251EF9CCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251EFC184(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251EF9CF4(uint64_t a1)
{
  unint64_t v2 = sub_251EFB2E0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251EF9D30(uint64_t a1)
{
  unint64_t v2 = sub_251EFB2E0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MatterTileMetadata.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA59D8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251EFB2E0();
  sub_251F36DA0();
  v10[15] = 0;
  sub_251F36910();
  if (!v2)
  {
    v10[14] = 1;
    sub_251F36910();
    v10[13] = 2;
    sub_251F36910();
    v10[12] = *(unsigned char *)(v3 + 48);
    v10[11] = 3;
    sub_251EFB334();
    sub_251F36970();
    v10[10] = 4;
    sub_251F36920();
    v10[9] = 5;
    sub_251F36920();
    _DWORD v10[8] = 6;
    sub_251F36920();
    type metadata accessor for MatterTileMetadata();
    v10[7] = 7;
    sub_251F34D20();
    sub_251EFC584(&qword_269B9F590);
    sub_251F36970();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t MatterTileMetadata.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t MatterTileMetadata.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA59F0);
  uint64_t v5 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for MatterTileMetadata();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1[3];
  uint64_t v24 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_251EFB2E0();
  id v23 = v7;
  sub_251F36D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
  }
  uint64_t v20 = a2;
  uint64_t v21 = v5;
  char v33 = 0;
  uint64_t v12 = v22;
  *(void *)uint64_t v10 = sub_251F36790();
  *((void *)v10 + 1) = v13;
  char v32 = 1;
  *((void *)v10 + 2) = sub_251F36790();
  *((void *)v10 + 3) = v14;
  char v31 = 2;
  *((void *)v10 + 4) = sub_251F36790();
  *((void *)v10 + 5) = v15;
  char v29 = 3;
  sub_251EFB388();
  sub_251F367D0();
  v10[48] = v30;
  char v28 = 4;
  v10[49] = sub_251F367A0();
  char v27 = 5;
  v10[50] = sub_251F367A0();
  char v26 = 6;
  v10[51] = sub_251F367A0();
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D20();
  char v25 = 7;
  sub_251EFC584(&qword_269B9DBE8);
  sub_251F367D0();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v12);
  sub_251BBB1D0((uint64_t)v18, (uint64_t)&v10[*(int *)(v8 + 44)]);
  sub_251EFB27C((uint64_t)v10, v20);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
  return sub_251EFB3DC((uint64_t)v10);
}

uint64_t sub_251EFA534()
{
  return sub_251F36D00();
}

uint64_t sub_251EFA578()
{
  return sub_251F36D00();
}

uint64_t sub_251EFA5B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MatterTileMetadata.init(from:)(a1, a2);
}

uint64_t sub_251EFA5D0(void *a1)
{
  return MatterTileMetadata.encode(to:)(a1);
}

uint64_t MatterTileMetadata.init(device:endpointId:)@<X0>(uint64_t a1@<X1>, int a2@<W2>, uint64_t a3@<X8>)
{
  void (*v7)(void *__return_ptr, uint64_t *, void, uint64_t, uint64_t);
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  int v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  void v49[3];
  uint64_t v50;

  uint64_t ObjectType = swift_getObjectType();
  LOBYTE(v47) = 6;
  uint64_t v7 = *(void (**)(void *__return_ptr, uint64_t *, void, uint64_t, uint64_t))(a1 + 112);
  v7(v49, &v47, a2 & 0x1FFFF, ObjectType, a1);
  if (!v50)
  {
    sub_251A1B064((uint64_t)v49, &qword_26B21E190);
    goto LABEL_10;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    uint64_t v9 = 2;
    goto LABEL_11;
  }
  uint64_t v8 = sub_251F36750();
  swift_bridgeObjectRelease();
  if (v8 == 1) {
    uint64_t v9 = 1;
  }
  else {
    uint64_t v9 = 2;
  }
  if (!v8) {
    uint64_t v9 = 0;
  }
LABEL_11:
  unint64_t v46 = v9;
  LOBYTE(v47) = 0;
  v7(v49, &v47, a2 & 0x1FFFF, ObjectType, a1);
  if (v50)
  {
    uint64_t v10 = swift_dynamicCast();
    if (v10) {
      uint64_t v11 = v47;
    }
    else {
      uint64_t v11 = 0;
    }
    if (v10) {
      uint64_t v12 = v48;
    }
    else {
      uint64_t v12 = 0;
    }
    id v44 = v12;
    uint64_t v45 = v11;
  }
  else
  {
    sub_251A1B064((uint64_t)v49, &qword_26B21E190);
    id v44 = 0;
    uint64_t v45 = 0;
  }
  LOBYTE(v47) = 2;
  v7(v49, &v47, a2 & 0x1FFFF, ObjectType, a1);
  if (v50)
  {
    uint64_t v13 = swift_dynamicCast();
    if (v13) {
      uint64_t v14 = v47;
    }
    else {
      uint64_t v14 = 0;
    }
    if (v13) {
      uint64_t v15 = v48;
    }
    else {
      uint64_t v15 = 0;
    }
    id v42 = v15;
    id v43 = v14;
  }
  else
  {
    sub_251A1B064((uint64_t)v49, &qword_26B21E190);
    id v42 = 0;
    id v43 = 0;
  }
  LOBYTE(v47) = 7;
  v7(v49, &v47, a2 & 0x1FFFF, ObjectType, a1);
  if (v50)
  {
    uint64_t v16 = swift_dynamicCast();
    if (v16) {
      uint64_t v17 = v47;
    }
    else {
      uint64_t v17 = 0;
    }
    if (v16) {
      uint64_t v18 = v48;
    }
    else {
      uint64_t v18 = 0;
    }
    uint64_t v40 = v18;
    unint64_t v41 = v17;
  }
  else
  {
    sub_251A1B064((uint64_t)v49, &qword_26B21E190);
    uint64_t v40 = 0;
    unint64_t v41 = 0;
  }
  LOBYTE(v47) = 3;
  v7(v49, &v47, a2 & 0x1FFFF, ObjectType, a1);
  if (v50)
  {
    uint64_t v19 = swift_dynamicCast();
    uint64_t v20 = v47;
    if (!v19) {
      uint64_t v20 = 2;
    }
  }
  else
  {
    sub_251A1B064((uint64_t)v49, &qword_26B21E190);
    uint64_t v20 = 2;
  }
  uint64_t v39 = v20;
  LOBYTE(v47) = 4;
  v7(v49, &v47, a2 & 0x1FFFF, ObjectType, a1);
  if (v50)
  {
    uint64_t v21 = swift_dynamicCast();
    uint64_t v22 = v47;
    if (!v21) {
      uint64_t v22 = 2;
    }
  }
  else
  {
    sub_251A1B064((uint64_t)v49, &qword_26B21E190);
    uint64_t v22 = 2;
  }
  BOOL v38 = v22;
  LOBYTE(v47) = 8;
  v7(v49, &v47, a2 & 0x1FFFF, ObjectType, a1);
  if (v50)
  {
    id v23 = swift_dynamicCast();
    uint64_t v24 = v47;
    if (!v23) {
      uint64_t v24 = 2;
    }
  }
  else
  {
    sub_251A1B064((uint64_t)v49, &qword_26B21E190);
    uint64_t v24 = 2;
  }
  uint64_t v37 = v24;
  char v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  MEMORY[0x270FA5388](v25 - 8);
  char v27 = (char *)&v36 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v47) = 9;
  v7(v49, &v47, a2 & 0x1FFFF, ObjectType, a1);
  swift_unknownObjectRelease();
  if (v50)
  {
    char v28 = sub_251F34D20();
    char v29 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, v29 ^ 1u, 1, v28);
  }
  else
  {
    sub_251A1B064((uint64_t)v49, &qword_26B21E190);
    char v30 = sub_251F34D20();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v27, 1, 1, v30);
  }
  char v31 = v44;
  *(void *)a3 = v45;
  *(void *)(a3 + 8) = v31;
  char v32 = v42;
  *(void *)(a3 + 16) = v43;
  *(void *)(a3 + 24) = v32;
  char v33 = v40;
  *(void *)(a3 + 32) = v41;
  *(void *)(a3 + 40) = v33;
  *(unsigned char *)(a3 + 48) = v46;
  *(unsigned char *)(a3 + 49) = v39;
  *(unsigned char *)(a3 + 50) = v38;
  *(unsigned char *)(a3 + 51) = v37;
  char v34 = type metadata accessor for MatterTileMetadata();
  return sub_251BBB1D0((uint64_t)v27, a3 + *(int *)(v34 + 44));
}

double sub_251EFAB70()
{
  uint64_t v0 = type metadata accessor for MatterTileMetadata();
  __swift_allocate_value_buffer(v0, qword_269BA59C0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_269BA59C0);
  uint64_t v2 = v1 + *(int *)(v0 + 44);
  uint64_t v3 = sub_251F34D20();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  double result = 0.0;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)uint64_t v1 = 0u;
  *(_DWORD *)(v1 + 48) = 33686018;
  return result;
}

BOOL _s13HomeDataModel18MatterTileMetadataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  if (!v4)
  {
    if (v5) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v5) {
    return 0;
  }
  BOOL v6 = *(void *)a1 == *(void *)a2 && v4 == v5;
  if (v6 || (char v7 = sub_251F36B10(), result = 0, (v7 & 1) != 0))
  {
LABEL_10:
    uint64_t v9 = *(void *)(a1 + 24);
    uint64_t v10 = *(void *)(a2 + 24);
    if (v9)
    {
      if (!v10) {
        return 0;
      }
      if (*(void *)(a1 + 16) != *(void *)(a2 + 16) || v9 != v10)
      {
        char v11 = sub_251F36B10();
        BOOL result = 0;
        if ((v11 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v10)
    {
      return 0;
    }
    uint64_t v12 = *(void *)(a1 + 40);
    uint64_t v13 = *(void *)(a2 + 40);
    if (v12)
    {
      if (!v13) {
        return 0;
      }
      if (*(void *)(a1 + 32) != *(void *)(a2 + 32) || v12 != v13)
      {
        char v14 = sub_251F36B10();
        BOOL result = 0;
        if ((v14 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v13)
    {
      return 0;
    }
    int v15 = *(unsigned __int8 *)(a1 + 48);
    int v16 = *(unsigned __int8 *)(a2 + 48);
    if (v15 == 2)
    {
      if (v16 != 2) {
        return 0;
      }
    }
    else
    {
      if (v16 == 2) {
        return 0;
      }
      if (v15) {
        unint64_t v17 = 0xD000000000000019;
      }
      else {
        unint64_t v17 = 0xD000000000000018;
      }
      if (v15) {
        unint64_t v18 = 0x8000000251F65270;
      }
      else {
        unint64_t v18 = 0x8000000251F65250;
      }
      if (v16) {
        unint64_t v19 = 0xD000000000000019;
      }
      else {
        unint64_t v19 = 0xD000000000000018;
      }
      if (v16) {
        unint64_t v20 = 0x8000000251F65270;
      }
      else {
        unint64_t v20 = 0x8000000251F65250;
      }
      if (v17 == v19 && v18 == v20)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v21 = sub_251F36B10();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        BOOL result = 0;
        if ((v21 & 1) == 0) {
          return result;
        }
      }
    }
    int v22 = *(unsigned __int8 *)(a1 + 49);
    int v23 = *(unsigned __int8 *)(a2 + 49);
    if (v22 == 2)
    {
      if (v23 != 2) {
        return 0;
      }
    }
    else
    {
      BOOL result = 0;
      BOOL v24 = (v22 & 1) == 0;
      if (v23 == 2 || ((v24 ^ v23) & 1) == 0) {
        return result;
      }
    }
    int v25 = *(unsigned __int8 *)(a1 + 50);
    int v26 = *(unsigned __int8 *)(a2 + 50);
    if (v25 == 2)
    {
      if (v26 != 2) {
        return 0;
      }
    }
    else
    {
      BOOL result = 0;
      BOOL v27 = (v25 & 1) == 0;
      if (v26 == 2 || ((v27 ^ v26) & 1) == 0) {
        return result;
      }
    }
    int v28 = *(unsigned __int8 *)(a1 + 51);
    int v29 = *(unsigned __int8 *)(a2 + 51);
    if (v28 == 2)
    {
      if (v29 != 2) {
        return 0;
      }
    }
    else
    {
      BOOL result = 0;
      BOOL v30 = (v28 & 1) == 0;
      if (v29 == 2 || ((v30 ^ v29) & 1) == 0) {
        return result;
      }
    }
    uint64_t v31 = type metadata accessor for MatterTileMetadata();
    uint64_t v32 = a1 + *(int *)(v31 + 44);
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    v54[3] = v54;
    uint64_t v34 = *(void *)(*(void *)(v33 - 8) + 64);
    MEMORY[0x270FA5388](v33 - 8);
    unint64_t v35 = (v34 + 15) & 0xFFFFFFFFFFFFFFF0;
    char v36 = (char *)v54 - v35;
    sub_251BB9660(v32, (uint64_t)v54 - v35);
    v54[2] = v54;
    uint64_t v37 = MEMORY[0x270FA5388](a2 + *(int *)(v31 + 44));
    BOOL v38 = (char *)v54 - v35;
    sub_251BB9660(v37, (uint64_t)v54 - v35);
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EFF8);
    v54[1] = v54;
    uint64_t v40 = MEMORY[0x270FA5388](v39 - 8);
    id v42 = (char *)v54 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v43 = (uint64_t)&v42[*(int *)(v40 + 56)];
    sub_251BB9660((uint64_t)v54 - v35, (uint64_t)v42);
    sub_251BB9660((uint64_t)v54 - v35, v43);
    uint64_t v44 = sub_251F34D20();
    uint64_t v45 = *(void *)(v44 - 8);
    unint64_t v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
    uint64_t v47 = v46(v42, 1, v44);
    if (v47 == 1)
    {
      sub_251A1B064((uint64_t)v54 - v35, &qword_26B21EC20);
      sub_251A1B064((uint64_t)v54 - v35, &qword_26B21EC20);
      if (v46((char *)v43, 1, v44) == 1)
      {
        sub_251A1B064((uint64_t)v42, &qword_26B21EC20);
        return 1;
      }
    }
    else
    {
      v54[0] = v54;
      MEMORY[0x270FA5388](v47);
      id v48 = (char *)v54 - v35;
      sub_251BB9660((uint64_t)v42, (uint64_t)v54 - v35);
      uint64_t v49 = v46((char *)v43, 1, v44);
      if (v49 != 1)
      {
        MEMORY[0x270FA5388](v49);
        char v51 = (char *)v54 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v51, v43, v44);
        sub_251EFC584((unint64_t *)&qword_269B9F5C0);
        char v52 = sub_251F35650();
        uint64_t v53 = *(void (**)(char *, uint64_t))(v45 + 8);
        v53(v51, v44);
        sub_251A1B064((uint64_t)v38, &qword_26B21EC20);
        sub_251A1B064((uint64_t)v36, &qword_26B21EC20);
        v53(v48, v44);
        sub_251A1B064((uint64_t)v42, &qword_26B21EC20);
        return (v52 & 1) != 0;
      }
      sub_251A1B064((uint64_t)v54 - v35, &qword_26B21EC20);
      sub_251A1B064((uint64_t)v54 - v35, &qword_26B21EC20);
      (*(void (**)(char *, uint64_t))(v45 + 8))((char *)v54 - v35, v44);
    }
    sub_251A1B064((uint64_t)v42, &qword_26B21EFF8);
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for MatterTileMetadata()
{
  uint64_t result = qword_26B21FDB0;
  if (!qword_26B21FDB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_251EFB27C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MatterTileMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_251EFB2E0()
{
  unint64_t result = qword_269BA59E0;
  if (!qword_269BA59E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA59E0);
  }
  return result;
}

unint64_t sub_251EFB334()
{
  unint64_t result = qword_269BA59E8;
  if (!qword_269BA59E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA59E8);
  }
  return result;
}

unint64_t sub_251EFB388()
{
  unint64_t result = qword_269BA59F8;
  if (!qword_269BA59F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA59F8);
  }
  return result;
}

uint64_t sub_251EFB3DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MatterTileMetadata();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_251EFB43C()
{
  unint64_t result = qword_269BA5A00;
  if (!qword_269BA5A00)
  {
    type metadata accessor for MatterTileMetadata();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5A00);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for MatterTileMetadata(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    uint64_t v7 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v7;
    *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
    uint64_t v8 = *(int *)(a3 + 44);
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_251F34D20();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return v3;
}

uint64_t destroy for MatterTileMetadata(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  uint64_t v5 = sub_251F34D20();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t initializeWithCopy for MatterTileMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  uint64_t v7 = *(int *)(a3 + 44);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_251F34D20();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithCopy for MatterTileMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(unsigned char *)(a1 + 51) = *(unsigned char *)(a2 + 51);
  uint64_t v6 = *(int *)(a3 + 44);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_251F34D20();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for MatterTileMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  uint64_t v5 = *(int *)(a3 + 44);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  uint64_t v8 = sub_251F34D20();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t assignWithTake for MatterTileMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  uint64_t v9 = *(int *)(a3 + 44);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = sub_251F34D20();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for MatterTileMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251EFBD4C);
}

uint64_t sub_251EFBD4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 44);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for MatterTileMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251EFBE20);
}

uint64_t sub_251EFBE20(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 44);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_251EFBECC()
{
  sub_251BBBE60();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unsigned char *storeEnumTagSinglePayload for MatterTileMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251EFC044);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MatterTileMetadata.CodingKeys()
{
  return &type metadata for MatterTileMetadata.CodingKeys;
}

unint64_t sub_251EFC080()
{
  unint64_t result = qword_269BA5A08;
  if (!qword_269BA5A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5A08);
  }
  return result;
}

unint64_t sub_251EFC0D8()
{
  unint64_t result = qword_269BA5A10;
  if (!qword_269BA5A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5A10);
  }
  return result;
}

unint64_t sub_251EFC130()
{
  unint64_t result = qword_269BA5A18;
  if (!qword_269BA5A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5A18);
  }
  return result;
}

uint64_t sub_251EFC184(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6564496E6F6369 && a2 == 0xEE00726569666974 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746169636F737361 && a2 == 0xEE00657079546465 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x657A6953656C6974 && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x657469726F766166 && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x61446E4F776F6873 && a2 == 0xEF6472616F626873 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x496564756C636E69 && a2 == 0xEF7375746174536ELL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6564644165746164 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_251EFC584(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_251F34D20();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *StateSnapshot.userRecommendationsTileInfos.getter()
{
  uint64_t v7 = *(void *)(v0 + *(int *)(type metadata accessor for StateSnapshot(0) + 68));
  swift_bridgeObjectRetain_n();
  sub_251B8A6EC(&v7);
  uint64_t v1 = swift_bridgeObjectRelease();
  uint64_t v2 = v7;
  MEMORY[0x270FA5388](v1);
  uint64_t v6 = v0;
  int v3 = sub_251A52774((void (*)(long long *__return_ptr, uint64_t))sub_251B8E338, (uint64_t)&v5, v2);
  swift_release();
  return v3;
}

uint64_t PredictionKind.hash(into:)()
{
  return sub_251F36CB0();
}

BOOL static PredictionKind.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_251EFC6C4(uint64_t a1)
{
  unint64_t v2 = sub_251EFEED0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251EFC700(uint64_t a1)
{
  unint64_t v2 = sub_251EFEED0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251EFC73C()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656E656373;
      break;
    case 2:
      uint64_t result = 0x726F737365636361;
      break;
    case 3:
      uint64_t result = 0x4765636976726573;
      break;
    case 4:
      uint64_t result = 0x737953616964656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251EFC7F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251EFF408(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251EFC820(uint64_t a1)
{
  unint64_t v2 = sub_251EFEDD4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251EFC85C(uint64_t a1)
{
  unint64_t v2 = sub_251EFEDD4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251EFC898(uint64_t a1)
{
  unint64_t v2 = sub_251EFEE28();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251EFC8D4(uint64_t a1)
{
  unint64_t v2 = sub_251EFEE28();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251EFC910(uint64_t a1)
{
  unint64_t v2 = sub_251EFEF24();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251EFC94C(uint64_t a1)
{
  unint64_t v2 = sub_251EFEF24();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251EFC988(uint64_t a1)
{
  unint64_t v2 = sub_251EFEE7C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251EFC9C4(uint64_t a1)
{
  unint64_t v2 = sub_251EFEE7C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251EFCA00(uint64_t a1)
{
  unint64_t v2 = sub_251EFEF78();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251EFCA3C(uint64_t a1)
{
  unint64_t v2 = sub_251EFEF78();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PredictionKind.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v35 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5A20);
  uint64_t v33 = *(void *)(v3 - 8);
  uint64_t v34 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v32 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5A28);
  uint64_t v30 = *(void *)(v5 - 8);
  uint64_t v31 = v5;
  MEMORY[0x270FA5388](v5);
  int v29 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5A30);
  uint64_t v27 = *(void *)(v7 - 8);
  uint64_t v28 = v7;
  MEMORY[0x270FA5388](v7);
  int v26 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5A38);
  uint64_t v24 = *(void *)(v9 - 8);
  uint64_t v25 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5A40);
  uint64_t v23 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5A48);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  unint64_t v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251EFEDD4();
  sub_251F36DA0();
  switch((char)v35)
  {
    case 1:
      char v37 = 1;
      sub_251EFEF24();
      sub_251F36900();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v25);
      return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    case 2:
      char v38 = 2;
      sub_251EFEED0();
      unint64_t v19 = v26;
      sub_251F36900();
      uint64_t v21 = v27;
      uint64_t v20 = v28;
      goto LABEL_7;
    case 3:
      char v39 = 3;
      sub_251EFEE7C();
      unint64_t v19 = v29;
      sub_251F36900();
      uint64_t v21 = v30;
      uint64_t v20 = v31;
      goto LABEL_7;
    case 4:
      char v40 = 4;
      sub_251EFEE28();
      unint64_t v19 = v32;
      sub_251F36900();
      uint64_t v21 = v33;
      uint64_t v20 = v34;
LABEL_7:
      (*(void (**)(char *, uint64_t))(v21 + 8))(v19, v20);
      break;
    default:
      char v36 = 0;
      sub_251EFEF78();
      sub_251F36900();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v12);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

uint64_t PredictionKind.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t PredictionKind.init(from:)(void *a1)
{
  return sub_251EFF65C(a1);
}

uint64_t sub_251EFCFDC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_251EFF65C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_251EFD008(void *a1)
{
  return PredictionKind.encode(to:)(a1, *v1);
}

uint64_t StaticUserActionPrediction.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

double StaticUserActionPrediction.score.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for StaticUserActionPrediction() + 20));
}

uint64_t StaticUserActionPrediction.serviceID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StaticUserActionPrediction() + 24);
  return sub_251A1E280(v3, a1);
}

uint64_t StaticUserActionPrediction.kind.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticUserActionPrediction() + 28));
}

uint64_t StaticUserActionPrediction.hash(into:)()
{
  uint64_t v1 = sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  uint64_t v2 = type metadata accessor for StaticUserActionPrediction();
  sub_251F36CF0();
  uint64_t v3 = v0 + *(int *)(v2 + 24);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E280(v3, (uint64_t)v6);
  uint64_t v7 = *(void *)(v1 - 8);
  uint64_t v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v1);
  if (v8 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v8);
    uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v6, v1);
    sub_251F36CC0();
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v1);
  }
  return sub_251F36CB0();
}

uint64_t sub_251EFD320()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65726F6373;
      break;
    case 2:
      uint64_t result = 0x4965636976726573;
      break;
    case 3:
      uint64_t result = 1684957547;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251EFD39C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251F0140C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251EFD3C4(uint64_t a1)
{
  unint64_t v2 = sub_251EFFDF0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251EFD400(uint64_t a1)
{
  unint64_t v2 = sub_251EFFDF0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticUserActionPrediction.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5A80);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251EFFDF0();
  sub_251F36DA0();
  char v16 = 0;
  sub_251F34DA0();
  sub_251A1A8EC(&qword_26B21E348);
  sub_251F36A20();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for StaticUserActionPrediction();
    char v15 = 1;
    sub_251F369F0();
    char v14 = 2;
    sub_251F36970();
    char v13 = *(unsigned char *)(v3 + *(int *)(v9 + 28));
    char v12 = 3;
    sub_251EFFE44();
    sub_251F36A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticUserActionPrediction.hashValue.getter()
{
  sub_251F36CA0();
  uint64_t v1 = sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  uint64_t v2 = type metadata accessor for StaticUserActionPrediction();
  sub_251F36CF0();
  uint64_t v3 = v0 + *(int *)(v2 + 24);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E280(v3, (uint64_t)v6);
  uint64_t v7 = *(void *)(v1 - 8);
  uint64_t v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v1);
  if (v8 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v8);
    uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v6, v1);
    sub_251F36CC0();
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v1);
  }
  sub_251F36CB0();
  return sub_251F36D00();
}

uint64_t StaticUserActionPrediction.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5A98);
  uint64_t v4 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticUserActionPrediction();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251EFFDF0();
  sub_251F36D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v24 = v9;
  uint64_t v25 = (int *)v7;
  uint64_t v26 = v4;
  uint64_t v10 = sub_251F34DA0();
  uint64_t v27 = v23;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  char v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v34 = 0;
  uint64_t v14 = sub_251A1A8EC(&qword_269B9CC80);
  uint64_t v15 = v29;
  sub_251F36880();
  v23[0] = v14;
  v23[1] = v11;
  char v16 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v17 = (uint64_t)v24;
  v16(v24, v13, v10);
  char v33 = 1;
  sub_251F36850();
  *(void *)(v17 + v25[5]) = v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)v23 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v32 = 2;
  sub_251F367D0();
  sub_251A1E9B4((uint64_t)v21, v17 + v25[6]);
  char v30 = 3;
  sub_251EFFE98();
  sub_251F36880();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v15);
  *(unsigned char *)(v17 + v25[7]) = v31;
  sub_251F015A4(v17, v28, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_251F01674(v17, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
}

uint64_t sub_251EFDD28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  sub_251F36CF0();
  uint64_t v5 = v2 + *(int *)(a2 + 24);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E280(v5, (uint64_t)v8);
  uint64_t v9 = *(void *)(v4 - 8);
  uint64_t v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v4);
  if (v10 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v10);
    uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v8, v4);
    sub_251F36CC0();
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v4);
  }
  return sub_251F36CB0();
}

uint64_t sub_251EFDF24(uint64_t a1, uint64_t a2)
{
  sub_251F36CA0();
  uint64_t v4 = sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  sub_251F36CF0();
  uint64_t v5 = v2 + *(int *)(a2 + 24);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E280(v5, (uint64_t)v8);
  uint64_t v9 = *(void *)(v4 - 8);
  uint64_t v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v4);
  if (v10 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v10);
    uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v8, v4);
    sub_251F36CC0();
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v4);
  }
  sub_251F36CB0();
  return sub_251F36D00();
}

uint64_t sub_251EFE12C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticUserActionPrediction.init(from:)(a1, a2);
}

uint64_t sub_251EFE144(void *a1)
{
  return StaticUserActionPrediction.encode(to:)(a1);
}

BOOL static StaticUserActionPrediction.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticUserActionPrediction();
  return *(double *)(a2 + *(int *)(v4 + 20)) < *(double *)(a1 + *(int *)(v4 + 20));
}

BOOL sub_251EFE19C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(double *)(a2 + *(int *)(a3 + 20)) < *(double *)(a1 + *(int *)(a3 + 20));
}

BOOL sub_251EFE1B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(double *)(a1 + *(int *)(a3 + 20)) >= *(double *)(a2 + *(int *)(a3 + 20));
}

BOOL sub_251EFE1CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(double *)(a2 + *(int *)(a3 + 20)) >= *(double *)(a1 + *(int *)(a3 + 20));
}

BOOL sub_251EFE1E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(double *)(a1 + *(int *)(a3 + 20)) < *(double *)(a2 + *(int *)(a3 + 20));
}

uint64_t Collection<>.mapSnapshot(_:)()
{
  return sub_251F35910();
}

double sub_251EFE26C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v99 = a2;
  uint64_t v100 = a3;
  long long v96 = (uint64_t *)type metadata accessor for StaticServiceGroup();
  uint64_t v93 = *(v96 - 1);
  uint64_t v4 = MEMORY[0x270FA5388](v96);
  long long v94 = (uint64_t *)((char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v4);
  long long v95 = (char *)&v83 - v6;
  uint64_t v7 = type metadata accessor for StaticActionSet();
  uint64_t v92 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v83 - v11;
  uint64_t v13 = type metadata accessor for StaticMediaSystem();
  uint64_t v91 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  char v16 = (char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v83 - v17;
  uint64_t v90 = type metadata accessor for StaticAccessory(0);
  uint64_t v87 = *(void *)(v90 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v90);
  uint64_t v88 = (uint64_t)&v83 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v89 = (uint64_t)&v83 - v21;
  uint64_t v86 = (int *)type metadata accessor for StaticService();
  uint64_t v84 = *((void *)v86 - 1);
  uint64_t v22 = MEMORY[0x270FA5388](v86);
  uint64_t v83 = (uint64_t)&v83 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v85 = (uint64_t)&v83 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)&v83 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v97 = (uint64_t)&v83 - v29;
  uint64_t v30 = type metadata accessor for StaticUserActionPrediction();
  uint64_t v31 = *(int *)(v30 + 28);
  uint64_t v98 = a1;
  switch(*(unsigned char *)(a1 + v31))
  {
    case 1:
      uint64_t v32 = *(void *)(v99 + *(int *)(type metadata accessor for StateSnapshot(0) + 36));
      if (!*(void *)(v32 + 16)) {
        goto LABEL_32;
      }
      unint64_t v33 = sub_2519FE584(v98);
      if ((v34 & 1) == 0) {
        goto LABEL_32;
      }
      sub_251F015A4(*(void *)(v32 + 56) + *(void *)(v92 + 72) * v33, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      sub_251F0160C((uint64_t)v10, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      if (v12[*(int *)(v7 + 44)] != 1)
      {
        sub_251F01674((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
        goto LABEL_32;
      }
      uint64_t v35 = v100;
      v100[3] = v7;
      v35[4] = sub_251F016D4(&qword_269B9E280, (void (*)(uint64_t))type metadata accessor for StaticActionSet);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v35);
      sub_251F0160C((uint64_t)v12, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      return result;
    case 2:
      uint64_t v38 = v30;
      uint64_t v39 = sub_251F34DA0();
      long long v96 = &v83;
      uint64_t v40 = *(void *)(v39 - 8);
      MEMORY[0x270FA5388](v39);
      id v42 = (char *)&v83 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v43 = v98 + *(int *)(v38 + 24);
      uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      uint64_t v45 = *(void *)(*(void *)(v44 - 8) + 64);
      MEMORY[0x270FA5388](v44 - 8);
      sub_251A1E280(v43, (uint64_t)&v83 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
      unint64_t v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
      if (v46((char *)&v83 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v39) == 1)
      {
        sub_251A1B064((uint64_t)&v83 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_26B21FF90);
        uint64_t v47 = v99;
LABEL_27:
        uint64_t v78 = *(void *)(v47 + *(int *)(type metadata accessor for StateSnapshot(0) + 32));
        if (*(void *)(v78 + 16))
        {
          unint64_t v79 = sub_2519FE584(v98);
          if (v80)
          {
            uint64_t v81 = v88;
            char v52 = (void (*)(uint64_t))type metadata accessor for StaticAccessory;
            sub_251F015A4(*(void *)(v78 + 56) + *(void *)(v87 + 72) * v79, v88, type metadata accessor for StaticAccessory);
            uint64_t v53 = type metadata accessor for StaticAccessory;
            uint64_t v54 = v89;
            sub_251F0160C(v81, v89, type metadata accessor for StaticAccessory);
            id v55 = v100;
            v100[3] = v90;
            uint64_t v56 = &qword_269B9E288;
            goto LABEL_30;
          }
        }
        goto LABEL_32;
      }
      (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v42, (char *)&v83 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0), v39);
      uint64_t v63 = type metadata accessor for StateSnapshot(0);
      uint64_t v47 = v99;
      uint64_t v64 = *(void *)(v99 + *(int *)(v63 + 60));
      if (!*(void *)(v64 + 16) || (unint64_t v65 = sub_2519FE584((uint64_t)v42), (v66 & 1) == 0))
      {
        (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v39);
        goto LABEL_27;
      }
      long long v95 = v42;
      sub_251F015A4(*(void *)(v64 + 56) + *(void *)(v84 + 72) * v65, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v67 = v97;
      sub_251F0160C((uint64_t)v28, v97, (uint64_t (*)(void))type metadata accessor for StaticService);
      char v68 = *(unsigned char *)(v67 + v86[18]);
      uint64_t v69 = v67;
      uint64_t v70 = v85;
      sub_251F015A4(v69, v85, (uint64_t (*)(void))type metadata accessor for StaticService);
      if ((v68 & 1) == 0) {
        goto LABEL_25;
      }
      if (qword_269B9C488 != -1) {
        swift_once();
      }
      char v71 = sub_251DB3C0C(*(unsigned __int8 *)(v70 + v86[22]), qword_269BF31F0);
      uint64_t v72 = v83;
      sub_251F015A4(v70, v83, (uint64_t (*)(void))type metadata accessor for StaticService);
      if ((v71 & 1) == 0)
      {
        sub_251F01674(v72, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_25:
        sub_251F01674(v70, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_26:
        sub_251F01674(v97, (uint64_t (*)(void))type metadata accessor for StaticService);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v95, v39);
        goto LABEL_27;
      }
      long long v94 = &v83;
      uint64_t v73 = MEMORY[0x270FA5388](v72 + v86[25]);
      uint64_t v74 = (char *)&v83 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_251A1E280(v73, (uint64_t)v74);
      sub_251F01674(v72, (uint64_t (*)(void))type metadata accessor for StaticService);
      unsigned int v75 = v46(v74, 1, v39);
      sub_251A1B064((uint64_t)v74, &qword_26B21FF90);
      sub_251F01674(v70, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (v75 != 1) {
        goto LABEL_26;
      }
      uint64_t v76 = v100;
      v100[3] = (uint64_t)v86;
      v76[4] = sub_251F016D4(&qword_269B9E270, (void (*)(uint64_t))type metadata accessor for StaticService);
      uint64_t v77 = __swift_allocate_boxed_opaque_existential_1(v76);
      sub_251F0160C(v97, (uint64_t)v77, (uint64_t (*)(void))type metadata accessor for StaticService);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v95, v39);
      return result;
    case 3:
      uint64_t v48 = *(void *)(v99 + *(int *)(type metadata accessor for StateSnapshot(0) + 56));
      if (!*(void *)(v48 + 16)) {
        goto LABEL_32;
      }
      unint64_t v49 = sub_2519FE584(v98);
      if ((v50 & 1) == 0) {
        goto LABEL_32;
      }
      uint64_t v51 = (uint64_t)v94;
      char v52 = (void (*)(uint64_t))type metadata accessor for StaticServiceGroup;
      sub_251F015A4(*(void *)(v48 + 56) + *(void *)(v93 + 72) * v49, (uint64_t)v94, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      uint64_t v53 = (uint64_t (*)(void))type metadata accessor for StaticServiceGroup;
      uint64_t v54 = (uint64_t)v95;
      sub_251F0160C(v51, (uint64_t)v95, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      id v55 = v100;
      v100[3] = (uint64_t)v96;
      uint64_t v56 = &qword_269B9E278;
LABEL_30:
      v55[4] = sub_251F016D4(v56, v52);
      uint64_t v61 = __swift_allocate_boxed_opaque_existential_1(v55);
      uint64_t v62 = v54;
      goto LABEL_31;
    case 4:
      uint64_t v57 = *(void *)(v99 + *(int *)(type metadata accessor for StateSnapshot(0) + 44));
      if (!*(void *)(v57 + 16)) {
        goto LABEL_32;
      }
      unint64_t v58 = sub_2519FE584(v98);
      if ((v59 & 1) == 0) {
        goto LABEL_32;
      }
      sub_251F015A4(*(void *)(v57 + 56) + *(void *)(v91 + 72) * v58, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
      uint64_t v53 = (uint64_t (*)(void))type metadata accessor for StaticMediaSystem;
      sub_251F0160C((uint64_t)v16, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
      uint64_t v60 = v100;
      v100[3] = v13;
      v60[4] = sub_251F016D4(&qword_269B9E260, (void (*)(uint64_t))type metadata accessor for StaticMediaSystem);
      uint64_t v61 = __swift_allocate_boxed_opaque_existential_1(v60);
      uint64_t v62 = (uint64_t)v18;
LABEL_31:
      sub_251F0160C(v62, (uint64_t)v61, v53);
      return result;
    default:
LABEL_32:
      uint64_t v82 = v100;
      v100[4] = 0;
      double result = 0.0;
      *(_OWORD *)uint64_t v82 = 0u;
      *((_OWORD *)v82 + 1) = 0u;
      return result;
  }
}

unint64_t sub_251EFEDD4()
{
  unint64_t result = qword_269BA5A50;
  if (!qword_269BA5A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5A50);
  }
  return result;
}

unint64_t sub_251EFEE28()
{
  unint64_t result = qword_269BA5A58;
  if (!qword_269BA5A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5A58);
  }
  return result;
}

unint64_t sub_251EFEE7C()
{
  unint64_t result = qword_269BA5A60;
  if (!qword_269BA5A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5A60);
  }
  return result;
}

unint64_t sub_251EFEED0()
{
  unint64_t result = qword_269BA5A68;
  if (!qword_269BA5A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5A68);
  }
  return result;
}

unint64_t sub_251EFEF24()
{
  unint64_t result = qword_269BA5A70;
  if (!qword_269BA5A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5A70);
  }
  return result;
}

unint64_t sub_251EFEF78()
{
  unint64_t result = qword_269BA5A78;
  if (!qword_269BA5A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5A78);
  }
  return result;
}

BOOL _s13HomeDataModel26StaticUserActionPredictionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_251F34D70() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for StaticUserActionPrediction();
  if (*(double *)(a1 + *(int *)(v4 + 20)) != *(double *)(a2 + *(int *)(v4 + 20))) {
    return 0;
  }
  uint64_t v5 = v4;
  uint64_t v6 = a1 + *(int *)(v4 + 24);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  unint64_t v33 = &v27;
  uint64_t v8 = *(void *)(*(void *)(v7 - 8) + 64);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E280(v6, (uint64_t)v9);
  uint64_t v32 = &v27;
  uint64_t v29 = v5;
  uint64_t v10 = MEMORY[0x270FA5388](a2 + *(int *)(v5 + 24));
  uint64_t v30 = (char *)((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E280(v10, (uint64_t)v9);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
  uint64_t v31 = &v27;
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_251A1E280((uint64_t)v9, (uint64_t)v14);
  uint64_t v34 = v15;
  sub_251A1E280((uint64_t)v9, v15);
  uint64_t v16 = sub_251F34DA0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  uint64_t v19 = v18(v14, 1, v16);
  if (v19 == 1)
  {
    sub_251A1B064((uint64_t)v9, &qword_26B21FF90);
    sub_251A1B064((uint64_t)v9, &qword_26B21FF90);
    if (v18((char *)v34, 1, v16) == 1)
    {
      sub_251A1B064((uint64_t)v14, &qword_26B21FF90);
      return *(unsigned __int8 *)(a1 + *(int *)(v29 + 28)) == *(unsigned __int8 *)(a2 + *(int *)(v29 + 28));
    }
    goto LABEL_8;
  }
  uint64_t v28 = (uint64_t)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v20 = (char *)((char *)&v27 - v30);
  sub_251A1E280((uint64_t)v14, (char *)&v27 - v30);
  uint64_t v21 = v18((char *)v34, 1, v16);
  if (v21 == 1)
  {
    sub_251A1B064(v28, &qword_26B21FF90);
    sub_251A1B064((uint64_t)v9, &qword_26B21FF90);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
LABEL_8:
    sub_251A1B064((uint64_t)v14, &qword_26B21E6B8);
    return 0;
  }
  uint64_t v30 = (char *)&v27;
  MEMORY[0x270FA5388](v21);
  uint64_t v27 = (uint64_t)&v27;
  uint64_t v24 = (char *)&v27 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))(v24, v34, v16);
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
  char v25 = sub_251F35650();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v17 + 8);
  v26(v24, v16);
  sub_251A1B064(v28, &qword_26B21FF90);
  sub_251A1B064((uint64_t)v9, &qword_26B21FF90);
  v26(v20, v16);
  sub_251A1B064((uint64_t)v14, &qword_26B21FF90);
  if (v25) {
    return *(unsigned __int8 *)(a1 + *(int *)(v29 + 28)) == *(unsigned __int8 *)(a2 + *(int *)(v29 + 28));
  }
  return 0;
}

uint64_t sub_251EFF408(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656E656373 && a2 == 0xE500000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F737365636361 && a2 == 0xE900000000000079 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4765636976726573 && a2 == 0xEC00000070756F72 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x737953616964656DLL && a2 == 0xEB000000006D6574)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_251EFF65C(void *a1)
{
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5B38);
  uint64_t v34 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v44 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5B40);
  uint64_t v40 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v43 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5B48);
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  MEMORY[0x270FA5388](v4);
  id v42 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5B50);
  uint64_t v35 = *(void *)(v6 - 8);
  uint64_t v36 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5B58);
  uint64_t v33 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5B60);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (uint64_t)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  uint64_t v45 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_251EFEDD4();
  uint64_t v17 = v46;
  sub_251F36D90();
  if (!v17)
  {
    unint64_t v46 = v11;
    uint64_t v31 = v9;
    uint64_t v32 = v13;
    uint64_t v18 = v8;
    uint64_t v20 = v42;
    uint64_t v19 = v43;
    uint64_t v21 = v44;
    uint64_t v22 = v15;
    uint64_t v23 = sub_251F368E0();
    if (*(void *)(v23 + 16) == 1)
    {
      uint64_t v15 = *(unsigned __int8 *)(v23 + 32);
      switch(*(unsigned char *)(v23 + 32))
      {
        case 1:
          uint64_t v30 = v32;
          char v48 = 1;
          sub_251EFEF24();
          sub_251F36770();
          (*(void (**)(char *, uint64_t))(v35 + 8))(v18, v36);
          goto LABEL_12;
        case 2:
          uint64_t v30 = v32;
          char v49 = 2;
          sub_251EFEED0();
          sub_251F36770();
          (*(void (**)(char *, uint64_t))(v38 + 8))(v20, v39);
LABEL_12:
          swift_bridgeObjectRelease();
          uint64_t v24 = v30;
          goto LABEL_10;
        case 3:
          uint64_t v24 = v32;
          char v50 = 3;
          sub_251EFEE7C();
          sub_251F36770();
          (*(void (**)(char *, uint64_t))(v40 + 8))(v19, v37);
          goto LABEL_13;
        case 4:
          char v51 = 4;
          sub_251EFEE28();
          sub_251F36770();
          (*(void (**)(char *, uint64_t))(v34 + 8))(v21, v41);
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v22, v12);
          break;
        default:
          uint64_t v24 = v32;
          char v47 = 0;
          sub_251EFEF78();
          char v25 = v46;
          sub_251F36770();
          (*(void (**)(char *, uint64_t))(v33 + 8))(v25, v31);
LABEL_13:
          swift_bridgeObjectRelease();
LABEL_10:
          (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v12);
          break;
      }
    }
    else
    {
      uint64_t v26 = sub_251F36490();
      uint64_t v15 = swift_allocError();
      uint64_t v28 = v27;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
      *uint64_t v28 = &type metadata for PredictionKind;
      sub_251F36780();
      sub_251F36480();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v26 - 8) + 104))(v28, *MEMORY[0x263F8DCB0], v26);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v22, v12);
    }
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v45);
  return v15;
}

uint64_t type metadata accessor for StaticUserActionPrediction()
{
  uint64_t result = qword_26B21EA30;
  if (!qword_26B21EA30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_251EFFDF0()
{
  unint64_t result = qword_269BA5A88;
  if (!qword_269BA5A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5A88);
  }
  return result;
}

unint64_t sub_251EFFE44()
{
  unint64_t result = qword_269BA5A90;
  if (!qword_269BA5A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5A90);
  }
  return result;
}

unint64_t sub_251EFFE98()
{
  unint64_t result = qword_269BA5AA0;
  if (!qword_269BA5AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5AA0);
  }
  return result;
}

unint64_t sub_251EFFEF0()
{
  unint64_t result = qword_269BA5AA8;
  if (!qword_269BA5AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5AA8);
  }
  return result;
}

uint64_t sub_251EFFF44()
{
  return sub_251F016D4(&qword_269BA5AB0, (void (*)(uint64_t))type metadata accessor for StaticUserActionPrediction);
}

uint64_t sub_251EFFF8C()
{
  return sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
}

ValueMetadata *type metadata accessor for PredictionKind()
{
  return &type metadata for PredictionKind;
}

char *initializeBufferWithCopyOfBuffer for StaticUserActionPrediction(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    uint64_t v10 = a3[6];
    *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v10], 1, v7))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      v9(v11, v12, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
    a1[a3[7]] = a2[a3[7]];
  }
  return a1;
}

uint64_t destroy for StaticUserActionPrediction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(a1, v4);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
  }
  return result;
}

char *initializeWithCopy for StaticUserActionPrediction(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  uint64_t v9 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v9], 1, v6))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

char *assignWithCopy for StaticUserActionPrediction(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  uint64_t v18 = a3;
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = &a1[v9];
  uint64_t v17 = a2;
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v13 = v12(&a1[v9], 1, v6);
  int v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
LABEL_7:
  a1[*(int *)(v18 + 28)] = v17[*(int *)(v18 + 28)];
  return a1;
}

char *initializeWithTake for StaticUserActionPrediction(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v9 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v9], 1, v6))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

char *assignWithTake for StaticUserActionPrediction(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v18 = a3;
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  uint64_t v10 = &a1[v9];
  uint64_t v17 = a2;
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v13 = v12(&a1[v9], 1, v6);
  int v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
LABEL_7:
  a1[*(int *)(v18 + 28)] = v17[*(int *)(v18 + 28)];
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticUserActionPrediction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251F0091C);
}

uint64_t sub_251F0091C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
      if (v14 >= 5) {
        return v14 - 4;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 24);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for StaticUserActionPrediction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251F00A44);
}

uint64_t sub_251F00A44(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_251F34DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 28)) = a2 + 4;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 24);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_251F00B58()
{
  sub_251F34DA0();
  if (v0 <= 0x3F)
  {
    sub_251A24BB4();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for StaticUserActionPrediction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251F00D00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticUserActionPrediction.CodingKeys()
{
  return &type metadata for StaticUserActionPrediction.CodingKeys;
}

unsigned char *_s13HomeDataModel14PredictionKindOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251F00E04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PredictionKind.CodingKeys()
{
  return &type metadata for PredictionKind.CodingKeys;
}

ValueMetadata *type metadata accessor for PredictionKind.UnknownCodingKeys()
{
  return &type metadata for PredictionKind.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for PredictionKind.SceneCodingKeys()
{
  return &type metadata for PredictionKind.SceneCodingKeys;
}

ValueMetadata *type metadata accessor for PredictionKind.AccessoryCodingKeys()
{
  return &type metadata for PredictionKind.AccessoryCodingKeys;
}

ValueMetadata *type metadata accessor for PredictionKind.ServiceGroupCodingKeys()
{
  return &type metadata for PredictionKind.ServiceGroupCodingKeys;
}

ValueMetadata *type metadata accessor for PredictionKind.MediaSystemCodingKeys()
{
  return &type metadata for PredictionKind.MediaSystemCodingKeys;
}

unint64_t sub_251F00E90()
{
  unint64_t result = qword_269BA5AB8;
  if (!qword_269BA5AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5AB8);
  }
  return result;
}

unint64_t sub_251F00EE8()
{
  unint64_t result = qword_269BA5AC0;
  if (!qword_269BA5AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5AC0);
  }
  return result;
}

unint64_t sub_251F00F40()
{
  unint64_t result = qword_269BA5AC8;
  if (!qword_269BA5AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5AC8);
  }
  return result;
}

unint64_t sub_251F00F98()
{
  unint64_t result = qword_269BA5AD0;
  if (!qword_269BA5AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5AD0);
  }
  return result;
}

unint64_t sub_251F00FF0()
{
  unint64_t result = qword_269BA5AD8;
  if (!qword_269BA5AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5AD8);
  }
  return result;
}

unint64_t sub_251F01048()
{
  unint64_t result = qword_269BA5AE0;
  if (!qword_269BA5AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5AE0);
  }
  return result;
}

unint64_t sub_251F010A0()
{
  unint64_t result = qword_269BA5AE8;
  if (!qword_269BA5AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5AE8);
  }
  return result;
}

unint64_t sub_251F010F8()
{
  unint64_t result = qword_269BA5AF0;
  if (!qword_269BA5AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5AF0);
  }
  return result;
}

unint64_t sub_251F01150()
{
  unint64_t result = qword_269BA5AF8;
  if (!qword_269BA5AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5AF8);
  }
  return result;
}

unint64_t sub_251F011A8()
{
  unint64_t result = qword_269BA5B00;
  if (!qword_269BA5B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5B00);
  }
  return result;
}

unint64_t sub_251F01200()
{
  unint64_t result = qword_269BA5B08;
  if (!qword_269BA5B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5B08);
  }
  return result;
}

unint64_t sub_251F01258()
{
  unint64_t result = qword_269BA5B10;
  if (!qword_269BA5B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5B10);
  }
  return result;
}

unint64_t sub_251F012B0()
{
  unint64_t result = qword_269BA5B18;
  if (!qword_269BA5B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5B18);
  }
  return result;
}

unint64_t sub_251F01308()
{
  unint64_t result = qword_269BA5B20;
  if (!qword_269BA5B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5B20);
  }
  return result;
}

unint64_t sub_251F01360()
{
  unint64_t result = qword_269BA5B28;
  if (!qword_269BA5B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5B28);
  }
  return result;
}

unint64_t sub_251F013B8()
{
  unint64_t result = qword_269BA5B30;
  if (!qword_269BA5B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5B30);
  }
  return result;
}

uint64_t sub_251F0140C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65726F6373 && a2 == 0xE500000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4965636976726573 && a2 == 0xE900000000000044 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_251F015A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251F0160C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251F01674(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251F016D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_251F0171C@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_251B8E338(a1, a2);
}

uint64_t sub_251F01734(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = type metadata accessor for IconTextValueStringDataHolder();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(v5 + 32);
  int v7 = *(unsigned __int8 *)(v6 + 24);
  if (v7 != 255) {
    sub_251A1B604(*(void *)v6, *(void *)(v6 + 8), *(void *)(v6 + 16), v7);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 20);
  type metadata accessor for TilesFilter();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if ((result - 1) <= 2)
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(off_26536EEB0[(int)result - 1]);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    return v11(v8, v10);
  }
  return result;
}

uint64_t sub_251F01878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251F0188C);
}

uint64_t sub_251F0188C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for TilesFilter();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_251F01984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251F01998);
}

uint64_t sub_251F01998(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for TilesFilter();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for LightsStatusItem()
{
  uint64_t result = qword_269BA5B68;
  if (!qword_269BA5B68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_251F01AE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *), uint64_t a4)
{
  uint64_t v8 = type metadata accessor for StaticService();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8 - 8);
  char v50 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v47 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)v47 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v48 = (uint64_t)v47 - v18;
  uint64_t v19 = *(void *)(a2 + 56);
  uint64_t v55 = a2 + 56;
  uint64_t v59 = a1;
  uint64_t v20 = -1 << *(unsigned char *)(a2 + 32);
  if (-v20 < 64) {
    uint64_t v21 = ~(-1 << -(char)v20);
  }
  else {
    uint64_t v21 = -1;
  }
  unint64_t v22 = v21 & v19;
  v47[1] = -1 << *(unsigned char *)(a2 + 32);
  int64_t v54 = (unint64_t)(63 - v20) >> 6;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v24 = 0;
  uint64_t v52 = a4;
  uint64_t v53 = a2;
  uint64_t v51 = v9;
  char v49 = v14;
  uint64_t v25 = (uint64_t)v50;
  while (1)
  {
    if (v22)
    {
      unint64_t v26 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      unint64_t v27 = v26 | (v24 << 6);
      goto LABEL_26;
    }
    int64_t v28 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v54) {
      goto LABEL_28;
    }
    unint64_t v29 = *(void *)(v55 + 8 * v28);
    int64_t v30 = v24 + 1;
    if (!v29)
    {
      int64_t v30 = v24 + 2;
      if (v24 + 2 >= v54) {
        goto LABEL_28;
      }
      unint64_t v29 = *(void *)(v55 + 8 * v30);
      if (!v29)
      {
        int64_t v30 = v24 + 3;
        if (v24 + 3 >= v54) {
          goto LABEL_28;
        }
        unint64_t v29 = *(void *)(v55 + 8 * v30);
        if (!v29)
        {
          int64_t v30 = v24 + 4;
          if (v24 + 4 >= v54) {
            goto LABEL_28;
          }
          unint64_t v29 = *(void *)(v55 + 8 * v30);
          if (!v29)
          {
            int64_t v30 = v24 + 5;
            if (v24 + 5 >= v54) {
              goto LABEL_28;
            }
            unint64_t v29 = *(void *)(v55 + 8 * v30);
            if (!v29) {
              break;
            }
          }
        }
      }
    }
LABEL_25:
    unint64_t v22 = (v29 - 1) & v29;
    unint64_t v27 = __clz(__rbit64(v29)) + (v30 << 6);
    int64_t v24 = v30;
LABEL_26:
    sub_251A1E024(*(void *)(a2 + 48) + *(void *)(v9 + 72) * v27, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251F02A34((uint64_t)v14, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticService);
    char v32 = a3(v17);
    uint64_t v33 = (uint64_t)v17;
    if (v32)
    {
      int64_t v58 = v24;
      uint64_t v34 = v48;
      sub_251F02A34((uint64_t)v17, v48, (uint64_t (*)(void))type metadata accessor for StaticService);
      sub_251F02A34(v34, v25, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v35 = sub_251F34DA0();
      uint64_t v57 = v47;
      uint64_t v36 = *(void *)(v35 - 8);
      uint64_t v37 = MEMORY[0x270FA5388](v35);
      uint64_t v39 = (char *)v47 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v56 = v47;
      MEMORY[0x270FA5388](v37);
      uint64_t v40 = v17;
      uint64_t v41 = a3;
      uint64_t v43 = (char *)v47 - v42;
      (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))((char *)v47 - v42, v25, v35);
      uint64_t v44 = v43;
      a3 = v41;
      uint64_t v17 = v40;
      int64_t v24 = v58;
      sub_251A637B8(v39, v44);
      uint64_t v45 = v39;
      uint64_t v14 = v49;
      uint64_t v46 = v35;
      a2 = v53;
      (*(void (**)(char *, uint64_t))(v36 + 8))(v45, v46);
      uint64_t v9 = v51;
      uint64_t v33 = v25;
    }
    uint64_t result = sub_251A1DFC4(v33, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  int64_t v31 = v24 + 6;
  if (v24 + 6 >= v54)
  {
LABEL_28:
    sub_251A1E630();
    swift_release();
    return v59;
  }
  unint64_t v29 = *(void *)(v55 + 8 * v31);
  if (v29)
  {
    int64_t v30 = v24 + 6;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v30 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v30 >= v54) {
      goto LABEL_28;
    }
    unint64_t v29 = *(void *)(v55 + 8 * v30);
    ++v31;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_251F01FA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TilesFilter();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for IconTextValueStringDataHolder();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LightsStatusItem();
  uint64_t v61 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_251F01AE8(MEMORY[0x263F8EE88], a1, (uint64_t (*)(char *))sub_251F025AC, 0);
  swift_bridgeObjectRelease();
  if (*(void *)(v13 + 16))
  {
    int64_t v54 = (int *)v7;
    uint64_t v56 = v12;
    uint64_t v57 = v6;
    uint64_t v58 = v4;
    uint64_t v59 = v10;
    uint64_t v60 = a2;
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v53 = v47;
    v47[1] = *(void *)(*(void *)(v14 - 8) + 64);
    MEMORY[0x270FA5388](v14 - 8);
    unint64_t v48 = (v15 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v16 = (char *)v47 - v48;
    uint64_t v17 = sub_251F34DA0();
    uint64_t v18 = v13;
    uint64_t v19 = *(void *)(v17 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v16, 1, 1, v17);
    uint64_t v20 = static String.hfLocalized(_:)(0xD000000000000023, 0x8000000251F73530);
    uint64_t v51 = v21;
    uint64_t v52 = v20;
    static String.hfLocalized(_:)(0xD000000000000017, 0x8000000251F6AB50);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_251F38650;
    uint64_t v55 = v18;
    uint64_t v23 = *(void *)(v18 + 16);
    uint64_t v24 = MEMORY[0x263F8D750];
    *(void *)(v22 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v22 + 64) = v24;
    *(void *)(v22 + 32) = v23;
    uint64_t v25 = sub_251F35710();
    uint64_t v49 = v26;
    uint64_t v50 = v25;
    swift_bridgeObjectRelease();
    uint64_t v27 = swift_bridgeObjectRelease();
    uint64_t v28 = MEMORY[0x270FA5388](v27);
    int64_t v30 = (char *)v47 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    MEMORY[0x270FA5388](v28);
    int64_t v31 = (char *)v47 - v48;
    sub_251A1E280((uint64_t)v16, (uint64_t)v47 - v48);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v31, 1, v17) == 1)
    {
      sub_251F34D90();
      sub_251B55B48((uint64_t)v16);
      sub_251B55B48((uint64_t)v31);
      char v32 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    }
    else
    {
      sub_251B55B48((uint64_t)v16);
      char v32 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
      v32(v30, v31, v17);
    }
    uint64_t v35 = v54;
    v32(v9, v30, v17);
    uint64_t v36 = &v9[v35[5]];
    strcpy(v36, "lightbulb.fill");
    v36[15] = -18;
    uint64_t v37 = &v9[v35[6]];
    uint64_t v38 = v51;
    *(void *)uint64_t v37 = v52;
    *((void *)v37 + 1) = v38;
    uint64_t v39 = &v9[v35[7]];
    uint64_t v40 = v49;
    *(void *)uint64_t v39 = v50;
    *((void *)v39 + 1) = v40;
    uint64_t v41 = &v9[v35[8]];
    *(void *)uint64_t v41 = 0;
    *((void *)v41 + 1) = 0;
    *((void *)v41 + 2) = 0;
    v41[24] = -1;
    uint64_t v42 = (uint64_t)v56;
    uint64_t v43 = sub_251F02A34((uint64_t)v9, (uint64_t)v56, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    MEMORY[0x270FA5388](v43);
    v47[-2] = v55;
    uint64_t v62 = type metadata accessor for StaticService();
    uint64_t v44 = (uint64_t)v57;
    sub_251F34EF0();
    swift_bridgeObjectRelease();
    swift_storeEnumTagMultiPayload();
    uint64_t v45 = v59;
    sub_251F02A34(v44, v42 + *(int *)(v59 + 20), (uint64_t (*)(void))type metadata accessor for TilesFilter);
    uint64_t v46 = v60;
    sub_251F02A34(v42, v60, (uint64_t (*)(void))type metadata accessor for LightsStatusItem);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v61 + 56))(v46, 0, 1, v45);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56);
    return v33(a2, 1, 1, v10);
  }
}

BOOL sub_251F025AC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticService();
  int v3 = *(unsigned __int8 *)(a1 + *(int *)(v2 + 88));
  if (v3 == 28) {
    return StaticService.isActivated.getter();
  }
  if (v3 != 41)
  {
    if (v3 != 34 || *(unsigned char *)(a1 + *(int *)(v2 + 96)) == 53) {
      return 0;
    }
    if (ServiceKind.rawValue.getter() != 0xD000000000000024 || v4 != 0x8000000251F64DA0) {
      goto LABEL_12;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    return StaticService.isActivated.getter();
  }
  if (*(unsigned char *)(a1 + *(int *)(v2 + 96)) == 53) {
    return 0;
  }
  if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v5 == 0x8000000251F64DA0) {
    goto LABEL_11;
  }
LABEL_12:
  char v6 = sub_251F36B10();
  swift_bridgeObjectRelease();
  if (v6) {
    return StaticService.isActivated.getter();
  }
  return 0;
}

uint64_t sub_251F026F0@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC38);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v19 = v4;
  uint64_t v20 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC40);
  sub_251F34980();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC48);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC50);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E590(&qword_269B9CC58, &qword_269B9CC50);
  sub_251F34990();
  swift_getKeyPath();
  sub_251F34920();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC60);
  a2[4] = sub_251A1E358();
  __swift_allocate_boxed_opaque_existential_1(a2);
  sub_251A1E590(&qword_269B9CCA0, &qword_269B9CC38);
  sub_251A1E590(&qword_269B9CCA8, &qword_269B9CC48);
  sub_251A1E5D4();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
  uint64_t v16 = v19;
  sub_251F34940();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v7, v16);
}

uint64_t sub_251F02A2C@<X0>(uint64_t *a1@<X8>)
{
  return sub_251F026F0(*(void *)(v1 + 16), a1);
}

uint64_t sub_251F02A34(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t Sequence<>.sortedFromUUIDs<A>(uuidBlock:fallbackBlock:uuids:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v48 = a3;
  uint64_t v49 = a4;
  uint64_t v51 = a1;
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v10, v18);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v19 = sub_251F35BE0();
  uint64_t v56 = v19;
  uint64_t v20 = *(void *)(a5 + 16);
  uint64_t v53 = a8;
  uint64_t v50 = a2;
  if (v20)
  {
    char v47 = v41;
    uint64_t v55 = v19;
    MEMORY[0x270FA5388](v19);
    v41[-8] = a6;
    v41[-7] = a7;
    v41[-6] = v53;
    v41[-5] = a9;
    v41[-4] = a10;
    v41[-3] = a5;
    uint64_t WitnessTable = a5;
    uint64_t v21 = v51;
    v41[-2] = v51;
    v41[-1] = a2;
    sub_251F35BD0();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    uint64_t v22 = sub_251F364E0();
    char v47 = v41;
    uint64_t v55 = v22;
    MEMORY[0x270FA5388](v22);
    v41[-8] = a6;
    v41[-7] = a7;
    v41[-6] = v53;
    v41[-5] = a9;
    uint64_t v23 = WitnessTable;
    v41[-4] = a10;
    v41[-3] = v23;
    uint64_t v24 = v50;
    v41[-2] = v21;
    v41[-1] = v24;
    swift_getWitnessTable();
    a8 = v53;
    uint64_t v25 = sub_251F35970();
    uint64_t v26 = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v26 = sub_251F35B40();
    uint64_t v25 = v26;
  }
  char v47 = (void *)v25;
  MEMORY[0x270FA5388](v26);
  v41[-6] = a6;
  v41[-5] = a7;
  uint64_t v44 = a6;
  v41[-4] = a8;
  v41[-3] = a9;
  uint64_t v52 = a9;
  v41[-2] = a10;
  v41[-1] = v25;
  sub_251F35BD0();
  uint64_t v43 = a7;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v45 = swift_getWitnessTable();
  sub_251F35F50();
  uint64_t v55 = v56;
  MEMORY[0x270FA5388](v56);
  v41[-8] = a6;
  v41[-7] = a7;
  v41[-6] = a8;
  v41[-5] = v52;
  v41[-4] = a10;
  uint64_t v42 = a10;
  uint64_t v28 = v48;
  uint64_t v27 = v49;
  v41[-3] = v48;
  v41[-2] = v27;
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v29 = sub_251F364E0();
  v41[1] = v41;
  uint64_t v55 = v29;
  MEMORY[0x270FA5388](v29);
  uint64_t v30 = v43;
  uint64_t v31 = v44;
  v41[-8] = v44;
  v41[-7] = v30;
  uint64_t v32 = v53;
  v41[-6] = v53;
  v41[-5] = v33;
  v41[-4] = a10;
  v41[-3] = v28;
  v41[-2] = v27;
  uint64_t v49 = swift_getWitnessTable();
  uint64_t v34 = sub_251F35970();
  uint64_t v35 = swift_bridgeObjectRelease();
  MEMORY[0x270FA5388](v35);
  v41[-6] = v31;
  v41[-5] = v30;
  uint64_t v36 = v52;
  v41[-4] = v32;
  v41[-3] = v36;
  v41[-2] = v42;
  v41[-1] = v34;
  sub_251F35F50();
  uint64_t v55 = v56;
  MEMORY[0x270FA5388](v56);
  v41[-8] = v31;
  v41[-7] = v30;
  v41[-6] = v32;
  v41[-5] = v36;
  uint64_t v37 = v51;
  v41[-4] = v38;
  v41[-3] = v37;
  v41[-2] = v50;
  swift_bridgeObjectRetain();
  sub_251F35970();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251F35B30();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v39 = sub_251F35B30();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v39;
}

uint64_t Sequence<>.sortedMatching<A>(ids:fallback:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11 = a4;
  uint64_t v12 = a5;
  uint64_t v13 = a6;
  uint64_t v14 = a7;
  uint64_t v15 = a8;
  uint64_t v16 = a9;
  return Sequence<>.sortedFromUUIDs<A>(uuidBlock:fallbackBlock:uuids:)((uint64_t)sub_251F05E30, (uint64_t)v10, a2, a3, a1, a4, a5, a6, a7, a8);
}

void *Sequence<>.sortedFromUUIDs(uuids:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (char *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5B80);
  uint64_t v8 = sub_251F05000((void (*)(char *, char *))sub_251F04F80, 0, a2, v6, MEMORY[0x263F8E628], a3, MEMORY[0x263F8E658], v7);
  if (*(void *)(v8 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C928);
    uint64_t v9 = sub_251F36700();
  }
  else
  {
    uint64_t v9 = MEMORY[0x263F8EE80];
  }
  uint64_t v30 = v9;
  sub_251F06934(v8, 1, &v30);
  swift_bridgeObjectRelease();
  uint64_t v10 = v30;
  uint64_t v11 = (char *)sub_251F34DA0();
  uint64_t v13 = sub_251F05000((void (*)(char *, char *))sub_251F056FC, 0, a2, v11, MEMORY[0x263F8E628], a3, MEMORY[0x263F8E658], v12);
  uint64_t v14 = sub_251EE04F8(v13);
  swift_bridgeObjectRelease();
  uint64_t v30 = v14;
  if (*(void *)(a1 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = swift_bridgeObjectRetain();
    sub_251F08FB8(v15, a1, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_251F06C80);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v16 = swift_retain();
    uint64_t v17 = (void *)sub_251A91CF8(v16);
    swift_release();
    uint64_t v29 = v17;
    sub_251F0C360(&v29, a1, (void (*)(void *, uint64_t))sub_251F07C7C);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v18 = v29;
  }
  else
  {
    uint64_t v18 = (void *)MEMORY[0x263F8EE78];
  }
  sub_251AADFB8((uint64_t)v18);
  swift_retain();
  uint64_t v19 = swift_bridgeObjectRetain();
  sub_251F08FB8(v19, v10, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_251F08B10);
  swift_release();
  swift_retain();
  uint64_t v20 = swift_retain();
  uint64_t v21 = (void *)sub_251A91CF8(v20);
  swift_release();
  uint64_t v29 = v21;
  sub_251F0C360(&v29, v10, (void (*)(void *, uint64_t))sub_251F09878);
  swift_release();
  swift_release();
  uint64_t v22 = v29;
  sub_251AADFB8((uint64_t)v29);
  uint64_t v23 = v30;
  swift_bridgeObjectRetain_n();
  swift_retain();
  uint64_t v24 = (void *)sub_251A91CF8(v23);
  swift_bridgeObjectRelease();
  uint64_t v29 = v24;
  sub_251F0C360(&v29, v10, (void (*)(void *, uint64_t))sub_251F0B1C8);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v25 = v29;
  uint64_t v29 = v18;
  sub_251ED7700((uint64_t)v22);
  sub_251ED7700((uint64_t)v25);
  uint64_t v26 = v29;
  swift_retain();
  uint64_t v27 = sub_251F065B8((uint64_t)v26, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release_n();
  return v27;
}

uint64_t Sequence<>.sortedFromUUIDs<A>(uuidBlock:fallbackBlock:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v27 = a8;
  uint64_t v28 = a3;
  uint64_t WitnessTable = a4;
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  uint64_t v13 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v16(v15, v9, v17);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v61 = sub_251F35BE0();
  v16(v15, v9, a5);
  uint64_t v53 = a5;
  uint64_t v54 = a6;
  uint64_t v19 = v27;
  uint64_t v18 = v28;
  uint64_t v55 = a7;
  uint64_t v56 = v27;
  uint64_t v57 = a9;
  uint64_t v58 = v28;
  uint64_t v20 = WitnessTable;
  uint64_t v59 = WitnessTable;
  uint64_t v26 = a7;
  uint64_t v60 = sub_251F35940();
  uint64_t v46 = a5;
  uint64_t v47 = a6;
  uint64_t v48 = a7;
  uint64_t v49 = v19;
  uint64_t v50 = a9;
  uint64_t v51 = v18;
  uint64_t v52 = v20;
  sub_251F35BD0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v21 = sub_251F35970();
  uint64_t v28 = v21;
  swift_bridgeObjectRelease();
  uint64_t v40 = a5;
  uint64_t v41 = a6;
  uint64_t v22 = v26;
  uint64_t v42 = v26;
  uint64_t v43 = v19;
  uint64_t v44 = a9;
  uint64_t v45 = v21;
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_251F35F50();
  uint64_t v60 = v61;
  uint64_t v33 = a5;
  uint64_t v34 = a6;
  uint64_t v35 = v22;
  uint64_t v36 = v19;
  uint64_t v37 = a9;
  uint64_t v38 = v30;
  uint64_t v39 = v31;
  swift_bridgeObjectRetain();
  sub_251F35970();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = sub_251F35B30();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_251F037A8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a3(a1);
  uint64_t v13 = v9;
  char v10 = sub_251C60708((uint64_t (*)(char *))sub_251E520C4, (uint64_t)v12, a2);
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  return v10 & 1;
}

uint64_t sub_251F038D0(uint64_t a1)
{
  return sub_251F037A8(a1, *(void *)(v1 + 56), *(void (**)(uint64_t))(v1 + 64)) & 1;
}

uint64_t sub_251F03908(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    uint64_t v8 = 0;
    uint64_t v9 = *(void *)(sub_251F34DA0() - 8);
    uint64_t v10 = a3 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    uint64_t v12 = v10;
    while ((sub_251F03AB4(v12, a4, a5, a1) & 1) == 0)
    {
      ++v8;
      v12 += v11;
      if (v5 == v8)
      {
        uint64_t v8 = 1000;
        break;
      }
    }
    uint64_t v13 = 0;
    while (1)
    {
      uint64_t result = sub_251F03AB4(v10, a4, a5, a2);
      if (result) {
        break;
      }
      uint64_t v15 = v13 + 1;
      if (__OFADD__(v13, 1))
      {
        __break(1u);
        return result;
      }
      ++v13;
      v10 += v11;
      if (v15 == v5)
      {
        uint64_t v13 = 1000;
        return v8 < v13;
      }
    }
  }
  else
  {
    uint64_t v13 = 1000;
    uint64_t v8 = 1000;
  }
  return v8 < v13;
}

uint64_t sub_251F03A7C(uint64_t a1, uint64_t a2)
{
  return sub_251F03908(a1, a2, *(void *)(v2 + 56), *(void (**)(uint64_t))(v2 + 64), *(void *)(v2 + 72)) & 1;
}

uint64_t sub_251F03AB4(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a4);
  LOBYTE(a4) = sub_251F34D70();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return a4 & 1;
}

uint64_t sub_251F03BBC()
{
  return sub_251F03FB0() & 1;
}

BOOL sub_251F03BD8(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = sub_251F36190();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v14 - v10;
  a2(a1);
  BOOL v12 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 48))(v11, 1, a5) != 1;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v12;
}

BOOL sub_251F03D08(uint64_t a1)
{
  return sub_251F0C44C(a1);
}

uint64_t sub_251F03D24(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v23[1] = a8;
  uint64_t v12 = sub_251F36190();
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v23 - v16;
  a3(a1);
  uint64_t v18 = *(void *)(a6 - 8);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  uint64_t result = v19(v17, 1, a6);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    a3(a2);
    uint64_t result = v19(v15, 1, a6);
    if (result != 1)
    {
      char v21 = sub_251F35630();
      uint64_t v22 = *(void (**)(char *, uint64_t))(v18 + 8);
      v22(v15, a6);
      v22(v17, a6);
      return v21 & 1;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_251F03ED8(uint64_t a1, uint64_t a2)
{
  return sub_251F04158(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void))sub_251F03D24) & 1;
}

uint64_t sub_251F03F08()
{
  return sub_251F359B0() & 1;
}

uint64_t sub_251F03FB0()
{
  return sub_251F03F08() & 1;
}

uint64_t sub_251F03FD8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = a3(a1);
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(a2);
  char v11 = MEMORY[0x2533A9CA0](v10, v10);
  uint64_t v12 = *(void (**)(char *, uint64_t))(v7 + 8);
  v12(v10, v6);
  v12(v10, v6);
  return v11 & 1;
}

uint64_t sub_251F04128(uint64_t a1, uint64_t a2)
{
  return sub_251F04158(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void))sub_251F03FD8) & 1;
}

uint64_t sub_251F04158(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void, void, void, void, void, void))
{
  return a3(a1, a2, v3[7], v3[8], v3[2], v3[3], v3[4], v3[5], v3[6]) & 1;
}

uint64_t Sequence<>.sortedFromUUIDs<A, B>(uuidBlock:fallbackBlock:secondFallbackBlock:uuids:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v53 = a8;
  uint64_t v57 = a7;
  uint64_t v58 = a2;
  uint64_t v49 = a5;
  uint64_t v50 = a6;
  uint64_t v46 = a4;
  uint64_t v40 = a3;
  uint64_t v48 = a1;
  uint64_t v55 = a14;
  uint64_t v52 = a9;
  uint64_t v54 = a11;
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v14, v18);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v148 = sub_251F35BE0();
  uint64_t v149 = v148;
  uint64_t v138 = a8;
  uint64_t v139 = a9;
  uint64_t v140 = a10;
  uint64_t v141 = a11;
  uint64_t v56 = a12;
  uint64_t v142 = a12;
  uint64_t v143 = a13;
  uint64_t v144 = a14;
  uint64_t v145 = v57;
  uint64_t v19 = v48;
  uint64_t v146 = v48;
  uint64_t v147 = v58;
  uint64_t v20 = sub_251F35BD0();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v148 = sub_251F364E0();
  uint64_t v22 = v52;
  uint64_t v21 = v53;
  uint64_t v128 = v53;
  uint64_t v129 = v52;
  uint64_t v130 = a10;
  uint64_t v131 = v54;
  uint64_t v132 = a12;
  uint64_t v133 = a13;
  uint64_t v134 = v55;
  uint64_t v135 = v57;
  uint64_t v136 = v19;
  uint64_t v137 = v58;
  uint64_t v57 = swift_getWitnessTable();
  uint64_t v23 = sub_251F35970();
  uint64_t v41 = v23;
  swift_bridgeObjectRelease();
  uint64_t v120 = v21;
  uint64_t v24 = v22;
  uint64_t v121 = v22;
  uint64_t v122 = a10;
  uint64_t v26 = v54;
  uint64_t v25 = v55;
  uint64_t v123 = v54;
  uint64_t v124 = v56;
  uint64_t v125 = a13;
  uint64_t v126 = v55;
  uint64_t v127 = v23;
  uint64_t v45 = swift_getWitnessTable();
  uint64_t v51 = v20;
  uint64_t v44 = swift_getWitnessTable();
  sub_251F35F50();
  uint64_t v148 = v149;
  uint64_t v27 = v53;
  uint64_t v111 = v53;
  uint64_t v112 = v24;
  uint64_t v113 = a10;
  uint64_t v114 = v26;
  uint64_t v115 = v56;
  uint64_t v116 = a13;
  uint64_t v117 = v25;
  uint64_t v28 = v40;
  uint64_t v118 = v40;
  uint64_t v119 = v46;
  swift_bridgeObjectRetain();
  uint64_t v148 = sub_251F364E0();
  uint64_t v102 = v27;
  uint64_t v29 = v52;
  uint64_t v103 = v52;
  uint64_t v104 = a10;
  uint64_t v105 = v26;
  uint64_t v30 = v56;
  uint64_t v106 = v56;
  uint64_t v43 = a13;
  uint64_t v107 = a13;
  uint64_t v108 = v25;
  uint64_t v109 = v28;
  uint64_t v110 = v46;
  uint64_t v31 = sub_251F35970();
  uint64_t v46 = v31;
  swift_bridgeObjectRelease();
  uint64_t v32 = v53;
  uint64_t v94 = v53;
  uint64_t v95 = v29;
  uint64_t v96 = a10;
  uint64_t v33 = v54;
  uint64_t v97 = v54;
  uint64_t v98 = v30;
  uint64_t v99 = a13;
  uint64_t v100 = v25;
  uint64_t v101 = v31;
  sub_251F35F50();
  uint64_t v148 = v149;
  uint64_t v34 = v52;
  uint64_t v85 = v32;
  uint64_t v86 = v52;
  uint64_t v87 = a10;
  uint64_t v88 = v33;
  uint64_t v89 = v30;
  uint64_t v90 = v43;
  uint64_t v91 = v25;
  uint64_t v92 = v49;
  uint64_t v93 = v50;
  swift_bridgeObjectRetain();
  uint64_t v148 = sub_251F364E0();
  uint64_t v76 = v32;
  uint64_t v77 = v34;
  uint64_t v78 = a10;
  uint64_t v79 = v33;
  uint64_t v35 = v43;
  uint64_t v80 = v30;
  uint64_t v81 = v43;
  uint64_t v82 = v25;
  uint64_t v83 = v49;
  uint64_t v84 = v50;
  uint64_t v36 = sub_251F35970();
  uint64_t v50 = v36;
  swift_bridgeObjectRelease();
  uint64_t v68 = v32;
  uint64_t v69 = v34;
  uint64_t v70 = a10;
  uint64_t v71 = v33;
  uint64_t v72 = v30;
  uint64_t v73 = v35;
  uint64_t v74 = v25;
  uint64_t v75 = v36;
  sub_251F35F50();
  uint64_t v148 = v149;
  uint64_t v59 = v32;
  uint64_t v60 = v34;
  uint64_t v61 = a10;
  uint64_t v62 = v33;
  uint64_t v63 = v30;
  uint64_t v64 = v35;
  uint64_t v65 = v55;
  uint64_t v66 = v48;
  uint64_t v67 = v58;
  swift_bridgeObjectRetain();
  sub_251F35970();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251F35B30();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251F35B30();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v37 = sub_251F35B30();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v37;
}

uint64_t sub_251F047A0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a3(a1);
  uint64_t v13 = v9;
  char v10 = sub_251C60708((uint64_t (*)(char *))sub_251E51FB8, (uint64_t)v12, a2);
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  return v10 & 1;
}

uint64_t sub_251F048C8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    uint64_t v7 = 0;
    uint64_t v8 = *(void *)(sub_251F34DA0() - 8);
    uint64_t v9 = a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    uint64_t v11 = v9;
    while ((sub_251F03AB4(v11, a4, a5, a1) & 1) == 0)
    {
      ++v7;
      v11 += v10;
      if (v5 == v7)
      {
        uint64_t v7 = 1000;
        break;
      }
    }
    uint64_t v12 = 0;
    while (1)
    {
      uint64_t result = sub_251F03AB4(v9, a4, a5, a2);
      if (result) {
        break;
      }
      uint64_t v14 = v12 + 1;
      if (__OFADD__(v12, 1))
      {
        __break(1u);
        return result;
      }
      ++v12;
      v9 += v10;
      if (v14 == v5)
      {
        uint64_t v12 = 1000;
        return v7 < v12;
      }
    }
  }
  else
  {
    uint64_t v12 = 1000;
    uint64_t v7 = 1000;
  }
  return v7 < v12;
}

uint64_t sub_251F04A54(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = sub_251F36190();
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v21 - v14;
  a3(a1);
  uint64_t v16 = *(void *)(a6 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  uint64_t result = v17(v15, 1, a6);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    a3(a2);
    uint64_t result = v17(v13, 1, a6);
    if (result != 1)
    {
      char v19 = sub_251F35630();
      uint64_t v20 = *(void (**)(char *, uint64_t))(v16 + 8);
      v20(v13, a6);
      v20(v15, a6);
      return v19 & 1;
    }
  }
  __break(1u);
  return result;
}

BOOL sub_251F04C00(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = sub_251F36190();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v15 - v11;
  a2(a1);
  BOOL v13 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 48))(v12, 1, a6) != 1;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v13;
}

uint64_t sub_251F04D30(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = sub_251F36190();
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v22 - v15;
  a3(a1);
  uint64_t v17 = *(void *)(a7 - 8);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  uint64_t result = v18(v16, 1, a7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    a3(a2);
    uint64_t result = v18(v14, 1, a7);
    if (result != 1)
    {
      char v20 = sub_251F35630();
      uint64_t v21 = *(void (**)(char *, uint64_t))(v17 + 8);
      v21(v14, a7);
      v21(v16, a7);
      return v20 & 1;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_251F04EDC()
{
  return sub_251F359B0() & 1;
}

uint64_t sub_251F04F80@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5B80) + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251F36420();
  return sub_251A1A4EC((uint64_t)a1, v3);
}

uint64_t sub_251F05000(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a8;
  uint64_t v44 = a5;
  uint64_t v9 = v8;
  uint64_t v58 = a2;
  uint64_t v59 = a4;
  uint64_t v57 = a1;
  uint64_t v42 = *(void *)(a5 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](a1);
  uint64_t v55 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v53 = (char *)&v40 - v13;
  uint64_t v15 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v41 = (char *)&v40 - v17;
  uint64_t v18 = sub_251F36190();
  uint64_t v45 = *(void *)(v18 - 8);
  uint64_t v46 = v18;
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v51 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v40 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v40 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v50 = *((void *)v15 - 1);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a6;
  uint64_t v52 = v15;
  uint64_t v60 = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v30 = (char *)&v40 - v29;
  uint64_t v31 = sub_251F358F0();
  uint64_t v61 = sub_251F35510();
  uint64_t v56 = sub_251F36570();
  sub_251F36510();
  (*(void (**)(char *, uint64_t, void))(v50 + 16))(v28, v48, v52);
  uint64_t v59 = v30;
  uint64_t result = sub_251F358E0();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    uint64_t v33 = (uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
    uint64_t v34 = (uint64_t (**)(char *, uint64_t))(v54 + 8);
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_251F361B0();
      uint64_t result = (*v33)(v23, 1, AssociatedTypeWitness);
      if (result == 1) {
        goto LABEL_18;
      }
      v57(v23, v55);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v55, v44);
        return (*v34)(v23, AssociatedTypeWitness);
      }
      uint64_t v9 = 0;
      (*v34)(v23, AssociatedTypeWitness);
      sub_251F36550();
      if (!--v31)
      {
        uint64_t v35 = v54;
        uint64_t v36 = v51;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  uint64_t v35 = v54;
  uint64_t v36 = v51;
LABEL_9:
  sub_251F361B0();
  uint64_t v55 = *(char **)(v35 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v36, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v37 = v51;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v46);
    return v61;
  }
  else
  {
    uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    uint64_t v54 = v35 + 32;
    uint64_t v38 = (void (**)(char *, uint64_t))(v35 + 8);
    uint64_t v39 = v41;
    uint64_t v37 = v51;
    while (1)
    {
      v52(v39, v37, AssociatedTypeWitness);
      v57(v39, v53);
      if (v9) {
        break;
      }
      uint64_t v9 = 0;
      (*v38)(v39, AssociatedTypeWitness);
      sub_251F36550();
      sub_251F361B0();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v37, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_14;
      }
    }
    (*v38)(v39, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v53, v44);
  }
}

uint64_t sub_251F056FC(void *a1)
{
  return sub_251F36420();
}

uint64_t sub_251F0574C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34D20();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 64);
  MEMORY[0x270FA5388](v10 - 8);
  if (!*(void *)(a3 + 16) || (unint64_t v12 = sub_2519FE584(a1), (v13 & 1) == 0))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))((char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v6);
    goto LABEL_6;
  }
  sub_251A1A4EC(*(void *)(a3 + 56) + 40 * v12, (uint64_t)v36);
  uint64_t v34 = a2;
  uint64_t v35 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v37;
  uint64_t v15 = v38;
  __swift_project_boxed_opaque_existential_1(v36, v37);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v15 + 64);
  uint64_t v17 = v14;
  uint64_t v18 = v15;
  a2 = v34;
  uint64_t v9 = v35;
  v16(v17, v18);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))((char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v6) == 1)
  {
LABEL_6:
    sub_251F34CB0();
    uint64_t v19 = sub_251A1B064((uint64_t)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_26B21EC20);
    goto LABEL_7;
  }
  uint64_t v19 = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 32))(v9, (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
LABEL_7:
  uint64_t v35 = (char *)&v33;
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a3 + 16) || (unint64_t v23 = sub_2519FE584(a2), (v24 & 1) == 0))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v22, 1, 1, v6);
    goto LABEL_12;
  }
  sub_251A1A4EC(*(void *)(a3 + 56) + 40 * v23, (uint64_t)v36);
  uint64_t v25 = v9;
  uint64_t v26 = v37;
  uint64_t v27 = v38;
  __swift_project_boxed_opaque_existential_1(v36, v37);
  uint64_t v28 = v26;
  uint64_t v9 = v25;
  (*(void (**)(uint64_t, uint64_t))(v27 + 64))(v28, v27);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v22, 1, v6) == 1)
  {
LABEL_12:
    sub_251F34CB0();
    sub_251A1B064((uint64_t)v22, &qword_26B21EC20);
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v21, v22, v6);
LABEL_13:
  uint64_t v29 = v9;
  char v30 = sub_251F34C90();
  uint64_t v31 = *(void (**)(char *, uint64_t))(v7 + 8);
  v31(v21, v6);
  v31(v29, v6);
  return v30 & 1;
}

uint64_t sub_251F05B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    goto LABEL_29;
  }
  unint64_t v6 = sub_2519FE584(a1);
  if (v7)
  {
    sub_251A1A4EC(*(void *)(a3 + 56) + 40 * v6, (uint64_t)v37);
    uint64_t v8 = v38;
    uint64_t v9 = v39;
    __swift_project_boxed_opaque_existential_1(v37, v38);
    uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 56))(v8, v9);
    uint64_t v12 = v11;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v12 = 0;
    if (!*(void *)(a3 + 16)) {
      goto LABEL_10;
    }
  }
  unint64_t v13 = sub_2519FE584(a2);
  if (v14)
  {
    sub_251A1A4EC(*(void *)(a3 + 56) + 40 * v13, (uint64_t)v37);
    uint64_t v15 = v38;
    uint64_t v16 = v39;
    __swift_project_boxed_opaque_existential_1(v37, v38);
    uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 56))(v15, v16);
    uint64_t v19 = v18;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
    if (v12) {
      goto LABEL_11;
    }
LABEL_8:
    if (!v19)
    {
LABEL_29:
      char v34 = MEMORY[0x2533A9CA0](a1, a2);
      return v34 & 1;
    }
    goto LABEL_15;
  }
LABEL_10:
  uint64_t v17 = 0;
  uint64_t v19 = 0;
  if (!v12) {
    goto LABEL_8;
  }
LABEL_11:
  if (!v19)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  if (v10 == v17 && v12 == v19)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  char v35 = sub_251F36B10();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v35) {
    goto LABEL_29;
  }
LABEL_16:
  if (*(void *)(a3 + 16) && (unint64_t v20 = sub_2519FE584(a1), (v21 & 1) != 0))
  {
    sub_251A1A4EC(*(void *)(a3 + 56) + 40 * v20, (uint64_t)v37);
    uint64_t v22 = v38;
    uint64_t v23 = v39;
    __swift_project_boxed_opaque_existential_1(v37, v38);
    uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 56))(v22, v23);
    unint64_t v26 = v25;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_24;
    }
  }
  else
  {
    uint64_t v24 = 0;
    unint64_t v26 = 0xE000000000000000;
    if (!*(void *)(a3 + 16)) {
      goto LABEL_24;
    }
  }
  unint64_t v27 = sub_2519FE584(a2);
  if (v28)
  {
    sub_251A1A4EC(*(void *)(a3 + 56) + 40 * v27, (uint64_t)v37);
    uint64_t v29 = v38;
    uint64_t v30 = v39;
    __swift_project_boxed_opaque_existential_1(v37, v38);
    uint64_t v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 56))(v29, v30);
    unint64_t v33 = v32;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
    if (v24 != v31) {
      goto LABEL_27;
    }
    goto LABEL_25;
  }
LABEL_24:
  unint64_t v33 = 0xE000000000000000;
  if (v24)
  {
LABEL_27:
    char v34 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v34 & 1;
  }
LABEL_25:
  if (v26 != v33) {
    goto LABEL_27;
  }
  swift_bridgeObjectRelease_n();
  char v34 = 0;
  return v34 & 1;
}

uint64_t sub_251F05E30()
{
  return sub_251F36420();
}

uint64_t sub_251F05E90(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t (*a6)(char *, char *, uint64_t))
{
  uint64_t v73 = a6;
  uint64_t v74 = a5;
  uint64_t v11 = sub_251F34DA0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_68;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_69;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v81 = a1;
  unint64_t v80 = a4;
  uint64_t v16 = v14 / v13;
  uint64_t v75 = v11;
  uint64_t v78 = v6;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        uint64_t v11 = swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        uint64_t v11 = swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v79 = a4 + v18;
      unint64_t v81 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        unint64_t v71 = -v13;
        uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
        uint64_t v39 = v12 + 16;
        uint64_t v66 = *(void *)(v39 + 48);
        uint64_t v67 = v40;
        uint64_t v72 = v39;
        uint64_t v68 = (void (**)(char *, uint64_t))(v39 - 8);
        uint64_t v41 = v75;
        unint64_t v76 = a4;
        unint64_t v64 = a1;
        while (1)
        {
          uint64_t v42 = (char *)a2;
          uint64_t v43 = (char *)a3;
          uint64_t v77 = &v63;
          unint64_t v44 = v71;
          uint64_t v45 = v66;
          MEMORY[0x270FA5388](v11);
          uint64_t v46 = (char *)&v63 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
          uint64_t v47 = v67;
          uint64_t v48 = ((uint64_t (*)(char *))v67)(v46);
          uint64_t v69 = v42;
          uint64_t v70 = &v63;
          uint64_t v49 = &v42[v44];
          MEMORY[0x270FA5388](v48);
          v47(v46, v49, v41);
          uint64_t v50 = v78;
          char v51 = v73(v46, v46, v74);
          uint64_t v52 = v41;
          if (v50) {
            break;
          }
          char v53 = v51;
          uint64_t v78 = 0;
          unint64_t v54 = (unint64_t)&v43[v44];
          uint64_t v55 = *v68;
          (*v68)(v46, v52);
          uint64_t v11 = ((uint64_t (*)(char *, uint64_t))v55)(v46, v52);
          if (v53)
          {
            unint64_t v56 = v76;
            unint64_t v57 = v64;
            a3 = (unint64_t)&v43[v44];
            if (v43 < v69 || v54 >= (unint64_t)v69)
            {
              uint64_t v41 = v75;
              uint64_t v11 = swift_arrayInitWithTakeFrontToBack();
              unint64_t v58 = v71;
            }
            else
            {
              uint64_t v41 = v75;
              unint64_t v58 = v71;
              if (v43 != v69) {
                uint64_t v11 = swift_arrayInitWithTakeBackToFront();
              }
            }
            v81 += v58;
          }
          else
          {
            unint64_t v59 = v79;
            v79 += v71;
            unint64_t v56 = v76;
            unint64_t v57 = v64;
            a3 = (unint64_t)&v43[v44];
            if ((unint64_t)v43 < v59 || v54 >= v59)
            {
              uint64_t v41 = v75;
              uint64_t v11 = swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              uint64_t v41 = v75;
              if (v43 != (char *)v59) {
                uint64_t v11 = swift_arrayInitWithTakeBackToFront();
              }
            }
            uint64_t v49 = v69;
          }
          if (v79 > v56)
          {
            a2 = (unint64_t)v49;
            if ((unint64_t)v49 > v57) {
              continue;
            }
          }
          goto LABEL_66;
        }
        uint64_t v61 = *v68;
        (*v68)(v46, v41);
        v61(v46, v41);
      }
      goto LABEL_66;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      uint64_t v11 = swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      uint64_t v11 = swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v71 = a4 + v17;
    unint64_t v79 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      char v21 = *(char **)(v12 + 16);
      uint64_t v20 = v12 + 16;
      uint64_t v68 = *(void (***)(char *, uint64_t))(v20 + 48);
      uint64_t v69 = v21;
      uint64_t v72 = v20;
      uint64_t v70 = (uint64_t *)(v20 - 8);
      uint64_t v22 = v75;
      unint64_t v65 = a3;
      uint64_t v67 = (void (*)(char *, char *, uint64_t))v13;
      while (1)
      {
        unint64_t v76 = a4;
        uint64_t v77 = &v63;
        uint64_t v23 = v68;
        MEMORY[0x270FA5388](v11);
        uint64_t v24 = (char *)&v63 - (((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF0);
        unint64_t v25 = a2;
        unint64_t v26 = a2;
        unint64_t v27 = v69;
        uint64_t v28 = ((uint64_t (*)(char *, unint64_t, uint64_t))v69)(v24, v26, v22);
        MEMORY[0x270FA5388](v28);
        ((void (*)(char *, unint64_t, uint64_t))v27)(v24, v76, v22);
        uint64_t v29 = v78;
        char v30 = v73(v24, v24, v74);
        uint64_t v78 = v29;
        if (v29) {
          break;
        }
        char v31 = v30;
        unint64_t v32 = (uint64_t (*)(char *, uint64_t))*v70;
        ((void (*)(char *, uint64_t))*v70)(v24, v22);
        uint64_t v11 = v32(v24, v22);
        unint64_t v33 = v81;
        if (v31)
        {
          char v34 = v67;
          unint64_t v35 = (unint64_t)v67 + v25;
          if (v81 < v25 || v81 >= v35)
          {
            uint64_t v22 = v75;
            uint64_t v11 = swift_arrayInitWithTakeFrontToBack();
            unint64_t v36 = v65;
          }
          else
          {
            uint64_t v22 = v75;
            unint64_t v36 = v65;
            if (v81 == v25) {
              unint64_t v33 = v25;
            }
            else {
              uint64_t v11 = swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          char v34 = v67;
          unint64_t v37 = (unint64_t)v67 + v80;
          if (v81 < v80 || v81 >= v37)
          {
            uint64_t v22 = v75;
            uint64_t v11 = swift_arrayInitWithTakeFrontToBack();
            unint64_t v36 = v65;
          }
          else
          {
            uint64_t v22 = v75;
            unint64_t v36 = v65;
            if (v81 != v80) {
              uint64_t v11 = swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v80 = v37;
          unint64_t v35 = v25;
        }
        unint64_t v81 = (unint64_t)v34 + v33;
        a4 = v80;
        if (v80 < v71)
        {
          a2 = v35;
          if (v35 < v36) {
            continue;
          }
        }
        goto LABEL_66;
      }
      uint64_t v60 = (void (*)(char *, uint64_t))*v70;
      ((void (*)(char *, uint64_t))*v70)(v24, v22);
      v60(v24, v22);
    }
LABEL_66:
    sub_251ECD9FC(&v81, &v80, (uint64_t *)&v79);
    swift_bridgeObjectRelease();
    return 1;
  }
LABEL_70:
  swift_bridgeObjectRelease();
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

void *sub_251F065B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 16);
  v25[1] = a1;
  if (v7)
  {
    uint64_t v8 = sub_251F34DA0();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = v9;
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v28 = *(void *)(v9 + 72);
    unint64_t v37 = (void (**)(char *, void, uint64_t, uint64_t))(v9 + 56);
    uint64_t v13 = v9 + 16;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    uint64_t v31 = v13;
    unint64_t v32 = v12;
    uint64_t v29 = v10;
    char v30 = (uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
    unint64_t v26 = (void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v27 = v10 + 32;
    swift_bridgeObjectRetain();
    int64_t v14 = (void *)MEMORY[0x263F8EE78];
    while (1)
    {
      v32(v6, v11, v8);
      (*v37)(v6, 0, 1, v8);
      uint64_t v15 = (*v30)(v6, 1, v8);
      if (v15 == 1) {
        break;
      }
      MEMORY[0x270FA5388](v15);
      uint64_t v17 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v17, v6, v8);
      if (*(void *)(a2 + 16) && (unint64_t v19 = sub_2519FE584((uint64_t)v17), (v20 & 1) != 0))
      {
        sub_251A1A4EC(*(void *)(a2 + 56) + 40 * v19, (uint64_t)&v33);
      }
      else
      {
        uint64_t v35 = 0;
        long long v33 = 0u;
        long long v34 = 0u;
      }
      (*v26)(v17, v8);
      if (*((void *)&v34 + 1))
      {
        sub_251A1A444(&v33, (uint64_t)v36);
        sub_251A1A444(v36, (uint64_t)&v33);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int64_t v14 = sub_251F102B0(0, v14[2] + 1, 1, v14);
        }
        unint64_t v22 = v14[2];
        unint64_t v21 = v14[3];
        if (v22 >= v21 >> 1) {
          int64_t v14 = sub_251F102B0((void *)(v21 > 1), v22 + 1, 1, v14);
        }
        v14[2] = v22 + 1;
        sub_251A1A444(&v33, (uint64_t)&v14[5 * v22 + 4]);
      }
      else
      {
        sub_251A1B064((uint64_t)&v33, &qword_269B9D150);
      }
      v11 += v28;
      if (!--v7) {
        goto LABEL_17;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    int64_t v14 = (void *)MEMORY[0x263F8EE78];
LABEL_17:
    uint64_t v23 = sub_251F34DA0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v6, 1, 1, v23);
  }
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_251F06934(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v42 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5B80);
  uint64_t result = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    return result;
  }
  v33[0] = a1;
  v33[1] = v4;
  unint64_t v36 = (long long *)&v11[*(int *)(result + 48)];
  uint64_t v13 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  uint64_t v34 = *(void *)(v9 + 72);
  swift_bridgeObjectRetain();
  uint64_t v35 = v11;
  while (1)
  {
    uint64_t v39 = v12;
    uint64_t v37 = v13;
    sub_251F0C6CC(v13, (uint64_t)v11);
    uint64_t v15 = sub_251F34DA0();
    uint64_t v38 = v33;
    uint64_t v16 = *(void *)(v15 - 8);
    MEMORY[0x270FA5388](v15);
    uint64_t v18 = (char *)v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v19 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v19(v18, v11, v15);
    sub_251A1A444(v36, (uint64_t)v41);
    uint64_t v20 = *v42;
    unint64_t v22 = sub_2519FE584((uint64_t)v18);
    uint64_t v23 = *(void *)(v20 + 16);
    BOOL v24 = (v21 & 1) == 0;
    uint64_t v25 = v23 + v24;
    if (__OFADD__(v23, v24)) {
      break;
    }
    char v26 = v21;
    if (*(void *)(v20 + 24) >= v25)
    {
      if (a2)
      {
        if (v21) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_251A17338();
        if (v26) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_251A0ABB0(v25, a2 & 1);
      unint64_t v27 = sub_2519FE584((uint64_t)v18);
      if ((v26 & 1) != (v28 & 1)) {
        goto LABEL_20;
      }
      unint64_t v22 = v27;
      if (v26)
      {
LABEL_3:
        sub_251A1A444(v41, (uint64_t)v40);
        (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
        uint64_t v14 = *(void *)(*v42 + 56) + 40 * v22;
        __swift_destroy_boxed_opaque_existential_0(v14);
        sub_251A1A444(v40, v14);
        goto LABEL_4;
      }
    }
    uint64_t v29 = (void *)*v42;
    *(void *)(*v42 + 8 * (v22 >> 6) + 64) |= 1 << v22;
    v19((char *)(v29[6] + *(void *)(v16 + 72) * v22), v18, v15);
    sub_251A1A444(v41, v29[7] + 40 * v22);
    uint64_t v30 = v29[2];
    BOOL v31 = __OFADD__(v30, 1);
    uint64_t v32 = v30 + 1;
    if (v31) {
      goto LABEL_19;
    }
    v29[2] = v32;
LABEL_4:
    uint64_t v11 = v35;
    uint64_t v13 = v37 + v34;
    a2 = 1;
    uint64_t v12 = v39 - 1;
    if (v39 == 1) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

unint64_t *sub_251F06C80(unint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v39 = a2;
  uint64_t v40 = result;
  uint64_t v41 = 0;
  int64_t v5 = 0;
  uint64_t v45 = a4;
  uint64_t v46 = a3;
  uint64_t v8 = *(void *)(a3 + 56);
  uint64_t v6 = a3 + 56;
  uint64_t v7 = v8;
  uint64_t v9 = 1 << *(unsigned char *)(v6 - 24);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v7;
  uint64_t v42 = v6;
  int64_t v43 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
LABEL_6:
    if (v11)
    {
      uint64_t v50 = (v11 - 1) & v11;
      int64_t v51 = v5;
      unint64_t v13 = __clz(__rbit64(v11)) | (v5 << 6);
      goto LABEL_22;
    }
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v14 >= v43) {
      goto LABEL_31;
    }
    unint64_t v15 = *(void *)(v42 + 8 * v14);
    int64_t v16 = v5 + 1;
    if (!v15)
    {
      int64_t v16 = v5 + 2;
      if (v5 + 2 >= v43) {
        goto LABEL_31;
      }
      unint64_t v15 = *(void *)(v42 + 8 * v16);
      if (!v15)
      {
        int64_t v16 = v5 + 3;
        if (v5 + 3 >= v43) {
          goto LABEL_31;
        }
        unint64_t v15 = *(void *)(v42 + 8 * v16);
        if (!v15) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v50 = (v15 - 1) & v15;
    int64_t v51 = v16;
    unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
LABEL_22:
    uint64_t v18 = sub_251F34DA0();
    uint64_t v49 = &v38;
    uint64_t v19 = *(void *)(v18 - 8);
    MEMORY[0x270FA5388](v18);
    uint64_t v57 = v20;
    uint64_t v54 = *(void *)(v21 + 72);
    unint64_t v22 = *(void (**)(void))(v19 + 16);
    uint64_t v60 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v58 = v22;
    uint64_t v59 = v19 + 16;
    v22();
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v48 = &v38;
    MEMORY[0x270FA5388](v23 - 8);
    uint64_t v25 = (char *)&v38 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v26 = *(void *)(v4 + 16);
    uint64_t v47 = v19;
    if (v26)
    {
      unint64_t v44 = v13;
      uint64_t v27 = v4 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
      char v28 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
      char v53 = (void (**)(char *, char *, uint64_t))(v19 + 32);
      uint64_t v55 = (void (**)(char *, uint64_t))(v19 + 8);
      unint64_t v56 = (uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
      swift_bridgeObjectRetain();
      while (1)
      {
        ((void (*)(char *, uint64_t, uint64_t))v58)(v25, v27, v18);
        uint64_t v29 = *v28;
        (*v28)(v25, 0, 1, v18);
        uint64_t v30 = (*v56)(v25, 1, v18);
        if (v30 == 1) {
          break;
        }
        uint64_t v52 = v29;
        MEMORY[0x270FA5388](v30);
        uint64_t v32 = (char *)&v38 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
        long long v33 = v25;
        (*v53)(v32, v25, v18);
        sub_251A9FE88();
        char v34 = sub_251F35650();
        uint64_t v35 = *v55;
        (*v55)(v32, v18);
        if (v34)
        {
          uint64_t v4 = v45;
          swift_bridgeObjectRelease();
          uint64_t result = (unint64_t *)((uint64_t (*)(char *, uint64_t))v35)(v60, v18);
          *(unint64_t *)((char *)v40 + ((v44 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v44;
          BOOL v36 = __OFADD__(v41++, 1);
          unint64_t v11 = v50;
          int64_t v5 = v51;
          if (!v36) {
            goto LABEL_6;
          }
          __break(1u);
          goto LABEL_31;
        }
        v27 += v54;
        --v26;
        uint64_t v25 = v33;
        if (!v26)
        {
          v52(v33, 1, 1, v18);
          break;
        }
      }
    }
    else
    {
      uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
      swift_bridgeObjectRetain();
      v12(v25, 1, 1, v18);
    }
    uint64_t v4 = v45;
    swift_bridgeObjectRelease();
    uint64_t result = (unint64_t *)(*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v60, v18);
    unint64_t v11 = v50;
    int64_t v5 = v51;
  }
  uint64_t v17 = v5 + 4;
  if (v5 + 4 >= v43)
  {
LABEL_31:
    uint64_t v37 = v46;
    swift_retain();
    return (unint64_t *)sub_251F1B4B0(v40, v39, v41, v37);
  }
  unint64_t v15 = *(void *)(v42 + 8 * v17);
  if (v15)
  {
    int64_t v16 = v5 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v16 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v16 >= v43) {
      goto LABEL_31;
    }
    unint64_t v15 = *(void *)(v42 + 8 * v16);
    ++v17;
    if (v15) {
      goto LABEL_21;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_251F07164(uint64_t a1, uint64_t a2)
{
  return sub_251F08FB8(a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_251F06C80);
}

uint64_t sub_251F071C4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v68 = a5;
  uint64_t v9 = sub_251F34DA0();
  uint64_t v76 = v9;
  uint64_t v67 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v67 + 72);
  if (!v10)
  {
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
    goto LABEL_87;
  }
  if (a2 - a1 == 0x8000000000000000 && v10 == -1) {
    goto LABEL_85;
  }
  int64_t v11 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v10 == -1) {
    goto LABEL_86;
  }
  uint64_t v12 = (uint64_t)(a2 - a1) / v10;
  unint64_t v79 = a1;
  unint64_t v78 = a4;
  uint64_t v13 = v11 / v10;
  if (v12 >= v11 / v10)
  {
    if ((v13 & 0x8000000000000000) == 0)
    {
      uint64_t v15 = v13 * v10;
      if (a4 < a2 || a2 + v15 <= a4)
      {
        uint64_t v9 = swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        uint64_t v9 = swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v77 = a4 + v15;
      unint64_t v79 = a2;
      if (v15 >= 1 && a1 < a2)
      {
        uint64_t v37 = *(void *)(v68 + 16);
        uint64_t v38 = *(void (**)(char *))(v67 + 16);
        uint64_t v64 = *(void *)(v67 + 64);
        unint64_t v65 = v38;
        uint64_t v66 = v67 + 16;
        uint64_t v61 = (uint64_t (**)(char *, uint64_t))(v67 + 8);
        unint64_t v62 = a1;
        uint64_t v73 = -v10;
        unint64_t v63 = a4;
        uint64_t v60 = v10;
        do
        {
          unint64_t v74 = a3;
          uint64_t v72 = &v59;
          uint64_t v39 = v64;
          MEMORY[0x270FA5388](v9);
          uint64_t v40 = (char *)&v59 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
          uint64_t v41 = v65;
          uint64_t v42 = ((uint64_t (*)(char *))v65)(v40);
          unint64_t v71 = &v59;
          unint64_t v75 = a2;
          MEMORY[0x270FA5388](v42);
          uint64_t v69 = v43;
          v41(v40);
          if (v37)
          {
            uint64_t v44 = 0;
            uint64_t v45 = v68 + ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80));
            uint64_t v46 = v45;
            uint64_t v47 = v60;
            while ((sub_251F34D70() & 1) == 0)
            {
              ++v44;
              v46 += v47;
              if (v37 == v44)
              {
                uint64_t v44 = 1000;
                break;
              }
            }
            uint64_t v48 = 0;
            while ((sub_251F34D70() & 1) == 0)
            {
              uint64_t v49 = v48 + 1;
              if (__OFADD__(v48, 1))
              {
LABEL_83:
                __break(1u);
                goto LABEL_84;
              }
              ++v48;
              v45 += v47;
              if (v49 == v37)
              {
                uint64_t v48 = 1000;
                break;
              }
            }
          }
          else
          {
            uint64_t v48 = 1000;
            uint64_t v44 = 1000;
          }
          unint64_t v50 = v74;
          uint64_t v70 = (char *)(v74 + v73);
          int64_t v51 = *v61;
          uint64_t v52 = v76;
          (*v61)(v40, v76);
          uint64_t v9 = v51(v40, v52);
          if (v44 >= v48)
          {
            unint64_t v57 = v77;
            v77 += v73;
            unint64_t v56 = (uint64_t (*)(void, void, void))v75;
            unint64_t v53 = v63;
            a3 = (unint64_t)v70;
            if (v50 < v57 || (unint64_t)v70 >= v57)
            {
              uint64_t v9 = swift_arrayInitWithTakeFrontToBack();
              unint64_t v54 = v62;
            }
            else
            {
              unint64_t v54 = v62;
              if (v50 != v57) {
                uint64_t v9 = swift_arrayInitWithTakeBackToFront();
              }
            }
          }
          else
          {
            unint64_t v53 = v63;
            a3 = (unint64_t)v70;
            if (v50 < v75 || (unint64_t)v70 >= v75)
            {
              unint64_t v56 = (uint64_t (*)(void, void, void))v69;
              uint64_t v9 = swift_arrayInitWithTakeFrontToBack();
              unint64_t v54 = v62;
              uint64_t v55 = v73;
            }
            else
            {
              unint64_t v54 = v62;
              uint64_t v55 = v73;
              unint64_t v56 = (uint64_t (*)(void, void, void))v69;
              if (v50 != v75) {
                uint64_t v9 = swift_arrayInitWithTakeBackToFront();
              }
            }
            v79 += v55;
          }
          if (v77 <= v53) {
            break;
          }
          a2 = (unint64_t)v56;
        }
        while ((unint64_t)v56 > v54);
      }
      goto LABEL_81;
    }
  }
  else if ((v12 & 0x8000000000000000) == 0)
  {
    uint64_t v14 = v12 * v10;
    if (a4 < a1 || a1 + v14 <= a4)
    {
      uint64_t v9 = swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      uint64_t v9 = swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v71 = (uint64_t *)(a4 + v14);
    unint64_t v77 = a4 + v14;
    if (v14 >= 1 && a2 < a3)
    {
      uint64_t v17 = *(void *)(v68 + 16);
      uint64_t v69 = *(void (**)(void, void, void))(v67 + 16);
      uint64_t v70 = (char *)(v67 + 16);
      uint64_t v18 = *(void *)(v67 + 64);
      unint64_t v65 = (void (*)(char *))(v67 + 8);
      uint64_t v66 = v18;
      unint64_t v74 = a3;
      do
      {
        uint64_t v73 = (uint64_t)&v59;
        uint64_t v19 = v66;
        MEMORY[0x270FA5388](v9);
        uint64_t v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
        unint64_t v75 = a2;
        unint64_t v21 = a2;
        uint64_t v22 = v76;
        uint64_t v23 = (void (*)(char *, unint64_t, uint64_t))v69;
        uint64_t v24 = ((uint64_t (*)(char *, unint64_t, uint64_t))v69)(v20, v21, v76);
        uint64_t v72 = &v59;
        MEMORY[0x270FA5388](v24);
        v23(v20, a4, v22);
        if (v17)
        {
          uint64_t v25 = 0;
          uint64_t v26 = v68 + ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80));
          uint64_t v27 = v26;
          while ((sub_251F34D70() & 1) == 0)
          {
            ++v25;
            v27 += v10;
            if (v17 == v25)
            {
              uint64_t v25 = 1000;
              break;
            }
          }
          uint64_t v28 = 0;
          while ((sub_251F34D70() & 1) == 0)
          {
            uint64_t v29 = v28 + 1;
            if (__OFADD__(v28, 1))
            {
              __break(1u);
              goto LABEL_83;
            }
            ++v28;
            v26 += v10;
            if (v29 == v17)
            {
              uint64_t v28 = 1000;
              break;
            }
          }
        }
        else
        {
          uint64_t v28 = 1000;
          uint64_t v25 = 1000;
        }
        uint64_t v30 = *(uint64_t (**)(char *, uint64_t))v65;
        uint64_t v31 = v76;
        (*(void (**)(char *, uint64_t))v65)(v20, v76);
        uint64_t v9 = v30(v20, v31);
        unint64_t v32 = v79;
        if (v25 >= v28)
        {
          unint64_t v34 = v78 + v10;
          unint64_t v35 = v75;
          if (v79 < v78 || v79 >= v34)
          {
            uint64_t v9 = swift_arrayInitWithTakeFrontToBack();
          }
          else if (v79 != v78)
          {
            uint64_t v9 = swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v78 = v34;
          unint64_t v33 = v35;
        }
        else
        {
          unint64_t v33 = v75 + v10;
          if (v79 < v75 || v79 >= v33)
          {
            uint64_t v9 = swift_arrayInitWithTakeFrontToBack();
          }
          else if (v79 == v75)
          {
            unint64_t v32 = v75;
          }
          else
          {
            uint64_t v9 = swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v79 = v32 + v10;
        a4 = v78;
        if (v78 >= (unint64_t)v71) {
          break;
        }
        a2 = v33;
      }
      while (v33 < v74);
    }
LABEL_81:
    sub_251ECD9FC(&v79, &v78, (uint64_t *)&v77);
    return 1;
  }
LABEL_87:
  swift_bridgeObjectRelease();
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251F07908(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v32 = a2;
  uint64_t v35 = a5;
  uint64_t v36 = result;
  uint64_t v45 = a4;
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    uint64_t v6 = *(void *)(v35 + 16);
    uint64_t result = sub_251F34DA0();
    uint64_t v7 = *(void **)(result - 8);
    uint64_t v8 = v7;
    uint64_t v9 = v7[9];
    uint64_t v44 = v7[8];
    int64_t v11 = v7 + 2;
    uint64_t v10 = (void (*)(char *))v7[2];
    uint64_t v39 = v11;
    uint64_t v40 = v10;
    uint64_t v37 = (void (**)(char *, uint64_t))(v8 + 1);
    uint64_t v38 = result;
    unint64_t v34 = v8;
    uint64_t v41 = (void (**)(char *, unint64_t, uint64_t))(v8 + 4);
LABEL_5:
    uint64_t v33 = v5;
    while (1)
    {
      uint64_t v47 = &v31;
      uint64_t v48 = v5 - 1;
      uint64_t v12 = v44;
      uint64_t v43 = v9 * v5;
      MEMORY[0x270FA5388](result);
      uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v14 = v40;
      uint64_t v15 = ((uint64_t (*)(char *))v40)(v13);
      uint64_t v46 = &v31;
      uint64_t v42 = v9 * v48;
      MEMORY[0x270FA5388](v15);
      v14(v13);
      if (v6)
      {
        uint64_t v16 = 0;
        uint64_t v17 = v35 + ((*((unsigned __int8 *)v34 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v34 + 80));
        uint64_t v18 = v17;
        uint64_t v19 = v38;
        while ((sub_251F34D70() & 1) == 0)
        {
          ++v16;
          v18 += v9;
          if (v6 == v16)
          {
            uint64_t v16 = 1000;
            break;
          }
        }
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t result = sub_251F34D70();
          if (result) {
            break;
          }
          uint64_t v21 = v20 + 1;
          if (__OFADD__(v20, 1))
          {
            __break(1u);
            goto LABEL_25;
          }
          ++v20;
          v17 += v9;
          if (v21 == v6)
          {
            uint64_t v20 = 1000;
            break;
          }
        }
      }
      else
      {
        uint64_t v20 = 1000;
        uint64_t v16 = 1000;
        uint64_t v19 = v38;
      }
      uint64_t v22 = *v37;
      (*v37)(v13, v19);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v22)(v13, v19);
      if (v16 >= v20)
      {
LABEL_4:
        uint64_t v5 = v33 + 1;
        if (v33 + 1 == v32) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v23 = *v45;
      if (!*v45) {
        break;
      }
      uint64_t v47 = &v31;
      uint64_t v24 = v42;
      uint64_t v25 = v43;
      unint64_t v26 = v23 + v43;
      uint64_t v27 = v23 + v42;
      MEMORY[0x270FA5388](result);
      uint64_t v29 = (char *)&v31 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v30 = *v41;
      (*v41)(v29, v26, v19);
      if (v25 < v24 || v26 >= v27 + v9) {
        swift_arrayInitWithTakeFrontToBack();
      }
      uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(v27, v29, v19);
      uint64_t v5 = v48;
      if (v48 == v36) {
        goto LABEL_4;
      }
    }
LABEL_25:
    __break(1u);
  }
  return result;
}

uint64_t sub_251F07C7C(uint64_t *a1, uint64_t a2)
{
  uint64_t v174 = a1;
  uint64_t v4 = a1[1];
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_251F36AA0();
  if (v5 >= v4)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      if (v4)
      {
        swift_bridgeObjectRetain();
        sub_251F07908(0, v4, 1, v174, a2);
      }
      return swift_bridgeObjectRelease_n();
    }
    goto LABEL_184;
  }
  uint64_t v152 = v5;
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_193;
  }
  uint64_t v7 = MEMORY[0x263F8EE78];
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (v4 > 1)
  {
    uint64_t v9 = v6 >> 1;
    sub_251F34DA0();
    uint64_t v7 = sub_251F35B50();
    *(void *)(v7 + 16) = v9;
  }
  uint64_t v163 = v2;
  uint64_t isUniquelyReferenced_nonNull_native = sub_251F34DA0();
  uint64_t v11 = *(void *)(isUniquelyReferenced_nonNull_native - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v151 = v7;
  unint64_t v159 = v7 + v12;
  uint64_t v160 = (void *)v11;
  uint64_t v161 = a2;
  if (v4 < 1)
  {
    uint64_t v14 = (char *)v8;
    unint64_t v78 = *(void *)(v8 + 16);
LABEL_144:
    v158 = v14;
    if (v78 < 2)
    {
LABEL_158:
      swift_bridgeObjectRelease();
      *(void *)(v151 + 16) = 0;
      goto LABEL_161;
    }
    uint64_t v136 = *v174;
    while (1)
    {
      unint64_t v137 = v78 - 2;
      if (v78 < 2) {
        goto LABEL_178;
      }
      if (!v136) {
        goto LABEL_191;
      }
      uint64_t v138 = *(void *)&v158[16 * v137 + 32];
      uint64_t v139 = *(void *)&v158[16 * v78 + 24];
      uint64_t v140 = v161;
      uint64_t v141 = v160[9];
      unint64_t v142 = v136 + v141 * v138;
      unint64_t v143 = v136 + v141 * *(void *)&v158[16 * v78 + 16];
      unint64_t v144 = v136 + v141 * v139;
      swift_bridgeObjectRetain();
      unint64_t v145 = v142;
      uint64_t v146 = v163;
      sub_251F071C4(v145, v143, v144, v159, v140);
      uint64_t v163 = v146;
      if (v146) {
        goto LABEL_160;
      }
      swift_bridgeObjectRelease();
      if (v139 < v138) {
        goto LABEL_179;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v158 = sub_251ECDC38((uint64_t)v158);
      }
      uint64_t v147 = v158;
      if (v137 >= *((void *)v158 + 2)) {
        goto LABEL_180;
      }
      uint64_t v148 = v158 + 32;
      uint64_t v149 = &v158[16 * v137 + 32];
      *(void *)uint64_t v149 = v138;
      *((void *)v149 + 1) = v139;
      unint64_t v150 = *((void *)v147 + 2);
      if (v78 > v150) {
        goto LABEL_181;
      }
      memmove(&v148[16 * v78 - 16], &v148[16 * v78], 16 * (v150 - v78));
      *((void *)v147 + 2) = v150 - 1;
      unint64_t v78 = v150 - 1;
      if (v150 <= 2) {
        goto LABEL_158;
      }
    }
  }
  uint64_t v175 = isUniquelyReferenced_nonNull_native;
  uint64_t v13 = 0;
  uint64_t v166 = v11 + 16;
  unint64_t v167 = a2 + v12;
  id v165 = (void (**)(char *, uint64_t))(v11 + 8);
  v173 = (void (**)(void))(v11 + 32);
  uint64_t v14 = (char *)MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t v15 = (uint64_t)v13 + 1;
    if ((uint64_t)v13 + 1 >= v4) {
      goto LABEL_57;
    }
    unint64_t v162 = (void (*)(char *))v4;
    uint64_t v157 = (uint64_t (*)(void))((char *)v13 + 1);
    v158 = v14;
    uint64_t v171 = &v151;
    uint64_t v172 = (void *)*v174;
    unint64_t v17 = v160[8];
    uint64_t v16 = v160[9];
    MEMORY[0x270FA5388](isUniquelyReferenced_nonNull_native);
    unint64_t v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v20 = *(uint64_t (**)(char *))(v19 + 16);
    uint64_t v21 = v20((char *)&v151 - v18);
    uint64_t v170 = (void (*)(void))&v151;
    uint64_t v164 = (uint64_t)v13;
    unint64_t v168 = v17;
    MEMORY[0x270FA5388](v21);
    v156 = (void (*)(char *))v20;
    v20((char *)&v151 - v18);
    uint64_t v22 = *(void *)(a2 + 16);
    if (v22)
    {
      int64_t v176 = 0;
      unint64_t v23 = v167;
      while ((sub_251F34D70() & 1) == 0)
      {
        v23 += v16;
        if (v22 == ++v176)
        {
          int64_t v176 = 1000;
          break;
        }
      }
      uint64_t v24 = 0;
      unint64_t v25 = v167;
      while ((sub_251F34D70() & 1) == 0)
      {
        uint64_t v26 = v24 + 1;
        if (__OFADD__(v24, 1)) {
          goto LABEL_167;
        }
        ++v24;
        v25 += v16;
        if (v26 == v22)
        {
          uint64_t v24 = 1000;
          break;
        }
      }
    }
    else
    {
      uint64_t v24 = 1000;
      int64_t v176 = 1000;
    }
    uint64_t v27 = *v165;
    uint64_t v28 = v175;
    (*v165)((char *)&v151 - v18, v175);
    v155 = v27;
    uint64_t isUniquelyReferenced_nonNull_native = ((uint64_t (*)(char *, uint64_t))v27)((char *)&v151 - v18, v28);
    uint64_t v29 = v164 + 2;
    uint64_t v4 = (uint64_t)v162;
    if (v164 + 2 >= (uint64_t)v162)
    {
      uint64_t v42 = v172;
      goto LABEL_40;
    }
    uint64_t v154 = v16;
    uint64_t v153 = v24;
    while (1)
    {
      uint64_t v170 = (void (*)(void))&v151;
      uint64_t v171 = (uint64_t *)v29;
      unint64_t v30 = v168;
      MEMORY[0x270FA5388](isUniquelyReferenced_nonNull_native);
      uint64_t v31 = (char *)&v151 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v32 = v156;
      uint64_t v33 = ((uint64_t (*)(char *))v156)(v31);
      int64_t v169 = (int64_t)&v151;
      MEMORY[0x270FA5388](v33);
      v32(v31);
      if (v22)
      {
        uint64_t v34 = 0;
        unint64_t v35 = v167;
        uint64_t v16 = v154;
        uint64_t v24 = v153;
        do
        {
          if (sub_251F34D70()) {
            goto LABEL_29;
          }
          ++v34;
          v35 += v16;
        }
        while (v22 != v34);
        uint64_t v34 = 1000;
LABEL_29:
        uint64_t v36 = 0;
        unint64_t v37 = v167;
        while (1)
        {
          if (sub_251F34D70()) {
            goto LABEL_35;
          }
          uint64_t v38 = v36 + 1;
          if (__OFADD__(v36, 1)) {
            break;
          }
          ++v36;
          v37 += v16;
          if (v38 == v22)
          {
            uint64_t v36 = 1000;
            goto LABEL_35;
          }
        }
        __break(1u);
LABEL_163:
        __break(1u);
LABEL_164:
        __break(1u);
LABEL_165:
        __break(1u);
LABEL_166:
        __break(1u);
LABEL_167:
        __break(1u);
LABEL_168:
        __break(1u);
LABEL_169:
        __break(1u);
LABEL_170:
        __break(1u);
LABEL_171:
        __break(1u);
LABEL_172:
        __break(1u);
LABEL_173:
        __break(1u);
LABEL_174:
        __break(1u);
LABEL_175:
        __break(1u);
LABEL_176:
        __break(1u);
LABEL_177:
        __break(1u);
LABEL_178:
        __break(1u);
LABEL_179:
        __break(1u);
LABEL_180:
        __break(1u);
LABEL_181:
        __break(1u);
LABEL_182:
        __break(1u);
LABEL_183:
        __break(1u);
LABEL_184:
        __break(1u);
LABEL_185:
        __break(1u);
LABEL_186:
        __break(1u);
LABEL_187:
        __break(1u);
LABEL_188:
        __break(1u);
LABEL_189:
        swift_bridgeObjectRelease_n();
        __break(1u);
LABEL_190:
        swift_bridgeObjectRelease_n();
        __break(1u);
LABEL_191:
        swift_bridgeObjectRelease_n();
        __break(1u);
LABEL_192:
        swift_bridgeObjectRelease_n();
        __break(1u);
LABEL_193:
        swift_bridgeObjectRelease_n();
        uint64_t result = sub_251F36670();
        __break(1u);
        return result;
      }
      uint64_t v36 = 1000;
      uint64_t v34 = 1000;
      uint64_t v16 = v154;
      uint64_t v24 = v153;
LABEL_35:
      BOOL v39 = v176 < v24;
      uint64_t v40 = v175;
      uint64_t v41 = v155;
      v155(v31, v175);
      uint64_t isUniquelyReferenced_nonNull_native = ((uint64_t (*)(char *, uint64_t))v41)(v31, v40);
      if (((v39 ^ (v34 >= v36)) & 1) == 0) {
        break;
      }
      uint64_t v42 = v172;
      uint64_t v29 = (uint64_t)v171 + 1;
      uint64_t v4 = (uint64_t)v162;
      if ((char *)((char *)v171 + 1) == (char *)v162)
      {
        uint64_t v29 = (uint64_t)v162;
        goto LABEL_40;
      }
    }
    uint64_t v4 = (uint64_t)v162;
    uint64_t v29 = (uint64_t)v171;
    uint64_t v42 = v172;
LABEL_40:
    a2 = v161;
    if (v176 >= v24)
    {
      uint64_t v15 = v29;
      goto LABEL_56;
    }
    uint64_t v13 = (uint64_t (*)(void))v164;
    uint64_t v14 = v158;
    if (v29 < v164) {
      goto LABEL_188;
    }
    if (v164 >= v29)
    {
      uint64_t v15 = v29;
    }
    else
    {
      uint64_t v43 = 0;
      uint64_t v44 = v16 * (v29 - 1);
      uint64_t v45 = v29 * v16;
      uint64_t v46 = (void *)v164;
      uint64_t v47 = v164 * v16;
      uint64_t v171 = (uint64_t *)v29;
      do
      {
        if (v46 != (void *)(v29 + v43 - 1))
        {
          if (!v42) {
            goto LABEL_192;
          }
          int64_t v176 = (int64_t)&v151;
          uint64_t v49 = (char *)v42 + v44;
          MEMORY[0x270FA5388](isUniquelyReferenced_nonNull_native);
          int64_t v51 = *v173;
          int64_t v169 = (int64_t)&v151 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
          uint64_t v170 = v51;
          v51();
          if (v47 < v44 || (char *)v42 + v47 >= (char *)v42 + v45)
          {
            uint64_t v48 = v175;
            swift_arrayInitWithTakeFrontToBack();
          }
          else
          {
            uint64_t v48 = v175;
            if (v47 != v44) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          uint64_t isUniquelyReferenced_nonNull_native = ((uint64_t (*)(char *, int64_t, uint64_t))v170)(v49, v169, v48);
          uint64_t v29 = (uint64_t)v171;
          uint64_t v42 = v172;
        }
        uint64_t v46 = (void *)((char *)v46 + 1);
        --v43;
        v44 -= v16;
        v45 -= v16;
        v47 += v16;
      }
      while ((uint64_t)v46 < v29 + v43);
      uint64_t v15 = v29;
      a2 = v161;
      uint64_t v4 = (uint64_t)v162;
LABEL_56:
      uint64_t v14 = v158;
      uint64_t v13 = (uint64_t (*)(void))v164;
    }
LABEL_57:
    uint64_t v157 = (uint64_t (*)(void))v15;
    if (v15 < v4)
    {
      if (__OFSUB__(v15, v13)) {
        goto LABEL_185;
      }
      if (v15 - (uint64_t)v13 < v152)
      {
        if (__OFADD__(v13, v152)) {
          goto LABEL_186;
        }
        if ((uint64_t)v13 + v152 >= v4) {
          uint64_t v52 = (void (*)(char *))v4;
        }
        else {
          uint64_t v52 = (void (*)(char *))((char *)v13 + v152);
        }
        if ((uint64_t)v52 < (uint64_t)v13) {
          goto LABEL_187;
        }
        if ((char *)v157 != (char *)v52) {
          break;
        }
      }
    }
LABEL_88:
    if ((uint64_t)v157 < (uint64_t)v13) {
      goto LABEL_183;
    }
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_251ECD5C4(0, *((void *)v14 + 2) + 1, 1, v14);
      uint64_t v14 = (char *)isUniquelyReferenced_nonNull_native;
    }
    unint64_t v77 = *((void *)v14 + 2);
    unint64_t v76 = *((void *)v14 + 3);
    unint64_t v78 = v77 + 1;
    if (v77 >= v76 >> 1)
    {
      uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_251ECD5C4((char *)(v76 > 1), v77 + 1, 1, v14);
      uint64_t v14 = (char *)isUniquelyReferenced_nonNull_native;
    }
    *((void *)v14 + 2) = v78;
    uint64_t v172 = v14 + 32;
    unint64_t v79 = &v14[16 * v77 + 32];
    unint64_t v80 = v157;
    *(void *)unint64_t v79 = v13;
    *((void *)v79 + 1) = v80;
    if (v77)
    {
      unint64_t v81 = v172;
      while (1)
      {
        unint64_t v82 = v78 - 1;
        if (v78 >= 4)
        {
          uint64_t v87 = &v81[2 * v78];
          uint64_t v88 = *(v87 - 8);
          uint64_t v89 = *(v87 - 7);
          BOOL v93 = __OFSUB__(v89, v88);
          uint64_t v90 = v89 - v88;
          if (v93) {
            goto LABEL_168;
          }
          uint64_t v92 = *(v87 - 6);
          uint64_t v91 = *(v87 - 5);
          BOOL v93 = __OFSUB__(v91, v92);
          uint64_t v85 = v91 - v92;
          char v86 = v93;
          if (v93) {
            goto LABEL_169;
          }
          unint64_t v94 = v78 - 2;
          uint64_t v95 = &v81[2 * v78 - 4];
          uint64_t v97 = *v95;
          uint64_t v96 = v95[1];
          BOOL v93 = __OFSUB__(v96, v97);
          uint64_t v98 = v96 - v97;
          if (v93) {
            goto LABEL_171;
          }
          BOOL v93 = __OFADD__(v85, v98);
          uint64_t v99 = v85 + v98;
          if (v93) {
            goto LABEL_174;
          }
          if (v99 >= v90)
          {
            uint64_t v117 = &v81[2 * v82];
            uint64_t v119 = *v117;
            uint64_t v118 = v117[1];
            BOOL v93 = __OFSUB__(v118, v119);
            uint64_t v120 = v118 - v119;
            if (v93) {
              goto LABEL_182;
            }
            BOOL v110 = v85 < v120;
            goto LABEL_126;
          }
        }
        else
        {
          if (v78 != 3)
          {
            uint64_t v111 = *((void *)v14 + 4);
            uint64_t v112 = *((void *)v14 + 5);
            BOOL v93 = __OFSUB__(v112, v111);
            uint64_t v104 = v112 - v111;
            char v105 = v93;
            goto LABEL_120;
          }
          uint64_t v84 = *((void *)v14 + 4);
          uint64_t v83 = *((void *)v14 + 5);
          BOOL v93 = __OFSUB__(v83, v84);
          uint64_t v85 = v83 - v84;
          char v86 = v93;
        }
        if (v86) {
          goto LABEL_170;
        }
        unint64_t v94 = v78 - 2;
        uint64_t v100 = &v81[2 * v78 - 4];
        uint64_t v102 = *v100;
        uint64_t v101 = v100[1];
        BOOL v103 = __OFSUB__(v101, v102);
        uint64_t v104 = v101 - v102;
        char v105 = v103;
        if (v103) {
          goto LABEL_173;
        }
        uint64_t v106 = &v81[2 * v82];
        uint64_t v108 = *v106;
        uint64_t v107 = v106[1];
        BOOL v93 = __OFSUB__(v107, v108);
        uint64_t v109 = v107 - v108;
        if (v93) {
          goto LABEL_176;
        }
        if (__OFADD__(v104, v109)) {
          goto LABEL_177;
        }
        if (v104 + v109 >= v85)
        {
          BOOL v110 = v85 < v109;
LABEL_126:
          if (v110) {
            unint64_t v82 = v94;
          }
          goto LABEL_128;
        }
LABEL_120:
        if (v105) {
          goto LABEL_172;
        }
        uint64_t v113 = &v81[2 * v82];
        uint64_t v115 = *v113;
        uint64_t v114 = v113[1];
        BOOL v93 = __OFSUB__(v114, v115);
        uint64_t v116 = v114 - v115;
        if (v93) {
          goto LABEL_175;
        }
        if (v116 < v104) {
          goto LABEL_137;
        }
LABEL_128:
        unint64_t v121 = v82 - 1;
        if (v82 - 1 >= v78) {
          goto LABEL_163;
        }
        uint64_t v122 = *v174;
        if (!*v174) {
          goto LABEL_190;
        }
        uint64_t v123 = &v81[2 * v121];
        uint64_t v124 = *v123;
        unint64_t v125 = v82;
        uint64_t v126 = &v81[2 * v82];
        uint64_t v127 = v126[1];
        a2 = v161;
        uint64_t v128 = v160[9];
        unint64_t v129 = v122 + v128 * *v123;
        int64_t v176 = v122 + v128 * *v126;
        unint64_t v130 = v122 + v128 * v127;
        swift_bridgeObjectRetain();
        unint64_t v131 = v129;
        uint64_t v132 = v163;
        sub_251F071C4(v131, v176, v130, v159, a2);
        uint64_t v163 = v132;
        if (v132) {
          goto LABEL_160;
        }
        swift_bridgeObjectRelease();
        if (v127 < v124) {
          goto LABEL_164;
        }
        if (v125 > *((void *)v14 + 2)) {
          goto LABEL_165;
        }
        unint64_t v133 = v125;
        *uint64_t v123 = v124;
        unint64_t v81 = v172;
        v172[2 * v121 + 1] = v127;
        unint64_t v134 = *((void *)v14 + 2);
        if (v133 >= v134) {
          goto LABEL_166;
        }
        unint64_t v78 = v134 - 1;
        uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)memmove(v126, v126 + 2, 16 * (v134 - 1 - v133));
        *((void *)v14 + 2) = v134 - 1;
        if (v134 <= 2) {
          goto LABEL_137;
        }
      }
    }
    unint64_t v78 = 1;
LABEL_137:
    uint64_t v4 = v174[1];
    uint64_t v13 = v157;
    if ((uint64_t)v157 >= v4) {
      goto LABEL_144;
    }
  }
  uint64_t v164 = (uint64_t)v13;
  v158 = v14;
  uint64_t v53 = *(void *)(a2 + 16);
  uint64_t v54 = v160[9];
  uint64_t v170 = (void (*)(void))v160[8];
  unint64_t v162 = (void (*)(char *))v160[2];
  int64_t v55 = (int64_t)v157;
  v156 = v52;
LABEL_68:
  uint64_t v157 = (uint64_t (*)(void))v55;
  while (1)
  {
    uint64_t v172 = &v151;
    int64_t v176 = v55 - 1;
    int64_t v169 = v54 * v55;
    unint64_t v56 = v170;
    MEMORY[0x270FA5388](isUniquelyReferenced_nonNull_native);
    unint64_t v57 = (char *)&v151 - (((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v58 = v162;
    uint64_t v59 = ((uint64_t (*)(char *))v162)(v57);
    uint64_t v171 = &v151;
    unint64_t v168 = v54 * v176;
    MEMORY[0x270FA5388](v59);
    v58(v57);
    if (v53) {
      break;
    }
    uint64_t v62 = 1000;
    uint64_t v60 = 1000;
LABEL_82:
    unint64_t v65 = *v165;
    uint64_t v66 = v175;
    (*v165)(v57, v175);
    uint64_t isUniquelyReferenced_nonNull_native = ((uint64_t (*)(char *, uint64_t))v65)(v57, v66);
    if (v60 < v62)
    {
      uint64_t v67 = *v174;
      if (!*v174) {
        goto LABEL_189;
      }
      uint64_t v172 = &v151;
      int64_t v68 = v168;
      int64_t v69 = v169;
      uint64_t v70 = (char *)(v67 + v169);
      unint64_t v71 = v67 + v168;
      MEMORY[0x270FA5388](isUniquelyReferenced_nonNull_native);
      uint64_t v73 = (char *)&v151 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
      unint64_t v74 = *v173;
      uint64_t v75 = v175;
      ((void (*)(char *, char *, uint64_t))*v173)(v73, v70, v175);
      if (v69 < v68 || (unint64_t)v70 >= v71 + v54) {
        swift_arrayInitWithTakeFrontToBack();
      }
      uint64_t isUniquelyReferenced_nonNull_native = ((uint64_t (*)(unint64_t, char *, uint64_t))v74)(v71, v73, v75);
      int64_t v55 = v176;
      if (v176 != v164) {
        continue;
      }
    }
    int64_t v55 = (int64_t)v157 + 1;
    if ((char *)((char *)v157 + 1) != (char *)v156) {
      goto LABEL_68;
    }
    uint64_t v157 = (uint64_t (*)(void))v156;
    a2 = v161;
    uint64_t v14 = v158;
    uint64_t v13 = (uint64_t (*)(void))v164;
    goto LABEL_88;
  }
  uint64_t v60 = 0;
  unint64_t v61 = v167;
  while ((sub_251F34D70() & 1) == 0)
  {
    ++v60;
    v61 += v54;
    if (v53 == v60)
    {
      uint64_t v60 = 1000;
      break;
    }
  }
  uint64_t v62 = 0;
  unint64_t v63 = v167;
  while (1)
  {
    if (sub_251F34D70()) {
      goto LABEL_82;
    }
    uint64_t v64 = v62 + 1;
    if (__OFADD__(v62, 1)) {
      break;
    }
    ++v62;
    v63 += v54;
    if (v64 == v53)
    {
      uint64_t v62 = 1000;
      goto LABEL_82;
    }
  }
  __break(1u);
LABEL_160:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v151 + 16) = 0;
LABEL_161:
  swift_bridgeObjectRelease_n();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251F08AE4(void **a1, uint64_t a2)
{
  return sub_251F0C360(a1, a2, (void (*)(void *, uint64_t))sub_251F07C7C);
}

unint64_t *sub_251F08B10(unint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v39 = a2;
  uint64_t v5 = a3;
  uint64_t v40 = result;
  uint64_t v41 = 0;
  int64_t v6 = 0;
  uint64_t v7 = *(void *)(a3 + 56);
  uint64_t v44 = a3 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v42 = a3;
  int64_t v43 = v11;
  while (v10)
  {
    uint64_t v48 = (v10 - 1) & v10;
    int64_t v52 = v6;
    unint64_t v13 = __clz(__rbit64(v10)) | (v6 << 6);
LABEL_22:
    uint64_t v18 = sub_251F34DA0();
    uint64_t v47 = &v39;
    uint64_t v19 = *(void *)(v18 - 8);
    MEMORY[0x270FA5388](v18);
    uint64_t v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v23 = v22;
    uint64_t v24 = *(void *)(v5 + 48);
    uint64_t v25 = *(void *)(v23 + 72);
    unint64_t v45 = v13;
    (*(void (**)(char *, unint64_t, uint64_t))(v19 + 16))(v21, v24 + v25 * v13, v18);
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    uint64_t v46 = &v39;
    MEMORY[0x270FA5388](v26 - 8);
    uint64_t v28 = (char *)&v39 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (!*(void *)(a4 + 16) || (unint64_t v29 = sub_2519FE584((uint64_t)v21), (v30 & 1) == 0))
    {
      uint64_t v12 = sub_251F34D20();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v28, 1, 1, v12);
      goto LABEL_5;
    }
    sub_251A1A4EC(*(void *)(a4 + 56) + 40 * v29, (uint64_t)v49);
    uint64_t v31 = a4;
    uint64_t v33 = v50;
    uint64_t v32 = v51;
    __swift_project_boxed_opaque_existential_1(v49, v50);
    uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v32 + 64);
    uint64_t v35 = v33;
    a4 = v31;
    uint64_t v36 = v32;
    uint64_t v5 = v42;
    int64_t v11 = v43;
    v34(v35, v36);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
    uint64_t v37 = sub_251F34D20();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 48))(v28, 1, v37) == 1)
    {
LABEL_5:
      sub_251A1B064((uint64_t)v28, &qword_26B21EC20);
      uint64_t result = (unint64_t *)(*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
      unint64_t v10 = v48;
      int64_t v6 = v52;
    }
    else
    {
      sub_251A1B064((uint64_t)v28, &qword_26B21EC20);
      uint64_t result = (unint64_t *)(*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
      *(unint64_t *)((char *)v40 + ((v45 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v45;
      BOOL v38 = __OFADD__(v41++, 1);
      int64_t v6 = v52;
      unint64_t v10 = v48;
      if (v38)
      {
        __break(1u);
LABEL_28:
        swift_retain();
        return (unint64_t *)sub_251F1B4B0(v40, v39, v41, v5);
      }
    }
  }
  int64_t v14 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v14 >= v11) {
    goto LABEL_28;
  }
  unint64_t v15 = *(void *)(v44 + 8 * v14);
  int64_t v16 = v6 + 1;
  if (v15) {
    goto LABEL_21;
  }
  int64_t v16 = v6 + 2;
  if (v6 + 2 >= v11) {
    goto LABEL_28;
  }
  unint64_t v15 = *(void *)(v44 + 8 * v16);
  if (v15) {
    goto LABEL_21;
  }
  int64_t v16 = v6 + 3;
  if (v6 + 3 >= v11) {
    goto LABEL_28;
  }
  unint64_t v15 = *(void *)(v44 + 8 * v16);
  if (v15)
  {
LABEL_21:
    uint64_t v48 = (v15 - 1) & v15;
    int64_t v52 = v16;
    unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
    goto LABEL_22;
  }
  uint64_t v17 = v6 + 4;
  if (v6 + 4 >= v11) {
    goto LABEL_28;
  }
  unint64_t v15 = *(void *)(v44 + 8 * v17);
  if (v15)
  {
    int64_t v16 = v6 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v16 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v16 >= v11) {
      goto LABEL_28;
    }
    unint64_t v15 = *(void *)(v44 + 8 * v16);
    ++v17;
    if (v15) {
      goto LABEL_21;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_251F08F58(uint64_t a1, uint64_t a2)
{
  return sub_251F08FB8(a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_251F08B10);
}

uint64_t sub_251F08FB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *, unint64_t, uint64_t, uint64_t))
{
  v15[1] = *MEMORY[0x263EF8340];
  char v7 = *(unsigned char *)(a1 + 32);
  unsigned int v8 = v7 & 0x3F;
  unint64_t v9 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v10 = 8 * v9;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v8 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    swift_bridgeObjectRetain();
    uint64_t v12 = a3((char *)v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v9, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    if (v3) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    unint64_t v13 = (void *)swift_slowAlloc();
    bzero(v13, v10);
    swift_bridgeObjectRetain();
    uint64_t v12 = a3((char *)v13, v9, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    MEMORY[0x2533AC760](v13, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v12;
}

uint64_t sub_251F09190(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v74 = a5;
  unint64_t v61 = a4;
  uint64_t v49 = result;
  uint64_t v56 = a3;
  uint64_t v48 = a2;
  if (a3 != a2)
  {
    uint64_t result = sub_251F34DA0();
    uint64_t v5 = *(void **)(result - 8);
    int64_t v6 = (void (*)(void))v5[2];
    v5 += 2;
    uint64_t v53 = (void (*)(char *))v6;
    uint64_t v7 = v5[7];
    uint64_t v60 = v5[6];
    uint64_t v51 = (uint64_t (**)(uint64_t, uint64_t))(v5 - 1);
    int64_t v52 = v5;
    unint64_t v57 = (void (**)(char *, uint64_t, uint64_t))(v5 + 2);
    uint64_t v55 = v7;
    uint64_t v68 = v7 * v56;
    uint64_t v69 = v7 * (v56 - 1);
    uint64_t v54 = result;
LABEL_5:
    uint64_t v8 = 0;
    uint64_t v62 = v49;
    while (1)
    {
      uint64_t v67 = &v47;
      uint64_t v9 = v60;
      uint64_t v59 = v68 + v8;
      MEMORY[0x270FA5388](result);
      size_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
      int64_t v11 = v53;
      uint64_t v12 = ((uint64_t (*)(char *))v53)(v10);
      unint64_t v65 = &v47;
      uint64_t v58 = v69 + v8;
      MEMORY[0x270FA5388](v12);
      uint64_t v13 = (uint64_t)v10;
      v11(v10);
      uint64_t v14 = sub_251F34D20();
      uint64_t v64 = &v47;
      uint64_t v15 = *(void *)(v14 - 8);
      uint64_t v16 = *(void *)(v15 + 64);
      MEMORY[0x270FA5388](v14);
      uint64_t v70 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
      uint64_t v18 = *(void *)(*(void *)(v17 - 8) + 64);
      MEMORY[0x270FA5388](v17 - 8);
      uint64_t v19 = *(void *)(v74 + 16);
      uint64_t v66 = v10;
      if (!v19) {
        break;
      }
      unint64_t v20 = sub_2519FE584((uint64_t)v10);
      if ((v21 & 1) == 0) {
        break;
      }
      sub_251A1A4EC(*(void *)(v74 + 56) + 40 * v20, (uint64_t)v71);
      unint64_t v63 = (uint64_t *)v10;
      uint64_t v50 = &v47;
      uint64_t v23 = v72;
      uint64_t v22 = v73;
      __swift_project_boxed_opaque_existential_1(v71, v72);
      uint64_t v24 = v23;
      uint64_t v13 = (uint64_t)v63;
      (*(void (**)(uint64_t, uint64_t))(v22 + 64))(v24, v22);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v71);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))((char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v14) == 1)goto LABEL_12; {
      uint64_t v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v70, (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v14);
      }
LABEL_13:
      unint64_t v63 = &v47;
      uint64_t v26 = MEMORY[0x270FA5388](v25);
      uint64_t v27 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      MEMORY[0x270FA5388](v26);
      uint64_t v28 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
      if (*(void *)(v74 + 16) && (unint64_t v29 = sub_2519FE584(v13), (v30 & 1) != 0))
      {
        sub_251A1A4EC(*(void *)(v74 + 56) + 40 * v29, (uint64_t)v71);
        uint64_t v50 = &v47;
        uint64_t v31 = v13;
        uint64_t v33 = v72;
        uint64_t v32 = v73;
        __swift_project_boxed_opaque_existential_1(v71, v72);
        uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v32 + 64);
        uint64_t v35 = v32;
        uint64_t v13 = v31;
        v34(v33, v35);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v71);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v28, 1, v14) != 1)
        {
          (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v27, v28, v14);
          goto LABEL_19;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v28, 1, 1, v14);
      }
      sub_251F34CB0();
      sub_251A1B064((uint64_t)v28, &qword_26B21EC20);
LABEL_19:
      uint64_t v36 = v70;
      char v37 = sub_251F34C90();
      BOOL v38 = *(void (**)(char *, uint64_t))(v15 + 8);
      v38(v27, v14);
      v38(v36, v14);
      uint64_t v39 = *v51;
      uint64_t v40 = v54;
      (*v51)(v13, v54);
      uint64_t result = v39((uint64_t)v66, v40);
      if ((v37 & 1) == 0) {
        goto LABEL_4;
      }
      uint64_t v41 = *v61;
      if (!*v61)
      {
        __break(1u);
        return result;
      }
      uint64_t v42 = v41 + v68 + v8;
      uint64_t v43 = v41 + v69 + v8;
      MEMORY[0x270FA5388](result);
      unint64_t v45 = (char *)&v47 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v46 = *v57;
      (*v57)(v45, v42, v40);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v46)(v43, v45, v40);
      v8 -= v55;
      if (v56 == ++v62)
      {
LABEL_4:
        v69 += v55;
        v68 += v55;
        if (++v56 == v48) {
          return result;
        }
        goto LABEL_5;
      }
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))((char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v14);
LABEL_12:
    sub_251F34CB0();
    uint64_t v25 = sub_251A1B064((uint64_t)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_26B21EC20);
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_251F09878(uint64_t *a1, uint64_t a2)
{
  v227 = a1;
  uint64_t v4 = a1[1];
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_251F36AA0();
  if (v5 < v4)
  {
    uint64_t v198 = v5;
    if (v4 >= 0) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = v4 + 1;
    }
    if (v4 < -1) {
      goto LABEL_180;
    }
    uint64_t v7 = (char *)MEMORY[0x263F8EE78];
    uint64_t v8 = MEMORY[0x263F8EE78];
    if (v4 > 1)
    {
      uint64_t v9 = v6 >> 1;
      sub_251F34DA0();
      uint64_t v8 = sub_251F35B50();
      *(void *)(v8 + 16) = v9;
    }
    uint64_t v205 = v2;
    uint64_t isUniquelyReferenced_nonNull_native = sub_251F34DA0();
    uint64_t v212 = isUniquelyReferenced_nonNull_native;
    uint64_t v11 = *(void *)(isUniquelyReferenced_nonNull_native - 8);
    unint64_t v203 = v8 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v214 = a2;
    uint64_t v199 = v8;
    v204 = (void *)v11;
    if (v4 < 1)
    {
      unint64_t v121 = *((void *)v7 + 2);
      goto LABEL_135;
    }
    uint64_t v12 = 0;
    uint64_t v210 = v11 + 16;
    v211 = (void (**)(char *, uint64_t))(v11 + 8);
    v225 = (unint64_t *)(v11 + 32);
LABEL_10:
    uint64_t v13 = v12 + 1;
    v200 = v7;
    if (v12 + 1 >= v4) {
      goto LABEL_45;
    }
    uint64_t v218 = v4;
    v232 = &v197;
    uint64_t v14 = *v227;
    uint64_t v15 = v204[8];
    uint64_t v16 = v204[9];
    uint64_t v223 = v12 + 1;
    MEMORY[0x270FA5388](isUniquelyReferenced_nonNull_native);
    v224 = (char *)((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v17 = (char *)((char *)&v197 - v224);
    uint64_t v19 = *(void (**)(void))(v18 + 16);
    uint64_t v20 = v212;
    uint64_t v202 = v12;
    uint64_t v21 = ((uint64_t (*)(int64_t))v19)((char *)&v197 - v224);
    uint64_t v12 = v202;
    v228 = &v197;
    v207 = (void (*)(void))v14;
    uint64_t v226 = v16;
    uint64_t v219 = v15;
    MEMORY[0x270FA5388](v21);
    uint64_t v22 = (char *)((char *)&v197 - v224);
    v216 = v19;
    ((void (*)(int64_t))v19)((char *)&v197 - v224);
    uint64_t v23 = v205;
    LODWORD(v217) = sub_251F0574C((uint64_t)v17, (uint64_t)v22, a2);
    uint64_t v205 = v23;
    if (v23)
    {
      v196 = *v211;
      (*v211)(v22, v20);
      v196(v17, v20);
      swift_bridgeObjectRelease();
LABEL_133:
      *(void *)(v199 + 16) = 0;
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease();
    }
    uint64_t v24 = *v211;
    (*v211)(v22, v20);
    v215 = v24;
    uint64_t isUniquelyReferenced_nonNull_native = ((uint64_t (*)(char *, uint64_t))v24)(v17, v20);
    uint64_t v13 = v12 + 2;
    uint64_t v4 = v218;
    if (v12 + 2 >= v218) {
      goto LABEL_31;
    }
    uint64_t v209 = v226 * v223;
    uint64_t v25 = v207;
    uint64_t v208 = v226 * v13;
    while (1)
    {
      uint64_t v213 = v13;
      v224 = (char *)&v197;
      uint64_t v26 = v219;
      MEMORY[0x270FA5388](isUniquelyReferenced_nonNull_native);
      unint64_t v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v28 = v216;
      uint64_t v29 = ((uint64_t (*)(char *))v216)((char *)&v197 - v27);
      v222 = &v197;
      char v30 = (char *)&v197 - v27;
      MEMORY[0x270FA5388](v29);
      v232 = (uint64_t *)((char *)&v197 - v27);
      v28();
      uint64_t v31 = sub_251F34D20();
      v221 = &v197;
      uint64_t v32 = *(void *)(v31 - 8);
      uint64_t v33 = a2;
      uint64_t v34 = *(void *)(v32 + 64);
      MEMORY[0x270FA5388](v31);
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
      v220 = (char *)&v197;
      uint64_t v36 = *(void *)(*(void *)(v35 - 8) + 64);
      MEMORY[0x270FA5388](v35 - 8);
      uint64_t v37 = *(void *)(v33 + 16);
      uint64_t v223 = (uint64_t)v30;
      v228 = (uint64_t *)((char *)&v197 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
      if (!v37) {
        break;
      }
      unint64_t v38 = sub_2519FE584((uint64_t)v30);
      if ((v39 & 1) == 0) {
        break;
      }
      sub_251A1A4EC(*(void *)(v33 + 56) + 40 * v38, (uint64_t)&v229);
      uint64_t v40 = v230;
      uint64_t v41 = v231;
      __swift_project_boxed_opaque_existential_1(&v229, v230);
      uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v41 + 64);
      uint64_t v43 = v41;
      unint64_t v44 = (unint64_t)v228;
      v42(v40, v43);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v229);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))((char *)&v197 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v31) == 1)goto LABEL_19; {
      uint64_t v45 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v32 + 32))(v44, (char *)&v197 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0), v31);
      }
LABEL_20:
      v220 = (char *)&v197;
      uint64_t v46 = MEMORY[0x270FA5388](v45);
      uint64_t v47 = (char *)&v197 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
      MEMORY[0x270FA5388](v46);
      uint64_t v48 = (char *)&v197 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
      a2 = v214;
      if (*(void *)(v214 + 16) && (unint64_t v49 = sub_2519FE584((uint64_t)v232), (v50 & 1) != 0))
      {
        sub_251A1A4EC(*(void *)(a2 + 56) + 40 * v49, (uint64_t)&v229);
        uint64_t v51 = v230;
        uint64_t v52 = v231;
        __swift_project_boxed_opaque_existential_1(&v229, v230);
        uint64_t v53 = v51;
        a2 = v214;
        (*(void (**)(uint64_t, uint64_t))(v52 + 64))(v53, v52);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v229);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v48, 1, v31) != 1)
        {
          (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v47, v48, v31);
          goto LABEL_26;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))((char *)&v197 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v31);
      }
      sub_251F34CB0();
      sub_251A1B064((uint64_t)v48, &qword_26B21EC20);
LABEL_26:
      uint64_t v4 = v218;
      unint64_t v54 = (unint64_t)v228;
      int v55 = sub_251F34C90();
      uint64_t v56 = *(void (**)(char *, uint64_t))(v32 + 8);
      v56(v47, v31);
      v56((char *)v54, v31);
      uint64_t v57 = v212;
      uint64_t v58 = (uint64_t (*)(uint64_t, uint64_t))v215;
      v215((char *)v232, v212);
      uint64_t isUniquelyReferenced_nonNull_native = v58(v223, v57);
      if ((v217 ^ v55))
      {
        uint64_t v7 = v200;
        uint64_t v13 = v213;
LABEL_30:
        uint64_t v12 = v202;
LABEL_31:
        if (v217)
        {
          if (v13 >= v12)
          {
            if (v12 < v13)
            {
              uint64_t v59 = 0;
              uint64_t v60 = v12;
              uint64_t v61 = v226 * (v13 - 1);
              uint64_t v62 = v13 * v226;
              uint64_t v63 = v60;
              uint64_t v64 = v60 * v226;
              uint64_t v213 = v13;
              do
              {
                if (v63 != v13 + v59 - 1)
                {
                  uint64_t v66 = v207;
                  if (!v207) {
                    goto LABEL_178;
                  }
                  v232 = &v197;
                  uint64_t v67 = (char *)v207 + v64;
                  uint64_t v68 = (char *)v207 + v61;
                  MEMORY[0x270FA5388](isUniquelyReferenced_nonNull_native);
                  uint64_t v70 = (char *)&v197 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
                  v228 = (uint64_t *)*v225;
                  ((void (*)(char *, char *, uint64_t))v228)(v70, (char *)v66 + v64, v212);
                  if (v64 < v61 || v67 >= (char *)v66 + v62)
                  {
                    uint64_t v65 = v212;
                    swift_arrayInitWithTakeFrontToBack();
                  }
                  else
                  {
                    uint64_t v65 = v212;
                    if (v64 != v61) {
                      swift_arrayInitWithTakeBackToFront();
                    }
                  }
                  uint64_t isUniquelyReferenced_nonNull_native = ((uint64_t (*)(char *, char *, uint64_t))v228)(v68, v70, v65);
                  uint64_t v7 = v200;
                  uint64_t v13 = v213;
                }
                ++v63;
                --v59;
                v61 -= v226;
                v62 -= v226;
                v64 += v226;
              }
              while (v63 < v13 + v59);
              a2 = v214;
              uint64_t v12 = v202;
              uint64_t v4 = v218;
            }
            goto LABEL_45;
          }
LABEL_175:
          __break(1u);
LABEL_176:
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_177:
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_178:
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_179:
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_180:
          swift_bridgeObjectRelease_n();
          uint64_t result = sub_251F36670();
          __break(1u);
          return result;
        }
LABEL_45:
        if (v13 >= v4) {
          goto LABEL_74;
        }
        if (__OFSUB__(v13, v12)) {
          goto LABEL_172;
        }
        if (v13 - v12 >= v198)
        {
LABEL_74:
          unint64_t v71 = v204;
        }
        else
        {
          unint64_t v71 = v204;
          if (__OFADD__(v12, v198)) {
            goto LABEL_173;
          }
          if (v12 + v198 >= v4) {
            uint64_t v72 = v4;
          }
          else {
            uint64_t v72 = v12 + v198;
          }
          if (v72 < v12)
          {
LABEL_174:
            __break(1u);
            goto LABEL_175;
          }
          if (v13 != v72)
          {
            uint64_t v202 = v12;
            uint64_t v73 = v204[9];
            uint64_t v218 = v204[8];
            v207 = (void (*)(void))v204[2];
            uint64_t v74 = v73 * (v13 - 1);
            uint64_t v208 = v73;
            uint64_t v75 = v13 * v73;
            uint64_t v201 = v72;
            while (1)
            {
              uint64_t v226 = v74;
              uint64_t v77 = 0;
              uint64_t v78 = v202;
              uint64_t v213 = v13;
              uint64_t v209 = v75;
              while (1)
              {
                uint64_t v217 = v78;
                v224 = (char *)&v197;
                v216 = (void (*)(void))(v75 + v77);
                uint64_t v79 = v218;
                MEMORY[0x270FA5388](isUniquelyReferenced_nonNull_native);
                unint64_t v80 = (v79 + 15) & 0xFFFFFFFFFFFFFFF0;
                unint64_t v81 = v207;
                uint64_t v82 = ((uint64_t (*)(char *))v207)((char *)&v197 - v80);
                v222 = &v197;
                uint64_t v223 = v77;
                v215 = (void (*)(char *, uint64_t))(v226 + v77);
                MEMORY[0x270FA5388](v82);
                v232 = (uint64_t *)((char *)&v197 - v80);
                v81();
                uint64_t v83 = sub_251F34D20();
                v221 = &v197;
                uint64_t v219 = v83;
                uint64_t v84 = *(void *)(v83 - 8);
                uint64_t v85 = *(void *)(v84 + 64);
                MEMORY[0x270FA5388](v83);
                uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
                uint64_t v87 = *(void *)(*(void *)(v86 - 8) + 64);
                MEMORY[0x270FA5388](v86 - 8);
                uint64_t v88 = *(void *)(a2 + 16);
                v228 = (uint64_t *)((char *)&v197 - v80);
                v220 = (char *)&v197 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
                if (!v88 || (unint64_t v89 = sub_2519FE584((uint64_t)&v197 - v80), (v90 & 1) == 0))
                {
                  uint64_t v94 = v219;
                  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v84 + 56))((char *)&v197 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v219);
LABEL_64:
                  sub_251F34CB0();
                  uint64_t v95 = sub_251A1B064((uint64_t)&v197 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_26B21EC20);
                  goto LABEL_65;
                }
                sub_251A1A4EC(*(void *)(a2 + 56) + 40 * v89, (uint64_t)&v229);
                v206 = &v197;
                uint64_t v91 = v230;
                uint64_t v92 = v231;
                __swift_project_boxed_opaque_existential_1(&v229, v230);
                uint64_t v93 = v91;
                a2 = v214;
                (*(void (**)(uint64_t, uint64_t))(v92 + 64))(v93, v92);
                __swift_destroy_boxed_opaque_existential_0((uint64_t)&v229);
                uint64_t v94 = v219;
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))((char *)&v197 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v219) == 1)goto LABEL_64; {
                uint64_t v95 = (*(uint64_t (**)(char *, char *, uint64_t))(v84 + 32))((char *)&v197 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0), (char *)&v197 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0), v94);
                }
                uint64_t v96 = v223;
                uint64_t v223 = (uint64_t)&v197;
                uint64_t v97 = MEMORY[0x270FA5388](v95);
                uint64_t v98 = (char *)&v197 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
                MEMORY[0x270FA5388](v97);
                uint64_t v99 = (char *)&v197 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0);
                unint64_t v100 = (unint64_t)v228;
                if (!*(void *)(a2 + 16)) {
                  goto LABEL_69;
                }
LABEL_65:
                unint64_t v101 = sub_2519FE584((uint64_t)v232);
                if (v102)
                {
                  sub_251A1A4EC(*(void *)(a2 + 56) + 40 * v101, (uint64_t)&v229);
                  uint64_t v103 = v230;
                  uint64_t v104 = v231;
                  __swift_project_boxed_opaque_existential_1(&v229, v230);
                  char v105 = *(void (**)(uint64_t, uint64_t))(v104 + 64);
                  uint64_t v106 = v103;
                  unint64_t v100 = (unint64_t)v228;
                  uint64_t v107 = v104;
                  a2 = v214;
                  v105(v106, v107);
                  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v229);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v99, 1, v94) != 1)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v98, v99, v94);
                    goto LABEL_71;
                  }
                }
                else
                {
LABEL_69:
                  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v84 + 56))(v99, 1, 1, v94);
                }
                sub_251F34CB0();
                sub_251A1B064((uint64_t)v99, &qword_26B21EC20);
LABEL_71:
                uint64_t v108 = v220;
                char v109 = sub_251F34C90();
                BOOL v110 = *(void (**)(char *, uint64_t))(v84 + 8);
                v110(v98, v94);
                v110(v108, v94);
                uint64_t v111 = *v211;
                uint64_t v112 = v212;
                (*v211)((char *)v232, v212);
                uint64_t isUniquelyReferenced_nonNull_native = ((uint64_t (*)(unint64_t, uint64_t))v111)(v100, v112);
                if ((v109 & 1) == 0) {
                  break;
                }
                uint64_t v113 = *v227;
                uint64_t v75 = v209;
                if (!*v227) {
                  goto LABEL_176;
                }
                uint64_t v114 = v113 + v209 + v96;
                uint64_t v115 = v113 + v226 + v96;
                MEMORY[0x270FA5388](isUniquelyReferenced_nonNull_native);
                uint64_t v117 = (char *)&v197 - ((v116 + 15) & 0xFFFFFFFFFFFFFFF0);
                uint64_t v118 = (uint64_t (*)(uint64_t, char *, uint64_t))*v225;
                ((void (*)(char *, uint64_t, uint64_t))*v225)(v117, v114, v112);
                swift_arrayInitWithTakeFrontToBack();
                uint64_t isUniquelyReferenced_nonNull_native = v118(v115, v117, v112);
                uint64_t v77 = v96 - v208;
                uint64_t v78 = v217 + 1;
                uint64_t v76 = v213;
                a2 = v214;
                if (v213 == v217 + 1) {
                  goto LABEL_56;
                }
              }
              uint64_t v76 = v213;
              uint64_t v75 = v209;
LABEL_56:
              uint64_t v13 = v76 + 1;
              uint64_t v74 = v226 + v208;
              v75 += v208;
              if (v13 == v201)
              {
                uint64_t v13 = v201;
                uint64_t v7 = v200;
                unint64_t v71 = v204;
                uint64_t v12 = v202;
                if (v201 < v202) {
                  goto LABEL_170;
                }
LABEL_76:
                uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v213 = v13;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_251ECD5C4(0, *((void *)v7 + 2) + 1, 1, v7);
                  uint64_t v7 = (char *)isUniquelyReferenced_nonNull_native;
                }
                unint64_t v120 = *((void *)v7 + 2);
                unint64_t v119 = *((void *)v7 + 3);
                unint64_t v121 = v120 + 1;
                if (v120 >= v119 >> 1)
                {
                  uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_251ECD5C4((char *)(v119 > 1), v120 + 1, 1, v7);
                  uint64_t v122 = v71;
                  uint64_t v7 = (char *)isUniquelyReferenced_nonNull_native;
                }
                else
                {
                  uint64_t v122 = v71;
                }
                *((void *)v7 + 2) = v121;
                uint64_t v123 = v7 + 32;
                uint64_t v124 = &v7[16 * v120 + 32];
                uint64_t v125 = v213;
                *(void *)uint64_t v124 = v12;
                *((void *)v124 + 1) = v125;
                if (v120)
                {
                  while (2)
                  {
                    unint64_t v126 = v121 - 1;
                    if (v121 >= 4)
                    {
                      unint64_t v131 = &v123[16 * v121];
                      uint64_t v132 = *((void *)v131 - 8);
                      uint64_t v133 = *((void *)v131 - 7);
                      BOOL v137 = __OFSUB__(v133, v132);
                      uint64_t v134 = v133 - v132;
                      if (v137) {
                        goto LABEL_155;
                      }
                      uint64_t v136 = *((void *)v131 - 6);
                      uint64_t v135 = *((void *)v131 - 5);
                      BOOL v137 = __OFSUB__(v135, v136);
                      uint64_t v129 = v135 - v136;
                      char v130 = v137;
                      if (v137) {
                        goto LABEL_156;
                      }
                      unint64_t v138 = v121 - 2;
                      uint64_t v139 = &v123[16 * v121 - 32];
                      uint64_t v141 = *(void *)v139;
                      uint64_t v140 = *((void *)v139 + 1);
                      BOOL v137 = __OFSUB__(v140, v141);
                      uint64_t v142 = v140 - v141;
                      if (v137) {
                        goto LABEL_158;
                      }
                      BOOL v137 = __OFADD__(v129, v142);
                      uint64_t v143 = v129 + v142;
                      if (v137) {
                        goto LABEL_161;
                      }
                      if (v143 >= v134)
                      {
                        uint64_t v161 = &v123[16 * v126];
                        uint64_t v163 = *(void *)v161;
                        uint64_t v162 = *((void *)v161 + 1);
                        BOOL v137 = __OFSUB__(v162, v163);
                        uint64_t v164 = v162 - v163;
                        if (v137) {
                          goto LABEL_165;
                        }
                        BOOL v154 = v129 < v164;
                      }
                      else
                      {
LABEL_94:
                        if (v130) {
                          goto LABEL_157;
                        }
                        unint64_t v138 = v121 - 2;
                        unint64_t v144 = &v123[16 * v121 - 32];
                        uint64_t v146 = *(void *)v144;
                        uint64_t v145 = *((void *)v144 + 1);
                        BOOL v147 = __OFSUB__(v145, v146);
                        uint64_t v148 = v145 - v146;
                        char v149 = v147;
                        if (v147) {
                          goto LABEL_160;
                        }
                        unint64_t v150 = &v123[16 * v126];
                        uint64_t v152 = *(void *)v150;
                        uint64_t v151 = *((void *)v150 + 1);
                        BOOL v137 = __OFSUB__(v151, v152);
                        uint64_t v153 = v151 - v152;
                        if (v137) {
                          goto LABEL_163;
                        }
                        if (__OFADD__(v148, v153)) {
                          goto LABEL_164;
                        }
                        if (v148 + v153 < v129) {
                          goto LABEL_106;
                        }
                        BOOL v154 = v129 < v153;
                      }
                      if (v154) {
                        unint64_t v126 = v138;
                      }
                    }
                    else
                    {
                      if (v121 == 3)
                      {
                        uint64_t v128 = *((void *)v7 + 4);
                        uint64_t v127 = *((void *)v7 + 5);
                        BOOL v137 = __OFSUB__(v127, v128);
                        uint64_t v129 = v127 - v128;
                        char v130 = v137;
                        goto LABEL_94;
                      }
                      uint64_t v155 = *((void *)v7 + 4);
                      uint64_t v156 = *((void *)v7 + 5);
                      BOOL v137 = __OFSUB__(v156, v155);
                      uint64_t v148 = v156 - v155;
                      char v149 = v137;
LABEL_106:
                      if (v149) {
                        goto LABEL_159;
                      }
                      uint64_t v157 = &v123[16 * v126];
                      uint64_t v159 = *(void *)v157;
                      uint64_t v158 = *((void *)v157 + 1);
                      BOOL v137 = __OFSUB__(v158, v159);
                      uint64_t v160 = v158 - v159;
                      if (v137) {
                        goto LABEL_162;
                      }
                      if (v160 < v148) {
                        goto LABEL_123;
                      }
                    }
                    unint64_t v165 = v126 - 1;
                    if (v126 - 1 >= v121)
                    {
                      __break(1u);
LABEL_152:
                      __break(1u);
LABEL_153:
                      __break(1u);
LABEL_154:
                      __break(1u);
LABEL_155:
                      __break(1u);
LABEL_156:
                      __break(1u);
LABEL_157:
                      __break(1u);
LABEL_158:
                      __break(1u);
LABEL_159:
                      __break(1u);
LABEL_160:
                      __break(1u);
LABEL_161:
                      __break(1u);
LABEL_162:
                      __break(1u);
LABEL_163:
                      __break(1u);
LABEL_164:
                      __break(1u);
LABEL_165:
                      __break(1u);
LABEL_166:
                      __break(1u);
LABEL_167:
                      __break(1u);
LABEL_168:
                      __break(1u);
LABEL_169:
                      __break(1u);
LABEL_170:
                      __break(1u);
LABEL_171:
                      __break(1u);
LABEL_172:
                      __break(1u);
LABEL_173:
                      __break(1u);
                      goto LABEL_174;
                    }
                    uint64_t v166 = *v227;
                    if (!*v227) {
                      goto LABEL_177;
                    }
                    unint64_t v167 = v7;
                    unint64_t v168 = &v123[16 * v165];
                    uint64_t v169 = *(void *)v168;
                    uint64_t v170 = v123;
                    unint64_t v171 = v126;
                    uint64_t v172 = &v123[16 * v126];
                    uint64_t v173 = *((void *)v172 + 1);
                    uint64_t v174 = v122[9];
                    unint64_t v175 = v166 + v174 * *(void *)v168;
                    v232 = (uint64_t *)(v166 + v174 * *(void *)v172);
                    v228 = (uint64_t *)(v166 + v174 * v173);
                    uint64_t v176 = v214;
                    swift_bridgeObjectRetain();
                    unint64_t v177 = v175;
                    uint64_t v178 = v205;
                    sub_251F05E90(v177, (unint64_t)v232, (unint64_t)v228, v203, v176, (uint64_t (*)(char *, char *, uint64_t))sub_251F0574C);
                    if (v178)
                    {
LABEL_132:
                      swift_bridgeObjectRelease();
                      goto LABEL_133;
                    }
                    if (v173 < v169) {
                      goto LABEL_152;
                    }
                    if (v171 > *((void *)v167 + 2)) {
                      goto LABEL_153;
                    }
                    unint64_t v179 = v171;
                    *(void *)unint64_t v168 = v169;
                    *(void *)&v170[16 * v165 + 8] = v173;
                    unint64_t v180 = *((void *)v167 + 2);
                    if (v179 >= v180) {
                      goto LABEL_154;
                    }
                    uint64_t v123 = v170;
                    uint64_t v7 = v167;
                    uint64_t v205 = 0;
                    unint64_t v121 = v180 - 1;
                    uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)memmove(v172, v172 + 16, 16 * (v180 - 1 - v179));
                    *((void *)v167 + 2) = v180 - 1;
                    a2 = v214;
                    uint64_t v122 = v204;
                    if (v180 <= 2) {
                      goto LABEL_123;
                    }
                    continue;
                  }
                }
                unint64_t v121 = 1;
LABEL_123:
                uint64_t v4 = v227[1];
                uint64_t v12 = v213;
                uint64_t v8 = v199;
                if (v213 >= v4)
                {
LABEL_135:
                  if (v121 >= 2)
                  {
                    uint64_t v182 = *v227;
                    v232 = (uint64_t *)*v227;
                    do
                    {
                      unint64_t v183 = v121 - 2;
                      if (v121 < 2) {
                        goto LABEL_166;
                      }
                      if (!v182) {
                        goto LABEL_179;
                      }
                      uint64_t v184 = (uint64_t)v7;
                      uint64_t v185 = *(void *)&v7[16 * v183 + 32];
                      uint64_t v186 = *(void *)&v7[16 * v121 + 24];
                      uint64_t v187 = v204[9];
                      unint64_t v188 = v182 + v187 * v185;
                      unint64_t v189 = v182 + v187 * *(void *)&v7[16 * v121 + 16];
                      unint64_t v190 = v182 + v187 * v186;
                      uint64_t v191 = v214;
                      swift_bridgeObjectRetain();
                      unint64_t v192 = v188;
                      uint64_t v193 = v205;
                      sub_251F05E90(v192, v189, v190, v203, v191, (uint64_t (*)(char *, char *, uint64_t))sub_251F0574C);
                      uint64_t v205 = v193;
                      if (v193) {
                        goto LABEL_132;
                      }
                      if (v186 < v185) {
                        goto LABEL_167;
                      }
                      uint64_t v7 = (char *)v184;
                      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                        uint64_t v7 = sub_251ECDC38(v184);
                      }
                      if (v183 >= *((void *)v7 + 2)) {
                        goto LABEL_168;
                      }
                      uint64_t v194 = &v7[16 * v183 + 32];
                      *(void *)uint64_t v194 = v185;
                      *((void *)v194 + 1) = v186;
                      unint64_t v195 = *((void *)v7 + 2);
                      if (v121 > v195) {
                        goto LABEL_169;
                      }
                      memmove(&v7[16 * v121 + 16], &v7[16 * v121 + 32], 16 * (v195 - v121));
                      *((void *)v7 + 2) = v195 - 1;
                      unint64_t v121 = v195 - 1;
                      uint64_t v8 = v199;
                      uint64_t v182 = (uint64_t)v232;
                    }
                    while (v195 > 2);
                  }
                  swift_bridgeObjectRelease();
                  *(void *)(v8 + 16) = 0;
                  swift_bridgeObjectRelease_n();
                  return swift_bridgeObjectRelease();
                }
                goto LABEL_10;
              }
            }
          }
        }
        if (v13 < v12) {
          goto LABEL_170;
        }
        goto LABEL_76;
      }
      uint64_t v13 = v213 + 1;
      uint64_t v25 = (void (*)(void))((char *)v25 + v226);
      if (v4 == v213 + 1)
      {
        uint64_t v13 = v4;
        uint64_t v7 = v200;
        goto LABEL_30;
      }
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))((char *)&v197 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v31);
LABEL_19:
    sub_251F34CB0();
    uint64_t v45 = sub_251A1B064((uint64_t)&v197 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_26B21EC20);
    goto LABEL_20;
  }
  if (v4 < 0) {
    goto LABEL_171;
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_251F09190(0, v4, 1, v227, a2);
  }
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_251F0AE50(void **a1, uint64_t a2)
{
  return sub_251F0C360(a1, a2, (void (*)(void *, uint64_t))sub_251F09878);
}

uint64_t sub_251F0AE7C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v40 = a5;
  uint64_t v47 = a4;
  uint64_t v34 = a2;
  if (a3 != a2)
  {
    uint64_t v7 = a3;
    uint64_t v8 = result;
    uint64_t result = sub_251F34DA0();
    uint64_t v9 = result;
    size_t v10 = *(void **)(result - 8);
    uint64_t v11 = (void (*)(void))v10[2];
    uint64_t v37 = v10 + 2;
    unint64_t v38 = (void (*)(char *))v11;
    uint64_t v12 = v10[9];
    uint64_t v44 = v10[8];
    uint64_t v35 = v12;
    uint64_t v36 = (void (**)(char *, uint64_t))(v10 + 1);
    uint64_t v41 = (uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 4);
    uint64_t v48 = v12 * v7;
    uint64_t v49 = v12 * (v7 - 1);
    uint64_t v33 = v8;
    while (2)
    {
      uint64_t v13 = 0;
      uint64_t v39 = v7;
      while (1)
      {
        uint64_t v50 = v6;
        uint64_t v46 = &v32;
        uint64_t v42 = v48 + v13;
        uint64_t v43 = v8;
        uint64_t v15 = v44;
        MEMORY[0x270FA5388](result);
        unint64_t v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF0;
        uint64_t v17 = (char *)&v32 - v16;
        uint64_t v18 = v38;
        uint64_t v19 = ((uint64_t (*)(char *))v38)((char *)&v32 - v16);
        uint64_t v45 = &v32;
        MEMORY[0x270FA5388](v19);
        uint64_t v20 = (char *)&v32 - v16;
        v18((char *)&v32 - v16);
        uint64_t v21 = v50;
        char v22 = sub_251F05B08((uint64_t)&v32 - v16, (uint64_t)&v32 - v16, v40);
        uint64_t v50 = v21;
        if (v21)
        {
          uint64_t v31 = *v36;
          (*v36)((char *)&v32 - v16, v9);
          return ((uint64_t (*)(char *, uint64_t))v31)((char *)&v32 - v16, v9);
        }
        char v23 = v22;
        uint64_t v24 = *v36;
        (*v36)(v20, v9);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v24)(v17, v9);
        if ((v23 & 1) == 0) {
          break;
        }
        uint64_t v25 = *v47;
        if (!*v47)
        {
          __break(1u);
          return result;
        }
        uint64_t v26 = v25 + v48 + v13;
        unint64_t v27 = (char *)(v25 + v49 + v13);
        MEMORY[0x270FA5388](result);
        uint64_t v29 = (char *)&v32 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
        char v30 = *v41;
        (*v41)(v29, v26, v9);
        swift_arrayInitWithTakeFrontToBack();
        uint64_t result = v30(v27, (uint64_t)v29, v9);
        v13 -= v35;
        uint64_t v8 = v43 + 1;
        uint64_t v14 = v39;
        uint64_t v6 = v50;
        if (v39 == v43 + 1) {
          goto LABEL_10;
        }
      }
      uint64_t v6 = v50;
      uint64_t v14 = v39;
LABEL_10:
      uint64_t v7 = v14 + 1;
      v49 += v35;
      v48 += v35;
      uint64_t v8 = v33;
      if (v7 != v34) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_251F0B1C8(uint64_t *a1, uint64_t a2)
{
  v206 = a1;
  uint64_t v4 = a1[1];
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_251F36AA0();
  uint64_t v205 = v4;
  if (v5 >= v4)
  {
    if (v205 < 0) {
      goto LABEL_179;
    }
    if (v205)
    {
      swift_bridgeObjectRetain();
      sub_251F0AE7C(0, v205, 1, v206, a2);
    }
    return swift_bridgeObjectRelease_n();
  }
  uint64_t v184 = v5;
  if (v205 >= 0) {
    uint64_t v6 = v205;
  }
  else {
    uint64_t v6 = v205 + 1;
  }
  if (v205 < -1) {
    goto LABEL_188;
  }
  uint64_t v7 = (char *)MEMORY[0x263F8EE78];
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (v205 > 1)
  {
    uint64_t v9 = v6 >> 1;
    sub_251F34DA0();
    uint64_t v8 = sub_251F35B50();
    *(void *)(v8 + 16) = v9;
  }
  uint64_t v191 = v2;
  uint64_t isUniquelyReferenced_nonNull_native = sub_251F34DA0();
  uint64_t v11 = *(void *)(isUniquelyReferenced_nonNull_native - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v185 = v8;
  unint64_t v189 = v8 + v12;
  uint64_t v210 = a2;
  uint64_t v190 = v11;
  if (v205 < 1)
  {
    unint64_t v108 = *((void *)v7 + 2);
LABEL_139:
    if (v108 >= 2)
    {
      unint64_t v167 = (uint64_t *)*v206;
      v206 = (uint64_t *)*v206;
      do
      {
        unint64_t v168 = v108 - 2;
        if (v108 < 2) {
          goto LABEL_173;
        }
        if (!v167) {
          goto LABEL_186;
        }
        uint64_t v169 = (uint64_t)v7;
        uint64_t v170 = *(void *)&v7[16 * v168 + 32];
        uint64_t v171 = *(void *)&v7[16 * v108 + 24];
        uint64_t v172 = *(void *)(v11 + 72);
        uint64_t v173 = (char *)v167 + v172 * v170;
        unint64_t v174 = (unint64_t)v167 + v172 * *(void *)&v7[16 * v108 + 16];
        unint64_t v175 = (unint64_t)v167 + v172 * v171;
        uint64_t v176 = v210;
        swift_bridgeObjectRetain();
        unint64_t v177 = (unint64_t)v173;
        uint64_t v178 = v191;
        sub_251F05E90(v177, v174, v175, v189, v176, (uint64_t (*)(char *, char *, uint64_t))sub_251F05B08);
        uint64_t v191 = v178;
        if (v178) {
          goto LABEL_155;
        }
        if (v171 < v170) {
          goto LABEL_174;
        }
        uint64_t v7 = (char *)v169;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v7 = sub_251ECDC38(v169);
        }
        if (v168 >= *((void *)v7 + 2)) {
          goto LABEL_175;
        }
        unint64_t v179 = &v7[16 * v168 + 32];
        *(void *)unint64_t v179 = v170;
        *((void *)v179 + 1) = v171;
        unint64_t v180 = *((void *)v7 + 2);
        if (v108 > v180) {
          goto LABEL_176;
        }
        memmove(&v7[16 * v108 + 16], &v7[16 * v108 + 32], 16 * (v180 - v108));
        *((void *)v7 + 2) = v180 - 1;
        unint64_t v108 = v180 - 1;
        uint64_t v11 = v190;
        unint64_t v167 = v206;
      }
      while (v180 > 2);
    }
    swift_bridgeObjectRelease();
    *(void *)(v185 + 16) = 0;
LABEL_157:
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease();
  }
  uint64_t v13 = isUniquelyReferenced_nonNull_native;
  uint64_t v14 = 0;
  uint64_t v194 = v11 + 16;
  unint64_t v195 = (void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v202 = (unint64_t *)(v11 + 32);
  uint64_t v198 = isUniquelyReferenced_nonNull_native;
  while (1)
  {
    uint64_t v15 = v14++;
    uint64_t v188 = v15;
    if (v14 >= v205) {
      goto LABEL_35;
    }
    uint64_t v186 = v7;
    unint64_t v203 = &v183;
    uint64_t v16 = *v206;
    uint64_t v18 = *(void *)(v11 + 64);
    unint64_t v17 = *(void *)(v11 + 72);
    uint64_t v193 = v14;
    MEMORY[0x270FA5388](isUniquelyReferenced_nonNull_native);
    unint64_t v200 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v19 = (char *)&v183 - v200;
    uint64_t v21 = *(uint64_t (**)(char *))(v20 + 16);
    uint64_t v22 = v21((char *)&v183 - v200);
    uint64_t v197 = &v183;
    uint64_t v187 = v16;
    uint64_t v204 = v17;
    uint64_t v201 = v18;
    MEMORY[0x270FA5388](v22);
    char v23 = (char *)&v183 - v200;
    uint64_t v199 = (void (*)(void))v21;
    v21((char *)&v183 - v200);
    uint64_t v24 = v191;
    LODWORD(v200) = sub_251F05B08((uint64_t)v19, (uint64_t)v23, v210);
    uint64_t v191 = v24;
    if (v24)
    {
      uint64_t v182 = *v195;
      (*v195)(v23, v13);
      v182(v19, v13);
      swift_bridgeObjectRelease();
      goto LABEL_156;
    }
    uint64_t v25 = (char *)*v195;
    (*v195)(v23, v13);
    v196 = v25;
    uint64_t isUniquelyReferenced_nonNull_native = ((uint64_t (*)(char *, uint64_t))v25)(v19, v13);
    uint64_t v14 = v15 + 2;
    if (v15 + 2 >= v205) {
      goto LABEL_21;
    }
    v193 *= v204;
    uint64_t v26 = v187;
    unint64_t v192 = v204 * v14;
    uint64_t v27 = v210;
    while (1)
    {
      uint64_t v197 = (uint64_t *)v14;
      unint64_t v203 = &v183;
      uint64_t v28 = v201;
      MEMORY[0x270FA5388](isUniquelyReferenced_nonNull_native);
      unint64_t v29 = (v28 + 15) & 0xFFFFFFFFFFFFFFF0;
      char v30 = (char *)&v183 - v29;
      uint64_t v31 = v27;
      uint64_t v32 = (void (*)(char *))v199;
      uint64_t v33 = ((uint64_t (*)(char *))v199)((char *)&v183 - v29);
      MEMORY[0x270FA5388](v33);
      v32((char *)&v183 - v29);
      uint64_t v34 = v191;
      int v35 = sub_251F05B08((uint64_t)&v183 - v29, (uint64_t)&v183 - v29, v31);
      uint64_t v191 = v34;
      if (v34)
      {
        uint64_t v181 = (void (*)(char *, uint64_t))v196;
        ((void (*)(char *, uint64_t))v196)((char *)&v183 - v29, v13);
        v181(v30, v13);
        swift_bridgeObjectRelease();
LABEL_156:
        *(void *)(v185 + 16) = 0;
        goto LABEL_157;
      }
      int v36 = v35;
      uint64_t v37 = (uint64_t (*)(char *, uint64_t))v196;
      ((void (*)(char *, uint64_t))v196)((char *)&v183 - v29, v13);
      uint64_t isUniquelyReferenced_nonNull_native = v37(v30, v13);
      if ((v200 ^ v36)) {
        break;
      }
      uint64_t v13 = v198;
      uint64_t v14 = (uint64_t)v197 + 1;
      v26 += v204;
      uint64_t v27 = v210;
      if ((uint64_t *)v205 == (uint64_t *)((char *)v197 + 1))
      {
        uint64_t v14 = v205;
        goto LABEL_20;
      }
    }
    uint64_t v14 = (uint64_t)v197;
    uint64_t v13 = v198;
LABEL_20:
    uint64_t v15 = v188;
LABEL_21:
    uint64_t v7 = v186;
    uint64_t v11 = v190;
    if (v200) {
      break;
    }
LABEL_35:
    if (v14 >= v205) {
      goto LABEL_82;
    }
    if (__OFSUB__(v14, v15)) {
      goto LABEL_180;
    }
    if (v14 - v15 >= v184) {
      goto LABEL_82;
    }
    if (__OFADD__(v15, v184)) {
      goto LABEL_181;
    }
    uint64_t v49 = v205;
    if (v15 + v184 < v205) {
      uint64_t v49 = v15 + v184;
    }
    if (v49 < v15)
    {
LABEL_182:
      __break(1u);
      goto LABEL_183;
    }
    if (v14 == v49) {
      goto LABEL_82;
    }
    uint64_t v186 = v7;
    uint64_t v50 = *(void *)(v11 + 72);
    uint64_t v201 = *(void *)(v11 + 64);
    unint64_t v192 = *(void *)(v11 + 16);
    uint64_t v193 = v50;
    uint64_t v205 = v50 * (v14 - 1);
    uint64_t v51 = v14 * v50;
    uint64_t v187 = v49;
    while (2)
    {
      uint64_t v56 = 0;
      uint64_t v57 = (uint64_t *)v15;
      v196 = (char *)v51;
      uint64_t v197 = (uint64_t *)v14;
      while (1)
      {
        uint64_t v204 = (uint64_t)&v183;
        unint64_t v200 = v51 + v56;
        uint64_t v58 = v201;
        MEMORY[0x270FA5388](isUniquelyReferenced_nonNull_native);
        unint64_t v59 = (v58 + 15) & 0xFFFFFFFFFFFFFFF0;
        uint64_t v60 = (char *)&v183 - v59;
        uint64_t v61 = (void (*)(char *))v192;
        uint64_t v62 = ((uint64_t (*)(char *))v192)((char *)&v183 - v59);
        unint64_t v203 = &v183;
        uint64_t v199 = (void (*)(void))(v205 + v56);
        MEMORY[0x270FA5388](v62);
        uint64_t v63 = (char *)&v183 - v59;
        v61((char *)&v183 - v59);
        uint64_t v64 = v210;
        if (!*(void *)(v210 + 16)) {
          goto LABEL_77;
        }
        unint64_t v65 = sub_2519FE584((uint64_t)&v183 - v59);
        if (v66)
        {
          sub_251A1A4EC(*(void *)(v64 + 56) + 40 * v65, (uint64_t)v207);
          uint64_t v67 = v208;
          uint64_t v68 = v209;
          __swift_project_boxed_opaque_existential_1(v207, v208);
          uint64_t v69 = (*(uint64_t (**)(uint64_t, uint64_t))(v68 + 56))(v67, v68);
          uint64_t v71 = v70;
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v207);
          if (!*(void *)(v64 + 16)) {
            break;
          }
        }
        else
        {
          uint64_t v69 = 0;
          uint64_t v71 = 0;
          if (!*(void *)(v64 + 16)) {
            break;
          }
        }
        unint64_t v72 = sub_2519FE584((uint64_t)v63);
        if ((v73 & 1) == 0) {
          break;
        }
        sub_251A1A4EC(*(void *)(v64 + 56) + 40 * v72, (uint64_t)v207);
        uint64_t v74 = v208;
        uint64_t v75 = v209;
        __swift_project_boxed_opaque_existential_1(v207, v208);
        uint64_t v76 = (*(uint64_t (**)(uint64_t, uint64_t))(v75 + 56))(v74, v75);
        uint64_t v78 = v77;
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v207);
        if (v71) {
          goto LABEL_59;
        }
LABEL_56:
        uint64_t v79 = v210;
        if (v78) {
          goto LABEL_64;
        }
LABEL_77:
        char v94 = MEMORY[0x2533A9CA0](v60, v63);
LABEL_78:
        uint64_t v96 = *v195;
        uint64_t v97 = v198;
        (*v195)(v63, v198);
        uint64_t v98 = v60;
        uint64_t v13 = v97;
        uint64_t isUniquelyReferenced_nonNull_native = ((uint64_t (*)(char *, uint64_t))v96)(v98, v97);
        if ((v94 & 1) == 0) {
          goto LABEL_45;
        }
        uint64_t v99 = *v206;
        if (!*v206) {
          goto LABEL_184;
        }
        uint64_t v51 = (uint64_t)v196;
        unint64_t v100 = &v196[v99 + v56];
        uint64_t v101 = v99 + v205 + v56;
        MEMORY[0x270FA5388](isUniquelyReferenced_nonNull_native);
        uint64_t v103 = (char *)&v183 - ((v102 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v104 = (uint64_t (*)(uint64_t, char *, uint64_t))*v202;
        ((void (*)(char *, char *, uint64_t))*v202)(v103, v100, v97);
        swift_arrayInitWithTakeFrontToBack();
        uint64_t isUniquelyReferenced_nonNull_native = v104(v101, v103, v97);
        v56 -= v193;
        uint64_t v57 = (uint64_t *)((char *)v57 + 1);
        int v55 = v197;
        if (v197 == v57) {
          goto LABEL_46;
        }
      }
      uint64_t v76 = 0;
      uint64_t v78 = 0;
      if (!v71) {
        goto LABEL_56;
      }
LABEL_59:
      if (v78)
      {
        if (v69 == v76 && v71 == v78)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          char v95 = sub_251F36B10();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v79 = v210;
          if ((v95 & 1) == 0) {
            goto LABEL_65;
          }
        }
        goto LABEL_77;
      }
      uint64_t v79 = v210;
LABEL_64:
      swift_bridgeObjectRelease();
LABEL_65:
      if (*(void *)(v79 + 16) && (unint64_t v80 = sub_2519FE584((uint64_t)v60), (v81 & 1) != 0))
      {
        sub_251A1A4EC(*(void *)(v79 + 56) + 40 * v80, (uint64_t)v207);
        uint64_t v82 = v208;
        uint64_t v83 = v209;
        __swift_project_boxed_opaque_existential_1(v207, v208);
        uint64_t v84 = (*(uint64_t (**)(uint64_t, uint64_t))(v83 + 56))(v82, v83);
        unint64_t v86 = v85;
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v207);
        if (!*(void *)(v79 + 16))
        {
LABEL_73:
          unint64_t v93 = 0xE000000000000000;
          if (!v84) {
            goto LABEL_74;
          }
LABEL_75:
          char v94 = sub_251F36B10();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_78;
        }
      }
      else
      {
        uint64_t v84 = 0;
        unint64_t v86 = 0xE000000000000000;
        if (!*(void *)(v79 + 16)) {
          goto LABEL_73;
        }
      }
      unint64_t v87 = sub_2519FE584((uint64_t)v63);
      if ((v88 & 1) == 0) {
        goto LABEL_73;
      }
      sub_251A1A4EC(*(void *)(v79 + 56) + 40 * v87, (uint64_t)v207);
      uint64_t v90 = v208;
      uint64_t v89 = v209;
      __swift_project_boxed_opaque_existential_1(v207, v208);
      uint64_t v91 = (*(uint64_t (**)(uint64_t, uint64_t))(v89 + 56))(v90, v89);
      unint64_t v93 = v92;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v207);
      if (v84 != v91) {
        goto LABEL_75;
      }
LABEL_74:
      if (v86 != v93) {
        goto LABEL_75;
      }
      swift_bridgeObjectRelease_n();
      uint64_t v52 = *v195;
      uint64_t v53 = v198;
      (*v195)(v63, v198);
      unint64_t v54 = v60;
      uint64_t v13 = v53;
      uint64_t isUniquelyReferenced_nonNull_native = ((uint64_t (*)(char *, uint64_t))v52)(v54, v53);
LABEL_45:
      uint64_t v51 = (uint64_t)v196;
      int v55 = v197;
LABEL_46:
      uint64_t v14 = (uint64_t)v55 + 1;
      v205 += v193;
      v51 += v193;
      uint64_t v15 = v188;
      if (v14 != v187) {
        continue;
      }
      break;
    }
    uint64_t v14 = v187;
    uint64_t v7 = v186;
    uint64_t v11 = v190;
LABEL_82:
    if (v14 < v15) {
      goto LABEL_178;
    }
    uint64_t v105 = v11;
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_251ECD5C4(0, *((void *)v7 + 2) + 1, 1, v7);
      uint64_t v7 = (char *)isUniquelyReferenced_nonNull_native;
    }
    unint64_t v107 = *((void *)v7 + 2);
    unint64_t v106 = *((void *)v7 + 3);
    unint64_t v108 = v107 + 1;
    if (v107 >= v106 >> 1)
    {
      uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_251ECD5C4((char *)(v106 > 1), v107 + 1, 1, v7);
      uint64_t v11 = v105;
      uint64_t v7 = (char *)isUniquelyReferenced_nonNull_native;
    }
    else
    {
      uint64_t v11 = v105;
    }
    *((void *)v7 + 2) = v108;
    unint64_t v203 = (uint64_t *)(v7 + 32);
    char v109 = &v7[16 * v107 + 32];
    *(void *)char v109 = v15;
    *((void *)v109 + 1) = v14;
    if (v107)
    {
      BOOL v110 = v203;
      while (1)
      {
        unint64_t v111 = v108 - 1;
        if (v108 >= 4)
        {
          uint64_t v116 = &v110[2 * v108];
          uint64_t v117 = *(v116 - 8);
          uint64_t v118 = *(v116 - 7);
          BOOL v122 = __OFSUB__(v118, v117);
          uint64_t v119 = v118 - v117;
          if (v122) {
            goto LABEL_163;
          }
          uint64_t v121 = *(v116 - 6);
          uint64_t v120 = *(v116 - 5);
          BOOL v122 = __OFSUB__(v120, v121);
          uint64_t v114 = v120 - v121;
          char v115 = v122;
          if (v122) {
            goto LABEL_164;
          }
          unint64_t v123 = v108 - 2;
          uint64_t v124 = &v110[2 * v108 - 4];
          uint64_t v126 = *v124;
          uint64_t v125 = v124[1];
          BOOL v122 = __OFSUB__(v125, v126);
          uint64_t v127 = v125 - v126;
          if (v122) {
            goto LABEL_166;
          }
          BOOL v122 = __OFADD__(v114, v127);
          uint64_t v128 = v114 + v127;
          if (v122) {
            goto LABEL_169;
          }
          if (v128 >= v119)
          {
            uint64_t v146 = &v110[2 * v111];
            uint64_t v148 = *v146;
            uint64_t v147 = v146[1];
            BOOL v122 = __OFSUB__(v147, v148);
            uint64_t v149 = v147 - v148;
            if (v122) {
              goto LABEL_177;
            }
            BOOL v139 = v114 < v149;
            goto LABEL_120;
          }
        }
        else
        {
          if (v108 != 3)
          {
            uint64_t v140 = *((void *)v7 + 4);
            uint64_t v141 = *((void *)v7 + 5);
            BOOL v122 = __OFSUB__(v141, v140);
            uint64_t v133 = v141 - v140;
            char v134 = v122;
            goto LABEL_114;
          }
          uint64_t v113 = *((void *)v7 + 4);
          uint64_t v112 = *((void *)v7 + 5);
          BOOL v122 = __OFSUB__(v112, v113);
          uint64_t v114 = v112 - v113;
          char v115 = v122;
        }
        if (v115) {
          goto LABEL_165;
        }
        unint64_t v123 = v108 - 2;
        uint64_t v129 = &v110[2 * v108 - 4];
        uint64_t v131 = *v129;
        uint64_t v130 = v129[1];
        BOOL v132 = __OFSUB__(v130, v131);
        uint64_t v133 = v130 - v131;
        char v134 = v132;
        if (v132) {
          goto LABEL_168;
        }
        uint64_t v135 = &v110[2 * v111];
        uint64_t v137 = *v135;
        uint64_t v136 = v135[1];
        BOOL v122 = __OFSUB__(v136, v137);
        uint64_t v138 = v136 - v137;
        if (v122) {
          goto LABEL_171;
        }
        if (__OFADD__(v133, v138)) {
          goto LABEL_172;
        }
        if (v133 + v138 >= v114)
        {
          BOOL v139 = v114 < v138;
LABEL_120:
          if (v139) {
            unint64_t v111 = v123;
          }
          goto LABEL_122;
        }
LABEL_114:
        if (v134) {
          goto LABEL_167;
        }
        uint64_t v142 = &v110[2 * v111];
        uint64_t v144 = *v142;
        uint64_t v143 = v142[1];
        BOOL v122 = __OFSUB__(v143, v144);
        uint64_t v145 = v143 - v144;
        if (v122) {
          goto LABEL_170;
        }
        if (v145 < v133) {
          goto LABEL_131;
        }
LABEL_122:
        unint64_t v150 = v111 - 1;
        if (v111 - 1 >= v108)
        {
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
LABEL_181:
          __break(1u);
          goto LABEL_182;
        }
        uint64_t v151 = *v206;
        if (!*v206) {
          goto LABEL_185;
        }
        uint64_t v152 = v7;
        uint64_t v153 = &v110[2 * v150];
        uint64_t v154 = *v153;
        unint64_t v155 = v111;
        uint64_t v156 = &v110[2 * v111];
        uint64_t v157 = v156[1];
        uint64_t v158 = *(void *)(v11 + 72);
        unint64_t v159 = v151 + v158 * *v153;
        uint64_t v160 = v151 + v158 * *v156;
        uint64_t v204 = v151 + v158 * v157;
        uint64_t v205 = v160;
        uint64_t v161 = v210;
        swift_bridgeObjectRetain();
        unint64_t v162 = v159;
        uint64_t v163 = v191;
        sub_251F05E90(v162, v205, v204, v189, v161, (uint64_t (*)(char *, char *, uint64_t))sub_251F05B08);
        uint64_t v191 = v163;
        if (v163)
        {
LABEL_155:
          swift_bridgeObjectRelease();
          goto LABEL_156;
        }
        if (v157 < v154) {
          goto LABEL_160;
        }
        if (v155 > *((void *)v152 + 2)) {
          goto LABEL_161;
        }
        unint64_t v164 = v155;
        *uint64_t v153 = v154;
        BOOL v110 = v203;
        v203[2 * v150 + 1] = v157;
        unint64_t v165 = *((void *)v152 + 2);
        if (v164 >= v165) {
          goto LABEL_162;
        }
        uint64_t v7 = v152;
        unint64_t v108 = v165 - 1;
        uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)memmove(v156, v156 + 2, 16 * (v165 - 1 - v164));
        *((void *)v152 + 2) = v165 - 1;
        uint64_t v11 = v190;
        uint64_t v13 = v198;
        if (v165 <= 2) {
          goto LABEL_131;
        }
      }
    }
    unint64_t v108 = 1;
LABEL_131:
    uint64_t v205 = v206[1];
    if (v14 >= v205) {
      goto LABEL_139;
    }
  }
  if (v14 >= v15)
  {
    if (v15 < v14)
    {
      uint64_t v38 = v15;
      uint64_t v39 = 0;
      int64_t v40 = v204 * (v14 - 1);
      unint64_t v41 = v14 * v204;
      uint64_t v42 = v38;
      int64_t v43 = v38 * v204;
      uint64_t v197 = (uint64_t *)v14;
      do
      {
        if (v42 != v14 + v39 - 1)
        {
          uint64_t v44 = v187;
          if (!v187) {
            goto LABEL_187;
          }
          unint64_t v203 = &v183;
          unint64_t v45 = v187 + v43;
          uint64_t v46 = v187 + v40;
          MEMORY[0x270FA5388](isUniquelyReferenced_nonNull_native);
          uint64_t v48 = (char *)&v183 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
          unint64_t v200 = *v202;
          ((void (*)(char *, uint64_t, uint64_t))v200)(v48, v44 + v43, v198);
          if (v43 < v40 || v45 >= v44 + v41)
          {
            uint64_t v13 = v198;
            swift_arrayInitWithTakeFrontToBack();
          }
          else
          {
            uint64_t v13 = v198;
            if (v43 != v40) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          uint64_t isUniquelyReferenced_nonNull_native = ((uint64_t (*)(uint64_t, char *, uint64_t))v200)(v46, v48, v13);
          uint64_t v14 = (uint64_t)v197;
        }
        ++v42;
        --v39;
        v40 -= v204;
        v41 -= v204;
        v43 += v204;
      }
      while (v42 < v14 + v39);
      uint64_t v7 = v186;
      uint64_t v11 = v190;
      uint64_t v15 = v188;
    }
    goto LABEL_35;
  }
LABEL_183:
  __break(1u);
LABEL_184:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_185:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_186:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_187:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_188:
  swift_bridgeObjectRelease_n();
  uint64_t result = sub_251F36670();
  __break(1u);
  return result;
}

uint64_t sub_251F0C334(void **a1, uint64_t a2)
{
  return sub_251F0C360(a1, a2, (void (*)(void *, uint64_t))sub_251F0B1C8);
}

uint64_t sub_251F0C360(void **a1, uint64_t a2, void (*a3)(void *, uint64_t))
{
  uint64_t v6 = *a1;
  swift_bridgeObjectRetain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = (void *)sub_251ECDD8C(v6);
  }
  uint64_t v7 = v6[2];
  uint64_t v8 = *(void *)(sub_251F34DA0() - 8);
  v10[0] = (char *)v6 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v10[1] = v7;
  swift_bridgeObjectRetain();
  a3(v10, a2);
  swift_bridgeObjectRelease();
  *a1 = v6;
  return swift_bridgeObjectRelease_n();
}

BOOL sub_251F0C44C(uint64_t a1)
{
  return sub_251F03BD8(a1, *(void (**)(uint64_t))(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_251F0C478(uint64_t a1)
{
  return sub_251F047A0(a1, *(void *)(v1 + 72), *(void (**)(uint64_t))(v1 + 80)) & 1;
}

uint64_t sub_251F0C4B8(uint64_t a1, uint64_t a2)
{
  return sub_251F048C8(a1, a2, *(void *)(v2 + 72), *(void (**)(uint64_t))(v2 + 80), *(void *)(v2 + 88)) & 1;
}

uint64_t sub_251F0C4FC()
{
  return sub_251F0C578() & 1;
}

uint64_t sub_251F0C518(uint64_t a1)
{
  return sub_251F0C5E0(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, void))sub_251F03BD8) & 1;
}

uint64_t sub_251F0C548(uint64_t a1, uint64_t a2)
{
  return sub_251F0C684(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void, void, void))sub_251F04A54) & 1;
}

uint64_t sub_251F0C578()
{
  return sub_251F04EDC() & 1;
}

uint64_t sub_251F0C5B0(uint64_t a1)
{
  return sub_251F0C5E0(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, void))sub_251F04C00) & 1;
}

uint64_t sub_251F0C5E0(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void, void, void))
{
  return a2(a1, v2[9], v2[10], v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8]) & 1;
}

uint64_t sub_251F0C624(uint64_t a1, uint64_t a2)
{
  return sub_251F0C684(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void, void, void))sub_251F04D30) & 1;
}

uint64_t sub_251F0C654(uint64_t a1, uint64_t a2)
{
  return sub_251F0C684(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void, void, void))sub_251F03FD8) & 1;
}

uint64_t sub_251F0C684(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void, void, void, void, void, void, void, void))
{
  return a3(a1, a2, v3[9], v3[10], v3[2], v3[3], v3[4], v3[5], v3[6], v3[7], v3[8]) & 1;
}

uint64_t sub_251F0C6CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5B80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_251F0C734()
{
  id v0 = objc_allocWithZone(MEMORY[0x263EFFA48]);
  uint64_t v1 = (void *)sub_251F356C0();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  qword_269BA5BF0 = (uint64_t)v2;
}

id static CameraClipsInternalPreferences.shared.getter@<X0>(void *a1@<X8>)
{
  if (qword_269B9C528 != -1) {
    swift_once();
  }
  id v2 = (void *)qword_269BA5BF0;
  *a1 = qword_269BA5BF0;
  return v2;
}

id CameraClipsInternalPreferences.showDebugUI.getter()
{
  return sub_251F0C850();
}

id CameraClipsInternalPreferences.overrideDisableScrubberAutoHideTimer.getter()
{
  return sub_251F0C850();
}

id sub_251F0C850()
{
  id v1 = *v0;
  if (*v0)
  {
    id v2 = (void *)sub_251F356C0();
    id v1 = objc_msgSend(v1, sel_BOOLForKey_, v2);
  }
  return v1;
}

void **initializeBufferWithCopyOfBuffer for CameraClipsInternalPreferences(void **a1, void **a2)
{
  uint64_t v3 = *a2;
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void **assignWithCopy for CameraClipsInternalPreferences(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  id v4 = *a2;
  *a1 = *a2;
  id v5 = v4;

  return a1;
}

void **assignWithTake for CameraClipsInternalPreferences(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for CameraClipsInternalPreferences(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CameraClipsInternalPreferences(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CameraClipsInternalPreferences()
{
  return &type metadata for CameraClipsInternalPreferences;
}

uint64_t ClusterPath.endpointID.getter()
{
  return *(unsigned __int16 *)(v0 + 8);
}

uint64_t ClusterPath.init(nodeID:endpointID:clusterKind:)@<X0>(uint64_t result@<X0>, __int16 a2@<W1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v4 = *a3;
  *(void *)a4 = result;
  *(_WORD *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 10) = v4;
  return result;
}

uint64_t MatterTilePath.init(endpointPath:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  __int16 v2 = *(_WORD *)(result + 8);
  *(void *)a2 = *(void *)result;
  *(_WORD *)(a2 + 8) = v2;
  *(unsigned char *)(a2 + 10) = 0;
  return result;
}

uint64_t MatterTilePath.uuid.getter()
{
  uint64_t v1 = *v0;
  __int16 v2 = *((_WORD *)v0 + 4);
  char v3 = *((unsigned char *)v0 + 10);
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = self;
  id v9 = objc_msgSend(v8, sel_hmf_zeroUUID);
  sub_251F34D80();

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B21EBA0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_251F38650;
  uint64_t v23 = v1;
  *(void *)(v10 + 32) = sub_251F36AB0();
  *(void *)(v10 + 40) = v11;
  if ((v3 & 1) == 0)
  {
    v22[3] = v2;
    uint64_t v12 = sub_251F36AB0();
    uint64_t v14 = v13;
    unint64_t v16 = *(void *)(v10 + 16);
    unint64_t v15 = *(void *)(v10 + 24);
    if (v16 >= v15 >> 1) {
      uint64_t v10 = (uint64_t)sub_251F0E8B8((void *)(v15 > 1), v16 + 1, 1, (void *)v10);
    }
    *(void *)(v10 + 16) = v16 + 1;
    uint64_t v17 = v10 + 16 * v16;
    *(void *)(v17 + 32) = v12;
    *(void *)(v17 + 40) = v14;
  }
  uint64_t v18 = (void *)sub_251F34D50();
  uint64_t v19 = (void *)sub_251F35AA0();
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(v8, sel_hmf_UUIDWithNamespace_data_salts_, v18, 0, v19);

  sub_251F34D80();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t MatterTilePath.init(nodeID:endpointID:)@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  *(void *)a3 = result;
  *(_WORD *)(a3 + 8) = a2;
  *(unsigned char *)(a3 + 10) = BYTE2(a2) & 1;
  return result;
}

BOOL static ClusterPath.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 == *(void *)a2
      && *(unsigned __int16 *)(a1 + 8) == *(unsigned __int16 *)(a2 + 8)
      && dword_251F6095C[*(char *)(a1 + 10)] == dword_251F6095C[*(char *)(a2 + 10)];
}

uint64_t EndpointPath.init(nodeID:endpointID:)@<X0>(uint64_t result@<X0>, __int16 a2@<W1>, uint64_t a3@<X8>)
{
  *(void *)a3 = result;
  *(_WORD *)(a3 + 8) = a2;
  return result;
}

uint64_t ClusterPath.init(endpointPath:clusterKind:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  __int16 v3 = *(_WORD *)(result + 8);
  char v4 = *a2;
  *(void *)a3 = *(void *)result;
  *(_WORD *)(a3 + 8) = v3;
  *(unsigned char *)(a3 + 10) = v4;
  return result;
}

BOOL static EndpointPath.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 == *(void *)a2
      && *(unsigned __int16 *)(a1 + 8) == (unint64_t)*(unsigned __int16 *)(a2 + 8);
}

char *EndpointPath.clusterPath(with:)@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  char v3 = *result;
  __int16 v4 = *(_WORD *)(v2 + 8);
  *(void *)a2 = *(void *)v2;
  *(_WORD *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 10) = v3;
  return result;
}

uint64_t EndpointPath.nodeID.getter()
{
  return *(void *)v0;
}

uint64_t EndpointPath.nodeID.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*EndpointPath.nodeID.modify())()
{
  return nullsub_1;
}

uint64_t EndpointPath.endpointID.getter()
{
  return *(unsigned __int16 *)(v0 + 8);
}

uint64_t EndpointPath.endpointID.setter(uint64_t result)
{
  *(_WORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*EndpointPath.endpointID.modify())()
{
  return nullsub_1;
}

uint64_t EndpointPath.description.getter()
{
  return 3829371;
}

uint64_t EndpointPath.hash(into:)()
{
  return sub_251F36CD0();
}

uint64_t sub_251F0CE88()
{
  if (*v0) {
    return 0x746E696F70646E65;
  }
  else {
    return 0x444965646F6ELL;
  }
}

uint64_t sub_251F0CEC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251F129FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251F0CEEC(uint64_t a1)
{
  unint64_t v2 = sub_251F0E9C8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251F0CF28(uint64_t a1)
{
  unint64_t v2 = sub_251F0E9C8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t EndpointPath.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5BF8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v10 = *(unsigned __int16 *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251F0E9C8();
  sub_251F36DA0();
  char v12 = 0;
  sub_251F36A70();
  if (!v2)
  {
    char v11 = 1;
    sub_251F36A50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t EndpointPath.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t EndpointPath.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5C08);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251F0E9C8();
  sub_251F36D90();
  if (!v2)
  {
    char v14 = 0;
    uint64_t v9 = sub_251F368D0();
    char v13 = 1;
    __int16 v10 = sub_251F368B0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)a2 = v9;
    *(_WORD *)(a2 + 8) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

BOOL sub_251F0D2D0(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 == *(void *)a2
      && *(unsigned __int16 *)(a1 + 8) == (unint64_t)*(unsigned __int16 *)(a2 + 8);
}

uint64_t sub_251F0D2F0()
{
  return sub_251F36D00();
}

uint64_t sub_251F0D350()
{
  return sub_251F36CD0();
}

uint64_t sub_251F0D390()
{
  return sub_251F36D00();
}

uint64_t sub_251F0D3EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EndpointPath.init(from:)(a1, a2);
}

uint64_t sub_251F0D404(void *a1)
{
  return EndpointPath.encode(to:)(a1);
}

void ClusterPath.endpointPath.getter(uint64_t a1@<X8>)
{
  __int16 v2 = *(_WORD *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(_WORD *)(a1 + 8) = v2;
}

uint64_t ClusterPath.endpointPath.setter(uint64_t result)
{
  __int16 v2 = *(_WORD *)(result + 8);
  *(void *)uint64_t v1 = *(void *)result;
  *(_WORD *)(v1 + 8) = v2;
  return result;
}

uint64_t (*ClusterPath.endpointPath.modify())()
{
  return nullsub_1;
}

void ClusterPath.clusterKind.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 10);
}

unsigned char *ClusterPath.clusterKind.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 10) = *result;
  return result;
}

uint64_t (*ClusterPath.clusterKind.modify())()
{
  return nullsub_1;
}

uint64_t ClusterPath.uuid.getter()
{
  uint64_t v1 = *v0;
  __int16 v2 = *((_WORD *)v0 + 4);
  uint64_t v3 = *((char *)v0 + 10);
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = self;
  id v9 = objc_msgSend(v8, sel_hmf_zeroUUID);
  sub_251F34D80();

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B21EBA0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_251F3DAB0;
  uint64_t v20 = v1;
  *(void *)(v10 + 32) = sub_251F36AB0();
  *(void *)(v10 + 40) = v11;
  __int16 v19 = v2;
  *(void *)(v10 + 48) = sub_251F36AB0();
  *(void *)(v10 + 56) = v12;
  int v18 = dword_251F6095C[v3];
  *(void *)(v10 + 64) = sub_251F36AB0();
  *(void *)(v10 + 72) = v13;
  char v14 = (void *)sub_251F34D50();
  unint64_t v15 = (void *)sub_251F35AA0();
  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(v8, sel_hmf_UUIDWithNamespace_data_salts_, v14, 0, v15);

  sub_251F34D80();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ClusterPath.description.getter()
{
  return 0;
}

void ClusterPath.init(clusterPath:nodeID:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v6 = objc_msgSend(a1, sel_cluster);
  Swift::UInt32 v7 = objc_msgSend(v6, sel_unsignedIntValue);

  ClusterKind.init(rawValue:)(v7);
  if (v11 == 28)
  {

    a2 = 0;
    int v8 = 1835008;
  }
  else
  {
    id v9 = objc_msgSend(a1, sel_endpoint);
    unsigned int v10 = objc_msgSend(v9, sel_unsignedShortValue);

    int v8 = v10 | (v11 << 16);
  }
  *(void *)a3 = a2;
  *(_WORD *)(a3 + 8) = v8;
  *(unsigned char *)(a3 + 10) = BYTE2(v8);
}

uint64_t ClusterPath.hash(into:)()
{
  return sub_251F36CE0();
}

uint64_t sub_251F0D918()
{
  if (*v0) {
    return 0x4B72657473756C63;
  }
  else {
    return 0x746E696F70646E65;
  }
}

uint64_t sub_251F0D964@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251F128D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251F0D98C(uint64_t a1)
{
  unint64_t v2 = sub_251F0EA1C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251F0D9C8(uint64_t a1)
{
  unint64_t v2 = sub_251F0EA1C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ClusterPath.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5C10);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  __int16 v8 = *((_WORD *)v1 + 4);
  int v13 = *((unsigned __int8 *)v1 + 10);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251F0EA1C();
  sub_251F36DA0();
  v11[2] = v7;
  __int16 v12 = v8;
  char v16 = 0;
  sub_251B725F0();
  uint64_t v9 = v11[1];
  sub_251F36A20();
  if (!v9)
  {
    char v15 = v13;
    char v14 = 1;
    sub_251B72644();
    sub_251F36A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ClusterPath.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t ClusterPath.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5C20);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  __int16 v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251F0EA1C();
  sub_251F36D90();
  if (!v2)
  {
    char v17 = 0;
    sub_251B72740();
    sub_251F36880();
    uint64_t v9 = v13;
    __int16 v10 = v14;
    char v15 = 1;
    sub_251B7281C();
    sub_251F36880();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v11 = v16;
    *(void *)a2 = v9;
    *(_WORD *)(a2 + 8) = v10;
    *(unsigned char *)(a2 + 10) = v11;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

BOOL sub_251F0DDFC(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 == *(void *)a2
      && *(unsigned __int16 *)(a1 + 8) == *(unsigned __int16 *)(a2 + 8)
      && dword_251F6095C[*(char *)(a1 + 10)] == dword_251F6095C[*(char *)(a2 + 10)];
}

uint64_t sub_251F0DE44()
{
  return sub_251F36D00();
}

uint64_t sub_251F0DEBC()
{
  return sub_251F36CE0();
}

uint64_t sub_251F0DF10()
{
  return sub_251F36D00();
}

uint64_t sub_251F0DF84@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ClusterPath.init(from:)(a1, a2);
}

uint64_t sub_251F0DF9C(void *a1)
{
  return ClusterPath.encode(to:)(a1);
}

uint64_t MatterTilePath.nodeID.getter()
{
  return *(void *)v0;
}

uint64_t MatterTilePath.nodeID.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*MatterTilePath.nodeID.modify())()
{
  return nullsub_1;
}

uint64_t MatterTilePath.endpointID.getter()
{
  return *(unsigned __int16 *)(v0 + 8) | (*(unsigned __int8 *)(v0 + 10) << 16);
}

uint64_t MatterTilePath.endpointID.setter(uint64_t result)
{
  *(_WORD *)(v1 + 8) = result;
  *(unsigned char *)(v1 + 10) = BYTE2(result) & 1;
  return result;
}

uint64_t (*MatterTilePath.endpointID.modify())()
{
  return nullsub_1;
}

uint64_t MatterTilePath.description.getter()
{
  uint64_t v1 = *v0;
  __int16 v2 = *((_WORD *)v0 + 4);
  char v3 = *((unsigned char *)v0 + 10);
  sub_251F36400();
  swift_bridgeObjectRelease();
  uint64_t v12 = 3829371;
  unint64_t v13 = 0xE300000000000000;
  uint64_t v9 = v1;
  sub_251F36AB0();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  LOWORD(v9) = v2;
  BYTE2(v9) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5C28);
  sub_251F35770();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v1;
  __int16 v10 = v2;
  char v11 = v3;
  MatterTilePath.uuid.getter();
  sub_251AF752C();
  sub_251F36AB0();
  sub_251F35800();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_251F35800();
  return v12;
}

uint64_t MatterTilePath.hash(into:)()
{
  int v1 = *(unsigned __int8 *)(v0 + 10);
  sub_251F36CF0();
  if (v1 == 1) {
    return sub_251F36CC0();
  }
  sub_251F36CC0();
  return sub_251F36CD0();
}

uint64_t static MatterTilePath.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2) {
    return 0;
  }
  char v2 = *(unsigned char *)(a2 + 10);
  if (*(unsigned char *)(a1 + 10))
  {
    if ((*(unsigned char *)(a2 + 10) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*(unsigned __int16 *)(a1 + 8) != *(unsigned __int16 *)(a2 + 8)) {
      char v2 = 1;
    }
    if (v2) {
      return 0;
    }
  }
  return 1;
}

uint64_t sub_251F0E2B0(uint64_t a1)
{
  unint64_t v2 = sub_251F0EA70();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251F0E2EC(uint64_t a1)
{
  unint64_t v2 = sub_251F0EA70();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MatterTilePath.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5C30);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[6] = *(unsigned __int16 *)(v1 + 8);
  v9[3] = *(unsigned __int8 *)(v1 + 10);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251F0EA70();
  sub_251F36DA0();
  char v11 = 0;
  sub_251F36A70();
  if (!v2)
  {
    char v10 = 1;
    sub_251F369A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t MatterTilePath.hashValue.getter()
{
  int v1 = *(unsigned __int8 *)(v0 + 10);
  sub_251F36CA0();
  sub_251F36CF0();
  sub_251F36CC0();
  if (v1 != 1) {
    sub_251F36CD0();
  }
  return sub_251F36D00();
}

uint64_t MatterTilePath.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5C40);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  __int16 v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251F0EA70();
  sub_251F36D90();
  if (!v2)
  {
    char v14 = 0;
    uint64_t v9 = sub_251F368D0();
    char v13 = 1;
    int v11 = sub_251F36800();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)a2 = v9;
    *(_WORD *)(a2 + 8) = v11;
    *(unsigned char *)(a2 + 10) = BYTE2(v11) & 1;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_251F0E6D4()
{
  int v1 = *(unsigned __int8 *)(v0 + 10);
  sub_251F36CA0();
  sub_251F36CF0();
  sub_251F36CC0();
  if (v1 != 1) {
    sub_251F36CD0();
  }
  return sub_251F36D00();
}

uint64_t sub_251F0E758()
{
  int v1 = *(unsigned __int8 *)(v0 + 10);
  sub_251F36CF0();
  if (v1 == 1) {
    return sub_251F36CC0();
  }
  sub_251F36CC0();
  return sub_251F36CD0();
}

uint64_t sub_251F0E7B8()
{
  int v1 = *(unsigned __int8 *)(v0 + 10);
  sub_251F36CA0();
  sub_251F36CF0();
  sub_251F36CC0();
  if (v1 != 1) {
    sub_251F36CD0();
  }
  return sub_251F36D00();
}

uint64_t sub_251F0E838(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 == *(void *)a2)
  {
    char v2 = *(unsigned char *)(a2 + 10);
    if (*(unsigned char *)(a1 + 10))
    {
      if (*(unsigned char *)(a2 + 10)) {
        return 1;
      }
    }
    else
    {
      if (*(unsigned __int16 *)(a1 + 8) != *(unsigned __int16 *)(a2 + 8)) {
        char v2 = 1;
      }
      if ((v2 & 1) == 0) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_251F0E87C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MatterTilePath.init(from:)(a1, a2);
}

uint64_t sub_251F0E894(void *a1)
{
  return MatterTilePath.encode(to:)(a1);
}

uint64_t ClusterPath.nodeID.getter()
{
  return *(void *)v0;
}

void *sub_251F0E8B8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B21EBA0);
      char v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      char v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      char v10 = (void *)MEMORY[0x263F8EE78];
      char v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_251F11588(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_251F0E9C8()
{
  unint64_t result = qword_269BA5C00;
  if (!qword_269BA5C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5C00);
  }
  return result;
}

unint64_t sub_251F0EA1C()
{
  unint64_t result = qword_269BA5C18;
  if (!qword_269BA5C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5C18);
  }
  return result;
}

unint64_t sub_251F0EA70()
{
  unint64_t result = qword_269BA5C38;
  if (!qword_269BA5C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5C38);
  }
  return result;
}

unint64_t sub_251F0EAC8()
{
  unint64_t result = qword_269BA5C48;
  if (!qword_269BA5C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5C48);
  }
  return result;
}

unint64_t sub_251F0EB20()
{
  unint64_t result = qword_269BA5C50;
  if (!qword_269BA5C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5C50);
  }
  return result;
}

unint64_t sub_251F0EB78()
{
  unint64_t result = qword_269BA5C58;
  if (!qword_269BA5C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5C58);
  }
  return result;
}

uint64_t __swift_memcpy10_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for EndpointPath(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 10)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for EndpointPath(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_WORD *)(result + 8) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 10) = v3;
  return result;
}

ValueMetadata *type metadata accessor for EndpointPath()
{
  return &type metadata for EndpointPath;
}

uint64_t __swift_memcpy11_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 7) = *(_DWORD *)((char *)a2 + 7);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for ClusterPath(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xE5 && *(unsigned char *)(a1 + 11)) {
    return (*(_DWORD *)a1 + 229);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 10);
  BOOL v4 = v3 >= 0x1C;
  int v5 = v3 - 28;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ClusterPath(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xE4)
  {
    *(unsigned char *)(result + 10) = 0;
    *(_WORD *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 229;
    if (a3 >= 0xE5) {
      *(unsigned char *)(result + 11) = 1;
    }
  }
  else
  {
    if (a3 >= 0xE5) {
      *(unsigned char *)(result + 11) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 10) = a2 + 27;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClusterPath()
{
  return &type metadata for ClusterPath;
}

uint64_t getEnumTagSinglePayload for MatterTilePath(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 11)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MatterTilePath(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 10) = 0;
    *(_WORD *)(result + 8) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 11) = v3;
  return result;
}

ValueMetadata *type metadata accessor for MatterTilePath()
{
  return &type metadata for MatterTilePath;
}

ValueMetadata *type metadata accessor for MatterTilePath.CodingKeys()
{
  return &type metadata for MatterTilePath.CodingKeys;
}

ValueMetadata *type metadata accessor for ClusterPath.CodingKeys()
{
  return &type metadata for ClusterPath.CodingKeys;
}

unsigned char *_s13HomeDataModel14MatterTilePathV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251F0EE3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EndpointPath.CodingKeys()
{
  return &type metadata for EndpointPath.CodingKeys;
}

unint64_t sub_251F0EE78()
{
  unint64_t result = qword_269BA5C60;
  if (!qword_269BA5C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5C60);
  }
  return result;
}

unint64_t sub_251F0EED0()
{
  unint64_t result = qword_269BA5C68;
  if (!qword_269BA5C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5C68);
  }
  return result;
}

unint64_t sub_251F0EF28()
{
  unint64_t result = qword_269BA5C70;
  if (!qword_269BA5C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5C70);
  }
  return result;
}

unint64_t sub_251F0EF80()
{
  unint64_t result = qword_269BA5C78;
  if (!qword_269BA5C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5C78);
  }
  return result;
}

unint64_t sub_251F0EFD8()
{
  unint64_t result = qword_269BA5C80;
  if (!qword_269BA5C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5C80);
  }
  return result;
}

unint64_t sub_251F0F030()
{
  unint64_t result = qword_269BA5C88;
  if (!qword_269BA5C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5C88);
  }
  return result;
}

unint64_t sub_251F0F088()
{
  unint64_t result = qword_269BA5C90;
  if (!qword_269BA5C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5C90);
  }
  return result;
}

unint64_t sub_251F0F0E0()
{
  unint64_t result = qword_269BA5C98;
  if (!qword_269BA5C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5C98);
  }
  return result;
}

unint64_t sub_251F0F138()
{
  unint64_t result = qword_269BA5CA0;
  if (!qword_269BA5CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5CA0);
  }
  return result;
}

uint64_t sub_251F0F18C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_251F0F1F4(a1, a2, a3, a4, &qword_26B21E600, (uint64_t (*)(void))type metadata accessor for StaticActionSet, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
}

uint64_t sub_251F0F1C0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_251F0F1F4(a1, a2, a3, a4, &qword_269B9D060, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
}

uint64_t sub_251F0F1F4(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    int v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  int v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_251F36670();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_251F11E98(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_251F0F474(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_251F0F1F4(a1, a2, a3, a4, &qword_269B9CFF0, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
}

uint64_t sub_251F0F4A8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_251F0F1F4(a1, a2, a3, a4, &qword_26B21ED38, (uint64_t (*)(void))type metadata accessor for StaticUser, (uint64_t (*)(void))type metadata accessor for StaticUser);
}

uint64_t sub_251F0F4DC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_251F0F1F4(a1, a2, a3, a4, &qword_26B21EB80, MEMORY[0x270FA9580], MEMORY[0x270FA9500]);
}

uint64_t sub_251F0F4F8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_251F0F1F4(a1, a2, a3, a4, &qword_26B21EB90, (uint64_t (*)(void))type metadata accessor for StaticHome, (uint64_t (*)(void))type metadata accessor for StaticHome);
}

uint64_t sub_251F0F52C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_251F0F1F4(a1, a2, a3, a4, &qword_269BA5D50, (uint64_t (*)(void))type metadata accessor for StaticZone, (uint64_t (*)(void))type metadata accessor for StaticZone);
}

uint64_t sub_251F0F560(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_251F0F1F4(a1, a2, a3, a4, &qword_26B21F250, (uint64_t (*)(void))type metadata accessor for ColorPickerFavorite, (uint64_t (*)(void))type metadata accessor for ColorPickerFavorite);
}

uint64_t sub_251F0F594(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_251F0F1F4(a1, a2, a3, a4, &qword_269BA5D58, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
}

uint64_t sub_251F0F5C8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_251F0F1F4(a1, a2, a3, a4, &qword_26B21F230, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
}

uint64_t sub_251F0F5FC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_251F0F1F4(a1, a2, a3, a4, &qword_26B21F210, (uint64_t (*)(void))type metadata accessor for StaticResident, (uint64_t (*)(void))type metadata accessor for StaticResident);
}

char *sub_251F0F630(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_251F0F648(a1, a2, a3, a4, qword_269BA5DA8);
}

char *sub_251F0F63C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_251F0F648(a1, a2, a3, a4, &qword_269BA5D40);
}

char *sub_251F0F648(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = *((void *)a4 + 3);
  int64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v8 = a2;
    }
LABEL_8:
    int64_t v9 = *((void *)a4 + 2);
    if (v8 <= v9) {
      int64_t v10 = *((void *)a4 + 2);
    }
    else {
      int64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      unint64_t v11 = (char *)swift_allocObject();
      size_t v12 = _swift_stdlib_malloc_size(v11);
      *((void *)v11 + 2) = v9;
      *((void *)v11 + 3) = 2 * v12 - 64;
      uint64_t v13 = v11 + 32;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[v9 + 32]) {
          memmove(v13, a4 + 32, v9);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v11 = (char *)MEMORY[0x263F8EE78];
      uint64_t v13 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_251F114A0(0, v9, v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_251F0F740(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_251F0F774(a1, a2, a3, a4, &qword_269BA5D10);
}

char *sub_251F0F754(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_251F0F648(a1, a2, a3, a4, &qword_269B9D1E8);
}

void *sub_251F0F760(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_251F0F774(a1, a2, a3, a4, &qword_269B9D0B0);
}

void *sub_251F0F774(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      unint64_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 1;
      }
      v11[2] = v9;
      void v11[3] = 2 * (v13 >> 5);
      uint64_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v11 = (void *)MEMORY[0x263F8EE78];
      uint64_t v14 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v9 + 4]) {
          memmove(v14, a4 + 4, 32 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_251F113B0(0, v9, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

char *sub_251F0F890(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_251F0F648(a1, a2, a3, a4, &qword_269BA5D08);
}

char *sub_251F0F89C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_251F0F648(a1, a2, a3, a4, &qword_269BA5D00);
}

void *sub_251F0F8A8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_251F10524(a1, a2, a3, a4, &qword_269BA5CA8);
}

void *sub_251F0F8B4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_251F0F8DC(a1, a2, a3, a4, &qword_269B9CEE8, (uint64_t *)&unk_269BA5550);
}

void *sub_251F0F8C8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_251F0F8DC(a1, a2, a3, a4, &qword_269BA5CB8, &qword_26B21ECE0);
}

void *sub_251F0F8DC(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = _swift_stdlib_malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 25;
      }
      id v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      uint64_t v16 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4]) {
          memmove(v16, a4 + 4, 8 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_251F123E8(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_251F0F9F8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CAB0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_251F1167C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_251F0FB08(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_251F108D0(a1, a2, a3, a4, &qword_269B9CB40, (void (*)(void, int64_t, void *, void *))sub_251F1167C);
}

uint64_t sub_251F0FB28(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_251F0F1F4(a1, a2, a3, a4, &qword_26B21F208, (uint64_t (*)(void))type metadata accessor for StaticService, (uint64_t (*)(void))type metadata accessor for StaticService);
}

uint64_t sub_251F0FB5C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_251F0F1F4(a1, a2, a3, a4, &qword_269BA5D90, (uint64_t (*)(void))type metadata accessor for Action, (uint64_t (*)(void))type metadata accessor for Action);
}

uint64_t sub_251F0FB90(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_251F0F1F4(a1, a2, a3, a4, &qword_269BA5DA0, (uint64_t (*)(void))type metadata accessor for Event, (uint64_t (*)(void))type metadata accessor for Event);
}

uint64_t sub_251F0FBC4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_251F0F1F4(a1, a2, a3, a4, &qword_269BA5D48, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
}

void *sub_251F0FBF8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_251F0F8DC(a1, a2, a3, a4, &qword_269BA5D80, &qword_269BA5D88);
}

void *sub_251F0FC0C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D5F0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_251F11CA8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_251F0FD30(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_251F102C4(a1, a2, a3, a4, &qword_269BA5D70, &qword_269BA5D78);
}

uint64_t sub_251F0FD44(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_251F0F1F4(a1, a2, a3, a4, &qword_269BA5CE8, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
}

void *sub_251F0FD78(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D728);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_251F11B9C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_251F0FE88(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5D20);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_251F119B8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_251F0FFAC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_251F0F1F4(a1, a2, a3, a4, &qword_269BA5D60, (uint64_t (*)(void))type metadata accessor for StaticLightProfile, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
}

void *sub_251F0FFE0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_251F100E4(a1, a2, a3, a4, &qword_269BA5D68);
}

uint64_t sub_251F0FFF4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_251F0F1F4(a1, a2, a3, a4, &qword_269B9D090, type metadata accessor for ScrubberElement, type metadata accessor for ScrubberElement);
}

uint64_t sub_251F10028(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_251F0F1F4(a1, a2, a3, a4, &qword_269B9CF28, (uint64_t (*)(void))type metadata accessor for StaticTimer, (uint64_t (*)(void))type metadata accessor for StaticTimer);
}

uint64_t sub_251F1005C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_251F0F1F4(a1, a2, a3, a4, &qword_26B21EB98, type metadata accessor for StaticRoom, type metadata accessor for StaticRoom);
}

uint64_t sub_251F10090(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_251F0F1F4(a1, a2, a3, a4, &qword_269B9D068, type metadata accessor for RoomType, type metadata accessor for RoomType);
}

char *sub_251F100C4(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_251F0F648(a1, a2, a3, a4, &qword_269B9CF60);
}

void *sub_251F100D0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_251F100E4(a1, a2, a3, a4, &qword_269BA5D38);
}

void *sub_251F100E4(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      size_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 17;
      }
      v11[2] = v9;
      void v11[3] = 2 * (v13 >> 4);
      int64_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      size_t v11 = (void *)MEMORY[0x263F8EE78];
      int64_t v14 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v9 + 4]) {
          memmove(v14, a4 + 4, 16 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_251F11FF4(0, v9, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_251F10200(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_251F0F1F4(a1, a2, a3, a4, &qword_26B21E608, _s8IntervalV11AggregationVMa, _s8IntervalV11AggregationVMa);
}

uint64_t sub_251F10234(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_251F0F1F4(a1, a2, a3, a4, &qword_26B21E610, _s8IntervalVMa, _s8IntervalVMa);
}

uint64_t sub_251F10268(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_251F10644(a1, a2, a3, a4, &qword_26B21F228, &qword_26B21F0D8);
}

uint64_t sub_251F1027C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_251F0F1F4(a1, a2, a3, a4, &qword_269B9CFF8, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
}

void *sub_251F102B0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_251F102C4(a1, a2, a3, a4, &qword_269B9CF70, &qword_269B9CF78);
}

void *sub_251F102C4(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = _swift_stdlib_malloc_size(v13);
      id v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      uint64_t v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4]) {
          memmove(v15, a4 + 4, 40 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      uint64_t v15 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_251F125E4(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_251F103F4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CFE0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_251F11DA0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_251F10518(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_251F10524(a1, a2, a3, a4, &qword_269BA54E8);
}

void *sub_251F10524(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      size_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 17;
      }
      v11[2] = v9;
      void v11[3] = 2 * (v13 >> 4);
      size_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      size_t v11 = (void *)MEMORY[0x263F8EE78];
      size_t v14 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v9 + 4]) {
          memmove(v14, a4 + 4, 16 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_251F120E4(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_251F10630(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_251F10644(a1, a2, a3, a4, &qword_269BA5D18, &qword_269B9FB80);
}

uint64_t sub_251F10644(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    uint64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v10 = a2;
      }
    }
  }
  else
  {
    uint64_t v10 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (BOOL v18 = v14 == -1) : (BOOL v18 = 0), v18))
  {
LABEL_29:
    uint64_t result = sub_251F36670();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  void v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v16 + v20;
  if (a1)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(void *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_251F11768(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

void *sub_251F108B0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_251F108D0(a1, a2, a3, a4, &qword_269BA5D28, (void (*)(void, int64_t, void *, void *))sub_251F121D0);
}

void *sub_251F108D0(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, void (*a6)(void, int64_t, void *, void *))
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  int64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v10 = a2;
    }
LABEL_8:
    int64_t v11 = a4[2];
    if (v10 <= v11) {
      int64_t v12 = a4[2];
    }
    else {
      int64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = _swift_stdlib_malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 25;
      }
      id v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      uint64_t v16 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4]) {
          memmove(v16, a4 + 4, 8 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    a6(0, v11, v16, a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_251F109EC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5CF8);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_251F122DC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_251F10AFC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_251F0F1F4(a1, a2, a3, a4, &qword_269B9CFB8, type metadata accessor for StateSnapshot.UpdateType, type metadata accessor for StateSnapshot.UpdateType);
}

void *sub_251F10B30(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CFB0);
      int64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_251F118C0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_251F10C54(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_251F0F1F4(a1, a2, a3, a4, &qword_269BA5CF0, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
}

char *sub_251F10C88(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D0C8);
      int64_t v10 = (char *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 29;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 2);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v13 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32]) {
          memmove(v13, a4 + 32, 4 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_251F11AB0(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_251F10D98(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_251F0F648(a1, a2, a3, a4, &qword_269BA5CE0);
}

char *sub_251F10DA4(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_251F0F648(a1, a2, a3, a4, &qword_269BA5CC0);
}

uint64_t sub_251F10DB0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_251F0F1F4(a1, a2, a3, a4, &qword_269B9CF30, (uint64_t (*)(void))type metadata accessor for StaticAlarm, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
}

void *sub_251F10DE4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_251F0F8DC(a1, a2, a3, a4, &qword_269BA5CD8, &qword_269BA18A0);
}

uint64_t sub_251F10DF8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_251F0F1F4(a1, a2, a3, a4, &qword_269BA5CD0, type metadata accessor for StaticAccessory.DeviceIdentifier, type metadata accessor for StaticAccessory.DeviceIdentifier);
}

void *sub_251F10E2C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5CC8);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_251F124F0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_251F10F3C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F218);
      int64_t v10 = (char *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      int64_t v12 = v11 - 32;
      if (v11 < 32) {
        int64_t v12 = v11 - 31;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = v12 & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v13 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 32]) {
          memmove(v13, a4 + 32, 2 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_251F112C4(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_251F11048(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_251F0F1F4(a1, a2, a3, a4, &qword_269BA5D98, type metadata accessor for ActionCommand, type metadata accessor for ActionCommand);
}

void *sub_251F1107C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_251F102C4(a1, a2, a3, a4, &qword_269B9CEC0, &qword_269B9CEC8);
}

void *sub_251F11090(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_251F102C4(a1, a2, a3, a4, &qword_269B9CEB0, &qword_269B9CEB8);
}

void *sub_251F110A4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5CB0);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_251F126F0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_251F111B4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CED0);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_251F127E4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_251F112C4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + 2 * a1 + 32);
    size_t v6 = 2 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251F113B0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

char *sub_251F114A0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251F11588(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

char *sub_251F1167C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251F11768(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251F118C0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251F119B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

char *sub_251F11AB0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 4 * a1 + 32);
    size_t v6 = 4 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251F11B9C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269BA55D0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251F11CA8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251F11DA0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251F11E98(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251F11FF4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

char *sub_251F120E4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251F121D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5D30);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251F122DC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_26B21E198);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251F123E8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 8 * a1 + 32;
    unint64_t v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251F124F0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251F125E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251F126F0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251F127E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251F128D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E696F70646E65 && a2 == 0xEC00000068746150;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4B72657473756C63 && a2 == 0xEB00000000646E69)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_251F129FC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x444965646F6ELL && a2 == 0xE600000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E696F70646E65 && a2 == 0xEA00000000004449)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_251F12AFC()
{
  uint64_t AssociatedTypeWitness = sub_251F36190();
  if (v1 <= 0x3F)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      uint64_t AssociatedTypeWitness = sub_251F36190();
      if (v3 <= 0x3F)
      {
        swift_getAssociatedTypeWitness();
        uint64_t AssociatedTypeWitness = sub_251F36190();
        if (v4 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return AssociatedTypeWitness;
}

uint64_t *sub_251F12CA8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  if (*(_DWORD *)(v4 + 84)) {
    uint64_t v5 = *(void *)(v4 + 64);
  }
  else {
    uint64_t v5 = *(void *)(v4 + 64) + 1;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  size_t __n = v5;
  uint64_t v8 = v5 + v7;
  uint64_t v9 = *(void *)(v6 + 64);
  uint64_t v40 = v9 + v7;
  if (*(_DWORD *)(v6 + 84)) {
    size_t v10 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  else {
    size_t v10 = v9 + 1;
  }
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(_DWORD *)(v12 + 80);
  uint64_t v14 = v13;
  if (*(_DWORD *)(v12 + 84)) {
    uint64_t v15 = *(void *)(v12 + 64);
  }
  else {
    uint64_t v15 = *(void *)(v12 + 64) + 1;
  }
  int v16 = v7 | *(_DWORD *)(v4 + 80) | v13;
  uint64_t v17 = (v7 | *(unsigned char *)(v4 + 80) | v13);
  int v18 = v16 & 0x100000;
  if (v17 <= 7
    && v15
     + ((v10 + v14 + ((v40 + (v8 & ~(unint64_t)v7)) & ~(unint64_t)v7)) & ~v14) <= 0x18
    && v18 == 0)
  {
    size_t v35 = v15;
    size_t v36 = v10;
    uint64_t v37 = *(void *)(v11 - 8);
    uint64_t v38 = v11;
    unint64_t v22 = a1;
    unint64_t v23 = ~(unint64_t)v7;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v4 + 48))(a2, 1, v3))
    {
      memcpy(a1, a2, __n);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v4 + 16))(a1, a2, v3);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v3);
    }
    uint64_t v43 = ~v14;
    unint64_t v24 = ((unint64_t)a2 + v8) & v23;
    uint64_t v25 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
    v25(((unint64_t)v22 + v8) & v23, v24, AssociatedTypeWitness);
    uint64_t v26 = (void *)((v40 + (((unint64_t)v22 + v8) & v23)) & v23);
    uint64_t v27 = (char *)((v40 + v24) & v23);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v27, 1, AssociatedTypeWitness))
    {
      size_t v28 = v36;
      memcpy(v26, v27, v36);
      uint64_t v30 = v37;
      uint64_t v29 = v38;
    }
    else
    {
      v25((unint64_t)v26, (unint64_t)v27, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v26, 0, 1, AssociatedTypeWitness);
      uint64_t v30 = v37;
      uint64_t v29 = v38;
      size_t v28 = v36;
    }
    uint64_t v31 = &v27[v28];
    uint64_t v32 = (void *)(((unint64_t)v26 + v28 + v14) & v43);
    uint64_t v33 = (const void *)((unint64_t)&v31[v14] & v43);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48))(v33, 1, v29))
    {
      memcpy(v32, v33, v35);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v30 + 16))(v32, v33, v29);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v32, 0, 1, v29);
    }
  }
  else
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    unint64_t v22 = (uint64_t *)(v21 + ((v17 + 16) & ~v17));
    swift_retain();
  }
  return v22;
}

uint64_t sub_251F13098(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3)) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = v8;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v6 + a1;
  if (!v5) {
    ++v11;
  }
  uint64_t v12 = (v11 + v10) & ~v10;
  int v13 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v13(v12, AssociatedTypeWitness);
  uint64_t v14 = *(void *)(v8 + 64);
  uint64_t v15 = (v14 + v10 + v12) & ~v10;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v15, 1, AssociatedTypeWitness)) {
    v13(v15, AssociatedTypeWitness);
  }
  int v16 = *(_DWORD *)(v9 + 84);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = v15 + v14;
  if (!v16) {
    ++v19;
  }
  unint64_t v20 = (v19 + *(unsigned __int8 *)(v18 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v23 = *(void *)(v17 - 8);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v18 + 48))(v20, 1, v17);
  if (!result)
  {
    unint64_t v22 = *(uint64_t (**)(unint64_t, uint64_t))(v23 + 8);
    return v22(v20, v17);
  }
  return result;
}

void *sub_251F1332C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    int v7 = *(_DWORD *)(v6 + 84);
    size_t v8 = *(void *)(v6 + 64);
    if (v7) {
      size_t v9 = v8;
    }
    else {
      size_t v9 = v8 + 1;
    }
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    uint64_t v11 = *(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56);
    uint64_t v10 = v6 + 56;
    v11(a1, 0, 1, v5);
    int v7 = *(_DWORD *)(v10 + 28);
    size_t v8 = *(void *)(v10 + 8);
  }
  if (v7) {
    size_t v12 = v8;
  }
  else {
    size_t v12 = v8 + 1;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = v14;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v33 = a1;
  unint64_t v17 = ((unint64_t)a1 + v12 + v16) & ~v16;
  unint64_t v18 = ((unint64_t)a2 + v12 + v16) & ~v16;
  uint64_t v19 = *(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 16);
  v19(v17, v18, AssociatedTypeWitness);
  size_t v20 = *(void *)(v14 + 64);
  size_t v21 = (v20 + v16 + v17) & ~v16;
  size_t v22 = (v20 + v16 + v18) & ~v16;
  if ((*(unsigned int (**)(size_t, uint64_t, uint64_t))(v15 + 48))(v22, 1, AssociatedTypeWitness))
  {
    int v23 = *(_DWORD *)(v15 + 84);
    if (v23) {
      size_t v24 = v20;
    }
    else {
      size_t v24 = v20 + 1;
    }
    memcpy((void *)((v20 + v16 + v17) & ~v16), (const void *)((v20 + v16 + v18) & ~v16), v24);
  }
  else
  {
    v19((v20 + v16 + v17) & ~v16, (v20 + v16 + v18) & ~v16, AssociatedTypeWitness);
    (*(void (**)(size_t, void, uint64_t, uint64_t))(v15 + 56))((v20 + v16 + v17) & ~v16, 0, 1, AssociatedTypeWitness);
    int v23 = *(_DWORD *)(v15 + 84);
  }
  if (v23) {
    size_t v25 = v20;
  }
  else {
    size_t v25 = v20 + 1;
  }
  uint64_t v26 = swift_getAssociatedTypeWitness();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(unsigned __int8 *)(v27 + 80);
  uint64_t v29 = (void *)((v25 + v28 + v21) & ~v28);
  uint64_t v30 = (const void *)((v25 + v28 + v22) & ~v28);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v30, 1, v26))
  {
    if (*(_DWORD *)(v27 + 84)) {
      size_t v31 = *(void *)(v27 + 64);
    }
    else {
      size_t v31 = *(void *)(v27 + 64) + 1;
    }
    memcpy(v29, v30, v31);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v27 + 16))(v29, v30, v26);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v29, 0, 1, v26);
  }
  return v33;
}

void *sub_251F13684(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_12;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  if (v10) {
    size_t v12 = v11;
  }
  else {
    size_t v12 = v11 + 1;
  }
  memcpy(a1, a2, v12);
LABEL_12:
  if (*(_DWORD *)(v6 + 84)) {
    uint64_t v13 = *(void *)(v6 + 64);
  }
  else {
    uint64_t v13 = *(void *)(v6 + 64) + 1;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v16 = v15;
  uint64_t v17 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v43 = a1;
  unint64_t v18 = ((unint64_t)a1 + v13 + v17) & ~v17;
  unint64_t v19 = ((unint64_t)a2 + v13 + v17) & ~v17;
  size_t v20 = *(void (**)(unint64_t, unint64_t, uint64_t))(v15 + 24);
  v20(v18, v19, AssociatedTypeWitness);
  size_t v21 = *(void *)(v15 + 64);
  size_t v22 = (void *)((v21 + v17 + v18) & ~v17);
  int v23 = (void *)((v21 + v17 + v19) & ~v17);
  size_t v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v18) = v24(v22, 1, AssociatedTypeWitness);
  int v25 = v24(v23, 1, AssociatedTypeWitness);
  if (v18)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v22, v23, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v22, 0, 1, AssociatedTypeWitness);
      goto LABEL_26;
    }
    int v26 = *(_DWORD *)(v16 + 84);
  }
  else
  {
    if (!v25)
    {
      v20((unint64_t)v22, (unint64_t)v23, AssociatedTypeWitness);
      goto LABEL_26;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v22, AssociatedTypeWitness);
    int v26 = *(_DWORD *)(v16 + 84);
  }
  if (v26) {
    size_t v27 = v21;
  }
  else {
    size_t v27 = v21 + 1;
  }
  memcpy(v22, v23, v27);
LABEL_26:
  if (*(_DWORD *)(v16 + 84)) {
    size_t v28 = v21;
  }
  else {
    size_t v28 = v21 + 1;
  }
  uint64_t v29 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(unsigned __int8 *)(v30 + 80);
  uint64_t v32 = (void *)(((unint64_t)v22 + v28 + v31) & ~v31);
  uint64_t v33 = (void *)(((unint64_t)v23 + v28 + v31) & ~v31);
  uint64_t v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v30 + 48);
  int v35 = v34(v32, 1, v29);
  int v36 = v34(v33, 1, v29);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(void *, void *, uint64_t))(v30 + 16))(v32, v33, v29);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v32, 0, 1, v29);
      return v43;
    }
    int v37 = *(_DWORD *)(v30 + 84);
    size_t v38 = *(void *)(v30 + 64);
  }
  else
  {
    if (!v36)
    {
      (*(void (**)(void *, void *, uint64_t))(v30 + 24))(v32, v33, v29);
      return v43;
    }
    uint64_t v40 = *(void (**)(void *, uint64_t))(v30 + 8);
    uint64_t v39 = v30 + 8;
    v40(v32, v29);
    int v37 = *(_DWORD *)(v39 + 76);
    size_t v38 = *(void *)(v39 + 56);
  }
  if (v37) {
    size_t v41 = v38;
  }
  else {
    size_t v41 = v38 + 1;
  }
  memcpy(v32, v33, v41);
  return v43;
}

void *sub_251F13B24(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    int v7 = *(_DWORD *)(v6 + 84);
    size_t v8 = *(void *)(v6 + 64);
    if (v7) {
      size_t v9 = v8;
    }
    else {
      size_t v9 = v8 + 1;
    }
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    size_t v11 = *(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56);
    uint64_t v10 = v6 + 56;
    v11(a1, 0, 1, v5);
    int v7 = *(_DWORD *)(v10 + 28);
    size_t v8 = *(void *)(v10 + 8);
  }
  if (v7) {
    size_t v12 = v8;
  }
  else {
    size_t v12 = v8 + 1;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = v14;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v33 = a1;
  unint64_t v17 = ((unint64_t)a1 + v12 + v16) & ~v16;
  unint64_t v18 = ((unint64_t)a2 + v12 + v16) & ~v16;
  unint64_t v19 = *(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 32);
  v19(v17, v18, AssociatedTypeWitness);
  size_t v20 = *(void *)(v14 + 64);
  size_t v21 = (v20 + v16 + v17) & ~v16;
  size_t v22 = (v20 + v16 + v18) & ~v16;
  if ((*(unsigned int (**)(size_t, uint64_t, uint64_t))(v15 + 48))(v22, 1, AssociatedTypeWitness))
  {
    int v23 = *(_DWORD *)(v15 + 84);
    if (v23) {
      size_t v24 = v20;
    }
    else {
      size_t v24 = v20 + 1;
    }
    memcpy((void *)((v20 + v16 + v17) & ~v16), (const void *)((v20 + v16 + v18) & ~v16), v24);
  }
  else
  {
    v19((v20 + v16 + v17) & ~v16, (v20 + v16 + v18) & ~v16, AssociatedTypeWitness);
    (*(void (**)(size_t, void, uint64_t, uint64_t))(v15 + 56))((v20 + v16 + v17) & ~v16, 0, 1, AssociatedTypeWitness);
    int v23 = *(_DWORD *)(v15 + 84);
  }
  if (v23) {
    size_t v25 = v20;
  }
  else {
    size_t v25 = v20 + 1;
  }
  uint64_t v26 = swift_getAssociatedTypeWitness();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(unsigned __int8 *)(v27 + 80);
  uint64_t v29 = (void *)((v25 + v28 + v21) & ~v28);
  uint64_t v30 = (const void *)((v25 + v28 + v22) & ~v28);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v30, 1, v26))
  {
    if (*(_DWORD *)(v27 + 84)) {
      size_t v31 = *(void *)(v27 + 64);
    }
    else {
      size_t v31 = *(void *)(v27 + 64) + 1;
    }
    memcpy(v29, v30, v31);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v27 + 32))(v29, v30, v26);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v29, 0, 1, v26);
  }
  return v33;
}

void *sub_251F13E7C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_12;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  if (v10) {
    size_t v12 = v11;
  }
  else {
    size_t v12 = v11 + 1;
  }
  memcpy(a1, a2, v12);
LABEL_12:
  if (*(_DWORD *)(v6 + 84)) {
    uint64_t v13 = *(void *)(v6 + 64);
  }
  else {
    uint64_t v13 = *(void *)(v6 + 64) + 1;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v16 = v15;
  uint64_t v17 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v43 = a1;
  unint64_t v18 = ((unint64_t)a1 + v13 + v17) & ~v17;
  unint64_t v19 = ((unint64_t)a2 + v13 + v17) & ~v17;
  size_t v20 = *(void (**)(unint64_t, unint64_t, uint64_t))(v15 + 40);
  v20(v18, v19, AssociatedTypeWitness);
  size_t v21 = *(void *)(v15 + 64);
  size_t v22 = (void *)((v21 + v17 + v18) & ~v17);
  int v23 = (void *)((v21 + v17 + v19) & ~v17);
  size_t v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v18) = v24(v22, 1, AssociatedTypeWitness);
  int v25 = v24(v23, 1, AssociatedTypeWitness);
  if (v18)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v22, v23, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v22, 0, 1, AssociatedTypeWitness);
      goto LABEL_26;
    }
    int v26 = *(_DWORD *)(v16 + 84);
  }
  else
  {
    if (!v25)
    {
      v20((unint64_t)v22, (unint64_t)v23, AssociatedTypeWitness);
      goto LABEL_26;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v22, AssociatedTypeWitness);
    int v26 = *(_DWORD *)(v16 + 84);
  }
  if (v26) {
    size_t v27 = v21;
  }
  else {
    size_t v27 = v21 + 1;
  }
  memcpy(v22, v23, v27);
LABEL_26:
  if (*(_DWORD *)(v16 + 84)) {
    size_t v28 = v21;
  }
  else {
    size_t v28 = v21 + 1;
  }
  uint64_t v29 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(unsigned __int8 *)(v30 + 80);
  uint64_t v32 = (void *)(((unint64_t)v22 + v28 + v31) & ~v31);
  uint64_t v33 = (void *)(((unint64_t)v23 + v28 + v31) & ~v31);
  uint64_t v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v30 + 48);
  int v35 = v34(v32, 1, v29);
  int v36 = v34(v33, 1, v29);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(void *, void *, uint64_t))(v30 + 32))(v32, v33, v29);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v32, 0, 1, v29);
      return v43;
    }
    int v37 = *(_DWORD *)(v30 + 84);
    size_t v38 = *(void *)(v30 + 64);
  }
  else
  {
    if (!v36)
    {
      (*(void (**)(void *, void *, uint64_t))(v30 + 40))(v32, v33, v29);
      return v43;
    }
    uint64_t v40 = *(void (**)(void *, uint64_t))(v30 + 8);
    uint64_t v39 = v30 + 8;
    v40(v32, v29);
    int v37 = *(_DWORD *)(v39 + 76);
    size_t v38 = *(void *)(v39 + 56);
  }
  if (v37) {
    size_t v41 = v38;
  }
  else {
    size_t v41 = v38 + 1;
  }
  memcpy(v32, v33, v41);
  return v43;
}

uint64_t sub_251F1431C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned int *)(v4 + 84);
  if (v5) {
    unsigned int v6 = v5 - 1;
  }
  else {
    unsigned int v6 = 0;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  unsigned int v40 = v6;
  if (v8 <= v6) {
    unsigned int v9 = v6;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  unsigned int v10 = v8 - 1;
  if (!v8) {
    unsigned int v10 = 0;
  }
  unsigned int v38 = v10;
  if (v10 <= v9) {
    unsigned int v11 = v9;
  }
  else {
    unsigned int v11 = v10;
  }
  uint64_t v12 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v13 = v12;
  int v14 = *(_DWORD *)(v12 + 84);
  unsigned int v15 = v14 - 1;
  if (!v14) {
    unsigned int v15 = 0;
  }
  if (v15 <= v11) {
    unsigned int v15 = v11;
  }
  if (v5) {
    uint64_t v16 = *(void *)(v4 + 64);
  }
  else {
    uint64_t v16 = *(void *)(v4 + 64) + 1;
  }
  uint64_t v17 = *(void *)(v7 + 64);
  if (v8) {
    uint64_t v18 = *(void *)(v7 + 64);
  }
  else {
    uint64_t v18 = v17 + 1;
  }
  uint64_t v19 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v21 = *(void *)(v12 + 64);
  if (v14) {
    uint64_t v22 = v21;
  }
  else {
    uint64_t v22 = v21 + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v23 = v16 + v19;
  uint64_t v24 = v17 + v19;
  if (a2 <= v15) {
    goto LABEL_45;
  }
  uint64_t v25 = v22 + ((v18 + v20 + ((v24 + (v23 & ~v19)) & ~v19)) & ~v20);
  char v26 = 8 * v25;
  if (v25 > 3) {
    goto LABEL_28;
  }
  unsigned int v28 = ((a2 - v15 + ~(-1 << v26)) >> v26) + 1;
  if (HIWORD(v28))
  {
    int v27 = *(_DWORD *)((char *)a1 + v25);
    if (!v27) {
      goto LABEL_45;
    }
    goto LABEL_35;
  }
  if (v28 > 0xFF)
  {
    int v27 = *(unsigned __int16 *)((char *)a1 + v25);
    if (!*(unsigned __int16 *)((char *)a1 + v25)) {
      goto LABEL_45;
    }
    goto LABEL_35;
  }
  if (v28 >= 2)
  {
LABEL_28:
    int v27 = *((unsigned __int8 *)a1 + v25);
    if (!*((unsigned char *)a1 + v25)) {
      goto LABEL_45;
    }
LABEL_35:
    int v29 = (v27 - 1) << v26;
    if (v25 > 3) {
      int v29 = 0;
    }
    if (v25)
    {
      if (v25 <= 3) {
        int v30 = v25;
      }
      else {
        int v30 = 4;
      }
      switch(v30)
      {
        case 2:
          int v31 = *a1;
          break;
        case 3:
          int v31 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          int v31 = *(_DWORD *)a1;
          break;
        default:
          int v31 = *(unsigned __int8 *)a1;
          break;
      }
    }
    else
    {
      int v31 = 0;
    }
    return v15 + (v31 | v29) + 1;
  }
LABEL_45:
  if (!v15) {
    return 0;
  }
  if (v40 == v15)
  {
    unsigned int v32 = (*(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v4 + 48))(a1, v5, v3);
LABEL_56:
    if (v32 >= 2) {
      return v32 - 1;
    }
    else {
      return 0;
    }
  }
  uint64_t v34 = ~v19;
  unint64_t v35 = ((unint64_t)a1 + v23) & v34;
  if (v8 != v15)
  {
    unint64_t v37 = (v24 + v35) & v34;
    if (v38 == v15) {
      unsigned int v32 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v37, v8, AssociatedTypeWitness);
    }
    else {
      unsigned int v32 = (*(uint64_t (**)(unint64_t))(v13 + 48))((v37 + v20 + v18) & ~v20);
    }
    goto LABEL_56;
  }
  int v36 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48);
  return v36(v35, v8, AssociatedTypeWitness);
}

void sub_251F146F8(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v49 = v5;
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  if (v6) {
    unsigned int v7 = v6 - 1;
  }
  else {
    unsigned int v7 = 0;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  unsigned int v50 = v7;
  if (v9 <= v7) {
    unsigned int v10 = v7;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v8 + 84);
  }
  unsigned int v11 = v9 - 1;
  if (!v9) {
    unsigned int v11 = 0;
  }
  unsigned int v47 = v11;
  if (v11 <= v10) {
    unsigned int v12 = v10;
  }
  else {
    unsigned int v12 = v11;
  }
  int v13 = 0;
  uint64_t v14 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v15 = v14;
  int v16 = *(_DWORD *)(v14 + 84);
  unsigned int v17 = v16 - 1;
  if (!v16) {
    unsigned int v17 = 0;
  }
  if (v17 <= v12) {
    unsigned int v18 = v12;
  }
  else {
    unsigned int v18 = v17;
  }
  if (v6) {
    uint64_t v19 = *(void *)(v5 + 64);
  }
  else {
    uint64_t v19 = *(void *)(v5 + 64) + 1;
  }
  uint64_t v20 = *(void *)(v8 + 64);
  if (v9) {
    uint64_t v21 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v21 = v20 + 1;
  }
  uint64_t v22 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v23 = v19 + v22;
  uint64_t v24 = v20 + v22;
  uint64_t v25 = (v24 + ((v19 + v22) & ~v22)) & ~v22;
  uint64_t v26 = *(unsigned __int8 *)(v14 + 80);
  size_t v27 = *(void *)(v14 + 64);
  if (v16) {
    size_t v28 = v27;
  }
  else {
    size_t v28 = v27 + 1;
  }
  size_t v29 = ((v21 + v26 + v25) & ~v26) + v28;
  if (a3 > v18)
  {
    if (v29 <= 3)
    {
      unsigned int v30 = ((a3 - v18 + ~(-1 << (8 * v29))) >> (8 * v29)) + 1;
      if (HIWORD(v30))
      {
        int v13 = 4;
      }
      else if (v30 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v30 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  if (v18 < a2)
  {
    unsigned int v31 = ~v18 + a2;
    if (v29 < 4)
    {
      int v32 = (v31 >> (8 * v29)) + 1;
      if (v29)
      {
        int v36 = v31 & ~(-1 << (8 * v29));
        bzero(a1, v29);
        if (v29 == 3)
        {
          *(_WORD *)a1 = v36;
          a1[2] = BYTE2(v36);
        }
        else if (v29 == 2)
        {
          *(_WORD *)a1 = v36;
        }
        else
        {
          *a1 = v36;
        }
      }
    }
    else
    {
      bzero(a1, v29);
      *(_DWORD *)a1 = v31;
      int v32 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v29] = v32;
        return;
      case 2:
        *(_WORD *)&a1[v29] = v32;
        return;
      case 3:
        goto LABEL_82;
      case 4:
        *(_DWORD *)&a1[v29] = v32;
        return;
      default:
        return;
    }
  }
  uint64_t v33 = ~v22;
  uint64_t v34 = ~v26;
  unint64_t v35 = a1;
  switch(v13)
  {
    case 1:
      a1[v29] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_46;
    case 2:
      *(_WORD *)&a1[v29] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_46;
    case 3:
LABEL_82:
      __break(1u);
      JUMPOUT(0x251F14C08);
    case 4:
      *(_DWORD *)&a1[v29] = 0;
      goto LABEL_45;
    default:
LABEL_45:
      if (!a2) {
        return;
      }
LABEL_46:
      if (v50 == v18)
      {
        uint64_t v37 = a2 + 1;
        unsigned int v38 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v49 + 56);
        uint64_t v39 = v6;
        uint64_t v40 = v4;
LABEL_49:
        v38(v35, v37, v39, v40);
        return;
      }
      unint64_t v35 = (unsigned char *)((unint64_t)&a1[v23] & v33);
      if (v9 == v18)
      {
        unsigned int v38 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
        uint64_t v37 = a2;
        goto LABEL_56;
      }
      unint64_t v35 = (unsigned char *)((unint64_t)&v35[v24] & v33);
      if (v47 == v18)
      {
        uint64_t v37 = a2 + 1;
        unsigned int v38 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
LABEL_56:
        uint64_t v39 = v9;
        uint64_t v40 = AssociatedTypeWitness;
        goto LABEL_49;
      }
      size_t v41 = (unsigned char *)((unint64_t)&v35[v26 + v21] & v34);
      if (v17 >= a2)
      {
        unint64_t v45 = *(void (**)(unint64_t, void))(v15 + 56);
        unint64_t v46 = (unint64_t)&v35[v26 + v21] & v34;
        v45(v46, a2 + 1);
      }
      else
      {
        if (v28 <= 3) {
          int v42 = ~(-1 << (8 * v28));
        }
        else {
          int v42 = -1;
        }
        if (v28)
        {
          int v43 = v42 & (~v17 + a2);
          if (v28 <= 3) {
            int v44 = v28;
          }
          else {
            int v44 = 4;
          }
          bzero(v41, v28);
          switch(v44)
          {
            case 2:
              *(_WORD *)size_t v41 = v43;
              break;
            case 3:
              *(_WORD *)size_t v41 = v43;
              long long v41[2] = BYTE2(v43);
              break;
            case 4:
              *(_DWORD *)size_t v41 = v43;
              break;
            default:
              *size_t v41 = v43;
              break;
          }
        }
      }
      return;
  }
}

uint64_t type metadata accessor for AsyncTimerSequence.Iterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_251F14C58()
{
  uint64_t AssociatedTypeWitness = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      uint64_t AssociatedTypeWitness = sub_251F36190();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return AssociatedTypeWitness;
}

uint64_t *sub_251F14D90(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = *(void *)(v9 + 64);
  uint64_t v13 = v12 + v10;
  uint64_t v14 = (v12 + v10 + ((v7 + v10) & ~v10)) & ~v10;
  if (*(_DWORD *)(v9 + 84)) {
    size_t v15 = *(void *)(v9 + 64);
  }
  else {
    size_t v15 = v12 + 1;
  }
  unint64_t v16 = v14 + v15;
  uint64_t v17 = (*(unsigned char *)(v6 + 80) | *(unsigned char *)(v9 + 80));
  if (v17 > 7 || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0 || v16 > 0x18)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v17 + 16) & ~v17));
    swift_retain();
  }
  else
  {
    uint64_t v21 = AssociatedTypeWitness;
    uint64_t v22 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    unint64_t v23 = ((unint64_t)a1 + v11) & v22;
    unint64_t v24 = ((unint64_t)a2 + v11) & v22;
    uint64_t v25 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16);
    v25(v23, v24, v21);
    __dst = (void *)((v13 + v23) & v22);
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))((v13 + v24) & v22, 1, v21))
    {
      memcpy(__dst, (const void *)((v13 + v24) & v22), v15);
    }
    else
    {
      v25((unint64_t)__dst, (v13 + v24) & v22, v21);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(__dst, 0, 1, v21);
    }
  }
  return a1;
}

uint64_t sub_251F14FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(uint64_t, void))v3)(a1, *(void *)(a2 + 16));
  uint64_t v4 = *(void *)(v3 + 56);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v4 + a1 + v7) & ~v7;
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v11(v8, AssociatedTypeWitness);
  uint64_t v9 = (*(void *)(v6 + 64) + v7 + v8) & ~v7;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v9, 1, AssociatedTypeWitness);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v11)(v9, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_251F15124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v17 = a1;
  uint64_t v11 = (v6 + v9 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v13(v11, v12, AssociatedTypeWitness);
  size_t v14 = *(void *)(v8 + 64);
  if ((*(unsigned int (**)(size_t, uint64_t, uint64_t))(v8 + 48))((v14 + v9 + v12) & ~v9, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v8 + 84)) {
      size_t v15 = v14;
    }
    else {
      size_t v15 = v14 + 1;
    }
    memcpy((void *)((v14 + v9 + v11) & ~v9), (const void *)((v14 + v9 + v12) & ~v9), v15);
  }
  else
  {
    v13((v14 + v9 + v11) & ~v9, (v14 + v9 + v12) & ~v9, AssociatedTypeWitness);
    (*(void (**)(size_t, void, uint64_t, uint64_t))(v8 + 56))((v14 + v9 + v11) & ~v9, 0, 1, AssociatedTypeWitness);
  }
  return v17;
}

uint64_t sub_251F152DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = v8;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v6 + v10;
  uint64_t v23 = a1;
  uint64_t v12 = (v6 + v10 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  size_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24);
  v14(v12, v13, AssociatedTypeWitness);
  size_t v15 = *(void *)(v8 + 64);
  unint64_t v16 = (void *)((v15 + v10 + v12) & ~v10);
  uint64_t v17 = (void *)((v15 + v10 + v13) & ~v10);
  unsigned int v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  LODWORD(v12) = v18(v16, 1, AssociatedTypeWitness);
  int v19 = v18(v17, 1, AssociatedTypeWitness);
  if (v12)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 16))(v16, v17, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v16, 0, 1, AssociatedTypeWitness);
      return v23;
    }
    int v20 = *(_DWORD *)(v9 + 84);
  }
  else
  {
    if (!v19)
    {
      v14((uint64_t)v16, (uint64_t)v17, AssociatedTypeWitness);
      return v23;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v16, AssociatedTypeWitness);
    int v20 = *(_DWORD *)(v9 + 84);
  }
  if (v20) {
    size_t v21 = v15;
  }
  else {
    size_t v21 = v15 + 1;
  }
  memcpy(v16, v17, v21);
  return v23;
}

uint64_t sub_251F154FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v17 = a1;
  uint64_t v11 = (v6 + v9 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
  v13(v11, v12, AssociatedTypeWitness);
  size_t v14 = *(void *)(v8 + 64);
  if ((*(unsigned int (**)(size_t, uint64_t, uint64_t))(v8 + 48))((v14 + v9 + v12) & ~v9, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v8 + 84)) {
      size_t v15 = v14;
    }
    else {
      size_t v15 = v14 + 1;
    }
    memcpy((void *)((v14 + v9 + v11) & ~v9), (const void *)((v14 + v9 + v12) & ~v9), v15);
  }
  else
  {
    v13((v14 + v9 + v11) & ~v9, (v14 + v9 + v12) & ~v9, AssociatedTypeWitness);
    (*(void (**)(size_t, void, uint64_t, uint64_t))(v8 + 56))((v14 + v9 + v11) & ~v9, 0, 1, AssociatedTypeWitness);
  }
  return v17;
}

uint64_t sub_251F156B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = v8;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v6 + v10;
  uint64_t v23 = a1;
  uint64_t v12 = (v6 + v10 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  size_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40);
  v14(v12, v13, AssociatedTypeWitness);
  size_t v15 = *(void *)(v8 + 64);
  unint64_t v16 = (void *)((v15 + v10 + v12) & ~v10);
  uint64_t v17 = (void *)((v15 + v10 + v13) & ~v10);
  unsigned int v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  LODWORD(v12) = v18(v16, 1, AssociatedTypeWitness);
  int v19 = v18(v17, 1, AssociatedTypeWitness);
  if (v12)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 32))(v16, v17, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v16, 0, 1, AssociatedTypeWitness);
      return v23;
    }
    int v20 = *(_DWORD *)(v9 + 84);
  }
  else
  {
    if (!v19)
    {
      v14((uint64_t)v16, (uint64_t)v17, AssociatedTypeWitness);
      return v23;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v16, AssociatedTypeWitness);
    int v20 = *(_DWORD *)(v9 + 84);
  }
  if (v20) {
    size_t v21 = v15;
  }
  else {
    size_t v21 = v15 + 1;
  }
  memcpy(v16, v17, v21);
  return v23;
}

uint64_t sub_251F158D4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v7) {
    unsigned int v11 = v7;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  unsigned int v12 = v10 - 1;
  if (!v10) {
    unsigned int v12 = 0;
  }
  if (v12 > v11) {
    unsigned int v11 = v12;
  }
  uint64_t v13 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (v10) {
    uint64_t v15 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  else {
    uint64_t v15 = v14 + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v16 = AssociatedTypeWitness;
  uint64_t v17 = *(void *)(v6 + 64) + v13;
  uint64_t v18 = v14 + v13;
  if (a2 <= v11) {
    goto LABEL_31;
  }
  uint64_t v19 = v15 + ((v18 + (v17 & ~v13)) & ~v13);
  char v20 = 8 * v19;
  if (v19 <= 3)
  {
    unsigned int v22 = ((a2 - v11 + ~(-1 << v20)) >> v20) + 1;
    if (HIWORD(v22))
    {
      int v21 = *(_DWORD *)((char *)a1 + v19);
      if (!v21) {
        goto LABEL_31;
      }
      goto LABEL_21;
    }
    if (v22 > 0xFF)
    {
      int v21 = *(unsigned __int16 *)((char *)a1 + v19);
      if (!*(unsigned __int16 *)((char *)a1 + v19)) {
        goto LABEL_31;
      }
      goto LABEL_21;
    }
    if (v22 < 2)
    {
LABEL_31:
      if (v11)
      {
        if (v7 == v11)
        {
          uint64_t v26 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
          return v26(a1, v7, v5);
        }
        else
        {
          uint64_t v28 = ~v13;
          unint64_t v29 = ((unint64_t)a1 + v17) & v28;
          if (v10 == v11)
          {
            unsigned int v30 = *(uint64_t (**)(unint64_t))(v9 + 48);
            return v30(v29);
          }
          else
          {
            unsigned int v31 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))((v18 + v29) & v28, v10, v16);
            if (v31 >= 2) {
              return v31 - 1;
            }
            else {
              return 0;
            }
          }
        }
      }
      return 0;
    }
  }
  int v21 = *((unsigned __int8 *)a1 + v19);
  if (!*((unsigned char *)a1 + v19)) {
    goto LABEL_31;
  }
LABEL_21:
  int v23 = (v21 - 1) << v20;
  if (v19 > 3) {
    int v23 = 0;
  }
  if (v19)
  {
    if (v19 <= 3) {
      int v24 = v19;
    }
    else {
      int v24 = 4;
    }
    switch(v24)
    {
      case 2:
        int v25 = *a1;
        break;
      case 3:
        int v25 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v25 = *(_DWORD *)a1;
        break;
      default:
        int v25 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v25 = 0;
  }
  return v11 + (v25 | v23) + 1;
}

void sub_251F15BBC(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v36 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  int v10 = 0;
  uint64_t v11 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v12 = v11;
  unsigned int v13 = *(_DWORD *)(v11 + 84);
  if (v13 <= v9) {
    unsigned int v14 = v9;
  }
  else {
    unsigned int v14 = *(_DWORD *)(v11 + 84);
  }
  unsigned int v15 = v13 - 1;
  if (!v13) {
    unsigned int v15 = 0;
  }
  if (v15 > v14) {
    unsigned int v14 = v15;
  }
  uint64_t v16 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v17 = *(void *)(v8 + 64) + v16;
  uint64_t v18 = *(void *)(v11 + 64);
  uint64_t v19 = v18 + v16;
  if (v13) {
    uint64_t v20 = v18;
  }
  else {
    uint64_t v20 = v18 + 1;
  }
  size_t v21 = v20 + ((v18 + v16 + (v17 & ~v16)) & ~v16);
  if (a3 <= v14) {
    goto LABEL_19;
  }
  if (v21 <= 3)
  {
    unsigned int v22 = ((a3 - v14 + ~(-1 << (8 * v21))) >> (8 * v21)) + 1;
    if (HIWORD(v22))
    {
      int v10 = 4;
      if (v14 >= a2) {
        goto LABEL_27;
      }
LABEL_20:
      unsigned int v23 = ~v14 + a2;
      if (v21 < 4)
      {
        int v24 = (v23 >> (8 * v21)) + 1;
        if (v21)
        {
          int v25 = v23 & ~(-1 << (8 * v21));
          bzero(a1, v21);
          if (v21 == 3)
          {
            *(_WORD *)a1 = v25;
            a1[2] = BYTE2(v25);
          }
          else if (v21 == 2)
          {
            *(_WORD *)a1 = v25;
          }
          else
          {
            *a1 = v25;
          }
        }
      }
      else
      {
        bzero(a1, v21);
        *(_DWORD *)a1 = v23;
        int v24 = 1;
      }
      switch(v10)
      {
        case 1:
          a1[v21] = v24;
          break;
        case 2:
          *(_WORD *)&a1[v21] = v24;
          break;
        case 3:
LABEL_67:
          __break(1u);
          JUMPOUT(0x251F15FB0);
        case 4:
          *(_DWORD *)&a1[v21] = v24;
          break;
        default:
          return;
      }
      return;
    }
    if (v22 >= 0x100) {
      int v10 = 2;
    }
    else {
      int v10 = v22 > 1;
    }
LABEL_19:
    if (v14 >= a2) {
      goto LABEL_27;
    }
    goto LABEL_20;
  }
  int v10 = 1;
  if (v14 < a2) {
    goto LABEL_20;
  }
LABEL_27:
  uint64_t v26 = ~v16;
  switch(v10)
  {
    case 1:
      a1[v21] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)&a1[v21] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
      goto LABEL_67;
    case 4:
      *(_DWORD *)&a1[v21] = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (!a2) {
        return;
      }
LABEL_32:
      if (v9 == v14)
      {
        size_t v27 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v36 + 56);
        v27(a1, a2, v9, v7);
        return;
      }
      unint64_t v28 = (unint64_t)&a1[v17] & v26;
      if (v13 == v14)
      {
        unint64_t v29 = *(void (**)(unint64_t, uint64_t))(v12 + 56);
        uint64_t v30 = a2;
LABEL_61:
        v29(v28, v30);
        return;
      }
      unint64_t v31 = (v19 + v28) & v26;
      if (v13) {
        size_t v32 = v18;
      }
      else {
        size_t v32 = (v18 + 1);
      }
      if (v15 >= a2)
      {
        uint64_t v30 = (a2 + 1);
        unint64_t v29 = *(void (**)(unint64_t, uint64_t))(v12 + 56);
        unint64_t v28 = (v19 + v28) & v26;
        goto LABEL_61;
      }
      if (v32 <= 3) {
        int v33 = ~(-1 << (8 * v32));
      }
      else {
        int v33 = -1;
      }
      if (v32)
      {
        int v34 = v33 & (~v15 + a2);
        if (v32 <= 3) {
          int v35 = v32;
        }
        else {
          int v35 = 4;
        }
        bzero((void *)((v19 + v28) & v26), v32);
        switch(v35)
        {
          case 2:
            *(_WORD *)unint64_t v31 = v34;
            break;
          case 3:
            *(_WORD *)unint64_t v31 = v34;
            *(unsigned char *)(v31 + 2) = BYTE2(v34);
            break;
          case 4:
            *(_DWORD *)unint64_t v31 = v34;
            break;
          default:
            *(unsigned char *)unint64_t v31 = v34;
            break;
        }
      }
      break;
  }
}

uint64_t type metadata accessor for AsyncTimerSequence()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_251F16000()
{
  return swift_getWitnessTable();
}

uint64_t sub_251F1601C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v21 = a2;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)(v7 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_251F36190();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  unsigned int v15 = (char *)&v20 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v20 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))((char *)&v20 - v16, v3 + *(int *)(a1 + 36), AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v3 + *(int *)(a1 + 40), v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v3, v5);
  return sub_251F16258((uint64_t)v17, (uint64_t)v15, (uint64_t)v9, v5, v21);
}

uint64_t sub_251F16258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8 = *(void *)(a4 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 56);
  v9(a5, 1, 1);
  int v10 = (int *)type metadata accessor for AsyncTimerSequence.Iterator();
  uint64_t v11 = a5 + v10[11];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v11, 1, 1, AssociatedTypeWitness);
  uint64_t v13 = sub_251F36190();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a5, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(a5, a3, a4);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v9)(a5, 0, 1, a4);
  uint64_t v14 = a5 + v10[9];
  uint64_t v15 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v14, a1, v15);
  uint64_t v16 = a5 + v10[10];
  uint64_t v17 = sub_251F36190();
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32);
  return v18(v16, a2, v17);
}

uint64_t sub_251F164AC(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = *(void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 16);
  v3[6] = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[7] = AssociatedTypeWitness;
  uint64_t v6 = sub_251F36190();
  v3[8] = v6;
  v3[9] = *(void *)(v6 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = *(void *)(AssociatedTypeWitness - 8);
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  uint64_t v7 = sub_251F36190();
  v3[14] = v7;
  v3[15] = *(void *)(v7 - 8);
  v3[16] = swift_task_alloc();
  v3[17] = *(void *)(v4 - 8);
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251F166CC, 0, 0);
}

uint64_t sub_251F166CC()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 48);
  (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 120) + 16))(v1, *(void *)(v0 + 32), *(void *)(v0 + 112));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    uint64_t v4 = *(void *)(v0 + 88);
    (*(void (**)(void, void))(*(void *)(v0 + 120) + 8))(*(void *)(v0 + 128), *(void *)(v0 + 112));
    (*(void (**)(void, uint64_t, uint64_t, void))(v4 + 56))(*(void *)(v0 + 16), 1, 1, *(void *)(v0 + 56));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 152);
    uint64_t v8 = *(void *)(v0 + 136);
    uint64_t v9 = *(void *)(v0 + 80);
    uint64_t v10 = *(void *)(v0 + 88);
    uint64_t v11 = *(void *)(v0 + 64);
    uint64_t v12 = *(void *)(v0 + 72);
    uint64_t v13 = *(void *)(v0 + 48);
    uint64_t v40 = *(void *)(v0 + 144);
    uint64_t v41 = *(void *)(v0 + 56);
    uint64_t v14 = *(void *)(v0 + 24);
    uint64_t v15 = *(void *)(v0 + 32);
    (*(void (**)(uint64_t, void, uint64_t))(v8 + 32))(v7, *(void *)(v0 + 128), v13);
    uint64_t v16 = *(int *)(v14 + 44);
    *(_DWORD *)(v0 + 200) = v16;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v9, v15 + v16, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v40, v7, v13);
    int v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v9, 1, v41);
    uint64_t v19 = *(void *)(v0 + 136);
    uint64_t v18 = *(void *)(v0 + 144);
    uint64_t v20 = *(void *)(v0 + 96);
    uint64_t v21 = *(void *)(v0 + 48);
    if (v17 == 1)
    {
      uint64_t v23 = *(void *)(v0 + 72);
      uint64_t v22 = *(void *)(v0 + 80);
      uint64_t v24 = *(void *)(v0 + 64);
      sub_251F36BB0();
      int v25 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
      v25(v18, v21);
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    }
    else
    {
      uint64_t v26 = *(void *)(v0 + 80);
      uint64_t v27 = *(void *)(v0 + 88);
      uint64_t v28 = *(void *)(v0 + 56);
      int v25 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
      v25(*(void *)(v0 + 144), *(void *)(v0 + 48));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v20, v26, v28);
    }
    *(void *)(v0 + 160) = v25;
    uint64_t v29 = *(void *)(v0 + 96);
    uint64_t v30 = *(void *)(v0 + 88);
    uint64_t v31 = *(void *)(v0 + 56);
    uint64_t v32 = *(void *)(v0 + 32);
    uint64_t v33 = *(void *)(v0 + 24);
    swift_getAssociatedConformanceWitness();
    sub_251F365E0();
    int v34 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
    *(void *)(v0 + 168) = v34;
    *(void *)(v0 + 176) = (v30 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v34(v29, v31);
    uint64_t v35 = v32 + *(int *)(v33 + 40);
    uint64_t v36 = (void *)swift_task_alloc();
    *(void *)(v0 + 184) = v36;
    *uint64_t v36 = v0;
    v36[1] = sub_251F16A40;
    uint64_t v37 = *(void *)(v0 + 104);
    uint64_t v39 = *(void *)(v0 + 40);
    uint64_t v38 = *(void *)(v0 + 48);
    return MEMORY[0x270FA2380](v37, v35, v38, v39);
  }
}

uint64_t sub_251F16A40()
{
  *(void *)(*(void *)v1 + 192) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_251F16CCC;
  }
  else {
    uint64_t v2 = sub_251F16B54;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251F16B54()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
  uint64_t v12 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v7 = *(void *)(v0 + 48);
  uint64_t v6 = *(void *)(v0 + 56);
  uint64_t v8 = *(void *)(v0 + 32) + *(int *)(v0 + 200);
  sub_251F36BB0();
  v2(v1, v7);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v8, v12, v6);
  uint64_t v9 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56);
  v9(v8, 0, 1, v6);
  v9(*(void *)(v0 + 16), 0, 1, *(void *)(v0 + 56));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_251F16CCC()
{
  id v11 = *(id *)(v0 + 192);
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v5 = *(void *)(v0 + 120);
  uint64_t v6 = *(void *)(v0 + 88);
  uint64_t v7 = *(void *)(v0 + 48);
  uint64_t v8 = *(void *)(v0 + 32);
  (*(void (**)(void, void))(v0 + 168))(*(void *)(v0 + 104), *(void *)(v0 + 56));
  v2(v1, v7);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v7);
  (*(void (**)(void, uint64_t, uint64_t, void))(v6 + 56))(*(void *)(v0 + 16), 1, 1, *(void *)(v0 + 56));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_251F16E28(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_251AE74A0;
  return sub_251F164AC(a1, a2);
}

uint64_t sub_251F16ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_251F16F9C;
  return MEMORY[0x270FA1E90](a1, a2, a3, a5, a6);
}

uint64_t sub_251F16F9C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_251F17098@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_251F1601C(a1, a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);
  return v4(v2, a1);
}

uint64_t sub_251F170F8()
{
  return MEMORY[0x263F8E658];
}

uint64_t StaticCameraRecordingEventManager.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t static StaticCameraRecordingEventManager.== infix(_:_:)()
{
  return sub_251F34D70() & 1;
}

uint64_t StaticCameraRecordingEventManager.hash(into:)()
{
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  return sub_251F35610();
}

uint64_t sub_251F171EC()
{
  return 25705;
}

uint64_t sub_251F171F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_251F36B10();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_251F17278(uint64_t a1)
{
  unint64_t v2 = sub_251F17444();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251F172B4(uint64_t a1)
{
  unint64_t v2 = sub_251F17444();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticCameraRecordingEventManager.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5EC8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251F17444();
  sub_251F36DA0();
  sub_251F34DA0();
  sub_251A1A8EC(&qword_26B21E348);
  sub_251F36A20();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_251F17444()
{
  unint64_t result = qword_269BA5ED0;
  if (!qword_269BA5ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5ED0);
  }
  return result;
}

uint64_t StaticCameraRecordingEventManager.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StaticCameraRecordingEventManager.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5ED8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StaticCameraRecordingEventManager();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251F17444();
  sub_251F36D90();
  if (!v2)
  {
    uint64_t v11 = sub_251F34DA0();
    v15[1] = v15;
    v15[0] = *(void *)(v11 - 8);
    MEMORY[0x270FA5388](v11);
    uint64_t v13 = (char *)v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251A1A8EC(&qword_269B9CC80);
    sub_251F36880();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, char *, uint64_t))(v15[0] + 32))(v10, v13, v11);
    sub_251F178F0((uint64_t)v10, v16);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_251F17774()
{
  return sub_251F36D00();
}

uint64_t sub_251F177DC()
{
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  return sub_251F35610();
}

uint64_t sub_251F17840()
{
  return sub_251F36D00();
}

uint64_t type metadata accessor for StaticCameraRecordingEventManager()
{
  uint64_t result = qword_26B21F458;
  if (!qword_26B21F458) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_251F178F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticCameraRecordingEventManager();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_251F17958()
{
  unint64_t result = qword_269BA5EE0;
  if (!qword_269BA5EE0)
  {
    type metadata accessor for StaticCameraRecordingEventManager();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5EE0);
  }
  return result;
}

uint64_t sub_251F179B0()
{
  return sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
}

uint64_t sub_251F179D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticCameraRecordingEventManager.init(from:)(a1, a2);
}

uint64_t sub_251F179F0(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5EC8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251F17444();
  sub_251F36DA0();
  sub_251F34DA0();
  sub_251A1A8EC(&qword_26B21E348);
  sub_251F36A20();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t getEnumTagSinglePayload for StaticCameraRecordingEventManager(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251F17B58);
}

uint64_t sub_251F17B58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for StaticCameraRecordingEventManager(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251F17BD8);
}

uint64_t sub_251F17BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

unsigned char *storeEnumTagSinglePayload for StaticCameraRecordingEventManager.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x251F17CE4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticCameraRecordingEventManager.CodingKeys()
{
  return &type metadata for StaticCameraRecordingEventManager.CodingKeys;
}

unint64_t sub_251F17D20()
{
  unint64_t result = qword_269BA5EE8;
  if (!qword_269BA5EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5EE8);
  }
  return result;
}

unint64_t sub_251F17D78()
{
  unint64_t result = qword_269BA5EF0;
  if (!qword_269BA5EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5EF0);
  }
  return result;
}

unint64_t sub_251F17DD0()
{
  unint64_t result = qword_269BA5EF8;
  if (!qword_269BA5EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5EF8);
  }
  return result;
}

uint64_t sub_251F17E24@<X0>(uint64_t *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t *a5@<X8>)
{
  int v62 = a4;
  uint64_t v63 = a5;
  uint64_t v55 = *a1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5F00);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v67 = v7;
  uint64_t v68 = v8;
  MEMORY[0x270FA5388](v7);
  unint64_t v65 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v72 = a2;
  sub_251F34980();
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5F08);
  uint64_t v66 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v69 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5F10);
  uint64_t v61 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  uint64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5F18);
  uint64_t v51 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5F20);
  sub_251F34980();
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC48);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC50);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v56 = *(void *)(v20 + 64);
  MEMORY[0x270FA5388](v19);
  unint64_t v57 = (v21 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v22 = (char *)&v50 - v57;
  uint64_t v52 = sub_251A1E590(&qword_269B9CC58, &qword_269B9CC50);
  sub_251F34990();
  swift_getKeyPath();
  sub_251F34920();
  swift_release();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v20 + 8);
  uint64_t v53 = v20 + 8;
  unint64_t v54 = v23;
  v23(v22, v19);
  uint64_t v60 = MEMORY[0x270FA8A48];
  sub_251A1E590(&qword_269BA5F28, &qword_269BA5F18);
  uint64_t v58 = MEMORY[0x270FA8A70];
  sub_251A1E590(&qword_269B9CCA8, &qword_269B9CC48);
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  uint64_t v24 = v50;
  sub_251F34950();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v14, v24);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5F30);
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v50 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34960();
  sub_251A1E590(&qword_269BA5F38, &qword_269BA5F10);
  sub_251A1E590(&qword_269BA5F40, &qword_269BA5F30);
  sub_251F187E4();
  uint64_t v29 = v59;
  sub_251F34930();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v12, v29);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA42E0);
  uint64_t v61 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  uint64_t v31 = (char *)&v50 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA42D0);
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v36 = (char *)&v50 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v34);
  uint64_t v37 = (char *)&v50 - v57;
  sub_251F34990();
  swift_getKeyPath();
  sub_251F34920();
  swift_release();
  v54(v37, v19);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA42D8);
  uint64_t v39 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v41 = (char *)&v50 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v70 = v62;
  sub_251F34980();
  sub_251A1E590(&qword_269BA4300, &qword_269BA42D0);
  sub_251A1E590(&qword_269BA4308, &qword_269BA42D8);
  sub_251BD2FE8();
  sub_251F34910();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v38);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v36, v32);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5F50);
  int v43 = v63;
  v63[3] = v42;
  v43[4] = sub_251F18850();
  __swift_allocate_boxed_opaque_existential_1(v43);
  sub_251A1E590(&qword_269BA5F98, &qword_269BA5F00);
  sub_251A1E590(&qword_269BA5FA0, &qword_269BA5F08);
  sub_251A1E590(&qword_269BA5FA8, &qword_269BA42E0);
  uint64_t v45 = v64;
  int v44 = v65;
  unint64_t v46 = v69;
  uint64_t v47 = v67;
  uint64_t v48 = v59;
  sub_251F34970();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v31, v48);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v46, v45);
  return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v44, v47);
}

unint64_t sub_251F187E4()
{
  unint64_t result = qword_269BA5F48;
  if (!qword_269BA5F48)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9E2A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5F48);
  }
  return result;
}

unint64_t sub_251F18850()
{
  unint64_t result = qword_269BA5F58;
  if (!qword_269BA5F58)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269BA5F50);
    sub_251F188D4();
    sub_251F1893C();
    sub_251E321D4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5F58);
  }
  return result;
}

unint64_t sub_251F188D4()
{
  unint64_t result = qword_269BA5F60;
  if (!qword_269BA5F60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269BA5F00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5F60);
  }
  return result;
}

unint64_t sub_251F1893C()
{
  unint64_t result = qword_269BA5F68;
  if (!qword_269BA5F68)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269BA5F08);
    sub_251F189C4();
    sub_251A1E590(&qword_269BA5F90, &qword_269BA5F30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5F68);
  }
  return result;
}

unint64_t sub_251F189C4()
{
  unint64_t result = qword_269BA5F70;
  if (!qword_269BA5F70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269BA5F10);
    sub_251F18A7C(&qword_269BA5F78, &qword_269BA5F18, (void (*)(void))sub_251F18AF8, (void (*)(void))sub_251F18B84);
    sub_251F18C10((unint64_t *)&qword_269B9CC90, &qword_269B9CC48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5F70);
  }
  return result;
}

uint64_t sub_251F18A7C(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251F18AF8()
{
  unint64_t result = qword_269BA5F80;
  if (!qword_269BA5F80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269BA5F20);
    sub_251A1A8EC(&qword_269B9CC80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5F80);
  }
  return result;
}

unint64_t sub_251F18B84()
{
  unint64_t result = qword_269BA5F88;
  if (!qword_269BA5F88)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269BA5F20);
    sub_251A1A8EC(&qword_26B21E348);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5F88);
  }
  return result;
}

uint64_t sub_251F18C10(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_251A1E590(&qword_269B9CC98, &qword_269B9CC50);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251F18C84()
{
  sub_251F18E68();
  uint64_t v0 = sub_251F354D0();
  MEMORY[0x270FA5388](v0 - 8);
  sub_251F354C0();
  uint64_t v1 = sub_251F36080();
  MEMORY[0x270FA5388](v1);
  v6[1] = MEMORY[0x263F8EE78];
  sub_251F18EA8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5FC0);
  sub_251F18EF4();
  sub_251F36260();
  uint64_t v2 = sub_251F36020();
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, void))(v4 + 104))((char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F8F140]);
  uint64_t result = sub_251F36090();
  qword_269BF3278 = result;
  return result;
}

unint64_t sub_251F18E68()
{
  unint64_t result = qword_269BA5FB0;
  if (!qword_269BA5FB0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269BA5FB0);
  }
  return result;
}

unint64_t sub_251F18EA8()
{
  unint64_t result = qword_269BA5FB8;
  if (!qword_269BA5FB8)
  {
    sub_251F36080();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5FB8);
  }
  return result;
}

unint64_t sub_251F18EF4()
{
  unint64_t result = qword_269BA5FC8;
  if (!qword_269BA5FC8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269BA5FC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5FC8);
  }
  return result;
}

uint64_t sub_251F18F50()
{
  swift_bridgeObjectRelease();
  sub_251A1B064(v0 + OBJC_IVAR____TtC13HomeDataModel10CacheEntry_expirationDate, &qword_26B21EC20);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC13HomeDataModel10CacheEntry_value);
  return swift_deallocClassInstance();
}

uint64_t sub_251F18FD4()
{
  return type metadata accessor for CacheEntry(0);
}

uint64_t type metadata accessor for CacheEntry(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269BA5FD0);
}

void sub_251F18FFC()
{
  sub_251F19278(319, (unint64_t *)&qword_26B21FD28, MEMORY[0x270FA9308]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_251F190BC()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 40);
  swift_release();
  sub_251A1B064(v0 + OBJC_IVAR____TtC13HomeDataModel20CameraClipAssetCache_cacheDirectory, &qword_269B9DB68);

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_251F19160()
{
  return type metadata accessor for CameraClipAssetCache(0);
}

uint64_t type metadata accessor for CameraClipAssetCache(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269BA5FF8);
}

void sub_251F19188()
{
  sub_251F19278(319, (unint64_t *)&qword_269BA2538, MEMORY[0x270FA8EE0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_251F19278(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_251F36190();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t DataModel.favoritedTileInfoBearersInOrder.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticAccessory(0);
  uint64_t v87 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v81 = (uint64_t)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v80 = (uint64_t)&v72 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v86 = (uint64_t)&v72 - v7;
  uint64_t v8 = type metadata accessor for StaticService();
  uint64_t v79 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v85 = (uint64_t)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v84 = (uint64_t)&v72 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v72 - v13;
  uint64_t v15 = type metadata accessor for StateSnapshot(0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v18 = &v0[OBJC_IVAR____TtC13HomeDataModel9DataModel___observationRegistrar];
  uint64_t v89 = v1;
  unint64_t v77 = sub_251AD2C08();
  uint64_t v78 = v18;
  sub_251F34F10();
  swift_release();
  uint64_t v19 = (uint64_t)v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  uint64_t v76 = v19;
  sub_251F1E120(v19, (uint64_t)v17, type metadata accessor for StateSnapshot);
  uint64_t v20 = swift_bridgeObjectRetain();
  uint64_t v21 = sub_251EDC188(v20);
  sub_251F1E0C0((uint64_t)v17, type metadata accessor for StateSnapshot);
  uint64_t v22 = sub_251F1A410(v21, (uint64_t (*)(char *, unint64_t, uint64_t))sub_251F1ACE0);
  uint64_t v23 = sub_251F1A410(v22, (uint64_t (*)(char *, unint64_t, uint64_t))sub_251F1AA6C);
  id v24 = v1;
  uint64_t v25 = sub_251F1DF0C(v23, v24);
  uint64_t v75 = (uint64_t)v24;

  int64_t v26 = *(void *)(v25 + 16);
  uint64_t v27 = MEMORY[0x263F8EE78];
  uint64_t v74 = v15;
  if (v26)
  {
    char v73 = v17;
    uint64_t v88 = MEMORY[0x263F8EE78];
    sub_251A3E3E8(0, v26, 0);
    uint64_t v28 = sub_251A53EB8(v25);
    uint64_t v30 = v29;
    char v32 = v31 & 1;
    uint64_t v82 = v14;
    uint64_t v83 = v25 + 56;
    uint64_t v33 = v79;
    while ((v32 & 1) == 0)
    {
      if (v28 < 0 || v28 >= 1 << *(unsigned char *)(v25 + 32))
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        break;
      }
      if (((*(void *)(v83 + (((unint64_t)v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v28) & 1) == 0) {
        goto LABEL_31;
      }
      if (*(_DWORD *)(v25 + 36) != v30) {
        goto LABEL_32;
      }
      uint64_t v34 = *(void *)(v33 + 72);
      uint64_t v35 = v84;
      sub_251F1E120(*(void *)(v25 + 48) + v34 * v28, v84, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v36 = v35;
      uint64_t v37 = v85;
      sub_251F1E188(v36, v85, (uint64_t (*)(void))type metadata accessor for StaticService);
      sub_251F19B74(v37, (uint64_t)v14);
      sub_251F1E0C0(v37, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v38 = v88;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3E3E8(0, *(void *)(v38 + 16) + 1, 1);
        uint64_t v33 = v79;
        uint64_t v38 = v88;
      }
      unint64_t v40 = *(void *)(v38 + 16);
      unint64_t v39 = *(void *)(v38 + 24);
      if (v40 >= v39 >> 1)
      {
        sub_251A3E3E8(v39 > 1, v40 + 1, 1);
        uint64_t v33 = v79;
        uint64_t v38 = v88;
      }
      *(void *)(v38 + 16) = v40 + 1;
      uint64_t v41 = v38
          + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))
          + v40 * v34;
      uint64_t v14 = v82;
      sub_251F1E188((uint64_t)v82, v41, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v42 = sub_251A53F5C(v28, v30, 0, v25);
      uint64_t v28 = v42;
      uint64_t v30 = v43;
      char v32 = v44 & 1;
      if (!--v26)
      {
        sub_251A4ECE4(v42, v43, v32);
        swift_release();
        uint64_t v17 = v73;
        uint64_t v27 = MEMORY[0x263F8EE78];
        goto LABEL_15;
      }
    }
    __break(1u);
    goto LABEL_37;
  }
  swift_release();
  uint64_t v38 = MEMORY[0x263F8EE78];
LABEL_15:
  swift_getKeyPath();
  uint64_t v88 = v75;
  sub_251F34F10();
  swift_release();
  sub_251F1E120(v76, (uint64_t)v17, type metadata accessor for StateSnapshot);
  uint64_t v45 = swift_bridgeObjectRetain();
  uint64_t v46 = sub_251EDCBC8(v45);
  sub_251F1E0C0((uint64_t)v17, type metadata accessor for StateSnapshot);
  uint64_t v47 = sub_251D04848(v46);
  uint64_t v48 = sub_251F1A410(v47, (uint64_t (*)(char *, unint64_t, uint64_t))sub_251F1A7F8);
  uint64_t v49 = sub_251F1A410(v48, (uint64_t (*)(char *, unint64_t, uint64_t))sub_251F1A588);
  int64_t v50 = *(void *)(v49 + 16);
  if (v50)
  {
    uint64_t v88 = v27;
    sub_251A3E114(0, v50, 0);
    uint64_t v51 = sub_251A53EB8(v49);
    uint64_t v53 = v52;
    char v55 = v54 & 1;
    uint64_t v85 = v49 + 56;
    while ((v55 & 1) == 0)
    {
      if (v51 < 0 || v51 >= 1 << *(unsigned char *)(v49 + 32)) {
        goto LABEL_33;
      }
      if (((*(void *)(v85 + (((unint64_t)v51 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v51) & 1) == 0) {
        goto LABEL_34;
      }
      if (*(_DWORD *)(v49 + 36) != v53) {
        goto LABEL_35;
      }
      uint64_t v56 = *(void *)(v87 + 72);
      uint64_t v57 = v80;
      sub_251F1E120(*(void *)(v49 + 48) + v56 * v51, v80, type metadata accessor for StaticAccessory);
      uint64_t v58 = v57;
      uint64_t v59 = v81;
      sub_251F1E188(v58, v81, type metadata accessor for StaticAccessory);
      sub_251F19F90(v59, v86);
      sub_251F1E0C0(v59, type metadata accessor for StaticAccessory);
      uint64_t v60 = v88;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3E114(0, *(void *)(v60 + 16) + 1, 1);
        uint64_t v60 = v88;
      }
      unint64_t v62 = *(void *)(v60 + 16);
      unint64_t v61 = *(void *)(v60 + 24);
      if (v62 >= v61 >> 1)
      {
        sub_251A3E114(v61 > 1, v62 + 1, 1);
        uint64_t v60 = v88;
      }
      *(void *)(v60 + 16) = v62 + 1;
      sub_251F1E188(v86, v60 + ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80)) + v62 * v56, type metadata accessor for StaticAccessory);
      uint64_t v63 = sub_251A53F5C(v51, v53, 0, v49);
      uint64_t v51 = v63;
      uint64_t v53 = v64;
      char v55 = v65 & 1;
      if (!--v50)
      {
        sub_251A4ECE4(v63, v64, v55);
        swift_release();
        goto LABEL_29;
      }
    }
LABEL_37:
    __break(1u);
    swift_release();
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  swift_release();
  uint64_t v60 = MEMORY[0x263F8EE78];
LABEL_29:
  uint64_t v66 = sub_251EECFF4(v60);
  swift_bridgeObjectRelease();
  uint64_t v67 = sub_251EECEA4(v38);
  swift_bridgeObjectRelease();
  uint64_t v88 = v66;
  sub_251ED7E5C(v67);
  uint64_t v68 = v88;
  swift_getKeyPath();
  uint64_t v88 = v75;
  sub_251F34F10();
  swift_release();
  type metadata accessor for StaticHome();
  uint64_t v69 = swift_bridgeObjectRetain();
  uint64_t v70 = sub_251CFF0B0(v69, v68);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v70;
}

uint64_t sub_251F19B74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v33 = a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  MEMORY[0x270FA5388](v2 - 8);
  char v31 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v8 = *(void *)(*(void *)(v7 - 8) + 64);
  MEMORY[0x270FA5388](v7 - 8);
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v32 = (uint64_t)&v29 - v9;
  uint64_t v10 = sub_251F34DA0();
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  uint64_t v12 = v11((char *)&v29 - v9, 1, 1, v10);
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = (char *)&v29 - v9;
  v11((char *)&v29 - v9, 1, 1, v10);
  uint64_t v14 = type metadata accessor for StaticDeviceMetadata();
  uint64_t v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 1, 1, v14);
  unsigned __int8 v40 = 53;
  unsigned __int8 v39 = 5;
  MEMORY[0x270FA5388](v15);
  uint64_t v16 = (char *)&v29 - v9;
  uint64_t v17 = v11((char *)&v29 - v9, 1, 1, v10);
  MEMORY[0x270FA5388](v17);
  uint64_t v18 = (char *)&v29 - v9;
  v11((char *)&v29 - v9, 1, 1, v10);
  unsigned __int8 v38 = 53;
  uint64_t v36 = 0;
  uint64_t v19 = type metadata accessor for StaticSoftwareUpdate(0);
  long long v35 = 0u;
  uint64_t v20 = (uint64_t)v31;
  uint64_t v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v31, 1, 1, v19);
  unsigned __int8 v37 = 2;
  MEMORY[0x270FA5388](v21);
  uint64_t v22 = (char *)&v29 - v9;
  v11((char *)&v29 - v9, 1, 1, v10);
  uint64_t v28 = (char *)&v29 - v9;
  int64_t v26 = (char *)&v29 - v9;
  uint64_t v27 = (char *)&v29 - v9;
  uint64_t v23 = (uint64_t)v30;
  uint64_t v24 = v32;
  StaticService.copyReplacing(id:name:isPrimary:isDoubleHigh:isReachable:isCalibrating:isLowBattery:accessoryId:mediaSourceIdentifier:deviceMetadata:removingMediaSourceIdentifier:roomIds:roomName:shouldShowInDashboard:accessoryShowsAsIndividualTiles:isFavorite:contributesToHomeStatus:customIconSymbol:removingCustomIconSymbol:serviceKind:serviceSubKind:parentServiceId:batteryServiceId:linkedStaticServices:associatedServiceKind:removingAssociatedServiceKind:staticCharacteristicsBag:staticProfileBag:softwareUpdate:homeNonResponsiveType:bridgedStaticServices:bridgeAccessoryId:matterEndpointID:)(v32, 0, 0, 2, 0, 2, 2, 2, v33, (uint64_t)v13, 0, 1, (uint64_t)v30, 0, 0, 0, 0, 2, 2,
    2,
    2,
    0,
    0,
    0,
    &v40,
    &v39,
    (uint64_t)v26,
    (uint64_t)v27,
    0,
    &v38,
    0,
    &v36,
    (uint64_t *)&v35,
    v20,
    &v37,
    0,
    (uint64_t)v28,
    0x10000);
  sub_251A1B064((uint64_t)v22, &qword_26B21FF90);
  sub_251A1B064(v20, &qword_26B21F120);
  sub_251A1B064((uint64_t)v18, &qword_26B21FF90);
  sub_251A1B064((uint64_t)v16, &qword_26B21FF90);
  sub_251A1B064(v23, &qword_26B21F110);
  sub_251A1B064((uint64_t)v13, &qword_26B21FF90);
  return sub_251A1B064(v24, &qword_26B21FF90);
}

uint64_t sub_251F19F90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v30 = a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v29 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F090);
  MEMORY[0x270FA5388](v7 - 8);
  unint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 64);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_251F34DA0();
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  v14(v12, 1, 1, v13);
  uint64_t v15 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v9, 1, 1, v15);
  uint64_t v16 = type metadata accessor for StaticDeviceMetadata();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v6, 1, 1, v16);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_251F34D20();
  uint64_t v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  MEMORY[0x270FA5388](v21);
  uint64_t v22 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v14)(v12, 1, 1, v13);
  MEMORY[0x270FA5388](v22);
  v14(v12, 1, 1, v13);
  unsigned __int16 v33 = -260;
  uint64_t v23 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v24 = (uint64_t)v29;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v29, 1, 1, v23);
  unsigned __int8 v32 = 2;
  uint64_t v25 = (uint64_t)v28;
  StaticAccessory.copyReplacing(id:name:deviceIdentifier:deviceMetadata:dateAdded:matterNodeID:isDoubleHigh:homeId:roomIds:roomName:isCurrentAccessory:isFavorite:shouldShowInDashboard:contributesToHomeStatus:showAsIndividualTiles:staticServicesDictionary:staticServiceIDs:primaryServiceId:specialMediaCategory:accessoryCategory:bridgedAccessoryIds:showAsBridge:isCeilingFanWithLight:isPowerStrip:symptoms:softwareUpdate:isReachable:homeNonResponsiveType:)((uint64_t)v12, 0, 0, (uint64_t)v9, (uint64_t)v28, (uint64_t)v19, 0, 1, v30, 0, (uint64_t)v12, 0, 0, 0, 2, 2, 2, 2, 2,
    0,
    0,
    (uint64_t)v12,
    &v33,
    0,
    0,
    0,
    2,
    2,
    2,
    0,
    v24,
    2,
    &v32);
  sub_251A1B064(v24, &qword_26B21F120);
  sub_251A1B064((uint64_t)v12, &qword_26B21FF90);
  sub_251A1B064((uint64_t)v12, &qword_26B21FF90);
  sub_251A1B064((uint64_t)v19, &qword_26B21EC20);
  sub_251A1B064(v25, &qword_26B21F110);
  sub_251A1B064((uint64_t)v9, &qword_26B21F090);
  return sub_251A1B064((uint64_t)v12, &qword_26B21FF90);
}

uint64_t sub_251F1A410(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v4 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x263EF8340];
  char v5 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v6 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    uint64_t v8 = a2((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v6, v4);
    swift_release();
    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    unint64_t v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    uint64_t v8 = a2((char *)v9, v6, v4);
    swift_release();
    MEMORY[0x2533AC760](v9, -1, -1);
  }
  return v8;
}

uint64_t sub_251F1A588(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a2;
  uint64_t v23 = a1;
  uint64_t v4 = type metadata accessor for StaticAccessory(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = 0;
  int64_t v9 = 0;
  uint64_t v10 = *(void *)(a3 + 56);
  uint64_t v25 = a3 + 56;
  uint64_t v11 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v18 >= v14) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v25 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v14) {
        goto LABEL_24;
      }
      unint64_t v19 = *(void *)(v25 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v14) {
          goto LABEL_24;
        }
        unint64_t v19 = *(void *)(v25 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_5:
    sub_251F1E120(*(void *)(a3 + 48) + *(void *)(v5 + 72) * v16, (uint64_t)v8, type metadata accessor for StaticAccessory);
    char v17 = v8[*(int *)(v4 + 72)];
    uint64_t result = sub_251F1E0C0((uint64_t)v8, type metadata accessor for StaticAccessory);
    if ((v17 & 1) == 0)
    {
      *(unint64_t *)((char *)v23 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      if (__OFADD__(v24++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_251F1BAE0(v23, v22, v24, a3);
      }
    }
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v14) {
    goto LABEL_24;
  }
  unint64_t v19 = *(void *)(v25 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v25 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_251F1A7F8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a2;
  uint64_t v23 = a1;
  uint64_t v4 = type metadata accessor for StaticAccessory(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = 0;
  int64_t v9 = 0;
  uint64_t v10 = *(void *)(a3 + 56);
  uint64_t v25 = a3 + 56;
  uint64_t v11 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v18 >= v14) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v25 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v14) {
        goto LABEL_24;
      }
      unint64_t v19 = *(void *)(v25 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v14) {
          goto LABEL_24;
        }
        unint64_t v19 = *(void *)(v25 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_5:
    sub_251F1E120(*(void *)(a3 + 48) + *(void *)(v5 + 72) * v16, (uint64_t)v8, type metadata accessor for StaticAccessory);
    int v17 = v8[*(int *)(v4 + 60)];
    uint64_t result = sub_251F1E0C0((uint64_t)v8, type metadata accessor for StaticAccessory);
    if (v17 == 1)
    {
      *(unint64_t *)((char *)v23 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      if (__OFADD__(v24++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_251F1BAE0(v23, v22, v24, a3);
      }
    }
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v14) {
    goto LABEL_24;
  }
  unint64_t v19 = *(void *)(v25 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v25 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_251F1AA6C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a2;
  uint64_t v23 = a1;
  uint64_t v4 = type metadata accessor for StaticService();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = 0;
  int64_t v9 = 0;
  uint64_t v10 = *(void *)(a3 + 56);
  uint64_t v25 = a3 + 56;
  uint64_t v11 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v18 >= v14) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v25 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v14) {
        goto LABEL_24;
      }
      unint64_t v19 = *(void *)(v25 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v14) {
          goto LABEL_24;
        }
        unint64_t v19 = *(void *)(v25 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_5:
    sub_251F1E120(*(void *)(a3 + 48) + *(void *)(v5 + 72) * v16, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
    int v17 = v8[*(int *)(v4 + 76)];
    uint64_t result = sub_251F1E0C0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v17 == 1)
    {
      *(unint64_t *)((char *)v23 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      if (__OFADD__(v24++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_251F1BD94(v23, v22, v24, a3);
      }
    }
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v14) {
    goto LABEL_24;
  }
  unint64_t v19 = *(void *)(v25 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v25 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_251F1ACE0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v44 = a2;
  uint64_t v45 = a1;
  uint64_t v50 = type metadata accessor for StaticService();
  uint64_t v53 = *(void *)(v50 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v50);
  uint64_t v52 = (uint64_t)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v43 - v7;
  uint64_t v46 = 0;
  int64_t v9 = 0;
  uint64_t v54 = a3;
  uint64_t v12 = *(void *)(a3 + 56);
  uint64_t v11 = a3 + 56;
  uint64_t v10 = v12;
  uint64_t v13 = 1 << *(unsigned char *)(v11 - 24);
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v10;
  uint64_t v48 = v11;
  int64_t v49 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v51 = v8;
  while (v15)
  {
    uint64_t v55 = (v15 - 1) & v15;
    unint64_t v17 = __clz(__rbit64(v15)) | (v9 << 6);
LABEL_19:
    sub_251F1E120(*(void *)(v54 + 48) + *(void *)(v53 + 72) * v17, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (qword_269B9C488 != -1) {
      swift_once();
    }
    uint64_t v21 = qword_269BF31F0;
    if (!*(void *)(qword_269BF31F0 + 16)) {
      goto LABEL_5;
    }
    char v22 = v8[*(int *)(v50 + 88)];
    sub_251F36CA0();
    char v57 = v22;
    ServiceKind.rawValue.getter();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    uint64_t v23 = sub_251F36D00();
    uint64_t v24 = -1 << *(unsigned char *)(v21 + 32);
    unint64_t v25 = v23 & ~v24;
    if ((*(void *)(v21 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25))
    {
      unint64_t v47 = v17;
      uint64_t v26 = ~v24;
      while (1)
      {
        char v56 = *(unsigned char *)(*(void *)(v21 + 48) + v25);
        char v57 = v22;
        unint64_t v27 = ServiceKind.rawValue.getter();
        uint64_t v29 = v28;
        if (v27 == ServiceKind.rawValue.getter() && v29 == v30) {
          break;
        }
        char v32 = sub_251F36B10();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v32) {
          goto LABEL_32;
        }
        unint64_t v25 = (v25 + 1) & v26;
        if (((*(void *)(v21 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
          goto LABEL_5;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_32:
      uint64_t v8 = v51;
      uint64_t v33 = v52;
      sub_251F1E120((uint64_t)v51, v52, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v34 = v33 + *(int *)(v50 + 100);
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      MEMORY[0x270FA5388](v35 - 8);
      unsigned __int8 v37 = (char *)&v43 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_251A1E280(v34, (uint64_t)v37);
      sub_251F1E0C0(v33, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v38 = sub_251F34DA0();
      int v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 48))(v37, 1, v38);
      sub_251A1B064((uint64_t)v37, &qword_26B21FF90);
      uint64_t result = sub_251F1E0C0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
      unint64_t v15 = v55;
      if (v39 == 1)
      {
        *(unint64_t *)((char *)v45 + ((v47 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v47;
        BOOL v18 = __OFADD__(v46++, 1);
        if (v18) {
          goto LABEL_43;
        }
      }
    }
    else
    {
LABEL_5:
      uint64_t v8 = v51;
      uint64_t v16 = v52;
      sub_251F1E120((uint64_t)v51, v52, (uint64_t (*)(void))type metadata accessor for StaticService);
      sub_251F1E0C0(v16, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t result = sub_251F1E0C0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
      unint64_t v15 = v55;
    }
  }
  BOOL v18 = __OFADD__(v9++, 1);
  if (v18)
  {
    __break(1u);
    goto LABEL_42;
  }
  if (v9 >= v49) {
    goto LABEL_40;
  }
  unint64_t v19 = *(void *)(v48 + 8 * v9);
  if (v19)
  {
LABEL_18:
    uint64_t v55 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v9 << 6);
    goto LABEL_19;
  }
  int64_t v20 = v9 + 1;
  if (v9 + 1 >= v49) {
    goto LABEL_40;
  }
  unint64_t v19 = *(void *)(v48 + 8 * v20);
  if (v19) {
    goto LABEL_17;
  }
  int64_t v20 = v9 + 2;
  if (v9 + 2 >= v49) {
    goto LABEL_40;
  }
  unint64_t v19 = *(void *)(v48 + 8 * v20);
  if (v19) {
    goto LABEL_17;
  }
  int64_t v20 = v9 + 3;
  if (v9 + 3 >= v49)
  {
LABEL_40:
    uint64_t v40 = v44;
    uint64_t v41 = v46;
    uint64_t v42 = v54;
    swift_retain();
    return sub_251F1BD94(v45, v40, v41, v42);
  }
  unint64_t v19 = *(void *)(v48 + 8 * v20);
  if (v19)
  {
LABEL_17:
    int64_t v9 = v20;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v49) {
      goto LABEL_40;
    }
    unint64_t v19 = *(void *)(v48 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_18;
    }
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_251F1B24C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = MEMORY[0x263F8EE88];
LABEL_34:
    swift_release();
    return v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA0450);
  uint64_t result = sub_251F363F0();
  uint64_t v9 = result;
  uint64_t v28 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_22;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_37;
    }
    if (v15 >= a2) {
      goto LABEL_34;
    }
    unint64_t v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_34;
      }
      unint64_t v16 = v28[v11];
      if (!v16) {
        break;
      }
    }
LABEL_21:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_22:
    char v18 = *(unsigned char *)(*(void *)(v4 + 48) + v14);
    sub_251F36CA0();
    sub_251F36CE0();
    uint64_t result = sub_251F36D00();
    uint64_t v19 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(unsigned char *)(*(void *)(v9 + 48) + v22) = v18;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    if (!v5) {
      goto LABEL_34;
    }
  }
  uint64_t v17 = v15 + 2;
  if (v17 >= a2) {
    goto LABEL_34;
  }
  unint64_t v16 = v28[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_21;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_34;
    }
    unint64_t v16 = v28[v11];
    ++v17;
    if (v16) {
      goto LABEL_21;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_251F1B4B0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E188);
  uint64_t result = sub_251F363F0();
  uint64_t v6 = result;
  unsigned __int8 v37 = a1;
  uint64_t v38 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      uint64_t v39 = v11;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v38)
      {
LABEL_37:
        swift_release();
        return v6;
      }
      unint64_t v16 = v37[v15];
      uint64_t v17 = v11 + 1;
      if (!v16)
      {
        uint64_t v17 = v11 + 2;
        if (v11 + 2 >= v38) {
          goto LABEL_37;
        }
        unint64_t v16 = v37[v17];
        if (!v16)
        {
          uint64_t v17 = v11 + 3;
          if (v11 + 3 >= v38) {
            goto LABEL_37;
          }
          unint64_t v16 = v37[v17];
          if (!v16)
          {
            uint64_t v18 = v11 + 4;
            if (v11 + 4 >= v38) {
              goto LABEL_37;
            }
            unint64_t v16 = v37[v18];
            if (!v16)
            {
              while (1)
              {
                uint64_t v17 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_41;
                }
                if (v17 >= v38) {
                  goto LABEL_37;
                }
                unint64_t v16 = v37[v17];
                ++v18;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v17 = v11 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      uint64_t v39 = v17;
      unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
    }
    uint64_t v19 = sub_251F34DA0();
    uint64_t v40 = &v37;
    uint64_t v20 = *(void *)(v19 - 8);
    MEMORY[0x270FA5388](v19);
    unint64_t v22 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v24 = v23;
    uint64_t v25 = v4;
    uint64_t v26 = *(void *)(v4 + 48);
    uint64_t v27 = *(void *)(v24 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v20 + 16))(v22, v26 + v27 * v14, v19);
    sub_251AD2788();
    uint64_t result = sub_251F35600();
    uint64_t v28 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v31 = __clz(__rbit64((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v34 = v30 == v33;
        if (v30 == v33) {
          unint64_t v30 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v12 + 8 * v30);
      }
      while (v35 == -1);
      unint64_t v31 = __clz(__rbit64(~v35)) + (v30 << 6);
    }
    *(void *)(v12 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v20 + 32))(*(void *)(v6 + 48) + v31 * v27, v22, v19);
    ++*(void *)(v6 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t v4 = v25;
    uint64_t v11 = v39;
    if (!v5) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_251F1B808(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = MEMORY[0x263F8EE88];
LABEL_36:
    swift_release();
    return v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D300);
  uint64_t result = sub_251F363F0();
  uint64_t v9 = result;
  uint64_t v28 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v28[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v28[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    char v18 = *(unsigned char *)(*(void *)(v4 + 48) + v14);
    sub_251F36CA0();
    sub_251F36CD0();
    sub_251F357B0();
    uint64_t result = sub_251F36D00();
    uint64_t v19 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(unsigned char *)(*(void *)(v9 + 48) + v22) = v18;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v28[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_251F1BAE0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for StaticAccessory(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D2F8);
  uint64_t result = sub_251F363F0();
  uint64_t v12 = result;
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  if (a2 < 1) {
    unint64_t v14 = 0;
  }
  else {
    unint64_t v14 = *a1;
  }
  uint64_t v15 = 0;
  uint64_t v16 = result + 56;
  while (1)
  {
    if (v14)
    {
      unint64_t v17 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v18 = v17 | (v15 << 6);
    }
    else
    {
      uint64_t v19 = v15 + 1;
      if (__OFADD__(v15, 1)) {
        goto LABEL_30;
      }
      if (v19 >= v27)
      {
LABEL_27:
        swift_release();
        return v12;
      }
      unint64_t v20 = v26[v19];
      ++v15;
      if (!v20)
      {
        uint64_t v15 = v19 + 1;
        if (v19 + 1 >= v27) {
          goto LABEL_27;
        }
        unint64_t v20 = v26[v15];
        if (!v20)
        {
          uint64_t v15 = v19 + 2;
          if (v19 + 2 >= v27) {
            goto LABEL_27;
          }
          unint64_t v20 = v26[v15];
          if (!v20)
          {
            uint64_t v21 = v19 + 3;
            if (v21 >= v27) {
              goto LABEL_27;
            }
            unint64_t v20 = v26[v21];
            if (!v20)
            {
              while (1)
              {
                uint64_t v15 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_31;
                }
                if (v15 >= v27) {
                  goto LABEL_27;
                }
                unint64_t v20 = v26[v15];
                ++v21;
                if (v20) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v15 = v21;
          }
        }
      }
LABEL_24:
      unint64_t v14 = (v20 - 1) & v20;
      unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
    }
    uint64_t v22 = *(void *)(v9 + 72);
    sub_251F1E120(*(void *)(a4 + 48) + v22 * v18, (uint64_t)v11, type metadata accessor for StaticAccessory);
    sub_251F36CA0();
    StaticAccessory.hash(into:)(v28);
    sub_251F36D00();
    unint64_t v23 = sub_251F36290();
    *(void *)(v16 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t result = sub_251F1E188((uint64_t)v11, *(void *)(v12 + 48) + v23 * v22, type metadata accessor for StaticAccessory);
    ++*(void *)(v12 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    if (!a3) {
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_251F1BD94(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v31 = a1;
  uint64_t v7 = type metadata accessor for StaticService();
  uint64_t v32 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D268);
  uint64_t result = sub_251F363F0();
  uint64_t v10 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v31;
  }
  uint64_t v13 = 0;
  uint64_t v14 = result + 56;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v30)
      {
LABEL_37:
        swift_release();
        return v10;
      }
      unint64_t v18 = v31[v17];
      ++v13;
      if (!v18)
      {
        uint64_t v13 = v17 + 1;
        if (v17 + 1 >= v30) {
          goto LABEL_37;
        }
        unint64_t v18 = v31[v13];
        if (!v18)
        {
          uint64_t v13 = v17 + 2;
          if (v17 + 2 >= v30) {
            goto LABEL_37;
          }
          unint64_t v18 = v31[v13];
          if (!v18)
          {
            uint64_t v19 = v17 + 3;
            if (v19 >= v30) {
              goto LABEL_37;
            }
            unint64_t v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                uint64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v30) {
                  goto LABEL_37;
                }
                unint64_t v18 = v31[v13];
                ++v19;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v13 = v19;
          }
        }
      }
LABEL_24:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    uint64_t v20 = *(void *)(v32 + 72);
    sub_251F1E120(*(void *)(a4 + 48) + v20 * v16, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251F36CA0();
    StaticService.hash(into:)(v33);
    uint64_t result = sub_251F36D00();
    uint64_t v21 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v14 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v14 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v27 = v23 == v26;
        if (v23 == v26) {
          unint64_t v23 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v14 + 8 * v23);
      }
      while (v28 == -1);
      unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(void *)(v14 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    uint64_t result = sub_251F1E188((uint64_t)v9, *(void *)(v10 + 48) + v24 * v20, (uint64_t (*)(void))type metadata accessor for StaticService);
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_251F1C0D4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v31 = a1;
  uint64_t v7 = type metadata accessor for StaticActionSet();
  uint64_t v32 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D2C8);
  uint64_t result = sub_251F363F0();
  uint64_t v10 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v31;
  }
  uint64_t v13 = 0;
  uint64_t v14 = result + 56;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v30)
      {
LABEL_37:
        swift_release();
        return v10;
      }
      unint64_t v18 = v31[v17];
      ++v13;
      if (!v18)
      {
        uint64_t v13 = v17 + 1;
        if (v17 + 1 >= v30) {
          goto LABEL_37;
        }
        unint64_t v18 = v31[v13];
        if (!v18)
        {
          uint64_t v13 = v17 + 2;
          if (v17 + 2 >= v30) {
            goto LABEL_37;
          }
          unint64_t v18 = v31[v13];
          if (!v18)
          {
            uint64_t v19 = v17 + 3;
            if (v19 >= v30) {
              goto LABEL_37;
            }
            unint64_t v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                uint64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v30) {
                  goto LABEL_37;
                }
                unint64_t v18 = v31[v13];
                ++v19;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v13 = v19;
          }
        }
      }
LABEL_24:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    uint64_t v20 = *(void *)(v32 + 72);
    sub_251F1E120(*(void *)(a4 + 48) + v20 * v16, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    sub_251F36CA0();
    StaticActionSet.hash(into:)(v33);
    uint64_t result = sub_251F36D00();
    uint64_t v21 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v14 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v14 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v27 = v23 == v26;
        if (v23 == v26) {
          unint64_t v23 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v14 + 8 * v23);
      }
      while (v28 == -1);
      unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(void *)(v14 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    uint64_t result = sub_251F1E188((uint64_t)v9, *(void *)(v10 + 48) + v24 * v20, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_251F1C414(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for StaticRoom(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D290);
  uint64_t result = sub_251F363F0();
  uint64_t v12 = result;
  unint64_t v26 = a1;
  uint64_t v27 = a2;
  if (a2 < 1) {
    unint64_t v14 = 0;
  }
  else {
    unint64_t v14 = *a1;
  }
  uint64_t v15 = 0;
  uint64_t v16 = result + 56;
  while (1)
  {
    if (v14)
    {
      unint64_t v17 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v18 = v17 | (v15 << 6);
    }
    else
    {
      uint64_t v19 = v15 + 1;
      if (__OFADD__(v15, 1)) {
        goto LABEL_30;
      }
      if (v19 >= v27)
      {
LABEL_27:
        swift_release();
        return v12;
      }
      unint64_t v20 = v26[v19];
      ++v15;
      if (!v20)
      {
        uint64_t v15 = v19 + 1;
        if (v19 + 1 >= v27) {
          goto LABEL_27;
        }
        unint64_t v20 = v26[v15];
        if (!v20)
        {
          uint64_t v15 = v19 + 2;
          if (v19 + 2 >= v27) {
            goto LABEL_27;
          }
          unint64_t v20 = v26[v15];
          if (!v20)
          {
            uint64_t v21 = v19 + 3;
            if (v21 >= v27) {
              goto LABEL_27;
            }
            unint64_t v20 = v26[v21];
            if (!v20)
            {
              while (1)
              {
                uint64_t v15 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_31;
                }
                if (v15 >= v27) {
                  goto LABEL_27;
                }
                unint64_t v20 = v26[v15];
                ++v21;
                if (v20) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v15 = v21;
          }
        }
      }
LABEL_24:
      unint64_t v14 = (v20 - 1) & v20;
      unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
    }
    uint64_t v22 = *(void *)(v9 + 72);
    sub_251F1E120(*(void *)(a4 + 48) + v22 * v18, (uint64_t)v11, type metadata accessor for StaticRoom);
    sub_251F36CA0();
    StaticRoom.hash(into:)(v28);
    sub_251F36D00();
    unint64_t v23 = sub_251F36290();
    *(void *)(v16 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t result = sub_251F1E188((uint64_t)v11, *(void *)(v12 + 48) + v23 * v22, type metadata accessor for StaticRoom);
    ++*(void *)(v12 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    if (!a3) {
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_251F1C6C8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = MEMORY[0x263F8EE88];
LABEL_36:
    swift_release();
    return v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA0440);
  uint64_t result = sub_251F363F0();
  uint64_t v9 = result;
  uint64_t v28 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v28[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v28[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    id v18 = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t result = sub_251F36110();
    uint64_t v19 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(void *)(*(void *)(v9 + 48) + 8 * v22) = v18;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v28[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_251F1C928(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a1;
  uint64_t v7 = (int *)type metadata accessor for StaticServiceGroup();
  uint64_t v29 = *((void *)v7 - 1);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D2A8);
  uint64_t result = sub_251F363F0();
  uint64_t v10 = result;
  uint64_t v25 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v26;
  }
  uint64_t v13 = 0;
  uint64_t v27 = a4;
  uint64_t v28 = result + 56;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v13 << 6);
    }
    else
    {
      uint64_t v16 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_33;
      }
      if (v16 >= v25)
      {
LABEL_30:
        swift_release();
        return v10;
      }
      unint64_t v17 = v26[v16];
      ++v13;
      if (!v17)
      {
        uint64_t v13 = v16 + 1;
        if (v16 + 1 >= v25) {
          goto LABEL_30;
        }
        unint64_t v17 = v26[v13];
        if (!v17)
        {
          uint64_t v13 = v16 + 2;
          if (v16 + 2 >= v25) {
            goto LABEL_30;
          }
          unint64_t v17 = v26[v13];
          if (!v17)
          {
            uint64_t v18 = v16 + 3;
            if (v18 >= v25) {
              goto LABEL_30;
            }
            unint64_t v17 = v26[v18];
            if (!v17)
            {
              while (1)
              {
                uint64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_34;
                }
                if (v13 >= v25) {
                  goto LABEL_30;
                }
                unint64_t v17 = v26[v13];
                ++v18;
                if (v17) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v13 = v18;
          }
        }
      }
LABEL_24:
      unint64_t v12 = (v17 - 1) & v17;
      unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
    }
    uint64_t v19 = *(void *)(v29 + 72);
    sub_251F1E120(*(void *)(a4 + 48) + v19 * v15, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    sub_251F36CA0();
    sub_251F34DA0();
    sub_251AD2788();
    sub_251F35610();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    sub_251F36CC0();
    sub_251F36CB0();
    uint64_t v20 = *(void *)&v9[v7[8]];
    swift_bridgeObjectRetain();
    sub_251A54708(v30, v20);
    swift_bridgeObjectRelease();
    if (*(void *)&v9[v7[9] + 8])
    {
      sub_251F36CC0();
      swift_bridgeObjectRetain();
      sub_251F357B0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_251F36CC0();
    }
    sub_251F36CC0();
    uint64_t v21 = *(void *)&v9[v7[11]];
    swift_bridgeObjectRetain();
    sub_251A454AC((uint64_t)v30, v21);
    swift_bridgeObjectRelease();
    sub_251F36D00();
    uint64_t v22 = v28;
    unint64_t v23 = sub_251F36290();
    *(void *)(v22 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t result = sub_251F1E188((uint64_t)v9, *(void *)(v10 + 48) + v23 * v19, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v27;
    if (!a3) {
      goto LABEL_30;
    }
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_251F1CD0C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for StaticActionSet();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D2C8);
  uint64_t result = sub_251F363F0();
  uint64_t v12 = result;
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  if (a2 < 1) {
    unint64_t v14 = 0;
  }
  else {
    unint64_t v14 = *a1;
  }
  uint64_t v15 = 0;
  uint64_t v16 = result + 56;
  while (1)
  {
    if (v14)
    {
      unint64_t v17 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v18 = v17 | (v15 << 6);
    }
    else
    {
      uint64_t v19 = v15 + 1;
      if (__OFADD__(v15, 1)) {
        goto LABEL_30;
      }
      if (v19 >= v27)
      {
LABEL_27:
        swift_release();
        return v12;
      }
      unint64_t v20 = v26[v19];
      ++v15;
      if (!v20)
      {
        uint64_t v15 = v19 + 1;
        if (v19 + 1 >= v27) {
          goto LABEL_27;
        }
        unint64_t v20 = v26[v15];
        if (!v20)
        {
          uint64_t v15 = v19 + 2;
          if (v19 + 2 >= v27) {
            goto LABEL_27;
          }
          unint64_t v20 = v26[v15];
          if (!v20)
          {
            uint64_t v21 = v19 + 3;
            if (v21 >= v27) {
              goto LABEL_27;
            }
            unint64_t v20 = v26[v21];
            if (!v20)
            {
              while (1)
              {
                uint64_t v15 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_31;
                }
                if (v15 >= v27) {
                  goto LABEL_27;
                }
                unint64_t v20 = v26[v15];
                ++v21;
                if (v20) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v15 = v21;
          }
        }
      }
LABEL_24:
      unint64_t v14 = (v20 - 1) & v20;
      unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
    }
    uint64_t v22 = *(void *)(v9 + 72);
    sub_251F1E120(*(void *)(a4 + 48) + v22 * v18, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    sub_251F36CA0();
    StaticActionSet.hash(into:)(v28);
    sub_251F36D00();
    unint64_t v23 = sub_251F36290();
    *(void *)(v16 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t result = sub_251F1E188((uint64_t)v11, *(void *)(v12 + 48) + v23 * v22, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    ++*(void *)(v12 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    if (!a3) {
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_251F1CFC0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for StaticMediaProfile();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D2B0);
  uint64_t result = sub_251F363F0();
  uint64_t v12 = result;
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  if (a2 < 1) {
    unint64_t v14 = 0;
  }
  else {
    unint64_t v14 = *a1;
  }
  uint64_t v15 = 0;
  uint64_t v16 = result + 56;
  while (1)
  {
    if (v14)
    {
      unint64_t v17 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v18 = v17 | (v15 << 6);
    }
    else
    {
      uint64_t v19 = v15 + 1;
      if (__OFADD__(v15, 1)) {
        goto LABEL_30;
      }
      if (v19 >= v27)
      {
LABEL_27:
        swift_release();
        return v12;
      }
      unint64_t v20 = v26[v19];
      ++v15;
      if (!v20)
      {
        uint64_t v15 = v19 + 1;
        if (v19 + 1 >= v27) {
          goto LABEL_27;
        }
        unint64_t v20 = v26[v15];
        if (!v20)
        {
          uint64_t v15 = v19 + 2;
          if (v19 + 2 >= v27) {
            goto LABEL_27;
          }
          unint64_t v20 = v26[v15];
          if (!v20)
          {
            uint64_t v21 = v19 + 3;
            if (v21 >= v27) {
              goto LABEL_27;
            }
            unint64_t v20 = v26[v21];
            if (!v20)
            {
              while (1)
              {
                uint64_t v15 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_31;
                }
                if (v15 >= v27) {
                  goto LABEL_27;
                }
                unint64_t v20 = v26[v15];
                ++v21;
                if (v20) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v15 = v21;
          }
        }
      }
LABEL_24:
      unint64_t v14 = (v20 - 1) & v20;
      unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
    }
    uint64_t v22 = *(void *)(v9 + 72);
    sub_251F1E120(*(void *)(a4 + 48) + v22 * v18, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    sub_251F36CA0();
    StaticMediaProfile.hash(into:)(v28);
    sub_251F36D00();
    unint64_t v23 = sub_251F36290();
    *(void *)(v16 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t result = sub_251F1E188((uint64_t)v11, *(void *)(v12 + 48) + v23 * v22, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    ++*(void *)(v12 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    if (!a3) {
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_251F1D274(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for StaticMediaSystem();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D2B8);
  uint64_t result = sub_251F363F0();
  uint64_t v12 = result;
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  if (a2 < 1) {
    unint64_t v14 = 0;
  }
  else {
    unint64_t v14 = *a1;
  }
  uint64_t v15 = 0;
  uint64_t v16 = result + 56;
  while (1)
  {
    if (v14)
    {
      unint64_t v17 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v18 = v17 | (v15 << 6);
    }
    else
    {
      uint64_t v19 = v15 + 1;
      if (__OFADD__(v15, 1)) {
        goto LABEL_30;
      }
      if (v19 >= v27)
      {
LABEL_27:
        swift_release();
        return v12;
      }
      unint64_t v20 = v26[v19];
      ++v15;
      if (!v20)
      {
        uint64_t v15 = v19 + 1;
        if (v19 + 1 >= v27) {
          goto LABEL_27;
        }
        unint64_t v20 = v26[v15];
        if (!v20)
        {
          uint64_t v15 = v19 + 2;
          if (v19 + 2 >= v27) {
            goto LABEL_27;
          }
          unint64_t v20 = v26[v15];
          if (!v20)
          {
            uint64_t v21 = v19 + 3;
            if (v21 >= v27) {
              goto LABEL_27;
            }
            unint64_t v20 = v26[v21];
            if (!v20)
            {
              while (1)
              {
                uint64_t v15 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_31;
                }
                if (v15 >= v27) {
                  goto LABEL_27;
                }
                unint64_t v20 = v26[v15];
                ++v21;
                if (v20) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v15 = v21;
          }
        }
      }
LABEL_24:
      unint64_t v14 = (v20 - 1) & v20;
      unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
    }
    uint64_t v22 = *(void *)(v9 + 72);
    sub_251F1E120(*(void *)(a4 + 48) + v22 * v18, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    sub_251F36CA0();
    StaticMediaSystem.hash(into:)(v28);
    sub_251F36D00();
    unint64_t v23 = sub_251F36290();
    *(void *)(v16 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t result = sub_251F1E188((uint64_t)v11, *(void *)(v12 + 48) + v23 * v22, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    ++*(void *)(v12 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    if (!a3) {
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_251F1D528(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for StaticMediaSystemComponent();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D230);
  uint64_t result = sub_251F363F0();
  uint64_t v12 = result;
  if (a2 < 1) {
    unint64_t v14 = 0;
  }
  else {
    unint64_t v14 = *a1;
  }
  uint64_t v15 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v15 << 6);
    }
    else
    {
      uint64_t v18 = v15 + 1;
      if (__OFADD__(v15, 1)) {
        goto LABEL_30;
      }
      if (v18 >= a2)
      {
LABEL_27:
        swift_release();
        return v12;
      }
      unint64_t v19 = a1[v18];
      ++v15;
      if (!v19)
      {
        uint64_t v15 = v18 + 1;
        if (v18 + 1 >= a2) {
          goto LABEL_27;
        }
        unint64_t v19 = a1[v15];
        if (!v19)
        {
          uint64_t v15 = v18 + 2;
          if (v18 + 2 >= a2) {
            goto LABEL_27;
          }
          unint64_t v19 = a1[v15];
          if (!v19)
          {
            uint64_t v20 = v18 + 3;
            if (v20 >= a2) {
              goto LABEL_27;
            }
            unint64_t v19 = a1[v20];
            if (!v19)
            {
              while (1)
              {
                uint64_t v15 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_31;
                }
                if (v15 >= a2) {
                  goto LABEL_27;
                }
                unint64_t v19 = a1[v15];
                ++v20;
                if (v19) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v15 = v20;
          }
        }
      }
LABEL_24:
      unint64_t v14 = (v19 - 1) & v19;
      unint64_t v17 = __clz(__rbit64(v19)) + (v15 << 6);
    }
    sub_251F1E120(*(void *)(a4 + 48) + *(void *)(v9 + 72) * v17, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
    uint64_t result = sub_251A6EDFC((uint64_t)v11, v12);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    if (!a3) {
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_251F1D74C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = MEMORY[0x263F8EE88];
LABEL_36:
    swift_release();
    return v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F1B0);
  uint64_t result = sub_251F363F0();
  uint64_t v9 = result;
  uint64_t v28 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v28[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v28[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    char v18 = *(unsigned char *)(*(void *)(v4 + 48) + v14);
    sub_251F36CA0();
    CharacteristicKind.rawValue.getter();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_251F36D00();
    uint64_t v19 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(unsigned char *)(*(void *)(v9 + 48) + v22) = v18;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v28[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_251F1D9E0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v36 = a2;
  unsigned __int8 v37 = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F240);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StaticAccessory(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v39 = (uint64_t)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for StaticService();
  uint64_t v47 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  unint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = a4;
  uint64_t v49 = a3;
  uint64_t v14 = *(void *)(a3 + 56);
  uint64_t v43 = a3 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  uint64_t v46 = a4 + OBJC_IVAR____TtC13HomeDataModel9DataModel___observationRegistrar;
  uint64_t v45 = a4 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  uint64_t result = swift_beginAccess();
  uint64_t v38 = 0;
  int64_t v19 = 0;
  int64_t v44 = (unint64_t)(v15 + 63) >> 6;
  unint64_t v20 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  uint64_t v40 = v10;
  uint64_t v41 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  while (1)
  {
    if (v17)
    {
      unint64_t v21 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v22 = v21 | (v19 << 6);
      goto LABEL_19;
    }
    BOOL v23 = __OFADD__(v19++, 1);
    if (v23)
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v19 >= v44) {
      goto LABEL_32;
    }
    unint64_t v24 = *(void *)(v43 + 8 * v19);
    if (!v24) {
      break;
    }
LABEL_18:
    unint64_t v17 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v19 << 6);
LABEL_19:
    sub_251F1E120(*(void *)(v49 + 48) + *(void *)(v47 + 72) * v22, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticService);
    swift_getKeyPath();
    uint64_t v50 = v48;
    sub_251AD2C08();
    sub_251F34F10();
    swift_release();
    uint64_t v26 = *(void *)(v45 + *(int *)(type metadata accessor for StateSnapshot(0) + 32));
    if (!*(void *)(v26 + 16))
    {
      (*v20)(v8, 1, 1, v9);
      goto LABEL_5;
    }
    uint64_t v27 = (uint64_t)&v13[*(int *)(v42 + 44)];
    swift_bridgeObjectRetain();
    unint64_t v28 = sub_2519FE584(v27);
    if (v29)
    {
      sub_251F1E120(*(void *)(v26 + 56) + *(void *)(v40 + 72) * v28, (uint64_t)v8, type metadata accessor for StaticAccessory);
      uint64_t v30 = 0;
    }
    else
    {
      uint64_t v30 = 1;
    }
    (*v20)(v8, v30, 1, v9);
    swift_bridgeObjectRelease();
    if ((*v41)(v8, 1, v9) == 1)
    {
LABEL_5:
      sub_251A1B064((uint64_t)v8, &qword_26B21F240);
      uint64_t result = sub_251F1E0C0((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticService);
    }
    else
    {
      uint64_t v31 = v39;
      sub_251F1E188((uint64_t)v8, v39, type metadata accessor for StaticAccessory);
      int v32 = *(unsigned __int8 *)(v31 + *(int *)(v9 + 72));
      sub_251F1E0C0(v31, type metadata accessor for StaticAccessory);
      uint64_t result = sub_251F1E0C0((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (v32 == 1)
      {
        *(unint64_t *)((char *)v37 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
        BOOL v23 = __OFADD__(v38++, 1);
        if (v23) {
          goto LABEL_35;
        }
      }
    }
  }
  int64_t v25 = v19 + 1;
  if (v19 + 1 >= v44) {
    goto LABEL_32;
  }
  unint64_t v24 = *(void *)(v43 + 8 * v25);
  if (v24) {
    goto LABEL_17;
  }
  int64_t v25 = v19 + 2;
  if (v19 + 2 >= v44) {
    goto LABEL_32;
  }
  unint64_t v24 = *(void *)(v43 + 8 * v25);
  if (v24) {
    goto LABEL_17;
  }
  int64_t v25 = v19 + 3;
  if (v19 + 3 >= v44)
  {
LABEL_32:
    uint64_t v33 = v36;
    uint64_t v34 = v38;
    uint64_t v35 = v49;
    swift_retain();
    return sub_251F1BD94(v37, v33, v34, v35);
  }
  unint64_t v24 = *(void *)(v43 + 8 * v25);
  if (v24)
  {
LABEL_17:
    int64_t v19 = v25;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v19 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v19 >= v44) {
      goto LABEL_32;
    }
    unint64_t v24 = *(void *)(v43 + 8 * v19);
    ++v25;
    if (v24) {
      goto LABEL_18;
    }
  }
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_251F1DF0C(uint64_t a1, void *a2)
{
  v15[1] = *MEMORY[0x263EF8340];
  char v4 = *(unsigned char *)(a1 + 32);
  unsigned int v5 = v4 & 0x3F;
  unint64_t v6 = (unint64_t)((1 << v4) + 63) >> 6;
  uint64_t isStackAllocationSafe = a2;
  uint64_t v8 = (void *)isStackAllocationSafe;
  if (v5 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    uint64_t v9 = (char *)v15 - ((8 * v6 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v9, 8 * v6);
    id v10 = v8;
    uint64_t v11 = sub_251F1D9E0((unint64_t *)v9, v6, a1, (uint64_t)v10);
    swift_release();

    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v12 = (void *)swift_slowAlloc();
    bzero(v12, 8 * v6);
    id v13 = v8;
    uint64_t v11 = sub_251F1D9E0((unint64_t *)v12, v6, a1, (uint64_t)v13);
    swift_release();

    MEMORY[0x2533AC760](v12, -1, -1);
  }
  return v11;
}

uint64_t sub_251F1E0C0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251F1E120(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251F1E188(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251F1E1F0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v28 - v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v31 = a1 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v9;
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v15 = 0;
  uint64_t v30 = (char *)MEMORY[0x263F8EE78];
  if (!v12) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v16 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v16 | (v15 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v15 << 6))
  {
    sub_251F286D4(*(void *)(a1 + 56) + *(void *)(v3 + 72) * i, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    sub_251F285A8((uint64_t)v8, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    char v18 = &v6[*(int *)(v2 + 32)];
    if (v18[24])
    {
      uint64_t result = sub_251F28610((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
      if (v12) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v22 = *((void *)v18 + 1);
      uint64_t v23 = *((void *)v18 + 2);
      uint64_t v29 = *(void *)v18;
      sub_251A1B4AC(v29, v22, v23, 0);
      sub_251F28610((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_251F10D98(0, *((void *)v30 + 2) + 1, 1, v30);
        uint64_t v30 = (char *)result;
      }
      unint64_t v25 = *((void *)v30 + 2);
      unint64_t v24 = *((void *)v30 + 3);
      unint64_t v26 = v25 + 1;
      if (v25 >= v24 >> 1)
      {
        unint64_t v28 = v25 + 1;
        uint64_t result = (uint64_t)sub_251F10D98((char *)(v24 > 1), v25 + 1, 1, v30);
        unint64_t v26 = v28;
        uint64_t v30 = (char *)result;
      }
      uint64_t v27 = v30;
      *((void *)v30 + 2) = v26;
      v27[v25 + 32] = v29;
      if (v12) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v19 >= v13) {
      goto LABEL_29;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v19);
    ++v15;
    if (!v20)
    {
      int64_t v15 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_29;
      }
      unint64_t v20 = *(void *)(v31 + 8 * v15);
      if (!v20)
      {
        int64_t v15 = v19 + 2;
        if (v19 + 2 >= v13) {
          goto LABEL_29;
        }
        unint64_t v20 = *(void *)(v31 + 8 * v15);
        if (!v20)
        {
          int64_t v15 = v19 + 3;
          if (v19 + 3 >= v13) {
            goto LABEL_29;
          }
          unint64_t v20 = *(void *)(v31 + 8 * v15);
          if (!v20) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v12 = (v20 - 1) & v20;
  }
  int64_t v21 = v19 + 4;
  if (v21 >= v13)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v30;
  }
  unint64_t v20 = *(void *)(v31 + 8 * v21);
  if (v20)
  {
    int64_t v15 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v15 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v15 >= v13) {
      goto LABEL_29;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v15);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

BOOL static SecurityIssue.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t static SecuritySummarizer.garageDoorIcon(_:)(uint64_t a1, char a2)
{
  unint64_t result = 0xD000000000000010;
  if (a2) {
    return 0xD00000000000002ELL;
  }
  switch(a1)
  {
    case 0:
    case 2:
    case 3:
      return result;
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return 0xD00000000000002ELL;
  }
  return result;
}

uint64_t static SecuritySummarizer.garageDoorString(_:)(uint64_t a1, char a2)
{
  if (a2) {
    return 0;
  }
  switch(a1)
  {
    case 0:
      uint64_t v2 = 0xD000000000000022;
      uint64_t v3 = "HFCharacteristicValueDoorStateOpen";
      goto LABEL_6;
    case 1:
      uint64_t v2 = 0xD000000000000024;
      uint64_t v3 = "HFCharacteristicValueDoorStateClosed";
LABEL_6:
      unint64_t v5 = (unint64_t)(v3 - 32) | 0x8000000000000000;
      goto LABEL_11;
    case 2:
      unint64_t v6 = "HFCharacteristicValueDoorStateOpening";
      goto LABEL_10;
    case 3:
      unint64_t v6 = "HFCharacteristicValueDoorStateClosing";
      goto LABEL_10;
    case 4:
      unint64_t v6 = "HFCharacteristicValueDoorStateStopped";
LABEL_10:
      unint64_t v5 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      uint64_t v2 = 0xD000000000000025;
LABEL_11:
      uint64_t result = static String.hfLocalized(_:)(v2, v5);
      break;
    default:
      return 0;
  }
  return result;
}

unint64_t static SecuritySummarizer.doorIcon(isSecure:)(char a1)
{
  if (a1) {
    return 0xD000000000000015;
  }
  else {
    return 0xD000000000000013;
  }
}

uint64_t static SecuritySummarizer.doorString(isSecure:)()
{
  return sub_251F1E78C();
}

unint64_t static SecuritySummarizer.windowIcon(isSecure:)(char a1)
{
  if (a1) {
    return 0xD000000000000015;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t static SecuritySummarizer.windowString(isSecure:)()
{
  return sub_251F1E78C();
}

uint64_t sub_251F1E78C()
{
  uint64_t v0 = sub_251F356B0();
  MEMORY[0x270FA5388](v0 - 8);
  sub_251F35660();
  uint64_t v1 = sub_251F34DE0();
  MEMORY[0x270FA5388](v1 - 8);
  sub_251F34DD0();
  return sub_251F35750();
}

BOOL static SecuritySummarizer.doorIsSecure(intValue:)(uint64_t a1)
{
  return a1 == 0;
}

unint64_t static SecuritySummarizer.lockIcon(_:)(uint64_t a1, char a2)
{
  if (a2) {
    return 0xD000000000000022;
  }
  unint64_t result = 0x65706F2E6B636F6CLL;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0x6C69662E6B636F6CLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000027;
      break;
    default:
      return 0xD000000000000022;
  }
  return result;
}

unint64_t static SecuritySummarizer.securitySystemIcon(_:)()
{
  return 0xD000000000000015;
}

BOOL static SecurityIssue.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

uint64_t SecurityIssue.hash(into:)()
{
  return sub_251F36CB0();
}

unint64_t sub_251F1EA04(char a1)
{
  unint64_t result = 0xD000000000000017;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x617261476E65706FLL;
      break;
    case 2:
      unint64_t result = 0x726F6F446E65706FLL;
      break;
    case 3:
      unint64_t result = 0x64656B636F6C6E75;
      break;
    case 4:
      unint64_t result = 0x646E69576E65706FLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    case 6:
      unint64_t result = 0x6F707365726E6F6ELL;
      break;
    case 7:
      unint64_t result = 1701736302;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_251F1EB30()
{
  return sub_251F1EA04(*v0);
}

uint64_t sub_251F1EB38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251F2820C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251F1EB60(uint64_t a1)
{
  unint64_t v2 = sub_251F26D60();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251F1EB9C(uint64_t a1)
{
  unint64_t v2 = sub_251F26D60();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251F1EBD8(uint64_t a1)
{
  unint64_t v2 = sub_251F26E5C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251F1EC14(uint64_t a1)
{
  unint64_t v2 = sub_251F26E5C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251F1EC50(uint64_t a1)
{
  unint64_t v2 = sub_251F26DB4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251F1EC8C(uint64_t a1)
{
  unint64_t v2 = sub_251F26DB4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251F1ECC8(uint64_t a1)
{
  unint64_t v2 = sub_251F26E08();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251F1ED04(uint64_t a1)
{
  unint64_t v2 = sub_251F26E08();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251F1ED40(uint64_t a1)
{
  unint64_t v2 = sub_251F26F58();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251F1ED7C(uint64_t a1)
{
  unint64_t v2 = sub_251F26F58();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251F1EDB8(uint64_t a1)
{
  unint64_t v2 = sub_251F26FAC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251F1EDF4(uint64_t a1)
{
  unint64_t v2 = sub_251F26FAC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251F1EE30(uint64_t a1)
{
  unint64_t v2 = sub_251F26EB0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251F1EE6C(uint64_t a1)
{
  unint64_t v2 = sub_251F26EB0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251F1EEA8(uint64_t a1)
{
  unint64_t v2 = sub_251F27000();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251F1EEE4(uint64_t a1)
{
  unint64_t v2 = sub_251F27000();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251F1EF20(uint64_t a1)
{
  unint64_t v2 = sub_251F26F04();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251F1EF5C(uint64_t a1)
{
  unint64_t v2 = sub_251F26F04();
  return MEMORY[0x270FA00B8](a1, v2);
}

void *static SecurityIssue.allCases.getter()
{
  return &unk_270264FC8;
}

uint64_t SecurityIssue.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA6100);
  uint64_t v50 = *(void *)(v3 - 8);
  uint64_t v51 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v49 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA6108);
  uint64_t v47 = *(void *)(v5 - 8);
  uint64_t v48 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v46 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA6110);
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v45 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v43 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA6118);
  uint64_t v41 = *(void *)(v9 - 8);
  uint64_t v42 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v40 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA6120);
  uint64_t v38 = *(void *)(v11 - 8);
  uint64_t v39 = v11;
  MEMORY[0x270FA5388](v11);
  unsigned __int8 v37 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA6128);
  uint64_t v35 = *(void *)(v13 - 8);
  uint64_t v36 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v34 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA6130);
  uint64_t v32 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  unint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA6138);
  uint64_t v31 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  int64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA6140);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v52 = v20;
  uint64_t v53 = v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251F26D60();
  sub_251F36DA0();
  switch(v24)
  {
    case 1:
      char v55 = 1;
      sub_251F26FAC();
      uint64_t v25 = v52;
      sub_251F36900();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v33);
      return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v23, v25);
    case 2:
      char v56 = 2;
      sub_251F26F58();
      unint64_t v26 = v34;
      uint64_t v25 = v52;
      sub_251F36900();
      uint64_t v28 = v35;
      uint64_t v27 = v36;
      goto LABEL_10;
    case 3:
      char v57 = 3;
      sub_251F26F04();
      unint64_t v26 = v37;
      uint64_t v25 = v52;
      sub_251F36900();
      uint64_t v28 = v38;
      uint64_t v27 = v39;
      goto LABEL_10;
    case 4:
      char v58 = 4;
      sub_251F26EB0();
      unint64_t v26 = v40;
      uint64_t v25 = v52;
      sub_251F36900();
      uint64_t v28 = v41;
      uint64_t v27 = v42;
      goto LABEL_10;
    case 5:
      char v59 = 5;
      sub_251F26E5C();
      unint64_t v26 = v43;
      uint64_t v25 = v52;
      sub_251F36900();
      uint64_t v28 = v44;
      uint64_t v27 = v45;
      goto LABEL_10;
    case 6:
      char v60 = 6;
      sub_251F26E08();
      unint64_t v26 = v46;
      uint64_t v25 = v52;
      sub_251F36900();
      uint64_t v28 = v47;
      uint64_t v27 = v48;
      goto LABEL_10;
    case 7:
      char v61 = 7;
      sub_251F26DB4();
      unint64_t v26 = v49;
      uint64_t v25 = v52;
      sub_251F36900();
      uint64_t v28 = v50;
      uint64_t v27 = v51;
LABEL_10:
      (*(void (**)(char *, uint64_t))(v28 + 8))(v26, v27);
      break;
    default:
      char v54 = 0;
      sub_251F27000();
      uint64_t v25 = v52;
      sub_251F36900();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v19, v17);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v23, v25);
}

uint64_t SecurityIssue.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t SecurityIssue.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t v62 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA6190);
  uint64_t v57 = *(void *)(v3 - 8);
  uint64_t v58 = v3;
  MEMORY[0x270FA5388](v3);
  char v65 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA6198);
  uint64_t v44 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  char v61 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA61A0);
  uint64_t v56 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v64 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA61A8);
  uint64_t v54 = *(void *)(v7 - 8);
  uint64_t v55 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v63 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA61B0);
  uint64_t v52 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  char v60 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA61B8);
  uint64_t v50 = *(void *)(v10 - 8);
  uint64_t v51 = v10;
  MEMORY[0x270FA5388](v10);
  char v59 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA61C0);
  uint64_t v48 = *(void *)(v12 - 8);
  uint64_t v49 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA61C8);
  uint64_t v46 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA61D0);
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a1[3];
  uint64_t v66 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_251F26D60();
  uint64_t v23 = v67;
  sub_251F36D90();
  if (v23) {
    goto LABEL_6;
  }
  uint64_t v43 = v17;
  uint64_t v42 = v15;
  uint64_t v25 = v63;
  uint64_t v24 = v64;
  unint64_t v26 = v65;
  uint64_t v67 = v19;
  uint64_t v27 = v21;
  uint64_t v28 = sub_251F368E0();
  if (*(void *)(v28 + 16) != 1)
  {
    uint64_t v31 = sub_251F36490();
    swift_allocError();
    uint64_t v33 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
    void *v33 = &type metadata for SecurityIssue;
    sub_251F36780();
    sub_251F36480();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v31 - 8) + 104))(v33, *MEMORY[0x263F8DCB0], v31);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v27, v18);
LABEL_6:
    uint64_t v34 = (uint64_t)v66;
    return __swift_destroy_boxed_opaque_existential_0(v34);
  }
  char v29 = *(unsigned char *)(v28 + 32);
  switch(v29)
  {
    case 1:
      char v69 = 1;
      sub_251F26FAC();
      sub_251F36770();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v14, v49);
      break;
    case 2:
      char v70 = 2;
      sub_251F26F58();
      uint64_t v36 = v59;
      sub_251F36770();
      uint64_t v38 = v50;
      uint64_t v37 = v51;
      goto LABEL_12;
    case 3:
      char v71 = 3;
      sub_251F26F04();
      uint64_t v39 = v60;
      sub_251F36770();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v39, v47);
      break;
    case 4:
      char v72 = 4;
      sub_251F26EB0();
      uint64_t v36 = v25;
      sub_251F36770();
      uint64_t v38 = v54;
      uint64_t v37 = v55;
LABEL_12:
      (*(void (**)(char *, uint64_t))(v38 + 8))(v36, v37);
      break;
    case 5:
      char v73 = 5;
      sub_251F26E5C();
      sub_251F36770();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v53);
      break;
    case 6:
      char v74 = 6;
      sub_251F26E08();
      uint64_t v40 = v61;
      sub_251F36770();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v40, v45);
      break;
    case 7:
      char v75 = 7;
      sub_251F26DB4();
      sub_251F36770();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v26, v58);
      break;
    default:
      char v68 = 0;
      sub_251F27000();
      uint64_t v30 = v43;
      sub_251F36770();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v30, v42);
      break;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v27, v18);
  uint64_t v34 = (uint64_t)v66;
  unsigned char *v62 = v29;
  return __swift_destroy_boxed_opaque_existential_0(v34);
}

void sub_251F2008C(void *a1@<X8>)
{
  *a1 = &unk_270264FC8;
}

uint64_t sub_251F2009C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return SecurityIssue.init(from:)(a1, a2);
}

uint64_t sub_251F200B4(void *a1)
{
  return SecurityIssue.encode(to:)(a1);
}

uint64_t sub_251F200CC()
{
  unint64_t v0 = sub_251A1A144((uint64_t)&unk_270264FF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA6290);
  uint64_t result = swift_arrayDestroy();
  qword_269BA6008 = v0;
  return result;
}

uint64_t static SecurityIssue.iconName.getter()
{
  return sub_251CCBF98(&qword_269B9C538);
}

uint64_t sub_251F20144()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA6288);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_251F60EC0;
  *(unsigned char *)(inited + 32) = 0;
  *(void *)(inited + 40) = static String.hfLocalized(_:)(0xD000000000000025, 0x8000000251F6BC50);
  *(void *)(inited + 48) = v1;
  *(unsigned char *)(inited + 56) = 1;
  *(void *)(inited + 64) = static String.hfLocalized(_:)(0xD00000000000002CLL, 0x8000000251F73B30);
  *(void *)(inited + 72) = v2;
  *(unsigned char *)(inited + 80) = 2;
  *(void *)(inited + 88) = static String.hfLocalized(_:)(0xD00000000000001BLL, 0x8000000251F6BFD0);
  *(void *)(inited + 96) = v3;
  *(unsigned char *)(inited + 104) = 3;
  *(void *)(inited + 112) = static String.hfLocalized(_:)(0xD00000000000001BLL, 0x8000000251F6BFD0);
  *(void *)(inited + 120) = v4;
  *(unsigned char *)(inited + 128) = 4;
  *(void *)(inited + 136) = static String.hfLocalized(_:)(0xD00000000000001DLL, 0x8000000251F6BA20);
  *(void *)(inited + 144) = v5;
  *(unsigned char *)(inited + 152) = 5;
  *(void *)(inited + 160) = static String.hfLocalized(_:)(0xD000000000000025, 0x8000000251F6BC50);
  *(void *)(inited + 168) = v6;
  *(unsigned char *)(inited + 176) = 6;
  *(void *)(inited + 184) = static String.hfLocalized(_:)(0xD000000000000019, 0x8000000251F73B60);
  *(void *)(inited + 192) = v7;
  unint64_t v8 = sub_251A1A144(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA6290);
  uint64_t result = swift_arrayDestroy();
  qword_269BA6010 = v8;
  return result;
}

uint64_t static SecurityIssue.localizedSingularTitle.getter()
{
  return sub_251CCBF98(&qword_269B9C540);
}

uint64_t sub_251F20300()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA6288);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_251F60EC0;
  *(unsigned char *)(inited + 32) = 0;
  *(void *)(inited + 40) = static String.hfLocalized(_:)(0xD00000000000002BLL, 0x8000000251F6C480);
  *(void *)(inited + 48) = v1;
  *(unsigned char *)(inited + 56) = 1;
  *(void *)(inited + 64) = static String.hfLocalized(_:)(0xD000000000000032, 0x8000000251F73AD0);
  *(void *)(inited + 72) = v2;
  *(unsigned char *)(inited + 80) = 2;
  *(void *)(inited + 88) = static String.hfLocalized(_:)(0xD000000000000021, 0x8000000251F6C850);
  *(void *)(inited + 96) = v3;
  *(unsigned char *)(inited + 104) = 3;
  *(void *)(inited + 112) = static String.hfLocalized(_:)(0xD000000000000021, 0x8000000251F6C850);
  *(void *)(inited + 120) = v4;
  *(unsigned char *)(inited + 128) = 4;
  *(void *)(inited + 136) = static String.hfLocalized(_:)(0xD000000000000023, 0x8000000251F6C220);
  *(void *)(inited + 144) = v5;
  *(unsigned char *)(inited + 152) = 5;
  *(void *)(inited + 160) = static String.hfLocalized(_:)(0xD00000000000002BLL, 0x8000000251F6C480);
  *(void *)(inited + 168) = v6;
  *(unsigned char *)(inited + 176) = 6;
  *(void *)(inited + 184) = static String.hfLocalized(_:)(0xD00000000000001FLL, 0x8000000251F73B10);
  *(void *)(inited + 192) = v7;
  unint64_t v8 = sub_251A1A144(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA6290);
  uint64_t result = swift_arrayDestroy();
  qword_269BA6018 = v8;
  return result;
}

uint64_t static SecurityIssue.localizedPluralTitle.getter()
{
  return sub_251CCBF98(&qword_269B9C548);
}

uint64_t sub_251F204C0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA6288);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_251F60EC0;
  *(unsigned char *)(inited + 32) = 0;
  *(void *)(inited + 40) = static String.hfLocalized(_:)(0xD00000000000002BLL, 0x8000000251F739E0);
  *(void *)(inited + 48) = v1;
  *(unsigned char *)(inited + 56) = 1;
  *(void *)(inited + 64) = static String.hfLocalized(_:)(0xD000000000000025, 0x8000000251F73A10);
  *(void *)(inited + 72) = v2;
  *(unsigned char *)(inited + 80) = 2;
  *(void *)(inited + 88) = static String.hfLocalized(_:)(0xD000000000000022, 0x8000000251F6D2D0);
  *(void *)(inited + 96) = v3;
  *(unsigned char *)(inited + 104) = 3;
  *(void *)(inited + 112) = static String.hfLocalized(_:)(0xD000000000000023, 0x8000000251F73A40);
  *(void *)(inited + 120) = v4;
  *(unsigned char *)(inited + 128) = 4;
  *(void *)(inited + 136) = static String.hfLocalized(_:)(0xD000000000000021, 0x8000000251F73A70);
  *(void *)(inited + 144) = v5;
  *(unsigned char *)(inited + 152) = 5;
  *(void *)(inited + 160) = static String.hfLocalized(_:)(0xD00000000000002ALL, 0x8000000251F73AA0);
  *(void *)(inited + 168) = v6;
  *(unsigned char *)(inited + 176) = 6;
  *(void *)(inited + 184) = static String.hfLocalized(_:)(0xD00000000000001ELL, 0x8000000251F6D380);
  *(void *)(inited + 192) = v7;
  unint64_t v8 = (void *)sub_251A1A144(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA6290);
  uint64_t result = swift_arrayDestroy();
  off_269BA6020 = v8;
  return result;
}

uint64_t static SecurityIssue.localizedSingularValue.getter()
{
  return sub_251CCBF98(&qword_269B9C550);
}

uint64_t sub_251F20674()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA6288);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_251F60EC0;
  *(unsigned char *)(inited + 32) = 0;
  *(void *)(inited + 40) = static String.hfLocalized(_:)(0xD000000000000033, 0x8000000251F73340);
  *(void *)(inited + 48) = v1;
  *(unsigned char *)(inited + 56) = 1;
  *(void *)(inited + 64) = static String.hfLocalized(_:)(0xD00000000000002ALL, 0x8000000251F738E0);
  *(void *)(inited + 72) = v2;
  *(unsigned char *)(inited + 80) = 2;
  *(void *)(inited + 88) = static String.hfLocalized(_:)(0xD000000000000024, 0x8000000251F73910);
  *(void *)(inited + 96) = v3;
  *(unsigned char *)(inited + 104) = 3;
  *(void *)(inited + 112) = static String.hfLocalized(_:)(0xD000000000000028, 0x8000000251F73940);
  *(void *)(inited + 120) = v4;
  *(unsigned char *)(inited + 128) = 4;
  *(void *)(inited + 136) = static String.hfLocalized(_:)(0xD000000000000026, 0x8000000251F73970);
  *(void *)(inited + 144) = v5;
  *(unsigned char *)(inited + 152) = 5;
  *(void *)(inited + 160) = static String.hfLocalized(_:)(0xD000000000000032, 0x8000000251F732D0);
  *(void *)(inited + 168) = v6;
  *(unsigned char *)(inited + 176) = 6;
  *(void *)(inited + 184) = static String.hfLocalized(_:)(0xD00000000000003ELL, 0x8000000251F739A0);
  *(void *)(inited + 192) = v7;
  unint64_t v8 = (void *)sub_251A1A144(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA6290);
  uint64_t result = swift_arrayDestroy();
  off_269BA6028 = v8;
  return result;
}

uint64_t static SecurityIssue.localizedMultipleValueFormat.getter()
{
  return sub_251CCBF98(&qword_269B9C558);
}

uint64_t static SecuritySummarizer.lockString(_:)(uint64_t a1, char a2)
{
  uint64_t result = 0x9380E29380E2;
  if ((a2 & 1) == 0)
  {
    switch(a1)
    {
      case 0:
        uint64_t v4 = 0xD000000000000030;
        uint64_t v5 = "HFCharacteristicValueLockMechanismStateUnsecured";
        goto LABEL_7;
      case 1:
        uint64_t v6 = "HFCharacteristicValueLockMechanismStateSecured";
        goto LABEL_9;
      case 2:
        uint64_t v4 = 0xD00000000000002DLL;
        uint64_t v5 = "HFCharacteristicValueLockMechanismStateJammed";
LABEL_7:
        unint64_t v7 = (unint64_t)(v5 - 32) | 0x8000000000000000;
        goto LABEL_10;
      case 3:
        uint64_t v6 = "HFCharacteristicValueLockMechanismStateUnknown";
LABEL_9:
        unint64_t v7 = (unint64_t)(v6 - 32) | 0x8000000000000000;
        uint64_t v4 = 0xD00000000000002ELL;
LABEL_10:
        uint64_t result = static String.hfLocalized(_:)(v4, v7);
        break;
      default:
        return result;
    }
  }
  return result;
}

BOOL static SecuritySummarizer.lockIsSecure(_:)(uint64_t a1, char a2)
{
  return (a2 & 1) == 0 && a1 == 1;
}

uint64_t static SecuritySummarizer.securitySystemString(_:)(uint64_t a1, char a2)
{
  uint64_t result = 0x9380E29380E2;
  if ((a2 & 1) == 0)
  {
    switch(a1)
    {
      case 0:
        uint64_t v4 = "HFCharacteristicValueCurrentSecuritySystemStateStayArm";
        goto LABEL_6;
      case 1:
        uint64_t v4 = "HFCharacteristicValueCurrentSecuritySystemStateAwayArm";
LABEL_6:
        unint64_t v5 = (unint64_t)(v4 - 32) | 0x8000000000000000;
        uint64_t v6 = 0xD000000000000036;
        goto LABEL_11;
      case 2:
        uint64_t v6 = 0xD000000000000037;
        unint64_t v7 = "HFCharacteristicValueCurrentSecuritySystemStateNightArm";
        goto LABEL_10;
      case 3:
        uint64_t v6 = 0xD000000000000037;
        unint64_t v7 = "HFCharacteristicValueCurrentSecuritySystemStateDisarmed";
        goto LABEL_10;
      case 4:
        uint64_t v6 = 0xD000000000000038;
        unint64_t v7 = "HFCharacteristicValueCurrentSecuritySystemStateTriggered";
LABEL_10:
        unint64_t v5 = (unint64_t)(v7 - 32) | 0x8000000000000000;
LABEL_11:
        uint64_t result = static String.hfLocalized(_:)(v6, v5);
        break;
      default:
        return result;
    }
  }
  return result;
}

uint64_t static SecuritySummarizer.securitySystemIsSecure(_:)(uint64_t a1, char a2)
{
  return sub_251D82EE8(a1, a2 & 1, (uint64_t)&unk_2702650B8);
}

uint64_t sub_251F20A00()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA03E8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_251F3F270;
  if (qword_269B9C568 != -1) {
    swift_once();
  }
  uint64_t v1 = unk_269BA6040;
  uint64_t v2 = qword_269BA6048;
  uint64_t v3 = unk_269BA6050;
  uint64_t v4 = qword_269BA6058;
  *(void *)(v0 + 32) = qword_269BA6038;
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 48) = v2;
  *(void *)(v0 + 56) = v3;
  *(void *)(v0 + 64) = v4;
  uint64_t v5 = qword_269B9C570;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v6 = *(void *)algn_269BA6068;
  uint64_t v7 = qword_269BA6070;
  uint64_t v8 = unk_269BA6078;
  uint64_t v9 = qword_269BA6080;
  *(void *)(v0 + 72) = qword_269BA6060;
  *(void *)(v0 + 80) = v6;
  *(void *)(v0 + 88) = v7;
  *(void *)(v0 + 96) = v8;
  *(void *)(v0 + 104) = v9;
  uint64_t v10 = qword_269B9C578;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = unk_269BA6090;
  uint64_t v12 = qword_269BA6098;
  uint64_t v13 = unk_269BA60A0;
  uint64_t v14 = qword_269BA60A8;
  *(void *)(v0 + 112) = qword_269BA6088;
  *(void *)(v0 + 120) = v11;
  *(void *)(v0 + 128) = v12;
  *(void *)(v0 + 136) = v13;
  *(void *)(v0 + 144) = v14;
  uint64_t v15 = qword_269B9C580;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15 != -1) {
    swift_once();
  }
  uint64_t v16 = *(void *)algn_269BA60B8;
  uint64_t v17 = qword_269BA60C0;
  uint64_t v18 = unk_269BA60C8;
  uint64_t v19 = qword_269BA60D0;
  *(void *)(v0 + 152) = qword_269BA60B0;
  *(void *)(v0 + 160) = v16;
  *(void *)(v0 + 168) = v17;
  *(void *)(v0 + 176) = v18;
  *(void *)(v0 + 184) = v19;
  uint64_t v20 = qword_269B9C588;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v21 = unk_269BA60E0;
  uint64_t v22 = qword_269BA60E8;
  uint64_t v23 = unk_269BA60F0;
  uint64_t v24 = qword_269BA60F8;
  *(void *)(v0 + 192) = qword_269BA60D8;
  *(void *)(v0 + 200) = v21;
  *(void *)(v0 + 208) = v22;
  *(void *)(v0 + 216) = v23;
  *(void *)(v0 + 224) = v24;
  qword_269BA6030 = v0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t static SecuritySummarizer.allSecuritySummaryFetchSpecifications.getter()
{
  return sub_251CCBF98(&qword_269B9C560);
}

void sub_251F20CA8()
{
  qword_269BA6038 = 0xD000000000000013;
  unk_269BA6040 = 0x8000000251F738C0;
  qword_269BA6048 = (uint64_t)&unk_270263058;
  unk_269BA6050 = MEMORY[0x263F8EE78];
  qword_269BA6058 = (uint64_t)&unk_270263080;
}

uint64_t static SecuritySummarizer.garageDoorOpenersFetchSpecification.getter@<X0>(void *a1@<X8>)
{
  if (qword_269B9C568 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_269BA6040;
  uint64_t v3 = qword_269BA6048;
  uint64_t v4 = unk_269BA6050;
  uint64_t v5 = qword_269BA6058;
  *a1 = qword_269BA6038;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_251F20D90()
{
  qword_269BA6060 = 0xD000000000000019;
  *(void *)algn_269BA6068 = 0x8000000251F738A0;
  qword_269BA6070 = (uint64_t)&unk_2702630A8;
  unk_269BA6078 = MEMORY[0x263F8EE78];
  qword_269BA6080 = (uint64_t)&unk_2702630D0;
}

uint64_t static SecuritySummarizer.motorizedDoorsAndWindowsFetchSpecification.getter@<X0>(void *a1@<X8>)
{
  if (qword_269B9C570 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_269BA6068;
  uint64_t v3 = qword_269BA6070;
  uint64_t v4 = unk_269BA6078;
  uint64_t v5 = qword_269BA6080;
  *a1 = qword_269BA6060;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_251F20E78()
{
  qword_269BA6088 = 0x1000000000000032;
  unk_269BA6090 = 0x8000000251F73860;
  qword_269BA6098 = (uint64_t)&unk_2702630F8;
  unk_269BA60A0 = MEMORY[0x263F8EE78];
  qword_269BA60A8 = (uint64_t)&unk_270263120;
}

uint64_t static SecuritySummarizer.doorsAndWindowsAndGarageDoorsContactSensorsFetchSpecification.getter@<X0>(void *a1@<X8>)
{
  if (qword_269B9C578 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_269BA6090;
  uint64_t v3 = qword_269BA6098;
  uint64_t v4 = unk_269BA60A0;
  uint64_t v5 = qword_269BA60A8;
  *a1 = qword_269BA6088;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_251F20F60()
{
  qword_269BA60B0 = 0x736B636F4CLL;
  *(void *)algn_269BA60B8 = 0xE500000000000000;
  qword_269BA60C0 = (uint64_t)&unk_270263148;
  unk_269BA60C8 = MEMORY[0x263F8EE78];
  qword_269BA60D0 = (uint64_t)&unk_270263170;
}

uint64_t static SecuritySummarizer.locksFetchSpecification.getter@<X0>(void *a1@<X8>)
{
  if (qword_269B9C580 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_269BA60B8;
  uint64_t v3 = qword_269BA60C0;
  uint64_t v4 = unk_269BA60C8;
  uint64_t v5 = qword_269BA60D0;
  *a1 = qword_269BA60B0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_251F21040()
{
  qword_269BA60D8 = 0xD000000000000010;
  unk_269BA60E0 = 0x8000000251F73840;
  qword_269BA60E8 = (uint64_t)&unk_270263198;
  unk_269BA60F0 = MEMORY[0x263F8EE78];
  qword_269BA60F8 = (uint64_t)&unk_2702631C0;
}

uint64_t static SecuritySummarizer.securitySystemsFetchSpecification.getter@<X0>(void *a1@<X8>)
{
  if (qword_269B9C588 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_269BA60E0;
  uint64_t v3 = qword_269BA60E8;
  uint64_t v4 = unk_269BA60F0;
  uint64_t v5 = qword_269BA60F8;
  *a1 = qword_269BA60D8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_251F21128(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v60 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v52 = (uint64_t)&v47 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v47 - v16;
  uint64_t v48 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  uint64_t v51 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  uint64_t v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA6298);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v24 = ~v23;
  uint64_t v25 = *(void *)(a1 + 64);
  uint64_t v26 = -v23;
  uint64_t v53 = a1;
  uint64_t v54 = a1 + 64;
  if (v26 < 64) {
    uint64_t v27 = ~(-1 << v26);
  }
  else {
    uint64_t v27 = -1;
  }
  uint64_t v55 = v24;
  uint64_t v56 = 0;
  uint64_t v57 = v27 & v25;
  uint64_t v58 = a2;
  uint64_t v59 = a3;
  uint64_t v50 = a1;
  swift_bridgeObjectRetain();
  uint64_t v49 = a3;
  swift_retain();
  sub_251AF64C8((uint64_t)v22);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9E8);
  for (int i = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v22, 1, v28);
        ;
        int i = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v22, 1, v28))
  {
    if (i == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      sub_251A1E630();
      return swift_release();
    }
    uint64_t v32 = (uint64_t)&v22[*(int *)(v28 + 48)];
    sub_251F285A8((uint64_t)v22, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
    sub_251F285A8(v32, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    uint64_t v33 = *(void **)a5;
    unint64_t v35 = sub_2519FEFC8((uint64_t)v19);
    uint64_t v36 = v33[2];
    BOOL v37 = (v34 & 1) == 0;
    uint64_t v38 = v36 + v37;
    if (__OFADD__(v36, v37)) {
      break;
    }
    char v39 = v34;
    if (v33[3] >= v38)
    {
      if (a4)
      {
        uint64_t v42 = *(void **)a5;
        if (v34) {
          goto LABEL_5;
        }
      }
      else
      {
        sub_251A16B18();
        uint64_t v42 = *(void **)a5;
        if (v39) {
          goto LABEL_5;
        }
      }
    }
    else
    {
      sub_251A09E74(v38, a4 & 1);
      unint64_t v40 = sub_2519FEFC8((uint64_t)v19);
      if ((v39 & 1) != (v41 & 1)) {
        goto LABEL_22;
      }
      unint64_t v35 = v40;
      uint64_t v42 = *(void **)a5;
      if (v39)
      {
LABEL_5:
        unint64_t v30 = *(void *)(v60 + 72) * v35;
        sub_251F286D4(v42[7] + v30, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
        uint64_t v31 = v52;
        sub_251F286D4((uint64_t)v13, v52, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
        sub_251F28610((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
        sub_251F28610((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
        sub_251F28610((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
        sub_251F28670(v31, *(void *)(*(void *)a5 + 56) + v30);
        goto LABEL_6;
      }
    }
    v42[(v35 >> 6) + 8] |= 1 << v35;
    sub_251F285A8((uint64_t)v19, v42[6] + *(void *)(v51 + 72) * v35, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
    sub_251F285A8((uint64_t)v17, v42[7] + *(void *)(v60 + 72) * v35, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    uint64_t v43 = v42[2];
    BOOL v44 = __OFADD__(v43, 1);
    uint64_t v45 = v43 + 1;
    if (v44) {
      goto LABEL_21;
    }
    v42[2] = v45;
LABEL_6:
    sub_251AF64C8((uint64_t)v22);
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9E8);
    a4 = 1;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251F21610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9DFA0) + 48);
  uint64_t v5 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9E8) + 48);
  sub_251F286D4(a1, a2, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
  return sub_251F286D4(v4, v5, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
}

uint64_t sub_251F216A4(uint64_t a1, uint64_t a2)
{
  uint64_t v104 = a2;
  uint64_t v4 = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v102 = *(void *)(v4 - 8);
  uint64_t v103 = (int *)v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v93 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9E0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v93 - v14;
  uint64_t v16 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v105 = (unint64_t *)((char *)&v93 - v21);
  uint64_t v22 = a1 + *(int *)(v20 + 24);
  uint64_t result = type metadata accessor for StaticCharacteristic();
  uint64_t v24 = v22 + *(int *)(result + 24);
  int v25 = *(unsigned __int8 *)(v24 + 16) - 1;
  uint64_t v101 = v15;
  uint64_t v26 = *(void *)v24;
  switch(v25)
  {
    case 0:
      uint64_t v26 = *(void *)v24;
      goto LABEL_9;
    case 1:
      uint64_t v26 = (unsigned __int16)*(void *)v24;
      goto LABEL_9;
    case 2:
      uint64_t v26 = *(void *)v24;
      goto LABEL_9;
    case 3:
      if (v26 < 0)
      {
        __break(1u);
        JUMPOUT(0x251F21FF4);
      }
      goto LABEL_9;
    case 4:
    case 5:
      uint64_t v26 = (int)v26;
LABEL_9:
      if (v26 == 1) {
        return result;
      }
      uint64_t v100 = v2;
      sub_251F286D4(a1, (uint64_t)v105, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      uint64_t v99 = &v93;
      uint64_t v43 = *(void *)(*(void *)(v42 - 8) + 64);
      MEMORY[0x270FA5388](v42 - 8);
      BOOL v44 = (char *)&v93 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v45 = sub_251F34DA0();
      uint64_t v46 = *(void *)(v45 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56))(v44, 1, 1, v45);
      switch(v26)
      {
        case 0:
          uint64_t v47 = a1 + *(int *)(v16 + 20);
          uint64_t v48 = (uint64_t *)(v47 + *(int *)(type metadata accessor for StaticService() + 20));
          uint64_t v49 = *v48;
          uint64_t v97 = v48[1];
          uint64_t v98 = v49;
          swift_bridgeObjectRetain();
          uint64_t v50 = 0xD000000000000022;
          unint64_t v51 = 0x8000000251F6D2D0;
          goto LABEL_16;
        case 2:
          uint64_t v56 = a1 + *(int *)(v16 + 20);
          uint64_t v57 = (uint64_t *)(v56 + *(int *)(type metadata accessor for StaticService() + 20));
          uint64_t v58 = *v57;
          uint64_t v97 = v57[1];
          uint64_t v98 = v58;
          swift_bridgeObjectRetain();
          uint64_t v59 = "HFCharacteristicValueDoorStateOpening";
          goto LABEL_15;
        case 3:
          uint64_t v60 = a1 + *(int *)(v16 + 20);
          char v61 = (uint64_t *)(v60 + *(int *)(type metadata accessor for StaticService() + 20));
          uint64_t v62 = *v61;
          uint64_t v97 = v61[1];
          uint64_t v98 = v62;
          swift_bridgeObjectRetain();
          uint64_t v59 = "HFCharacteristicValueDoorStateClosing";
LABEL_15:
          unint64_t v51 = (unint64_t)(v59 - 32) | 0x8000000000000000;
          uint64_t v50 = 0xD000000000000025;
LABEL_16:
          uint64_t v55 = static String.hfLocalized(_:)(v50, v51);
          unint64_t v95 = v63;
          uint64_t v96 = (unint64_t *)v55;
          unint64_t v94 = 0xD000000000000010;
          uint64_t v64 = "door.garage.open";
          goto LABEL_19;
        case 4:
          uint64_t v65 = a1 + *(int *)(v16 + 20);
          uint64_t v66 = (uint64_t *)(v65 + *(int *)(type metadata accessor for StaticService() + 20));
          uint64_t v67 = *v66;
          uint64_t v97 = v66[1];
          uint64_t v98 = v67;
          swift_bridgeObjectRetain();
          uint64_t v55 = static String.hfLocalized(_:)(0xD000000000000025, 0x8000000251F6DDB0);
          unint64_t v95 = v68;
          uint64_t v96 = (unint64_t *)v55;
          goto LABEL_18;
        default:
          uint64_t v52 = a1 + *(int *)(v16 + 20);
          uint64_t v53 = (uint64_t *)(v52 + *(int *)(type metadata accessor for StaticService() + 20));
          uint64_t v54 = *v53;
          uint64_t v97 = v53[1];
          uint64_t v98 = v54;
          uint64_t v55 = swift_bridgeObjectRetain();
          unint64_t v95 = 0;
          uint64_t v96 = 0;
LABEL_18:
          unint64_t v94 = 0xD00000000000002ELL;
          uint64_t v64 = "door.garage.open.trianglebadge.exclamationmark";
LABEL_19:
          unint64_t v93 = (unint64_t)(v64 - 32) | 0x8000000000000000;
          uint64_t v69 = MEMORY[0x270FA5388](v55);
          char v71 = (char *)&v93 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
          MEMORY[0x270FA5388](v69);
          char v72 = (char *)&v93 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
          sub_251A1E280((uint64_t)v44, (uint64_t)v72);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v72, 1, v45) == 1)
          {
            sub_251F34D90();
            sub_251B55B48((uint64_t)v44);
            sub_251B55B48((uint64_t)v72);
            (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v9, v71, v45);
          }
          else
          {
            sub_251B55B48((uint64_t)v44);
            char v73 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
            v73(v71, v72, v45);
            v73(v9, v71, v45);
          }
          char v74 = v103;
          char v75 = (unint64_t *)&v9[v103[5]];
          unint64_t v76 = v93;
          *char v75 = v94;
          v75[1] = v76;
          unint64_t v77 = &v9[v74[6]];
          uint64_t v78 = v97;
          *(void *)unint64_t v77 = v98;
          *((void *)v77 + 1) = v78;
          uint64_t v79 = (unint64_t **)&v9[v74[7]];
          unint64_t v80 = v95;
          *uint64_t v79 = v96;
          v79[1] = (unint64_t *)v80;
          uint64_t v81 = &v9[v74[8]];
          *((void *)v81 + 1) = 0;
          *((void *)v81 + 2) = 0;
          *(void *)uint64_t v81 = 1;
          v81[24] = 0;
          uint64_t v82 = (uint64_t)v101;
          sub_251F285A8((uint64_t)v9, (uint64_t)v101, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
          (*(void (**)(uint64_t, void, uint64_t, int *))(v102 + 56))(v82, 0, 1, v74);
          uint64_t v83 = v82;
          uint64_t v84 = (uint64_t)v105;
          break;
      }
      return sub_2519F9148(v83, v84);
    default:
      uint64_t v100 = v2;
      sub_251F286D4(a1, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      uint64_t v105 = &v93;
      unint64_t v94 = *(void *)(*(void *)(v27 - 8) + 64);
      MEMORY[0x270FA5388](v27 - 8);
      unint64_t v95 = (v28 + 15) & 0xFFFFFFFFFFFFFFF0;
      char v29 = (char *)&v93 - v95;
      uint64_t v30 = sub_251F34DA0();
      uint64_t v96 = *(unint64_t **)(v30 - 8);
      uint64_t v31 = v96;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v96[7])(v29, 1, 1, v30);
      uint64_t v32 = a1 + *(int *)(v16 + 20);
      uint64_t v33 = (unint64_t **)(v32 + *(int *)(type metadata accessor for StaticService() + 20));
      uint64_t v34 = (uint64_t)v33[1];
      uint64_t v99 = *v33;
      uint64_t v101 = (char *)v34;
      swift_bridgeObjectRetain();
      uint64_t v35 = static String.hfLocalized(_:)(0xD000000000000025, 0x8000000251F6DDB0);
      uint64_t v97 = v36;
      uint64_t v98 = v35;
      uint64_t v96 = &v93;
      uint64_t v37 = MEMORY[0x270FA5388](v35);
      char v39 = (char *)&v93 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
      unint64_t v93 = (unint64_t)&v93;
      MEMORY[0x270FA5388](v37);
      unint64_t v40 = (char *)&v93 - v95;
      sub_251A1E280((uint64_t)v29, (uint64_t)&v93 - v95);
      uint64_t v41 = v30;
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v31[6])(v40, 1, v30) == 1)
      {
        sub_251F34D90();
        sub_251B55B48((uint64_t)v29);
        sub_251B55B48((uint64_t)v40);
        ((void (*)(char *, char *, uint64_t))v31[4])(v7, v39, v30);
      }
      else
      {
        sub_251B55B48((uint64_t)v29);
        uint64_t v85 = (void (*)(char *, char *, uint64_t))v31[4];
        v85(v39, v40, v41);
        v85(v7, v39, v41);
      }
      uint64_t v86 = v103;
      uint64_t v87 = &v7[v103[5]];
      *(void *)uint64_t v87 = 0xD00000000000002ELL;
      *((void *)v87 + 1) = 0x8000000251F736F0;
      uint64_t v88 = (unint64_t **)&v7[v86[6]];
      uint64_t v89 = (uint64_t)v101;
      *uint64_t v88 = v99;
      v88[1] = (unint64_t *)v89;
      uint64_t v90 = &v7[v86[7]];
      uint64_t v91 = v97;
      *(void *)uint64_t v90 = v98;
      *((void *)v90 + 1) = v91;
      unint64_t v92 = &v7[v86[8]];
      *((void *)v92 + 1) = 0;
      *((void *)v92 + 2) = 0;
      *(void *)unint64_t v92 = 6;
      v92[24] = 0;
      sub_251F285A8((uint64_t)v7, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
      (*(void (**)(char *, void, uint64_t, int *))(v102 + 56))(v13, 0, 1, v86);
      uint64_t v83 = (uint64_t)v13;
      uint64_t v84 = (uint64_t)v19;
      return sub_2519F9148(v83, v84);
  }
}

uint64_t sub_251F22020(uint64_t a1, uint64_t a2)
{
  uint64_t v153 = a2;
  uint64_t v3 = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v151 = *(void *)(v3 - 8);
  uint64_t v152 = (int *)v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v141 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (void (**)(char *, uint64_t, uint64_t, char *))((char *)&v141 - v8);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v146 = (char *)&v141 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v145 = (char *)&v141 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9E0);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v141 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v141 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v148 = (char *)&v141 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v147 = (void (**)(char *, uint64_t, uint64_t, char *))((char *)&v141 - v22);
  uint64_t v23 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v141 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v24);
  char v29 = (char *)&v141 - v28;
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  unint64_t v150 = (char *)&v141 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v149 = (uint64_t *)((char *)&v141 - v33);
  uint64_t v34 = a1;
  uint64_t v35 = (char *)(a1 + *(int *)(v32 + 24));
  uint64_t result = type metadata accessor for StaticCharacteristic();
  uint64_t v37 = &v35[*(int *)(result + 24)];
  int v38 = v37[16] - 1;
  uint64_t v39 = *(void *)v37;
  switch(v38)
  {
    case 0:
      uint64_t v39 = v39;
      goto LABEL_10;
    case 1:
      uint64_t v39 = (unsigned __int16)v39;
      goto LABEL_10;
    case 2:
      uint64_t v39 = v39;
      goto LABEL_10;
    case 3:
      if ((v39 & 0x8000000000000000) == 0) {
        goto LABEL_10;
      }
      __break(1u);
      goto LABEL_19;
    case 4:
    case 5:
      uint64_t v39 = (int)v39;
LABEL_10:
      if (!v39) {
        return result;
      }
      uint64_t v59 = v34 + *(int *)(v23 + 20);
      uint64_t result = type metadata accessor for StaticService();
      uint64_t v60 = result;
      int v61 = *(unsigned __int8 *)(v59 + *(int *)(result + 88));
      if (v61 == 51)
      {
        sub_251F286D4(v34, (uint64_t)v150, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
        uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        uint64_t v149 = &v141;
        uint64_t v74 = *(void *)(*(void *)(v73 - 8) + 64);
        MEMORY[0x270FA5388](v73 - 8);
        unint64_t v144 = (v74 + 15) & 0xFFFFFFFFFFFFFFF0;
        char v75 = (char *)&v141 - v144;
        uint64_t v76 = sub_251F34DA0();
        uint64_t v142 = *(uint64_t **)(v76 - 8);
        unint64_t v77 = v142;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v142[7])(v75, 1, 1, v76);
        uint64_t v78 = (char **)(v59 + *(int *)(v60 + 20));
        uint64_t v79 = (void (**)(char *, uint64_t, uint64_t, char *))v78[1];
        uint64_t v145 = *v78;
        uint64_t v80 = sub_251F356B0();
        MEMORY[0x270FA5388](v80 - 8);
        uint64_t v147 = v79;
        swift_bridgeObjectRetain();
        sub_251F35660();
        uint64_t v81 = sub_251F34DE0();
        MEMORY[0x270FA5388](v81 - 8);
        sub_251F34DD0();
        uint64_t v143 = sub_251F35750();
        uint64_t v83 = v82;
        uint64_t v84 = MEMORY[0x270FA5388](v143);
        uint64_t v86 = (char *)&v141 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
        MEMORY[0x270FA5388](v84);
        uint64_t v87 = (char *)&v141 - v144;
        sub_251A1E280((uint64_t)v75, (uint64_t)&v141 - v144);
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v77[6])(v87, 1, v76) == 1)
        {
          sub_251F34D90();
          sub_251B55B48((uint64_t)v75);
          sub_251B55B48((uint64_t)v87);
          uint64_t v88 = (void (*)(char *, char *, uint64_t))v77[4];
        }
        else
        {
          sub_251B55B48((uint64_t)v75);
          uint64_t v88 = (void (*)(char *, char *, uint64_t))v77[4];
          v88(v86, v87, v76);
        }
        uint64_t v100 = v146;
        v88(v146, v86, v76);
        uint64_t v101 = v152;
        uint64_t v102 = &v100[v152[5]];
        *(void *)uint64_t v102 = 0xD000000000000014;
        *((void *)v102 + 1) = 0x8000000251F67D00;
        uint64_t v103 = &v100[v101[6]];
        uint64_t v104 = v147;
        uint64_t v105 = (uint64_t)v148;
        *(void *)uint64_t v103 = v145;
        *((void *)v103 + 1) = v104;
        unint64_t v106 = (uint64_t *)&v100[v101[7]];
        *unint64_t v106 = v143;
        v106[1] = v83;
        unint64_t v107 = &v100[v101[8]];
        *((void *)v107 + 1) = 0;
        *((void *)v107 + 2) = 0;
        *(void *)unint64_t v107 = 4;
        v107[24] = 0;
        uint64_t v108 = (uint64_t)v100;
        goto LABEL_27;
      }
      if (v61 != 14) {
        return result;
      }
      sub_251F286D4(v34, (uint64_t)v149, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      unint64_t v150 = (char *)&v141;
      uint64_t v141 = *(void *)(*(void *)(v62 - 8) + 64);
      MEMORY[0x270FA5388](v62 - 8);
      unint64_t v144 = (v63 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v19 = (char *)&v141 - v144;
      uint64_t v26 = (char *)sub_251F34DA0();
      uint64_t v9 = (void (**)(char *, uint64_t, uint64_t, char *))*((void *)v26 - 1);
      v9[7](v19, 1, 1, v26);
      uint64_t v64 = (char **)(v59 + *(int *)(v60 + 20));
      uint64_t v65 = v64[1];
      uint64_t v146 = *v64;
      uint64_t v66 = sub_251F356B0();
      MEMORY[0x270FA5388](v66 - 8);
      uint64_t v148 = v65;
      swift_bridgeObjectRetain();
      sub_251F35660();
      uint64_t v67 = sub_251F34DE0();
      MEMORY[0x270FA5388](v67 - 8);
      sub_251F34DD0();
      uint64_t v68 = sub_251F35750();
      uint64_t v142 = v69;
      uint64_t v143 = v68;
      uint64_t v70 = MEMORY[0x270FA5388](v68);
      uint64_t v35 = (char *)&v141 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
      MEMORY[0x270FA5388](v70);
      uint64_t v6 = (char *)&v141 - v144;
      sub_251A1E280((uint64_t)v19, (uint64_t)&v141 - v144);
      if (((unsigned int (*)(char *, uint64_t, char *))v9[6])(v6, 1, v26) == 1)
      {
        sub_251F34D90();
        sub_251B55B48((uint64_t)v19);
        sub_251B55B48((uint64_t)v6);
        char v72 = v9[4];
      }
      else
      {
LABEL_19:
        sub_251B55B48((uint64_t)v19);
        char v72 = v9[4];
        ((void (*)(char *, char *, char *))v72)(v35, v6, v26);
      }
      uint64_t v89 = (uint64_t)v145;
      ((void (*)(char *, char *, char *))v72)(v145, v35, v26);
      uint64_t v90 = v152;
      uint64_t v91 = (void *)(v89 + v152[5]);
      *uint64_t v91 = 0xD000000000000013;
      v91[1] = 0x8000000251F67CE0;
      unint64_t v92 = (void *)(v89 + v90[6]);
      uint64_t v93 = (uint64_t)v147;
      unint64_t v94 = v148;
      *unint64_t v92 = v146;
      v92[1] = v94;
      unint64_t v95 = (uint64_t *)(v89 + v90[7]);
      uint64_t v96 = v142;
      uint64_t *v95 = v143;
      v95[1] = (uint64_t)v96;
      uint64_t v97 = v89 + v90[8];
      *(void *)(v97 + 8) = 0;
      *(void *)(v97 + 16) = 0;
      *(void *)uint64_t v97 = 2;
      *(unsigned char *)(v97 + 24) = 0;
      sub_251F285A8(v89, v93, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
      (*(void (**)(uint64_t, void, uint64_t, int *))(v151 + 56))(v93, 0, 1, v90);
      uint64_t v98 = v93;
      uint64_t v99 = (uint64_t)v149;
      return sub_2519F9148(v98, v99);
    default:
      uint64_t v149 = (uint64_t *)v29;
      unint64_t v150 = v26;
      uint64_t v145 = v19;
      uint64_t v146 = v16;
      uint64_t v147 = v9;
      uint64_t v148 = v6;
      uint64_t v40 = v34 + *(int *)(v23 + 20);
      uint64_t result = type metadata accessor for StaticService();
      uint64_t v41 = result;
      int v42 = *(unsigned __int8 *)(v40 + *(int *)(result + 88));
      if (v42 == 14)
      {
        sub_251F286D4(v34, (uint64_t)v149, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
        uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        unint64_t v150 = (char *)&v141;
        uint64_t v110 = *(void *)(*(void *)(v109 - 8) + 64);
        MEMORY[0x270FA5388](v109 - 8);
        unint64_t v144 = (v110 + 15) & 0xFFFFFFFFFFFFFFF0;
        unint64_t v111 = (char *)&v141 - v144;
        uint64_t v112 = sub_251F34DA0();
        uint64_t v113 = *(void *)(v112 - 8);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v113 + 56))(v111, 1, 1, v112);
        uint64_t v114 = (char **)(v40 + *(int *)(v41 + 20));
        char v115 = v114[1];
        uint64_t v146 = *v114;
        uint64_t v116 = sub_251F356B0();
        uint64_t v142 = &v141;
        MEMORY[0x270FA5388](v116 - 8);
        uint64_t v148 = v115;
        swift_bridgeObjectRetain();
        sub_251F35660();
        uint64_t v117 = sub_251F34DE0();
        MEMORY[0x270FA5388](v117 - 8);
        sub_251F34DD0();
        uint64_t v143 = sub_251F35750();
        uint64_t v119 = v118;
        uint64_t v120 = MEMORY[0x270FA5388](v143);
        BOOL v122 = (char *)&v141 - ((v121 + 15) & 0xFFFFFFFFFFFFFFF0);
        MEMORY[0x270FA5388](v120);
        unint64_t v123 = (char *)&v141 - v144;
        sub_251A1E280((uint64_t)v111, (uint64_t)&v141 - v144);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48))(v123, 1, v112) == 1)
        {
          sub_251F34D90();
          sub_251B55B48((uint64_t)v111);
          sub_251B55B48((uint64_t)v123);
          uint64_t v124 = *(void (**)(char *, char *, uint64_t))(v113 + 32);
        }
        else
        {
          sub_251B55B48((uint64_t)v111);
          uint64_t v124 = *(void (**)(char *, char *, uint64_t))(v113 + 32);
          v124(v122, v123, v112);
        }
        uint64_t v132 = v112;
        uint64_t v133 = (uint64_t)v145;
        uint64_t v134 = (uint64_t)v147;
        v124((char *)v147, v122, v132);
        uint64_t v135 = v152;
        uint64_t v136 = (void *)(v134 + v152[5]);
        *uint64_t v136 = 0xD000000000000013;
        v136[1] = 0x8000000251F67CE0;
        uint64_t v137 = (void *)(v134 + v135[6]);
        uint64_t v138 = v148;
        void *v137 = v146;
        v137[1] = v138;
        BOOL v139 = (uint64_t *)(v134 + v135[7]);
        *BOOL v139 = v143;
        v139[1] = v119;
        uint64_t v140 = v134 + v135[8];
        *(void *)(v140 + 8) = 0;
        *(void *)(v140 + 16) = 0;
        *(void *)uint64_t v140 = 6;
        *(unsigned char *)(v140 + 24) = 0;
        sub_251F285A8(v134, v133, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
        (*(void (**)(uint64_t, void, uint64_t, int *))(v151 + 56))(v133, 0, 1, v135);
        uint64_t v98 = v133;
        uint64_t v99 = (uint64_t)v149;
      }
      else
      {
        if (v42 != 51) {
          return result;
        }
        sub_251F286D4(v34, (uint64_t)v150, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
        uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        uint64_t v149 = &v141;
        uint64_t v44 = *(void *)(*(void *)(v43 - 8) + 64);
        MEMORY[0x270FA5388](v43 - 8);
        unint64_t v144 = (v44 + 15) & 0xFFFFFFFFFFFFFFF0;
        uint64_t v45 = (char *)&v141 - v144;
        uint64_t v46 = sub_251F34DA0();
        uint64_t v47 = *(void *)(v46 - 8);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56))(v45, 1, 1, v46);
        uint64_t v48 = (char **)(v40 + *(int *)(v41 + 20));
        uint64_t v49 = (void (**)(char *, uint64_t, uint64_t, char *))v48[1];
        uint64_t v145 = *v48;
        uint64_t v50 = sub_251F356B0();
        uint64_t v142 = &v141;
        MEMORY[0x270FA5388](v50 - 8);
        uint64_t v147 = v49;
        swift_bridgeObjectRetain();
        sub_251F35660();
        uint64_t v51 = sub_251F34DE0();
        MEMORY[0x270FA5388](v51 - 8);
        sub_251F34DD0();
        uint64_t v52 = sub_251F35750();
        uint64_t v143 = v53;
        uint64_t v54 = MEMORY[0x270FA5388](v52);
        uint64_t v56 = (char *)&v141 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
        MEMORY[0x270FA5388](v54);
        uint64_t v57 = (char *)&v141 - v144;
        sub_251A1E280((uint64_t)v45, (uint64_t)&v141 - v144);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v57, 1, v46) == 1)
        {
          sub_251F34D90();
          sub_251B55B48((uint64_t)v45);
          sub_251B55B48((uint64_t)v57);
          uint64_t v58 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
        }
        else
        {
          sub_251B55B48((uint64_t)v45);
          uint64_t v58 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
          v58(v56, v57, v46);
        }
        uint64_t v125 = v148;
        v58(v148, v56, v46);
        uint64_t v101 = v152;
        uint64_t v126 = &v125[v152[5]];
        *(void *)uint64_t v126 = 0xD000000000000014;
        *((void *)v126 + 1) = 0x8000000251F67D00;
        uint64_t v127 = &v125[v101[6]];
        uint64_t v105 = (uint64_t)v146;
        uint64_t v128 = v147;
        *(void *)uint64_t v127 = v145;
        *((void *)v127 + 1) = v128;
        uint64_t v129 = (uint64_t *)&v125[v101[7]];
        uint64_t v130 = v143;
        *uint64_t v129 = v52;
        v129[1] = v130;
        uint64_t v131 = &v125[v101[8]];
        *((void *)v131 + 1) = 0;
        *((void *)v131 + 2) = 0;
        *(void *)uint64_t v131 = 6;
        v131[24] = 0;
        uint64_t v108 = (uint64_t)v125;
LABEL_27:
        sub_251F285A8(v108, v105, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
        (*(void (**)(uint64_t, void, uint64_t, int *))(v151 + 56))(v105, 0, 1, v101);
        uint64_t v98 = v105;
        uint64_t v99 = (uint64_t)v150;
      }
      return sub_2519F9148(v98, v99);
  }
}

uint64_t sub_251F23294(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t))
{
  uint64_t v26 = a3;
  uint64_t v6 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v24 - v11;
  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v24 = a1 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v25 = (unint64_t)(v14 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  while (v16)
  {
    unint64_t v19 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    unint64_t v20 = v19 | (v18 << 6);
LABEL_5:
    sub_251F286D4(*(void *)(a1 + 48) + *(void *)(v7 + 72) * v20, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
    sub_251F285A8((uint64_t)v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
    v26(v10, a2);
    uint64_t result = sub_251F28610((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
    if (v3) {
      return swift_release();
    }
  }
  if (__OFADD__(v18++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v18 >= v25) {
    return swift_release();
  }
  unint64_t v22 = *(void *)(v24 + 8 * v18);
  if (v22)
  {
LABEL_19:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v18 << 6);
    goto LABEL_5;
  }
  int64_t v23 = v18 + 1;
  if (v18 + 1 >= v25) {
    return swift_release();
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22) {
    goto LABEL_18;
  }
  int64_t v23 = v18 + 2;
  if (v18 + 2 >= v25) {
    return swift_release();
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22) {
    goto LABEL_18;
  }
  int64_t v23 = v18 + 3;
  if (v18 + 3 >= v25) {
    return swift_release();
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22) {
    goto LABEL_18;
  }
  int64_t v23 = v18 + 4;
  if (v18 + 4 >= v25) {
    return swift_release();
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22)
  {
LABEL_18:
    int64_t v18 = v23;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v18 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v18 >= v25) {
      return swift_release();
    }
    unint64_t v22 = *(void *)(v24 + 8 * v18);
    ++v23;
    if (v22) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_251F23528(uint64_t a1, uint64_t a2)
{
  uint64_t v211 = a2;
  uint64_t v3 = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v214 = (int *)v3;
  uint64_t v215 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v208 = (char *)&v199 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  v207 = (char *)&v199 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v199 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  unint64_t v203 = (char *)&v199 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v202 = (char *)&v199 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v199 = (char *)&v199 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9E0);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  v206 = (void (**)(char *, uint64_t, uint64_t, uint64_t))((char *)&v199 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v205 = (char **)((char *)&v199 - v21);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v199 - v23;
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v201 = (uint64_t)&v199 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v200 = (uint64_t)&v199 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v199 - v29;
  uint64_t v31 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  uint64_t v32 = MEMORY[0x270FA5388](v31);
  uint64_t v210 = (char **)((char *)&v199 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v209 = (char *)&v199 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  int v38 = (char *)&v199 - v37;
  uint64_t v39 = MEMORY[0x270FA5388](v36);
  uint64_t v204 = (char **)((char *)&v199 - v40);
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v43 = (char *)&v199 - v42;
  uint64_t v44 = MEMORY[0x270FA5388](v41);
  uint64_t v46 = (char *)&v199 - v45;
  uint64_t v47 = a1 + *(int *)(v44 + 20);
  uint64_t result = type metadata accessor for StaticService();
  uint64_t v212 = result;
  uint64_t v213 = v47;
  int v49 = *(unsigned __int8 *)(v47 + *(int *)(result + 96));
  if (v49 != 53)
  {
    uint64_t v50 = a1 + *(int *)(v31 + 24);
    uint64_t result = type metadata accessor for StaticCharacteristic();
    uint64_t v51 = v50 + *(int *)(result + 24);
    int v52 = *(unsigned __int8 *)(v51 + 16);
    unint64_t v53 = *(void *)v51;
    switch(v52)
    {
      case 0:
        if (v53) {
          goto LABEL_12;
        }
        return result;
      case 1:
        unint64_t v53 = v53;
        goto LABEL_10;
      case 2:
        unint64_t v53 = (unsigned __int16)v53;
        goto LABEL_10;
      case 3:
        unint64_t v53 = v53;
        goto LABEL_10;
      case 4:
        if ((v53 & 0x8000000000000000) != 0)
        {
          __break(1u);
          JUMPOUT(0x251F24E84);
        }
        goto LABEL_10;
      case 5:
      case 6:
        unint64_t v53 = (int)v53;
LABEL_10:
        if (v53 > 1) {
          goto LABEL_17;
        }
        if (v53 != 1) {
          return result;
        }
LABEL_12:
        switch(v49)
        {
          case 14:
            sub_251F286D4(a1, (uint64_t)v43, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
            uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
            uint64_t v210 = &v199;
            uint64_t v115 = *(void *)(*(void *)(v114 - 8) + 64);
            MEMORY[0x270FA5388](v114 - 8);
            uint64_t v209 = (char *)((v115 + 15) & 0xFFFFFFFFFFFFFFF0);
            uint64_t v116 = (char *)((char *)&v199 - v209);
            uint64_t v117 = sub_251F34DA0();
            v206 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(v117 - 8);
            uint64_t v118 = v206;
            v206[7](v116, 1, 1, v117);
            uint64_t v119 = (uint64_t *)(v213 + *(int *)(v212 + 20));
            uint64_t v120 = v119[1];
            uint64_t v212 = *v119;
            uint64_t v121 = sub_251F356B0();
            uint64_t v205 = &v199;
            MEMORY[0x270FA5388](v121 - 8);
            uint64_t v213 = v120;
            swift_bridgeObjectRetain();
            sub_251F35660();
            uint64_t v122 = sub_251F34DE0();
            MEMORY[0x270FA5388](v122 - 8);
            sub_251F34DD0();
            uint64_t v123 = sub_251F35750();
            v207 = v124;
            uint64_t v208 = (char *)v123;
            uint64_t v125 = (uint64_t)v116;
            uint64_t v126 = MEMORY[0x270FA5388](v123);
            uint64_t v128 = (char *)&v199 - ((v127 + 15) & 0xFFFFFFFFFFFFFFF0);
            MEMORY[0x270FA5388](v126);
            uint64_t v129 = (char *)((char *)&v199 - v209);
            sub_251A1E280(v125, (char *)&v199 - v209);
            uint64_t v130 = v117;
            if (((unsigned int (*)(char *, uint64_t, uint64_t))v118[6])(v129, 1, v117) == 1)
            {
              sub_251F34D90();
              sub_251B55B48(v125);
              sub_251B55B48((uint64_t)v129);
              uint64_t v131 = v118[4];
            }
            else
            {
              sub_251B55B48(v125);
              uint64_t v131 = v118[4];
              ((void (*)(char *, char *, uint64_t))v131)(v128, v129, v130);
            }
            uint64_t v181 = v202;
            ((void (*)(char *, char *, uint64_t))v131)(v202, v128, v130);
            uint64_t v182 = v214;
            uint64_t v183 = &v181[v214[5]];
            *(void *)uint64_t v183 = 0xD000000000000013;
            *((void *)v183 + 1) = 0x8000000251F67CE0;
            uint64_t v184 = (uint64_t *)&v181[v182[6]];
            uint64_t v185 = v213;
            *uint64_t v184 = v212;
            v184[1] = v185;
            uint64_t v186 = &v181[v182[7]];
            uint64_t v187 = v207;
            *(void *)uint64_t v186 = v208;
            *((void *)v186 + 1) = v187;
            uint64_t v188 = &v181[v182[8]];
            *((void *)v188 + 1) = 0;
            *((void *)v188 + 2) = 0;
            *(void *)uint64_t v188 = 2;
            v188[24] = 0;
            uint64_t v189 = (uint64_t)v181;
            uint64_t v190 = v200;
            sub_251F285A8(v189, v200, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
            (*(void (**)(uint64_t, void, uint64_t, int *))(v215 + 56))(v190, 0, 1, v182);
            uint64_t v156 = v190;
            uint64_t v157 = (uint64_t)v43;
            break;
          case 51:
            sub_251F286D4(a1, (uint64_t)v204, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
            uint64_t v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
            uint64_t v210 = &v199;
            uint64_t v133 = *(void *)(*(void *)(v132 - 8) + 64);
            MEMORY[0x270FA5388](v132 - 8);
            uint64_t v209 = (char *)((v133 + 15) & 0xFFFFFFFFFFFFFFF0);
            uint64_t v134 = (char *)((char *)&v199 - v209);
            uint64_t v135 = sub_251F34DA0();
            uint64_t v136 = *(void *)(v135 - 8);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v136 + 56))(v134, 1, 1, v135);
            uint64_t v137 = (uint64_t *)(v213 + *(int *)(v212 + 20));
            uint64_t v138 = v137[1];
            uint64_t v212 = *v137;
            uint64_t v139 = sub_251F356B0();
            v207 = (char *)&v199;
            MEMORY[0x270FA5388](v139 - 8);
            uint64_t v213 = v138;
            swift_bridgeObjectRetain();
            sub_251F35660();
            uint64_t v140 = sub_251F34DE0();
            MEMORY[0x270FA5388](v140 - 8);
            sub_251F34DD0();
            uint64_t v208 = (char *)sub_251F35750();
            uint64_t v142 = v141;
            uint64_t v143 = MEMORY[0x270FA5388](v208);
            uint64_t v145 = (char *)&v199 - ((v144 + 15) & 0xFFFFFFFFFFFFFFF0);
            MEMORY[0x270FA5388](v143);
            uint64_t v146 = (char *)((char *)&v199 - v209);
            sub_251A1E280((uint64_t)v134, (char *)&v199 - v209);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v136 + 48))(v146, 1, v135) == 1)
            {
              sub_251F34D90();
              sub_251B55B48((uint64_t)v134);
              sub_251B55B48((uint64_t)v146);
              uint64_t v147 = *(void (**)(char *, char *, uint64_t))(v136 + 32);
            }
            else
            {
              sub_251B55B48((uint64_t)v134);
              uint64_t v147 = *(void (**)(char *, char *, uint64_t))(v136 + 32);
              v147(v145, v146, v135);
            }
            uint64_t v191 = (uint64_t)v203;
            v147(v203, v145, v135);
            unint64_t v192 = v214;
            uint64_t v193 = (void *)(v191 + v214[5]);
            *uint64_t v193 = 0xD000000000000014;
            v193[1] = 0x8000000251F67D00;
            uint64_t v194 = (uint64_t *)(v191 + v192[6]);
            uint64_t v195 = v213;
            *uint64_t v194 = v212;
            v194[1] = v195;
            v196 = (void *)(v191 + v192[7]);
            void *v196 = v208;
            v196[1] = v142;
            uint64_t v197 = v191 + v192[8];
            *(void *)(v197 + 8) = 0;
            *(void *)(v197 + 16) = 0;
            *(void *)uint64_t v197 = 4;
            *(unsigned char *)(v197 + 24) = 0;
            uint64_t v198 = v201;
            sub_251F285A8(v191, v201, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
            (*(void (**)(uint64_t, void, uint64_t, int *))(v215 + 56))(v198, 0, 1, v192);
            uint64_t v156 = v198;
            uint64_t v157 = (uint64_t)v204;
            break;
          case 19:
            sub_251F286D4(a1, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
            uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
            uint64_t v210 = &v199;
            uint64_t v55 = *(void *)(*(void *)(v54 - 8) + 64);
            MEMORY[0x270FA5388](v54 - 8);
            unint64_t v56 = (v55 + 15) & 0xFFFFFFFFFFFFFFF0;
            uint64_t v57 = sub_251F34DA0();
            uint64_t v58 = *(void *)(v57 - 8);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56))((char *)&v199 - v56, 1, 1, v57);
            uint64_t v59 = (uint64_t *)(v213 + *(int *)(v212 + 20));
            uint64_t v60 = v59[1];
            uint64_t v212 = *v59;
            uint64_t v213 = v60;
            swift_bridgeObjectRetain();
            uint64_t v61 = static String.hfLocalized(_:)(0xD000000000000022, 0x8000000251F6D2D0);
            uint64_t v208 = v62;
            uint64_t v209 = (char *)v61;
            v207 = (char *)&v199;
            uint64_t v63 = MEMORY[0x270FA5388](v61);
            uint64_t v65 = (char *)&v199 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
            MEMORY[0x270FA5388](v63);
            uint64_t v66 = (char *)&v199 - v56;
            sub_251A1E280((uint64_t)&v199 - v56, (uint64_t)&v199 - v56);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))((char *)&v199 - v56, 1, v57) == 1)
            {
              sub_251F34D90();
              sub_251B55B48((uint64_t)&v199 - v56);
              sub_251B55B48((uint64_t)&v199 - v56);
              uint64_t v67 = *(void (**)(char *, char *, uint64_t))(v58 + 32);
            }
            else
            {
              sub_251B55B48((uint64_t)&v199 - v56);
              uint64_t v67 = *(void (**)(char *, char *, uint64_t))(v58 + 32);
              v67(v65, v66, v57);
            }
            uint64_t v173 = (uint64_t)v199;
            v67(v199, v65, v57);
            unint64_t v174 = v214;
            unint64_t v175 = (void *)(v173 + v214[5]);
            *unint64_t v175 = 0xD000000000000010;
            v175[1] = 0x8000000251F67CC0;
            uint64_t v176 = (uint64_t *)(v173 + v174[6]);
            uint64_t v177 = v213;
            *uint64_t v176 = v212;
            v176[1] = v177;
            uint64_t v178 = (char **)(v173 + v174[7]);
            unint64_t v179 = v208;
            *uint64_t v178 = v209;
            v178[1] = v179;
            uint64_t v180 = v173 + v174[8];
            *(void *)(v180 + 8) = 0;
            *(void *)(v180 + 16) = 0;
            *(void *)uint64_t v180 = 1;
            *(unsigned char *)(v180 + 24) = 0;
            sub_251F285A8(v173, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
            (*(void (**)(char *, void, uint64_t, int *))(v215 + 56))(v30, 0, 1, v174);
            uint64_t v156 = (uint64_t)v30;
            uint64_t v157 = (uint64_t)v46;
            break;
          default:
            return result;
        }
        goto LABEL_42;
      default:
LABEL_17:
        switch(v49)
        {
          case 14:
            sub_251F286D4(a1, (uint64_t)v209, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
            uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
            uint64_t v210 = &v199;
            uint64_t v85 = *(void *)(*(void *)(v84 - 8) + 64);
            MEMORY[0x270FA5388](v84 - 8);
            uint64_t v208 = (char *)((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
            uint64_t v86 = (char *)((char *)&v199 - v208);
            uint64_t v87 = sub_251F34DA0();
            uint64_t v88 = *(void *)(v87 - 8);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v88 + 56))(v86, 1, 1, v87);
            uint64_t v89 = (uint64_t *)(v213 + *(int *)(v212 + 20));
            uint64_t v90 = v89[1];
            uint64_t v212 = *v89;
            uint64_t v91 = sub_251F356B0();
            uint64_t v204 = &v199;
            MEMORY[0x270FA5388](v91 - 8);
            uint64_t v213 = v90;
            swift_bridgeObjectRetain();
            sub_251F35660();
            uint64_t v92 = sub_251F34DE0();
            MEMORY[0x270FA5388](v92 - 8);
            sub_251F34DD0();
            v206 = (void (**)(char *, uint64_t, uint64_t, uint64_t))sub_251F35750();
            unint64_t v94 = v93;
            uint64_t v95 = MEMORY[0x270FA5388](v206);
            uint64_t v97 = (char *)&v199 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
            MEMORY[0x270FA5388](v95);
            uint64_t v98 = (char *)((char *)&v199 - v208);
            sub_251A1E280((uint64_t)v86, (char *)&v199 - v208);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48))(v98, 1, v87) == 1)
            {
              sub_251F34D90();
              sub_251B55B48((uint64_t)v86);
              sub_251B55B48((uint64_t)v98);
              uint64_t v99 = *(void (**)(char *, char *, uint64_t))(v88 + 32);
            }
            else
            {
              sub_251B55B48((uint64_t)v86);
              uint64_t v99 = *(void (**)(char *, char *, uint64_t))(v88 + 32);
              v99(v97, v98, v87);
            }
            uint64_t v158 = (uint64_t)v207;
            v99(v207, v97, v87);
            unint64_t v159 = v214;
            uint64_t v160 = (void *)(v158 + v214[5]);
            *uint64_t v160 = 0xD000000000000013;
            v160[1] = 0x8000000251F67CE0;
            uint64_t v161 = (uint64_t *)(v158 + v159[6]);
            uint64_t v162 = v213;
            uint64_t *v161 = v212;
            v161[1] = v162;
            uint64_t v163 = (void (***)(char *, uint64_t, uint64_t, uint64_t))(v158 + v159[7]);
            uint64_t v164 = (uint64_t)v205;
            *uint64_t v163 = v206;
            v163[1] = v94;
            uint64_t v165 = v158 + v159[8];
            *(void *)(v165 + 8) = 0;
            *(void *)(v165 + 16) = 0;
            *(void *)uint64_t v165 = 6;
            *(unsigned char *)(v165 + 24) = 0;
            sub_251F285A8(v158, v164, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
            (*(void (**)(uint64_t, void, uint64_t, int *))(v215 + 56))(v164, 0, 1, v159);
            uint64_t v156 = v164;
            uint64_t v157 = (uint64_t)v209;
            break;
          case 19:
            sub_251F286D4(a1, (uint64_t)v38, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
            uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
            uint64_t v210 = &v199;
            uint64_t v101 = *(void *)(*(void *)(v100 - 8) + 64);
            MEMORY[0x270FA5388](v100 - 8);
            uint64_t v205 = (char **)((v101 + 15) & 0xFFFFFFFFFFFFFFF0);
            uint64_t v102 = (char *)((char *)&v199 - (char *)v205);
            uint64_t v103 = sub_251F34DA0();
            uint64_t v104 = *(void *)(v103 - 8);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v104 + 56))(v102, 1, 1, v103);
            uint64_t v105 = (uint64_t *)(v213 + *(int *)(v212 + 20));
            uint64_t v106 = v105[1];
            uint64_t v212 = *v105;
            uint64_t v213 = v106;
            swift_bridgeObjectRetain();
            uint64_t v107 = static String.hfLocalized(_:)(0xD000000000000025, 0x8000000251F6DDB0);
            uint64_t v208 = v108;
            uint64_t v209 = (char *)v107;
            v207 = (char *)&v199;
            uint64_t v109 = MEMORY[0x270FA5388](v107);
            unint64_t v111 = (char *)&v199 - ((v110 + 15) & 0xFFFFFFFFFFFFFFF0);
            v206 = (void (**)(char *, uint64_t, uint64_t, uint64_t))&v199;
            MEMORY[0x270FA5388](v109);
            uint64_t v112 = (char *)((char *)&v199 - (char *)v205);
            sub_251A1E280((uint64_t)v102, (char *)&v199 - (char *)v205);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v104 + 48))(v112, 1, v103) == 1)
            {
              sub_251F34D90();
              sub_251B55B48((uint64_t)v102);
              sub_251B55B48((uint64_t)v112);
              uint64_t v113 = *(void (**)(char *, char *, uint64_t))(v104 + 32);
            }
            else
            {
              sub_251B55B48((uint64_t)v102);
              uint64_t v113 = *(void (**)(char *, char *, uint64_t))(v104 + 32);
              v113(v111, v112, v103);
            }
            v113(v11, v111, v103);
            uint64_t v166 = v214;
            unint64_t v167 = &v11[v214[5]];
            *(void *)unint64_t v167 = 0xD00000000000002ELL;
            *((void *)v167 + 1) = 0x8000000251F736F0;
            unint64_t v168 = &v11[v166[6]];
            uint64_t v169 = v213;
            *(void *)unint64_t v168 = v212;
            *((void *)v168 + 1) = v169;
            uint64_t v170 = &v11[v166[7]];
            uint64_t v171 = v208;
            *(void *)uint64_t v170 = v209;
            *((void *)v170 + 1) = v171;
            uint64_t v172 = &v11[v166[8]];
            *((void *)v172 + 1) = 0;
            *((void *)v172 + 2) = 0;
            *(void *)uint64_t v172 = 6;
            v172[24] = 0;
            sub_251F285A8((uint64_t)v11, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
            (*(void (**)(char *, void, uint64_t, int *))(v215 + 56))(v24, 0, 1, v166);
            uint64_t v156 = (uint64_t)v24;
            uint64_t v157 = (uint64_t)v38;
            break;
          case 51:
            sub_251F286D4(a1, (uint64_t)v210, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
            uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
            uint64_t v209 = (char *)&v199;
            uint64_t v69 = *(void *)(*(void *)(v68 - 8) + 64);
            MEMORY[0x270FA5388](v68 - 8);
            v207 = (char *)((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
            uint64_t v70 = (char *)((char *)&v199 - v207);
            uint64_t v71 = sub_251F34DA0();
            uint64_t v72 = *(void *)(v71 - 8);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v72 + 56))(v70, 1, 1, v71);
            uint64_t v73 = (uint64_t *)(v213 + *(int *)(v212 + 20));
            uint64_t v74 = v73[1];
            uint64_t v212 = *v73;
            uint64_t v75 = sub_251F356B0();
            uint64_t v204 = &v199;
            MEMORY[0x270FA5388](v75 - 8);
            uint64_t v213 = v74;
            swift_bridgeObjectRetain();
            sub_251F35660();
            uint64_t v76 = sub_251F34DE0();
            MEMORY[0x270FA5388](v76 - 8);
            sub_251F34DD0();
            uint64_t v205 = (char **)sub_251F35750();
            uint64_t v78 = v77;
            uint64_t v79 = MEMORY[0x270FA5388](v205);
            uint64_t v81 = (char *)&v199 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
            MEMORY[0x270FA5388](v79);
            uint64_t v82 = (char *)((char *)&v199 - v207);
            sub_251A1E280((uint64_t)v70, (char *)&v199 - v207);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v82, 1, v71) == 1)
            {
              sub_251F34D90();
              sub_251B55B48((uint64_t)v70);
              sub_251B55B48((uint64_t)v82);
              uint64_t v83 = *(void (**)(char *, char *, uint64_t))(v72 + 32);
            }
            else
            {
              sub_251B55B48((uint64_t)v70);
              uint64_t v83 = *(void (**)(char *, char *, uint64_t))(v72 + 32);
              v83(v81, v82, v71);
            }
            uint64_t v148 = (uint64_t)v208;
            v83(v208, v81, v71);
            uint64_t v149 = v214;
            unint64_t v150 = (void *)(v148 + v214[5]);
            *unint64_t v150 = 0xD000000000000014;
            v150[1] = 0x8000000251F67D00;
            uint64_t v151 = (uint64_t *)(v148 + v149[6]);
            uint64_t v152 = v213;
            *uint64_t v151 = v212;
            v151[1] = v152;
            uint64_t v153 = (char ***)(v148 + v149[7]);
            uint64_t v154 = (uint64_t)v206;
            *uint64_t v153 = v205;
            v153[1] = v78;
            uint64_t v155 = v148 + v149[8];
            *(void *)(v155 + 8) = 0;
            *(void *)(v155 + 16) = 0;
            *(void *)uint64_t v155 = 6;
            *(unsigned char *)(v155 + 24) = 0;
            sub_251F285A8(v148, v154, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
            (*(void (**)(uint64_t, void, uint64_t, int *))(v215 + 56))(v154, 0, 1, v149);
            uint64_t v156 = v154;
            uint64_t v157 = (uint64_t)v210;
            break;
          default:
            return result;
        }
LABEL_42:
        uint64_t result = sub_2519F9148(v156, v157);
        break;
    }
  }
  return result;
}

uint64_t sub_251F24EA0(uint64_t a1, uint64_t a2)
{
  uint64_t v84 = a2;
  uint64_t v4 = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v82 = *(void *)(v4 - 8);
  uint64_t v83 = (int *)v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v75 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9E0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v75 - v14;
  uint64_t v16 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v85 = (uint64_t *)((char *)&v75 - v21);
  uint64_t v22 = a1 + *(int *)(v20 + 24);
  uint64_t result = type metadata accessor for StaticCharacteristic();
  uint64_t v24 = v22 + *(int *)(result + 24);
  int v25 = *(unsigned __int8 *)(v24 + 16) - 1;
  unint64_t v81 = (unint64_t)v15;
  uint64_t v26 = *(void *)v24;
  switch(v25)
  {
    case 0:
      uint64_t v26 = *(void *)v24;
      goto LABEL_9;
    case 1:
      uint64_t v26 = (unsigned __int16)*(void *)v24;
      goto LABEL_9;
    case 2:
      uint64_t v26 = *(void *)v24;
      goto LABEL_9;
    case 3:
      if (v26 < 0)
      {
        __break(1u);
        JUMPOUT(0x251F256E8);
      }
      goto LABEL_9;
    case 4:
    case 5:
      uint64_t v26 = (int)v26;
LABEL_9:
      if (v26 == 1) {
        return result;
      }
      uint64_t v80 = v2;
      sub_251F286D4(a1, (uint64_t)v85, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      uint64_t v79 = &v75;
      uint64_t v43 = *(void *)(*(void *)(v42 - 8) + 64);
      MEMORY[0x270FA5388](v42 - 8);
      unint64_t v44 = (v43 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v45 = sub_251F34DA0();
      uint64_t v46 = *(void *)(v45 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56))((char *)&v75 - v44, 1, 1, v45);
      if (v26)
      {
        if (v26 == 2)
        {
          unint64_t v77 = (uint64_t *)0xD000000000000027;
          uint64_t v78 = (uint64_t *)0x8000000251F737D0;
          goto LABEL_16;
        }
        uint64_t v78 = (uint64_t *)0x8000000251F737A0;
        unint64_t v47 = 0xD000000000000022;
      }
      else
      {
        uint64_t v78 = (uint64_t *)0xEE006C6C69662E6ELL;
        unint64_t v47 = 0x65706F2E6B636F6CLL;
      }
      unint64_t v77 = (uint64_t *)v47;
LABEL_16:
      uint64_t v48 = a1 + *(int *)(v16 + 20);
      uint64_t v49 = type metadata accessor for StaticService();
      uint64_t v50 = *(void *)(v48 + *(int *)(v49 + 20));
      uint64_t v51 = *(void *)(v48 + *(int *)(v49 + 20) + 8);
      uint64_t v76 = v50;
      uint64_t v52 = swift_bridgeObjectRetain();
      uint64_t v75 = (uint64_t)&v75;
      uint64_t v53 = MEMORY[0x270FA5388](v52);
      uint64_t v55 = (char *)&v75 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
      MEMORY[0x270FA5388](v53);
      sub_251A1E280((uint64_t)&v75 - v44, (uint64_t)&v75 - v44);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))((char *)&v75 - v44, 1, v45) == 1)
      {
        sub_251F34D90();
        sub_251B55B48((uint64_t)&v75 - v44);
        sub_251B55B48((uint64_t)&v75 - v44);
        (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v9, v55, v45);
      }
      else
      {
        sub_251B55B48((uint64_t)&v75 - v44);
        unint64_t v56 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
        v56(v55, (char *)&v75 - v44, v45);
        v56(v9, v55, v45);
      }
      uint64_t v57 = v76;
      uint64_t v58 = v83;
      uint64_t v59 = (uint64_t **)&v9[v83[5]];
      uint64_t v61 = v77;
      uint64_t v60 = v78;
      *uint64_t v59 = v77;
      v59[1] = v60;
      uint64_t v62 = &v9[v58[6]];
      *(void *)uint64_t v62 = v57;
      *((void *)v62 + 1) = v51;
      uint64_t v63 = &v9[v58[7]];
      *(void *)uint64_t v63 = v61;
      *((void *)v63 + 1) = v60;
      uint64_t v64 = &v9[v58[8]];
      *((void *)v64 + 1) = 0;
      *((void *)v64 + 2) = 0;
      *(void *)uint64_t v64 = 3;
      v64[24] = 0;
      unint64_t v65 = v81;
      sub_251F285A8((uint64_t)v9, v81, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
      (*(void (**)(unint64_t, void, uint64_t, int *))(v82 + 56))(v65, 0, 1, v58);
      uint64_t v66 = v65;
      uint64_t v67 = (uint64_t)v85;
      return sub_2519F9148(v66, v67);
    default:
      uint64_t v80 = v2;
      sub_251F286D4(a1, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      uint64_t v85 = &v75;
      uint64_t v76 = *(void *)(*(void *)(v27 - 8) + 64);
      MEMORY[0x270FA5388](v27 - 8);
      unint64_t v81 = (v28 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v29 = (char *)&v75 - v81;
      uint64_t v75 = sub_251F34DA0();
      uint64_t v30 = *(void *)(v75 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v29, 1, 1, v75);
      uint64_t v31 = a1 + *(int *)(v16 + 20);
      uint64_t v32 = type metadata accessor for StaticService();
      uint64_t v78 = &v75;
      uint64_t v33 = (uint64_t **)(v31 + *(int *)(v32 + 20));
      unint64_t v34 = (unint64_t)v33[1];
      uint64_t v79 = *v33;
      uint64_t v35 = (uint64_t)v29;
      uint64_t v36 = MEMORY[0x270FA5388](v32);
      int v38 = (char *)&v75 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
      unint64_t v77 = &v75;
      MEMORY[0x270FA5388](v36);
      uint64_t v39 = (char *)&v75 - v81;
      sub_251A1E280(v35, (uint64_t)&v75 - v81);
      uint64_t v40 = v75;
      int v41 = (*(uint64_t (**)(char *, uint64_t))(v30 + 48))(v39, 1);
      unint64_t v81 = v34;
      swift_bridgeObjectRetain();
      if (v41 == 1)
      {
        sub_251F34D90();
        sub_251B55B48(v35);
        sub_251B55B48((uint64_t)v39);
        (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v7, v38, v40);
      }
      else
      {
        sub_251B55B48(v35);
        uint64_t v68 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
        v68(v38, v39, v40);
        v68(v7, v38, v40);
      }
      uint64_t v69 = v79;
      uint64_t v70 = v83;
      uint64_t v71 = &v7[v83[5]];
      *(void *)uint64_t v71 = 0xD000000000000022;
      *((void *)v71 + 1) = 0x8000000251F737A0;
      uint64_t v72 = &v7[v70[6]];
      *(void *)uint64_t v72 = v69;
      *((void *)v72 + 1) = v81;
      uint64_t v73 = &v7[v70[7]];
      *(void *)uint64_t v73 = 0xD000000000000022;
      *((void *)v73 + 1) = 0x8000000251F737A0;
      uint64_t v74 = &v7[v70[8]];
      *((void *)v74 + 1) = 0;
      *((void *)v74 + 2) = 0;
      *(void *)uint64_t v74 = 6;
      v74[24] = 0;
      sub_251F285A8((uint64_t)v7, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
      (*(void (**)(char *, void, uint64_t, int *))(v82 + 56))(v13, 0, 1, v70);
      uint64_t v66 = (uint64_t)v13;
      uint64_t v67 = (uint64_t)v19;
      return sub_2519F9148(v66, v67);
  }
}

uint64_t sub_251F25700(uint64_t a1, uint64_t a2)
{
  uint64_t v111 = a2;
  uint64_t v4 = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v110 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v103 = (char *)&v101 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v101 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9E0);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v101 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v105 = (uint64_t *)((char *)&v101 - v17);
  MEMORY[0x270FA5388](v16);
  uint64_t v104 = (uint64_t)&v101 - v18;
  uint64_t v19 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v101 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v109 = (uint64_t *)((char *)&v101 - v24);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v108 = (uint64_t *)((char *)&v101 - v26);
  uint64_t v27 = a1;
  uint64_t v28 = a1 + *(int *)(v25 + 24);
  uint64_t result = type metadata accessor for StaticCharacteristic();
  uint64_t v30 = (uint64_t *)(v28 + *(int *)(result + 24));
  int v31 = *((unsigned __int8 *)v30 + 16) - 1;
  uint64_t v32 = *v30;
  switch(v31)
  {
    case 0:
      uint64_t v32 = v32;
      goto LABEL_9;
    case 1:
      uint64_t v32 = (unsigned __int16)v32;
      goto LABEL_9;
    case 2:
      uint64_t v32 = v32;
      goto LABEL_9;
    case 3:
      if (v32 < 0)
      {
        __break(1u);
        JUMPOUT(0x251F26240);
      }
      goto LABEL_9;
    case 4:
    case 5:
      uint64_t v32 = (int)v32;
LABEL_9:
      if (v32 == 4)
      {
        uint64_t v106 = v2;
        uint64_t v107 = (int *)v4;
        sub_251F286D4(v27, (uint64_t)v109, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
        uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        uint64_t v108 = &v101;
        uint64_t v64 = *(void *)(*(void *)(v63 - 8) + 64);
        MEMORY[0x270FA5388](v63 - 8);
        unint64_t v65 = (v64 + 15) & 0xFFFFFFFFFFFFFFF0;
        uint64_t v66 = sub_251F34DA0();
        uint64_t v67 = *(void *)(v66 - 8);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v67 + 56))((char *)&v101 - v65, 1, 1, v66);
        uint64_t v68 = v27 + *(int *)(v19 + 20);
        uint64_t v69 = type metadata accessor for StaticService();
        uint64_t v102 = (char *)&v101;
        uint64_t v70 = (uint64_t *)(v68 + *(int *)(v69 + 20));
        uint64_t v71 = v70[1];
        uint64_t v104 = *v70;
        uint64_t v72 = MEMORY[0x270FA5388](v69);
        uint64_t v74 = (char *)&v101 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
        MEMORY[0x270FA5388](v72);
        sub_251A1E280((uint64_t)&v101 - v65, (uint64_t)&v101 - v65);
        int v75 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v67 + 48))((char *)&v101 - v65, 1, v66);
        swift_bridgeObjectRetain();
        if (v75 == 1)
        {
          sub_251F34D90();
          sub_251B55B48((uint64_t)&v101 - v65);
          sub_251B55B48((uint64_t)&v101 - v65);
          uint64_t v76 = *(void (**)(char *, char *, uint64_t))(v67 + 32);
        }
        else
        {
          sub_251B55B48((uint64_t)&v101 - v65);
          uint64_t v76 = *(void (**)(char *, char *, uint64_t))(v67 + 32);
          v76(v74, (char *)&v101 - v65, v66);
        }
        uint64_t v86 = v66;
        uint64_t v87 = (uint64_t)v103;
        v76(v103, v74, v86);
        uint64_t v88 = v107;
        uint64_t v89 = (void *)(v87 + v107[5]);
        *uint64_t v89 = 0xD000000000000015;
        v89[1] = 0x8000000251F67CA0;
        uint64_t v90 = (void *)(v87 + v88[6]);
        *uint64_t v90 = v104;
        v90[1] = v71;
        uint64_t v91 = (void *)(v87 + v88[7]);
        *uint64_t v91 = 0xD000000000000015;
        v91[1] = 0x8000000251F67CA0;
        uint64_t v92 = v87 + v88[8];
        *(void *)uint64_t v92 = 0;
        *(void *)(v92 + 8) = 0;
        *(unsigned char *)(v92 + 24) = 0;
        *(void *)(v92 + 16) = 0;
        uint64_t v93 = (uint64_t)v105;
        sub_251F285A8(v87, (uint64_t)v105, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
        (*(void (**)(uint64_t, void, uint64_t, int *))(v110 + 56))(v93, 0, 1, v88);
        return sub_2519F9148(v93, (uint64_t)v109);
      }
      else if (v32 == 3)
      {
        uint64_t v106 = v2;
        uint64_t v107 = (int *)v4;
        sub_251F286D4(v27, (uint64_t)v108, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
        uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        uint64_t v109 = &v101;
        uint64_t v50 = *(void *)(*(void *)(v49 - 8) + 64);
        MEMORY[0x270FA5388](v49 - 8);
        uint64_t v102 = (char *)((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v51 = (char *)((char *)&v101 - v102);
        uint64_t v52 = sub_251F34DA0();
        uint64_t v53 = *(void *)(v52 - 8);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56))(v51, 1, 1, v52);
        uint64_t v54 = v27 + *(int *)(v19 + 20);
        uint64_t v55 = type metadata accessor for StaticService();
        uint64_t v103 = (char *)&v101;
        unint64_t v56 = (uint64_t *)(v54 + *(int *)(v55 + 20));
        uint64_t v57 = v56[1];
        uint64_t v105 = (uint64_t *)*v56;
        uint64_t v58 = MEMORY[0x270FA5388](v55);
        uint64_t v60 = (char *)&v101 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
        MEMORY[0x270FA5388](v58);
        uint64_t v61 = (char *)((char *)&v101 - v102);
        sub_251A1E280((uint64_t)v51, (char *)&v101 - v102);
        int v62 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 48))(v61, 1, v52);
        swift_bridgeObjectRetain();
        if (v62 == 1)
        {
          sub_251F34D90();
          sub_251B55B48((uint64_t)v51);
          sub_251B55B48((uint64_t)v61);
          (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v11, v60, v52);
        }
        else
        {
          sub_251B55B48((uint64_t)v51);
          unint64_t v77 = *(void (**)(char *, char *, uint64_t))(v53 + 32);
          v77(v60, v61, v52);
          v77(v11, v60, v52);
        }
        uint64_t v78 = v107;
        uint64_t v79 = &v11[v107[5]];
        *(void *)uint64_t v79 = 0xD000000000000015;
        *((void *)v79 + 1) = 0x8000000251F658C0;
        uint64_t v80 = &v11[v78[6]];
        *(void *)uint64_t v80 = v105;
        *((void *)v80 + 1) = v57;
        unint64_t v81 = &v11[v78[7]];
        *(void *)unint64_t v81 = 0xD000000000000015;
        *((void *)v81 + 1) = 0x8000000251F658C0;
        uint64_t v82 = &v11[v78[8]];
        *((void *)v82 + 1) = 0;
        *((void *)v82 + 2) = 0;
        *(void *)uint64_t v82 = 5;
        v82[24] = 0;
        uint64_t v83 = v104;
        sub_251F285A8((uint64_t)v11, v104, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
        (*(void (**)(uint64_t, void, uint64_t, int *))(v110 + 56))(v83, 0, 1, v78);
        uint64_t v84 = v83;
        uint64_t v85 = (uint64_t)v108;
        return sub_2519F9148(v84, v85);
      }
      return result;
    default:
      uint64_t v108 = (uint64_t *)v7;
      uint64_t v109 = (uint64_t *)v15;
      uint64_t v106 = v2;
      uint64_t v107 = (int *)v4;
      uint64_t v33 = v27;
      sub_251F286D4(v27, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      uint64_t v105 = &v101;
      uint64_t v35 = *(void *)(*(void *)(v34 - 8) + 64);
      MEMORY[0x270FA5388](v34 - 8);
      uint64_t v103 = (char *)((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v36 = (char *)((char *)&v101 - v103);
      uint64_t v37 = sub_251F34DA0();
      uint64_t v38 = *(void *)(v37 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56))(v36, 1, 1, v37);
      uint64_t v39 = v33 + *(int *)(v19 + 20);
      uint64_t v40 = type metadata accessor for StaticService();
      uint64_t v102 = (char *)&v101;
      int v41 = (uint64_t *)(v39 + *(int *)(v40 + 20));
      uint64_t v42 = v41[1];
      uint64_t v104 = *v41;
      uint64_t v43 = MEMORY[0x270FA5388](v40);
      uint64_t v45 = (char *)&v101 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
      MEMORY[0x270FA5388](v43);
      uint64_t v46 = (char *)((char *)&v101 - v103);
      sub_251A1E280((uint64_t)v36, (char *)&v101 - v103);
      int v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48))(v46, 1, v37);
      swift_bridgeObjectRetain();
      uint64_t v103 = v22;
      if (v47 == 1)
      {
        sub_251F34D90();
        sub_251B55B48((uint64_t)v36);
        sub_251B55B48((uint64_t)v46);
        uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
      }
      else
      {
        sub_251B55B48((uint64_t)v36);
        uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
        v48(v45, v46, v37);
      }
      uint64_t v94 = (uint64_t)v108;
      v48((char *)v108, v45, v37);
      uint64_t v95 = v107;
      uint64_t v96 = (void *)(v94 + v107[5]);
      *uint64_t v96 = 0xD000000000000015;
      v96[1] = 0x8000000251F67CA0;
      uint64_t v97 = (void *)(v94 + v95[6]);
      *uint64_t v97 = v104;
      v97[1] = v42;
      uint64_t v98 = (void *)(v94 + v95[7]);
      *uint64_t v98 = 0xD000000000000015;
      v98[1] = 0x8000000251F67CA0;
      uint64_t v99 = v94 + v95[8];
      *(void *)(v99 + 8) = 0;
      *(void *)(v99 + 16) = 0;
      *(void *)uint64_t v99 = 6;
      *(unsigned char *)(v99 + 24) = 0;
      uint64_t v100 = (uint64_t)v109;
      sub_251F285A8(v94, (uint64_t)v109, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
      (*(void (**)(uint64_t, void, uint64_t, int *))(v110 + 56))(v100, 0, 1, v95);
      uint64_t v84 = v100;
      uint64_t v85 = (uint64_t)v103;
      return sub_2519F9148(v84, v85);
  }
}

unint64_t sub_251F26258(uint64_t a1)
{
  unint64_t v14 = sub_2519FB8A4(MEMORY[0x263F8EE78]);
  if (qword_269B9C568 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_269BA6038;
  uint64_t v2 = unk_269BA6040;
  uint64_t v4 = qword_269BA6048;
  uint64_t v5 = unk_269BA6050;
  uint64_t v6 = qword_269BA6058;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA03E8);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_251F38650;
  *(void *)(v7 + 32) = v3;
  *(void *)(v7 + 40) = v2;
  *(void *)(v7 + 48) = v4;
  *(void *)(v7 + 56) = v5;
  *(void *)(v7 + 64) = v6;
  uint64_t v13 = v7;
  MEMORY[0x270FA5388](v7);
  v11[8] = 1;
  uint64_t v12 = &v13;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v8 = sub_251B0A6D4((void (*)(uint64_t *__return_ptr, char *))sub_251F2873C, (uint64_t)v11, a1);
  uint64_t v9 = sub_251EE0F50(v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251F23294(v9, (uint64_t)&v14, (void (*)(char *, uint64_t))sub_251F216A4);
  swift_bridgeObjectRelease();
  unint64_t result = v14;
  if (!*(void *)(v14 + 16))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

unint64_t sub_251F26428(uint64_t a1)
{
  unint64_t v14 = sub_2519FB8A4(MEMORY[0x263F8EE78]);
  if (qword_269B9C570 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_269BA6060;
  uint64_t v2 = *(void *)algn_269BA6068;
  uint64_t v4 = qword_269BA6070;
  uint64_t v5 = unk_269BA6078;
  uint64_t v6 = qword_269BA6080;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA03E8);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_251F38650;
  *(void *)(v7 + 32) = v3;
  *(void *)(v7 + 40) = v2;
  *(void *)(v7 + 48) = v4;
  *(void *)(v7 + 56) = v5;
  *(void *)(v7 + 64) = v6;
  uint64_t v13 = v7;
  MEMORY[0x270FA5388](v7);
  v11[8] = 1;
  uint64_t v12 = &v13;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v8 = sub_251B0A6D4((void (*)(uint64_t *__return_ptr, char *))sub_251F2873C, (uint64_t)v11, a1);
  uint64_t v9 = sub_251EE0F50(v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251F23294(v9, (uint64_t)&v14, (void (*)(char *, uint64_t))sub_251F22020);
  swift_bridgeObjectRelease();
  unint64_t result = v14;
  if (!*(void *)(v14 + 16))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

unint64_t sub_251F265F8(uint64_t a1)
{
  unint64_t v14 = sub_2519FB8A4(MEMORY[0x263F8EE78]);
  if (qword_269B9C578 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_269BA6088;
  uint64_t v2 = unk_269BA6090;
  uint64_t v4 = qword_269BA6098;
  uint64_t v5 = unk_269BA60A0;
  uint64_t v6 = qword_269BA60A8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA03E8);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_251F38650;
  *(void *)(v7 + 32) = v3;
  *(void *)(v7 + 40) = v2;
  *(void *)(v7 + 48) = v4;
  *(void *)(v7 + 56) = v5;
  *(void *)(v7 + 64) = v6;
  uint64_t v13 = v7;
  MEMORY[0x270FA5388](v7);
  v11[8] = 1;
  uint64_t v12 = &v13;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v8 = sub_251B0A6D4((void (*)(uint64_t *__return_ptr, char *))sub_251F2873C, (uint64_t)v11, a1);
  uint64_t v9 = sub_251EE0F50(v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251F23294(v9, (uint64_t)&v14, (void (*)(char *, uint64_t))sub_251F23528);
  swift_bridgeObjectRelease();
  unint64_t result = v14;
  if (!*(void *)(v14 + 16))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

unint64_t sub_251F267C8(uint64_t a1)
{
  unint64_t v14 = sub_2519FB8A4(MEMORY[0x263F8EE78]);
  if (qword_269B9C580 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_269BA60B0;
  uint64_t v2 = *(void *)algn_269BA60B8;
  uint64_t v4 = qword_269BA60C0;
  uint64_t v5 = unk_269BA60C8;
  uint64_t v6 = qword_269BA60D0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA03E8);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_251F38650;
  *(void *)(v7 + 32) = v3;
  *(void *)(v7 + 40) = v2;
  *(void *)(v7 + 48) = v4;
  *(void *)(v7 + 56) = v5;
  *(void *)(v7 + 64) = v6;
  uint64_t v13 = v7;
  MEMORY[0x270FA5388](v7);
  v11[8] = 1;
  uint64_t v12 = &v13;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v8 = sub_251B0A6D4((void (*)(uint64_t *__return_ptr, char *))sub_251F2873C, (uint64_t)v11, a1);
  uint64_t v9 = sub_251EE0F50(v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251F23294(v9, (uint64_t)&v14, (void (*)(char *, uint64_t))sub_251F24EA0);
  swift_bridgeObjectRelease();
  unint64_t result = v14;
  if (!*(void *)(v14 + 16))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

unint64_t sub_251F26998(uint64_t a1)
{
  unint64_t v14 = sub_2519FB8A4(MEMORY[0x263F8EE78]);
  if (qword_269B9C588 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_269BA60D8;
  uint64_t v2 = unk_269BA60E0;
  uint64_t v4 = qword_269BA60E8;
  uint64_t v5 = unk_269BA60F0;
  uint64_t v6 = qword_269BA60F8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA03E8);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_251F38650;
  *(void *)(v7 + 32) = v3;
  *(void *)(v7 + 40) = v2;
  *(void *)(v7 + 48) = v4;
  *(void *)(v7 + 56) = v5;
  *(void *)(v7 + 64) = v6;
  uint64_t v13 = v7;
  MEMORY[0x270FA5388](v7);
  v11[8] = 1;
  uint64_t v12 = &v13;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v8 = sub_251B0A6D4((void (*)(uint64_t *__return_ptr, char *))sub_251C04504, (uint64_t)v11, a1);
  uint64_t v9 = sub_251EE0F50(v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251F23294(v9, (uint64_t)&v14, (void (*)(char *, uint64_t))sub_251F25700);
  swift_bridgeObjectRelease();
  unint64_t result = v14;
  if (!*(void *)(v14 + 16))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

unint64_t _s13HomeDataModel18SecuritySummarizerV23securityIssueDictionary4fromSDyAA43StaticAccessoryServiceCharacteristicTripletVAA019IconTextValueStringB6HolderVGShyAA0jK0VG_tFZ_0(uint64_t a1)
{
  unint64_t v2 = sub_2519FB8A4(MEMORY[0x263F8EE78]);
  unint64_t v3 = sub_251F26258(a1);
  if (v3)
  {
    uint64_t v4 = v3;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v19 = v2;
    sub_251F21128(v4, (uint64_t)sub_251F21610, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v19);
    unint64_t v2 = v19;
    swift_bridgeObjectRelease();
  }
  unint64_t v6 = sub_251F26428(a1);
  if (v6)
  {
    uint64_t v7 = v6;
    char v8 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v19 = v2;
    sub_251F21128(v7, (uint64_t)sub_251F21610, 0, v8, (uint64_t)&v19);
    unint64_t v2 = v19;
    swift_bridgeObjectRelease();
  }
  unint64_t v9 = sub_251F265F8(a1);
  if (v9)
  {
    uint64_t v10 = v9;
    char v11 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v19 = v2;
    sub_251F21128(v10, (uint64_t)sub_251F21610, 0, v11, (uint64_t)&v19);
    unint64_t v2 = v19;
    swift_bridgeObjectRelease();
  }
  unint64_t v12 = sub_251F267C8(a1);
  if (v12)
  {
    uint64_t v13 = v12;
    char v14 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v19 = v2;
    sub_251F21128(v13, (uint64_t)sub_251F21610, 0, v14, (uint64_t)&v19);
    unint64_t v2 = v19;
    swift_bridgeObjectRelease();
  }
  unint64_t v15 = sub_251F26998(a1);
  if (v15)
  {
    uint64_t v16 = v15;
    char v17 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v19 = v2;
    sub_251F21128(v16, (uint64_t)sub_251F21610, 0, v17, (uint64_t)&v19);
    unint64_t v2 = v19;
    swift_bridgeObjectRelease();
  }
  return v2;
}

unint64_t sub_251F26D60()
{
  unint64_t result = qword_269BA6148;
  if (!qword_269BA6148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6148);
  }
  return result;
}

unint64_t sub_251F26DB4()
{
  unint64_t result = qword_269BA6150;
  if (!qword_269BA6150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6150);
  }
  return result;
}

unint64_t sub_251F26E08()
{
  unint64_t result = qword_269BA6158;
  if (!qword_269BA6158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6158);
  }
  return result;
}

unint64_t sub_251F26E5C()
{
  unint64_t result = qword_269BA6160;
  if (!qword_269BA6160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6160);
  }
  return result;
}

unint64_t sub_251F26EB0()
{
  unint64_t result = qword_269BA6168;
  if (!qword_269BA6168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6168);
  }
  return result;
}

unint64_t sub_251F26F04()
{
  unint64_t result = qword_269BA6170;
  if (!qword_269BA6170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6170);
  }
  return result;
}

unint64_t sub_251F26F58()
{
  unint64_t result = qword_269BA6178;
  if (!qword_269BA6178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6178);
  }
  return result;
}

unint64_t sub_251F26FAC()
{
  unint64_t result = qword_269BA6180;
  if (!qword_269BA6180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6180);
  }
  return result;
}

unint64_t sub_251F27000()
{
  unint64_t result = qword_269BA6188;
  if (!qword_269BA6188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6188);
  }
  return result;
}

unint64_t sub_251F27058()
{
  unint64_t result = qword_269BA61D8;
  if (!qword_269BA61D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269BA61E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA61D8);
  }
  return result;
}

unint64_t sub_251F270B8()
{
  unint64_t result = qword_269BA61E8;
  if (!qword_269BA61E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA61E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for SecuritySummarizer()
{
  return &type metadata for SecuritySummarizer;
}

ValueMetadata *type metadata accessor for SecurityIssue()
{
  return &type metadata for SecurityIssue;
}

unsigned char *_s13HomeDataModel13SecurityIssueOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251F271FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SecurityIssue.CodingKeys()
{
  return &type metadata for SecurityIssue.CodingKeys;
}

ValueMetadata *type metadata accessor for SecurityIssue.TriggeredSecuritySystemCodingKeys()
{
  return &type metadata for SecurityIssue.TriggeredSecuritySystemCodingKeys;
}

ValueMetadata *type metadata accessor for SecurityIssue.OpenGarageDoorCodingKeys()
{
  return &type metadata for SecurityIssue.OpenGarageDoorCodingKeys;
}

ValueMetadata *type metadata accessor for SecurityIssue.OpenDoorCodingKeys()
{
  return &type metadata for SecurityIssue.OpenDoorCodingKeys;
}

ValueMetadata *type metadata accessor for SecurityIssue.UnlockedDoorCodingKeys()
{
  return &type metadata for SecurityIssue.UnlockedDoorCodingKeys;
}

ValueMetadata *type metadata accessor for SecurityIssue.OpenWindowCodingKeys()
{
  return &type metadata for SecurityIssue.OpenWindowCodingKeys;
}

ValueMetadata *type metadata accessor for SecurityIssue.DisarmedSecuritySystemCodingKeys()
{
  return &type metadata for SecurityIssue.DisarmedSecuritySystemCodingKeys;
}

ValueMetadata *type metadata accessor for SecurityIssue.NonresponsiveCodingKeys()
{
  return &type metadata for SecurityIssue.NonresponsiveCodingKeys;
}

ValueMetadata *type metadata accessor for SecurityIssue.NoneCodingKeys()
{
  return &type metadata for SecurityIssue.NoneCodingKeys;
}

unint64_t sub_251F272B8()
{
  unint64_t result = qword_269BA61F0;
  if (!qword_269BA61F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA61F0);
  }
  return result;
}

unint64_t sub_251F27310()
{
  unint64_t result = qword_269BA61F8;
  if (!qword_269BA61F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA61F8);
  }
  return result;
}

unint64_t sub_251F27368()
{
  unint64_t result = qword_269BA6200;
  if (!qword_269BA6200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6200);
  }
  return result;
}

unint64_t sub_251F273C0()
{
  unint64_t result = qword_269BA6208;
  if (!qword_269BA6208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6208);
  }
  return result;
}

unint64_t sub_251F27418()
{
  unint64_t result = qword_269BA6210;
  if (!qword_269BA6210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6210);
  }
  return result;
}

unint64_t sub_251F27470()
{
  unint64_t result = qword_269BA6218;
  if (!qword_269BA6218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6218);
  }
  return result;
}

unint64_t sub_251F274C8()
{
  unint64_t result = qword_269BA6220;
  if (!qword_269BA6220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6220);
  }
  return result;
}

unint64_t sub_251F27520()
{
  unint64_t result = qword_269BA6228;
  if (!qword_269BA6228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6228);
  }
  return result;
}

unint64_t sub_251F27578()
{
  unint64_t result = qword_269BA6230;
  if (!qword_269BA6230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6230);
  }
  return result;
}

unint64_t sub_251F275D0()
{
  unint64_t result = qword_269BA6238;
  if (!qword_269BA6238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6238);
  }
  return result;
}

unint64_t sub_251F27628()
{
  unint64_t result = qword_269BA6240;
  if (!qword_269BA6240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6240);
  }
  return result;
}

unint64_t sub_251F27680()
{
  unint64_t result = qword_269BA6248;
  if (!qword_269BA6248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6248);
  }
  return result;
}

unint64_t sub_251F276D8()
{
  unint64_t result = qword_269BA6250;
  if (!qword_269BA6250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6250);
  }
  return result;
}

unint64_t sub_251F27730()
{
  unint64_t result = qword_269BA6258;
  if (!qword_269BA6258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6258);
  }
  return result;
}

unint64_t sub_251F27788()
{
  unint64_t result = qword_269BA6260;
  if (!qword_269BA6260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6260);
  }
  return result;
}

unint64_t sub_251F277E0()
{
  unint64_t result = qword_269BA6268;
  if (!qword_269BA6268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6268);
  }
  return result;
}

unint64_t sub_251F27838()
{
  unint64_t result = qword_269BA6270;
  if (!qword_269BA6270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6270);
  }
  return result;
}

unint64_t sub_251F27890()
{
  unint64_t result = qword_269BA6278;
  if (!qword_269BA6278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6278);
  }
  return result;
}

unint64_t sub_251F278E8()
{
  unint64_t result = qword_269BA6280;
  if (!qword_269BA6280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6280);
  }
  return result;
}

uint64_t sub_251F2793C()
{
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_251F1E1F0(v3);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = 0;
    unsigned int v6 = (void *)MEMORY[0x263F8EE80];
    while (1)
    {
      unsigned __int8 v7 = *(unsigned char *)(v4 + v2 + 32);
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v9 = sub_2519FF060(v7);
      uint64_t v10 = v6[2];
      BOOL v11 = (v8 & 1) == 0;
      uint64_t v12 = v10 + v11;
      if (__OFADD__(v10, v11))
      {
        __break(1u);
LABEL_103:
        __break(1u);
        return static String.hfLocalized(_:)(0xD00000000000002CLL, 0x8000000251F73B80);
      }
      uint64_t v0 = v8;
      if (v6[3] >= v12)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_251A16E48();
        }
      }
      else
      {
        sub_251A0A2CC(v12, isUniquelyReferenced_nonNull_native);
        unint64_t v13 = sub_2519FF060(v7);
        if ((v0 & 1) != (v14 & 1)) {
          goto LABEL_127;
        }
        unint64_t v9 = v13;
      }
      swift_bridgeObjectRelease();
      if ((v0 & 1) == 0)
      {
        v6[(v9 >> 6) + 8] |= 1 << v9;
        *(unsigned char *)(v6[6] + v9) = v7;
        *(void *)(v6[7] + 8 * v9) = 0;
        uint64_t v15 = v6[2];
        BOOL v16 = __OFADD__(v15, 1);
        uint64_t v17 = v15 + 1;
        if (v16)
        {
          __break(1u);
          goto LABEL_110;
        }
        void v6[2] = v17;
      }
      uint64_t v18 = v6[7];
      uint64_t v19 = *(void *)(v18 + 8 * v9);
      BOOL v16 = __OFADD__(v19, 1);
      uint64_t v20 = v19 + 1;
      if (v16) {
        goto LABEL_103;
      }
      ++v2;
      *(void *)(v18 + 8 * v9) = v20;
      if (v5 == v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
    }
  }
  unsigned int v6 = (void *)MEMORY[0x263F8EE80];
LABEL_16:
  swift_bridgeObjectRelease();
  uint64_t v21 = v6[2];
  if (!v21)
  {
    uint64_t v27 = 0;
    uint64_t v24 = 0;
    goto LABEL_29;
  }
  unint64_t v22 = sub_2519FF060(0);
  if (v23)
  {
    uint64_t v24 = *(void *)(v6[7] + 8 * v22);
    uint64_t v21 = v6[2];
    if (v21) {
      goto LABEL_19;
    }
LABEL_24:
    uint64_t v27 = 0;
    goto LABEL_29;
  }
  uint64_t v24 = 0;
  uint64_t v21 = v6[2];
  if (!v21) {
    goto LABEL_24;
  }
LABEL_19:
  unint64_t v25 = sub_2519FF060(1u);
  if (v26)
  {
    uint64_t v27 = *(void *)(v6[7] + 8 * v25);
    uint64_t v21 = v6[2];
    if (!v21) {
      goto LABEL_29;
    }
  }
  else
  {
    uint64_t v27 = 0;
    uint64_t v21 = v6[2];
    if (!v21) {
      goto LABEL_29;
    }
  }
  unint64_t v28 = sub_2519FF060(2u);
  if (v29) {
    uint64_t v21 = *(void *)(v6[7] + 8 * v28);
  }
  else {
    uint64_t v21 = 0;
  }
LABEL_29:
  BOOL v16 = __OFADD__(v27, v21);
  uint64_t v30 = v27 + v21;
  if (v16)
  {
    __break(1u);
LABEL_114:
    __break(1u);
LABEL_115:
    swift_once();
    goto LABEL_51;
  }
  uint64_t v31 = v6[2];
  if (v31)
  {
    unint64_t v32 = sub_2519FF060(4u);
    if (v33) {
      uint64_t v31 = *(void *)(v6[7] + 8 * v32);
    }
    else {
      uint64_t v31 = 0;
    }
  }
  uint64_t v0 = v30 + v31;
  if (__OFADD__(v30, v31)) {
    goto LABEL_114;
  }
  if (!v6[2])
  {
    uint64_t v5 = 0;
    uint64_t isUniquelyReferenced_nonNull_native = 0;
    goto LABEL_47;
  }
  unint64_t v34 = sub_2519FF060(3u);
  if ((v35 & 1) == 0)
  {
    uint64_t isUniquelyReferenced_nonNull_native = 0;
    if (v6[2]) {
      goto LABEL_38;
    }
LABEL_43:
    uint64_t v5 = 0;
    goto LABEL_47;
  }
  uint64_t isUniquelyReferenced_nonNull_native = *(void *)(v6[7] + 8 * v34);
  if (!v6[2]) {
    goto LABEL_43;
  }
LABEL_38:
  unint64_t v36 = sub_2519FF060(5u);
  if (v37)
  {
    uint64_t v5 = *(void *)(v6[7] + 8 * v36);
    if (!v6[2]) {
      goto LABEL_47;
    }
  }
  else
  {
    uint64_t v5 = 0;
    if (!v6[2]) {
      goto LABEL_47;
    }
  }
  unint64_t v38 = sub_2519FF060(6u);
  if (v39)
  {
    uint64_t v2 = *(void *)(v6[7] + 8 * v38);
    goto LABEL_48;
  }
LABEL_47:
  uint64_t v2 = 0;
LABEL_48:
  swift_bridgeObjectRelease();
  if (v24 <= 0) {
    goto LABEL_54;
  }
  if (v24 != 1) {
    goto LABEL_61;
  }
  if (qword_269B9C550 != -1) {
    goto LABEL_115;
  }
LABEL_51:
  uint64_t v40 = off_269BA6020;
  if (!*((void *)off_269BA6020 + 2))
  {
    __break(1u);
    goto LABEL_117;
  }
  unint64_t v41 = sub_2519FF060(0);
  if (v42) {
    goto LABEL_96;
  }
  __break(1u);
LABEL_54:
  if (v0 >= 1)
  {
    if (v0 == 1)
    {
      if (qword_269B9C550 != -1) {
        swift_once();
      }
      uint64_t v40 = off_269BA6020;
      if (*((void *)off_269BA6020 + 2))
      {
        unint64_t v41 = sub_2519FF060(2u);
        if ((v43 & 1) == 0)
        {
          __break(1u);
LABEL_61:
          if (qword_269B9C558 == -1)
          {
LABEL_62:
            if (*((void *)off_269BA6028 + 2))
            {
              sub_2519FF060(0);
              if (v44) {
                swift_bridgeObjectRetain();
              }
            }
            __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
            uint64_t v45 = swift_allocObject();
            uint64_t v46 = MEMORY[0x263F8D6C8];
            *(_OWORD *)(v45 + 16) = xmmword_251F38650;
            uint64_t v47 = MEMORY[0x263F8D750];
            *(void *)(v45 + 56) = v46;
            *(void *)(v45 + 64) = v47;
            *(void *)(v45 + 32) = v24;
LABEL_111:
            uint64_t v59 = sub_251F35720();
            swift_bridgeObjectRelease();
            return v59;
          }
LABEL_117:
          swift_once();
          goto LABEL_62;
        }
        goto LABEL_96;
      }
      __break(1u);
LABEL_119:
      swift_once();
LABEL_74:
      if (*((void *)off_269BA6028 + 2))
      {
        sub_2519FF060(2u);
        if (v49) {
          swift_bridgeObjectRetain();
        }
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
      uint64_t v50 = swift_allocObject();
      uint64_t v51 = MEMORY[0x263F8D6C8];
      *(_OWORD *)(v50 + 16) = xmmword_251F38650;
      uint64_t v52 = MEMORY[0x263F8D750];
      *(void *)(v50 + 56) = v51;
      *(void *)(v50 + 64) = v52;
      *(void *)(v50 + 32) = v0;
      goto LABEL_111;
    }
LABEL_73:
    if (qword_269B9C558 == -1) {
      goto LABEL_74;
    }
    goto LABEL_119;
  }
  if (isUniquelyReferenced_nonNull_native >= 1)
  {
    if (isUniquelyReferenced_nonNull_native == 1)
    {
      if (qword_269B9C550 != -1) {
        swift_once();
      }
      uint64_t v40 = off_269BA6020;
      if (*((void *)off_269BA6020 + 2))
      {
        unint64_t v41 = sub_2519FF060(3u);
        if ((v48 & 1) == 0)
        {
          __break(1u);
          goto LABEL_73;
        }
LABEL_96:
        uint64_t v59 = *(void *)(v40[7] + 16 * v41);
        swift_bridgeObjectRetain();
        return v59;
      }
      __break(1u);
LABEL_121:
      swift_once();
LABEL_86:
      if (*((void *)off_269BA6028 + 2))
      {
        sub_2519FF060(3u);
        if (v54) {
          swift_bridgeObjectRetain();
        }
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
      uint64_t v55 = swift_allocObject();
      uint64_t v56 = MEMORY[0x263F8D6C8];
      *(_OWORD *)(v55 + 16) = xmmword_251F38650;
      uint64_t v57 = MEMORY[0x263F8D750];
      *(void *)(v55 + 56) = v56;
      *(void *)(v55 + 64) = v57;
      *(void *)(v55 + 32) = isUniquelyReferenced_nonNull_native;
      goto LABEL_111;
    }
LABEL_85:
    if (qword_269B9C558 == -1) {
      goto LABEL_86;
    }
    goto LABEL_121;
  }
  if (v5 >= 1)
  {
    if (v5 == 1)
    {
      if (qword_269B9C550 != -1) {
        swift_once();
      }
      uint64_t v40 = off_269BA6020;
      if (*((void *)off_269BA6020 + 2))
      {
        unint64_t v41 = sub_2519FF060(5u);
        if (v53) {
          goto LABEL_96;
        }
        __break(1u);
        goto LABEL_85;
      }
      __break(1u);
    }
    else if (qword_269B9C558 == -1)
    {
      goto LABEL_98;
    }
    swift_once();
LABEL_98:
    if (*((void *)off_269BA6028 + 2))
    {
      sub_2519FF060(5u);
      if (v60) {
        swift_bridgeObjectRetain();
      }
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
    uint64_t v61 = swift_allocObject();
    uint64_t v62 = MEMORY[0x263F8D6C8];
    *(_OWORD *)(v61 + 16) = xmmword_251F38650;
    uint64_t v63 = MEMORY[0x263F8D750];
    *(void *)(v61 + 56) = v62;
    *(void *)(v61 + 64) = v63;
    *(void *)(v61 + 32) = v5;
    goto LABEL_111;
  }
  if (v2 < 1) {
    return static String.hfLocalized(_:)(0xD00000000000002CLL, 0x8000000251F73B80);
  }
  if (v2 != 1)
  {
    if (qword_269B9C558 == -1) {
      goto LABEL_106;
    }
    goto LABEL_125;
  }
  if (qword_269B9C550 != -1) {
    swift_once();
  }
  uint64_t v40 = off_269BA6020;
  if (!*((void *)off_269BA6020 + 2))
  {
    __break(1u);
LABEL_125:
    swift_once();
LABEL_106:
    if (*((void *)off_269BA6028 + 2))
    {
      sub_2519FF060(6u);
      if (v64) {
        swift_bridgeObjectRetain();
      }
    }
LABEL_110:
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
    uint64_t v65 = swift_allocObject();
    uint64_t v66 = MEMORY[0x263F8D6C8];
    *(_OWORD *)(v65 + 16) = xmmword_251F38650;
    uint64_t v67 = MEMORY[0x263F8D750];
    *(void *)(v65 + 56) = v66;
    *(void *)(v65 + 64) = v67;
    *(void *)(v65 + 32) = v2;
    goto LABEL_111;
  }
  unint64_t v41 = sub_2519FF060(6u);
  if (v58) {
    goto LABEL_96;
  }
  __break(1u);
LABEL_127:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251F2820C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000017 && a2 == 0x8000000251F73800 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617261476E65706FLL && a2 == 0xEE00726F6F446567 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F6F446E65706FLL && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x64656B636F6C6E75 && a2 == 0xEC000000726F6F44 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x646E69576E65706FLL && a2 == 0xEA0000000000776FLL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000251F73820 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6F707365726E6F6ELL && a2 == 0xED0000657669736ELL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 1701736302 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v5 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v5) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_251F285A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251F28610(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251F28670(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IconTextValueStringDataHolder();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_251F286D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251F2873C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_251C04504(a1, a2);
}

id MatterExecuteRequest.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MatterExecuteRequest()
{
  return self;
}

uint64_t WaterCategoryInformation.stateSnapshot.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251B75C78(v1, a1);
}

uint64_t WaterCategoryInformation.id.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for WaterCategoryInformation();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for WaterCategoryInformation()
{
  uint64_t result = qword_269BA62D8;
  if (!qword_269BA62D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t WaterCategoryInformation.categoryStaticAccessories.getter()
{
  type metadata accessor for WaterCategoryInformation();
  return swift_bridgeObjectRetain();
}

uint64_t static WaterCategoryInformation.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  if ((_s13HomeDataModel13StateSnapshotV2eeoiySbAC_ACtFZ_0(a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for WaterCategoryInformation();
  if ((sub_251DB1CC8(*((unsigned char *)a1 + *(int *)(v4 + 20)), *((unsigned char *)a2 + *(int *)(v4 + 20))) & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(int *)(v4 + 24);
  uint64_t v6 = *(uint64_t *)((char *)a1 + v5);
  uint64_t v7 = *(uint64_t *)((char *)a2 + v5);
  return sub_251B04FB8(v6, v7);
}

uint64_t WaterCategoryInformation.hash(into:)(long long *a1)
{
  StateSnapshot.hash(into:)(a1);
  uint64_t v3 = type metadata accessor for WaterCategoryInformation();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v1 + *(int *)(v3 + 24));
  swift_bridgeObjectRetain();
  sub_251A54A64(a1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t WaterCategoryInformation.hashValue.getter()
{
  sub_251F36CA0();
  StateSnapshot.hash(into:)(v3);
  uint64_t v1 = type metadata accessor for WaterCategoryInformation();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  sub_251A54A64(v3, *(void *)(v0 + *(int *)(v1 + 24)));
  return sub_251F36D00();
}

uint64_t WaterCategoryInformation.summary.getter()
{
  type metadata accessor for WaterCategoryInformation();
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_251AAD138(v1);
  uint64_t v13 = v0;
  uint64_t v3 = sub_251AA8A60(0, (void (*)(uint64_t *, char *))sub_251F2993C, (uint64_t)v12, v2);
  swift_release();
  if (!v3) {
    return static String.hfLocalized(_:)(0xD000000000000027, 0x8000000251F73C10);
  }
  static String.hfLocalized(_:)(0xD000000000000023, 0x8000000251F73BE0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_251F3A500;
  *(void *)(v4 + 56) = MEMORY[0x263F8D310];
  *(void *)(v4 + 64) = sub_251B44770();
  *(void *)(v4 + 32) = 7695397;
  *(void *)(v4 + 40) = 0xE300000000000000;
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_251AAD138(v5);
  MEMORY[0x270FA5388](v6);
  void v11[2] = v0;
  uint64_t v7 = sub_251AA8A60(0, (void (*)(uint64_t *, char *))sub_251F2AD0C, (uint64_t)v11, v6);
  swift_release();
  uint64_t v8 = MEMORY[0x263F8D750];
  *(void *)(v4 + 96) = MEMORY[0x263F8D6C8];
  *(void *)(v4 + 104) = v8;
  *(void *)(v4 + 72) = v7;
  uint64_t v9 = sub_251F35720();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t WaterCategoryInformation.shortSummary.getter()
{
  type metadata accessor for WaterCategoryInformation();
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_251AAD138(v1);
  uint64_t v10 = v0;
  uint64_t v3 = sub_251AA8A60(0, (void (*)(uint64_t *, char *))sub_251F2AD0C, (uint64_t)v9, v2);
  swift_release();
  if (!v3) {
    return 0;
  }
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_251AAD138(v4);
  MEMORY[0x270FA5388](v5);
  v8[2] = v0;
  uint64_t v6 = sub_251AA8A60(0, (void (*)(uint64_t *, char *))sub_251F2AD0C, (uint64_t)v8, v5);
  swift_release();
  uint64_t v11 = v6;
  return sub_251F36AB0();
}

void *WaterCategoryInformation.statusItems.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA62A0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA62A8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA62B0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA62B8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_251AACD88();
  *(_OWORD *)&v33[56] = xmmword_251F617A0;
  uint64_t v13 = swift_bridgeObjectRetain();
  sub_251C569C0(v13, (uint64_t)v11);
  uint64_t v14 = type metadata accessor for LeakAlarmStatusItem(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v11, 1, v14) == 1)
  {
    sub_251A1B064((uint64_t)v11, &qword_269BA62B8);
    long long v34 = 0u;
    long long v35 = 0u;
    unint64_t v36 = 0;
  }
  else
  {
    *((void *)&v35 + 1) = v14;
    unint64_t v36 = &off_270277E00;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v34);
    sub_251F29958((uint64_t)v11, (uint64_t)boxed_opaque_existential_1, type metadata accessor for LeakAlarmStatusItem);
  }
  uint64_t v16 = swift_bridgeObjectRetain();
  sub_251A1CCB8(v16, (uint64_t)v8);
  uint64_t v17 = type metadata accessor for IrrigationStatusItem(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v8, 1, v17) == 1)
  {
    sub_251A1B064((uint64_t)v8, &qword_269BA62B0);
    long long v37 = 0u;
    long long v38 = 0u;
    char v39 = 0;
  }
  else
  {
    *((void *)&v38 + 1) = v17;
    char v39 = &off_2702655B0;
    uint64_t v18 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v37);
    sub_251F29958((uint64_t)v8, (uint64_t)v18, type metadata accessor for IrrigationStatusItem);
  }
  uint64_t v19 = swift_bridgeObjectRetain();
  sub_251C27B80(v19, (uint64_t)v5);
  uint64_t v20 = type metadata accessor for ValveStatusItem(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v5, 1, v20) == 1)
  {
    sub_251A1B064((uint64_t)v5, &qword_269BA62A8);
    long long v40 = 0u;
    long long v41 = 0u;
    char v42 = 0;
  }
  else
  {
    *((void *)&v41 + 1) = v20;
    char v42 = &off_2702655D8;
    uint64_t v21 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v40);
    sub_251F29958((uint64_t)v5, (uint64_t)v21, type metadata accessor for ValveStatusItem);
  }
  sub_251C29140(v12, (uint64_t)v2);
  uint64_t v22 = type metadata accessor for FaucetStatusItem(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v2, 1, v22) == 1)
  {
    sub_251A1B064((uint64_t)v2, &qword_269BA62A0);
    long long v43 = 0u;
    long long v44 = 0u;
    uint64_t v45 = 0;
  }
  else
  {
    *((void *)&v44 + 1) = v22;
    uint64_t v45 = &off_270265600;
    char v23 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v43);
    sub_251F29958((uint64_t)v2, (uint64_t)v23, type metadata accessor for FaucetStatusItem);
  }
  uint64_t v24 = (void *)MEMORY[0x263F8EE78];
  for (uint64_t i = 32; i != 192; i += 40)
  {
    sub_251A1B128((uint64_t)&v33[i + 40], (uint64_t)v33, &qword_269B9D720);
    sub_251AAFC70((uint64_t)v33, (uint64_t)&v30);
    if (v31)
    {
      sub_251A1A444(&v30, (uint64_t)v32);
      sub_251A1A444(v32, (uint64_t)&v30);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v24 = sub_251F0FD30(0, v24[2] + 1, 1, v24);
      }
      unint64_t v27 = v24[2];
      unint64_t v26 = v24[3];
      if (v27 >= v26 >> 1) {
        uint64_t v24 = sub_251F0FD30((void *)(v26 > 1), v27 + 1, 1, v24);
      }
      v24[2] = v27 + 1;
      sub_251A1A444(&v30, (uint64_t)&v24[5 * v27 + 4]);
    }
    else
    {
      sub_251A1B064((uint64_t)&v30, &qword_269B9D720);
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D720);
  swift_arrayDestroy();
  return v24;
}

uint64_t sub_251F293B0@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unsigned __int8 v5 = *a2;
  return WaterCategoryInformation.init(stateSnapshot:umbrellaCategory:room:)(a1, &v5, a3, a4);
}

uint64_t WaterCategoryInformation.init(stateSnapshot:umbrellaCategory:room:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v27[0] = a4;
  uint64_t v7 = type metadata accessor for StateSnapshot(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D138);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for WaterCategoryInformation();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v17 = *a2;
  sub_251B75C78(a1, (uint64_t)v16);
  v16[*(int *)(v13 + 20)] = 6;
  sub_251A1B128(a3, (uint64_t)v12, &qword_269B9D138);
  uint64_t v18 = type metadata accessor for StaticRoom(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v12, 1, v18) == 1)
  {
    sub_251A1B064((uint64_t)v12, &qword_269B9D138);
    sub_251B75C78(a1, (uint64_t)v9);
    uint64_t v19 = v27[0];
  }
  else
  {
    uint64_t v20 = swift_bridgeObjectRetain();
    uint64_t v21 = sub_251EDCBC8(v20);
    sub_251F2A36C((uint64_t)v12, type metadata accessor for StaticRoom);
    sub_251B75C78(a1, (uint64_t)v9);
    uint64_t v19 = v27[0];
    if (v21) {
      goto LABEL_5;
    }
  }
  uint64_t v22 = swift_bridgeObjectRetain();
  uint64_t v21 = sub_251EDCBC8(v22);
LABEL_5:
  sub_251F2A36C((uint64_t)v9, type metadata accessor for StateSnapshot);
  uint64_t v23 = sub_251AAD29C(v21, v17);
  *(void *)&v16[*(int *)(v13 + 24)] = v23;
  uint64_t v24 = *(void *)(v23 + 16);
  sub_251A1B064(a3, &qword_269B9D138);
  sub_251F2A36C(a1, type metadata accessor for StateSnapshot);
  if (v24)
  {
    sub_251F29958((uint64_t)v16, v19, (uint64_t (*)(void))type metadata accessor for WaterCategoryInformation);
    uint64_t v25 = 0;
  }
  else
  {
    sub_251F2A36C((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for WaterCategoryInformation);
    uint64_t v25 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v19, v25, 1, v13);
}

uint64_t WaterCategoryInformation.contextMenuLabelsAndActions()()
{
  return MEMORY[0x263F8EE78];
}

uint64_t sub_251F29700(long long *a1, uint64_t a2)
{
  StateSnapshot.hash(into:)(a1);
  sub_251F357B0();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v2 + *(int *)(a2 + 24));
  return sub_251A54A64(a1, v5);
}

uint64_t sub_251F29818(uint64_t a1, uint64_t a2)
{
  sub_251F36CA0();
  StateSnapshot.hash(into:)(v5);
  sub_251F357B0();
  swift_bridgeObjectRelease();
  sub_251A54A64(v5, *(void *)(v2 + *(int *)(a2 + 24)));
  return sub_251F36D00();
}

uint64_t sub_251F2993C(void *a1, uint64_t a2)
{
  return sub_251AACDE0(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_251F29958(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251F299C0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_251F29A5C(&qword_269BA62C0);
  uint64_t result = sub_251F29A5C(&qword_269BA62C8);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_251F29A28()
{
  return sub_251F29A5C(&qword_269BA62D0);
}

uint64_t sub_251F29A5C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for WaterCategoryInformation();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *assignWithCopy for WaterCategoryInformation(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v56 = (int *)type metadata accessor for StateSnapshot(0);
  uint64_t v5 = v56[5];
  uint64_t v55 = a1;
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_251F34DA0();
  uint64_t v53 = *(void *)(v8 - 8);
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v53 + 24);
  v9(v6, v7, v8);
  uint64_t v10 = (int *)type metadata accessor for StaticHome();
  uint64_t v11 = v10[5];
  uint64_t v12 = &v6[v11];
  uint64_t v13 = &v7[v11];
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = v10[6];
  uint64_t v15 = &v6[v14];
  uint64_t v16 = &v7[v14];
  v9(&v6[v14], &v7[v14], v8);
  unsigned __int8 v17 = v9;
  uint64_t v18 = (int *)type metadata accessor for StaticRoom(0);
  uint64_t v19 = v18[5];
  uint64_t v20 = &v15[v19];
  uint64_t v21 = &v16[v19];
  *(void *)uint64_t v20 = *(void *)v21;
  *((void *)v20 + 1) = *((void *)v21 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[v18[6]] = v16[v18[6]];
  *(void *)&v15[v18[7]] = *(void *)&v16[v18[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17(&v15[v18[8]], &v16[v18[8]], v8);
  *(void *)&v15[v18[9]] = *(void *)&v16[v18[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[10]] = *(void *)&v16[v18[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[11]] = *(void *)&v16[v18[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[12]] = *(void *)&v16[v18[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[13]] = *(void *)&v16[v18[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[14]] = *(void *)&v16[v18[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[15]] = *(void *)&v16[v18[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[16]] = *(void *)&v16[v18[16]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[17]] = *(void *)&v16[v18[17]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[18]] = *(void *)&v16[v18[18]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = v10[7];
  uint64_t v23 = &v6[v22];
  uint64_t v24 = &v7[v22];
  v17(&v6[v22], &v7[v22], v8);
  uint64_t v25 = (int *)type metadata accessor for StaticUser();
  uint64_t v26 = v25[5];
  unint64_t v27 = &v23[v26];
  unint64_t v28 = &v24[v26];
  *(void *)unint64_t v27 = *(void *)v28;
  *((void *)v27 + 1) = *((void *)v28 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17(&v23[v25[6]], &v24[v25[6]], v8);
  v23[v25[7]] = v24[v25[7]];
  v23[v25[8]] = v24[v25[8]];
  v6[v10[8]] = v7[v10[8]];
  v6[v10[9]] = v7[v10[9]];
  v6[v10[10]] = v7[v10[10]];
  *(void *)&v6[v10[11]] = *(void *)&v7[v10[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[12]] = *(void *)&v7[v10[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[13]] = *(void *)&v7[v10[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[14]] = *(void *)&v7[v10[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[15]] = *(void *)&v7[v10[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[16]] = *(void *)&v7[v10[16]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6[v10[17]] = v7[v10[17]];
  *(void *)&v6[v10[18]] = *(void *)&v7[v10[18]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6[v10[19]] = v7[v10[19]];
  uint64_t v29 = v10[20];
  long long v30 = &v6[v29];
  uint64_t v31 = &v7[v29];
  unint64_t v32 = (int *)type metadata accessor for StaticResident();
  uint64_t v33 = *((void *)v32 - 1);
  long long v34 = *(uint64_t (**)(char *, uint64_t, int *))(v33 + 48);
  LODWORD(v23) = v34(v30, 1, v32);
  int v35 = v34(v31, 1, v32);
  if (!v23)
  {
    if (!v35)
    {
      v17(v30, v31, v8);
      uint64_t v47 = v32[5];
      char v48 = &v30[v47];
      char v49 = &v31[v47];
      *(void *)char v48 = *(void *)v49;
      *((void *)v48 + 1) = *((void *)v49 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v50 = v32[6];
      uint64_t v51 = &v30[v50];
      uint64_t v52 = &v31[v50];
      *(void *)uint64_t v51 = *(void *)v52;
      *((void *)v51 + 1) = *((void *)v52 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v30[v32[7]] = *(void *)&v31[v32[7]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v30[v32[8]] = *(void *)&v31[v32[8]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_WORD *)&v30[v32[9]] = *(_WORD *)&v31[v32[9]];
      v17(&v30[v32[10]], &v31[v32[10]], v8);
      goto LABEL_7;
    }
    sub_251F2A36C((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for StaticResident);
    goto LABEL_6;
  }
  if (v35)
  {
LABEL_6:
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FDA0);
    memcpy(v30, v31, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_7;
  }
  unint64_t v36 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
  v36(v30, v31, v8);
  uint64_t v37 = v32[5];
  long long v38 = &v30[v37];
  char v39 = &v31[v37];
  *(void *)long long v38 = *(void *)v39;
  *((void *)v38 + 1) = *((void *)v39 + 1);
  uint64_t v40 = v32[6];
  long long v41 = &v30[v40];
  char v42 = &v31[v40];
  *(void *)long long v41 = *(void *)v42;
  *((void *)v41 + 1) = *((void *)v42 + 1);
  *(void *)&v30[v32[7]] = *(void *)&v31[v32[7]];
  *(void *)&v30[v32[8]] = *(void *)&v31[v32[8]];
  *(_WORD *)&v30[v32[9]] = *(_WORD *)&v31[v32[9]];
  uint64_t v43 = v32[10];
  char v54 = &v30[v43];
  long long v44 = &v31[v43];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v36(v54, v44, v8);
  (*(void (**)(char *, void, uint64_t, int *))(v33 + 56))(v30, 0, 1, v32);
LABEL_7:
  *(void *)((char *)v55 + v56[6]) = *(void *)((char *)a2 + v56[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[7]) = *(void *)((char *)a2 + v56[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[8]) = *(void *)((char *)a2 + v56[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[9]) = *(void *)((char *)a2 + v56[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[10]) = *(void *)((char *)a2 + v56[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[11]) = *(void *)((char *)a2 + v56[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[12]) = *(void *)((char *)a2 + v56[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[13]) = *(void *)((char *)a2 + v56[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[14]) = *(void *)((char *)a2 + v56[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[15]) = *(void *)((char *)a2 + v56[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[16]) = *(void *)((char *)a2 + v56[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[17]) = *(void *)((char *)a2 + v56[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[18]) = *(void *)((char *)a2 + v56[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[19]) = *(void *)((char *)a2 + v56[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)v55 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  *(void *)((char *)v55 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v55;
}

uint64_t sub_251F2A36C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *assignWithTake for WaterCategoryInformation(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v57 = a2;
  char v58 = (int *)type metadata accessor for StateSnapshot(0);
  uint64_t v5 = v58[5];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_251F34DA0();
  uint64_t v55 = *(void *)(v8 - 8);
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v55 + 40);
  v9(v6, v7, v8);
  uint64_t v10 = (int *)type metadata accessor for StaticHome();
  uint64_t v11 = v10[5];
  uint64_t v12 = &v6[v11];
  uint64_t v13 = &v7[v11];
  uint64_t v15 = *(void *)v13;
  uint64_t v14 = *((void *)v13 + 1);
  *(void *)uint64_t v12 = v15;
  *((void *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = v10[6];
  unsigned __int8 v17 = &v6[v16];
  uint64_t v18 = &v7[v16];
  v9(&v6[v16], &v7[v16], v8);
  uint64_t v19 = (int *)type metadata accessor for StaticRoom(0);
  uint64_t v20 = v19[5];
  uint64_t v21 = &v17[v20];
  uint64_t v22 = &v18[v20];
  uint64_t v24 = *(void *)v22;
  uint64_t v23 = *((void *)v22 + 1);
  *(void *)uint64_t v21 = v24;
  *((void *)v21 + 1) = v23;
  swift_bridgeObjectRelease();
  v17[v19[6]] = v18[v19[6]];
  *(void *)&v17[v19[7]] = *(void *)&v18[v19[7]];
  swift_bridgeObjectRelease();
  v9(&v17[v19[8]], &v18[v19[8]], v8);
  *(void *)&v17[v19[9]] = *(void *)&v18[v19[9]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[10]] = *(void *)&v18[v19[10]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[11]] = *(void *)&v18[v19[11]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[12]] = *(void *)&v18[v19[12]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[13]] = *(void *)&v18[v19[13]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[14]] = *(void *)&v18[v19[14]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[15]] = *(void *)&v18[v19[15]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[16]] = *(void *)&v18[v19[16]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[17]] = *(void *)&v18[v19[17]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[18]] = *(void *)&v18[v19[18]];
  swift_bridgeObjectRelease();
  uint64_t v25 = v10[7];
  uint64_t v26 = &v6[v25];
  unint64_t v27 = &v7[v25];
  v9(&v6[v25], &v7[v25], v8);
  unint64_t v28 = (int *)type metadata accessor for StaticUser();
  uint64_t v29 = v28[5];
  long long v30 = &v26[v29];
  uint64_t v31 = &v27[v29];
  uint64_t v33 = *(void *)v31;
  uint64_t v32 = *((void *)v31 + 1);
  *(void *)long long v30 = v33;
  *((void *)v30 + 1) = v32;
  swift_bridgeObjectRelease();
  uint64_t v56 = v8;
  v9(&v26[v28[6]], &v27[v28[6]], v8);
  v26[v28[7]] = v27[v28[7]];
  v26[v28[8]] = v27[v28[8]];
  v6[v10[8]] = v7[v10[8]];
  v6[v10[9]] = v7[v10[9]];
  v6[v10[10]] = v7[v10[10]];
  *(void *)&v6[v10[11]] = *(void *)&v7[v10[11]];
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[12]] = *(void *)&v7[v10[12]];
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[13]] = *(void *)&v7[v10[13]];
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[14]] = *(void *)&v7[v10[14]];
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[15]] = *(void *)&v7[v10[15]];
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[16]] = *(void *)&v7[v10[16]];
  swift_bridgeObjectRelease();
  v6[v10[17]] = v7[v10[17]];
  *(void *)&v6[v10[18]] = *(void *)&v7[v10[18]];
  swift_bridgeObjectRelease();
  v6[v10[19]] = v7[v10[19]];
  uint64_t v34 = v10[20];
  int v35 = &v6[v34];
  unint64_t v36 = &v7[v34];
  uint64_t v37 = (int *)type metadata accessor for StaticResident();
  uint64_t v38 = *((void *)v37 - 1);
  char v39 = *(uint64_t (**)(char *, uint64_t, int *))(v38 + 48);
  LODWORD(v26) = v39(v35, 1, v37);
  int v40 = v39(v36, 1, v37);
  if (!v26)
  {
    if (!v40)
    {
      v9(v35, v36, v56);
      uint64_t v45 = v37[5];
      uint64_t v46 = &v35[v45];
      uint64_t v47 = &v36[v45];
      uint64_t v49 = *(void *)v47;
      uint64_t v48 = *((void *)v47 + 1);
      *(void *)uint64_t v46 = v49;
      *((void *)v46 + 1) = v48;
      swift_bridgeObjectRelease();
      uint64_t v50 = v37[6];
      uint64_t v51 = &v35[v50];
      uint64_t v52 = &v36[v50];
      uint64_t v54 = *(void *)v52;
      uint64_t v53 = *((void *)v52 + 1);
      *(void *)uint64_t v51 = v54;
      *((void *)v51 + 1) = v53;
      swift_bridgeObjectRelease();
      *(void *)&v35[v37[7]] = *(void *)&v36[v37[7]];
      swift_bridgeObjectRelease();
      *(void *)&v35[v37[8]] = *(void *)&v36[v37[8]];
      swift_bridgeObjectRelease();
      *(_WORD *)&v35[v37[9]] = *(_WORD *)&v36[v37[9]];
      v9(&v35[v37[10]], &v36[v37[10]], v56);
      goto LABEL_7;
    }
    sub_251F2A36C((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for StaticResident);
    goto LABEL_6;
  }
  if (v40)
  {
LABEL_6:
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FDA0);
    memcpy(v35, v36, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_7;
  }
  long long v41 = *(void (**)(char *, char *, uint64_t))(v55 + 32);
  v41(v35, v36, v56);
  *(_OWORD *)&v35[v37[5]] = *(_OWORD *)&v36[v37[5]];
  *(_OWORD *)&v35[v37[6]] = *(_OWORD *)&v36[v37[6]];
  *(void *)&v35[v37[7]] = *(void *)&v36[v37[7]];
  *(void *)&v35[v37[8]] = *(void *)&v36[v37[8]];
  *(_WORD *)&v35[v37[9]] = *(_WORD *)&v36[v37[9]];
  v41(&v35[v37[10]], &v36[v37[10]], v56);
  (*(void (**)(char *, void, uint64_t, int *))(v38 + 56))(v35, 0, 1, v37);
LABEL_7:
  *(void *)((char *)a1 + v58[6]) = *(void *)((char *)v57 + v58[6]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[7]) = *(void *)((char *)v57 + v58[7]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[8]) = *(void *)((char *)v57 + v58[8]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[9]) = *(void *)((char *)v57 + v58[9]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[10]) = *(void *)((char *)v57 + v58[10]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[11]) = *(void *)((char *)v57 + v58[11]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[12]) = *(void *)((char *)v57 + v58[12]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[13]) = *(void *)((char *)v57 + v58[13]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[14]) = *(void *)((char *)v57 + v58[14]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[15]) = *(void *)((char *)v57 + v58[15]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[16]) = *(void *)((char *)v57 + v58[16]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[17]) = *(void *)((char *)v57 + v58[17]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[18]) = *(void *)((char *)v57 + v58[18]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[19]) = *(void *)((char *)v57 + v58[19]);
  swift_bridgeObjectRelease();
  uint64_t v43 = *(int *)(a3 + 24);
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)v57 + *(int *)(a3 + 20));
  *(void *)((char *)a1 + v43) = *(void *)((char *)v57 + v43);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WaterCategoryInformation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251F2AAD8);
}

uint64_t sub_251F2AAD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for StateSnapshot(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for WaterCategoryInformation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251F2ABAC);
}

uint64_t sub_251F2ABAC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for StateSnapshot(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_251F2AC68()
{
  uint64_t result = type metadata accessor for StateSnapshot(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_251F2AD0C(void *a1, uint64_t a2)
{
  return sub_251F2993C(a1, a2);
}

uint64_t sub_251F2AD24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[27] = a5;
  v6[28] = v5;
  v6[25] = a3;
  v6[26] = a4;
  v6[23] = a1;
  v6[24] = a2;
  uint64_t v7 = sub_251F35030();
  v6[29] = v7;
  v6[30] = *(void *)(v7 - 8);
  v6[31] = swift_task_alloc();
  v6[32] = swift_task_alloc();
  v6[33] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC88);
  v6[34] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for StateSnapshot(0);
  v6[35] = v8;
  v6[36] = *(void *)(v8 - 8);
  v6[37] = swift_task_alloc();
  v6[38] = swift_task_alloc();
  v6[39] = swift_task_alloc();
  uint64_t v9 = sub_251F34FE0();
  v6[40] = v9;
  v6[41] = *(void *)(v9 - 8);
  v6[42] = swift_task_alloc();
  v6[43] = swift_task_alloc();
  v6[44] = swift_task_alloc();
  v6[45] = swift_task_alloc();
  v6[46] = swift_task_alloc();
  v6[47] = type metadata accessor for StateSnapshot.UpdateType(0);
  v6[48] = swift_task_alloc();
  v6[49] = swift_task_alloc();
  v6[50] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2203A0);
  v6[51] = swift_task_alloc();
  v6[52] = swift_task_alloc();
  v6[53] = swift_task_alloc();
  v6[54] = swift_task_alloc();
  v6[55] = swift_task_alloc();
  v6[56] = swift_task_alloc();
  v6[57] = swift_task_alloc();
  v6[58] = swift_task_alloc();
  v6[59] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251F2B018, v5, 0);
}

uint64_t sub_251F2B018()
{
  uint64_t v190 = v0;
  uint64_t v1 = *(void *)(v0 + 224);
  id v2 = objc_msgSend(*(id *)(v0 + 208), sel_uniqueIdentifier);
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = swift_task_alloc();
  sub_251F34D80();

  swift_beginAccess();
  uint64_t v6 = *(void *)(v1 + 112);
  if (*(void *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_2519FE584(v5);
    uint64_t v8 = *(void *)(v0 + 472);
    uint64_t v9 = *(void *)(v0 + 280);
    uint64_t v10 = *(void *)(v0 + 288);
    if (v11)
    {
      sub_251DF7620(*(void *)(v6 + 56) + *(void *)(v10 + 72) * v7, *(void *)(v0 + 472), type metadata accessor for StateSnapshot);
      uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
      uint64_t v13 = v8;
      uint64_t v14 = 0;
    }
    else
    {
      uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
      uint64_t v13 = *(void *)(v0 + 472);
      uint64_t v14 = 1;
    }
    uint64_t v187 = v12;
    v12(v13, v14, 1, v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v187 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 288) + 56);
    v187(*(void *)(v0 + 472), 1, 1, *(void *)(v0 + 280));
  }
  uint64_t v15 = *(void *)(v0 + 224);
  uint64_t v16 = *(void **)(v0 + 208);
  unsigned __int8 v17 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v17(v5, v3);
  swift_task_dealloc();
  id v18 = objc_msgSend(v16, sel_uniqueIdentifier);
  uint64_t v19 = swift_task_alloc();
  sub_251F34D80();

  uint64_t v186 = (uint64_t *)(v15 + 120);
  swift_beginAccess();
  uint64_t v20 = *(void *)(v15 + 120);
  if (*(void *)(v20 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_2519FE584(v19);
    if (v22) {
      uint64_t v23 = *(void *)(*(void *)(v20 + 56) + 8 * v21);
    }
    else {
      uint64_t v23 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = 0;
  }
  uint64_t v185 = v23;
  *(void *)(v0 + 480) = v23;
  uint64_t v24 = *(void *)(v0 + 224);
  v17(v19, v3);
  swift_task_dealloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v25 = swift_task_alloc();
  uint64_t v26 = v24 + OBJC_IVAR____TtC13HomeDataModel17SnapshotModerator_lockedToFreezeDriedHome;
  swift_beginAccess();
  sub_251A1B128(v26, v25, &qword_26B21FF90);
  uint64_t v183 = v4;
  int v27 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v25, 1, v3);
  sub_251A1B064(v25, &qword_26B21FF90);
  swift_task_dealloc();
  if (v27 != 1)
  {
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v45 = sub_251F350A0();
    __swift_project_value_buffer(v45, (uint64_t)qword_26B21F290);
    uint64_t v46 = sub_251F35080();
    os_log_type_t v47 = sub_251F35FD0();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v48 = 0;
      _os_log_impl(&dword_2519F3000, v46, v47, "loading freeze dried home!!", v48, 2u);
      MEMORY[0x2533AC760](v48, -1, -1);
    }

    *(void *)(v0 + 584) = sub_251F35C80();
    *(void *)(v0 + 592) = sub_251F35C70();
    uint64_t v49 = sub_251F35C00();
    uint64_t v51 = v50;
    uint64_t v52 = sub_251F2CB74;
LABEL_87:
    uint64_t v59 = (uint64_t)v52;
    uint64_t v60 = v49;
    uint64_t v61 = v51;
    return MEMORY[0x270FA2498](v59, v60, v61);
  }
  uint64_t v175 = v3;
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v28 = *(void *)(v0 + 400);
  uint64_t v29 = *(void **)(v0 + 208);
  uint64_t v30 = *(void *)(v0 + 192);
  uint64_t v31 = sub_251F350A0();
  __swift_project_value_buffer(v31, (uint64_t)qword_26B21F290);
  sub_251DF7620(v30, v28, type metadata accessor for StateSnapshot.UpdateType);
  id v32 = v29;
  uint64_t v33 = sub_251F35080();
  os_log_type_t v34 = sub_251F35FD0();
  BOOL v35 = os_log_type_enabled(v33, v34);
  uint64_t v36 = *(void *)(v0 + 400);
  uint64_t v37 = *(void **)(v0 + 208);
  uint64_t v172 = v17;
  if (v35)
  {
    uint64_t v184 = (void (*)(uint64_t, uint64_t))(v0 + 160);
    uint64_t v38 = swift_slowAlloc();
    uint64_t v188 = swift_slowAlloc();
    v189[0] = v188;
    *(_DWORD *)uint64_t v38 = 136315650;
    id v39 = objc_msgSend(v37, sel_name);
    uint64_t v40 = sub_251F356F0();
    unint64_t v42 = v41;

    *(void *)(v0 + 160) = sub_251A00E84(v40, v42, v189);
    sub_251F361D0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v38 + 12) = 2048;
    *(void *)(v0 + 168) = v185;
    sub_251F361D0();
    *(_WORD *)(v38 + 22) = 2080;
    unint64_t updated = StateSnapshot.UpdateType.description.getter();
    *(void *)(v0 + 176) = sub_251A00E84(updated, v44, v189);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    sub_251F2E834(v36, type metadata accessor for StateSnapshot.UpdateType);
    _os_log_impl(&dword_2519F3000, v33, v34, "new snapshot for '%s' iteration %ld, %s", (uint8_t *)v38, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v188, -1, -1);
    MEMORY[0x2533AC760](v38, -1, -1);
  }
  else
  {

    sub_251F2E834(v36, type metadata accessor for StateSnapshot.UpdateType);
  }

  uint64_t v53 = (char *)StateSnapshot.UpdateType.signpostID.getter();
  char v55 = v54;
  if (qword_26B21ED30 != -1) {
    swift_once();
  }
  uint64_t v56 = sub_251F35020();
  *(void *)(v0 + 488) = __swift_project_value_buffer(v56, (uint64_t)qword_26B21ED40);
  sub_251F34FD0();
  uint64_t v57 = sub_251F35000();
  os_signpost_type_t v58 = sub_251F36060();
  uint64_t v59 = sub_251F36170();
  uint64_t v182 = v53;
  char v173 = v55;
  if ((v59 & 1) == 0)
  {
    uint64_t v63 = *(void *)(v0 + 328);

    char v64 = *(void (**)(void, uint64_t, uint64_t))(v63 + 16);
    unint64_t v65 = (v63 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    goto LABEL_36;
  }
  if ((v55 & 1) == 0)
  {
    if (!v53) {
      goto LABEL_92;
    }
    uint64_t v62 = v53;
    goto LABEL_35;
  }
  if ((unint64_t)v53 >> 32) {
    goto LABEL_93;
  }
  if (v53 >> 11 == 27)
  {
    __break(1u);
LABEL_99:
    __break(1u);
    return MEMORY[0x270FA2498](v59, v60, v61);
  }
  if (v53 >> 16 > 0x10) {
    goto LABEL_94;
  }
  uint64_t v62 = sub_251D3AF3C();
LABEL_35:
  uint64_t v66 = *(void *)(v0 + 360);
  uint64_t v68 = *(void *)(v0 + 320);
  uint64_t v67 = *(void *)(v0 + 328);
  uint64_t v69 = *(void (**)(uint64_t, void, uint64_t))(v67 + 16);
  v69(v66, *(void *)(v0 + 368), v68);
  uint64_t v70 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v70 = 0;
  os_signpost_id_t v71 = sub_251F34FC0();
  _os_signpost_emit_with_name_impl(&dword_2519F3000, v57, v58, v71, v62, "", v70, 2u);
  MEMORY[0x2533AC760](v70, -1, -1);

  (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v66, v68);
  char v64 = v69;
  unint64_t v65 = (v67 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
LABEL_36:
  uint64_t v73 = *(void *)(v0 + 464);
  uint64_t v72 = *(void *)(v0 + 472);
  uint64_t v179 = *(void *)(v0 + 456);
  uint64_t v74 = *(void *)(v0 + 392);
  uint64_t v75 = *(void *)(v0 + 360);
  uint64_t v76 = *(void *)(v0 + 368);
  uint64_t v77 = *(void *)(v0 + 320);
  uint64_t v78 = *(void *)(v0 + 328);
  uint64_t v79 = *(void *)(v0 + 216);
  uint64_t v80 = *(void *)(v0 + 192);
  *(void *)(v0 + 496) = v64;
  *(void *)(v0 + 504) = v65;
  unint64_t v174 = v64;
  v64(v75, v76, v77);
  sub_251F35060();
  swift_allocObject();
  *(void *)(v0 + 512) = sub_251F35050();
  unint64_t v81 = *(void (**)(uint64_t, uint64_t))(v78 + 8);
  *(void *)(v0 + 520) = v81;
  *(void *)(v0 + 528) = (v78 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v184 = v81;
  v81(v76, v77);
  sub_251DF7620(v80, v74, type metadata accessor for StateSnapshot.UpdateType);
  sub_251A1B128(v72, v73, &qword_26B2203A0);
  sub_251A1B128(v72, v179, &qword_26B2203A0);
  if (v79)
  {
    uint64_t v176 = *(void *)(v0 + 216);
  }
  else
  {
    uint64_t v82 = *(void *)(v0 + 448);
    uint64_t v83 = *(void *)(v0 + 280);
    uint64_t v84 = *(void *)(v0 + 288);
    sub_251A1B128(*(void *)(v0 + 456), v82, &qword_26B2203A0);
    int v85 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v82, 1, v83);
    uint64_t v86 = *(uint64_t **)(v0 + 448);
    if (v85 == 1)
    {
      sub_251A1B064(*(void *)(v0 + 448), &qword_26B2203A0);
      if (qword_26B21F398 != -1) {
        goto LABEL_97;
      }
      goto LABEL_40;
    }
    uint64_t v176 = *v86;
    swift_bridgeObjectRetain();
    sub_251F2E834((uint64_t)v86, type metadata accessor for StateSnapshot);
  }
  while (1)
  {
    uint64_t v87 = *(void *)(v0 + 464);
    uint64_t v88 = *(void *)(v0 + 456);
    uint64_t v89 = *(void *)(v0 + 440);
    uint64_t v90 = *(void *)(v0 + 392);
    uint64_t v91 = *(void **)(v0 + 312);
    uint64_t v92 = *(void *)(v0 + 288);
    uint64_t v177 = *(void *)(v0 + 280);
    uint64_t v93 = *(void *)(v0 + 272);
    uint64_t v178 = *(void *)(v0 + 264);
    uint64_t v180 = *(void *)(v0 + 472);
    uint64_t v94 = *(void **)(v0 + 208);
    uint64_t v95 = *(void **)(v0 + 200);
    swift_bridgeObjectRetain();
    sub_251A1B064(v88, &qword_26B2203A0);
    StateSnapshot.init(updateType:homeManager:home:previousStateSnapshot:coverages:)(v90, v95, v94, v87, v176, v91);
    sub_251DF7620((uint64_t)v91, v89, type metadata accessor for StateSnapshot);
    v187(v89, 0, 1, v177);
    uint64_t v96 = v93 + *(int *)(v178 + 48);
    sub_251A1B128(v180, v93, &qword_26B2203A0);
    sub_251A1B128(v89, v96, &qword_26B2203A0);
    uint64_t v97 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48);
    if (v97(v93, 1, v177) == 1)
    {
      uint64_t v98 = *(void *)(v0 + 280);
      sub_251A1B064(*(void *)(v0 + 440), &qword_26B2203A0);
      if (v97(v96, 1, v98) == 1)
      {
        sub_251A1B064(*(void *)(v0 + 272), &qword_26B2203A0);
        char v99 = 1;
        goto LABEL_49;
      }
      goto LABEL_47;
    }
    uint64_t v100 = *(void *)(v0 + 280);
    sub_251A1B128(*(void *)(v0 + 272), *(void *)(v0 + 432), &qword_26B2203A0);
    unsigned int v101 = v97(v96, 1, v100);
    uint64_t v102 = *(uint64_t **)(v0 + 432);
    uint64_t v103 = *(void *)(v0 + 440);
    if (v101 == 1)
    {
      sub_251A1B064(*(void *)(v0 + 440), &qword_26B2203A0);
      sub_251F2E834((uint64_t)v102, type metadata accessor for StateSnapshot);
LABEL_47:
      sub_251A1B064(*(void *)(v0 + 272), &qword_26B21EC88);
      char v99 = 0;
      goto LABEL_49;
    }
    uint64_t v104 = *(uint64_t **)(v0 + 304);
    uint64_t v105 = *(void *)(v0 + 272);
    sub_251ACFFCC(v96, (uint64_t)v104);
    char v106 = _s13HomeDataModel13StateSnapshotV2eeoiySbAC_ACtFZ_0(v102, v104);
    sub_251F2E834((uint64_t)v104, type metadata accessor for StateSnapshot);
    sub_251A1B064(v103, &qword_26B2203A0);
    sub_251F2E834((uint64_t)v102, type metadata accessor for StateSnapshot);
    uint64_t v107 = v105;
    char v99 = v106;
    sub_251A1B064(v107, &qword_26B2203A0);
LABEL_49:
    uint64_t v108 = v182;
    uint64_t v109 = sub_251F35000();
    sub_251F35040();
    os_signpost_type_t v110 = sub_251F36050();
    uint64_t v59 = sub_251F36170();
    if ((v59 & 1) == 0) {
      goto LABEL_53;
    }
    char v181 = v99;
    if ((v173 & 1) == 0) {
      break;
    }
    if ((unint64_t)v182 >> 32) {
      goto LABEL_95;
    }
    if (v182 >> 11 == 27) {
      goto LABEL_99;
    }
    if (v182 >> 16 <= 0x10)
    {
      uint64_t v108 = sub_251D3AF3C();
      goto LABEL_58;
    }
LABEL_96:
    __break(1u);
LABEL_97:
    swift_once();
LABEL_40:
    uint64_t v176 = qword_26B21F5E0;
    swift_bridgeObjectRetain();
  }
  if (v182)
  {
LABEL_58:
    uint64_t v111 = *(void *)(v0 + 256);
    uint64_t v112 = *(void *)(v0 + 232);
    uint64_t v113 = *(void *)(v0 + 240);
    swift_retain();
    sub_251F35070();
    swift_release();
    uint64_t v114 = v108;
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v113 + 88))(v111, v112) == *MEMORY[0x263F90238])
    {
      uint64_t v115 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 240) + 8))(*(void *)(v0 + 256), *(void *)(v0 + 232));
      uint64_t v115 = "";
    }
    uint64_t v116 = *(void *)(v0 + 352);
    uint64_t v117 = *(void *)(v0 + 320);
    v174(*(void *)(v0 + 360), v116, v117);
    uint64_t v118 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v118 = 0;
    os_signpost_id_t v119 = sub_251F34FC0();
    _os_signpost_emit_with_name_impl(&dword_2519F3000, v109, v110, v119, v114, v115, v118, 2u);
    MEMORY[0x2533AC760](v118, -1, -1);

    v184(v116, v117);
    char v99 = v181;
    v184(*(void *)(v0 + 360), *(void *)(v0 + 320));
    goto LABEL_62;
  }
  __break(1u);
LABEL_53:

  v184(*(void *)(v0 + 352), *(void *)(v0 + 320));
LABEL_62:
  if (v99)
  {
    sub_251A1B064(*(void *)(v0 + 472), &qword_26B2203A0);
    swift_release();
    sub_251ACFFCC(*(void *)(v0 + 312), *(void *)(v0 + 184));
    sub_251A27C7C(0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v120 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v121 = *(void *)(v0 + 480);
    return v120(v121);
  }
  sub_251F34FD0();
  uint64_t v123 = sub_251F35000();
  os_signpost_type_t v124 = sub_251F36060();
  if (sub_251F36170())
  {
    uint64_t v125 = *(void *)(v0 + 360);
    uint64_t v126 = *(void *)(v0 + 320);
    uint64_t v127 = v174;
    v174(v125, *(void *)(v0 + 344), v126);
    uint64_t v128 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v128 = 0;
    os_signpost_id_t v129 = sub_251F34FC0();
    _os_signpost_emit_with_name_impl(&dword_2519F3000, v123, v124, v129, "Pushing iteration to DataModel", "", v128, 2u);
    MEMORY[0x2533AC760](v128, -1, -1);

    uint64_t v130 = v184;
    v184(v125, v126);
  }
  else
  {

    uint64_t v127 = v174;
    uint64_t v130 = v184;
  }
  uint64_t v131 = *(void *)(v0 + 384);
  uint64_t v132 = *(void *)(v0 + 344);
  uint64_t v133 = *(void *)(v0 + 320);
  uint64_t v134 = *(void *)(v0 + 192);
  v127(*(void *)(v0 + 360), v132, v133);
  swift_allocObject();
  *(void *)(v0 + 536) = sub_251F35050();
  v130(v132, v133);
  sub_251DF7620(v134, v131, type metadata accessor for StateSnapshot.UpdateType);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v136 = *(void *)(v0 + 384);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v137 = *(void *)v136;
    uint64_t v138 = *(void *)(v136 + 8);
    int v139 = *(unsigned __int8 *)(v136 + 16);
    uint64_t v140 = &off_26536F000;
    if (v139 == 2)
    {
      uint64_t v141 = *(void *)(v0 + 224);
      uint64_t v142 = *(void **)(v0 + 208);
      sub_251B286EC(v137, v138, 2u);
      id v143 = objc_msgSend(v142, sel_uniqueIdentifier);
      uint64_t v144 = swift_task_alloc();
      sub_251F34D80();

      swift_beginAccess();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v189[0] = *(void *)(v141 + 128);
      *(void *)(v141 + 128) = 0x8000000000000000;
      sub_251A0CD54(v185, v144, isUniquelyReferenced_nonNull_native);
      *(void *)(v141 + 128) = v189[0];
      swift_bridgeObjectRelease();
      v172(v144, v175);
      swift_endAccess();
      swift_task_dealloc();
    }
    else
    {
      sub_251B286EC(v137, v138, v139);
    }
  }
  else
  {
    sub_251F2E834(*(void *)(v0 + 384), type metadata accessor for StateSnapshot.UpdateType);
    uint64_t v140 = &off_26536F000;
  }
  id v146 = [*(id *)(v0 + 208) (SEL)v140[241]];
  uint64_t v147 = swift_task_alloc();
  sub_251F34D80();

  swift_beginAccess();
  int v148 = swift_isUniquelyReferenced_nonNull_native();
  v189[0] = *v186;
  uint64_t v149 = v189[0];
  *uint64_t v186 = 0x8000000000000000;
  unint64_t v151 = sub_2519FE584(v147);
  uint64_t v152 = *(void *)(v149 + 16);
  BOOL v153 = (v150 & 1) == 0;
  uint64_t v154 = v152 + v153;
  if (__OFADD__(v152, v153))
  {
    __break(1u);
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  char v155 = v150;
  if (*(void *)(v149 + 24) >= v154)
  {
    uint64_t v158 = v175;
    if ((v148 & 1) == 0)
    {
      sub_251A12544();
      uint64_t v149 = v189[0];
    }
LABEL_83:
    *uint64_t v186 = v149;
    swift_bridgeObjectRelease();
    unint64_t v159 = (void *)*v186;
    swift_bridgeObjectRetain();
    if ((v155 & 1) == 0)
    {
      uint64_t v160 = swift_task_alloc();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v183 + 16))(v160, v147, v158);
      sub_251A112AC(v151, v160, 0, v159);
      swift_task_dealloc();
    }
    uint64_t v161 = v159[7];
    uint64_t v162 = *(void *)(v161 + 8 * v151);
    BOOL v163 = __OFADD__(v162, 1);
    uint64_t v164 = v162 + 1;
    if (!v163)
    {
      uint64_t v165 = *(void *)(v0 + 424);
      uint64_t v166 = *(void *)(v0 + 312);
      uint64_t v167 = *(void *)(v0 + 280);
      unint64_t v168 = *(void **)(v0 + 208);
      *(void *)(v161 + 8 * v151) = v164;
      v172(v147, v175);
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      id v169 = objc_msgSend(v168, sel_uniqueIdentifier);
      uint64_t v170 = swift_task_alloc();
      sub_251F34D80();

      sub_251DF7620(v166, v165, type metadata accessor for StateSnapshot);
      v187(v165, 0, 1, v167);
      swift_beginAccess();
      sub_2519F7C18(v165, v170);
      swift_endAccess();
      swift_task_dealloc();
      *(void *)(v0 + 544) = sub_251F35C80();
      *(void *)(v0 + 552) = sub_251F35C70();
      uint64_t v49 = sub_251F35C00();
      uint64_t v51 = v171;
      uint64_t v52 = sub_251F2C544;
      goto LABEL_87;
    }
    goto LABEL_91;
  }
  sub_251A01FC8(v154, v148);
  uint64_t v149 = v189[0];
  unint64_t v156 = sub_2519FE584(v147);
  uint64_t v158 = v175;
  if ((v155 & 1) == (v157 & 1))
  {
    unint64_t v151 = v156;
    goto LABEL_83;
  }
  return sub_251F36BA0();
}

uint64_t sub_251F2C544()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 224);
  return MEMORY[0x270FA2498](sub_251F2C5DC, v1, 0);
}

uint64_t sub_251F2C5DC()
{
  *(void *)(v0 + 560) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251F2C668, v2, v1);
}

uint64_t sub_251F2C668()
{
  uint64_t v1 = *(void *)(v0 + 224);
  swift_release();
  *(void *)(v0 + 568) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251F2C6E0, v1, 0);
}

uint64_t sub_251F2C6E0()
{
  *(void *)(v0 + 576) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251F2C76C, v2, v1);
}

uint64_t sub_251F2C76C()
{
  uint64_t v1 = *(void *)(v0 + 312);
  uint64_t v2 = *(void *)(v0 + 224);
  swift_release();
  sub_251B793E4(v1);
  return MEMORY[0x270FA2498](sub_251F2C7F0, v2, 0);
}

uint64_t sub_251F2C7F0()
{
  uint64_t v1 = sub_251F35000();
  sub_251F35040();
  os_signpost_type_t v2 = sub_251F36050();
  if (sub_251F36170())
  {
    uint64_t v4 = *(void *)(v0 + 240);
    uint64_t v3 = *(void *)(v0 + 248);
    uint64_t v5 = *(void *)(v0 + 232);
    swift_retain();
    sub_251F35070();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x263F90238])
    {
      uint64_t v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 240) + 8))(*(void *)(v0 + 248), *(void *)(v0 + 232));
      uint64_t v6 = "";
    }
    char v11 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
    uint64_t v20 = *(void *)(v0 + 472);
    uint64_t v12 = *(void *)(v0 + 360);
    uint64_t v13 = *(void *)(v0 + 336);
    uint64_t v14 = *(void *)(v0 + 320);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 496))(v12, v13, v14);
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    os_signpost_id_t v16 = sub_251F34FC0();
    _os_signpost_emit_with_name_impl(&dword_2519F3000, v1, v2, v16, "Pushing iteration to DataModel", v6, v15, 2u);
    MEMORY[0x2533AC760](v15, -1, -1);

    swift_release();
    v11(v13, v14);
    sub_251A1B064(v20, &qword_26B2203A0);
    swift_release();
    v11(v12, v14);
  }
  else
  {
    unint64_t v7 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
    uint64_t v8 = *(void *)(v0 + 472);
    uint64_t v9 = *(void *)(v0 + 336);
    uint64_t v10 = *(void *)(v0 + 320);

    swift_release();
    v7(v9, v10);
    sub_251A1B064(v8, &qword_26B2203A0);
    swift_release();
  }
  sub_251ACFFCC(*(void *)(v0 + 312), *(void *)(v0 + 184));
  sub_251A27C7C((uint64_t)sub_2519FDDC0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unsigned __int8 v17 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v18 = *(void *)(v0 + 480);
  return v17(v18);
}

uint64_t sub_251F2CB74()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 224);
  return MEMORY[0x270FA2498](sub_251F2CC0C, v1, 0);
}

uint64_t sub_251F2CC0C()
{
  *(void *)(v0 + 600) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251F2CC98, v2, v1);
}

uint64_t sub_251F2CC98()
{
  uint64_t v1 = *(void *)(v0 + 224);
  swift_release();
  *(void *)(v0 + 608) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251F2CD10, v1, 0);
}

uint64_t sub_251F2CD10()
{
  uint64_t v1 = v0[52];
  uint64_t v2 = v0[35];
  uint64_t v3 = v0[36];
  sub_251A1B128(v0[59], v1, &qword_26B2203A0);
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  v0[77] = (uint64_t)v4;
  v0[78] = (v3 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v4(v1, 1, v2) == 1)
  {
    if (qword_26B220320 != -1) {
      swift_once();
    }
    uint64_t v5 = v0[52];
    uint64_t v6 = v0[37];
    uint64_t v7 = __swift_project_value_buffer(v0[35], (uint64_t)qword_26B21FF70);
    sub_251DF7620(v7, v6, type metadata accessor for StateSnapshot);
    sub_251A1B064(v5, &qword_26B2203A0);
  }
  else
  {
    sub_251ACFFCC(v0[52], v0[37]);
  }
  v0[79] = sub_251F35C70();
  uint64_t v9 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251F2CE78, v9, v8);
}

uint64_t sub_251F2CE78()
{
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v2 = *(void *)(v0 + 224);
  swift_release();
  sub_251B793E4(v1);
  sub_251F2E834(v1, type metadata accessor for StateSnapshot);
  return MEMORY[0x270FA2498](sub_251F2CF18, v2, 0);
}

uint64_t sub_251F2CF18()
{
  uint64_t v1 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[77];
  uint64_t v2 = v0[51];
  uint64_t v3 = v0[35];
  sub_251A1B128(v0[59], v2, &qword_26B2203A0);
  if (v1(v2, 1, v3) == 1)
  {
    if (qword_26B220320 != -1) {
      swift_once();
    }
    uint64_t v4 = v0[59];
    uint64_t v5 = v0[51];
    uint64_t v6 = v0[23];
    uint64_t v7 = __swift_project_value_buffer(v0[35], (uint64_t)qword_26B21FF70);
    sub_251DF7620(v7, v6, type metadata accessor for StateSnapshot);
    sub_251A1B064(v4, &qword_26B2203A0);
    sub_251A1B064(v5, &qword_26B2203A0);
  }
  else
  {
    uint64_t v8 = v0[51];
    uint64_t v9 = v0[23];
    sub_251A1B064(v0[59], &qword_26B2203A0);
    sub_251ACFFCC(v8, v9);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v11 = v0[60];
  return v10(v11);
}

uint64_t SnapshotModerator.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251A1B064(v0 + OBJC_IVAR____TtC13HomeDataModel17SnapshotModerator_lockedToFreezeDriedHome, &qword_26B21FF90);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t SnapshotModerator.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251A1B064(v0 + OBJC_IVAR____TtC13HomeDataModel17SnapshotModerator_lockedToFreezeDriedHome, &qword_26B21FF90);
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t SnapshotModerator.unownedExecutor.getter()
{
  return v0;
}

uint64_t SnapshotModerator.readFreezeDriedHome(url:)(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  uint64_t v4 = type metadata accessor for StateSnapshot(0);
  v3[8] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[9] = v5;
  v3[10] = *(void *)(v5 + 64);
  v3[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  v3[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251F2D350, v2, 0);
}

uint64_t sub_251F2D350()
{
  sub_251F348C0();
  swift_allocObject();
  sub_251F348B0();
  uint64_t v1 = sub_251F34B90();
  unint64_t v3 = v2;
  sub_251F2E27C(&qword_269B9E238, (void (*)(uint64_t))type metadata accessor for StateSnapshot);
  sub_251F348A0();
  sub_251A1AD94(v1, v3);
  swift_release();
  uint64_t v6 = v0[11];
  uint64_t v5 = v0[12];
  uint64_t v7 = v0[8];
  uint64_t v19 = v0[9];
  uint64_t v8 = v0[7];
  uint64_t v9 = v0[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = v9 + *(int *)(v7 + 20);
  uint64_t v12 = sub_251F34DA0();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  uint64_t v14 = v8 + OBJC_IVAR____TtC13HomeDataModel17SnapshotModerator_lockedToFreezeDriedHome;
  swift_beginAccess();
  sub_251C4DDAC(v10, v14);
  swift_endAccess();
  swift_task_dealloc();
  uint64_t v15 = sub_251F35CD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v5, 1, 1, v15);
  sub_251DF7620(v9, v6, type metadata accessor for StateSnapshot);
  unint64_t v16 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  *(void *)(v17 + 24) = 0;
  sub_251ACFFCC(v6, v17 + v16);
  sub_251ACBB48(v5, (uint64_t)&unk_269BA6310, v17);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_251F2D680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x270FA2498](sub_251F2D6A0, 0, 0);
}

uint64_t sub_251F2D6A0()
{
  *(void *)(v0 + 24) = sub_251F35C80();
  *(void *)(v0 + 32) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251F2D738, v2, v1);
}

uint64_t sub_251F2D738()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251F2D7D0, 0, 0);
}

uint64_t sub_251F2D7D0()
{
  *(void *)(v0 + 40) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251F2D85C, v2, v1);
}

uint64_t sub_251F2D85C()
{
  swift_release();
  *(void *)(v0 + 48) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251F2D8D0, 0, 0);
}

uint64_t sub_251F2D8D0()
{
  *(void *)(v0 + 56) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251F2D95C, v2, v1);
}

uint64_t sub_251F2D95C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  sub_251B793E4(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_251F2D9C8()
{
  uint64_t v1 = type metadata accessor for StateSnapshot(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v14 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + ((v2 + 32) & ~v2) + *(int *)(v1 + 20);
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  uint64_t v6 = (int *)type metadata accessor for StaticHome();
  swift_bridgeObjectRelease();
  uint64_t v7 = v3 + v6[6];
  v5(v7, v4);
  uint64_t v8 = type metadata accessor for StaticRoom(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5(v7 + *(int *)(v8 + 32), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = v3 + v6[7];
  v5(v9, v4);
  uint64_t v10 = type metadata accessor for StaticUser();
  swift_bridgeObjectRelease();
  v5(v9 + *(int *)(v10 + 24), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = v3 + v6[20];
  uint64_t v12 = type metadata accessor for StaticResident();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12))
  {
    v5(v11, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5(v11 + *(int *)(v12 + 40), v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, ((v2 + 32) & ~v2) + v14, v2 | 7);
}

uint64_t sub_251F2DDDC()
{
  uint64_t v2 = *(void *)(type metadata accessor for StateSnapshot(0) - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_251AB3A34;
  v4[2] = v3;
  return MEMORY[0x270FA2498](sub_251F2D6A0, 0, 0);
}

uint64_t SnapshotModerator.writeFreezeDriedHome(stateSnapshot:)()
{
  sub_251F34900();
  swift_allocObject();
  sub_251F348F0();
  sub_251F348D0();
  type metadata accessor for StateSnapshot(0);
  sub_251F2E27C(&qword_269B9E240, (void (*)(uint64_t))type metadata accessor for StateSnapshot);
  uint64_t v0 = sub_251F348E0();
  swift_release();
  return v0;
}

NSObject_optional __swiftcall SnapshotModerator.takeAssertion(reason:)(Swift::String reason)
{
  object = reason._object;
  uint64_t countAndFlagsBits = reason._countAndFlagsBits;
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_26B21FF50;
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_251F350A0();
  __swift_project_value_buffer(v4, (uint64_t)qword_26B21F290);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_251F35080();
  os_log_type_t v6 = sub_251F35FD0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    v17[0] = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    sub_251A00E84(countAndFlagsBits, (unint64_t)object, v17);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2519F3000, v5, v6, "Taking assertion for reason %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v8, -1, -1);
    MEMORY[0x2533AC760](v7, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v9 = (id *)(v3 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  if (*v9)
  {
    id v10 = *v9;
    uint64_t v11 = (void *)sub_251F356C0();
    uint64_t v12 = (objc_class *)objc_msgSend(v10, sel__beginActiveAssertionWithReason_, v11);
  }
  else
  {
    uint64_t v12 = 0;
  }
  swift_getKeyPath();
  sub_251F2E27C((unint64_t *)&qword_26B21F280, (void (*)(uint64_t))type metadata accessor for DataModel);
  sub_251F34F10();
  swift_release();
  uint64_t v14 = *(void **)(v3 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome);
  if (v14)
  {
    id v15 = v14;
    DataModel.fetchAllCharacteristics(for:)((HMHome)v15);
  }
  unint64_t v16 = v12;
  result.value.isa = v16;
  result.Swift::Bool is_nil = v13;
  return result;
}

uint64_t sub_251F2E27C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

Swift::Void __swiftcall SnapshotModerator.releaseAssertion(_:)(NSObject a1)
{
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_251F350A0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B21F290);
  uint64_t v3 = sub_251F35080();
  os_log_type_t v4 = sub_251F35FD0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_2519F3000, v3, v4, "Releasing provided assertion.", v5, 2u);
    MEMORY[0x2533AC760](v5, -1, -1);
  }

  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  os_log_type_t v6 = (id *)(qword_26B21FF50 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  objc_msgSend(*v6, sel__endActiveAssertion_, a1.isa);
}

uint64_t sub_251F2E418()
{
  uint64_t v0 = sub_251F34B70();
  __swift_allocate_value_buffer(v0, qword_269BA62E8);
  __swift_project_value_buffer(v0, (uint64_t)qword_269BA62E8);
  id v1 = objc_msgSend(self, sel_defaultManager);
  id v2 = objc_msgSend(v1, sel_URLForUbiquityContainerIdentifier_, 0);

  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  os_log_type_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v2)
  {
    uint64_t v7 = *(void *)(v0 - 8);
    MEMORY[0x270FA5388](v4);
    uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34B40();

    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v6, v9, v0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v6, 0, 1, v0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v0);
    if (result != 1)
    {
      sub_251F34B20();
      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v6, v0);
    }
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 56))(v6, 1, 1, v0);
  }
  __break(1u);
  return result;
}

uint64_t static SnapshotModerator.iCloudDocumentsURL.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_269B9C590 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_251F34B70();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269BA62E8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_251F2E71C()
{
  return type metadata accessor for SnapshotModerator();
}

uint64_t type metadata accessor for SnapshotModerator()
{
  uint64_t result = qword_26B21E718;
  if (!qword_26B21E718) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_251F2E770()
{
  sub_251A24BB4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for SnapshotModerator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SnapshotModerator);
}

uint64_t sub_251F2E834(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

__n128 ColorPickerFavorite.init(color:brightness:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>, double a3@<D0>)
{
  __n128 v8 = *a1;
  unint64_t v5 = a1[1].n128_u64[0];
  unsigned __int8 v6 = a1[1].n128_u8[8];
  type metadata accessor for ColorPickerFavorite();
  sub_251F34D90();
  __n128 result = v8;
  *a2 = v8;
  a2[1].n128_u64[0] = v5;
  a2[1].n128_u8[8] = v6;
  a2[2].n128_f64[0] = a3;
  return result;
}

uint64_t type metadata accessor for ColorPickerFavorite()
{
  uint64_t result = qword_26B21E858;
  if (!qword_26B21E858) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t static LightbulbColor.convertKelvinToMired(_:)(uint64_t a1)
{
  if (a1 <= 1) {
    unint64_t v1 = 1;
  }
  else {
    unint64_t v1 = a1;
  }
  if (v1 < 0x10) {
    return 0xFFFFFFFFLL;
  }
  else {
    return 0xF4240 / v1;
  }
}

uint64_t LightbulbColor.hash(into:)(uint64_t a1)
{
  switch(v1[24])
  {
    case 1:
      sub_251F36CB0();
      sub_251F36CF0();
      goto LABEL_4;
    case 2:
      sub_251F36CB0();
      uint64_t result = sub_251F36CD0();
      break;
    case 3:
      int v4 = *(unsigned __int8 *)(*(void *)v1 + 40);
      sub_251F36CB0();
      if (v4 == 255)
      {
        uint64_t result = sub_251F36CC0();
      }
      else
      {
        sub_251F36CC0();
        uint64_t result = LightbulbColor.hash(into:)(a1);
      }
      break;
    default:
      sub_251F36CB0();
      sub_251F36CF0();
      sub_251F36CF0();
LABEL_4:
      uint64_t result = sub_251F36CF0();
      break;
  }
  return result;
}

uint64_t static LightbulbColor.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(uint64_t *)a1;
  uint64_t v2 = *(uint64_t *)(a1 + 8);
  uint64_t v4 = *(uint64_t *)(a1 + 16);
  char v5 = *(unsigned char *)(a1 + 24);
  uint64_t v7 = *(uint64_t *)a2;
  uint64_t v6 = *(uint64_t *)(a2 + 8);
  uint64_t v8 = *(uint64_t *)(a2 + 16);
  int v9 = *(unsigned __int8 *)(a2 + 24);
  switch(v5)
  {
    case 1:
      if (v9 != 1) {
        goto LABEL_20;
      }
      sub_251F309C8(*(void *)a1, v2, v4, 1);
      sub_251F309C8(v7, v6, v8, 1);
      return *(double *)&v3 == *(double *)&v7 && *(double *)&v2 == *(double *)&v6;
    case 2:
      if (v9 != 2) {
        goto LABEL_20;
      }
      int v12 = (unsigned __int16)*(void *)a1;
      sub_251F309C8(*(void *)a1, v2, v4, 2);
      sub_251F309C8(v7, v6, v8, 2);
      return v12 == (unsigned __int16)v7;
    case 3:
      if (v9 != 3)
      {
        swift_retain();
        goto LABEL_20;
      }
      uint64_t v14 = *(void *)(v3 + 16);
      uint64_t v13 = *(void *)(v3 + 24);
      uint64_t v15 = *(void *)(v3 + 32);
      int v16 = *(unsigned __int8 *)(v3 + 40);
      uint64_t v17 = *(void *)(v7 + 16);
      uint64_t v18 = *(void *)(v7 + 24);
      uint64_t v19 = *(void *)(v7 + 32);
      int v20 = *(unsigned __int8 *)(v7 + 40);
      if (v16 == 255)
      {
        char v33 = -1;
        uint64_t v32 = *(void *)(v7 + 16);
        uint64_t v34 = *(void *)(v7 + 24);
        uint64_t v35 = *(void *)(v3 + 16);
        uint64_t v36 = *(void *)(v7 + 32);
        uint64_t v38 = *(void *)(v3 + 24);
        uint64_t v39 = *(void *)(v3 + 32);
        sub_251F309B4(v7, v6, v8, 3);
        sub_251F309B4(v3, v2, v4, 3);
        if (v20 == 255)
        {
          sub_251F309C8(v3, v2, v4, 3);
          sub_251F309C8(v7, v6, v8, 3);
          return 1;
        }
LABEL_26:
        sub_251F309DC(v32, v34, v36, v20);
        sub_251F309F0(v35, v38, v39, v33);
        sub_251F309F0(v32, v34, v36, v20);
        sub_251F309C8(v3, v2, v4, 3);
        uint64_t v25 = v7;
        uint64_t v26 = v6;
        uint64_t v27 = v8;
        char v28 = 3;
        goto LABEL_21;
      }
      v42[0] = *(void *)(v3 + 16);
      v42[1] = v13;
      v42[2] = v15;
      char v43 = v16;
      if (v20 == 255)
      {
        uint64_t v32 = v17;
        uint64_t v34 = v18;
        uint64_t v36 = v19;
        uint64_t v29 = v14;
        uint64_t v30 = v13;
        uint64_t v39 = v15;
        char v31 = v16;
        sub_251F309DC(v14, v13, v15, v16);
        sub_251F309DC(v29, v30, v39, v31);
        sub_251F309B4(v7, v6, v8, 3);
        sub_251F309B4(v3, v2, v4, 3);
        uint64_t v35 = v29;
        uint64_t v38 = v30;
        char v33 = v31;
        sub_251F309C8(v29, v30, v39, v31);
        LOBYTE(v20) = -1;
        goto LABEL_26;
      }
      v40[0] = v17;
      v40[1] = v18;
      long long v40[2] = v19;
      char v41 = v20;
      uint64_t v21 = v14;
      uint64_t v22 = v13;
      uint64_t v23 = v15;
      char v24 = v16;
      sub_251F309DC(v14, v13, v15, v16);
      sub_251F309DC(v21, v22, v23, v24);
      sub_251F309B4(v7, v6, v8, 3);
      sub_251F309B4(v3, v2, v4, 3);
      char v37 = static LightbulbColor.== infix(_:_:)(v42, v40);
      sub_251F309C8(v21, v22, v23, v24);
      sub_251F309F0(v21, v22, v23, v24);
      sub_251F309C8(v3, v2, v4, 3);
      sub_251F309C8(v7, v6, v8, 3);
      return (v37 & 1) != 0;
    default:
      if (*(unsigned char *)(a2 + 24))
      {
LABEL_20:
        sub_251F309B4(v7, v6, v8, v9);
        sub_251F309C8(v3, v2, v4, v5);
        uint64_t v25 = v7;
        uint64_t v26 = v6;
        uint64_t v27 = v8;
        char v28 = v9;
LABEL_21:
        sub_251F309C8(v25, v26, v27, v28);
        return 0;
      }
      else
      {
        sub_251F309C8(*(void *)a1, v2, v4, 0);
        sub_251F309C8(v7, v6, v8, 0);
        BOOL v10 = *(double *)&v3 == *(double *)&v7;
        if (*(double *)&v2 != *(double *)&v6) {
          BOOL v10 = 0;
        }
        return *(double *)&v4 == *(double *)&v8 && v10;
      }
  }
}

BOOL static RGBColor.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t sub_251F2EF50(uint64_t a1)
{
  unint64_t v2 = sub_251F30A58();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251F2EF8C(uint64_t a1)
{
  unint64_t v2 = sub_251F30A58();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251F2EFC8()
{
  uint64_t result = 4343634;
  switch(*v0)
  {
    case 1:
      uint64_t result = 5657416;
      break;
    case 2:
      uint64_t result = 0x74617265706D6554;
      break;
    case 3:
      uint64_t result = 0x6576697470616461;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251F2F058@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251F3314C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251F2F080(uint64_t a1)
{
  unint64_t v2 = sub_251F30A04();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251F2F0BC(uint64_t a1)
{
  unint64_t v2 = sub_251F30A04();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251F2F0F8(uint64_t a1)
{
  unint64_t v2 = sub_251F30B54();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251F2F134(uint64_t a1)
{
  unint64_t v2 = sub_251F30B54();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251F2F170(uint64_t a1)
{
  unint64_t v2 = sub_251F30BA8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251F2F1AC(uint64_t a1)
{
  unint64_t v2 = sub_251F30BA8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251F2F1E8(uint64_t a1)
{
  unint64_t v2 = sub_251F30B00();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251F2F224(uint64_t a1)
{
  unint64_t v2 = sub_251F30B00();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LightbulbColor.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA6320);
  uint64_t v42 = *(void *)(v3 - 8);
  uint64_t v43 = v3;
  MEMORY[0x270FA5388](v3);
  char v41 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA6328);
  uint64_t v37 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v35 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA6330);
  uint64_t v38 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v36 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA6338);
  uint64_t v34 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  int v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA6340);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v46 = v10;
  uint64_t v47 = v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)v1;
  uint64_t v44 = *(void *)(v1 + 8);
  uint64_t v15 = *(void *)(v1 + 16);
  uint64_t v16 = *(unsigned __int8 *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251F30A04();
  uint64_t v17 = v13;
  sub_251F36DA0();
  switch(v16)
  {
    case 1:
      LOBYTE(v48) = 1;
      sub_251F30B54();
      int v20 = v36;
      uint64_t v18 = v46;
      uint64_t v19 = v13;
      sub_251F36900();
      LOBYTE(v48) = 0;
      uint64_t v21 = v40;
      uint64_t v22 = v45;
      sub_251F369F0();
      if (!v22)
      {
        LOBYTE(v48) = 1;
        sub_251F369F0();
      }
      (*(void (**)(char *, uint64_t))(v38 + 8))(v20, v21);
      goto LABEL_6;
    case 2:
      LOBYTE(v48) = 2;
      sub_251F30B00();
      char v24 = v35;
      uint64_t v25 = v46;
      sub_251F36900();
      uint64_t v26 = v39;
      sub_251F36A50();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v24, v26);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v13, v25);
      break;
    case 3:
      uint64_t v28 = *(void *)(v14 + 16);
      uint64_t v27 = *(void *)(v14 + 24);
      uint64_t v29 = *(void *)(v14 + 32);
      char v30 = *(unsigned char *)(v14 + 40);
      LOBYTE(v48) = 3;
      sub_251F309DC(v28, v27, v29, v30);
      sub_251F30A58();
      char v31 = v41;
      uint64_t v32 = v46;
      sub_251F36900();
      uint64_t v44 = v28;
      uint64_t v48 = v28;
      uint64_t v49 = v27;
      uint64_t v50 = v29;
      char v51 = v30;
      sub_251F30AAC();
      uint64_t v33 = v43;
      sub_251F36970();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v31, v33);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v17, v32);
      uint64_t result = sub_251F309F0(v44, v27, v29, v30);
      break;
    default:
      LOBYTE(v48) = 0;
      sub_251F30BA8();
      uint64_t v18 = v46;
      uint64_t v19 = v13;
      sub_251F36900();
      uint64_t v48 = v14;
      uint64_t v49 = v44;
      uint64_t v50 = v15;
      sub_251F30BFC();
      sub_251F36A20();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v7);
LABEL_6:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v19, v18);
      break;
  }
  return result;
}

uint64_t LightbulbColor.hashValue.getter()
{
  uint64_t v1 = *((void *)v0 + 2);
  char v2 = *((unsigned char *)v0 + 24);
  long long v5 = *v0;
  uint64_t v6 = v1;
  char v7 = v2;
  sub_251F36CA0();
  LightbulbColor.hash(into:)((uint64_t)v4);
  return sub_251F36D00();
}

uint64_t LightbulbColor.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA6380);
  uint64_t v54 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  *(void *)&long long v58 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA6388);
  uint64_t v51 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v56 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA6390);
  uint64_t v53 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA6398);
  uint64_t v50 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  int v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA63A0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v59 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_251F30A04();
  uint64_t v15 = v62;
  sub_251F36D90();
  if (v15)
  {
LABEL_8:
    uint64_t v29 = (uint64_t)v59;
    return __swift_destroy_boxed_opaque_existential_0(v29);
  }
  uint64_t v47 = v7;
  uint64_t v48 = 0;
  uint64_t v16 = v56;
  uint64_t v17 = v57;
  uint64_t v18 = v58;
  uint64_t v62 = v11;
  uint64_t v19 = sub_251F368E0();
  uint64_t v20 = v10;
  uint64_t v21 = v13;
  if (*(void *)(v19 + 16) != 1)
  {
    uint64_t v25 = sub_251F36490();
    swift_allocError();
    uint64_t v27 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
    *uint64_t v27 = &type metadata for LightbulbColor;
    uint64_t v28 = v20;
    sub_251F36780();
    sub_251F36480();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v25 - 8) + 104))(v27, *MEMORY[0x263F8DCB0], v25);
    swift_willThrow();
LABEL_7:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v21, v28);
    goto LABEL_8;
  }
  uint64_t v22 = *(unsigned __int8 *)(v19 + 32);
  switch(*(unsigned char *)(v19 + 32))
  {
    case 1:
      LOBYTE(v60) = 1;
      sub_251F30B54();
      char v31 = v6;
      uint64_t v28 = v20;
      uint64_t v32 = v48;
      sub_251F36770();
      if (v32) {
        goto LABEL_7;
      }
      LOBYTE(v60) = 0;
      uint64_t v33 = v49;
      sub_251F36850();
      long long v58 = v39;
      LOBYTE(v60) = 1;
      sub_251F36850();
      uint64_t v40 = v62;
      uint64_t v43 = *(void (**)(char *, uint64_t))(v53 + 8);
      long long v57 = v44;
      v43(v31, v33);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v21, v20);
      uint64_t v45 = 0;
      *(void *)&long long v46 = v58;
      *((void *)&v46 + 1) = v57;
      goto LABEL_19;
    case 2:
      LOBYTE(v60) = 2;
      sub_251F30B00();
      uint64_t v34 = v20;
      uint64_t v35 = v48;
      sub_251F36770();
      if (v35) {
        goto LABEL_5;
      }
      unsigned __int16 v41 = sub_251F368B0();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v16, v17);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v21, v34);
      uint64_t v45 = 0;
      long long v46 = v41;
      uint64_t v29 = (uint64_t)v59;
      uint64_t v42 = v55;
      goto LABEL_20;
    case 3:
      LOBYTE(v60) = 3;
      sub_251F30A58();
      uint64_t v28 = v20;
      uint64_t v36 = v48;
      sub_251F36770();
      if (v36) {
        goto LABEL_7;
      }
      *(void *)&long long v57 = v22;
      uint64_t v22 = swift_allocObject();
      sub_251F30C98();
      uint64_t v38 = v52;
      sub_251F367D0();
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v18, v38);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v21, v20);
      uint64_t v45 = 0;
      long long v46 = (unint64_t)v22;
      uint64_t v29 = (uint64_t)v59;
      uint64_t v42 = v55;
      LOBYTE(v22) = v57;
      goto LABEL_20;
    default:
      LOBYTE(v60) = 0;
      sub_251F30BA8();
      uint64_t v23 = v9;
      uint64_t v24 = v48;
      sub_251F36770();
      if (v24)
      {
LABEL_5:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v62 + 8))(v21, v20);
        goto LABEL_8;
      }
      sub_251F30CEC();
      uint64_t v37 = v47;
      sub_251F36880();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v23, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v21, v20);
      long long v46 = v60;
      uint64_t v45 = v61;
LABEL_19:
      uint64_t v29 = (uint64_t)v59;
      uint64_t v42 = v55;
LABEL_20:
      *(_OWORD *)uint64_t v42 = v46;
      *(void *)(v42 + 16) = v45;
      *(unsigned char *)(v42 + 24) = v22;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_0(v29);
}

uint64_t sub_251F301C8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return LightbulbColor.init(from:)(a1, a2);
}

uint64_t sub_251F301E0(void *a1)
{
  return LightbulbColor.encode(to:)(a1);
}

uint64_t sub_251F301F8()
{
  uint64_t v1 = *((void *)v0 + 2);
  char v2 = *((unsigned char *)v0 + 24);
  long long v5 = *v0;
  uint64_t v6 = v1;
  char v7 = v2;
  sub_251F36CA0();
  LightbulbColor.hash(into:)((uint64_t)v4);
  return sub_251F36D00();
}

uint64_t sub_251F30258()
{
  uint64_t v1 = *((void *)v0 + 2);
  char v2 = *((unsigned char *)v0 + 24);
  long long v5 = *v0;
  uint64_t v6 = v1;
  char v7 = v2;
  sub_251F36CA0();
  LightbulbColor.hash(into:)((uint64_t)v4);
  return sub_251F36D00();
}

__n128 RGBColor.id.getter()
{
  __n128 v4 = *v0;
  unint64_t v1 = v0[1].n128_u64[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CAB0);
  uint64_t v2 = swift_allocObject();
  __n128 result = v4;
  *(_OWORD *)(v2 + 16) = xmmword_251F3DAB0;
  *(__n128 *)(v2 + 32) = v4;
  *(void *)(v2 + 48) = v1;
  return result;
}

double RGBColor.r.getter()
{
  return *(double *)v0;
}

void RGBColor.r.setter(double a1)
{
  *unint64_t v1 = a1;
}

uint64_t (*RGBColor.r.modify())()
{
  return nullsub_1;
}

double RGBColor.g.getter()
{
  return *(double *)(v0 + 8);
}

void RGBColor.g.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

uint64_t (*RGBColor.g.modify())()
{
  return nullsub_1;
}

double RGBColor.b.getter()
{
  return *(double *)(v0 + 16);
}

void RGBColor.b.setter(double a1)
{
  *(double *)(v1 + 16) = a1;
}

uint64_t (*RGBColor.b.modify())()
{
  return nullsub_1;
}

int8x16_t RGBColor.init(_:_:_:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v4.i64[0] = a1;
  v4.i64[1] = a2;
  float64x2_t v5 = vcvtq_f64_s64(v4);
  float64x2_t v6 = (float64x2_t)vdupq_n_s64(0x406FE00000000000uLL);
  double v7 = (double)a3 / 255.0;
  if (v7 <= 0.0) {
    double v7 = 0.0;
  }
  if (v7 > 1.0) {
    double v7 = 1.0;
  }
  float64x2_t v8 = vdivq_f64(v5, v6);
  float64x2_t v9 = (float64x2_t)vbicq_s8((int8x16_t)v8, (int8x16_t)vclezq_f64(v8));
  __asm { FMOV            V2.2D, #1.0 }
  int8x16_t result = vbslq_s8((int8x16_t)vcgtq_f64(v9, _Q2), (int8x16_t)_Q2, (int8x16_t)v9);
  *(int8x16_t *)a4 = result;
  *(double *)(a4 + 16) = v7;
  return result;
}

int8x16_t RGBColor.init(red:green:blue:)@<Q0>(uint64_t a1@<X8>, float64x2_t a2@<Q0>, float64_t a3@<D1>, double a4@<D2>)
{
  a2.f64[1] = a3;
  int8x16_t v4 = (int8x16_t)vclezq_f64(a2);
  if (a4 <= 0.0) {
    a4 = 0.0;
  }
  if (a4 > 1.0) {
    a4 = 1.0;
  }
  float64x2_t v5 = (float64x2_t)vbicq_s8((int8x16_t)a2, v4);
  __asm { FMOV            V1.2D, #1.0 }
  int8x16_t result = vbslq_s8((int8x16_t)vcgtq_f64(v5, _Q1), (int8x16_t)_Q1, (int8x16_t)v5);
  *(int8x16_t *)a1 = result;
  *(double *)(a1 + 16) = a4;
  return result;
}

uint64_t RGBColor.hash(into:)()
{
  return sub_251F36CF0();
}

uint64_t sub_251F30494()
{
  return qword_251F62488[*v0];
}

uint64_t sub_251F304AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251F33324(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251F304D4(uint64_t a1)
{
  unint64_t v2 = sub_251F30D40();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251F30510(uint64_t a1)
{
  unint64_t v2 = sub_251F30D40();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t RGBColor.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA63B8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  double v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v10 = v1[2];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251F30D40();
  sub_251F36DA0();
  uint64_t v14 = v9;
  char v13 = 0;
  sub_251F30D94();
  sub_251F36A20();
  if (!v2)
  {
    uint64_t v14 = v8;
    char v13 = 1;
    sub_251F36A20();
    uint64_t v14 = v10;
    char v13 = 2;
    sub_251F36A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t RGBColor.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t RGBColor.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA63D0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251F30D40();
  sub_251F36D90();
  if (!v2)
  {
    char v14 = 0;
    sub_251F30DDC();
    sub_251F36880();
    uint64_t v9 = v15;
    char v14 = 1;
    sub_251F36880();
    uint64_t v11 = v15;
    char v14 = 2;
    sub_251F36880();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v12 = v15;
    *a2 = v9;
    a2[1] = v11;
    a2[2] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_251F309B4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 3) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_251F309C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 3) {
    return swift_release();
  }
  return result;
}

uint64_t sub_251F309DC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 != -1) {
    return sub_251F309B4(a1, a2, a3, a4);
  }
  return a1;
}

uint64_t sub_251F309F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 != -1) {
    return sub_251F309C8(a1, a2, a3, a4);
  }
  return a1;
}

unint64_t sub_251F30A04()
{
  unint64_t result = qword_269BA6348;
  if (!qword_269BA6348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6348);
  }
  return result;
}

unint64_t sub_251F30A58()
{
  unint64_t result = qword_269BA6350;
  if (!qword_269BA6350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6350);
  }
  return result;
}

unint64_t sub_251F30AAC()
{
  unint64_t result = qword_269BA6358;
  if (!qword_269BA6358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6358);
  }
  return result;
}

unint64_t sub_251F30B00()
{
  unint64_t result = qword_269BA6360;
  if (!qword_269BA6360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6360);
  }
  return result;
}

unint64_t sub_251F30B54()
{
  unint64_t result = qword_269BA6368;
  if (!qword_269BA6368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6368);
  }
  return result;
}

unint64_t sub_251F30BA8()
{
  unint64_t result = qword_269BA6370;
  if (!qword_269BA6370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6370);
  }
  return result;
}

unint64_t sub_251F30BFC()
{
  unint64_t result = qword_269BA6378;
  if (!qword_269BA6378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6378);
  }
  return result;
}

uint64_t sub_251F30C50()
{
  int v1 = *(unsigned __int8 *)(v0 + 40);
  if (v1 != 255) {
    sub_251F309C8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), v1);
  }
  return MEMORY[0x270FA0238](v0, 41, 7);
}

unint64_t sub_251F30C98()
{
  unint64_t result = qword_269BA63A8;
  if (!qword_269BA63A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA63A8);
  }
  return result;
}

unint64_t sub_251F30CEC()
{
  unint64_t result = qword_269BA63B0;
  if (!qword_269BA63B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA63B0);
  }
  return result;
}

unint64_t sub_251F30D40()
{
  unint64_t result = qword_269BA63C0;
  if (!qword_269BA63C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA63C0);
  }
  return result;
}

unint64_t sub_251F30D94()
{
  unint64_t result = qword_269BA63C8;
  if (!qword_269BA63C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA63C8);
  }
  return result;
}

unint64_t sub_251F30DDC()
{
  unint64_t result = qword_269BA63D8;
  if (!qword_269BA63D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA63D8);
  }
  return result;
}

uint64_t sub_251F30E24@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return RGBColor.init(from:)(a1, a2);
}

uint64_t sub_251F30E3C(void *a1)
{
  return RGBColor.encode(to:)(a1);
}

__n128 sub_251F30E54@<Q0>(uint64_t *a1@<X8>)
{
  __n128 v6 = *v1;
  unint64_t v3 = v1[1].n128_u64[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CAB0);
  uint64_t v4 = swift_allocObject();
  __n128 result = v6;
  *(_OWORD *)(v4 + 16) = xmmword_251F3DAB0;
  *(__n128 *)(v4 + 32) = v6;
  *(void *)(v4 + 48) = v3;
  *a1 = v4;
  return result;
}

uint64_t ColorPickerFavorite.color.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  char v5 = *(unsigned char *)(v1 + 24);
  *(unsigned char *)(a1 + 24) = v5;
  return sub_251F309B4(v2, v3, v4, v5);
}

__n128 ColorPickerFavorite.color.setter(__n128 *a1)
{
  __n128 v5 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unsigned __int8 v3 = a1[1].n128_u8[8];
  sub_251F309C8(*(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
  __n128 result = v5;
  *(__n128 *)uint64_t v1 = v5;
  *(void *)(v1 + 16) = v2;
  *(unsigned char *)(v1 + 24) = v3;
  return result;
}

uint64_t (*ColorPickerFavorite.color.modify())()
{
  return nullsub_1;
}

double ColorPickerFavorite.brightness.getter()
{
  return *(double *)(v0 + 32);
}

void ColorPickerFavorite.brightness.setter(double a1)
{
  *(double *)(v1 + 32) = a1;
}

uint64_t (*ColorPickerFavorite.brightness.modify())()
{
  return nullsub_1;
}

uint64_t ColorPickerFavorite.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ColorPickerFavorite() + 24);
  uint64_t v4 = sub_251F34DA0();
  __n128 v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t ColorPickerFavorite.id.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ColorPickerFavorite() + 24);
  uint64_t v4 = sub_251F34DA0();
  __n128 v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*ColorPickerFavorite.id.modify())(void)
{
  return nullsub_1;
}

uint64_t ColorPickerFavorite.description.getter()
{
  return 0;
}

uint64_t ColorPickerFavorite.hash(into:)(uint64_t a1)
{
  return sub_251F35610();
}

uint64_t sub_251F312AC()
{
  uint64_t v1 = 0x656E746867697262;
  if (*v0 != 1) {
    uint64_t v1 = 25705;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x726F6C6F63;
  }
}

uint64_t sub_251F312FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251F3342C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251F31324(uint64_t a1)
{
  unint64_t v2 = sub_251F31C40();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251F31360(uint64_t a1)
{
  unint64_t v2 = sub_251F31C40();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ColorPickerFavorite.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA63E0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251F31C40();
  sub_251F36DA0();
  uint64_t v9 = *((void *)v3 + 2);
  char v10 = *((unsigned char *)v3 + 24);
  long long v13 = *v3;
  uint64_t v14 = v9;
  char v15 = v10;
  v12[15] = 0;
  sub_251F30AAC();
  sub_251F36A20();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    sub_251F369F0();
    type metadata accessor for ColorPickerFavorite();
    LOBYTE(v13) = 2;
    sub_251F34DA0();
    sub_251A1A8EC(&qword_26B21E348);
    sub_251F36A20();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ColorPickerFavorite.hashValue.getter()
{
  sub_251F36CA0();
  LightbulbColor.hash(into:)((uint64_t)v1);
  sub_251F36CF0();
  type metadata accessor for ColorPickerFavorite();
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  return sub_251F36D00();
}

uint64_t ColorPickerFavorite.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA63F0);
  uint64_t v5 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ColorPickerFavorite();
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)v11 + 4) = 0x3FF0000000000000;
  uint64_t v27 = &v11[*(int *)(v9 + 32)];
  sub_251F34D90();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251F31C40();
  sub_251F36D90();
  if (v2)
  {
    long long v13 = v27;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    uint64_t v14 = sub_251F34DA0();
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  }
  else
  {
    uint64_t v12 = v5;
    char v31 = 0;
    sub_251F30C98();
    sub_251F36880();
    uint64_t v15 = v29;
    char v16 = v30;
    *(_OWORD *)uint64_t v11 = v28;
    *((void *)v11 + 2) = v15;
    v11[24] = v16;
    LOBYTE(v28) = 1;
    sub_251F36850();
    *((void *)v11 + 4) = v17;
    uint64_t v18 = sub_251F34DA0();
    uint64_t v25 = &v22;
    uint64_t v23 = *(void *)(v18 - 8);
    MEMORY[0x270FA5388](v18);
    uint64_t v20 = (char *)&v22 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    LOBYTE(v28) = 2;
    sub_251A1A8EC(&qword_269B9CC80);
    uint64_t v24 = v20;
    sub_251F36880();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v26);
    (*(void (**)(char *, char *, uint64_t))(v23 + 40))(v27, v24, v18);
    sub_251D25DEC((uint64_t)v11, a2);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return sub_251D25E50((uint64_t)v11);
  }
}

uint64_t sub_251F31A10(uint64_t a1)
{
  return sub_251F35610();
}

uint64_t sub_251F31AB4()
{
  sub_251F36CA0();
  LightbulbColor.hash(into:)((uint64_t)v1);
  sub_251F36CF0();
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  return sub_251F36D00();
}

uint64_t sub_251F31B6C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ColorPickerFavorite.init(from:)(a1, a2);
}

uint64_t sub_251F31B84(void *a1)
{
  return ColorPickerFavorite.encode(to:)(a1);
}

uint64_t _s13HomeDataModel19ColorPickerFavoriteV2eeoiySbAC_ACtFZ_0(long long *a1, long long *a2)
{
  uint64_t v4 = *((void *)a1 + 2);
  char v5 = *((unsigned char *)a1 + 24);
  long long v12 = *a1;
  uint64_t v13 = v4;
  char v14 = v5;
  uint64_t v6 = *((void *)a2 + 2);
  char v7 = *((unsigned char *)a2 + 24);
  long long v9 = *a2;
  uint64_t v10 = v6;
  char v11 = v7;
  if ((static LightbulbColor.== infix(_:_:)((uint64_t)&v12, (uint64_t)&v9) & 1) == 0
    || *((double *)a1 + 4) != *((double *)a2 + 4))
  {
    return 0;
  }
  type metadata accessor for ColorPickerFavorite();
  return sub_251F34D70() & 1;
}

unint64_t sub_251F31C40()
{
  unint64_t result = qword_269BA63E8;
  if (!qword_269BA63E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA63E8);
  }
  return result;
}

unint64_t sub_251F31C98()
{
  unint64_t result = qword_269BA63F8;
  if (!qword_269BA63F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA63F8);
  }
  return result;
}

unint64_t sub_251F31CF0()
{
  unint64_t result = qword_269BA6400;
  if (!qword_269BA6400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6400);
  }
  return result;
}

unint64_t sub_251F31D48()
{
  unint64_t result = qword_269BA6408;
  if (!qword_269BA6408)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9E3D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6408);
  }
  return result;
}

uint64_t sub_251F31DB4()
{
  return sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
}

unint64_t sub_251F31DE0()
{
  unint64_t result = qword_269BA6410;
  if (!qword_269BA6410)
  {
    type metadata accessor for ColorPickerFavorite();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6410);
  }
  return result;
}

uint64_t destroy for LightbulbColor(uint64_t a1)
{
  return sub_251F309C8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for LightbulbColor(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_251F309B4(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for LightbulbColor(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_251F309B4(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_251F309C8(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for LightbulbColor(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_251F309C8(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for LightbulbColor()
{
  return &type metadata for LightbulbColor;
}

ValueMetadata *type metadata accessor for RGBColor()
{
  return &type metadata for RGBColor;
}

unint64_t initializeBufferWithCopyOfBuffer for ColorPickerFavorite(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *(void *)(a2 + 8);
    uint64_t v9 = *(void *)(a2 + 16);
    char v10 = *(unsigned char *)(a2 + 24);
    sub_251F309B4(*(void *)a2, v8, v9, v10);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v9;
    *(unsigned char *)(a1 + 24) = v10;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = a1 + v11;
    uint64_t v13 = a2 + v11;
    uint64_t v14 = sub_251F34DA0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t destroy for ColorPickerFavorite(uint64_t a1, uint64_t a2)
{
  sub_251F309C8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_251F34DA0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for ColorPickerFavorite(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 24);
  sub_251F309B4(*(void *)a2, v7, v8, v9);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  return a1;
}

uint64_t assignWithCopy for ColorPickerFavorite(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 24);
  sub_251F309B4(*(void *)a2, v7, v8, v9);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  char v13 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v9;
  sub_251F309C8(v10, v11, v12, v13);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

uint64_t initializeWithTake for ColorPickerFavorite(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for ColorPickerFavorite(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v6;
  char v11 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v7;
  sub_251F309C8(v8, v9, v10, v11);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for ColorPickerFavorite(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251F323F8);
}

uint64_t sub_251F323F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 252)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 24);
    if (v4 > 3) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_251F34DA0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ColorPickerFavorite(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251F324B4);
}

uint64_t sub_251F324B4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 252)
  {
    *(unsigned char *)(result + 24) = -(char)a2;
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_251F32558()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ColorPickerFavorite.CodingKeys()
{
  return &type metadata for ColorPickerFavorite.CodingKeys;
}

unsigned char *_s13HomeDataModel19ColorPickerFavoriteV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251F326DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RGBColor.CodingKeys()
{
  return &type metadata for RGBColor.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for LightbulbColor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251F327E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LightbulbColor.CodingKeys()
{
  return &type metadata for LightbulbColor.CodingKeys;
}

ValueMetadata *type metadata accessor for LightbulbColor.RGBCodingKeys()
{
  return &type metadata for LightbulbColor.RGBCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for LightbulbColor.HSVCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251F328F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LightbulbColor.HSVCodingKeys()
{
  return &type metadata for LightbulbColor.HSVCodingKeys;
}

ValueMetadata *type metadata accessor for LightbulbColor.TemperatureCodingKeys()
{
  return &type metadata for LightbulbColor.TemperatureCodingKeys;
}

unsigned char *_s13HomeDataModel14LightbulbColorO13RGBCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x251F329DCLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LightbulbColor.AdaptiveLightCodingKeys()
{
  return &type metadata for LightbulbColor.AdaptiveLightCodingKeys;
}

unint64_t sub_251F32A18()
{
  unint64_t result = qword_269BA6418;
  if (!qword_269BA6418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6418);
  }
  return result;
}

unint64_t sub_251F32A70()
{
  unint64_t result = qword_269BA6420;
  if (!qword_269BA6420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6420);
  }
  return result;
}

unint64_t sub_251F32AC8()
{
  unint64_t result = qword_269BA6428;
  if (!qword_269BA6428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6428);
  }
  return result;
}

unint64_t sub_251F32B20()
{
  unint64_t result = qword_269BA6430;
  if (!qword_269BA6430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6430);
  }
  return result;
}

unint64_t sub_251F32B78()
{
  unint64_t result = qword_269BA6438;
  if (!qword_269BA6438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6438);
  }
  return result;
}

unint64_t sub_251F32BD0()
{
  unint64_t result = qword_269BA6440;
  if (!qword_269BA6440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6440);
  }
  return result;
}

unint64_t sub_251F32C28()
{
  unint64_t result = qword_269BA6448;
  if (!qword_269BA6448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6448);
  }
  return result;
}

unint64_t sub_251F32C80()
{
  unint64_t result = qword_269BA6450;
  if (!qword_269BA6450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6450);
  }
  return result;
}

unint64_t sub_251F32CD8()
{
  unint64_t result = qword_269BA6458;
  if (!qword_269BA6458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6458);
  }
  return result;
}

unint64_t sub_251F32D30()
{
  unint64_t result = qword_269BA6460;
  if (!qword_269BA6460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6460);
  }
  return result;
}

unint64_t sub_251F32D88()
{
  unint64_t result = qword_269BA6468;
  if (!qword_269BA6468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6468);
  }
  return result;
}

unint64_t sub_251F32DE0()
{
  unint64_t result = qword_269BA6470;
  if (!qword_269BA6470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6470);
  }
  return result;
}

unint64_t sub_251F32E38()
{
  unint64_t result = qword_269BA6478;
  if (!qword_269BA6478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6478);
  }
  return result;
}

unint64_t sub_251F32E90()
{
  unint64_t result = qword_269BA6480;
  if (!qword_269BA6480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6480);
  }
  return result;
}

unint64_t sub_251F32EE8()
{
  unint64_t result = qword_269BA6488;
  if (!qword_269BA6488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6488);
  }
  return result;
}

unint64_t sub_251F32F40()
{
  unint64_t result = qword_269BA6490;
  if (!qword_269BA6490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6490);
  }
  return result;
}

unint64_t sub_251F32F98()
{
  unint64_t result = qword_269BA6498;
  if (!qword_269BA6498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA6498);
  }
  return result;
}

unint64_t sub_251F32FF0()
{
  unint64_t result = qword_269BA64A0;
  if (!qword_269BA64A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA64A0);
  }
  return result;
}

unint64_t sub_251F33048()
{
  unint64_t result = qword_269BA64A8;
  if (!qword_269BA64A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA64A8);
  }
  return result;
}

unint64_t sub_251F330A0()
{
  unint64_t result = qword_269BA64B0;
  if (!qword_269BA64B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA64B0);
  }
  return result;
}

unint64_t sub_251F330F8()
{
  unint64_t result = qword_269BA64B8;
  if (!qword_269BA64B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA64B8);
  }
  return result;
}

uint64_t sub_251F3314C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 4343634 && a2 == 0xE300000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 5657416 && a2 == 0xE300000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74617265706D6554 && a2 == 0xEB00000000657275 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6576697470616461 && a2 == 0xED0000746867694CLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_251F33324(uint64_t a1, uint64_t a2)
{
  if (a1 == 114 && a2 == 0xE100000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 103 && a2 == 0xE100000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 98 && a2 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_251F3342C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726F6C6F63 && a2 == 0xE500000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656E746867697262 && a2 == 0xEA00000000007373 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t SliderAlignment.alignment.getter()
{
  if (*v0 == 1) {
    return sub_251F35450();
  }
  else {
    return sub_251F35460();
  }
}

BOOL static SliderAlignment.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SliderAlignment.hash(into:)()
{
  return sub_251F36CB0();
}

uint64_t StaticAlignment.alignment.getter()
{
  switch(*v0)
  {
    case 1:
      uint64_t result = sub_251F35420();
      break;
    case 2:
      uint64_t result = sub_251F35450();
      break;
    case 3:
      uint64_t result = sub_251F35480();
      break;
    case 4:
      uint64_t result = sub_251F35470();
      break;
    case 5:
      uint64_t result = sub_251F35490();
      break;
    case 6:
      uint64_t result = sub_251F35430();
      break;
    case 7:
      uint64_t result = sub_251F35460();
      break;
    case 8:
      uint64_t result = sub_251F35440();
      break;
    default:
      uint64_t result = sub_251F35410();
      break;
  }
  return result;
}

BOOL static StateValueType.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a1;
  double v3 = *(double *)a2;
  if (*(unsigned char *)(a1 + 16))
  {
    if ((*(unsigned char *)(a2 + 16) & 1) != 0 && v2 == v3) {
      return *(double *)(a1 + 8) == *(double *)(a2 + 8);
    }
  }
  else if ((*(unsigned char *)(a2 + 16) & 1) == 0 && v2 == v3)
  {
    return 1;
  }
  return 0;
}

uint64_t StateValueType.hash(into:)()
{
  if (*(unsigned char *)(v0 + 16))
  {
    sub_251F36CB0();
    sub_251F36CF0();
  }
  else
  {
    sub_251F36CB0();
  }
  return sub_251F36CF0();
}

uint64_t StateValueType.hashValue.getter()
{
  char v1 = *(unsigned char *)(v0 + 16);
  sub_251F36CA0();
  sub_251F36CB0();
  if (v1) {
    sub_251F36CF0();
  }
  sub_251F36CF0();
  return sub_251F36D00();
}

BOOL sub_251F33804(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a1;
  double v3 = *(double *)a2;
  if (*(unsigned char *)(a1 + 16))
  {
    if ((*(unsigned char *)(a2 + 16) & 1) != 0 && v2 == v3) {
      return *(double *)(a1 + 8) == *(double *)(a2 + 8);
    }
  }
  else if ((*(unsigned char *)(a2 + 16) & 1) == 0 && v2 == v3)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_251F3386C()
{
  char v1 = *(unsigned char *)(v0 + 16);
  sub_251F36CA0();
  sub_251F36CB0();
  if (v1) {
    sub_251F36CF0();
  }
  sub_251F36CF0();
  return sub_251F36D00();
}

unint64_t sub_251F338FC()
{
  unint64_t result = qword_269BA64C0;
  if (!qword_269BA64C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA64C0);
  }
  return result;
}

unint64_t sub_251F33954()
{
  unint64_t result = qword_269BA64C8;
  if (!qword_269BA64C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA64C8);
  }
  return result;
}

unint64_t sub_251F339AC()
{
  unint64_t result = qword_269BA64D0;
  if (!qword_269BA64D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA64D0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SliderAlignment(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251F33ACCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SliderAlignment()
{
  return &type metadata for SliderAlignment;
}

unsigned char *storeEnumTagSinglePayload for StaticAlignment(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251F33BD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticAlignment()
{
  return &type metadata for StaticAlignment;
}

uint64_t getEnumTagSinglePayload for StateValueType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StateValueType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_251F33C94(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for StateValueType()
{
  return &type metadata for StateValueType;
}

id matterLogCategory()
{
  if (qword_269BF3078 != -1) {
    dispatch_once(&qword_269BF3078, &__block_literal_global);
  }
  uint64_t v0 = (void *)_MergedGlobals;
  return v0;
}

uint64_t __matterLogCategory_block_invoke()
{
  _MergedGlobals = (uint64_t)os_log_create("com.apple.Home", "Matter");
  return MEMORY[0x270F9A758]();
}

uint64_t sub_251F34480()
{
  return MEMORY[0x270EE0E00]();
}

uint64_t sub_251F34490()
{
  return MEMORY[0x270EE0E10]();
}

uint64_t sub_251F344A0()
{
  return MEMORY[0x270EE15B0]();
}

uint64_t sub_251F344B0()
{
  return MEMORY[0x270EE15B8]();
}

uint64_t sub_251F344C0()
{
  return MEMORY[0x270EE15C8]();
}

uint64_t sub_251F344D0()
{
  return MEMORY[0x270EE1748]();
}

uint64_t sub_251F344E0()
{
  return MEMORY[0x270EE1750]();
}

uint64_t sub_251F344F0()
{
  return MEMORY[0x270EE1758]();
}

uint64_t sub_251F34500()
{
  return MEMORY[0x270EEDD80]();
}

uint64_t sub_251F34510()
{
  return MEMORY[0x270EEDD98]();
}

uint64_t sub_251F34520()
{
  return MEMORY[0x270EEDDD8]();
}

uint64_t sub_251F34530()
{
  return MEMORY[0x270EEDE08]();
}

uint64_t sub_251F34540()
{
  return MEMORY[0x270EEDE20]();
}

uint64_t sub_251F34550()
{
  return MEMORY[0x270EEDE30]();
}

uint64_t sub_251F34560()
{
  return MEMORY[0x270EEDE40]();
}

uint64_t sub_251F34570()
{
  return MEMORY[0x270EEDE50]();
}

uint64_t sub_251F34580()
{
  return MEMORY[0x270EEDE68]();
}

uint64_t sub_251F34590()
{
  return MEMORY[0x270EEDEF0]();
}

uint64_t sub_251F345A0()
{
  return MEMORY[0x270EEDF28]();
}

uint64_t sub_251F345B0()
{
  return MEMORY[0x270EEDF40]();
}

uint64_t sub_251F345C0()
{
  return MEMORY[0x270EEDFB0]();
}

uint64_t sub_251F345D0()
{
  return MEMORY[0x270EEDFB8]();
}

uint64_t sub_251F345E0()
{
  return MEMORY[0x270EEDFD8]();
}

uint64_t sub_251F345F0()
{
  return MEMORY[0x270EEE000]();
}

uint64_t sub_251F34600()
{
  return MEMORY[0x270EEE010]();
}

uint64_t sub_251F34610()
{
  return MEMORY[0x270EEE038]();
}

uint64_t sub_251F34620()
{
  return MEMORY[0x270EEE350]();
}

uint64_t sub_251F34630()
{
  return MEMORY[0x270EEE370]();
}

uint64_t sub_251F34640()
{
  return MEMORY[0x270EEE3B0]();
}

uint64_t sub_251F34650()
{
  return MEMORY[0x270EEE3C8]();
}

uint64_t sub_251F34660()
{
  return MEMORY[0x270EEE3D8]();
}

uint64_t sub_251F34670()
{
  return MEMORY[0x270EEE3E8]();
}

uint64_t sub_251F34680()
{
  return MEMORY[0x270EEE400]();
}

uint64_t sub_251F34690()
{
  return MEMORY[0x270EEE418]();
}

uint64_t sub_251F346A0()
{
  return MEMORY[0x270EEE4B8]();
}

uint64_t sub_251F346B0()
{
  return MEMORY[0x270EEE510]();
}

uint64_t sub_251F346C0()
{
  return MEMORY[0x270EEE528]();
}

uint64_t sub_251F346D0()
{
  return MEMORY[0x270EEE538]();
}

uint64_t sub_251F346E0()
{
  return MEMORY[0x270EEE540]();
}

uint64_t sub_251F346F0()
{
  return MEMORY[0x270EEE550]();
}

uint64_t sub_251F34700()
{
  return MEMORY[0x270EEE560]();
}

uint64_t sub_251F34710()
{
  return MEMORY[0x270EEE5A8]();
}

uint64_t sub_251F34720()
{
  return MEMORY[0x270EEE5B0]();
}

uint64_t sub_251F34730()
{
  return MEMORY[0x270EEE600]();
}

uint64_t sub_251F34740()
{
  return MEMORY[0x270EEE608]();
}

uint64_t sub_251F34750()
{
  return MEMORY[0x270EEE620]();
}

uint64_t sub_251F34760()
{
  return MEMORY[0x270EEE630]();
}

uint64_t sub_251F34770()
{
  return MEMORY[0x270EEE640]();
}

uint64_t sub_251F34780()
{
  return MEMORY[0x270EEE650]();
}

uint64_t sub_251F34790()
{
  return MEMORY[0x270EEE660]();
}

uint64_t sub_251F347A0()
{
  return MEMORY[0x270EEE668]();
}

uint64_t sub_251F347B0()
{
  return MEMORY[0x270EEE690]();
}

uint64_t sub_251F347C0()
{
  return MEMORY[0x270EEE740]();
}

uint64_t sub_251F347D0()
{
  return MEMORY[0x270EEE758]();
}

uint64_t sub_251F347E0()
{
  return MEMORY[0x270EEE770]();
}

uint64_t sub_251F347F0()
{
  return MEMORY[0x270EEE7A8]();
}

uint64_t sub_251F34800()
{
  return MEMORY[0x270EEE7C0]();
}

uint64_t sub_251F34810()
{
  return MEMORY[0x270EEE7D0]();
}

uint64_t sub_251F34820()
{
  return MEMORY[0x270EEE7F8]();
}

uint64_t sub_251F34830()
{
  return MEMORY[0x270EEE820]();
}

uint64_t sub_251F34840()
{
  return MEMORY[0x270EEE830]();
}

uint64_t sub_251F34850()
{
  return MEMORY[0x270EEE840]();
}

uint64_t sub_251F34860()
{
  return MEMORY[0x270EEE888]();
}

uint64_t sub_251F34870()
{
  return MEMORY[0x270EEE8D0]();
}

uint64_t sub_251F34880()
{
  return MEMORY[0x270EEE8F0]();
}

uint64_t sub_251F34890()
{
  return MEMORY[0x270EEEA58]();
}

uint64_t sub_251F348A0()
{
  return MEMORY[0x270EEF230]();
}

uint64_t sub_251F348B0()
{
  return MEMORY[0x270EEF258]();
}

uint64_t sub_251F348C0()
{
  return MEMORY[0x270EEF260]();
}

uint64_t sub_251F348D0()
{
  return MEMORY[0x270EEF270]();
}

uint64_t sub_251F348E0()
{
  return MEMORY[0x270EEF280]();
}

uint64_t sub_251F348F0()
{
  return MEMORY[0x270EEF2B0]();
}

uint64_t sub_251F34900()
{
  return MEMORY[0x270EEF2C0]();
}

uint64_t sub_251F34910()
{
  return MEMORY[0x270EEF520]();
}

uint64_t sub_251F34920()
{
  return MEMORY[0x270EEF540]();
}

uint64_t sub_251F34930()
{
  return MEMORY[0x270EEF568]();
}

uint64_t sub_251F34940()
{
  return MEMORY[0x270EEF578]();
}

uint64_t sub_251F34950()
{
  return MEMORY[0x270EEF5A8]();
}

uint64_t sub_251F34960()
{
  return MEMORY[0x270EEF5D0]();
}

uint64_t sub_251F34970()
{
  return MEMORY[0x270EEF5D8]();
}

uint64_t sub_251F34980()
{
  return MEMORY[0x270EEF748]();
}

uint64_t sub_251F34990()
{
  return MEMORY[0x270EEF758]();
}

uint64_t sub_251F349A0()
{
  return MEMORY[0x270EEF780]();
}

uint64_t sub_251F349B0()
{
  return MEMORY[0x270EEF798]();
}

uint64_t sub_251F349C0()
{
  return MEMORY[0x270EEF7A8]();
}

uint64_t sub_251F349D0()
{
  return MEMORY[0x270EEF7B0]();
}

uint64_t sub_251F349E0()
{
  return MEMORY[0x270EEF7C0]();
}

uint64_t sub_251F349F0()
{
  return MEMORY[0x270EEF7D8]();
}

uint64_t sub_251F34A00()
{
  return MEMORY[0x270EEF7F0]();
}

uint64_t sub_251F34A10()
{
  return MEMORY[0x270EEF7F8]();
}

uint64_t sub_251F34A20()
{
  return MEMORY[0x270EEF828]();
}

uint64_t sub_251F34A30()
{
  return MEMORY[0x270EEF838]();
}

uint64_t sub_251F34A40()
{
  return MEMORY[0x270EEF880]();
}

uint64_t sub_251F34A50()
{
  return MEMORY[0x270EEF8B8]();
}

uint64_t sub_251F34A60()
{
  return MEMORY[0x270EEF940]();
}

uint64_t sub_251F34A70()
{
  return MEMORY[0x270EEF958]();
}

uint64_t sub_251F34A80()
{
  return MEMORY[0x270EEF9C0]();
}

uint64_t sub_251F34A90()
{
  return MEMORY[0x270EEFA10]();
}

uint64_t sub_251F34AA0()
{
  return MEMORY[0x270EEFA20]();
}

uint64_t sub_251F34AB0()
{
  return MEMORY[0x270EEFA60]();
}

uint64_t sub_251F34AC0()
{
  return MEMORY[0x270EEFB18]();
}

uint64_t sub_251F34AD0()
{
  return MEMORY[0x270EEFB30]();
}

uint64_t sub_251F34AE0()
{
  return MEMORY[0x270EEFC50]();
}

uint64_t sub_251F34AF0()
{
  return MEMORY[0x270EEFCA8]();
}

uint64_t sub_251F34B00()
{
  return MEMORY[0x270EEFCD8]();
}

uint64_t sub_251F34B10()
{
  return MEMORY[0x270EEFD50]();
}

uint64_t sub_251F34B20()
{
  return MEMORY[0x270EEFD80]();
}

uint64_t sub_251F34B30()
{
  return MEMORY[0x270EEFD88]();
}

uint64_t sub_251F34B40()
{
  return MEMORY[0x270EEFE28]();
}

uint64_t sub_251F34B50()
{
  return MEMORY[0x270EEFE70]();
}

uint64_t sub_251F34B60()
{
  return MEMORY[0x270EEFF08]();
}

uint64_t sub_251F34B70()
{
  return MEMORY[0x270EEFF70]();
}

uint64_t sub_251F34B80()
{
  return MEMORY[0x270EEFFA8]();
}

uint64_t sub_251F34B90()
{
  return MEMORY[0x270EEFFD0]();
}

uint64_t sub_251F34BA0()
{
  return MEMORY[0x270EF0028]();
}

uint64_t sub_251F34BB0()
{
  return MEMORY[0x270EF0058]();
}

uint64_t sub_251F34BC0()
{
  return MEMORY[0x270EF0068]();
}

uint64_t sub_251F34BD0()
{
  return MEMORY[0x270EF0088]();
}

uint64_t sub_251F34BE0()
{
  return MEMORY[0x270EF00B8]();
}

uint64_t sub_251F34BF0()
{
  return MEMORY[0x270EF0128]();
}

uint64_t sub_251F34C00()
{
  return MEMORY[0x270EF0138]();
}

uint64_t sub_251F34C10()
{
  return MEMORY[0x270EF0160]();
}

uint64_t sub_251F34C20()
{
  return MEMORY[0x270EF0170]();
}

uint64_t sub_251F34C30()
{
  return MEMORY[0x270EF0188]();
}

uint64_t sub_251F34C40()
{
  return MEMORY[0x270EF02C0]();
}

uint64_t sub_251F34C50()
{
  return MEMORY[0x270EF0778]();
}

uint64_t sub_251F34C60()
{
  return MEMORY[0x270EF08A0]();
}

uint64_t sub_251F34C70()
{
  return MEMORY[0x270EF0990]();
}

uint64_t sub_251F34C80()
{
  return MEMORY[0x270EF09A0]();
}

uint64_t sub_251F34C90()
{
  return MEMORY[0x270EF09B0]();
}

uint64_t sub_251F34CA0()
{
  return MEMORY[0x270EF09E8]();
}

uint64_t sub_251F34CB0()
{
  return MEMORY[0x270EF0AE8]();
}

uint64_t sub_251F34CC0()
{
  return MEMORY[0x270EF0B00]();
}

uint64_t sub_251F34CD0()
{
  return MEMORY[0x270EF0B90]();
}

uint64_t sub_251F34CE0()
{
  return MEMORY[0x270EF0BB0]();
}

uint64_t sub_251F34CF0()
{
  return MEMORY[0x270EF0BC0]();
}

uint64_t sub_251F34D00()
{
  return MEMORY[0x270EF0BF0]();
}

uint64_t sub_251F34D10()
{
  return MEMORY[0x270EF0C28]();
}

uint64_t sub_251F34D20()
{
  return MEMORY[0x270EF0C38]();
}

uint64_t sub_251F34D30()
{
  return MEMORY[0x270EF0C50]();
}

uint64_t sub_251F34D40()
{
  return MEMORY[0x270EF0C60]();
}

uint64_t sub_251F34D50()
{
  return MEMORY[0x270EF0C90]();
}

uint64_t sub_251F34D60()
{
  return MEMORY[0x270EF0CA0]();
}

uint64_t sub_251F34D70()
{
  return MEMORY[0x270EF0CA8]();
}

uint64_t sub_251F34D80()
{
  return MEMORY[0x270EF0CC0]();
}

uint64_t sub_251F34D90()
{
  return MEMORY[0x270EF0D00]();
}

uint64_t sub_251F34DA0()
{
  return MEMORY[0x270EF0D10]();
}

uint64_t sub_251F34DB0()
{
  return MEMORY[0x270EF0EE8]();
}

uint64_t sub_251F34DC0()
{
  return MEMORY[0x270EF0EF0]();
}

uint64_t sub_251F34DD0()
{
  return MEMORY[0x270EF0FA8]();
}

uint64_t sub_251F34DE0()
{
  return MEMORY[0x270EF10B0]();
}

uint64_t sub_251F34DF0()
{
  return MEMORY[0x270EF1228]();
}

uint64_t sub_251F34E00()
{
  return MEMORY[0x270EF1250]();
}

uint64_t sub_251F34E10()
{
  return MEMORY[0x270EF12D8]();
}

uint64_t sub_251F34E20()
{
  return MEMORY[0x270EF1370]();
}

uint64_t sub_251F34E30()
{
  return MEMORY[0x270EF13E0]();
}

uint64_t sub_251F34E40()
{
  return MEMORY[0x270EF1420]();
}

uint64_t sub_251F34E50()
{
  return MEMORY[0x270EF1448]();
}

uint64_t sub_251F34E60()
{
  return MEMORY[0x270EF14E0]();
}

uint64_t sub_251F34E70()
{
  return MEMORY[0x270EF1540]();
}

uint64_t sub_251F34E80()
{
  return MEMORY[0x270EF1548]();
}

uint64_t sub_251F34E90()
{
  return MEMORY[0x270EF15C0]();
}

uint64_t sub_251F34EA0()
{
  return MEMORY[0x270EF15D8]();
}

uint64_t sub_251F34EB0()
{
  return MEMORY[0x270EF15F0]();
}

uint64_t sub_251F34EC0()
{
  return MEMORY[0x270EF15F8]();
}

uint64_t sub_251F34ED0()
{
  return MEMORY[0x270EF1610]();
}

uint64_t sub_251F34EE0()
{
  return MEMORY[0x270EF1768]();
}

uint64_t sub_251F34EF0()
{
  return MEMORY[0x270EF1770]();
}

uint64_t sub_251F34F00()
{
  return MEMORY[0x270FA1200]();
}

uint64_t sub_251F34F10()
{
  return MEMORY[0x270FA1210]();
}

uint64_t sub_251F34F20()
{
  return MEMORY[0x270FA1218]();
}

uint64_t sub_251F34F30()
{
  return MEMORY[0x270FA1230]();
}

uint64_t sub_251F34F40()
{
  return MEMORY[0x270FA1240]();
}

uint64_t sub_251F34F50()
{
  return MEMORY[0x270FA1248]();
}

uint64_t sub_251F34F60()
{
  return MEMORY[0x270F28690]();
}

uint64_t sub_251F34F70()
{
  return MEMORY[0x270EE9F38]();
}

uint64_t sub_251F34F80()
{
  return MEMORY[0x270FA16A0]();
}

uint64_t sub_251F34F90()
{
  return MEMORY[0x270FA1830]();
}

uint64_t sub_251F34FA0()
{
  return MEMORY[0x270FA1938]();
}

uint64_t sub_251F34FB0()
{
  return MEMORY[0x270FA2C68]();
}

uint64_t sub_251F34FC0()
{
  return MEMORY[0x270FA2CE8]();
}

uint64_t sub_251F34FD0()
{
  return MEMORY[0x270FA2CF8]();
}

uint64_t sub_251F34FE0()
{
  return MEMORY[0x270FA2D00]();
}

uint64_t sub_251F34FF0()
{
  return MEMORY[0x270FA2D30]();
}

uint64_t sub_251F35000()
{
  return MEMORY[0x270FA2D58]();
}

uint64_t sub_251F35010()
{
  return MEMORY[0x270FA2D78]();
}

uint64_t sub_251F35020()
{
  return MEMORY[0x270FA2D88]();
}

uint64_t sub_251F35030()
{
  return MEMORY[0x270FA2D90]();
}

uint64_t sub_251F35040()
{
  return MEMORY[0x270FA2DB0]();
}

uint64_t sub_251F35050()
{
  return MEMORY[0x270FA2DD0]();
}

uint64_t sub_251F35060()
{
  return MEMORY[0x270FA2DE0]();
}

uint64_t sub_251F35070()
{
  return MEMORY[0x270FA2DF0]();
}

uint64_t sub_251F35080()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_251F35090()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_251F350A0()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_251F350B0()
{
  return MEMORY[0x270EE3C20]();
}

uint64_t sub_251F350C0()
{
  return MEMORY[0x270EE3C50]();
}

uint64_t sub_251F350D0()
{
  return MEMORY[0x270EE3C70]();
}

uint64_t sub_251F350E0()
{
  return MEMORY[0x270EE3DA8]();
}

uint64_t sub_251F350F0()
{
  return MEMORY[0x270EE3DB0]();
}

uint64_t sub_251F35100()
{
  return MEMORY[0x270EE3DB8]();
}

uint64_t sub_251F35110()
{
  return MEMORY[0x270EE3DD0]();
}

uint64_t sub_251F35120()
{
  return MEMORY[0x270EE3DD8]();
}

uint64_t sub_251F35130()
{
  return MEMORY[0x270EE3DE0]();
}

uint64_t sub_251F35140()
{
  return MEMORY[0x270EE3DF0]();
}

uint64_t sub_251F35150()
{
  return MEMORY[0x270EF3AA8]();
}

uint64_t sub_251F35160()
{
  return MEMORY[0x270EFEE08]();
}

uint64_t sub_251F35170()
{
  return MEMORY[0x270EFEE30]();
}

uint64_t sub_251F35180()
{
  return MEMORY[0x270EFEE38]();
}

uint64_t sub_251F35190()
{
  return MEMORY[0x270EFEE58]();
}

uint64_t sub_251F351A0()
{
  return MEMORY[0x270EFEF18]();
}

uint64_t sub_251F351B0()
{
  return MEMORY[0x270EFEF28]();
}

uint64_t sub_251F351C0()
{
  return MEMORY[0x270EFF5D8]();
}

uint64_t sub_251F351D0()
{
  return MEMORY[0x270F001B0]();
}

uint64_t sub_251F351E0()
{
  return MEMORY[0x270F008C8]();
}

uint64_t sub_251F351F0()
{
  return MEMORY[0x270F008E0]();
}

uint64_t sub_251F35200()
{
  return MEMORY[0x270F00ED0]();
}

uint64_t sub_251F35210()
{
  return MEMORY[0x270F00EE8]();
}

uint64_t sub_251F35220()
{
  return MEMORY[0x270F015D8]();
}

uint64_t sub_251F35230()
{
  return MEMORY[0x270F015E8]();
}

uint64_t sub_251F35240()
{
  return MEMORY[0x270F015F0]();
}

uint64_t sub_251F35250()
{
  return MEMORY[0x270F01600]();
}

uint64_t sub_251F35260()
{
  return MEMORY[0x270F02620]();
}

uint64_t sub_251F35270()
{
  return MEMORY[0x270F02628]();
}

uint64_t sub_251F35280()
{
  return MEMORY[0x270F02958]();
}

uint64_t sub_251F35290()
{
  return MEMORY[0x270F02A28]();
}

uint64_t sub_251F352A0()
{
  return MEMORY[0x270F03320]();
}

uint64_t sub_251F352B0()
{
  return MEMORY[0x270F03328]();
}

uint64_t sub_251F352C0()
{
  return MEMORY[0x270F037A8]();
}

uint64_t sub_251F352D0()
{
  return MEMORY[0x270F043A0]();
}

uint64_t sub_251F352E0()
{
  return MEMORY[0x270F043B8]();
}

uint64_t sub_251F352F0()
{
  return MEMORY[0x270F043E0]();
}

uint64_t sub_251F35300()
{
  return MEMORY[0x270F043F0]();
}

uint64_t sub_251F35310()
{
  return MEMORY[0x270F04400]();
}

uint64_t sub_251F35320()
{
  return MEMORY[0x270F04418]();
}

uint64_t sub_251F35330()
{
  return MEMORY[0x270F04420]();
}

uint64_t sub_251F35340()
{
  return MEMORY[0x270F04430]();
}

uint64_t sub_251F35350()
{
  return MEMORY[0x270F04448]();
}

uint64_t sub_251F35360()
{
  return MEMORY[0x270F04458]();
}

uint64_t sub_251F35370()
{
  return MEMORY[0x270F044A0]();
}

uint64_t sub_251F35380()
{
  return MEMORY[0x270F044B0]();
}

uint64_t sub_251F35390()
{
  return MEMORY[0x270F044B8]();
}

uint64_t sub_251F353A0()
{
  return MEMORY[0x270F044D0]();
}

uint64_t sub_251F353B0()
{
  return MEMORY[0x270F04500]();
}

uint64_t sub_251F353C0()
{
  return MEMORY[0x270F04528]();
}

uint64_t sub_251F353D0()
{
  return MEMORY[0x270F04530]();
}

uint64_t sub_251F353E0()
{
  return MEMORY[0x270F04540]();
}

uint64_t sub_251F353F0()
{
  return MEMORY[0x270F04568]();
}

uint64_t sub_251F35400()
{
  return MEMORY[0x270F04590]();
}

uint64_t sub_251F35410()
{
  return MEMORY[0x270F05018]();
}

uint64_t sub_251F35420()
{
  return MEMORY[0x270F05028]();
}

uint64_t sub_251F35430()
{
  return MEMORY[0x270F05038]();
}

uint64_t sub_251F35440()
{
  return MEMORY[0x270F05040]();
}

uint64_t sub_251F35450()
{
  return MEMORY[0x270F05060]();
}

uint64_t sub_251F35460()
{
  return MEMORY[0x270F05070]();
}

uint64_t sub_251F35470()
{
  return MEMORY[0x270F05080]();
}

uint64_t sub_251F35480()
{
  return MEMORY[0x270F05090]();
}

uint64_t sub_251F35490()
{
  return MEMORY[0x270F050A0]();
}

uint64_t sub_251F354A0()
{
  return MEMORY[0x270FA09A0]();
}

uint64_t sub_251F354B0()
{
  return MEMORY[0x270FA09C8]();
}

uint64_t sub_251F354C0()
{
  return MEMORY[0x270FA09F0]();
}

uint64_t sub_251F354D0()
{
  return MEMORY[0x270FA0A50]();
}

uint64_t sub_251F354E0()
{
  return MEMORY[0x270FA0AB8]();
}

uint64_t sub_251F354F0()
{
  return MEMORY[0x270FA0AF8]();
}

uint64_t sub_251F35500()
{
  return MEMORY[0x270FA0BC0]();
}

uint64_t sub_251F35510()
{
  return MEMORY[0x270F9CFC0]();
}

uint64_t sub_251F35520()
{
  return MEMORY[0x270FA1DF0]();
}

uint64_t sub_251F35530()
{
  return MEMORY[0x270EF1800]();
}

uint64_t sub_251F35540()
{
  return MEMORY[0x270EF1810]();
}

uint64_t sub_251F35550()
{
  return MEMORY[0x270EF1848]();
}

uint64_t sub_251F35560()
{
  return MEMORY[0x270F9D060]();
}

uint64_t sub_251F35570()
{
  return MEMORY[0x270F9D068]();
}

uint64_t sub_251F35580()
{
  return MEMORY[0x270F9D0A8]();
}

uint64_t sub_251F35590()
{
  return MEMORY[0x270F9D0E8]();
}

uint64_t sub_251F355A0()
{
  return MEMORY[0x270F9D148]();
}

uint64_t sub_251F355B0()
{
  return MEMORY[0x270F9D1C0]();
}

uint64_t sub_251F355D0()
{
  return MEMORY[0x270F9D1D0]();
}

uint64_t sub_251F355E0()
{
  return MEMORY[0x270F9D208]();
}

uint64_t sub_251F355F0()
{
  return MEMORY[0x270F9D210]();
}

uint64_t sub_251F35600()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_251F35610()
{
  return MEMORY[0x270F9D320]();
}

uint64_t sub_251F35620()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_251F35630()
{
  return MEMORY[0x270F9D488]();
}

uint64_t sub_251F35640()
{
  return MEMORY[0x270F9D4C0]();
}

uint64_t sub_251F35650()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_251F35660()
{
  return MEMORY[0x270EF18C8]();
}

uint64_t sub_251F35670()
{
  return MEMORY[0x270EF1900]();
}

uint64_t sub_251F35680()
{
  return MEMORY[0x270EF1920]();
}

uint64_t sub_251F35690()
{
  return MEMORY[0x270EF1930]();
}

uint64_t sub_251F356A0()
{
  return MEMORY[0x270EF1940]();
}

uint64_t sub_251F356B0()
{
  return MEMORY[0x270EF1960]();
}

uint64_t sub_251F356C0()
{
  return MEMORY[0x270EF19A8]();
}

uint64_t sub_251F356D0()
{
  return MEMORY[0x270EF19D0]();
}

uint64_t sub_251F356E0()
{
  return MEMORY[0x270EF19D8]();
}

uint64_t sub_251F356F0()
{
  return MEMORY[0x270EF19F0]();
}

uint64_t sub_251F35700()
{
  return MEMORY[0x270EF1A08]();
}

uint64_t sub_251F35710()
{
  return MEMORY[0x270EF1A40]();
}

uint64_t sub_251F35720()
{
  return MEMORY[0x270EF1A48]();
}

uint64_t sub_251F35730()
{
  return MEMORY[0x270EF1AA0]();
}

uint64_t sub_251F35740()
{
  return MEMORY[0x270EF1AD8]();
}

uint64_t sub_251F35750()
{
  return MEMORY[0x270EF1B00]();
}

uint64_t sub_251F35760()
{
  return MEMORY[0x270EF1B20]();
}

uint64_t sub_251F35770()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_251F35780()
{
  return MEMORY[0x270F9D5F8]();
}

uint64_t sub_251F35790()
{
  return MEMORY[0x270F9D600]();
}

uint64_t sub_251F357A0()
{
  return MEMORY[0x270F9D648]();
}

uint64_t sub_251F357B0()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_251F357C0()
{
  return MEMORY[0x270F9D740]();
}

uint64_t sub_251F357D0()
{
  return MEMORY[0x270F9D748]();
}

uint64_t sub_251F357E0()
{
  return MEMORY[0x270F9D758]();
}

uint64_t sub_251F357F0()
{
  return MEMORY[0x270F9D760]();
}

uint64_t sub_251F35800()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_251F35810()
{
  return MEMORY[0x270F9D7B0]();
}

uint64_t sub_251F35820()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_251F35830()
{
  return MEMORY[0x270F9D7E8]();
}

uint64_t sub_251F35840()
{
  return MEMORY[0x270F9D800]();
}

uint64_t sub_251F35850()
{
  return MEMORY[0x270F9D810]();
}

uint64_t sub_251F35860()
{
  return MEMORY[0x270F9D860]();
}

uint64_t sub_251F35870()
{
  return MEMORY[0x270F9D878]();
}

uint64_t sub_251F35880()
{
  return MEMORY[0x270F9D880]();
}

uint64_t sub_251F35890()
{
  return MEMORY[0x270F9D898]();
}

uint64_t sub_251F358A0()
{
  return MEMORY[0x270F9D8A8]();
}

uint64_t sub_251F358B0()
{
  return MEMORY[0x270F9D8B0]();
}

uint64_t sub_251F358C0()
{
  return MEMORY[0x270F9D8F0]();
}

uint64_t sub_251F358D0()
{
  return MEMORY[0x270EF1B40]();
}

uint64_t sub_251F358E0()
{
  return MEMORY[0x270F9D8F8]();
}

uint64_t sub_251F358F0()
{
  return MEMORY[0x270F9D908]();
}

uint64_t sub_251F35900()
{
  return MEMORY[0x270F9D930]();
}

uint64_t sub_251F35910()
{
  return MEMORY[0x270F9D938]();
}

uint64_t sub_251F35920()
{
  return MEMORY[0x270F9D940]();
}

uint64_t sub_251F35930()
{
  return MEMORY[0x270F9D988]();
}

uint64_t sub_251F35940()
{
  return MEMORY[0x270F9D990]();
}

uint64_t sub_251F35950()
{
  return MEMORY[0x270F9D9A0]();
}

uint64_t sub_251F35960()
{
  return MEMORY[0x270F9D9A8]();
}

uint64_t sub_251F35970()
{
  return MEMORY[0x270F9D9B0]();
}

uint64_t sub_251F35980()
{
  return MEMORY[0x270F9D9C0]();
}

uint64_t sub_251F35990()
{
  return MEMORY[0x270F9D9D0]();
}

uint64_t sub_251F359A0()
{
  return MEMORY[0x270F9D9D8]();
}

uint64_t sub_251F359B0()
{
  return MEMORY[0x270F9DA18]();
}

uint64_t sub_251F359C0()
{
  return MEMORY[0x270F9DA70]();
}

uint64_t sub_251F359D0()
{
  return MEMORY[0x270F9DA80]();
}

uint64_t sub_251F359E0()
{
  return MEMORY[0x270F9DA98]();
}

uint64_t sub_251F359F0()
{
  return MEMORY[0x270F9DAA0]();
}

uint64_t sub_251F35A00()
{
  return MEMORY[0x270F9DAC8]();
}

uint64_t sub_251F35A10()
{
  return MEMORY[0x270F9DAD0]();
}

uint64_t sub_251F35A20()
{
  return MEMORY[0x270F9DAD8]();
}

uint64_t sub_251F35A30()
{
  return MEMORY[0x270F9DB00]();
}

uint64_t sub_251F35A40()
{
  return MEMORY[0x270F9DB18]();
}

uint64_t sub_251F35A50()
{
  return MEMORY[0x270F9DB20]();
}

uint64_t sub_251F35A60()
{
  return MEMORY[0x270F9DB48]();
}

uint64_t sub_251F35A70()
{
  return MEMORY[0x270F9DB50]();
}

uint64_t sub_251F35A80()
{
  return MEMORY[0x270F9DB58]();
}

uint64_t sub_251F35A90()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_251F35AA0()
{
  return MEMORY[0x270EF1B90]();
}

uint64_t sub_251F35AB0()
{
  return MEMORY[0x270EF1BA0]();
}

uint64_t sub_251F35AC0()
{
  return MEMORY[0x270EF1BB0]();
}

uint64_t sub_251F35AD0()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_251F35AE0()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_251F35AF0()
{
  return MEMORY[0x270F9DBC8]();
}

uint64_t sub_251F35B00()
{
  return MEMORY[0x270F9DBD0]();
}

uint64_t sub_251F35B10()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_251F35B20()
{
  return MEMORY[0x270F9DBF8]();
}

uint64_t sub_251F35B30()
{
  return MEMORY[0x270F9DC00]();
}

uint64_t sub_251F35B40()
{
  return MEMORY[0x270F9DC10]();
}

uint64_t sub_251F35B50()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_251F35B60()
{
  return MEMORY[0x270F9DC30]();
}

uint64_t sub_251F35B70()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_251F35B80()
{
  return MEMORY[0x270F9DC60]();
}

uint64_t sub_251F35B90()
{
  return MEMORY[0x270F9DC80]();
}

uint64_t sub_251F35BA0()
{
  return MEMORY[0x270F9DC88]();
}

uint64_t sub_251F35BB0()
{
  return MEMORY[0x270F9DCA8]();
}

uint64_t sub_251F35BD0()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t sub_251F35BE0()
{
  return MEMORY[0x270F9DD08]();
}

uint64_t sub_251F35BF0()
{
  return MEMORY[0x270EF1BD0]();
}

uint64_t sub_251F35C00()
{
  return MEMORY[0x270FA1DF8]();
}

uint64_t sub_251F35C10()
{
  return MEMORY[0x270FA1E18]();
}

uint64_t sub_251F35C20()
{
  return MEMORY[0x270FA1E20]();
}

uint64_t sub_251F35C30()
{
  return MEMORY[0x270FA1E30]();
}

uint64_t sub_251F35C40()
{
  return MEMORY[0x270FA1E48]();
}

uint64_t sub_251F35C70()
{
  return MEMORY[0x270FA1EA0]();
}

uint64_t sub_251F35C80()
{
  return MEMORY[0x270FA1EA8]();
}

uint64_t sub_251F35C90()
{
  return MEMORY[0x270FA1EC0]();
}

uint64_t sub_251F35CA0()
{
  return MEMORY[0x270FA1EF0]();
}

uint64_t sub_251F35CB0()
{
  return MEMORY[0x270FA1EF8]();
}

uint64_t sub_251F35CC0()
{
  return MEMORY[0x270FA1F08]();
}

uint64_t sub_251F35CD0()
{
  return MEMORY[0x270FA1F10]();
}

uint64_t sub_251F35CE0()
{
  return MEMORY[0x270FA1F18]();
}

uint64_t sub_251F35CF0()
{
  return MEMORY[0x270FA1F48]();
}

uint64_t sub_251F35D00()
{
  return MEMORY[0x270FA1F50]();
}

uint64_t sub_251F35D10()
{
  return MEMORY[0x270FA1F58]();
}

uint64_t sub_251F35D20()
{
  return MEMORY[0x270FA1F60]();
}

uint64_t sub_251F35D40()
{
  return MEMORY[0x270FA1F88]();
}

uint64_t sub_251F35D50()
{
  return MEMORY[0x270FA1F90]();
}

uint64_t sub_251F35D60()
{
  return MEMORY[0x270FA1FB0]();
}

uint64_t sub_251F35D80()
{
  return MEMORY[0x270FA1FD8]();
}

uint64_t sub_251F35D90()
{
  return MEMORY[0x270FA1FE8]();
}

uint64_t sub_251F35DB0()
{
  return MEMORY[0x270FA2068]();
}

uint64_t sub_251F35DC0()
{
  return MEMORY[0x270EF1C10]();
}

uint64_t sub_251F35DD0()
{
  return MEMORY[0x270F9DD60]();
}

uint64_t sub_251F35DE0()
{
  return MEMORY[0x270F9DD78]();
}

uint64_t sub_251F35DF0()
{
  return MEMORY[0x270F9DDA0]();
}

uint64_t sub_251F35E00()
{
  return MEMORY[0x270F9DDB0]();
}

uint64_t sub_251F35E10()
{
  return MEMORY[0x270F9DE18]();
}

uint64_t sub_251F35E20()
{
  return MEMORY[0x270F9DE58]();
}

uint64_t sub_251F35E30()
{
  return MEMORY[0x270EF1CA0]();
}

uint64_t sub_251F35E40()
{
  return MEMORY[0x270EF1CC8]();
}

uint64_t sub_251F35E50()
{
  return MEMORY[0x270F9DEB0]();
}

uint64_t sub_251F35E60()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_251F35E70()
{
  return MEMORY[0x270F9DF00]();
}

uint64_t sub_251F35E80()
{
  return MEMORY[0x270F9DF28]();
}

uint64_t sub_251F35E90()
{
  return MEMORY[0x270F9DF80]();
}

uint64_t sub_251F35EA0()
{
  return MEMORY[0x270F9DFE8]();
}

uint64_t sub_251F35EB0()
{
  return MEMORY[0x270EF1CE8]();
}

uint64_t sub_251F35EC0()
{
  return MEMORY[0x270EF1D00]();
}

uint64_t sub_251F35ED0()
{
  return MEMORY[0x270F9E080]();
}

uint64_t sub_251F35EE0()
{
  return MEMORY[0x270F9E0A0]();
}

uint64_t sub_251F35EF0()
{
  return MEMORY[0x270F9E0C8]();
}

uint64_t sub_251F35F00()
{
  return MEMORY[0x270F9E0E0]();
}

uint64_t sub_251F35F10()
{
  return MEMORY[0x270F9E140]();
}

uint64_t sub_251F35F20()
{
  return MEMORY[0x270F9E178]();
}

uint64_t sub_251F35F30()
{
  return MEMORY[0x270F9E1E0]();
}

uint64_t sub_251F35F40()
{
  return MEMORY[0x270F053F8]();
}

uint64_t sub_251F35F50()
{
  return MEMORY[0x270F9E2F0]();
}

uint64_t sub_251F35F60()
{
  return MEMORY[0x270EF3AB0]();
}

uint64_t sub_251F35F70()
{
  return MEMORY[0x270EF1E00]();
}

uint64_t sub_251F35F80()
{
  return MEMORY[0x270EF1EF0]();
}

uint64_t sub_251F35F90()
{
  return MEMORY[0x270FA2E40]();
}

uint64_t sub_251F35FA0()
{
  return MEMORY[0x270FA2E58]();
}

uint64_t sub_251F35FB0()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_251F35FC0()
{
  return MEMORY[0x270FA2E70]();
}

uint64_t sub_251F35FD0()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_251F35FE0()
{
  return MEMORY[0x270EF1F68]();
}

uint64_t sub_251F35FF0()
{
  return MEMORY[0x270EF1F80]();
}

uint64_t sub_251F36000()
{
  return MEMORY[0x270EF1FB0]();
}

uint64_t sub_251F36010()
{
  return MEMORY[0x270FA0C80]();
}

uint64_t sub_251F36020()
{
  return MEMORY[0x270FA0D48]();
}

uint64_t sub_251F36030()
{
  return MEMORY[0x270FA0D68]();
}

uint64_t sub_251F36040()
{
  return MEMORY[0x270FA0DD8]();
}

uint64_t sub_251F36050()
{
  return MEMORY[0x270FA2E90]();
}

uint64_t sub_251F36060()
{
  return MEMORY[0x270FA2EA8]();
}

uint64_t sub_251F36070()
{
  return MEMORY[0x270FA2EB8]();
}

uint64_t sub_251F36080()
{
  return MEMORY[0x270FA0F38]();
}

uint64_t sub_251F36090()
{
  return MEMORY[0x270FA0F40]();
}

uint64_t sub_251F360A0()
{
  return MEMORY[0x270FA0870]();
}

uint64_t sub_251F360B0()
{
  return MEMORY[0x270FA0888]();
}

uint64_t sub_251F360C0()
{
  return MEMORY[0x270FA0890]();
}

uint64_t sub_251F360D0()
{
  return MEMORY[0x270EF20C8]();
}

uint64_t sub_251F360E0()
{
  return MEMORY[0x270EF20D0]();
}

uint64_t sub_251F360F0()
{
  return MEMORY[0x270EF2178]();
}

uint64_t sub_251F36100()
{
  return MEMORY[0x270EF2190]();
}

uint64_t sub_251F36110()
{
  return MEMORY[0x270FA1178]();
}

uint64_t sub_251F36120()
{
  return MEMORY[0x270FA1188]();
}

uint64_t sub_251F36130()
{
  return MEMORY[0x270FA1198]();
}

uint64_t sub_251F36140()
{
  return MEMORY[0x270FA11A8]();
}

uint64_t sub_251F36150()
{
  return MEMORY[0x270EF21C0]();
}

uint64_t sub_251F36160()
{
  return MEMORY[0x270EF3AC0]();
}

uint64_t sub_251F36170()
{
  return MEMORY[0x270FA2EC8]();
}

uint64_t sub_251F36180()
{
  return MEMORY[0x270FA2F00]();
}

uint64_t sub_251F36190()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_251F361A0()
{
  return MEMORY[0x270F9E3D0]();
}

uint64_t sub_251F361B0()
{
  return MEMORY[0x270F9E518]();
}

uint64_t sub_251F361C0()
{
  return MEMORY[0x270EF23C0]();
}

uint64_t sub_251F361D0()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_251F361E0()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_251F361F0()
{
  return MEMORY[0x270EF2408]();
}

uint64_t sub_251F36200()
{
  return MEMORY[0x270EF2460]();
}

uint64_t sub_251F36210()
{
  return MEMORY[0x270EF24D8]();
}

uint64_t sub_251F36220()
{
  return MEMORY[0x270EF2510]();
}

uint64_t sub_251F36230()
{
  return MEMORY[0x270EF2520]();
}

uint64_t sub_251F36240()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_251F36260()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_251F36270()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_251F36280()
{
  return MEMORY[0x270F9E7F8]();
}

uint64_t sub_251F36290()
{
  return MEMORY[0x270F9E800]();
}

uint64_t sub_251F362A0()
{
  return MEMORY[0x270F9E810]();
}

uint64_t sub_251F362B0()
{
  return MEMORY[0x270F9E818]();
}

uint64_t sub_251F362C0()
{
  return MEMORY[0x270F9E820]();
}

uint64_t sub_251F362D0()
{
  return MEMORY[0x270F9E830]();
}

uint64_t sub_251F362E0()
{
  return MEMORY[0x270F9E838]();
}

uint64_t sub_251F362F0()
{
  return MEMORY[0x270F9E840]();
}

uint64_t sub_251F36300()
{
  return MEMORY[0x270F9E848]();
}

uint64_t sub_251F36310()
{
  return MEMORY[0x270F9E858]();
}

uint64_t sub_251F36320()
{
  return MEMORY[0x270F9E860]();
}

uint64_t sub_251F36340()
{
  return MEMORY[0x270F9E870]();
}

uint64_t sub_251F36350()
{
  return MEMORY[0x270F9E878]();
}

uint64_t sub_251F36360()
{
  return MEMORY[0x270F9E880]();
}

uint64_t sub_251F36370()
{
  return MEMORY[0x270F9E888]();
}

uint64_t sub_251F36380()
{
  return MEMORY[0x270F9E8C0]();
}

uint64_t sub_251F36390()
{
  return MEMORY[0x270F9E8C8]();
}

uint64_t sub_251F363A0()
{
  return MEMORY[0x270F9E8E8]();
}

uint64_t sub_251F363C0()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_251F363D0()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_251F363E0()
{
  return MEMORY[0x270F9E968]();
}

uint64_t sub_251F363F0()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_251F36400()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_251F36410()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_251F36420()
{
  return MEMORY[0x270F9E9D0]();
}

uint64_t sub_251F36430()
{
  return MEMORY[0x270F9E9E8]();
}

uint64_t sub_251F36440()
{
  return MEMORY[0x270F9EA30]();
}

uint64_t sub_251F36450()
{
  return MEMORY[0x270F9EA38]();
}

uint64_t sub_251F36460()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_251F36470()
{
  return MEMORY[0x270F9EA48]();
}

uint64_t sub_251F36480()
{
  return MEMORY[0x270F9EA78]();
}

uint64_t sub_251F36490()
{
  return MEMORY[0x270F9EA98]();
}

uint64_t sub_251F364A0()
{
  return MEMORY[0x270F9EAA0]();
}

uint64_t sub_251F364B0()
{
  return MEMORY[0x270F9EAB8]();
}

uint64_t sub_251F364C0()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_251F364E0()
{
  return MEMORY[0x270F9EB80]();
}

uint64_t sub_251F364F0()
{
  return MEMORY[0x270F9EB98]();
}

uint64_t sub_251F36500()
{
  return MEMORY[0x270F9EBC0]();
}

uint64_t sub_251F36510()
{
  return MEMORY[0x270F9EBD8]();
}

uint64_t sub_251F36520()
{
  return MEMORY[0x270F9EBE0]();
}

uint64_t sub_251F36530()
{
  return MEMORY[0x270F9EC08]();
}

uint64_t sub_251F36540()
{
  return MEMORY[0x270F9EC10]();
}

uint64_t sub_251F36550()
{
  return MEMORY[0x270F9EC48]();
}

uint64_t sub_251F36560()
{
  return MEMORY[0x270F9EC88]();
}

uint64_t sub_251F36570()
{
  return MEMORY[0x270F9EC90]();
}

uint64_t sub_251F36580()
{
  return MEMORY[0x270FA2160]();
}

uint64_t sub_251F36590()
{
  return MEMORY[0x270FA2180]();
}

uint64_t sub_251F365A0()
{
  return MEMORY[0x270FA2198]();
}

uint64_t sub_251F365B0()
{
  return MEMORY[0x270FA21A0]();
}

uint64_t sub_251F365C0()
{
  return MEMORY[0x270FA21A8]();
}

uint64_t sub_251F365D0()
{
  return MEMORY[0x270FA21B0]();
}

uint64_t sub_251F365E0()
{
  return MEMORY[0x270F9ECD8]();
}

uint64_t sub_251F365F0()
{
  return MEMORY[0x270FA21F8]();
}

uint64_t sub_251F36600()
{
  return MEMORY[0x270FA2200]();
}

uint64_t sub_251F36610()
{
  return MEMORY[0x270FA2208]();
}

uint64_t sub_251F36620()
{
  return MEMORY[0x270F9ED20]();
}

uint64_t sub_251F36630()
{
  return MEMORY[0x270F9ED68]();
}

uint64_t sub_251F36640()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_251F36650()
{
  return MEMORY[0x270F9EF50]();
}

uint64_t sub_251F36660()
{
  return MEMORY[0x270F9EFC8]();
}

uint64_t sub_251F36670()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_251F36680()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_251F36690()
{
  return MEMORY[0x270F9F000]();
}

uint64_t sub_251F366A0()
{
  return MEMORY[0x270F9F050]();
}

uint64_t sub_251F366B0()
{
  return MEMORY[0x270F9F058]();
}

uint64_t sub_251F366C0()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_251F366D0()
{
  return MEMORY[0x270F9F088]();
}

uint64_t sub_251F366E0()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_251F366F0()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_251F36700()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_251F36710()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_251F36720()
{
  return MEMORY[0x270F9F0D0]();
}

uint64_t sub_251F36740()
{
  return MEMORY[0x270F9F210]();
}

uint64_t sub_251F36750()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_251F36770()
{
  return MEMORY[0x270F9F250]();
}

uint64_t sub_251F36780()
{
  return MEMORY[0x270F9F258]();
}

uint64_t sub_251F36790()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_251F367A0()
{
  return MEMORY[0x270F9F278]();
}

uint64_t sub_251F367B0()
{
  return MEMORY[0x270F9F280]();
}

uint64_t sub_251F367C0()
{
  return MEMORY[0x270F9F290]();
}

uint64_t sub_251F367D0()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_251F367E0()
{
  return MEMORY[0x270F9F2B0]();
}

uint64_t sub_251F367F0()
{
  return MEMORY[0x270F9F2C8]();
}

uint64_t sub_251F36800()
{
  return MEMORY[0x270F9F2D0]();
}

uint64_t sub_251F36810()
{
  return MEMORY[0x270F9F2D8]();
}

uint64_t sub_251F36820()
{
  return MEMORY[0x270F9F2E0]();
}

uint64_t sub_251F36830()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_251F36840()
{
  return MEMORY[0x270F9F2F0]();
}

uint64_t sub_251F36850()
{
  return MEMORY[0x270F9F2F8]();
}

uint64_t sub_251F36860()
{
  return MEMORY[0x270F9F308]();
}

uint64_t sub_251F36870()
{
  return MEMORY[0x270F9F310]();
}

uint64_t sub_251F36880()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_251F36890()
{
  return MEMORY[0x270F9F330]();
}

uint64_t sub_251F368A0()
{
  return MEMORY[0x270F9F340]();
}

uint64_t sub_251F368B0()
{
  return MEMORY[0x270F9F348]();
}

uint64_t sub_251F368C0()
{
  return MEMORY[0x270F9F350]();
}

uint64_t sub_251F368D0()
{
  return MEMORY[0x270F9F358]();
}

uint64_t sub_251F368E0()
{
  return MEMORY[0x270F9F360]();
}

uint64_t sub_251F368F0()
{
  return MEMORY[0x270F9F378]();
}

uint64_t sub_251F36900()
{
  return MEMORY[0x270F9F390]();
}

uint64_t sub_251F36910()
{
  return MEMORY[0x270F9F3B0]();
}

uint64_t sub_251F36920()
{
  return MEMORY[0x270F9F3B8]();
}

uint64_t sub_251F36930()
{
  return MEMORY[0x270F9F3C0]();
}

uint64_t sub_251F36940()
{
  return MEMORY[0x270F9F3C8]();
}

uint64_t sub_251F36950()
{
  return MEMORY[0x270F9F3D0]();
}

uint64_t sub_251F36960()
{
  return MEMORY[0x270F9F3D8]();
}

uint64_t sub_251F36970()
{
  return MEMORY[0x270F9F3E0]();
}

uint64_t sub_251F36980()
{
  return MEMORY[0x270F9F3E8]();
}

uint64_t sub_251F36990()
{
  return MEMORY[0x270F9F400]();
}

uint64_t sub_251F369A0()
{
  return MEMORY[0x270F9F408]();
}

uint64_t sub_251F369B0()
{
  return MEMORY[0x270F9F410]();
}

uint64_t sub_251F369C0()
{
  return MEMORY[0x270F9F418]();
}

uint64_t sub_251F369D0()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_251F369E0()
{
  return MEMORY[0x270F9F430]();
}

uint64_t sub_251F369F0()
{
  return MEMORY[0x270F9F438]();
}

uint64_t sub_251F36A00()
{
  return MEMORY[0x270F9F448]();
}

uint64_t sub_251F36A10()
{
  return MEMORY[0x270F9F450]();
}

uint64_t sub_251F36A20()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_251F36A30()
{
  return MEMORY[0x270F9F470]();
}

uint64_t sub_251F36A40()
{
  return MEMORY[0x270F9F480]();
}

uint64_t sub_251F36A50()
{
  return MEMORY[0x270F9F488]();
}

uint64_t sub_251F36A60()
{
  return MEMORY[0x270F9F490]();
}

uint64_t sub_251F36A70()
{
  return MEMORY[0x270F9F498]();
}

uint64_t sub_251F36A80()
{
  return MEMORY[0x270F9F4A8]();
}

uint64_t sub_251F36A90()
{
  return MEMORY[0x270F9F4C0]();
}

uint64_t sub_251F36AA0()
{
  return MEMORY[0x270F9F4C8]();
}

uint64_t sub_251F36AB0()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_251F36AE0()
{
  return MEMORY[0x270F9F770]();
}

uint64_t sub_251F36AF0()
{
  return MEMORY[0x270F9F778]();
}

uint64_t sub_251F36B00()
{
  return MEMORY[0x270F9F7C0]();
}

uint64_t sub_251F36B10()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_251F36B30()
{
  return MEMORY[0x270F9F918]();
}

uint64_t sub_251F36B40()
{
  return MEMORY[0x270F9F920]();
}

uint64_t sub_251F36B50()
{
  return MEMORY[0x270F9FA40]();
}

uint64_t sub_251F36B70()
{
  return MEMORY[0x270F9FA68]();
}

uint64_t sub_251F36B80()
{
  return MEMORY[0x270F9FA88]();
}

uint64_t sub_251F36B90()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_251F36BA0()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_251F36BB0()
{
  return MEMORY[0x270FA2378]();
}

uint64_t sub_251F36BD0()
{
  return MEMORY[0x270EF2660]();
}

uint64_t sub_251F36BE0()
{
  return MEMORY[0x270EF2678]();
}

uint64_t sub_251F36BF0()
{
  return MEMORY[0x270EF2688]();
}

uint64_t sub_251F36C00()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_251F36C10()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_251F36C20()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_251F36C30()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_251F36C40()
{
  return MEMORY[0x270EF26B0]();
}

uint64_t sub_251F36C50()
{
  return MEMORY[0x270EF2728]();
}

uint64_t sub_251F36C60()
{
  return MEMORY[0x270EF2730]();
}

uint64_t sub_251F36C70()
{
  return MEMORY[0x270F9FC28]();
}

uint64_t sub_251F36C80()
{
  return MEMORY[0x270F9FC30]();
}

uint64_t sub_251F36C90()
{
  return MEMORY[0x270F9FC40]();
}

uint64_t sub_251F36CA0()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_251F36CB0()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_251F36CC0()
{
  return MEMORY[0x270F9FC68]();
}

uint64_t sub_251F36CD0()
{
  return MEMORY[0x270F9FC70]();
}

uint64_t sub_251F36CE0()
{
  return MEMORY[0x270F9FC78]();
}

uint64_t sub_251F36CF0()
{
  return MEMORY[0x270F9FC80]();
}

uint64_t sub_251F36D00()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_251F36D10()
{
  return MEMORY[0x270F9FCA8]();
}

uint64_t sub_251F36D20()
{
  return MEMORY[0x270F9FCD0]();
}

uint64_t sub_251F36D30()
{
  return MEMORY[0x270F9FCD8]();
}

uint64_t sub_251F36D40()
{
  return MEMORY[0x270EF2740]();
}

uint64_t sub_251F36D50()
{
  return MEMORY[0x270EF2750]();
}

uint64_t sub_251F36D60()
{
  return MEMORY[0x270EF2768]();
}

uint64_t sub_251F36D70()
{
  return MEMORY[0x270EF2798]();
}

uint64_t sub_251F36D80()
{
  return MEMORY[0x270EF27B0]();
}

uint64_t sub_251F36D90()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_251F36DA0()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t sub_251F36DB0()
{
  return MEMORY[0x270F9FF68]();
}

uint64_t sub_251F36DC0()
{
  return MEMORY[0x270F9FF98]();
}

uint64_t sub_251F36DD0()
{
  return MEMORY[0x270F9FFA8]();
}

uint64_t sub_251F36DE0()
{
  return MEMORY[0x270F9FFB0]();
}

uint64_t sub_251F36DF0()
{
  return MEMORY[0x270F9FFB8]();
}

uint64_t sub_251F36E00()
{
  return MEMORY[0x270F9FFC8]();
}

uint64_t sub_251F36E10()
{
  return MEMORY[0x270F9FFD8]();
}

uint64_t sub_251F36E20()
{
  return MEMORY[0x270F9FFE0]();
}

uint64_t sub_251F36E30()
{
  return MEMORY[0x270F9FFE8]();
}

uint64_t sub_251F36E40()
{
  return MEMORY[0x270F9FFF8]();
}

uint64_t sub_251F36E70()
{
  return MEMORY[0x270FA0128]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x270F18A48]();
}

int32_t CMTimeCompare(CMTime *time1, CMTime *time2)
{
  return MEMORY[0x270EE7DD0](time1, time2);
}

uint64_t DetailDateMaskToString()
{
  return MEMORY[0x270F4B3C8]();
}

uint64_t HMPresenceEventTypeAsString()
{
  return MEMORY[0x270EF3CF8]();
}

uint64_t HM_FEATURE_RVC_DEFAULTS_ENABLED()
{
  return MEMORY[0x270F3C300]();
}

uint64_t MGGetStringAnswer()
{
  return MEMORY[0x270F95FF8]();
}

uint64_t MTRAttributeNameForID()
{
  return MEMORY[0x270EF5A90]();
}

uint64_t MobileGestalt_get_current_device()
{
  return MEMORY[0x270F960E8]();
}

uint64_t MobileGestalt_get_wapiCapability()
{
  return MEMORY[0x270F961A0]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

uint64_t _os_feature_enabled_impl()
{
  return MEMORY[0x270ED8070]();
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x270FA0158]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x270FA0160]();
}

void bzero(void *a1, size_t a2)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x270EDA460](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x270F9A528](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x270F9A5A8]();
}

id objc_getAssociatedObject(id object, const void *key)
{
  return (id)MEMORY[0x270F9A648](object, key);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x270F9A6F8]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x270F9A700]();
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A888](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x270F9AA10](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x270F9AA28](obj);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x270EDA9A0](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t os_variant_has_internal_diagnostics()
{
  return MEMORY[0x270EDAB40]();
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x270FA01A0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_asyncLet_begin()
{
  return MEMORY[0x270FA23D0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x270FA23F8]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x270FA2408]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x270FA2410]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x270FA0228]();
}

uint64_t swift_deallocUninitializedObject()
{
  return MEMORY[0x270FA0248]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x270FA2420]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x270FA2428]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x270FA0268]();
}

uint64_t swift_dynamicCastClassUnconditional()
{
  return MEMORY[0x270FA0270]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x270FA0288]();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return MEMORY[0x270FA0290]();
}

uint64_t swift_dynamicCastUnknownClass()
{
  return MEMORY[0x270FA02B0]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x270FA02F8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x270FA0310]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x270FA0348]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x270FA03B8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x270FA03F0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTupleTypeLayout()
{
  return MEMORY[0x270FA0408]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x270FA0410]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x270FA0428]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x270FA0458]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x270FA0470]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStaticObject()
{
  return MEMORY[0x270FA0480]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isClassType()
{
  return MEMORY[0x270FA0490]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x270FA04C0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x270FA0568]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x270FA2458]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_task_isCancelled()
{
  return MEMORY[0x270FA2470]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x270FA0598]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x270FA05A8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x270FA05D0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x270FA05E8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x270FA05F0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x270FA05F8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x270FA0648]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x270FA0650]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x270FA0658]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}