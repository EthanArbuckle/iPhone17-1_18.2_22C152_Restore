uint64_t sub_227C2C108(uint64_t result)
{
  *(void *)result = &unk_26DC25BA8;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 76) = 0;
  return result;
}

void sub_227C2C130(PB::Base *this)
{
  *(void *)this = &unk_26DC25BA8;
  v2 = (void *)*((void *)this + 1);
  if (v2)
  {
    *((void *)this + 2) = v2;
    operator delete(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C2C194(PB::Base *a1)
{
  sub_227C2C130(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C2C1CC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC25BA8;
  *(void *)(a1 + 8) = 0;
  v4 = (char *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 76) = 0;
  __int16 v5 = *(_WORD *)(a2 + 76);
  if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    __int16 v6 = 1;
    *(_WORD *)(a1 + 76) = 1;
    *(void *)(a1 + 32) = v7;
    __int16 v5 = *(_WORD *)(a2 + 76);
    if ((v5 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v6 = 0;
  if ((v5 & 2) != 0)
  {
LABEL_5:
    uint64_t v8 = *(void *)(a2 + 40);
    v6 |= 2u;
    *(_WORD *)(a1 + 76) = v6;
    *(void *)(a1 + 40) = v8;
    __int16 v5 = *(_WORD *)(a2 + 76);
  }
LABEL_6:
  if ((v5 & 4) != 0)
  {
    int v13 = *(_DWORD *)(a2 + 48);
    v6 |= 4u;
    *(_WORD *)(a1 + 76) = v6;
    *(_DWORD *)(a1 + 48) = v13;
    __int16 v5 = *(_WORD *)(a2 + 76);
    if ((v5 & 0x10) == 0)
    {
LABEL_8:
      if ((v5 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_9;
    }
  }
  else if ((v5 & 0x10) == 0)
  {
    goto LABEL_8;
  }
  int v14 = *(_DWORD *)(a2 + 56);
  v6 |= 0x10u;
  *(_WORD *)(a1 + 76) = v6;
  *(_DWORD *)(a1 + 56) = v14;
  if ((*(_WORD *)(a2 + 76) & 8) != 0)
  {
LABEL_9:
    int v9 = *(_DWORD *)(a2 + 52);
    *(_WORD *)(a1 + 76) = v6 | 8;
    *(_DWORD *)(a1 + 52) = v9;
  }
LABEL_10:
  if (a1 != a2) {
    sub_227B8BA68(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  __int16 v10 = *(_WORD *)(a2 + 76);
  if ((v10 & 0x40) != 0)
  {
    int v15 = *(_DWORD *)(a2 + 64);
    *(_WORD *)(a1 + 76) |= 0x40u;
    *(_DWORD *)(a1 + 64) = v15;
    __int16 v10 = *(_WORD *)(a2 + 76);
    if ((v10 & 0x80) == 0)
    {
LABEL_14:
      if ((v10 & 0x100) == 0) {
        goto LABEL_15;
      }
LABEL_23:
      int v17 = *(_DWORD *)(a2 + 72);
      *(_WORD *)(a1 + 76) |= 0x100u;
      *(_DWORD *)(a1 + 72) = v17;
      if ((*(_WORD *)(a2 + 76) & 0x20) == 0) {
        return a1;
      }
      goto LABEL_16;
    }
  }
  else if ((v10 & 0x80) == 0)
  {
    goto LABEL_14;
  }
  int v16 = *(_DWORD *)(a2 + 68);
  *(_WORD *)(a1 + 76) |= 0x80u;
  *(_DWORD *)(a1 + 68) = v16;
  __int16 v10 = *(_WORD *)(a2 + 76);
  if ((v10 & 0x100) != 0) {
    goto LABEL_23;
  }
LABEL_15:
  if ((v10 & 0x20) != 0)
  {
LABEL_16:
    int v11 = *(_DWORD *)(a2 + 60);
    *(_WORD *)(a1 + 76) |= 0x20u;
    *(_DWORD *)(a1 + 60) = v11;
  }
  return a1;
}

uint64_t sub_227C2C34C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 76);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "compassBias", *(float *)(a1 + 48));
    __int16 v5 = *(_WORD *)(a1 + 76);
    if ((v5 & 8) == 0)
    {
LABEL_3:
      if ((v5 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v5 & 8) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "estimatedBiasUncertainty", *(float *)(a1 + 52));
  __int16 v5 = *(_WORD *)(a1 + 76);
  if ((v5 & 0x10) == 0)
  {
LABEL_4:
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_19:
  PB::TextFormatter::format(this, "estimatedHeading", *(float *)(a1 + 56));
  if ((*(_WORD *)(a1 + 76) & 0x20) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "globalReferenceFrame");
LABEL_6:
  __int16 v6 = *(float **)(a1 + 8);
  uint64_t v7 = *(float **)(a1 + 16);
  while (v6 != v7)
  {
    float v8 = *v6++;
    PB::TextFormatter::format(this, "lslGlobalToDeviceFrameRotationMatrix", v8);
  }
  __int16 v9 = *(_WORD *)(a1 + 76);
  if ((v9 & 0x40) != 0)
  {
    PB::TextFormatter::format(this, "lslHeadingAccuracy", *(float *)(a1 + 64));
    __int16 v9 = *(_WORD *)(a1 + 76);
    if ((v9 & 0x80) == 0)
    {
LABEL_10:
      if ((v9 & 1) == 0) {
        goto LABEL_11;
      }
      goto LABEL_23;
    }
  }
  else if ((v9 & 0x80) == 0)
  {
    goto LABEL_10;
  }
  PB::TextFormatter::format(this, "lslHeadingConfidence", *(float *)(a1 + 68));
  __int16 v9 = *(_WORD *)(a1 + 76);
  if ((v9 & 1) == 0)
  {
LABEL_11:
    if ((v9 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "machContinuousTimestamp", *(double *)(a1 + 32));
  __int16 v9 = *(_WORD *)(a1 + 76);
  if ((v9 & 0x100) == 0)
  {
LABEL_12:
    if ((v9 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_24:
  PB::TextFormatter::format(this, "roadID");
  if ((*(_WORD *)(a1 + 76) & 2) != 0) {
LABEL_13:
  }
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 40));
LABEL_14:

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227C2C4EC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    float v8 = (void **)(a1 + 8);
    uint64_t v9 = a1 + 24;
    while (1)
    {
      uint64_t v10 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v11 = 0;
      unsigned int v12 = 0;
      unint64_t v13 = 0;
      while (1)
      {
        unint64_t v14 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v15 = *(unsigned char *)(v10 + v2);
        v13 |= (unint64_t)(v15 & 0x7F) << v11;
        if ((v15 & 0x80) == 0) {
          break;
        }
        v11 += 7;
        unint64_t v2 = v14;
        BOOL v16 = v12++ > 8;
        if (v16) {
          goto LABEL_20;
        }
      }
LABEL_21:
      if ((v13 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v13 >> 3))
      {
        case 1u:
          *(_WORD *)(a1 + 76) |= 1u;
          unint64_t v22 = *((void *)this + 1);
          if (v22 > 0xFFFFFFFFFFFFFFF7 || v22 + 8 > *((void *)this + 2)) {
            goto LABEL_127;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v22);
          goto LABEL_31;
        case 2u:
          *(_WORD *)(a1 + 76) |= 2u;
          unint64_t v23 = *((void *)this + 1);
          if (v23 > 0xFFFFFFFFFFFFFFF7 || v23 + 8 > *((void *)this + 2)) {
            goto LABEL_127;
          }
          *(void *)(a1 + 40) = *(void *)(*(void *)this + v23);
LABEL_31:
          uint64_t v24 = *((void *)this + 1) + 8;
          goto LABEL_130;
        case 3u:
          *(_WORD *)(a1 + 76) |= 4u;
          unint64_t v25 = *((void *)this + 1);
          if (v25 > 0xFFFFFFFFFFFFFFFBLL || v25 + 4 > *((void *)this + 2)) {
            goto LABEL_127;
          }
          *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v25);
          goto LABEL_129;
        case 4u:
          *(_WORD *)(a1 + 76) |= 0x10u;
          unint64_t v26 = *((void *)this + 1);
          if (v26 > 0xFFFFFFFFFFFFFFFBLL || v26 + 4 > *((void *)this + 2)) {
            goto LABEL_127;
          }
          *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v26);
          goto LABEL_129;
        case 5u:
          *(_WORD *)(a1 + 76) |= 8u;
          unint64_t v27 = *((void *)this + 1);
          if (v27 > 0xFFFFFFFFFFFFFFFBLL || v27 + 4 > *((void *)this + 2)) {
            goto LABEL_127;
          }
          *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v27);
          goto LABEL_129;
        case 6u:
          if ((v13 & 7) == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v28 = *((void *)this + 1);
            unint64_t v29 = *((void *)this + 2);
            while (v28 < v29 && !*((unsigned char *)this + 24))
            {
              v31 = *(char **)(a1 + 16);
              unint64_t v30 = *(void *)(a1 + 24);
              if ((unint64_t)v31 >= v30)
              {
                v33 = (char *)*v8;
                uint64_t v34 = (v31 - (unsigned char *)*v8) >> 2;
                unint64_t v35 = v34 + 1;
                if ((unint64_t)(v34 + 1) >> 62) {
                  goto LABEL_141;
                }
                uint64_t v36 = v30 - (void)v33;
                if (v36 >> 1 > v35) {
                  unint64_t v35 = v36 >> 1;
                }
                if ((unint64_t)v36 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v37 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v37 = v35;
                }
                if (v37)
                {
                  v38 = (char *)sub_227B8BBB8(v9, v37);
                  v33 = *(char **)(a1 + 8);
                  v31 = *(char **)(a1 + 16);
                }
                else
                {
                  v38 = 0;
                }
                v39 = &v38[4 * v34];
                *(_DWORD *)v39 = 0;
                v32 = v39 + 4;
                while (v31 != v33)
                {
                  int v40 = *((_DWORD *)v31 - 1);
                  v31 -= 4;
                  *((_DWORD *)v39 - 1) = v40;
                  v39 -= 4;
                }
                *(void *)(a1 + 8) = v39;
                *(void *)(a1 + 16) = v32;
                *(void *)(a1 + 24) = &v38[4 * v37];
                if (v33) {
                  operator delete(v33);
                }
              }
              else
              {
                *(_DWORD *)v31 = 0;
                v32 = v31 + 4;
              }
              *(void *)(a1 + 16) = v32;
              unint64_t v41 = *((void *)this + 1);
              if (v41 > 0xFFFFFFFFFFFFFFFBLL || v41 + 4 > *((void *)this + 2))
              {
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v32 - 1) = *(_DWORD *)(*(void *)this + v41);
              unint64_t v29 = *((void *)this + 2);
              unint64_t v28 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v28;
            }
            PB::Reader::recallMark();
          }
          else
          {
            v61 = *(char **)(a1 + 16);
            unint64_t v60 = *(void *)(a1 + 24);
            if ((unint64_t)v61 >= v60)
            {
              v71 = (char *)*v8;
              uint64_t v72 = (v61 - (unsigned char *)*v8) >> 2;
              unint64_t v73 = v72 + 1;
              if ((unint64_t)(v72 + 1) >> 62) {
LABEL_141:
              }
                sub_227B8B89C();
              uint64_t v74 = v60 - (void)v71;
              if (v74 >> 1 > v73) {
                unint64_t v73 = v74 >> 1;
              }
              if ((unint64_t)v74 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v75 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v75 = v73;
              }
              if (v75)
              {
                v76 = (char *)sub_227B8BBB8(v9, v75);
                v71 = *(char **)(a1 + 8);
                v61 = *(char **)(a1 + 16);
              }
              else
              {
                v76 = 0;
              }
              v77 = &v76[4 * v72];
              *(_DWORD *)v77 = 0;
              v62 = v77 + 4;
              while (v61 != v71)
              {
                int v78 = *((_DWORD *)v61 - 1);
                v61 -= 4;
                *((_DWORD *)v77 - 1) = v78;
                v77 -= 4;
              }
              *(void *)(a1 + 8) = v77;
              *(void *)(a1 + 16) = v62;
              *(void *)(a1 + 24) = &v76[4 * v75];
              if (v71) {
                operator delete(v71);
              }
            }
            else
            {
              *(_DWORD *)v61 = 0;
              v62 = v61 + 4;
            }
            *(void *)(a1 + 16) = v62;
            unint64_t v79 = *((void *)this + 1);
            if (v79 <= 0xFFFFFFFFFFFFFFFBLL && v79 + 4 <= *((void *)this + 2))
            {
              *(v62 - 1) = *(_DWORD *)(*(void *)this + v79);
LABEL_129:
              uint64_t v24 = *((void *)this + 1) + 4;
LABEL_130:
              *((void *)this + 1) = v24;
            }
            else
            {
LABEL_127:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_131:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        case 7u:
          *(_WORD *)(a1 + 76) |= 0x40u;
          unint64_t v42 = *((void *)this + 1);
          if (v42 > 0xFFFFFFFFFFFFFFFBLL || v42 + 4 > *((void *)this + 2)) {
            goto LABEL_127;
          }
          *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v42);
          goto LABEL_129;
        case 8u:
          *(_WORD *)(a1 + 76) |= 0x80u;
          unint64_t v43 = *((void *)this + 1);
          if (v43 > 0xFFFFFFFFFFFFFFFBLL || v43 + 4 > *((void *)this + 2)) {
            goto LABEL_127;
          }
          *(_DWORD *)(a1 + 68) = *(_DWORD *)(*(void *)this + v43);
          goto LABEL_129;
        case 9u:
          *(_WORD *)(a1 + 76) |= 0x100u;
          unint64_t v44 = *((void *)this + 1);
          unint64_t v45 = *((void *)this + 2);
          uint64_t v46 = *(void *)this;
          if (v44 <= 0xFFFFFFFFFFFFFFF5 && v44 + 10 <= v45)
          {
            char v47 = 0;
            unsigned int v48 = 0;
            uint64_t v49 = 0;
            do
            {
              unint64_t v50 = v44 + 1;
              *((void *)this + 1) = v44 + 1;
              char v51 = *(unsigned char *)(v46 + v44);
              v49 |= (unint64_t)(v51 & 0x7F) << v47;
              if ((v51 & 0x80) == 0) {
                goto LABEL_113;
              }
              v47 += 7;
              unint64_t v44 = v50;
              BOOL v16 = v48++ > 8;
            }
            while (!v16);
LABEL_93:
            LODWORD(v49) = 0;
            goto LABEL_113;
          }
          char v63 = 0;
          unsigned int v64 = 0;
          uint64_t v49 = 0;
          if (v45 <= v44) {
            unint64_t v45 = *((void *)this + 1);
          }
          while (2)
          {
            if (v45 == v44)
            {
              LODWORD(v49) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v65 = v44 + 1;
              char v66 = *(unsigned char *)(v46 + v44);
              *((void *)this + 1) = v65;
              v49 |= (unint64_t)(v66 & 0x7F) << v63;
              if (v66 < 0)
              {
                v63 += 7;
                unint64_t v44 = v65;
                BOOL v16 = v64++ > 8;
                if (v16) {
                  goto LABEL_93;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v49) = 0;
              }
            }
            break;
          }
LABEL_113:
          *(_DWORD *)(a1 + 72) = v49;
          goto LABEL_131;
        case 0xAu:
          *(_WORD *)(a1 + 76) |= 0x20u;
          unint64_t v52 = *((void *)this + 1);
          unint64_t v53 = *((void *)this + 2);
          uint64_t v54 = *(void *)this;
          if (v52 <= 0xFFFFFFFFFFFFFFF5 && v52 + 10 <= v53)
          {
            char v55 = 0;
            unsigned int v56 = 0;
            uint64_t v57 = 0;
            do
            {
              unint64_t v58 = v52 + 1;
              *((void *)this + 1) = v52 + 1;
              char v59 = *(unsigned char *)(v54 + v52);
              v57 |= (unint64_t)(v59 & 0x7F) << v55;
              if ((v59 & 0x80) == 0) {
                goto LABEL_116;
              }
              v55 += 7;
              unint64_t v52 = v58;
              BOOL v16 = v56++ > 8;
            }
            while (!v16);
LABEL_100:
            LODWORD(v57) = 0;
            goto LABEL_116;
          }
          char v67 = 0;
          unsigned int v68 = 0;
          uint64_t v57 = 0;
          if (v53 <= v52) {
            unint64_t v53 = *((void *)this + 1);
          }
          while (2)
          {
            if (v53 == v52)
            {
              LODWORD(v57) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v69 = v52 + 1;
              char v70 = *(unsigned char *)(v54 + v52);
              *((void *)this + 1) = v69;
              v57 |= (unint64_t)(v70 & 0x7F) << v67;
              if (v70 < 0)
              {
                v67 += 7;
                unint64_t v52 = v69;
                BOOL v16 = v68++ > 8;
                if (v16) {
                  goto LABEL_100;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v57) = 0;
              }
            }
            break;
          }
LABEL_116:
          *(_DWORD *)(a1 + 60) = v57;
          goto LABEL_131;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_131;
      }
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v13 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v19 = v2 + 1;
      char v20 = *(unsigned char *)(v10 + v2);
      *((void *)this + 1) = v19;
      v13 |= (unint64_t)(v20 & 0x7F) << v17;
      if ((v20 & 0x80) == 0) {
        goto LABEL_21;
      }
      v17 += 7;
      unint64_t v2 = v19;
      if (v18++ >= 9)
      {
LABEL_20:
        unint64_t v13 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C2CC04(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 76);
  if (v4)
  {
    result = PB::Writer::write(this, *(double *)(result + 32));
    __int16 v4 = *(_WORD *)(v3 + 76);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = PB::Writer::write(this, *(double *)(v3 + 40));
  __int16 v4 = *(_WORD *)(v3 + 76);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 0x10) == 0) {
      goto LABEL_5;
    }
LABEL_18:
    result = PB::Writer::write(this, *(float *)(v3 + 56));
    if ((*(_WORD *)(v3 + 76) & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_17:
  result = PB::Writer::write(this, *(float *)(v3 + 48));
  __int16 v4 = *(_WORD *)(v3 + 76);
  if ((v4 & 0x10) != 0) {
    goto LABEL_18;
  }
LABEL_5:
  if ((v4 & 8) != 0) {
LABEL_6:
  }
    result = PB::Writer::write(this, *(float *)(v3 + 52));
LABEL_7:
  __int16 v5 = *(float **)(v3 + 8);
  __int16 v6 = *(float **)(v3 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    result = PB::Writer::write(this, v7);
  }
  __int16 v8 = *(_WORD *)(v3 + 76);
  if ((v8 & 0x40) != 0)
  {
    result = PB::Writer::write(this, *(float *)(v3 + 64));
    __int16 v8 = *(_WORD *)(v3 + 76);
    if ((v8 & 0x80) == 0)
    {
LABEL_12:
      if ((v8 & 0x100) == 0) {
        goto LABEL_13;
      }
LABEL_22:
      result = PB::Writer::writeVarInt(this);
      if ((*(_WORD *)(v3 + 76) & 0x20) == 0) {
        return result;
      }
      goto LABEL_23;
    }
  }
  else if ((v8 & 0x80) == 0)
  {
    goto LABEL_12;
  }
  result = PB::Writer::write(this, *(float *)(v3 + 68));
  __int16 v8 = *(_WORD *)(v3 + 76);
  if ((v8 & 0x100) != 0) {
    goto LABEL_22;
  }
LABEL_13:
  if ((v8 & 0x20) == 0) {
    return result;
  }
LABEL_23:

  return PB::Writer::writeVarInt(this);
}

double sub_227C2CD64(uint64_t a1)
{
  *(void *)a1 = &unk_26DC25BE0;
  *(_DWORD *)(a1 + 100) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return result;
}

void sub_227C2CD98(PB::Base *this)
{
  *(void *)this = &unk_26DC25BE0;
  unint64_t v2 = (void *)*((void *)this + 4);
  if (v2)
  {
    *((void *)this + 5) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 2) = v3;
    operator delete(v3);
  }

  PB::Base::~Base(this);
}

void sub_227C2CE0C(PB::Base *a1)
{
  sub_227C2CD98(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C2CE44(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC25BE0;
  *(_OWORD *)(a1 + 8) = 0u;
  __int16 v4 = (char *)(a1 + 8);
  *(_DWORD *)(a1 + 100) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  char v5 = *(unsigned char *)(a2 + 100);
  if ((v5 & 0x10) != 0)
  {
    uint64_t v7 = *(void *)(a2 + 88);
    char v6 = 16;
    *(unsigned char *)(a1 + 100) = 16;
    *(void *)(a1 + 88) = v7;
    char v5 = *(unsigned char *)(a2 + 100);
    if ((v5 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v6 = 0;
  if ((*(unsigned char *)(a2 + 100) & 4) != 0)
  {
LABEL_5:
    uint64_t v8 = *(void *)(a2 + 72);
    v6 |= 4u;
    *(unsigned char *)(a1 + 100) = v6;
    *(void *)(a1 + 72) = v8;
    char v5 = *(unsigned char *)(a2 + 100);
  }
LABEL_6:
  if ((v5 & 8) != 0)
  {
    uint64_t v12 = *(void *)(a2 + 80);
    v6 |= 8u;
    *(unsigned char *)(a1 + 100) = v6;
    *(void *)(a1 + 80) = v12;
    char v5 = *(unsigned char *)(a2 + 100);
    if ((v5 & 1) == 0)
    {
LABEL_8:
      if ((v5 & 2) == 0) {
        goto LABEL_10;
      }
      goto LABEL_9;
    }
  }
  else if ((v5 & 1) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v13 = *(void *)(a2 + 56);
  v6 |= 1u;
  *(unsigned char *)(a1 + 100) = v6;
  *(void *)(a1 + 56) = v13;
  if ((*(unsigned char *)(a2 + 100) & 2) != 0)
  {
LABEL_9:
    uint64_t v9 = *(void *)(a2 + 64);
    *(unsigned char *)(a1 + 100) = v6 | 2;
    *(void *)(a1 + 64) = v9;
  }
LABEL_10:
  if (a1 != a2)
  {
    sub_227B8B74C((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 3);
    sub_227B8BA68(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  if ((*(unsigned char *)(a2 + 100) & 0x20) != 0)
  {
    int v10 = *(_DWORD *)(a2 + 96);
    *(unsigned char *)(a1 + 100) |= 0x20u;
    *(_DWORD *)(a1 + 96) = v10;
  }
  return a1;
}

uint64_t sub_227C2CF8C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 100);
  if (v5)
  {
    PB::TextFormatter::format(this, "altitudeOfLocalizedPoseInEcefCoordinate", *(double *)(a1 + 56));
    char v5 = *(unsigned char *)(a1 + 100);
  }
  if ((v5 & 0x20) != 0) {
    PB::TextFormatter::format(this, "confidence", *(float *)(a1 + 96));
  }
  char v6 = *(float **)(a1 + 8);
  uint64_t v7 = *(float **)(a1 + 16);
  while (v6 != v7)
  {
    float v8 = *v6++;
    PB::TextFormatter::format(this, "covariance", v8);
  }
  char v9 = *(unsigned char *)(a1 + 100);
  if ((v9 & 2) != 0)
  {
    PB::TextFormatter::format(this, "horizontalAccuracyOfLocalizedPoseInEcefCoordinate", *(double *)(a1 + 64));
    char v9 = *(unsigned char *)(a1 + 100);
    if ((v9 & 4) == 0)
    {
LABEL_9:
      if ((v9 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_19;
    }
  }
  else if ((*(unsigned char *)(a1 + 100) & 4) == 0)
  {
    goto LABEL_9;
  }
  PB::TextFormatter::format(this, "latitudeOfLocalizedPoseInEcefCoordinate", *(double *)(a1 + 72));
  char v9 = *(unsigned char *)(a1 + 100);
  if ((v9 & 8) == 0)
  {
LABEL_10:
    if ((v9 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_19:
  PB::TextFormatter::format(this, "longitudeOfLocalizedPoseInEcefCoordinate", *(double *)(a1 + 80));
  if ((*(unsigned char *)(a1 + 100) & 0x10) != 0) {
LABEL_11:
  }
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 88));
LABEL_12:
  int v10 = *(double **)(a1 + 32);
  char v11 = *(double **)(a1 + 40);
  while (v10 != v11)
  {
    double v12 = *v10++;
    PB::TextFormatter::format(this, "transformMatrixFromCameraToEcefCoordinate", v12);
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227C2D0F0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    float v8 = (void **)(a1 + 8);
    uint64_t v9 = a1 + 24;
    int v10 = (void **)(a1 + 32);
    uint64_t v11 = a1 + 48;
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        if (v14++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v24 = v15 & 7;
      if (v24 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v15 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 100) |= 0x10u;
          unint64_t v25 = *((void *)this + 1);
          if (v25 > 0xFFFFFFFFFFFFFFF7 || v25 + 8 > *((void *)this + 2)) {
            goto LABEL_131;
          }
          *(void *)(a1 + 88) = *(void *)(*(void *)this + v25);
          goto LABEL_122;
        case 2u:
          *(unsigned char *)(a1 + 100) |= 4u;
          unint64_t v26 = *((void *)this + 1);
          if (v26 > 0xFFFFFFFFFFFFFFF7 || v26 + 8 > *((void *)this + 2)) {
            goto LABEL_131;
          }
          *(void *)(a1 + 72) = *(void *)(*(void *)this + v26);
          goto LABEL_122;
        case 3u:
          *(unsigned char *)(a1 + 100) |= 8u;
          unint64_t v27 = *((void *)this + 1);
          if (v27 > 0xFFFFFFFFFFFFFFF7 || v27 + 8 > *((void *)this + 2)) {
            goto LABEL_131;
          }
          *(void *)(a1 + 80) = *(void *)(*(void *)this + v27);
          goto LABEL_122;
        case 4u:
          *(unsigned char *)(a1 + 100) |= 1u;
          unint64_t v28 = *((void *)this + 1);
          if (v28 > 0xFFFFFFFFFFFFFFF7 || v28 + 8 > *((void *)this + 2)) {
            goto LABEL_131;
          }
          *(void *)(a1 + 56) = *(void *)(*(void *)this + v28);
          goto LABEL_122;
        case 5u:
          *(unsigned char *)(a1 + 100) |= 2u;
          unint64_t v29 = *((void *)this + 1);
          if (v29 > 0xFFFFFFFFFFFFFFF7 || v29 + 8 > *((void *)this + 2)) {
            goto LABEL_131;
          }
          *(void *)(a1 + 64) = *(void *)(*(void *)this + v29);
          goto LABEL_122;
        case 6u:
          if (v24 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v30 = *((void *)this + 1);
            unint64_t v31 = *((void *)this + 2);
            while (v30 < v31 && !*((unsigned char *)this + 24))
            {
              v33 = *(char **)(a1 + 40);
              unint64_t v32 = *(void *)(a1 + 48);
              if ((unint64_t)v33 >= v32)
              {
                unint64_t v35 = (char *)*v10;
                uint64_t v36 = (v33 - (unsigned char *)*v10) >> 3;
                unint64_t v37 = v36 + 1;
                if ((unint64_t)(v36 + 1) >> 61) {
                  goto LABEL_143;
                }
                uint64_t v38 = v32 - (void)v35;
                if (v38 >> 2 > v37) {
                  unint64_t v37 = v38 >> 2;
                }
                if ((unint64_t)v38 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v39 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v39 = v37;
                }
                if (v39)
                {
                  int v40 = (char *)sub_227B8B8B4(v11, v39);
                  unint64_t v35 = *(char **)(a1 + 32);
                  v33 = *(char **)(a1 + 40);
                }
                else
                {
                  int v40 = 0;
                }
                unint64_t v41 = &v40[8 * v36];
                *(void *)unint64_t v41 = 0;
                uint64_t v34 = v41 + 8;
                while (v33 != v35)
                {
                  uint64_t v42 = *((void *)v33 - 1);
                  v33 -= 8;
                  *((void *)v41 - 1) = v42;
                  v41 -= 8;
                }
                *(void *)(a1 + 32) = v41;
                *(void *)(a1 + 40) = v34;
                *(void *)(a1 + 48) = &v40[8 * v39];
                if (v35) {
                  operator delete(v35);
                }
              }
              else
              {
                *(void *)v33 = 0;
                uint64_t v34 = v33 + 8;
              }
              *(void *)(a1 + 40) = v34;
              unint64_t v43 = *((void *)this + 1);
              if (v43 > 0xFFFFFFFFFFFFFFF7 || v43 + 8 > *((void *)this + 2)) {
                goto LABEL_95;
              }
              *(v34 - 1) = *(void *)(*(void *)this + v43);
              unint64_t v31 = *((void *)this + 2);
              unint64_t v30 = *((void *)this + 1) + 8;
              *((void *)this + 1) = v30;
            }
            goto LABEL_96;
          }
          unint64_t v60 = *(char **)(a1 + 40);
          unint64_t v59 = *(void *)(a1 + 48);
          if ((unint64_t)v60 >= v59)
          {
            unint64_t v65 = (char *)*v10;
            uint64_t v66 = (v60 - (unsigned char *)*v10) >> 3;
            unint64_t v67 = v66 + 1;
            if ((unint64_t)(v66 + 1) >> 61) {
LABEL_143:
            }
              sub_227B8B89C();
            uint64_t v68 = v59 - (void)v65;
            if (v68 >> 2 > v67) {
              unint64_t v67 = v68 >> 2;
            }
            if ((unint64_t)v68 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v69 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v69 = v67;
            }
            if (v69)
            {
              char v70 = (char *)sub_227B8B8B4(v11, v69);
              unint64_t v65 = *(char **)(a1 + 32);
              unint64_t v60 = *(char **)(a1 + 40);
            }
            else
            {
              char v70 = 0;
            }
            v77 = &v70[8 * v66];
            *(void *)v77 = 0;
            v61 = v77 + 8;
            while (v60 != v65)
            {
              uint64_t v78 = *((void *)v60 - 1);
              v60 -= 8;
              *((void *)v77 - 1) = v78;
              v77 -= 8;
            }
            *(void *)(a1 + 32) = v77;
            *(void *)(a1 + 40) = v61;
            *(void *)(a1 + 48) = &v70[8 * v69];
            if (v65) {
              operator delete(v65);
            }
          }
          else
          {
            *(void *)unint64_t v60 = 0;
            v61 = v60 + 8;
          }
          *(void *)(a1 + 40) = v61;
          unint64_t v79 = *((void *)this + 1);
          if (v79 <= 0xFFFFFFFFFFFFFFF7 && v79 + 8 <= *((void *)this + 2))
          {
            *(v61 - 1) = *(void *)(*(void *)this + v79);
LABEL_122:
            uint64_t v80 = *((void *)this + 1) + 8;
            goto LABEL_134;
          }
          goto LABEL_131;
        case 7u:
          if (v24 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v44 = *((void *)this + 1);
            unint64_t v45 = *((void *)this + 2);
            while (v44 < v45 && !*((unsigned char *)this + 24))
            {
              char v47 = *(char **)(a1 + 16);
              unint64_t v46 = *(void *)(a1 + 24);
              if ((unint64_t)v47 >= v46)
              {
                uint64_t v49 = (char *)*v8;
                uint64_t v50 = (v47 - (unsigned char *)*v8) >> 2;
                unint64_t v51 = v50 + 1;
                if ((unint64_t)(v50 + 1) >> 62) {
                  goto LABEL_144;
                }
                uint64_t v52 = v46 - (void)v49;
                if (v52 >> 1 > v51) {
                  unint64_t v51 = v52 >> 1;
                }
                if ((unint64_t)v52 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v53 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v53 = v51;
                }
                if (v53)
                {
                  uint64_t v54 = (char *)sub_227B8BBB8(v9, v53);
                  uint64_t v49 = *(char **)(a1 + 8);
                  char v47 = *(char **)(a1 + 16);
                }
                else
                {
                  uint64_t v54 = 0;
                }
                char v55 = &v54[4 * v50];
                *(_DWORD *)char v55 = 0;
                unsigned int v48 = v55 + 4;
                while (v47 != v49)
                {
                  int v56 = *((_DWORD *)v47 - 1);
                  v47 -= 4;
                  *((_DWORD *)v55 - 1) = v56;
                  v55 -= 4;
                }
                *(void *)(a1 + 8) = v55;
                *(void *)(a1 + 16) = v48;
                *(void *)(a1 + 24) = &v54[4 * v53];
                if (v49) {
                  operator delete(v49);
                }
              }
              else
              {
                *(_DWORD *)char v47 = 0;
                unsigned int v48 = v47 + 4;
              }
              *(void *)(a1 + 16) = v48;
              unint64_t v57 = *((void *)this + 1);
              if (v57 > 0xFFFFFFFFFFFFFFFBLL || v57 + 4 > *((void *)this + 2))
              {
LABEL_95:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v48 - 1) = *(_DWORD *)(*(void *)this + v57);
              unint64_t v45 = *((void *)this + 2);
              unint64_t v44 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v44;
            }
LABEL_96:
            PB::Reader::recallMark();
          }
          else
          {
            char v63 = *(char **)(a1 + 16);
            unint64_t v62 = *(void *)(a1 + 24);
            if ((unint64_t)v63 >= v62)
            {
              v71 = (char *)*v8;
              uint64_t v72 = (v63 - (unsigned char *)*v8) >> 2;
              unint64_t v73 = v72 + 1;
              if ((unint64_t)(v72 + 1) >> 62) {
LABEL_144:
              }
                sub_227B8B89C();
              uint64_t v74 = v62 - (void)v71;
              if (v74 >> 1 > v73) {
                unint64_t v73 = v74 >> 1;
              }
              if ((unint64_t)v74 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v75 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v75 = v73;
              }
              if (v75)
              {
                v76 = (char *)sub_227B8BBB8(v9, v75);
                v71 = *(char **)(a1 + 8);
                char v63 = *(char **)(a1 + 16);
              }
              else
              {
                v76 = 0;
              }
              v81 = &v76[4 * v72];
              *(_DWORD *)v81 = 0;
              unsigned int v64 = v81 + 4;
              while (v63 != v71)
              {
                int v82 = *((_DWORD *)v63 - 1);
                v63 -= 4;
                *((_DWORD *)v81 - 1) = v82;
                v81 -= 4;
              }
              *(void *)(a1 + 8) = v81;
              *(void *)(a1 + 16) = v64;
              *(void *)(a1 + 24) = &v76[4 * v75];
              if (v71) {
                operator delete(v71);
              }
            }
            else
            {
              *(_DWORD *)char v63 = 0;
              unsigned int v64 = v63 + 4;
            }
            *(void *)(a1 + 16) = v64;
            unint64_t v83 = *((void *)this + 1);
            if (v83 <= 0xFFFFFFFFFFFFFFFBLL && v83 + 4 <= *((void *)this + 2))
            {
              *(v64 - 1) = *(_DWORD *)(*(void *)this + v83);
LABEL_133:
              uint64_t v80 = *((void *)this + 1) + 4;
LABEL_134:
              *((void *)this + 1) = v80;
            }
            else
            {
LABEL_131:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_135:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || *((unsigned char *)this + 24)) {
            return v4 == 0;
          }
          break;
        case 8u:
          *(unsigned char *)(a1 + 100) |= 0x20u;
          unint64_t v58 = *((void *)this + 1);
          if (v58 > 0xFFFFFFFFFFFFFFFBLL || v58 + 4 > *((void *)this + 2)) {
            goto LABEL_131;
          }
          *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v58);
          goto LABEL_133;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_135;
      }
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v15 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v21 = v2 + 1;
      char v22 = *(unsigned char *)(v12 + v2);
      *((void *)this + 1) = v21;
      v15 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0) {
        goto LABEL_21;
      }
      v19 += 7;
      unint64_t v2 = v21;
      if (v20++ >= 9)
      {
LABEL_20:
        unint64_t v15 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C2D7F0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 100);
  if ((v4 & 0x10) != 0)
  {
    double result = PB::Writer::write(this, *(double *)(result + 88));
    char v4 = *(unsigned char *)(v3 + 100);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((*(unsigned char *)(result + 100) & 4) == 0)
  {
    goto LABEL_3;
  }
  double result = PB::Writer::write(this, *(double *)(v3 + 72));
  char v4 = *(unsigned char *)(v3 + 100);
  if ((v4 & 8) == 0)
  {
LABEL_4:
    if ((v4 & 1) == 0) {
      goto LABEL_5;
    }
LABEL_18:
    double result = PB::Writer::write(this, *(double *)(v3 + 56));
    if ((*(unsigned char *)(v3 + 100) & 2) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_17:
  double result = PB::Writer::write(this, *(double *)(v3 + 80));
  char v4 = *(unsigned char *)(v3 + 100);
  if (v4) {
    goto LABEL_18;
  }
LABEL_5:
  if ((v4 & 2) != 0) {
LABEL_6:
  }
    double result = PB::Writer::write(this, *(double *)(v3 + 64));
LABEL_7:
  char v5 = *(double **)(v3 + 32);
  char v6 = *(double **)(v3 + 40);
  while (v5 != v6)
  {
    double v7 = *v5++;
    double result = PB::Writer::write(this, v7);
  }
  float v8 = *(float **)(v3 + 8);
  uint64_t v9 = *(float **)(v3 + 16);
  while (v8 != v9)
  {
    float v10 = *v8++;
    double result = PB::Writer::write(this, v10);
  }
  if ((*(unsigned char *)(v3 + 100) & 0x20) != 0)
  {
    float v11 = *(float *)(v3 + 96);
    return PB::Writer::write(this, v11);
  }
  return result;
}

uint64_t sub_227C2D91C(uint64_t result)
{
  *(void *)double result = &unk_26DC25C18;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 60) = 0;
  return result;
}

void sub_227C2D944(PB::Base *this)
{
  *(void *)this = &unk_26DC25C18;
  unint64_t v2 = (void *)*((void *)this + 1);
  if (v2)
  {
    *((void *)this + 2) = v2;
    operator delete(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C2D9A8(PB::Base *a1)
{
  sub_227C2D944(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C2D9E0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC25C18;
  *(void *)(a1 + 8) = 0;
  char v4 = (char *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 60) = 0;
  char v5 = *(unsigned char *)(a2 + 60);
  if ((v5 & 2) != 0)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    char v6 = 2;
    *(unsigned char *)(a1 + 60) = 2;
    *(void *)(a1 + 40) = v7;
    char v5 = *(unsigned char *)(a2 + 60);
    if ((v5 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v6 = 0;
  if (*(unsigned char *)(a2 + 60))
  {
LABEL_5:
    uint64_t v8 = *(void *)(a2 + 32);
    v6 |= 1u;
    *(unsigned char *)(a1 + 60) = v6;
    *(void *)(a1 + 32) = v8;
    char v5 = *(unsigned char *)(a2 + 60);
  }
LABEL_6:
  if ((v5 & 0x10) == 0)
  {
    if ((v5 & 8) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  int v12 = *(_DWORD *)(a2 + 56);
  v6 |= 0x10u;
  *(unsigned char *)(a1 + 60) = v6;
  *(_DWORD *)(a1 + 56) = v12;
  if ((*(unsigned char *)(a2 + 60) & 8) != 0)
  {
LABEL_8:
    int v9 = *(_DWORD *)(a2 + 52);
    *(unsigned char *)(a1 + 60) = v6 | 8;
    *(_DWORD *)(a1 + 52) = v9;
  }
LABEL_9:
  if (a1 != a2) {
    sub_227B8BA68(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  if ((*(unsigned char *)(a2 + 60) & 4) != 0)
  {
    int v10 = *(_DWORD *)(a2 + 48);
    *(unsigned char *)(a1 + 60) |= 4u;
    *(_DWORD *)(a1 + 48) = v10;
  }
  return a1;
}

uint64_t sub_227C2DAE0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 60);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "deltaHeading", *(float *)(a1 + 48));
    char v5 = *(unsigned char *)(a1 + 60);
    if ((v5 & 8) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((*(unsigned char *)(a1 + 60) & 8) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "gravityZ", *(float *)(a1 + 52));
  char v5 = *(unsigned char *)(a1 + 60);
  if ((v5 & 1) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_15:
  PB::TextFormatter::format(this, "lastStateTimestamp", *(double *)(a1 + 32));
  if ((*(unsigned char *)(a1 + 60) & 0x10) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "meanRotRate", *(float *)(a1 + 56));
LABEL_6:
  char v6 = *(float **)(a1 + 8);
  uint64_t v7 = *(float **)(a1 + 16);
  while (v6 != v7)
  {
    float v8 = *v6++;
    PB::TextFormatter::format(this, "quaternion", v8);
  }
  if ((*(unsigned char *)(a1 + 60) & 2) != 0) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 40));
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227C2DBFC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    float v8 = (void **)(a1 + 8);
    uint64_t v9 = a1 + 24;
    while (1)
    {
      uint64_t v10 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v11 = 0;
      unsigned int v12 = 0;
      unint64_t v13 = 0;
      while (1)
      {
        unint64_t v14 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v15 = *(unsigned char *)(v10 + v2);
        v13 |= (unint64_t)(v15 & 0x7F) << v11;
        if ((v15 & 0x80) == 0) {
          break;
        }
        v11 += 7;
        unint64_t v2 = v14;
        if (v12++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      if ((v13 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v13 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 60) |= 2u;
          unint64_t v22 = *((void *)this + 1);
          if (v22 > 0xFFFFFFFFFFFFFFF7 || v22 + 8 > *((void *)this + 2)) {
            goto LABEL_85;
          }
          *(void *)(a1 + 40) = *(void *)(*(void *)this + v22);
          goto LABEL_31;
        case 2u:
          *(unsigned char *)(a1 + 60) |= 1u;
          unint64_t v23 = *((void *)this + 1);
          if (v23 > 0xFFFFFFFFFFFFFFF7 || v23 + 8 > *((void *)this + 2)) {
            goto LABEL_85;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v23);
LABEL_31:
          uint64_t v24 = *((void *)this + 1) + 8;
          goto LABEL_88;
        case 3u:
          *(unsigned char *)(a1 + 60) |= 0x10u;
          unint64_t v25 = *((void *)this + 1);
          if (v25 > 0xFFFFFFFFFFFFFFFBLL || v25 + 4 > *((void *)this + 2)) {
            goto LABEL_85;
          }
          *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v25);
          goto LABEL_87;
        case 4u:
          *(unsigned char *)(a1 + 60) |= 8u;
          unint64_t v26 = *((void *)this + 1);
          if (v26 > 0xFFFFFFFFFFFFFFFBLL || v26 + 4 > *((void *)this + 2)) {
            goto LABEL_85;
          }
          *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v26);
          goto LABEL_87;
        case 5u:
          if ((v13 & 7) == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v27 = *((void *)this + 1);
            unint64_t v28 = *((void *)this + 2);
            while (v27 < v28 && !*((unsigned char *)this + 24))
            {
              unint64_t v30 = *(char **)(a1 + 16);
              unint64_t v29 = *(void *)(a1 + 24);
              if ((unint64_t)v30 >= v29)
              {
                unint64_t v32 = (char *)*v8;
                uint64_t v33 = (v30 - (unsigned char *)*v8) >> 2;
                unint64_t v34 = v33 + 1;
                if ((unint64_t)(v33 + 1) >> 62) {
                  goto LABEL_97;
                }
                uint64_t v35 = v29 - (void)v32;
                if (v35 >> 1 > v34) {
                  unint64_t v34 = v35 >> 1;
                }
                if ((unint64_t)v35 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v36 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v36 = v34;
                }
                if (v36)
                {
                  unint64_t v37 = (char *)sub_227B8BBB8(v9, v36);
                  unint64_t v32 = *(char **)(a1 + 8);
                  unint64_t v30 = *(char **)(a1 + 16);
                }
                else
                {
                  unint64_t v37 = 0;
                }
                uint64_t v38 = &v37[4 * v33];
                *(_DWORD *)uint64_t v38 = 0;
                unint64_t v31 = v38 + 4;
                while (v30 != v32)
                {
                  int v39 = *((_DWORD *)v30 - 1);
                  v30 -= 4;
                  *((_DWORD *)v38 - 1) = v39;
                  v38 -= 4;
                }
                *(void *)(a1 + 8) = v38;
                *(void *)(a1 + 16) = v31;
                *(void *)(a1 + 24) = &v37[4 * v36];
                if (v32) {
                  operator delete(v32);
                }
              }
              else
              {
                *(_DWORD *)unint64_t v30 = 0;
                unint64_t v31 = v30 + 4;
              }
              *(void *)(a1 + 16) = v31;
              unint64_t v40 = *((void *)this + 1);
              if (v40 > 0xFFFFFFFFFFFFFFFBLL || v40 + 4 > *((void *)this + 2))
              {
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v31 - 1) = *(_DWORD *)(*(void *)this + v40);
              unint64_t v28 = *((void *)this + 2);
              unint64_t v27 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v27;
            }
            PB::Reader::recallMark();
          }
          else
          {
            unint64_t v43 = *(char **)(a1 + 16);
            unint64_t v42 = *(void *)(a1 + 24);
            if ((unint64_t)v43 >= v42)
            {
              unint64_t v45 = (char *)*v8;
              uint64_t v46 = (v43 - (unsigned char *)*v8) >> 2;
              unint64_t v47 = v46 + 1;
              if ((unint64_t)(v46 + 1) >> 62) {
LABEL_97:
              }
                sub_227B8B89C();
              uint64_t v48 = v42 - (void)v45;
              if (v48 >> 1 > v47) {
                unint64_t v47 = v48 >> 1;
              }
              if ((unint64_t)v48 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v49 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v49 = v47;
              }
              if (v49)
              {
                uint64_t v50 = (char *)sub_227B8BBB8(v9, v49);
                unint64_t v45 = *(char **)(a1 + 8);
                unint64_t v43 = *(char **)(a1 + 16);
              }
              else
              {
                uint64_t v50 = 0;
              }
              unint64_t v51 = &v50[4 * v46];
              *(_DWORD *)unint64_t v51 = 0;
              unint64_t v44 = v51 + 4;
              while (v43 != v45)
              {
                int v52 = *((_DWORD *)v43 - 1);
                v43 -= 4;
                *((_DWORD *)v51 - 1) = v52;
                v51 -= 4;
              }
              *(void *)(a1 + 8) = v51;
              *(void *)(a1 + 16) = v44;
              *(void *)(a1 + 24) = &v50[4 * v49];
              if (v45) {
                operator delete(v45);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v43 = 0;
              unint64_t v44 = v43 + 4;
            }
            *(void *)(a1 + 16) = v44;
            unint64_t v53 = *((void *)this + 1);
            if (v53 <= 0xFFFFFFFFFFFFFFFBLL && v53 + 4 <= *((void *)this + 2))
            {
              *(v44 - 1) = *(_DWORD *)(*(void *)this + v53);
LABEL_87:
              uint64_t v24 = *((void *)this + 1) + 4;
LABEL_88:
              *((void *)this + 1) = v24;
            }
            else
            {
LABEL_85:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_89:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || *((unsigned char *)this + 24)) {
            return v4 == 0;
          }
          break;
        case 6u:
          *(unsigned char *)(a1 + 60) |= 4u;
          unint64_t v41 = *((void *)this + 1);
          if (v41 > 0xFFFFFFFFFFFFFFFBLL || v41 + 4 > *((void *)this + 2)) {
            goto LABEL_85;
          }
          *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v41);
          goto LABEL_87;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_89;
      }
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v13 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v19 = v2 + 1;
      char v20 = *(unsigned char *)(v10 + v2);
      *((void *)this + 1) = v19;
      v13 |= (unint64_t)(v20 & 0x7F) << v17;
      if ((v20 & 0x80) == 0) {
        goto LABEL_21;
      }
      v17 += 7;
      unint64_t v2 = v19;
      if (v18++ >= 9)
      {
LABEL_20:
        unint64_t v13 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C2E0CC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 60);
  if ((v4 & 2) != 0)
  {
    double result = PB::Writer::write(this, *(double *)(result + 40));
    char v4 = *(unsigned char *)(v3 + 60);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      if ((v4 & 0x10) == 0) {
        goto LABEL_4;
      }
LABEL_13:
      double result = PB::Writer::write(this, *(float *)(v3 + 56));
      if ((*(unsigned char *)(v3 + 60) & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_5;
    }
  }
  else if ((*(unsigned char *)(result + 60) & 1) == 0)
  {
    goto LABEL_3;
  }
  double result = PB::Writer::write(this, *(double *)(v3 + 32));
  char v4 = *(unsigned char *)(v3 + 60);
  if ((v4 & 0x10) != 0) {
    goto LABEL_13;
  }
LABEL_4:
  if ((v4 & 8) != 0) {
LABEL_5:
  }
    double result = PB::Writer::write(this, *(float *)(v3 + 52));
LABEL_6:
  char v5 = *(float **)(v3 + 8);
  char v6 = *(float **)(v3 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    double result = PB::Writer::write(this, v7);
  }
  if ((*(unsigned char *)(v3 + 60) & 4) != 0)
  {
    float v8 = *(float *)(v3 + 48);
    return PB::Writer::write(this, v8);
  }
  return result;
}

void *sub_227C2E1BC(void *result)
{
  *double result = &unk_26DC25C50;
  result[1] = 0;
  return result;
}

void sub_227C2E1DC(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC25C50;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C2E25C(PB::Base *a1)
{
  sub_227C2E1DC(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227C2E294(void *result, uint64_t a2)
{
  *double result = &unk_26DC25C50;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C2E33C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "correction");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C2E3B8(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C2E5B4(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

double sub_227C2E5D0(uint64_t a1)
{
  *(void *)a1 = &unk_26DC25C88;
  *(_DWORD *)(a1 + 96) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)(a1 + 72) = 0;
  return result;
}

void sub_227C2E60C(PB::Base *this)
{
  *(void *)this = &unk_26DC25C88;
  unint64_t v2 = (void *)*((void *)this + 7);
  if (v2)
  {
    *((void *)this + 8) = v2;
    operator delete(v2);
  }
  unint64_t v3 = (void *)*((void *)this + 4);
  if (v3)
  {
    *((void *)this + 5) = v3;
    operator delete(v3);
  }
  int v4 = (void *)*((void *)this + 1);
  if (v4)
  {
    *((void *)this + 2) = v4;
    operator delete(v4);
  }

  PB::Base::~Base(this);
}

void sub_227C2E690(PB::Base *a1)
{
  sub_227C2E60C(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C2E6C8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 8) = 0u;
  int v4 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)a1 = &unk_26DC25C88;
  *(_DWORD *)(a1 + 96) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 72) = 0;
  if (*(unsigned char *)(a2 + 96))
  {
    uint64_t v5 = *(void *)(a2 + 80);
    *(unsigned char *)(a1 + 96) = 1;
    *(void *)(a1 + 80) = v5;
  }
  if (a1 != a2)
  {
    sub_227B8B74C(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
    sub_227B8B74C((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 3);
    sub_227B8B74C((char *)(a1 + 56), *(char **)(a2 + 56), *(void *)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 3);
  }
  char v6 = *(unsigned char *)(a2 + 96);
  if ((v6 & 4) != 0)
  {
    char v7 = *(unsigned char *)(a2 + 92);
    *(unsigned char *)(a1 + 96) |= 4u;
    *(unsigned char *)(a1 + 92) = v7;
    char v6 = *(unsigned char *)(a2 + 96);
  }
  if ((v6 & 2) != 0)
  {
    int v8 = *(_DWORD *)(a2 + 88);
    *(unsigned char *)(a1 + 96) |= 2u;
    *(_DWORD *)(a1 + 88) = v8;
  }
  return a1;
}

uint64_t sub_227C2E7CC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(double **)(a1 + 8);
  char v6 = *(double **)(a1 + 16);
  while (v5 != v6)
  {
    double v7 = *v5++;
    PB::TextFormatter::format(this, "attitude", v7);
  }
  char v8 = *(unsigned char *)(a1 + 96);
  if ((v8 & 4) != 0)
  {
    PB::TextFormatter::format(this, "isInitFinished");
    char v8 = *(unsigned char *)(a1 + 96);
    if ((v8 & 1) == 0)
    {
LABEL_5:
      if ((v8 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
  }
  else if ((*(unsigned char *)(a1 + 96) & 1) == 0)
  {
    goto LABEL_5;
  }
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 80));
  if ((*(unsigned char *)(a1 + 96) & 2) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "trackingState");
LABEL_7:
  unsigned int v9 = *(double **)(a1 + 32);
  unint64_t v10 = *(double **)(a1 + 40);
  while (v9 != v10)
  {
    double v11 = *v9++;
    PB::TextFormatter::format(this, "translation", v11);
  }
  char v12 = *(double **)(a1 + 56);
  unint64_t v13 = *(double **)(a1 + 64);
  while (v12 != v13)
  {
    double v14 = *v12++;
    PB::TextFormatter::format(this, "velocity", v14);
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227C2E904(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    char v8 = (void **)(a1 + 56);
    uint64_t v119 = a1 + 72;
    unsigned int v9 = (void **)(a1 + 32);
    uint64_t v10 = a1 + 48;
    double v11 = (void **)(a1 + 8);
    uint64_t v12 = a1 + 24;
    while (1)
    {
      uint64_t v13 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v14 = 0;
      unsigned int v15 = 0;
      unint64_t v16 = 0;
      while (1)
      {
        unint64_t v17 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v18 = *(unsigned char *)(v13 + v2);
        v16 |= (unint64_t)(v18 & 0x7F) << v14;
        if ((v18 & 0x80) == 0) {
          break;
        }
        v14 += 7;
        unint64_t v2 = v17;
        BOOL v19 = v15++ > 8;
        if (v19) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v25 = v16 & 7;
      if (v25 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v16 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 96) |= 1u;
          unint64_t v26 = *((void *)this + 1);
          if (v26 > 0xFFFFFFFFFFFFFFF7 || v26 + 8 > *((void *)this + 2)) {
            goto LABEL_177;
          }
          *(void *)(a1 + 80) = *(void *)(*(void *)this + v26);
          goto LABEL_179;
        case 2u:
          if (v25 != 2)
          {
            int v82 = *(char **)(a1 + 16);
            unint64_t v81 = *(void *)(a1 + 24);
            if ((unint64_t)v82 >= v81)
            {
              v92 = (char *)*v11;
              uint64_t v93 = (v82 - (unsigned char *)*v11) >> 3;
              unint64_t v94 = v93 + 1;
              if ((unint64_t)(v93 + 1) >> 61) {
LABEL_190:
              }
                sub_227B8B89C();
              uint64_t v95 = v81 - (void)v92;
              if (v95 >> 2 > v94) {
                unint64_t v94 = v95 >> 2;
              }
              if ((unint64_t)v95 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v96 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v96 = v94;
              }
              if (v96)
              {
                v97 = (char *)sub_227B8B8B4(v12, v96);
                v92 = *(char **)(a1 + 8);
                int v82 = *(char **)(a1 + 16);
              }
              else
              {
                v97 = 0;
              }
              v110 = &v97[8 * v93];
              *(void *)v110 = 0;
              unint64_t v83 = v110 + 8;
              while (v82 != v92)
              {
                uint64_t v111 = *((void *)v82 - 1);
                v82 -= 8;
                *((void *)v110 - 1) = v111;
                v110 -= 8;
              }
              *(void *)(a1 + 8) = v110;
              *(void *)(a1 + 16) = v83;
              *(void *)(a1 + 24) = &v97[8 * v96];
              if (v92) {
                operator delete(v92);
              }
            }
            else
            {
              *(void *)int v82 = 0;
              unint64_t v83 = v82 + 8;
            }
            *(void *)(a1 + 16) = v83;
            goto LABEL_175;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v27 = *((void *)this + 1);
          unint64_t v28 = *((void *)this + 2);
          while (v27 < v28 && !*((unsigned char *)this + 24))
          {
            unint64_t v30 = *(char **)(a1 + 16);
            unint64_t v29 = *(void *)(a1 + 24);
            if ((unint64_t)v30 >= v29)
            {
              unint64_t v32 = (char *)*v11;
              uint64_t v33 = (v30 - (unsigned char *)*v11) >> 3;
              unint64_t v34 = v33 + 1;
              if ((unint64_t)(v33 + 1) >> 61) {
                goto LABEL_190;
              }
              uint64_t v35 = v29 - (void)v32;
              if (v35 >> 2 > v34) {
                unint64_t v34 = v35 >> 2;
              }
              if ((unint64_t)v35 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v36 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v36 = v34;
              }
              if (v36)
              {
                unint64_t v37 = (char *)sub_227B8B8B4(v12, v36);
                unint64_t v32 = *(char **)(a1 + 8);
                unint64_t v30 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v37 = 0;
              }
              uint64_t v38 = &v37[8 * v33];
              *(void *)uint64_t v38 = 0;
              unint64_t v31 = v38 + 8;
              while (v30 != v32)
              {
                uint64_t v39 = *((void *)v30 - 1);
                v30 -= 8;
                *((void *)v38 - 1) = v39;
                v38 -= 8;
              }
              *(void *)(a1 + 8) = v38;
              *(void *)(a1 + 16) = v31;
              *(void *)(a1 + 24) = &v37[8 * v36];
              if (v32) {
                operator delete(v32);
              }
            }
            else
            {
              *(void *)unint64_t v30 = 0;
              unint64_t v31 = v30 + 8;
            }
            *(void *)(a1 + 16) = v31;
            unint64_t v40 = *((void *)this + 1);
            if (v40 > 0xFFFFFFFFFFFFFFF7 || v40 + 8 > *((void *)this + 2)) {
              goto LABEL_124;
            }
            *(v31 - 1) = *(void *)(*(void *)this + v40);
            unint64_t v28 = *((void *)this + 2);
            unint64_t v27 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v27;
          }
          goto LABEL_125;
        case 3u:
          if (v25 != 2)
          {
            v85 = *(char **)(a1 + 40);
            unint64_t v84 = *(void *)(a1 + 48);
            if ((unint64_t)v85 >= v84)
            {
              v98 = (char *)*v9;
              uint64_t v99 = (v85 - (unsigned char *)*v9) >> 3;
              unint64_t v100 = v99 + 1;
              if ((unint64_t)(v99 + 1) >> 61) {
LABEL_191:
              }
                sub_227B8B89C();
              uint64_t v101 = v84 - (void)v98;
              if (v101 >> 2 > v100) {
                unint64_t v100 = v101 >> 2;
              }
              if ((unint64_t)v101 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v102 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v102 = v100;
              }
              if (v102)
              {
                v103 = (char *)sub_227B8B8B4(v10, v102);
                v98 = *(char **)(a1 + 32);
                v85 = *(char **)(a1 + 40);
              }
              else
              {
                v103 = 0;
              }
              v112 = &v103[8 * v99];
              *(void *)v112 = 0;
              unint64_t v83 = v112 + 8;
              while (v85 != v98)
              {
                uint64_t v113 = *((void *)v85 - 1);
                v85 -= 8;
                *((void *)v112 - 1) = v113;
                v112 -= 8;
              }
              *(void *)(a1 + 32) = v112;
              *(void *)(a1 + 40) = v83;
              *(void *)(a1 + 48) = &v103[8 * v102];
              if (v98) {
                operator delete(v98);
              }
            }
            else
            {
              *(void *)v85 = 0;
              unint64_t v83 = v85 + 8;
            }
            *(void *)(a1 + 40) = v83;
            goto LABEL_175;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v41 = *((void *)this + 1);
          unint64_t v42 = *((void *)this + 2);
          while (v41 < v42 && !*((unsigned char *)this + 24))
          {
            unint64_t v44 = *(char **)(a1 + 40);
            unint64_t v43 = *(void *)(a1 + 48);
            if ((unint64_t)v44 >= v43)
            {
              uint64_t v46 = (char *)*v9;
              uint64_t v47 = (v44 - (unsigned char *)*v9) >> 3;
              unint64_t v48 = v47 + 1;
              if ((unint64_t)(v47 + 1) >> 61) {
                goto LABEL_191;
              }
              uint64_t v49 = v43 - (void)v46;
              if (v49 >> 2 > v48) {
                unint64_t v48 = v49 >> 2;
              }
              if ((unint64_t)v49 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v50 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v50 = v48;
              }
              if (v50)
              {
                unint64_t v51 = (char *)sub_227B8B8B4(v10, v50);
                uint64_t v46 = *(char **)(a1 + 32);
                unint64_t v44 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v51 = 0;
              }
              int v52 = &v51[8 * v47];
              *(void *)int v52 = 0;
              unint64_t v45 = v52 + 8;
              while (v44 != v46)
              {
                uint64_t v53 = *((void *)v44 - 1);
                v44 -= 8;
                *((void *)v52 - 1) = v53;
                v52 -= 8;
              }
              *(void *)(a1 + 32) = v52;
              *(void *)(a1 + 40) = v45;
              *(void *)(a1 + 48) = &v51[8 * v50];
              if (v46) {
                operator delete(v46);
              }
            }
            else
            {
              *(void *)unint64_t v44 = 0;
              unint64_t v45 = v44 + 8;
            }
            *(void *)(a1 + 40) = v45;
            unint64_t v54 = *((void *)this + 1);
            if (v54 > 0xFFFFFFFFFFFFFFF7 || v54 + 8 > *((void *)this + 2)) {
              goto LABEL_124;
            }
            *(v45 - 1) = *(void *)(*(void *)this + v54);
            unint64_t v42 = *((void *)this + 2);
            unint64_t v41 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v41;
          }
          goto LABEL_125;
        case 4u:
          if (v25 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v55 = *((void *)this + 1);
            unint64_t v56 = *((void *)this + 2);
            while (v55 < v56 && !*((unsigned char *)this + 24))
            {
              unint64_t v58 = *(char **)(a1 + 64);
              unint64_t v57 = *(void *)(a1 + 72);
              if ((unint64_t)v58 >= v57)
              {
                unint64_t v60 = (char *)*v8;
                uint64_t v61 = (v58 - (unsigned char *)*v8) >> 3;
                unint64_t v62 = v61 + 1;
                if ((unint64_t)(v61 + 1) >> 61) {
                  goto LABEL_192;
                }
                uint64_t v63 = v57 - (void)v60;
                if (v63 >> 2 > v62) {
                  unint64_t v62 = v63 >> 2;
                }
                if ((unint64_t)v63 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v64 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v64 = v62;
                }
                if (v64)
                {
                  unint64_t v65 = (char *)sub_227B8B8B4(v119, v64);
                  unint64_t v60 = *(char **)(a1 + 56);
                  unint64_t v58 = *(char **)(a1 + 64);
                }
                else
                {
                  unint64_t v65 = 0;
                }
                uint64_t v66 = &v65[8 * v61];
                *(void *)uint64_t v66 = 0;
                unint64_t v59 = v66 + 8;
                while (v58 != v60)
                {
                  uint64_t v67 = *((void *)v58 - 1);
                  v58 -= 8;
                  *((void *)v66 - 1) = v67;
                  v66 -= 8;
                }
                *(void *)(a1 + 56) = v66;
                *(void *)(a1 + 64) = v59;
                *(void *)(a1 + 72) = &v65[8 * v64];
                if (v60) {
                  operator delete(v60);
                }
              }
              else
              {
                *(void *)unint64_t v58 = 0;
                unint64_t v59 = v58 + 8;
              }
              *(void *)(a1 + 64) = v59;
              unint64_t v68 = *((void *)this + 1);
              if (v68 > 0xFFFFFFFFFFFFFFF7 || v68 + 8 > *((void *)this + 2))
              {
LABEL_124:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v59 - 1) = *(void *)(*(void *)this + v68);
              unint64_t v56 = *((void *)this + 2);
              unint64_t v55 = *((void *)this + 1) + 8;
              *((void *)this + 1) = v55;
            }
LABEL_125:
            PB::Reader::recallMark();
          }
          else
          {
            v87 = *(char **)(a1 + 64);
            unint64_t v86 = *(void *)(a1 + 72);
            if ((unint64_t)v87 >= v86)
            {
              v104 = (char *)*v8;
              uint64_t v105 = (v87 - (unsigned char *)*v8) >> 3;
              unint64_t v106 = v105 + 1;
              if ((unint64_t)(v105 + 1) >> 61) {
LABEL_192:
              }
                sub_227B8B89C();
              uint64_t v107 = v86 - (void)v104;
              if (v107 >> 2 > v106) {
                unint64_t v106 = v107 >> 2;
              }
              if ((unint64_t)v107 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v108 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v108 = v106;
              }
              if (v108)
              {
                v109 = (char *)sub_227B8B8B4(v119, v108);
                v104 = *(char **)(a1 + 56);
                v87 = *(char **)(a1 + 64);
              }
              else
              {
                v109 = 0;
              }
              v114 = &v109[8 * v105];
              *(void *)v114 = 0;
              unint64_t v83 = v114 + 8;
              while (v87 != v104)
              {
                uint64_t v115 = *((void *)v87 - 1);
                v87 -= 8;
                *((void *)v114 - 1) = v115;
                v114 -= 8;
              }
              *(void *)(a1 + 56) = v114;
              *(void *)(a1 + 64) = v83;
              *(void *)(a1 + 72) = &v109[8 * v108];
              if (v104) {
                operator delete(v104);
              }
            }
            else
            {
              *(void *)v87 = 0;
              unint64_t v83 = v87 + 8;
            }
            *(void *)(a1 + 64) = v83;
LABEL_175:
            unint64_t v116 = *((void *)this + 1);
            if (v116 <= 0xFFFFFFFFFFFFFFF7 && v116 + 8 <= *((void *)this + 2))
            {
              *(v83 - 1) = *(void *)(*(void *)this + v116);
LABEL_179:
              *((void *)this + 1) += 8;
            }
            else
            {
LABEL_177:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_180:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        case 5u:
          *(unsigned char *)(a1 + 96) |= 4u;
          unint64_t v69 = *((void *)this + 1);
          if (v69 >= *((void *)this + 2))
          {
            BOOL v72 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v70 = v69 + 1;
            int v71 = *(unsigned __int8 *)(*(void *)this + v69);
            *((void *)this + 1) = v70;
            BOOL v72 = v71 != 0;
          }
          *(unsigned char *)(a1 + 92) = v72;
          goto LABEL_180;
        case 6u:
          *(unsigned char *)(a1 + 96) |= 2u;
          unint64_t v73 = *((void *)this + 1);
          unint64_t v74 = *((void *)this + 2);
          uint64_t v75 = *(void *)this;
          if (v73 <= 0xFFFFFFFFFFFFFFF5 && v73 + 10 <= v74)
          {
            char v76 = 0;
            unsigned int v77 = 0;
            uint64_t v78 = 0;
            do
            {
              unint64_t v79 = v73 + 1;
              *((void *)this + 1) = v73 + 1;
              char v80 = *(unsigned char *)(v75 + v73);
              v78 |= (unint64_t)(v80 & 0x7F) << v76;
              if ((v80 & 0x80) == 0) {
                goto LABEL_153;
              }
              v76 += 7;
              unint64_t v73 = v79;
              BOOL v19 = v77++ > 8;
            }
            while (!v19);
LABEL_123:
            LODWORD(v78) = 0;
            goto LABEL_153;
          }
          char v88 = 0;
          unsigned int v89 = 0;
          uint64_t v78 = 0;
          if (v74 <= v73) {
            unint64_t v74 = *((void *)this + 1);
          }
          while (2)
          {
            if (v74 == v73)
            {
              LODWORD(v78) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v90 = v73 + 1;
              char v91 = *(unsigned char *)(v75 + v73);
              *((void *)this + 1) = v90;
              v78 |= (unint64_t)(v91 & 0x7F) << v88;
              if (v91 < 0)
              {
                v88 += 7;
                unint64_t v73 = v90;
                BOOL v19 = v89++ > 8;
                if (v19) {
                  goto LABEL_123;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v78) = 0;
              }
            }
            break;
          }
LABEL_153:
          *(_DWORD *)(a1 + 88) = v78;
          goto LABEL_180;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_180;
      }
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v16 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v22 = v2 + 1;
      char v23 = *(unsigned char *)(v13 + v2);
      *((void *)this + 1) = v22;
      v16 |= (unint64_t)(v23 & 0x7F) << v20;
      if ((v23 & 0x80) == 0) {
        goto LABEL_21;
      }
      v20 += 7;
      unint64_t v2 = v22;
      if (v21++ >= 9)
      {
LABEL_20:
        unint64_t v16 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C2F18C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  if (*(unsigned char *)(result + 96)) {
    double result = PB::Writer::write(this, *(double *)(result + 80));
  }
  int v4 = *(double **)(v3 + 8);
  uint64_t v5 = *(double **)(v3 + 16);
  while (v4 != v5)
  {
    double v6 = *v4++;
    double result = PB::Writer::write(this, v6);
  }
  double v7 = *(double **)(v3 + 32);
  char v8 = *(double **)(v3 + 40);
  while (v7 != v8)
  {
    double v9 = *v7++;
    double result = PB::Writer::write(this, v9);
  }
  uint64_t v10 = *(double **)(v3 + 56);
  double v11 = *(double **)(v3 + 64);
  while (v10 != v11)
  {
    double v12 = *v10++;
    double result = PB::Writer::write(this, v12);
  }
  char v13 = *(unsigned char *)(v3 + 96);
  if ((v13 & 4) != 0)
  {
    double result = PB::Writer::write(this);
    char v13 = *(unsigned char *)(v3 + 96);
  }
  if ((v13 & 2) != 0)
  {
    return PB::Writer::writeVarInt(this);
  }
  return result;
}

uint64_t sub_227C2F27C(uint64_t result)
{
  *(void *)double result = &unk_26DC25CC0;
  *(_DWORD *)(result + 44) = 0;
  return result;
}

void sub_227C2F2A4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227C2F2DC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC25CC0;
  *(_DWORD *)(a1 + 44) = 0;
  char v2 = *(unsigned char *)(a2 + 44);
  if ((v2 & 2) != 0)
  {
    double result = *(double *)(a2 + 16);
    char v3 = 2;
    *(unsigned char *)(a1 + 44) = 2;
    *(double *)(a1 + 16) = result;
    char v2 = *(unsigned char *)(a2 + 44);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 44) & 4) != 0)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 24);
    v3 |= 4u;
    *(unsigned char *)(a1 + 44) = v3;
    *(void *)(a1 + 24) = v5;
    char v2 = *(unsigned char *)(a2 + 44);
  }
LABEL_6:
  if ((v2 & 0x10) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 36);
    v3 |= 0x10u;
    *(unsigned char *)(a1 + 44) = v3;
    *(_DWORD *)(a1 + 36) = v6;
    char v2 = *(unsigned char *)(a2 + 44);
    if ((v2 & 8) == 0)
    {
LABEL_8:
      if ((v2 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_13;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 32);
  v3 |= 8u;
  *(unsigned char *)(a1 + 44) = v3;
  *(_DWORD *)(a1 + 32) = v7;
  char v2 = *(unsigned char *)(a2 + 44);
  if ((v2 & 0x20) == 0)
  {
LABEL_9:
    if ((v2 & 1) == 0) {
      return result;
    }
LABEL_14:
    double result = *(double *)(a2 + 8);
    *(unsigned char *)(a1 + 44) = v3 | 1;
    *(double *)(a1 + 8) = result;
    return result;
  }
LABEL_13:
  char v8 = *(unsigned char *)(a2 + 40);
  v3 |= 0x20u;
  *(unsigned char *)(a1 + 44) = v3;
  *(unsigned char *)(a1 + 40) = v8;
  if (*(unsigned char *)(a2 + 44)) {
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_227C2F3B0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 8) != 0)
  {
    PB::TextFormatter::format(this, "gestureType");
    char v5 = *(unsigned char *)(a1 + 44);
    if ((v5 & 0x20) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((*(unsigned char *)(a1 + 44) & 0x20) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "hostPowerState");
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 1) == 0)
  {
LABEL_4:
    if ((v5 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  PB::TextFormatter::format(this, "machContinuousTime", *(double *)(a1 + 8));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 2) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(this, "receivedTime", *(double *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_15:
  PB::TextFormatter::format(this, "state");
  if ((*(unsigned char *)(a1 + 44) & 4) != 0) {
LABEL_7:
  }
    PB::TextFormatter::format(this, "timestampPossible");
LABEL_8:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C2F4B4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 44) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_52;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_77;
            case 2u:
              *(unsigned char *)(a1 + 44) |= 4u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v41 = 0;
                unsigned int v42 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    uint64_t v25 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_82;
                  }
                  unint64_t v43 = v21++;
                  char v44 = *(unsigned char *)(v22 + v43);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v44 & 0x7F) << v41;
                  if ((v44 & 0x80) == 0) {
                    break;
                  }
                  v41 += 7;
                  BOOL v14 = v42++ > 8;
                  if (v14)
                  {
                    uint64_t v25 = 0;
LABEL_81:
                    unint64_t v2 = v43 + 1;
                    goto LABEL_82;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v25 = 0;
                }
                goto LABEL_81;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_82;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              uint64_t v25 = 0;
LABEL_82:
              *(void *)(a1 + 24) = v25;
              goto LABEL_93;
            case 3u:
              *(unsigned char *)(a1 + 44) |= 0x10u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v45 = 0;
                unsigned int v46 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_87;
                  }
                  unint64_t v47 = v27++;
                  char v48 = *(unsigned char *)(v28 + v47);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v48 & 0x7F) << v45;
                  if ((v48 & 0x80) == 0) {
                    break;
                  }
                  v45 += 7;
                  BOOL v14 = v46++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_86:
                    unint64_t v2 = v47 + 1;
                    goto LABEL_87;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_86;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_87;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_87:
              *(_DWORD *)(a1 + 36) = v31;
              goto LABEL_93;
            case 4u:
              *(unsigned char *)(a1 + 44) |= 8u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v49 = 0;
                unsigned int v50 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_92;
                  }
                  unint64_t v51 = v33++;
                  char v52 = *(unsigned char *)(v34 + v51);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v52 & 0x7F) << v49;
                  if ((v52 & 0x80) == 0) {
                    break;
                  }
                  v49 += 7;
                  BOOL v14 = v50++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_91:
                    unint64_t v2 = v51 + 1;
                    goto LABEL_92;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_91;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_92;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_92:
              *(_DWORD *)(a1 + 32) = v37;
LABEL_93:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 5u:
              *(unsigned char *)(a1 + 44) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v40 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v39 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v40 = v39 != 0;
              }
              *(unsigned char *)(a1 + 40) = v40;
              goto LABEL_93;
            case 6u:
              *(unsigned char *)(a1 + 44) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
LABEL_77:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_52:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_93;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_93;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C2F9CC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 44);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 16));
    char v4 = *(unsigned char *)(v3 + 44);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((*(unsigned char *)(result + 44) & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 0x10) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x20) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    uint64_t result = PB::Writer::write(this);
    if ((*(unsigned char *)(v3 + 44) & 1) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_11:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 0x20) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v4 & 1) == 0) {
    return result;
  }
LABEL_13:
  double v5 = *(double *)(v3 + 8);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227C2FAAC(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC25CF8;
  *(_DWORD *)(result + 84) = 0;
  return result;
}

void sub_227C2FAD4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C2FB0C(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC25CF8;
  *(_DWORD *)(result + 84) = 0;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 0x10) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 40);
    int v3 = 16;
    *(_DWORD *)(result + 84) = 16;
    *(void *)(result + 40) = v4;
    int v2 = *(_DWORD *)(a2 + 84);
    if ((v2 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 0x20) != 0)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 48);
    v3 |= 0x20u;
    *(_DWORD *)(result + 84) = v3;
    *(void *)(result + 48) = v5;
    int v2 = *(_DWORD *)(a2 + 84);
  }
LABEL_6:
  if ((v2 & 0x200) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 68);
    v3 |= 0x200u;
    *(_DWORD *)(result + 84) = v3;
    *(_DWORD *)(result + 68) = v6;
    int v2 = *(_DWORD *)(a2 + 84);
    if ((v2 & 0x400) == 0)
    {
LABEL_8:
      if ((v2 & 0x800) == 0) {
        goto LABEL_9;
      }
      goto LABEL_25;
    }
  }
  else if ((v2 & 0x400) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 72);
  v3 |= 0x400u;
  *(_DWORD *)(result + 84) = v3;
  *(_DWORD *)(result + 72) = v7;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 0x800) == 0)
  {
LABEL_9:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_25:
  char v8 = *(unsigned char *)(a2 + 76);
  v3 |= 0x800u;
  *(_DWORD *)(result + 84) = v3;
  *(unsigned char *)(result + 76) = v8;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 0x10000) == 0)
  {
LABEL_10:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  char v9 = *(unsigned char *)(a2 + 81);
  v3 |= 0x10000u;
  *(_DWORD *)(result + 84) = v3;
  *(unsigned char *)(result + 81) = v9;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 0x4000) == 0)
  {
LABEL_11:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_27:
  char v10 = *(unsigned char *)(a2 + 79);
  v3 |= 0x4000u;
  *(_DWORD *)(result + 84) = v3;
  *(unsigned char *)(result + 79) = v10;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 0x8000) == 0)
  {
LABEL_12:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_28:
  char v11 = *(unsigned char *)(a2 + 80);
  v3 |= 0x8000u;
  *(_DWORD *)(result + 84) = v3;
  *(unsigned char *)(result + 80) = v11;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 0x2000) == 0)
  {
LABEL_13:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_30;
  }
LABEL_29:
  char v12 = *(unsigned char *)(a2 + 78);
  v3 |= 0x2000u;
  *(_DWORD *)(result + 84) = v3;
  *(unsigned char *)(result + 78) = v12;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 0x20000) == 0)
  {
LABEL_14:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_31;
  }
LABEL_30:
  char v13 = *(unsigned char *)(a2 + 82);
  v3 |= 0x20000u;
  *(_DWORD *)(result + 84) = v3;
  *(unsigned char *)(result + 82) = v13;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 0x1000) == 0)
  {
LABEL_15:
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_32;
  }
LABEL_31:
  char v14 = *(unsigned char *)(a2 + 77);
  v3 |= 0x1000u;
  *(_DWORD *)(result + 84) = v3;
  *(unsigned char *)(result + 77) = v14;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 2) == 0)
  {
LABEL_16:
    if ((v2 & 1) == 0) {
      goto LABEL_17;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t v15 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_DWORD *)(result + 84) = v3;
  *(void *)(result + 16) = v15;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 1) == 0)
  {
LABEL_17:
    if ((v2 & 0x80) == 0) {
      goto LABEL_18;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t v16 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_DWORD *)(result + 84) = v3;
  *(void *)(result + 8) = v16;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 0x80) == 0)
  {
LABEL_18:
    if ((v2 & 8) == 0) {
      goto LABEL_19;
    }
    goto LABEL_35;
  }
LABEL_34:
  int v17 = *(_DWORD *)(a2 + 60);
  v3 |= 0x80u;
  *(_DWORD *)(result + 84) = v3;
  *(_DWORD *)(result + 60) = v17;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 8) == 0)
  {
LABEL_19:
    if ((v2 & 0x100) == 0) {
      goto LABEL_20;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t v18 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_DWORD *)(result + 84) = v3;
  *(void *)(result + 32) = v18;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 0x100) == 0)
  {
LABEL_20:
    if ((v2 & 4) == 0) {
      goto LABEL_21;
    }
    goto LABEL_37;
  }
LABEL_36:
  int v19 = *(_DWORD *)(a2 + 64);
  v3 |= 0x100u;
  *(_DWORD *)(result + 84) = v3;
  *(_DWORD *)(result + 64) = v19;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 4) == 0)
  {
LABEL_21:
    if ((v2 & 0x40) == 0) {
      return result;
    }
LABEL_38:
    int v21 = *(_DWORD *)(a2 + 56);
    *(_DWORD *)(result + 84) = v3 | 0x40;
    *(_DWORD *)(result + 56) = v21;
    return result;
  }
LABEL_37:
  uint64_t v20 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(_DWORD *)(result + 84) = v3;
  *(void *)(result + 24) = v20;
  if ((*(_DWORD *)(a2 + 84) & 0x40) != 0) {
    goto LABEL_38;
  }
  return result;
}

uint64_t sub_227C2FD30(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x40) != 0)
  {
    PB::TextFormatter::format(this, "detectionMode");
    int v5 = *(_DWORD *)(a1 + 84);
    if ((v5 & 0x800) == 0)
    {
LABEL_3:
      if ((v5 & 0x1000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_25;
    }
  }
  else if ((v5 & 0x800) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "detectorRunning");
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x1000) == 0)
  {
LABEL_4:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "enableStateDetected");
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x2000) == 0)
  {
LABEL_5:
    if ((v5 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "fireAll");
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 1) == 0)
  {
LABEL_6:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "gestureDetectionDelay", *(double *)(a1 + 8));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x4000) == 0)
  {
LABEL_7:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "gyroInUse");
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x8000) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(this, "hostAwake");
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "hostWakeCount");
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 2) == 0)
  {
LABEL_10:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(this, "hostWakeDelay", *(double *)(a1 + 16));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x10000) == 0)
  {
LABEL_11:
    if ((v5 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(this, "invertSensors");
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 4) == 0)
  {
LABEL_12:
    if ((v5 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(this, "runningModeDuration", *(double *)(a1 + 24));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 8) == 0)
  {
LABEL_13:
    if ((v5 & 0x100) == 0) {
      goto LABEL_14;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "runningModeStartTime", *(double *)(a1 + 32));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x100) == 0)
  {
LABEL_14:
    if ((v5 & 0x200) == 0) {
      goto LABEL_15;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "runningSwitchCount");
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x200) == 0)
  {
LABEL_15:
    if ((v5 & 0x10) == 0) {
      goto LABEL_16;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "state");
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x10) == 0)
  {
LABEL_16:
    if ((v5 & 0x20) == 0) {
      goto LABEL_17;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 40));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x20) == 0)
  {
LABEL_17:
    if ((v5 & 0x400) == 0) {
      goto LABEL_18;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "timestampPossible", *(double *)(a1 + 48));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x400) == 0)
  {
LABEL_18:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_39:
  PB::TextFormatter::format(this, "type");
  if ((*(_DWORD *)(a1 + 84) & 0x20000) != 0) {
LABEL_19:
  }
    PB::TextFormatter::format(this, "wakePending");
LABEL_20:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C2FFB4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_DWORD *)(a1 + 84) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
              goto LABEL_141;
            case 2u:
              *(_DWORD *)(a1 + 84) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
              goto LABEL_141;
            case 3u:
              *(_DWORD *)(a1 + 84) |= 0x200u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v65 = 0;
                unsigned int v66 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_146;
                  }
                  unint64_t v67 = v21++;
                  char v68 = *(unsigned char *)(v22 + v67);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v68 & 0x7F) << v65;
                  if ((v68 & 0x80) == 0) {
                    break;
                  }
                  v65 += 7;
                  BOOL v14 = v66++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_145:
                    unint64_t v2 = v67 + 1;
                    goto LABEL_146;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_145;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_146;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_146:
              *(_DWORD *)(a1 + 68) = v25;
              goto LABEL_167;
            case 4u:
              *(_DWORD *)(a1 + 84) |= 0x400u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v69 = 0;
                unsigned int v70 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_151;
                  }
                  unint64_t v71 = v27++;
                  char v72 = *(unsigned char *)(v28 + v71);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v72 & 0x7F) << v69;
                  if ((v72 & 0x80) == 0) {
                    break;
                  }
                  v69 += 7;
                  BOOL v14 = v70++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_150:
                    unint64_t v2 = v71 + 1;
                    goto LABEL_151;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_150;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_151;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_151:
              *(_DWORD *)(a1 + 72) = v31;
              goto LABEL_167;
            case 5u:
              *(_DWORD *)(a1 + 84) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v34 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v33 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v34 = v33 != 0;
              }
              *(unsigned char *)(a1 + 76) = v34;
              goto LABEL_167;
            case 6u:
              *(_DWORD *)(a1 + 84) |= 0x10000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v36 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v35 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v36 = v35 != 0;
              }
              *(unsigned char *)(a1 + 81) = v36;
              goto LABEL_167;
            case 7u:
              *(_DWORD *)(a1 + 84) |= 0x4000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v38 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v37 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v38 = v37 != 0;
              }
              *(unsigned char *)(a1 + 79) = v38;
              goto LABEL_167;
            case 8u:
              *(_DWORD *)(a1 + 84) |= 0x8000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v40 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v39 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v40 = v39 != 0;
              }
              *(unsigned char *)(a1 + 80) = v40;
              goto LABEL_167;
            case 9u:
              *(_DWORD *)(a1 + 84) |= 0x2000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v42 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v41 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v42 = v41 != 0;
              }
              *(unsigned char *)(a1 + 78) = v42;
              goto LABEL_167;
            case 0xAu:
              *(_DWORD *)(a1 + 84) |= 0x20000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v44 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v43 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v44 = v43 != 0;
              }
              *(unsigned char *)(a1 + 82) = v44;
              goto LABEL_167;
            case 0xBu:
              *(_DWORD *)(a1 + 84) |= 0x1000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v46 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v45 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v46 = v45 != 0;
              }
              *(unsigned char *)(a1 + 77) = v46;
              goto LABEL_167;
            case 0xCu:
              *(_DWORD *)(a1 + 84) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_141;
            case 0xDu:
              *(_DWORD *)(a1 + 84) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_141;
            case 0xEu:
              *(_DWORD *)(a1 + 84) |= 0x80u;
              unint64_t v47 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v48 = *(void *)this;
              if (v47 > 0xFFFFFFFFFFFFFFF5 || v47 + 10 > v2)
              {
                char v73 = 0;
                unsigned int v74 = 0;
                uint64_t v51 = 0;
                if (v2 <= v47) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v47)
                  {
                    LODWORD(v51) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_156;
                  }
                  unint64_t v75 = v47++;
                  char v76 = *(unsigned char *)(v48 + v75);
                  *((void *)this + 1) = v47;
                  v51 |= (unint64_t)(v76 & 0x7F) << v73;
                  if ((v76 & 0x80) == 0) {
                    break;
                  }
                  v73 += 7;
                  BOOL v14 = v74++ > 8;
                  if (v14)
                  {
                    LODWORD(v51) = 0;
LABEL_155:
                    unint64_t v2 = v75 + 1;
                    goto LABEL_156;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v51) = 0;
                }
                goto LABEL_155;
              }
              char v49 = 0;
              unsigned int v50 = 0;
              uint64_t v51 = 0;
              do
              {
                unint64_t v2 = v47 + 1;
                *((void *)this + 1) = v47 + 1;
                char v52 = *(unsigned char *)(v48 + v47);
                v51 |= (unint64_t)(v52 & 0x7F) << v49;
                if ((v52 & 0x80) == 0) {
                  goto LABEL_156;
                }
                v49 += 7;
                unint64_t v47 = v2;
                BOOL v14 = v50++ > 8;
              }
              while (!v14);
              LODWORD(v51) = 0;
LABEL_156:
              *(_DWORD *)(a1 + 60) = v51;
              goto LABEL_167;
            case 0xFu:
              *(_DWORD *)(a1 + 84) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
              goto LABEL_141;
            case 0x10u:
              *(_DWORD *)(a1 + 84) |= 0x100u;
              unint64_t v53 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v54 = *(void *)this;
              if (v53 > 0xFFFFFFFFFFFFFFF5 || v53 + 10 > v2)
              {
                char v77 = 0;
                unsigned int v78 = 0;
                uint64_t v57 = 0;
                if (v2 <= v53) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v53)
                  {
                    LODWORD(v57) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_161;
                  }
                  unint64_t v79 = v53++;
                  char v80 = *(unsigned char *)(v54 + v79);
                  *((void *)this + 1) = v53;
                  v57 |= (unint64_t)(v80 & 0x7F) << v77;
                  if ((v80 & 0x80) == 0) {
                    break;
                  }
                  v77 += 7;
                  BOOL v14 = v78++ > 8;
                  if (v14)
                  {
                    LODWORD(v57) = 0;
LABEL_160:
                    unint64_t v2 = v79 + 1;
                    goto LABEL_161;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v57) = 0;
                }
                goto LABEL_160;
              }
              char v55 = 0;
              unsigned int v56 = 0;
              uint64_t v57 = 0;
              do
              {
                unint64_t v2 = v53 + 1;
                *((void *)this + 1) = v53 + 1;
                char v58 = *(unsigned char *)(v54 + v53);
                v57 |= (unint64_t)(v58 & 0x7F) << v55;
                if ((v58 & 0x80) == 0) {
                  goto LABEL_161;
                }
                v55 += 7;
                unint64_t v53 = v2;
                BOOL v14 = v56++ > 8;
              }
              while (!v14);
              LODWORD(v57) = 0;
LABEL_161:
              *(_DWORD *)(a1 + 64) = v57;
              goto LABEL_167;
            case 0x11u:
              *(_DWORD *)(a1 + 84) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
LABEL_141:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_83:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_167;
            case 0x12u:
              *(_DWORD *)(a1 + 84) |= 0x40u;
              unint64_t v59 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v60 = *(void *)this;
              if (v59 > 0xFFFFFFFFFFFFFFF5 || v59 + 10 > v2)
              {
                char v81 = 0;
                unsigned int v82 = 0;
                uint64_t v63 = 0;
                if (v2 <= v59) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v59)
                  {
                    LODWORD(v63) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_166;
                  }
                  unint64_t v83 = v59++;
                  char v84 = *(unsigned char *)(v60 + v83);
                  *((void *)this + 1) = v59;
                  v63 |= (unint64_t)(v84 & 0x7F) << v81;
                  if ((v84 & 0x80) == 0) {
                    break;
                  }
                  v81 += 7;
                  BOOL v14 = v82++ > 8;
                  if (v14)
                  {
                    LODWORD(v63) = 0;
LABEL_165:
                    unint64_t v2 = v83 + 1;
                    goto LABEL_166;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v63) = 0;
                }
                goto LABEL_165;
              }
              char v61 = 0;
              unsigned int v62 = 0;
              uint64_t v63 = 0;
              do
              {
                unint64_t v2 = v59 + 1;
                *((void *)this + 1) = v59 + 1;
                char v64 = *(unsigned char *)(v60 + v59);
                v63 |= (unint64_t)(v64 & 0x7F) << v61;
                if ((v64 & 0x80) == 0) {
                  goto LABEL_166;
                }
                v61 += 7;
                unint64_t v59 = v2;
                BOOL v14 = v62++ > 8;
              }
              while (!v14);
              LODWORD(v63) = 0;
LABEL_166:
              *(_DWORD *)(a1 + 56) = v63;
LABEL_167:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_167;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C3094C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 84);
  if ((v4 & 0x10) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 40));
    int v4 = *(_DWORD *)(v3 + 84);
    if ((v4 & 0x20) == 0)
    {
LABEL_3:
      if ((v4 & 0x200) == 0) {
        goto LABEL_4;
      }
      goto LABEL_22;
    }
  }
  else if ((v4 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48));
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 0x200) == 0)
  {
LABEL_4:
    if ((v4 & 0x400) == 0) {
      goto LABEL_5;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 0x400) == 0)
  {
LABEL_5:
    if ((v4 & 0x800) == 0) {
      goto LABEL_6;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 0x800) == 0)
  {
LABEL_6:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 0x10000) == 0)
  {
LABEL_7:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 0x4000) == 0)
  {
LABEL_8:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 0x8000) == 0)
  {
LABEL_9:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 0x2000) == 0)
  {
LABEL_10:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 0x20000) == 0)
  {
LABEL_11:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 0x1000) == 0)
  {
LABEL_12:
    if ((v4 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 2) == 0)
  {
LABEL_13:
    if ((v4 & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 1) == 0)
  {
LABEL_14:
    if ((v4 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 0x80) == 0)
  {
LABEL_15:
    if ((v4 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 8) == 0)
  {
LABEL_16:
    if ((v4 & 0x100) == 0) {
      goto LABEL_17;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32));
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 0x100) == 0)
  {
LABEL_17:
    if ((v4 & 4) == 0) {
      goto LABEL_18;
    }
LABEL_36:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24));
    if ((*(_DWORD *)(v3 + 84) & 0x40) == 0) {
      return result;
    }
    goto LABEL_37;
  }
LABEL_35:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 4) != 0) {
    goto LABEL_36;
  }
LABEL_18:
  if ((v4 & 0x40) == 0) {
    return result;
  }
LABEL_37:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227C30B7C(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC25D30;
  *(_DWORD *)(result + 60) = 0;
  return result;
}

void sub_227C30BA4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C30BDC(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC25D30;
  *(_DWORD *)(result + 60) = 0;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 8) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 24);
    __int16 v3 = 8;
    *(_WORD *)(result + 60) = 8;
    *(_DWORD *)(result + 24) = v4;
    __int16 v2 = *(_WORD *)(a2 + 60);
    if ((v2 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 0x10) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 28);
    v3 |= 0x10u;
    *(_WORD *)(result + 60) = v3;
    *(_DWORD *)(result + 28) = v5;
    __int16 v2 = *(_WORD *)(a2 + 60);
  }
LABEL_6:
  if ((v2 & 0x20) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 32);
    v3 |= 0x20u;
    *(_WORD *)(result + 60) = v3;
    *(_DWORD *)(result + 32) = v6;
    __int16 v2 = *(_WORD *)(a2 + 60);
    if ((v2 & 0x40) == 0)
    {
LABEL_8:
      if ((v2 & 0x200) == 0) {
        goto LABEL_9;
      }
      goto LABEL_22;
    }
  }
  else if ((v2 & 0x40) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 36);
  v3 |= 0x40u;
  *(_WORD *)(result + 60) = v3;
  *(_DWORD *)(result + 36) = v7;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x200) == 0)
  {
LABEL_9:
    if ((v2 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v8 = *(_DWORD *)(a2 + 48);
  v3 |= 0x200u;
  *(_WORD *)(result + 60) = v3;
  *(_DWORD *)(result + 48) = v8;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x100) == 0)
  {
LABEL_10:
    if ((v2 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_24;
  }
LABEL_23:
  int v9 = *(_DWORD *)(a2 + 44);
  v3 |= 0x100u;
  *(_WORD *)(result + 60) = v3;
  *(_DWORD *)(result + 44) = v9;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x400) == 0)
  {
LABEL_11:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v10 = *(_DWORD *)(a2 + 52);
  v3 |= 0x400u;
  *(_WORD *)(result + 60) = v3;
  *(_DWORD *)(result + 52) = v10;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x4000) == 0)
  {
LABEL_12:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_26;
  }
LABEL_25:
  char v11 = *(unsigned char *)(a2 + 59);
  v3 |= 0x4000u;
  *(_WORD *)(result + 60) = v3;
  *(unsigned char *)(result + 59) = v11;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x2000) == 0)
  {
LABEL_13:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_27;
  }
LABEL_26:
  char v12 = *(unsigned char *)(a2 + 58);
  v3 |= 0x2000u;
  *(_WORD *)(result + 60) = v3;
  *(unsigned char *)(result + 58) = v12;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x1000) == 0)
  {
LABEL_14:
    if ((v2 & 1) == 0) {
      goto LABEL_15;
    }
    goto LABEL_28;
  }
LABEL_27:
  char v13 = *(unsigned char *)(a2 + 57);
  v3 |= 0x1000u;
  *(_WORD *)(result + 60) = v3;
  *(unsigned char *)(result + 57) = v13;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 1) == 0)
  {
LABEL_15:
    if ((v2 & 0x800) == 0) {
      goto LABEL_16;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t v14 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(result + 60) = v3;
  *(void *)(result + 8) = v14;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x800) == 0)
  {
LABEL_16:
    if ((v2 & 2) == 0) {
      goto LABEL_17;
    }
    goto LABEL_30;
  }
LABEL_29:
  char v15 = *(unsigned char *)(a2 + 56);
  v3 |= 0x800u;
  *(_WORD *)(result + 60) = v3;
  *(unsigned char *)(result + 56) = v15;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 2) == 0)
  {
LABEL_17:
    if ((v2 & 4) == 0) {
      goto LABEL_18;
    }
    goto LABEL_31;
  }
LABEL_30:
  int v16 = *(_DWORD *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(result + 60) = v3;
  *(_DWORD *)(result + 16) = v16;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 4) == 0)
  {
LABEL_18:
    if ((v2 & 0x80) == 0) {
      return result;
    }
LABEL_32:
    int v18 = *(_DWORD *)(a2 + 40);
    *(_WORD *)(result + 60) = v3 | 0x80;
    *(_DWORD *)(result + 40) = v18;
    return result;
  }
LABEL_31:
  int v17 = *(_DWORD *)(a2 + 20);
  v3 |= 4u;
  *(_WORD *)(result + 60) = v3;
  *(_DWORD *)(result + 20) = v17;
  if ((*(_WORD *)(a2 + 60) & 0x80) != 0) {
    goto LABEL_32;
  }
  return result;
}

uint64_t sub_227C30DAC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "dataRate", *(float *)(a1 + 16));
    __int16 v5 = *(_WORD *)(a1 + 60);
    if ((v5 & 0x800) == 0)
    {
LABEL_3:
      if ((v5 & 0x1000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_22;
    }
  }
  else if ((*(_WORD *)(a1 + 60) & 0x800) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "isInterpolated");
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x1000) == 0)
  {
LABEL_4:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "isMissingSamples");
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x2000) == 0)
  {
LABEL_5:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "isWalkingFiltered");
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x4000) == 0)
  {
LABEL_6:
    if ((v5 & 4) == 0) {
      goto LABEL_7;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "isWalkingRaw");
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "maxSampleDeltaInSecond", *(float *)(a1 + 20));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "pedEnergyPlane", *(float *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "pedEnergyZ", *(float *)(a1 + 28));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x20) == 0)
  {
LABEL_10:
    if ((v5 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "pedEnergyZByPlane", *(float *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x40) == 0)
  {
LABEL_11:
    if ((v5 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(this, "pedEnergyZPeak", *(float *)(a1 + 36));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x80) == 0)
  {
LABEL_12:
    if ((v5 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "reversedTimestampCounts");
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x100) == 0)
  {
LABEL_13:
    if ((v5 & 0x200) == 0) {
      goto LABEL_14;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(this, "thetaPitchFaceDeg", *(float *)(a1 + 44));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x200) == 0)
  {
LABEL_14:
    if ((v5 & 0x400) == 0) {
      goto LABEL_15;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(this, "thetaRollFaceDeg", *(float *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x400) == 0)
  {
LABEL_15:
    if ((v5 & 1) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_33:
  PB::TextFormatter::format(this, "thetaYawFaceDeg", *(float *)(a1 + 52));
  if (*(_WORD *)(a1 + 60)) {
LABEL_16:
  }
    PB::TextFormatter::format(this, "timestamp");
LABEL_17:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C30FD0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 60) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_65;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_96;
            case 2u:
              *(_WORD *)(a1 + 60) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_65;
              }
              *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_96;
            case 3u:
              *(_WORD *)(a1 + 60) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_65;
              }
              *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_96;
            case 4u:
              *(_WORD *)(a1 + 60) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_65;
              }
              *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_96;
            case 5u:
              *(_WORD *)(a1 + 60) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_65;
              }
              *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_96;
            case 6u:
              *(_WORD *)(a1 + 60) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_65;
              }
              *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_96;
            case 7u:
              *(_WORD *)(a1 + 60) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_65;
              }
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_96;
            case 8u:
              *(_WORD *)(a1 + 60) |= 0x4000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v22 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v21 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v22 = v21 != 0;
              }
              *(unsigned char *)(a1 + 59) = v22;
              goto LABEL_107;
            case 9u:
              *(_WORD *)(a1 + 60) |= 0x2000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v24 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v23 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v24 = v23 != 0;
              }
              *(unsigned char *)(a1 + 58) = v24;
              goto LABEL_107;
            case 0xAu:
              *(_WORD *)(a1 + 60) |= 0x1000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v26 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v25 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v26 = v25 != 0;
              }
              *(unsigned char *)(a1 + 57) = v26;
              goto LABEL_107;
            case 0xBu:
              *(_WORD *)(a1 + 60) |= 1u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v41 = 0;
                unsigned int v42 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    uint64_t v31 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_101;
                  }
                  unint64_t v43 = v27++;
                  char v44 = *(unsigned char *)(v28 + v43);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v44 & 0x7F) << v41;
                  if ((v44 & 0x80) == 0) {
                    break;
                  }
                  v41 += 7;
                  BOOL v14 = v42++ > 8;
                  if (v14)
                  {
                    uint64_t v31 = 0;
LABEL_100:
                    unint64_t v2 = v43 + 1;
                    goto LABEL_101;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v31 = 0;
                }
                goto LABEL_100;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_101;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              uint64_t v31 = 0;
LABEL_101:
              *(void *)(a1 + 8) = v31;
              goto LABEL_107;
            case 0xCu:
              *(_WORD *)(a1 + 60) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v34 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v33 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v34 = v33 != 0;
              }
              *(unsigned char *)(a1 + 56) = v34;
              goto LABEL_107;
            case 0xDu:
              *(_WORD *)(a1 + 60) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_65;
              }
              *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_96;
            case 0xEu:
              *(_WORD *)(a1 + 60) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
LABEL_96:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_65:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_107;
            case 0xFu:
              *(_WORD *)(a1 + 60) |= 0x80u;
              unint64_t v35 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v36 = *(void *)this;
              if (v35 > 0xFFFFFFFFFFFFFFF5 || v35 + 10 > v2)
              {
                char v45 = 0;
                unsigned int v46 = 0;
                uint64_t v39 = 0;
                if (v2 <= v35) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v35)
                  {
                    LODWORD(v39) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_106;
                  }
                  unint64_t v47 = v35++;
                  char v48 = *(unsigned char *)(v36 + v47);
                  *((void *)this + 1) = v35;
                  v39 |= (unint64_t)(v48 & 0x7F) << v45;
                  if ((v48 & 0x80) == 0) {
                    break;
                  }
                  v45 += 7;
                  BOOL v14 = v46++ > 8;
                  if (v14)
                  {
                    LODWORD(v39) = 0;
LABEL_105:
                    unint64_t v2 = v47 + 1;
                    goto LABEL_106;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v39) = 0;
                }
                goto LABEL_105;
              }
              char v37 = 0;
              unsigned int v38 = 0;
              uint64_t v39 = 0;
              do
              {
                unint64_t v2 = v35 + 1;
                *((void *)this + 1) = v35 + 1;
                char v40 = *(unsigned char *)(v36 + v35);
                v39 |= (unint64_t)(v40 & 0x7F) << v37;
                if ((v40 & 0x80) == 0) {
                  goto LABEL_106;
                }
                v37 += 7;
                unint64_t v35 = v2;
                BOOL v14 = v38++ > 8;
              }
              while (!v14);
              LODWORD(v39) = 0;
LABEL_106:
              *(_DWORD *)(a1 + 40) = v39;
LABEL_107:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_107;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C31674(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 60);
  if ((v4 & 8) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(result + 24));
    __int16 v4 = *(_WORD *)(v3 + 60);
    if ((v4 & 0x10) == 0)
    {
LABEL_3:
      if ((v4 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v4 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x20) == 0)
  {
LABEL_4:
    if ((v4 & 0x40) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x40) == 0)
  {
LABEL_5:
    if ((v4 & 0x200) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36));
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x200) == 0)
  {
LABEL_6:
    if ((v4 & 0x100) == 0) {
      goto LABEL_7;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48));
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x100) == 0)
  {
LABEL_7:
    if ((v4 & 0x400) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44));
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x400) == 0)
  {
LABEL_8:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x4000) == 0)
  {
LABEL_9:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x2000) == 0)
  {
LABEL_10:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x1000) == 0)
  {
LABEL_11:
    if ((v4 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 1) == 0)
  {
LABEL_12:
    if ((v4 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x800) == 0)
  {
LABEL_13:
    if ((v4 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 2) == 0)
  {
LABEL_14:
    if ((v4 & 4) == 0) {
      goto LABEL_15;
    }
LABEL_30:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
    if ((*(_WORD *)(v3 + 60) & 0x80) == 0) {
      return result;
    }
    goto LABEL_31;
  }
LABEL_29:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16));
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 4) != 0) {
    goto LABEL_30;
  }
LABEL_15:
  if ((v4 & 0x80) == 0) {
    return result;
  }
LABEL_31:

  return PB::Writer::writeVarInt(this);
}

double sub_227C31850(uint64_t a1)
{
  *(void *)a1 = &unk_26DC25D68;
  *(void *)(a1 + 64) = 0;
  *(_DWORD *)(a1 + 244) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(void *)(a1 + 168) = 0;
  return result;
}

void sub_227C31894(PB::Base *this)
{
  *(void *)this = &unk_26DC25D68;
  uint64_t v2 = *((void *)this + 21);
  *((void *)this + 21) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *((void *)this + 20);
  *((void *)this + 20) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  uint64_t v4 = *((void *)this + 19);
  *((void *)this + 19) = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  uint64_t v5 = *((void *)this + 18);
  *((void *)this + 18) = 0;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  uint64_t v6 = *((void *)this + 17);
  *((void *)this + 17) = 0;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  uint64_t v7 = *((void *)this + 16);
  *((void *)this + 16) = 0;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  uint64_t v8 = *((void *)this + 15);
  *((void *)this + 15) = 0;
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
  }
  uint64_t v9 = *((void *)this + 14);
  *((void *)this + 14) = 0;
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
  }
  uint64_t v10 = *((void *)this + 13);
  *((void *)this + 13) = 0;
  if (v10) {
    (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
  }
  uint64_t v11 = *((void *)this + 12);
  *((void *)this + 12) = 0;
  if (v11) {
    (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
  }
  uint64_t v12 = *((void *)this + 11);
  *((void *)this + 11) = 0;
  if (v12) {
    (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
  }
  uint64_t v13 = *((void *)this + 8);
  *((void *)this + 8) = 0;
  if (v13) {
    (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
  }

  PB::Base::~Base(this);
}

void sub_227C31B28(PB::Base *a1)
{
  sub_227C31894(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C31B60(uint64_t result, uint64_t a2)
{
  *(void *)double result = &unk_26DC25D68;
  *(void *)(result + 64) = 0;
  *(_OWORD *)(result + 88) = 0u;
  *(_DWORD *)(result + 244) = 0;
  *(_OWORD *)(result + 104) = 0u;
  *(_OWORD *)(result + 120) = 0u;
  *(_OWORD *)(result + 136) = 0u;
  *(_OWORD *)(result + 152) = 0u;
  *(void *)(result + 168) = 0;
  int v2 = *(_DWORD *)(a2 + 244);
  if ((v2 & 0x100) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 80);
    int v3 = 256;
    *(_DWORD *)(result + 244) = 256;
    *(void *)(result + 80) = v4;
    int v2 = *(_DWORD *)(a2 + 244);
    if ((v2 & 0x80) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 0x80) != 0)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 72);
    v3 |= 0x80u;
    *(_DWORD *)(result + 244) = v3;
    *(void *)(result + 72) = v5;
    int v2 = *(_DWORD *)(a2 + 244);
  }
LABEL_6:
  if ((v2 & 0x10000) != 0)
  {
    int v12 = *(_DWORD *)(a2 + 220);
    v3 |= 0x10000u;
    *(_DWORD *)(result + 244) = v3;
    *(_DWORD *)(result + 220) = v12;
    int v2 = *(_DWORD *)(a2 + 244);
    if ((v2 & 0x8000) == 0)
    {
LABEL_8:
      if ((v2 & 0x40000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_62;
    }
  }
  else if ((v2 & 0x8000) == 0)
  {
    goto LABEL_8;
  }
  int v13 = *(_DWORD *)(a2 + 216);
  v3 |= 0x8000u;
  *(_DWORD *)(result + 244) = v3;
  *(_DWORD *)(result + 216) = v13;
  int v2 = *(_DWORD *)(a2 + 244);
  if ((v2 & 0x40000) == 0)
  {
LABEL_9:
    if ((v2 & 0x2000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_63;
  }
LABEL_62:
  int v14 = *(_DWORD *)(a2 + 228);
  v3 |= 0x40000u;
  *(_DWORD *)(result + 244) = v3;
  *(_DWORD *)(result + 228) = v14;
  int v2 = *(_DWORD *)(a2 + 244);
  if ((v2 & 0x2000000) == 0)
  {
LABEL_10:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_64;
  }
LABEL_63:
  char v15 = *(unsigned char *)(a2 + 241);
  v3 |= 0x2000000u;
  *(_DWORD *)(result + 244) = v3;
  *(unsigned char *)(result + 241) = v15;
  int v2 = *(_DWORD *)(a2 + 244);
  if ((v2 & 0x80000) == 0)
  {
LABEL_11:
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_65;
  }
LABEL_64:
  int v16 = *(_DWORD *)(a2 + 232);
  v3 |= 0x80000u;
  *(_DWORD *)(result + 244) = v3;
  *(_DWORD *)(result + 232) = v16;
  int v2 = *(_DWORD *)(a2 + 244);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_12:
    if ((v2 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_66;
  }
LABEL_65:
  char v17 = *(unsigned char *)(a2 + 242);
  v3 |= 0x4000000u;
  *(_DWORD *)(result + 244) = v3;
  *(unsigned char *)(result + 242) = v17;
  int v2 = *(_DWORD *)(a2 + 244);
  if ((v2 & 0x200) == 0)
  {
LABEL_13:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_66:
  uint64_t v18 = *(void *)(a2 + 176);
  v3 |= 0x200u;
  *(_DWORD *)(result + 244) = v3;
  *(void *)(result + 176) = v18;
  if ((*(_DWORD *)(a2 + 244) & 0x400000) != 0)
  {
LABEL_14:
    char v6 = *(unsigned char *)(a2 + 238);
    *(_DWORD *)(result + 244) = v3 | 0x400000;
    *(unsigned char *)(result + 238) = v6;
  }
LABEL_15:
  if (*(void *)(a2 + 64)) {
    operator new();
  }
  int v7 = *(_DWORD *)(a2 + 244);
  if ((v7 & 0x800) != 0)
  {
    uint64_t v19 = *(void *)(a2 + 192);
    *(_DWORD *)(result + 244) |= 0x800u;
    *(void *)(result + 192) = v19;
    int v7 = *(_DWORD *)(a2 + 244);
    if ((v7 & 0x800000) == 0)
    {
LABEL_19:
      if ((v7 & 0x400) == 0) {
        goto LABEL_20;
      }
      goto LABEL_70;
    }
  }
  else if ((v7 & 0x800000) == 0)
  {
    goto LABEL_19;
  }
  char v20 = *(unsigned char *)(a2 + 239);
  *(_DWORD *)(result + 244) |= 0x800000u;
  *(unsigned char *)(result + 239) = v20;
  int v7 = *(_DWORD *)(a2 + 244);
  if ((v7 & 0x400) == 0)
  {
LABEL_20:
    if ((v7 & 0x200000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
LABEL_70:
  uint64_t v21 = *(void *)(a2 + 184);
  *(_DWORD *)(result + 244) |= 0x400u;
  *(void *)(result + 184) = v21;
  if ((*(_DWORD *)(a2 + 244) & 0x200000) != 0)
  {
LABEL_21:
    char v8 = *(unsigned char *)(a2 + 237);
    *(_DWORD *)(result + 244) |= 0x200000u;
    *(unsigned char *)(result + 237) = v8;
  }
LABEL_22:
  if (*(void *)(a2 + 120)) {
    operator new();
  }
  if (*(void *)(a2 + 112)) {
    operator new();
  }
  if (*(void *)(a2 + 104)) {
    operator new();
  }
  if (*(void *)(a2 + 96)) {
    operator new();
  }
  if (*(void *)(a2 + 152)) {
    operator new();
  }
  if (*(void *)(a2 + 144)) {
    operator new();
  }
  if (*(void *)(a2 + 168)) {
    operator new();
  }
  if (*(void *)(a2 + 160)) {
    operator new();
  }
  if ((*(unsigned char *)(a2 + 246) & 0x10) != 0)
  {
    char v9 = *(unsigned char *)(a2 + 236);
    *(_DWORD *)(result + 244) |= 0x100000u;
    *(unsigned char *)(result + 236) = v9;
  }
  if (*(void *)(a2 + 88)) {
    operator new();
  }
  int v10 = *(_DWORD *)(a2 + 244);
  if (v10)
  {
    uint64_t v22 = *(void *)(a2 + 8);
    *(_DWORD *)(result + 244) |= 1u;
    *(void *)(result + 8) = v22;
    int v10 = *(_DWORD *)(a2 + 244);
    if ((v10 & 8) == 0)
    {
LABEL_44:
      if ((v10 & 0x20000) == 0) {
        goto LABEL_45;
      }
      goto LABEL_74;
    }
  }
  else if ((v10 & 8) == 0)
  {
    goto LABEL_44;
  }
  uint64_t v23 = *(void *)(a2 + 32);
  *(_DWORD *)(result + 244) |= 8u;
  *(void *)(result + 32) = v23;
  int v10 = *(_DWORD *)(a2 + 244);
  if ((v10 & 0x20000) == 0)
  {
LABEL_45:
    if ((v10 & 0x1000000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_75;
  }
LABEL_74:
  int v24 = *(_DWORD *)(a2 + 224);
  *(_DWORD *)(result + 244) |= 0x20000u;
  *(_DWORD *)(result + 224) = v24;
  int v10 = *(_DWORD *)(a2 + 244);
  if ((v10 & 0x1000000) == 0)
  {
LABEL_46:
    if ((v10 & 0x1000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_76;
  }
LABEL_75:
  char v25 = *(unsigned char *)(a2 + 240);
  *(_DWORD *)(result + 244) |= 0x1000000u;
  *(unsigned char *)(result + 240) = v25;
  int v10 = *(_DWORD *)(a2 + 244);
  if ((v10 & 0x1000) == 0)
  {
LABEL_47:
    if ((v10 & 0x40) == 0) {
      goto LABEL_48;
    }
    goto LABEL_77;
  }
LABEL_76:
  uint64_t v26 = *(void *)(a2 + 200);
  *(_DWORD *)(result + 244) |= 0x1000u;
  *(void *)(result + 200) = v26;
  int v10 = *(_DWORD *)(a2 + 244);
  if ((v10 & 0x40) == 0)
  {
LABEL_48:
    if ((v10 & 2) == 0) {
      goto LABEL_49;
    }
    goto LABEL_78;
  }
LABEL_77:
  uint64_t v27 = *(void *)(a2 + 56);
  *(_DWORD *)(result + 244) |= 0x40u;
  *(void *)(result + 56) = v27;
  int v10 = *(_DWORD *)(a2 + 244);
  if ((v10 & 2) == 0)
  {
LABEL_49:
    if ((v10 & 0x10) == 0) {
      goto LABEL_50;
    }
    goto LABEL_79;
  }
LABEL_78:
  uint64_t v28 = *(void *)(a2 + 16);
  *(_DWORD *)(result + 244) |= 2u;
  *(void *)(result + 16) = v28;
  int v10 = *(_DWORD *)(a2 + 244);
  if ((v10 & 0x10) == 0)
  {
LABEL_50:
    if ((v10 & 0x4000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_80;
  }
LABEL_79:
  uint64_t v29 = *(void *)(a2 + 40);
  *(_DWORD *)(result + 244) |= 0x10u;
  *(void *)(result + 40) = v29;
  int v10 = *(_DWORD *)(a2 + 244);
  if ((v10 & 0x4000) == 0)
  {
LABEL_51:
    if ((v10 & 0x2000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_81;
  }
LABEL_80:
  int v30 = *(_DWORD *)(a2 + 212);
  *(_DWORD *)(result + 244) |= 0x4000u;
  *(_DWORD *)(result + 212) = v30;
  int v10 = *(_DWORD *)(a2 + 244);
  if ((v10 & 0x2000) == 0)
  {
LABEL_52:
    if ((v10 & 0x20) == 0) {
      goto LABEL_53;
    }
    goto LABEL_82;
  }
LABEL_81:
  int v31 = *(_DWORD *)(a2 + 208);
  *(_DWORD *)(result + 244) |= 0x2000u;
  *(_DWORD *)(result + 208) = v31;
  int v10 = *(_DWORD *)(a2 + 244);
  if ((v10 & 0x20) == 0)
  {
LABEL_53:
    if ((v10 & 4) == 0) {
      goto LABEL_55;
    }
    goto LABEL_54;
  }
LABEL_82:
  uint64_t v32 = *(void *)(a2 + 48);
  *(_DWORD *)(result + 244) |= 0x20u;
  *(void *)(result + 48) = v32;
  if ((*(_DWORD *)(a2 + 244) & 4) != 0)
  {
LABEL_54:
    uint64_t v11 = *(void *)(a2 + 24);
    *(_DWORD *)(result + 244) |= 4u;
    *(void *)(result + 24) = v11;
  }
LABEL_55:
  if (*(void *)(a2 + 136)) {
    operator new();
  }
  if (*(void *)(a2 + 128)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C32364(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 244);
  if ((v5 & 0x100000) != 0)
  {
    PB::TextFormatter::format(this, "appliedBoutMetricCorrections");
    int v5 = *(_DWORD *)(a1 + 244);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_60;
    }
  }
  else if ((v5 & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "dailyFlights30daysMax", *(double *)(a1 + 8));
  int v5 = *(_DWORD *)(a1 + 244);
  if ((v5 & 2) == 0)
  {
LABEL_4:
    if ((v5 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_61;
  }
LABEL_60:
  PB::TextFormatter::format(this, "dailyFlights30daysMean", *(double *)(a1 + 16));
  int v5 = *(_DWORD *)(a1 + 244);
  if ((v5 & 4) == 0)
  {
LABEL_5:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_62;
  }
LABEL_61:
  PB::TextFormatter::format(this, "dailySteps30DaysTotal", *(double *)(a1 + 24));
  int v5 = *(_DWORD *)(a1 + 244);
  if ((v5 & 8) == 0)
  {
LABEL_6:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_63;
  }
LABEL_62:
  PB::TextFormatter::format(this, "dailySteps30daysMax", *(double *)(a1 + 32));
  int v5 = *(_DWORD *)(a1 + 244);
  if ((v5 & 0x10) == 0)
  {
LABEL_7:
    if ((v5 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_64;
  }
LABEL_63:
  PB::TextFormatter::format(this, "dailySteps30daysMean", *(double *)(a1 + 40));
  int v5 = *(_DWORD *)(a1 + 244);
  if ((v5 & 0x20) == 0)
  {
LABEL_8:
    if ((v5 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_65;
  }
LABEL_64:
  PB::TextFormatter::format(this, "dailySteps7DaysTotal", *(double *)(a1 + 48));
  int v5 = *(_DWORD *)(a1 + 244);
  if ((v5 & 0x40) == 0)
  {
LABEL_9:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_66;
  }
LABEL_65:
  PB::TextFormatter::format(this, "dailySteps7daysMean", *(double *)(a1 + 56));
  int v5 = *(_DWORD *)(a1 + 244);
  if ((v5 & 0x2000) == 0)
  {
LABEL_10:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_67;
  }
LABEL_66:
  PB::TextFormatter::format(this, "daysWithSteps30Days");
  int v5 = *(_DWORD *)(a1 + 244);
  if ((v5 & 0x4000) == 0)
  {
LABEL_11:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_67:
  PB::TextFormatter::format(this, "daysWithSteps7Days");
  if ((*(_DWORD *)(a1 + 244) & 0x8000) != 0) {
LABEL_12:
  }
    PB::TextFormatter::format(this, "errorStatus");
LABEL_13:
  uint64_t v6 = *(void *)(a1 + 64);
  if (v6) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v6 + 32))(v6, this, "eventResult");
  }
  int v7 = *(_DWORD *)(a1 + 244);
  if ((v7 & 0x200000) != 0)
  {
    PB::TextFormatter::format(this, "fusionSuccess");
    int v7 = *(_DWORD *)(a1 + 244);
    if ((v7 & 0x80) == 0)
    {
LABEL_17:
      if ((v7 & 0x100) == 0) {
        goto LABEL_18;
      }
      goto LABEL_71;
    }
  }
  else if ((v7 & 0x80) == 0)
  {
    goto LABEL_17;
  }
  PB::TextFormatter::format(this, "hkEndTime", *(double *)(a1 + 72));
  int v7 = *(_DWORD *)(a1 + 244);
  if ((v7 & 0x100) == 0)
  {
LABEL_18:
    if ((v7 & 0x400000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_71:
  PB::TextFormatter::format(this, "hkStartTime", *(double *)(a1 + 80));
  if ((*(_DWORD *)(a1 + 244) & 0x400000) != 0) {
LABEL_19:
  }
    PB::TextFormatter::format(this, "isHistoricalCompute");
LABEL_20:
  uint64_t v8 = *(void *)(a1 + 88);
  if (v8) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v8 + 32))(v8, this, "modelBalanceFeatures");
  }
  uint64_t v9 = *(void *)(a1 + 96);
  if (v9) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v9 + 32))(v9, this, "modelContinuousWalkingFeatures");
  }
  uint64_t v10 = *(void *)(a1 + 104);
  if (v10) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v10 + 32))(v10, this, "modelContinuousWalkingResult");
  }
  uint64_t v11 = *(void *)(a1 + 112);
  if (v11) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v11 + 32))(v11, this, "modelGaitBaselineFeatures");
  }
  uint64_t v12 = *(void *)(a1 + 120);
  if (v12) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v12 + 32))(v12, this, "modelGaitBaselineResult");
  }
  uint64_t v13 = *(void *)(a1 + 128);
  if (v13) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v13 + 32))(v13, this, "modelHarmonicFeatures");
  }
  uint64_t v14 = *(void *)(a1 + 136);
  if (v14) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v14 + 32))(v14, this, "modelHarmonicResult");
  }
  uint64_t v15 = *(void *)(a1 + 144);
  if (v15) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v15 + 32))(v15, this, "modelTemporalDispersionFeatures");
  }
  uint64_t v16 = *(void *)(a1 + 152);
  if (v16) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v16 + 32))(v16, this, "modelTemporalDispersionResult");
  }
  uint64_t v17 = *(void *)(a1 + 160);
  if (v17) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v17 + 32))(v17, this, "modelTemporalEntropyFeatures");
  }
  uint64_t v18 = *(void *)(a1 + 168);
  if (v18) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v18 + 32))(v18, this, "modelTemporalEntropyResult");
  }
  int v19 = *(_DWORD *)(a1 + 244);
  if ((v19 & 0x200) != 0)
  {
    PB::TextFormatter::format(this, "nextClassificationTime", *(double *)(a1 + 176));
    int v19 = *(_DWORD *)(a1 + 244);
    if ((v19 & 0x400) == 0)
    {
LABEL_44:
      if ((v19 & 0x10000) == 0) {
        goto LABEL_45;
      }
      goto LABEL_75;
    }
  }
  else if ((v19 & 0x400) == 0)
  {
    goto LABEL_44;
  }
  PB::TextFormatter::format(this, "rawSteadiness", *(double *)(a1 + 184));
  int v19 = *(_DWORD *)(a1 + 244);
  if ((v19 & 0x10000) == 0)
  {
LABEL_45:
    if ((v19 & 0x800) == 0) {
      goto LABEL_46;
    }
    goto LABEL_76;
  }
LABEL_75:
  PB::TextFormatter::format(this, "rejectionStatus");
  int v19 = *(_DWORD *)(a1 + 244);
  if ((v19 & 0x800) == 0)
  {
LABEL_46:
    if ((v19 & 0x800000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_77;
  }
LABEL_76:
  PB::TextFormatter::format(this, "steadinessScore", *(double *)(a1 + 192));
  int v19 = *(_DWORD *)(a1 + 244);
  if ((v19 & 0x800000) == 0)
  {
LABEL_47:
    if ((v19 & 0x1000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_78;
  }
LABEL_77:
  PB::TextFormatter::format(this, "steadinessScoreIsValid");
  int v19 = *(_DWORD *)(a1 + 244);
  if ((v19 & 0x1000) == 0)
  {
LABEL_48:
    if ((v19 & 0x20000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_79;
  }
LABEL_78:
  PB::TextFormatter::format(this, "unadjustedScore", *(double *)(a1 + 200));
  int v19 = *(_DWORD *)(a1 + 244);
  if ((v19 & 0x20000) == 0)
  {
LABEL_49:
    if ((v19 & 0x40000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_80;
  }
LABEL_79:
  PB::TextFormatter::format(this, "userAge", *(float *)(a1 + 224));
  int v19 = *(_DWORD *)(a1 + 244);
  if ((v19 & 0x40000) == 0)
  {
LABEL_50:
    if ((v19 & 0x1000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_81;
  }
LABEL_80:
  PB::TextFormatter::format(this, "userHeight", *(float *)(a1 + 228));
  int v19 = *(_DWORD *)(a1 + 244);
  if ((v19 & 0x1000000) == 0)
  {
LABEL_51:
    if ((v19 & 0x2000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_82;
  }
LABEL_81:
  PB::TextFormatter::format(this, "userIsAgeSet");
  int v19 = *(_DWORD *)(a1 + 244);
  if ((v19 & 0x2000000) == 0)
  {
LABEL_52:
    if ((v19 & 0x4000000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_83;
  }
LABEL_82:
  PB::TextFormatter::format(this, "userIsHeightSet");
  int v19 = *(_DWORD *)(a1 + 244);
  if ((v19 & 0x4000000) == 0)
  {
LABEL_53:
    if ((v19 & 0x80000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_54;
  }
LABEL_83:
  PB::TextFormatter::format(this, "userIsWeightSet");
  if ((*(_DWORD *)(a1 + 244) & 0x80000) != 0) {
LABEL_54:
  }
    PB::TextFormatter::format(this, "userWeight", *(float *)(a1 + 232));
LABEL_55:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C329A8(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(_DWORD *)(a1 + 244) |= 0x100u;
          unint64_t v20 = *((void *)this + 1);
          if (v20 > 0xFFFFFFFFFFFFFFF7 || v20 + 8 > *((void *)this + 2)) {
            goto LABEL_124;
          }
          *(void *)(a1 + 80) = *(void *)(*(void *)this + v20);
          goto LABEL_170;
        case 2u:
          *(_DWORD *)(a1 + 244) |= 0x80u;
          unint64_t v21 = *((void *)this + 1);
          if (v21 > 0xFFFFFFFFFFFFFFF7 || v21 + 8 > *((void *)this + 2)) {
            goto LABEL_124;
          }
          *(void *)(a1 + 72) = *(void *)(*(void *)this + v21);
          goto LABEL_170;
        case 4u:
          *(_DWORD *)(a1 + 244) |= 0x10000u;
          unint64_t v23 = *((void *)this + 1);
          unint64_t v24 = *((void *)this + 2);
          uint64_t v25 = *(void *)this;
          if (v23 <= 0xFFFFFFFFFFFFFFF5 && v23 + 10 <= v24)
          {
            char v26 = 0;
            unsigned int v27 = 0;
            uint64_t v28 = 0;
            do
            {
              unint64_t v29 = v23 + 1;
              *((void *)this + 1) = v23 + 1;
              char v30 = *(unsigned char *)(v25 + v23);
              v28 |= (unint64_t)(v30 & 0x7F) << v26;
              if ((v30 & 0x80) == 0) {
                goto LABEL_175;
              }
              v26 += 7;
              unint64_t v23 = v29;
              BOOL v14 = v27++ > 8;
            }
            while (!v14);
LABEL_133:
            LODWORD(v28) = 0;
            goto LABEL_175;
          }
          char v98 = 0;
          unsigned int v99 = 0;
          uint64_t v28 = 0;
          if (v24 <= v23) {
            unint64_t v24 = *((void *)this + 1);
          }
          while (2)
          {
            if (v24 == v23)
            {
              LODWORD(v28) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v100 = v23 + 1;
              char v101 = *(unsigned char *)(v25 + v23);
              *((void *)this + 1) = v100;
              v28 |= (unint64_t)(v101 & 0x7F) << v98;
              if (v101 < 0)
              {
                v98 += 7;
                unint64_t v23 = v100;
                BOOL v14 = v99++ > 8;
                if (v14) {
                  goto LABEL_133;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v28) = 0;
              }
            }
            break;
          }
LABEL_175:
          *(_DWORD *)(a1 + 220) = v28;
          goto LABEL_188;
        case 5u:
          *(_DWORD *)(a1 + 244) |= 0x8000u;
          unint64_t v31 = *((void *)this + 1);
          unint64_t v32 = *((void *)this + 2);
          uint64_t v33 = *(void *)this;
          if (v31 <= 0xFFFFFFFFFFFFFFF5 && v31 + 10 <= v32)
          {
            char v34 = 0;
            unsigned int v35 = 0;
            uint64_t v36 = 0;
            do
            {
              unint64_t v37 = v31 + 1;
              *((void *)this + 1) = v31 + 1;
              char v38 = *(unsigned char *)(v33 + v31);
              v36 |= (unint64_t)(v38 & 0x7F) << v34;
              if ((v38 & 0x80) == 0) {
                goto LABEL_179;
              }
              v34 += 7;
              unint64_t v31 = v37;
              BOOL v14 = v35++ > 8;
            }
            while (!v14);
LABEL_140:
            LODWORD(v36) = 0;
            goto LABEL_179;
          }
          char v102 = 0;
          unsigned int v103 = 0;
          uint64_t v36 = 0;
          if (v32 <= v31) {
            unint64_t v32 = *((void *)this + 1);
          }
          while (2)
          {
            if (v32 == v31)
            {
              LODWORD(v36) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v104 = v31 + 1;
              char v105 = *(unsigned char *)(v33 + v31);
              *((void *)this + 1) = v104;
              v36 |= (unint64_t)(v105 & 0x7F) << v102;
              if (v105 < 0)
              {
                v102 += 7;
                unint64_t v31 = v104;
                BOOL v14 = v103++ > 8;
                if (v14) {
                  goto LABEL_140;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v36) = 0;
              }
            }
            break;
          }
LABEL_179:
          *(_DWORD *)(a1 + 216) = v36;
          goto LABEL_188;
        case 6u:
          *(_DWORD *)(a1 + 244) |= 0x40000u;
          unint64_t v39 = *((void *)this + 1);
          if (v39 > 0xFFFFFFFFFFFFFFFBLL || v39 + 4 > *((void *)this + 2)) {
            goto LABEL_124;
          }
          *(_DWORD *)(a1 + 228) = *(_DWORD *)(*(void *)this + v39);
          goto LABEL_90;
        case 7u:
          *(_DWORD *)(a1 + 244) |= 0x2000000u;
          unint64_t v40 = *((void *)this + 1);
          if (v40 >= *((void *)this + 2))
          {
            BOOL v43 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v41 = v40 + 1;
            int v42 = *(unsigned __int8 *)(*(void *)this + v40);
            *((void *)this + 1) = v41;
            BOOL v43 = v42 != 0;
          }
          *(unsigned char *)(a1 + 241) = v43;
          goto LABEL_188;
        case 8u:
          *(_DWORD *)(a1 + 244) |= 0x80000u;
          unint64_t v44 = *((void *)this + 1);
          if (v44 > 0xFFFFFFFFFFFFFFFBLL || v44 + 4 > *((void *)this + 2)) {
            goto LABEL_124;
          }
          *(_DWORD *)(a1 + 232) = *(_DWORD *)(*(void *)this + v44);
          goto LABEL_90;
        case 9u:
          *(_DWORD *)(a1 + 244) |= 0x4000000u;
          unint64_t v45 = *((void *)this + 1);
          if (v45 >= *((void *)this + 2))
          {
            BOOL v48 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v46 = v45 + 1;
            int v47 = *(unsigned __int8 *)(*(void *)this + v45);
            *((void *)this + 1) = v46;
            BOOL v48 = v47 != 0;
          }
          *(unsigned char *)(a1 + 242) = v48;
          goto LABEL_188;
        case 0xAu:
          *(_DWORD *)(a1 + 244) |= 0x200u;
          unint64_t v49 = *((void *)this + 1);
          if (v49 > 0xFFFFFFFFFFFFFFF7 || v49 + 8 > *((void *)this + 2)) {
            goto LABEL_124;
          }
          *(void *)(a1 + 176) = *(void *)(*(void *)this + v49);
          goto LABEL_170;
        case 0xBu:
          *(_DWORD *)(a1 + 244) |= 0x400000u;
          unint64_t v50 = *((void *)this + 1);
          if (v50 >= *((void *)this + 2))
          {
            BOOL v53 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v51 = v50 + 1;
            int v52 = *(unsigned __int8 *)(*(void *)this + v50);
            *((void *)this + 1) = v51;
            BOOL v53 = v52 != 0;
          }
          *(unsigned char *)(a1 + 238) = v53;
          goto LABEL_188;
        case 0xCu:
          operator new();
        case 0xDu:
          *(_DWORD *)(a1 + 244) |= 0x800u;
          unint64_t v54 = *((void *)this + 1);
          if (v54 > 0xFFFFFFFFFFFFFFF7 || v54 + 8 > *((void *)this + 2)) {
            goto LABEL_124;
          }
          *(void *)(a1 + 192) = *(void *)(*(void *)this + v54);
          goto LABEL_170;
        case 0xEu:
          *(_DWORD *)(a1 + 244) |= 0x800000u;
          unint64_t v55 = *((void *)this + 1);
          if (v55 >= *((void *)this + 2))
          {
            BOOL v58 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v56 = v55 + 1;
            int v57 = *(unsigned __int8 *)(*(void *)this + v55);
            *((void *)this + 1) = v56;
            BOOL v58 = v57 != 0;
          }
          *(unsigned char *)(a1 + 239) = v58;
          goto LABEL_188;
        case 0xFu:
          *(_DWORD *)(a1 + 244) |= 0x400u;
          unint64_t v59 = *((void *)this + 1);
          if (v59 > 0xFFFFFFFFFFFFFFF7 || v59 + 8 > *((void *)this + 2)) {
            goto LABEL_124;
          }
          *(void *)(a1 + 184) = *(void *)(*(void *)this + v59);
          goto LABEL_170;
        case 0x10u:
          *(_DWORD *)(a1 + 244) |= 0x200000u;
          unint64_t v60 = *((void *)this + 1);
          if (v60 >= *((void *)this + 2))
          {
            BOOL v63 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v61 = v60 + 1;
            int v62 = *(unsigned __int8 *)(*(void *)this + v60);
            *((void *)this + 1) = v61;
            BOOL v63 = v62 != 0;
          }
          *(unsigned char *)(a1 + 237) = v63;
          goto LABEL_188;
        case 0x11u:
          operator new();
        case 0x12u:
          operator new();
        case 0x13u:
          operator new();
        case 0x14u:
          operator new();
        case 0x15u:
          operator new();
        case 0x16u:
          operator new();
        case 0x17u:
          operator new();
        case 0x18u:
          operator new();
        case 0x19u:
          *(_DWORD *)(a1 + 244) |= 0x100000u;
          unint64_t v64 = *((void *)this + 1);
          if (v64 >= *((void *)this + 2))
          {
            BOOL v67 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v65 = v64 + 1;
            int v66 = *(unsigned __int8 *)(*(void *)this + v64);
            *((void *)this + 1) = v65;
            BOOL v67 = v66 != 0;
          }
          *(unsigned char *)(a1 + 236) = v67;
          goto LABEL_188;
        case 0x1Au:
          operator new();
        case 0x1Bu:
          *(_DWORD *)(a1 + 244) |= 1u;
          unint64_t v68 = *((void *)this + 1);
          if (v68 > 0xFFFFFFFFFFFFFFF7 || v68 + 8 > *((void *)this + 2)) {
            goto LABEL_124;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v68);
          goto LABEL_170;
        case 0x1Cu:
          *(_DWORD *)(a1 + 244) |= 8u;
          unint64_t v69 = *((void *)this + 1);
          if (v69 > 0xFFFFFFFFFFFFFFF7 || v69 + 8 > *((void *)this + 2)) {
            goto LABEL_124;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v69);
          goto LABEL_170;
        case 0x1Du:
          *(_DWORD *)(a1 + 244) |= 0x20000u;
          unint64_t v70 = *((void *)this + 1);
          if (v70 > 0xFFFFFFFFFFFFFFFBLL || v70 + 4 > *((void *)this + 2)) {
            goto LABEL_124;
          }
          *(_DWORD *)(a1 + 224) = *(_DWORD *)(*(void *)this + v70);
LABEL_90:
          uint64_t v71 = *((void *)this + 1) + 4;
          goto LABEL_171;
        case 0x1Eu:
          *(_DWORD *)(a1 + 244) |= 0x1000000u;
          unint64_t v72 = *((void *)this + 1);
          if (v72 >= *((void *)this + 2))
          {
            BOOL v75 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v73 = v72 + 1;
            int v74 = *(unsigned __int8 *)(*(void *)this + v72);
            *((void *)this + 1) = v73;
            BOOL v75 = v74 != 0;
          }
          *(unsigned char *)(a1 + 240) = v75;
          goto LABEL_188;
        case 0x1Fu:
          *(_DWORD *)(a1 + 244) |= 0x1000u;
          unint64_t v76 = *((void *)this + 1);
          if (v76 > 0xFFFFFFFFFFFFFFF7 || v76 + 8 > *((void *)this + 2)) {
            goto LABEL_124;
          }
          *(void *)(a1 + 200) = *(void *)(*(void *)this + v76);
          goto LABEL_170;
        case 0x20u:
          *(_DWORD *)(a1 + 244) |= 0x40u;
          unint64_t v77 = *((void *)this + 1);
          if (v77 > 0xFFFFFFFFFFFFFFF7 || v77 + 8 > *((void *)this + 2)) {
            goto LABEL_124;
          }
          *(void *)(a1 + 56) = *(void *)(*(void *)this + v77);
          goto LABEL_170;
        case 0x21u:
          *(_DWORD *)(a1 + 244) |= 2u;
          unint64_t v78 = *((void *)this + 1);
          if (v78 > 0xFFFFFFFFFFFFFFF7 || v78 + 8 > *((void *)this + 2)) {
            goto LABEL_124;
          }
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v78);
          goto LABEL_170;
        case 0x22u:
          *(_DWORD *)(a1 + 244) |= 0x10u;
          unint64_t v79 = *((void *)this + 1);
          if (v79 > 0xFFFFFFFFFFFFFFF7 || v79 + 8 > *((void *)this + 2)) {
            goto LABEL_124;
          }
          *(void *)(a1 + 40) = *(void *)(*(void *)this + v79);
          goto LABEL_170;
        case 0x23u:
          *(_DWORD *)(a1 + 244) |= 0x4000u;
          unint64_t v80 = *((void *)this + 1);
          unint64_t v81 = *((void *)this + 2);
          uint64_t v82 = *(void *)this;
          if (v80 <= 0xFFFFFFFFFFFFFFF5 && v80 + 10 <= v81)
          {
            char v83 = 0;
            unsigned int v84 = 0;
            uint64_t v85 = 0;
            do
            {
              unint64_t v86 = v80 + 1;
              *((void *)this + 1) = v80 + 1;
              char v87 = *(unsigned char *)(v82 + v80);
              v85 |= (unint64_t)(v87 & 0x7F) << v83;
              if ((v87 & 0x80) == 0) {
                goto LABEL_183;
              }
              v83 += 7;
              unint64_t v80 = v86;
              BOOL v14 = v84++ > 8;
            }
            while (!v14);
LABEL_161:
            LODWORD(v85) = 0;
            goto LABEL_183;
          }
          char v106 = 0;
          unsigned int v107 = 0;
          uint64_t v85 = 0;
          if (v81 <= v80) {
            unint64_t v81 = *((void *)this + 1);
          }
          while (2)
          {
            if (v81 == v80)
            {
              LODWORD(v85) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v108 = v80 + 1;
              char v109 = *(unsigned char *)(v82 + v80);
              *((void *)this + 1) = v108;
              v85 |= (unint64_t)(v109 & 0x7F) << v106;
              if (v109 < 0)
              {
                v106 += 7;
                unint64_t v80 = v108;
                BOOL v14 = v107++ > 8;
                if (v14) {
                  goto LABEL_161;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v85) = 0;
              }
            }
            break;
          }
LABEL_183:
          *(_DWORD *)(a1 + 212) = v85;
          goto LABEL_188;
        case 0x24u:
          *(_DWORD *)(a1 + 244) |= 0x2000u;
          unint64_t v88 = *((void *)this + 1);
          unint64_t v89 = *((void *)this + 2);
          uint64_t v90 = *(void *)this;
          if (v88 <= 0xFFFFFFFFFFFFFFF5 && v88 + 10 <= v89)
          {
            char v91 = 0;
            unsigned int v92 = 0;
            uint64_t v93 = 0;
            do
            {
              unint64_t v94 = v88 + 1;
              *((void *)this + 1) = v88 + 1;
              char v95 = *(unsigned char *)(v90 + v88);
              v93 |= (unint64_t)(v95 & 0x7F) << v91;
              if ((v95 & 0x80) == 0) {
                goto LABEL_187;
              }
              v91 += 7;
              unint64_t v88 = v94;
              BOOL v14 = v92++ > 8;
            }
            while (!v14);
LABEL_168:
            LODWORD(v93) = 0;
            goto LABEL_187;
          }
          char v110 = 0;
          unsigned int v111 = 0;
          uint64_t v93 = 0;
          if (v89 <= v88) {
            unint64_t v89 = *((void *)this + 1);
          }
          break;
        case 0x25u:
          *(_DWORD *)(a1 + 244) |= 0x20u;
          unint64_t v96 = *((void *)this + 1);
          if (v96 > 0xFFFFFFFFFFFFFFF7 || v96 + 8 > *((void *)this + 2)) {
            goto LABEL_124;
          }
          *(void *)(a1 + 48) = *(void *)(*(void *)this + v96);
          goto LABEL_170;
        case 0x26u:
          *(_DWORD *)(a1 + 244) |= 4u;
          unint64_t v97 = *((void *)this + 1);
          if (v97 <= 0xFFFFFFFFFFFFFFF7 && v97 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 24) = *(void *)(*(void *)this + v97);
LABEL_170:
            uint64_t v71 = *((void *)this + 1) + 8;
LABEL_171:
            *((void *)this + 1) = v71;
          }
          else
          {
LABEL_124:
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_188;
        case 0x27u:
          operator new();
        case 0x28u:
          operator new();
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          goto LABEL_188;
      }
      while (1)
      {
        if (v89 == v88)
        {
          LODWORD(v93) = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_187;
        }
        unint64_t v112 = v88 + 1;
        char v113 = *(unsigned char *)(v90 + v88);
        *((void *)this + 1) = v112;
        v93 |= (unint64_t)(v113 & 0x7F) << v110;
        if ((v113 & 0x80) == 0) {
          break;
        }
        v110 += 7;
        unint64_t v88 = v112;
        BOOL v14 = v111++ > 8;
        if (v14) {
          goto LABEL_168;
        }
      }
      if (*((unsigned char *)this + 24)) {
        LODWORD(v93) = 0;
      }
LABEL_187:
      *(_DWORD *)(a1 + 208) = v93;
LABEL_188:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C33AB8(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 244);
  if ((v4 & 0x100) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 80));
    int v4 = *(_DWORD *)(v3 + 244);
    if ((v4 & 0x80) == 0)
    {
LABEL_3:
      if ((v4 & 0x10000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_60;
    }
  }
  else if ((v4 & 0x80) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 72));
  int v4 = *(_DWORD *)(v3 + 244);
  if ((v4 & 0x10000) == 0)
  {
LABEL_4:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 244);
  if ((v4 & 0x8000) == 0)
  {
LABEL_5:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 244);
  if ((v4 & 0x40000) == 0)
  {
LABEL_6:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 228));
  int v4 = *(_DWORD *)(v3 + 244);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_7:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_64;
  }
LABEL_63:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 244);
  if ((v4 & 0x80000) == 0)
  {
LABEL_8:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_65;
  }
LABEL_64:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 232));
  int v4 = *(_DWORD *)(v3 + 244);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_9:
    if ((v4 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_66;
  }
LABEL_65:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 244);
  if ((v4 & 0x200) == 0)
  {
LABEL_10:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_66:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 176));
  if ((*(_DWORD *)(v3 + 244) & 0x400000) != 0) {
LABEL_11:
  }
    uint64_t result = PB::Writer::write(this);
LABEL_12:
  int v5 = *(const PB::Base **)(v3 + 64);
  if (v5) {
    uint64_t result = PB::Writer::writeSubmessage(this, v5);
  }
  int v6 = *(_DWORD *)(v3 + 244);
  if ((v6 & 0x800) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 192));
    int v6 = *(_DWORD *)(v3 + 244);
    if ((v6 & 0x800000) == 0)
    {
LABEL_16:
      if ((v6 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_70;
    }
  }
  else if ((v6 & 0x800000) == 0)
  {
    goto LABEL_16;
  }
  uint64_t result = PB::Writer::write(this);
  int v6 = *(_DWORD *)(v3 + 244);
  if ((v6 & 0x400) == 0)
  {
LABEL_17:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
LABEL_70:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 184));
  if ((*(_DWORD *)(v3 + 244) & 0x200000) != 0) {
LABEL_18:
  }
    uint64_t result = PB::Writer::write(this);
LABEL_19:
  int v7 = *(const PB::Base **)(v3 + 120);
  if (v7) {
    uint64_t result = PB::Writer::writeSubmessage(this, v7);
  }
  uint64_t v8 = *(const PB::Base **)(v3 + 112);
  if (v8) {
    uint64_t result = PB::Writer::writeSubmessage(this, v8);
  }
  char v9 = *(const PB::Base **)(v3 + 104);
  if (v9) {
    uint64_t result = PB::Writer::writeSubmessage(this, v9);
  }
  unsigned int v10 = *(const PB::Base **)(v3 + 96);
  if (v10) {
    uint64_t result = PB::Writer::writeSubmessage(this, v10);
  }
  unint64_t v11 = *(const PB::Base **)(v3 + 152);
  if (v11) {
    uint64_t result = PB::Writer::writeSubmessage(this, v11);
  }
  unint64_t v12 = *(const PB::Base **)(v3 + 144);
  if (v12) {
    uint64_t result = PB::Writer::writeSubmessage(this, v12);
  }
  char v13 = *(const PB::Base **)(v3 + 168);
  if (v13) {
    uint64_t result = PB::Writer::writeSubmessage(this, v13);
  }
  BOOL v14 = *(const PB::Base **)(v3 + 160);
  if (v14) {
    uint64_t result = PB::Writer::writeSubmessage(this, v14);
  }
  if ((*(unsigned char *)(v3 + 246) & 0x10) != 0) {
    uint64_t result = PB::Writer::write(this);
  }
  char v15 = *(const PB::Base **)(v3 + 88);
  if (v15) {
    uint64_t result = PB::Writer::writeSubmessage(this, v15);
  }
  int v16 = *(_DWORD *)(v3 + 244);
  if (v16)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
    int v16 = *(_DWORD *)(v3 + 244);
    if ((v16 & 8) == 0)
    {
LABEL_41:
      if ((v16 & 0x20000) == 0) {
        goto LABEL_42;
      }
      goto LABEL_74;
    }
  }
  else if ((v16 & 8) == 0)
  {
    goto LABEL_41;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32));
  int v16 = *(_DWORD *)(v3 + 244);
  if ((v16 & 0x20000) == 0)
  {
LABEL_42:
    if ((v16 & 0x1000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_75;
  }
LABEL_74:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 224));
  int v16 = *(_DWORD *)(v3 + 244);
  if ((v16 & 0x1000000) == 0)
  {
LABEL_43:
    if ((v16 & 0x1000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_76;
  }
LABEL_75:
  uint64_t result = PB::Writer::write(this);
  int v16 = *(_DWORD *)(v3 + 244);
  if ((v16 & 0x1000) == 0)
  {
LABEL_44:
    if ((v16 & 0x40) == 0) {
      goto LABEL_45;
    }
    goto LABEL_77;
  }
LABEL_76:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 200));
  int v16 = *(_DWORD *)(v3 + 244);
  if ((v16 & 0x40) == 0)
  {
LABEL_45:
    if ((v16 & 2) == 0) {
      goto LABEL_46;
    }
    goto LABEL_78;
  }
LABEL_77:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 56));
  int v16 = *(_DWORD *)(v3 + 244);
  if ((v16 & 2) == 0)
  {
LABEL_46:
    if ((v16 & 0x10) == 0) {
      goto LABEL_47;
    }
    goto LABEL_79;
  }
LABEL_78:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  int v16 = *(_DWORD *)(v3 + 244);
  if ((v16 & 0x10) == 0)
  {
LABEL_47:
    if ((v16 & 0x4000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_80;
  }
LABEL_79:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40));
  int v16 = *(_DWORD *)(v3 + 244);
  if ((v16 & 0x4000) == 0)
  {
LABEL_48:
    if ((v16 & 0x2000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_81;
  }
LABEL_80:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v16 = *(_DWORD *)(v3 + 244);
  if ((v16 & 0x2000) == 0)
  {
LABEL_49:
    if ((v16 & 0x20) == 0) {
      goto LABEL_50;
    }
    goto LABEL_82;
  }
LABEL_81:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v16 = *(_DWORD *)(v3 + 244);
  if ((v16 & 0x20) == 0)
  {
LABEL_50:
    if ((v16 & 4) == 0) {
      goto LABEL_52;
    }
    goto LABEL_51;
  }
LABEL_82:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48));
  if ((*(_DWORD *)(v3 + 244) & 4) != 0) {
LABEL_51:
  }
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24));
LABEL_52:
  unint64_t v17 = *(const PB::Base **)(v3 + 136);
  if (v17) {
    uint64_t result = PB::Writer::writeSubmessage(this, v17);
  }
  char v18 = *(const PB::Base **)(v3 + 128);
  if (v18)
  {
    return PB::Writer::writeSubmessage(this, v18);
  }
  return result;
}

uint64_t sub_227C33ED4(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC25DA0;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

void sub_227C33EFC(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227C33F34(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC25DA0;
  *(_DWORD *)(a1 + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 28);
  if ((v2 & 4) != 0)
  {
    LODWORD(result) = *(_DWORD *)(a2 + 24);
    char v3 = 4;
    *(unsigned char *)(a1 + 28) = 4;
    *(_DWORD *)(a1 + 24) = LODWORD(result);
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 28) & 2) != 0)
  {
LABEL_5:
    double result = *(double *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(a1 + 28) = v3;
    *(double *)(a1 + 16) = result;
    char v2 = *(unsigned char *)(a2 + 28);
  }
LABEL_6:
  if (v2)
  {
    double result = *(double *)(a2 + 8);
    *(unsigned char *)(a1 + 28) = v3 | 1;
    *(double *)(a1 + 8) = result;
  }
  return result;
}

uint64_t sub_227C33FB4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "calories_kCal", *(float *)(a1 + 24));
    char v5 = *(unsigned char *)(a1 + 28);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((*(unsigned char *)(a1 + 28) & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "globalMachtime", *(double *)(a1 + 8));
  if ((*(unsigned char *)(a1 + 28) & 2) != 0) {
LABEL_4:
  }
    PB::TextFormatter::format(this, "localMachtime", *(double *)(a1 + 16));
LABEL_5:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C34058(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
        return v4 == 0;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 3) {
        break;
      }
      if (v20 == 2)
      {
        *(unsigned char *)(a1 + 28) |= 2u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
          goto LABEL_32;
        }
        *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
LABEL_36:
        unint64_t v2 = *((void *)this + 1) + 8;
        goto LABEL_37;
      }
      if (v20 != 1)
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
        goto LABEL_38;
      }
      *(unsigned char *)(a1 + 28) |= 4u;
      unint64_t v2 = *((void *)this + 1);
      if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2))
      {
LABEL_32:
        *((unsigned char *)this + 24) = 1;
        goto LABEL_38;
      }
      *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
      unint64_t v2 = *((void *)this + 1) + 4;
LABEL_37:
      *((void *)this + 1) = v2;
LABEL_38:
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    *(unsigned char *)(a1 + 28) |= 1u;
    unint64_t v2 = *((void *)this + 1);
    if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
      goto LABEL_32;
    }
    *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
    goto LABEL_36;
  }
  return v4 == 0;
}

uint64_t sub_227C3427C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if ((v4 & 4) == 0)
  {
    if ((*(unsigned char *)(result + 28) & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
    if ((*(unsigned char *)(v3 + 28) & 1) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(result + 24));
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v4 & 1) == 0) {
    return result;
  }
LABEL_7:
  double v5 = *(double *)(v3 + 8);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227C34308(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC25DD8;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

void sub_227C34330(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227C34368(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC25DD8;
  *(_DWORD *)(a1 + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 28);
  if ((v2 & 4) != 0)
  {
    LODWORD(result) = *(_DWORD *)(a2 + 24);
    char v3 = 4;
    *(unsigned char *)(a1 + 28) = 4;
    *(_DWORD *)(a1 + 24) = LODWORD(result);
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 28) & 2) != 0)
  {
LABEL_5:
    double result = *(double *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(a1 + 28) = v3;
    *(double *)(a1 + 16) = result;
    char v2 = *(unsigned char *)(a2 + 28);
  }
LABEL_6:
  if (v2)
  {
    double result = *(double *)(a2 + 8);
    *(unsigned char *)(a1 + 28) = v3 | 1;
    *(double *)(a1 + 8) = result;
  }
  return result;
}

uint64_t sub_227C343E8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "calories_kCal", *(float *)(a1 + 24));
    char v5 = *(unsigned char *)(a1 + 28);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((*(unsigned char *)(a1 + 28) & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "globalMachtime", *(double *)(a1 + 8));
  if ((*(unsigned char *)(a1 + 28) & 2) != 0) {
LABEL_4:
  }
    PB::TextFormatter::format(this, "localMachtime", *(double *)(a1 + 16));
LABEL_5:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C3448C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
        return v4 == 0;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 3) {
        break;
      }
      if (v20 == 2)
      {
        *(unsigned char *)(a1 + 28) |= 2u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
          goto LABEL_32;
        }
        *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
LABEL_36:
        unint64_t v2 = *((void *)this + 1) + 8;
        goto LABEL_37;
      }
      if (v20 != 1)
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
        goto LABEL_38;
      }
      *(unsigned char *)(a1 + 28) |= 4u;
      unint64_t v2 = *((void *)this + 1);
      if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2))
      {
LABEL_32:
        *((unsigned char *)this + 24) = 1;
        goto LABEL_38;
      }
      *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
      unint64_t v2 = *((void *)this + 1) + 4;
LABEL_37:
      *((void *)this + 1) = v2;
LABEL_38:
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    *(unsigned char *)(a1 + 28) |= 1u;
    unint64_t v2 = *((void *)this + 1);
    if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
      goto LABEL_32;
    }
    *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
    goto LABEL_36;
  }
  return v4 == 0;
}

uint64_t sub_227C346B0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if ((v4 & 4) == 0)
  {
    if ((*(unsigned char *)(result + 28) & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
    if ((*(unsigned char *)(v3 + 28) & 1) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(result + 24));
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v4 & 1) == 0) {
    return result;
  }
LABEL_7:
  double v5 = *(double *)(v3 + 8);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227C3473C(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC25E10;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void sub_227C34764(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C3479C(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC25E10;
  *(_DWORD *)(result + 24) = 0;
  if ((*(unsigned char *)(a2 + 24) & 2) != 0)
  {
    uint64_t v3 = *(void *)(a2 + 16);
    *(unsigned char *)(result + 24) = 2;
    *(void *)(result + 16) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 24) & 1) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 1;
  if (*(unsigned char *)(a2 + 24))
  {
LABEL_5:
    uint64_t v4 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 24) = v2;
    *(void *)(result + 8) = v4;
  }
  return result;
}

uint64_t sub_227C34800(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 24);
  if (v5)
  {
    PB::TextFormatter::format(this, "enclosureMaterial");
    char v5 = *(unsigned char *)(a1 + 24);
  }
  if ((v5 & 2) != 0) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 16));
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C3487C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 24) |= 1u;
        unint64_t v20 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v21 = *(void *)this;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v24 = 0;
          if (v2 <= v20) {
            unint64_t v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v20)
            {
              uint64_t v24 = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_47;
            }
            unint64_t v29 = v20++;
            char v30 = *(unsigned char *)(v21 + v29);
            *((void *)this + 1) = v20;
            v24 |= (unint64_t)(v30 & 0x7F) << v27;
            if ((v30 & 0x80) == 0) {
              break;
            }
            v27 += 7;
            BOOL v14 = v28++ > 8;
            if (v14)
            {
              uint64_t v24 = 0;
              goto LABEL_46;
            }
          }
          if (*((unsigned char *)this + 24)) {
            uint64_t v24 = 0;
          }
LABEL_46:
          unint64_t v2 = v29 + 1;
        }
        else
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          while (1)
          {
            unint64_t v2 = v20 + 1;
            *((void *)this + 1) = v20 + 1;
            char v25 = *(unsigned char *)(v21 + v20);
            v24 |= (unint64_t)(v25 & 0x7F) << v22;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v22 += 7;
            unint64_t v20 = v2;
            BOOL v14 = v23++ > 8;
            if (v14)
            {
              uint64_t v24 = 0;
              break;
            }
          }
        }
LABEL_47:
        *(void *)(a1 + 8) = v24;
      }
      else if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 24) |= 2u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C34B0C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 24);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 16));
    char v4 = *(unsigned char *)(v3 + 24);
  }
  if (v4)
  {
    return PB::Writer::writeVarInt(this);
  }
  return result;
}

uint64_t sub_227C34B78(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC25E48;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void sub_227C34BA0(PB::Base *this)
{
  *(void *)this = &unk_26DC25E48;
  uint64_t v2 = *((void *)this + 3);
  *((void *)this + 3) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C34C24(PB::Base *a1)
{
  sub_227C34BA0(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C34C5C(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC25E48;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  if ((*(unsigned char *)(a2 + 32) & 2) != 0)
  {
    uint64_t v3 = *(void *)(a2 + 16);
    *(unsigned char *)(result + 32) = 2;
    *(void *)(result + 16) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 32) & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v2 = 1;
  if (*(unsigned char *)(a2 + 32))
  {
LABEL_5:
    uint64_t v4 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 32) = v2;
    *(void *)(result + 8) = v4;
  }
LABEL_6:
  if (*(void *)(a2 + 24)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C34D48(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 32);
  if (v5)
  {
    PB::TextFormatter::format(this, "globalMachtime", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 32);
  }
  if ((v5 & 2) != 0) {
    PB::TextFormatter::format(this, "localMachtime", *(double *)(a1 + 16));
  }
  uint64_t v6 = *(void *)(a1 + 24);
  if (v6) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v6 + 32))(v6, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C34DFC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    do
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
        return v4 == 0;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 3) {
        operator new();
      }
      if (v20 == 2)
      {
        *(unsigned char *)(a1 + 32) |= 1u;
        unint64_t v22 = *((void *)this + 1);
        if (v22 > 0xFFFFFFFFFFFFFFF7 || v22 + 8 > *((void *)this + 2)) {
          goto LABEL_30;
        }
        *(void *)(a1 + 8) = *(void *)(*(void *)this + v22);
      }
      else
      {
        if (v20 != 1)
        {
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          goto LABEL_35;
        }
        *(unsigned char *)(a1 + 32) |= 2u;
        unint64_t v21 = *((void *)this + 1);
        if (v21 > 0xFFFFFFFFFFFFFFF7 || v21 + 8 > *((void *)this + 2))
        {
LABEL_30:
          *((unsigned char *)this + 24) = 1;
          goto LABEL_35;
        }
        *(void *)(a1 + 16) = *(void *)(*(void *)this + v21);
      }
      *((void *)this + 1) += 8;
LABEL_35:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
    }
    while (v2 < v3 && !*((unsigned char *)this + 24));
  }
  return v4 == 0;
}

uint64_t sub_227C35090(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 16));
    char v4 = *(unsigned char *)(v3 + 32);
  }
  if (v4) {
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
  }
  char v5 = *(const PB::Base **)(v3 + 24);
  if (v5)
  {
    return PB::Writer::writeSubmessage(this, v5);
  }
  return result;
}

uint64_t sub_227C35110(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC25E80;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void sub_227C35138(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C35170(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC25E80;
  *(_DWORD *)(result + 40) = 0;
  char v2 = *(unsigned char *)(a2 + 40);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 40) = 1;
    *(void *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 40);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 40) & 4) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 24);
    v3 |= 4u;
    *(unsigned char *)(result + 40) = v3;
    *(_DWORD *)(result + 24) = v5;
    char v2 = *(unsigned char *)(a2 + 40);
  }
LABEL_6:
  if ((v2 & 0x10) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 32);
    v3 |= 0x10u;
    *(unsigned char *)(result + 40) = v3;
    *(_DWORD *)(result + 32) = v6;
    char v2 = *(unsigned char *)(a2 + 40);
    if ((v2 & 8) == 0)
    {
LABEL_8:
      if ((v2 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_15;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 28);
  v3 |= 8u;
  *(unsigned char *)(result + 40) = v3;
  *(_DWORD *)(result + 28) = v7;
  char v2 = *(unsigned char *)(a2 + 40);
  if ((v2 & 0x40) == 0)
  {
LABEL_9:
    if ((v2 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_16;
  }
LABEL_15:
  char v8 = *(unsigned char *)(a2 + 37);
  v3 |= 0x40u;
  *(unsigned char *)(result + 40) = v3;
  *(unsigned char *)(result + 37) = v8;
  char v2 = *(unsigned char *)(a2 + 40);
  if ((v2 & 0x20) == 0)
  {
LABEL_10:
    if ((v2 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_17;
  }
LABEL_16:
  char v9 = *(unsigned char *)(a2 + 36);
  v3 |= 0x20u;
  *(unsigned char *)(result + 40) = v3;
  *(unsigned char *)(result + 36) = v9;
  char v2 = *(unsigned char *)(a2 + 40);
  if ((v2 & 0x80) == 0)
  {
LABEL_11:
    if ((v2 & 2) == 0) {
      return result;
    }
LABEL_18:
    uint64_t v11 = *(void *)(a2 + 16);
    *(unsigned char *)(result + 40) = v3 | 2;
    *(void *)(result + 16) = v11;
    return result;
  }
LABEL_17:
  char v10 = *(unsigned char *)(a2 + 38);
  v3 |= 0x80u;
  *(unsigned char *)(result + 40) = v3;
  *(unsigned char *)(result + 38) = v10;
  if ((*(unsigned char *)(a2 + 40) & 2) != 0) {
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_227C3527C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 40);
  if (v5)
  {
    PB::TextFormatter::format(this, "date", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 40);
    if ((v5 & 0x20) == 0)
    {
LABEL_3:
      if ((v5 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((*(unsigned char *)(a1 + 40) & 0x20) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "isForcedOnWristEnabled");
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 0x40) == 0)
  {
LABEL_4:
    if ((v5 & 0x80) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  PB::TextFormatter::format(this, "isOnCharger");
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 0x80) == 0)
  {
LABEL_5:
    if ((v5 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "isWristDetectionEnabled");
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 4) == 0)
  {
LABEL_6:
    if ((v5 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  PB::TextFormatter::format(this, "onWrist");
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 8) == 0)
  {
LABEL_7:
    if ((v5 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "onWristConfidence");
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 0x10) == 0)
  {
LABEL_8:
    if ((v5 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_19:
  PB::TextFormatter::format(this, "onWristSensor");
  if ((*(unsigned char *)(a1 + 40) & 2) != 0) {
LABEL_9:
  }
    PB::TextFormatter::format(this, "timestamp");
LABEL_10:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C353C0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 40) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_116;
            case 2u:
              *(unsigned char *)(a1 + 40) |= 4u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v51 = 0;
                unsigned int v52 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_100;
                  }
                  unint64_t v53 = v21++;
                  char v54 = *(unsigned char *)(v22 + v53);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v54 & 0x7F) << v51;
                  if ((v54 & 0x80) == 0) {
                    break;
                  }
                  v51 += 7;
                  BOOL v14 = v52++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_99:
                    unint64_t v2 = v53 + 1;
                    goto LABEL_100;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_99;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_100;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_100:
              *(_DWORD *)(a1 + 24) = v25;
              goto LABEL_116;
            case 3u:
              *(unsigned char *)(a1 + 40) |= 0x10u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v55 = 0;
                unsigned int v56 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_105;
                  }
                  unint64_t v57 = v27++;
                  char v58 = *(unsigned char *)(v28 + v57);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v58 & 0x7F) << v55;
                  if ((v58 & 0x80) == 0) {
                    break;
                  }
                  v55 += 7;
                  BOOL v14 = v56++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_104:
                    unint64_t v2 = v57 + 1;
                    goto LABEL_105;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_104;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_105;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_105:
              *(_DWORD *)(a1 + 32) = v31;
              goto LABEL_116;
            case 4u:
              *(unsigned char *)(a1 + 40) |= 8u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v59 = 0;
                unsigned int v60 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_110;
                  }
                  unint64_t v61 = v33++;
                  char v62 = *(unsigned char *)(v34 + v61);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v62 & 0x7F) << v59;
                  if ((v62 & 0x80) == 0) {
                    break;
                  }
                  v59 += 7;
                  BOOL v14 = v60++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_109:
                    unint64_t v2 = v61 + 1;
                    goto LABEL_110;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_109;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_110;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_110:
              *(_DWORD *)(a1 + 28) = v37;
              goto LABEL_116;
            case 5u:
              *(unsigned char *)(a1 + 40) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v40 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v39 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v40 = v39 != 0;
              }
              *(unsigned char *)(a1 + 37) = v40;
              goto LABEL_116;
            case 6u:
              *(unsigned char *)(a1 + 40) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v42 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v41 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v42 = v41 != 0;
              }
              *(unsigned char *)(a1 + 36) = v42;
              goto LABEL_116;
            case 7u:
              *(unsigned char *)(a1 + 40) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v44 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v43 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v44 = v43 != 0;
              }
              *(unsigned char *)(a1 + 38) = v44;
              goto LABEL_116;
            case 8u:
              *(unsigned char *)(a1 + 40) |= 2u;
              unint64_t v45 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v46 = *(void *)this;
              if (v45 > 0xFFFFFFFFFFFFFFF5 || v45 + 10 > v2)
              {
                char v63 = 0;
                unsigned int v64 = 0;
                uint64_t v49 = 0;
                if (v2 <= v45) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v45)
                  {
                    uint64_t v49 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_115;
                  }
                  unint64_t v65 = v45++;
                  char v66 = *(unsigned char *)(v46 + v65);
                  *((void *)this + 1) = v45;
                  v49 |= (unint64_t)(v66 & 0x7F) << v63;
                  if ((v66 & 0x80) == 0) {
                    break;
                  }
                  v63 += 7;
                  BOOL v14 = v64++ > 8;
                  if (v14)
                  {
                    uint64_t v49 = 0;
LABEL_114:
                    unint64_t v2 = v65 + 1;
                    goto LABEL_115;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v49 = 0;
                }
                goto LABEL_114;
              }
              char v47 = 0;
              unsigned int v48 = 0;
              uint64_t v49 = 0;
              do
              {
                unint64_t v2 = v45 + 1;
                *((void *)this + 1) = v45 + 1;
                char v50 = *(unsigned char *)(v46 + v45);
                v49 |= (unint64_t)(v50 & 0x7F) << v47;
                if ((v50 & 0x80) == 0) {
                  goto LABEL_115;
                }
                v47 += 7;
                unint64_t v45 = v2;
                BOOL v14 = v48++ > 8;
              }
              while (!v14);
              uint64_t v49 = 0;
LABEL_115:
              *(void *)(a1 + 16) = v49;
LABEL_116:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_116;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C35A1C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 40);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 40);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(result + 40) & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 0x10) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 0x40) == 0)
  {
LABEL_6:
    if ((v4 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = PB::Writer::write(this);
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 0x20) == 0)
  {
LABEL_7:
    if ((v4 & 0x80) == 0) {
      goto LABEL_8;
    }
LABEL_16:
    uint64_t result = PB::Writer::write(this);
    if ((*(unsigned char *)(v3 + 40) & 2) == 0) {
      return result;
    }
    goto LABEL_17;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this);
  char v4 = *(unsigned char *)(v3 + 40);
  if (v4 < 0) {
    goto LABEL_16;
  }
LABEL_8:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_17:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227C35B34(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC25EB8;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void sub_227C35B5C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C35B94(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC25EB8;
  *(_DWORD *)(result + 16) = 0;
  if ((*(unsigned char *)(a2 + 16) & 2) != 0)
  {
    int v3 = *(_DWORD *)(a2 + 12);
    *(unsigned char *)(result + 16) = 2;
    *(_DWORD *)(result + 12) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 16) & 1) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 1;
  if (*(unsigned char *)(a2 + 16))
  {
LABEL_5:
    int v4 = *(_DWORD *)(a2 + 8);
    *(unsigned char *)(result + 16) = v2;
    *(_DWORD *)(result + 8) = v4;
  }
  return result;
}

uint64_t sub_227C35BF8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 16);
  if (v5)
  {
    PB::TextFormatter::format(this, "crown");
    char v5 = *(unsigned char *)(a1 + 16);
  }
  if ((v5 & 2) != 0) {
    PB::TextFormatter::format(this, "wrist");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C35C74(uint64_t a1, PB::Reader *this)
{
  unint64_t v3 = *((void *)this + 1);
  unint64_t v2 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v3 < v2 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v3 > 0xFFFFFFFFFFFFFFF5 || v3 + 10 > v2) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v3 + 1;
        *((void *)this + 1) = v3 + 1;
        char v13 = *(unsigned char *)(v8 + v3);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v3 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 16) |= 1u;
        unint64_t v26 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v27 = *(void *)this;
        if (v26 > 0xFFFFFFFFFFFFFFF5 || v26 + 10 > v2)
        {
          char v37 = 0;
          unsigned int v38 = 0;
          uint64_t v30 = 0;
          if (v2 <= v26) {
            unint64_t v3 = *((void *)this + 1);
          }
          else {
            unint64_t v3 = *((void *)this + 2);
          }
          while (1)
          {
            if (v3 == v26)
            {
              LODWORD(v30) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_64;
            }
            unint64_t v39 = v26++;
            char v40 = *(unsigned char *)(v27 + v39);
            *((void *)this + 1) = v26;
            v30 |= (unint64_t)(v40 & 0x7F) << v37;
            if ((v40 & 0x80) == 0) {
              break;
            }
            v37 += 7;
            BOOL v14 = v38++ > 8;
            if (v14)
            {
              LODWORD(v30) = 0;
              goto LABEL_63;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v30) = 0;
          }
LABEL_63:
          unint64_t v3 = v39 + 1;
        }
        else
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v30 = 0;
          while (1)
          {
            unint64_t v3 = v26 + 1;
            *((void *)this + 1) = v26 + 1;
            char v31 = *(unsigned char *)(v27 + v26);
            v30 |= (unint64_t)(v31 & 0x7F) << v28;
            if ((v31 & 0x80) == 0) {
              break;
            }
            v28 += 7;
            unint64_t v26 = v3;
            BOOL v14 = v29++ > 8;
            if (v14)
            {
              LODWORD(v30) = 0;
              break;
            }
          }
        }
LABEL_64:
        *(_DWORD *)(a1 + 8) = v30;
      }
      else if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 16) |= 2u;
        unint64_t v20 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v21 = *(void *)this;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
        {
          char v33 = 0;
          unsigned int v34 = 0;
          uint64_t v24 = 0;
          if (v2 <= v20) {
            unint64_t v3 = *((void *)this + 1);
          }
          else {
            unint64_t v3 = *((void *)this + 2);
          }
          while (1)
          {
            if (v3 == v20)
            {
              LODWORD(v24) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_60;
            }
            unint64_t v35 = v20++;
            char v36 = *(unsigned char *)(v21 + v35);
            *((void *)this + 1) = v20;
            v24 |= (unint64_t)(v36 & 0x7F) << v33;
            if ((v36 & 0x80) == 0) {
              break;
            }
            v33 += 7;
            BOOL v14 = v34++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              goto LABEL_59;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v24) = 0;
          }
LABEL_59:
          unint64_t v3 = v35 + 1;
        }
        else
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          while (1)
          {
            unint64_t v3 = v20 + 1;
            *((void *)this + 1) = v20 + 1;
            char v25 = *(unsigned char *)(v21 + v20);
            v24 |= (unint64_t)(v25 & 0x7F) << v22;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v22 += 7;
            unint64_t v20 = v3;
            BOOL v14 = v23++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              break;
            }
          }
        }
LABEL_60:
        *(_DWORD *)(a1 + 12) = v24;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v3 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v3 >= v2 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v3 > v2) {
      unint64_t v2 = v3;
    }
    while (v2 != v3)
    {
      unint64_t v17 = v3 + 1;
      char v18 = *(unsigned char *)(v8 + v3);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v3 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C35FA0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 16);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 16);
  }
  if (v4)
  {
    return PB::Writer::writeVarInt(this);
  }
  return result;
}

void sub_227C36010(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C36048(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC25EF0;
  *(_DWORD *)(result + 32) = 0;
  char v2 = *(unsigned char *)(a2 + 32);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 32) = 1;
    *(void *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 32) & 4) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 24);
    v3 |= 4u;
    *(unsigned char *)(result + 32) = v3;
    *(_DWORD *)(result + 24) = v5;
    char v2 = *(unsigned char *)(a2 + 32);
  }
LABEL_6:
  if ((v2 & 2) == 0)
  {
    if ((v2 & 8) == 0) {
      return result;
    }
LABEL_10:
    char v7 = *(unsigned char *)(a2 + 28);
    *(unsigned char *)(result + 32) = v3 | 8;
    *(unsigned char *)(result + 28) = v7;
    return result;
  }
  uint64_t v6 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(unsigned char *)(result + 32) = v3;
  *(void *)(result + 16) = v6;
  if ((*(unsigned char *)(a2 + 32) & 8) != 0) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_227C360E0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 32);
  if (v5)
  {
    PB::TextFormatter::format(this, "entryId");
    char v5 = *(unsigned char *)(a1 + 32);
    if ((v5 & 8) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 32) & 8) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "isMoving");
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "rssi");
  if ((*(unsigned char *)(a1 + 32) & 2) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 16));
LABEL_6:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C361A4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 32) |= 1u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v35 = 0;
                unsigned int v36 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_64;
                  }
                  unint64_t v37 = v20++;
                  char v38 = *(unsigned char *)(v21 + v37);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v38 & 0x7F) << v35;
                  if ((v38 & 0x80) == 0) {
                    break;
                  }
                  v35 += 7;
                  BOOL v14 = v36++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_63;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_63:
                unint64_t v2 = v37 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_64;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_64:
              *(void *)(a1 + 8) = v24;
              goto LABEL_70;
            case 2u:
              *(unsigned char *)(a1 + 32) |= 4u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v39 = 0;
                unsigned int v40 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_69;
                  }
                  unint64_t v41 = v27++;
                  char v42 = *(unsigned char *)(v28 + v41);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v42 & 0x7F) << v39;
                  if ((v42 & 0x80) == 0) {
                    break;
                  }
                  v39 += 7;
                  BOOL v14 = v40++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_68:
                    unint64_t v2 = v41 + 1;
                    goto LABEL_69;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_68;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_69;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_69:
              *(_DWORD *)(a1 + 24) = -(v31 & 1) ^ ((int)v31 >> 1);
LABEL_70:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 3u:
              *(unsigned char *)(a1 + 32) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_70;
            case 4u:
              *(unsigned char *)(a1 + 32) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v34 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v33 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v34 = v33 != 0;
              }
              *(unsigned char *)(a1 + 28) = v34;
              goto LABEL_70;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_70;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C3659C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
      if ((*(unsigned char *)(v3 + 32) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 32) & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeSInt(this);
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 8) == 0) {
    return result;
  }
LABEL_9:

  return PB::Writer::write(this);
}

void *sub_227C36644(void *result)
{
  *uint64_t result = &unk_26DC25F28;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void sub_227C36668(void **a1)
{
  *a1 = &unk_26DC25F28;
  unint64_t v2 = a1 + 1;
  sub_227B8B5D0(&v2);
  PB::Base::~Base((PB::Base *)a1);
}

uint64_t sub_227C366C4(void **a1)
{
  *a1 = &unk_26DC25F28;
  uint64_t v3 = a1 + 1;
  sub_227B8B5D0(&v3);
  PB::Base::~Base((PB::Base *)a1);
  return MEMORY[0x22A6850E0]();
}

void *sub_227C36734(void *result, uint64_t a2)
{
  result[1] = 0;
  *uint64_t result = &unk_26DC25F28;
  result[2] = 0;
  result[3] = 0;
  if (*(void *)(a2 + 8) != *(void *)(a2 + 16)) {
    sub_227C367AC();
  }
  return result;
}

void sub_227C367AC()
{
}

void sub_227C368B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_227B8BDA0((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_227C368F8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(uint64_t **)(a1 + 8);
  uint64_t v6 = *(uint64_t **)(a1 + 16);
  while (v5 != v6)
  {
    uint64_t v7 = *v5++;
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v7 + 32))(v7, this, "entries");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C36990(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        sub_227C36B4C();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

void sub_227C36B4C()
{
}

void sub_227C36C64(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_227B8BDA0((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_227C36CA8(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base ***)(result + 8);
  for (i = *(const PB::Base ***)(result + 16); v2 != i; uint64_t result = PB::Writer::writeSubmessage(this, v5))
    char v5 = *v2++;
  return result;
}

uint64_t sub_227C36CF4(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC25F60;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void sub_227C36D1C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C36D54(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC25F60;
  *(_DWORD *)(result + 16) = 0;
  if ((*(unsigned char *)(a2 + 16) & 2) != 0)
  {
    int v3 = *(_DWORD *)(a2 + 12);
    *(unsigned char *)(result + 16) = 2;
    *(_DWORD *)(result + 12) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 16) & 1) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 1;
  if (*(unsigned char *)(a2 + 16))
  {
LABEL_5:
    int v4 = *(_DWORD *)(a2 + 8);
    *(unsigned char *)(result + 16) = v2;
    *(_DWORD *)(result + 8) = v4;
  }
  return result;
}

uint64_t sub_227C36DB8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 16);
  if (v5)
  {
    PB::TextFormatter::format(this, "activityType");
    char v5 = *(unsigned char *)(a1 + 16);
  }
  if ((v5 & 2) != 0) {
    PB::TextFormatter::format(this, "motionNotification");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C36E34(uint64_t a1, PB::Reader *this)
{
  unint64_t v3 = *((void *)this + 1);
  unint64_t v2 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v3 < v2 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v3 > 0xFFFFFFFFFFFFFFF5 || v3 + 10 > v2) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v3 + 1;
        *((void *)this + 1) = v3 + 1;
        char v13 = *(unsigned char *)(v8 + v3);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v3 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 16) |= 1u;
        unint64_t v26 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v27 = *(void *)this;
        if (v26 > 0xFFFFFFFFFFFFFFF5 || v26 + 10 > v2)
        {
          char v37 = 0;
          unsigned int v38 = 0;
          uint64_t v30 = 0;
          if (v2 <= v26) {
            unint64_t v3 = *((void *)this + 1);
          }
          else {
            unint64_t v3 = *((void *)this + 2);
          }
          while (1)
          {
            if (v3 == v26)
            {
              LODWORD(v30) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_64;
            }
            unint64_t v39 = v26++;
            char v40 = *(unsigned char *)(v27 + v39);
            *((void *)this + 1) = v26;
            v30 |= (unint64_t)(v40 & 0x7F) << v37;
            if ((v40 & 0x80) == 0) {
              break;
            }
            v37 += 7;
            BOOL v14 = v38++ > 8;
            if (v14)
            {
              LODWORD(v30) = 0;
              goto LABEL_63;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v30) = 0;
          }
LABEL_63:
          unint64_t v3 = v39 + 1;
        }
        else
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v30 = 0;
          while (1)
          {
            unint64_t v3 = v26 + 1;
            *((void *)this + 1) = v26 + 1;
            char v31 = *(unsigned char *)(v27 + v26);
            v30 |= (unint64_t)(v31 & 0x7F) << v28;
            if ((v31 & 0x80) == 0) {
              break;
            }
            v28 += 7;
            unint64_t v26 = v3;
            BOOL v14 = v29++ > 8;
            if (v14)
            {
              LODWORD(v30) = 0;
              break;
            }
          }
        }
LABEL_64:
        *(_DWORD *)(a1 + 8) = v30;
      }
      else if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 16) |= 2u;
        unint64_t v20 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v21 = *(void *)this;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
        {
          char v33 = 0;
          unsigned int v34 = 0;
          uint64_t v24 = 0;
          if (v2 <= v20) {
            unint64_t v3 = *((void *)this + 1);
          }
          else {
            unint64_t v3 = *((void *)this + 2);
          }
          while (1)
          {
            if (v3 == v20)
            {
              LODWORD(v24) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_60;
            }
            unint64_t v35 = v20++;
            char v36 = *(unsigned char *)(v21 + v35);
            *((void *)this + 1) = v20;
            v24 |= (unint64_t)(v36 & 0x7F) << v33;
            if ((v36 & 0x80) == 0) {
              break;
            }
            v33 += 7;
            BOOL v14 = v34++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              goto LABEL_59;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v24) = 0;
          }
LABEL_59:
          unint64_t v3 = v35 + 1;
        }
        else
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          while (1)
          {
            unint64_t v3 = v20 + 1;
            *((void *)this + 1) = v20 + 1;
            char v25 = *(unsigned char *)(v21 + v20);
            v24 |= (unint64_t)(v25 & 0x7F) << v22;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v22 += 7;
            unint64_t v20 = v3;
            BOOL v14 = v23++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              break;
            }
          }
        }
LABEL_60:
        *(_DWORD *)(a1 + 12) = v24;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v3 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v3 >= v2 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v3 > v2) {
      unint64_t v2 = v3;
    }
    while (v2 != v3)
    {
      unint64_t v17 = v3 + 1;
      char v18 = *(unsigned char *)(v8 + v3);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v3 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C37160(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 16);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 16);
  }
  if (v4)
  {
    return PB::Writer::writeVarInt(this);
  }
  return result;
}

uint64_t sub_227C371CC(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC25F98;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

void sub_227C371F4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C3722C(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC25F98;
  *(_DWORD *)(result + 64) = 0;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x200) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 60);
    __int16 v3 = 512;
    *(_WORD *)(result + 64) = 512;
    *(_DWORD *)(result + 60) = v4;
    __int16 v2 = *(_WORD *)(a2 + 64);
    if ((v2 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 0x10) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 40);
    v3 |= 0x10u;
    *(_WORD *)(result + 64) = v3;
    *(_DWORD *)(result + 40) = v5;
    __int16 v2 = *(_WORD *)(a2 + 64);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    v3 |= 2u;
    *(_WORD *)(result + 64) = v3;
    *(void *)(result + 16) = v6;
    __int16 v2 = *(_WORD *)(a2 + 64);
    if ((v2 & 8) == 0)
    {
LABEL_8:
      if ((v2 & 1) == 0) {
        goto LABEL_9;
      }
      goto LABEL_17;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_WORD *)(result + 64) = v3;
  *(void *)(result + 32) = v7;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 1) == 0)
  {
LABEL_9:
    if ((v2 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t v8 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(result + 64) = v3;
  *(void *)(result + 8) = v8;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x80) == 0)
  {
LABEL_10:
    if ((v2 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_19;
  }
LABEL_18:
  int v9 = *(_DWORD *)(a2 + 52);
  v3 |= 0x80u;
  *(_WORD *)(result + 64) = v3;
  *(_DWORD *)(result + 52) = v9;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x100) == 0)
  {
LABEL_11:
    if ((v2 & 0x40) == 0) {
      goto LABEL_12;
    }
    goto LABEL_20;
  }
LABEL_19:
  int v10 = *(_DWORD *)(a2 + 56);
  v3 |= 0x100u;
  *(_WORD *)(result + 64) = v3;
  *(_DWORD *)(result + 56) = v10;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x40) == 0)
  {
LABEL_12:
    if ((v2 & 4) == 0) {
      goto LABEL_13;
    }
    goto LABEL_21;
  }
LABEL_20:
  int v11 = *(_DWORD *)(a2 + 48);
  v3 |= 0x40u;
  *(_WORD *)(result + 64) = v3;
  *(_DWORD *)(result + 48) = v11;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 4) == 0)
  {
LABEL_13:
    if ((v2 & 0x20) == 0) {
      return result;
    }
LABEL_22:
    int v13 = *(_DWORD *)(a2 + 44);
    *(_WORD *)(result + 64) = v3 | 0x20;
    *(_DWORD *)(result + 44) = v13;
    return result;
  }
LABEL_21:
  uint64_t v12 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(_WORD *)(result + 64) = v3;
  *(void *)(result + 24) = v12;
  if ((*(_WORD *)(a2 + 64) & 0x20) != 0) {
    goto LABEL_22;
  }
  return result;
}

uint64_t sub_227C37370(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 64);
  if (v5)
  {
    PB::TextFormatter::format(this, "endTime", *(double *)(a1 + 8));
    __int16 v5 = *(_WORD *)(a1 + 64);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "eventTime", *(double *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x10) == 0)
  {
LABEL_4:
    if ((v5 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  PB::TextFormatter::format(this, "eventType");
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x20) == 0)
  {
LABEL_5:
    if ((v5 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "genericWorkoutLabel");
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 4) == 0)
  {
LABEL_6:
    if ((v5 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "poolLength", *(double *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 8) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "startTime", *(double *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "swimLocation");
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "workoutLocationType");
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x100) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_23:
  PB::TextFormatter::format(this, "workoutMode");
  if ((*(_WORD *)(a1 + 64) & 0x200) != 0) {
LABEL_11:
  }
    PB::TextFormatter::format(this, "workoutType");
LABEL_12:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C374F4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 64) |= 0x200u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v57 = 0;
                unsigned int v58 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    LODWORD(v24) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_126;
                  }
                  unint64_t v59 = v20++;
                  char v60 = *(unsigned char *)(v21 + v59);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v60 & 0x7F) << v57;
                  if ((v60 & 0x80) == 0) {
                    break;
                  }
                  v57 += 7;
                  BOOL v14 = v58++ > 8;
                  if (v14)
                  {
                    LODWORD(v24) = 0;
                    goto LABEL_125;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v24) = 0;
                }
LABEL_125:
                unint64_t v2 = v59 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_126;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                LODWORD(v24) = 0;
              }
LABEL_126:
              *(_DWORD *)(a1 + 60) = v24;
              goto LABEL_152;
            case 2u:
              *(_WORD *)(a1 + 64) |= 0x10u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v61 = 0;
                unsigned int v62 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_131;
                  }
                  unint64_t v63 = v27++;
                  char v64 = *(unsigned char *)(v28 + v63);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v64 & 0x7F) << v61;
                  if ((v64 & 0x80) == 0) {
                    break;
                  }
                  v61 += 7;
                  BOOL v14 = v62++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_130:
                    unint64_t v2 = v63 + 1;
                    goto LABEL_131;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_130;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_131;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_131:
              *(_DWORD *)(a1 + 40) = v31;
              goto LABEL_152;
            case 3u:
              *(_WORD *)(a1 + 64) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_70;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_121;
            case 4u:
              *(_WORD *)(a1 + 64) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_70;
              }
              *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
              goto LABEL_121;
            case 5u:
              *(_WORD *)(a1 + 64) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_70;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_121;
            case 6u:
              *(_WORD *)(a1 + 64) |= 0x80u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v65 = 0;
                unsigned int v66 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_136;
                  }
                  unint64_t v67 = v33++;
                  char v68 = *(unsigned char *)(v34 + v67);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v68 & 0x7F) << v65;
                  if ((v68 & 0x80) == 0) {
                    break;
                  }
                  v65 += 7;
                  BOOL v14 = v66++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_135:
                    unint64_t v2 = v67 + 1;
                    goto LABEL_136;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_135;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_136;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_136:
              *(_DWORD *)(a1 + 52) = v37;
              goto LABEL_152;
            case 7u:
              *(_WORD *)(a1 + 64) |= 0x100u;
              unint64_t v39 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v40 = *(void *)this;
              if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
              {
                char v69 = 0;
                unsigned int v70 = 0;
                uint64_t v43 = 0;
                if (v2 <= v39) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v39)
                  {
                    LODWORD(v43) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_141;
                  }
                  unint64_t v71 = v39++;
                  char v72 = *(unsigned char *)(v40 + v71);
                  *((void *)this + 1) = v39;
                  v43 |= (unint64_t)(v72 & 0x7F) << v69;
                  if ((v72 & 0x80) == 0) {
                    break;
                  }
                  v69 += 7;
                  BOOL v14 = v70++ > 8;
                  if (v14)
                  {
                    LODWORD(v43) = 0;
LABEL_140:
                    unint64_t v2 = v71 + 1;
                    goto LABEL_141;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v43) = 0;
                }
                goto LABEL_140;
              }
              char v41 = 0;
              unsigned int v42 = 0;
              uint64_t v43 = 0;
              do
              {
                unint64_t v2 = v39 + 1;
                *((void *)this + 1) = v39 + 1;
                char v44 = *(unsigned char *)(v40 + v39);
                v43 |= (unint64_t)(v44 & 0x7F) << v41;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_141;
                }
                v41 += 7;
                unint64_t v39 = v2;
                BOOL v14 = v42++ > 8;
              }
              while (!v14);
              LODWORD(v43) = 0;
LABEL_141:
              *(_DWORD *)(a1 + 56) = v43;
              goto LABEL_152;
            case 8u:
              *(_WORD *)(a1 + 64) |= 0x40u;
              unint64_t v45 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v46 = *(void *)this;
              if (v45 > 0xFFFFFFFFFFFFFFF5 || v45 + 10 > v2)
              {
                char v73 = 0;
                unsigned int v74 = 0;
                uint64_t v49 = 0;
                if (v2 <= v45) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v45)
                  {
                    LODWORD(v49) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_146;
                  }
                  unint64_t v75 = v45++;
                  char v76 = *(unsigned char *)(v46 + v75);
                  *((void *)this + 1) = v45;
                  v49 |= (unint64_t)(v76 & 0x7F) << v73;
                  if ((v76 & 0x80) == 0) {
                    break;
                  }
                  v73 += 7;
                  BOOL v14 = v74++ > 8;
                  if (v14)
                  {
                    LODWORD(v49) = 0;
LABEL_145:
                    unint64_t v2 = v75 + 1;
                    goto LABEL_146;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v49) = 0;
                }
                goto LABEL_145;
              }
              char v47 = 0;
              unsigned int v48 = 0;
              uint64_t v49 = 0;
              do
              {
                unint64_t v2 = v45 + 1;
                *((void *)this + 1) = v45 + 1;
                char v50 = *(unsigned char *)(v46 + v45);
                v49 |= (unint64_t)(v50 & 0x7F) << v47;
                if ((v50 & 0x80) == 0) {
                  goto LABEL_146;
                }
                v47 += 7;
                unint64_t v45 = v2;
                BOOL v14 = v48++ > 8;
              }
              while (!v14);
              LODWORD(v49) = 0;
LABEL_146:
              *(_DWORD *)(a1 + 48) = v49;
              goto LABEL_152;
            case 9u:
              *(_WORD *)(a1 + 64) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
LABEL_121:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_70:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_152;
            case 0xAu:
              *(_WORD *)(a1 + 64) |= 0x20u;
              unint64_t v51 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v52 = *(void *)this;
              if (v51 > 0xFFFFFFFFFFFFFFF5 || v51 + 10 > v2)
              {
                char v77 = 0;
                unsigned int v78 = 0;
                uint64_t v55 = 0;
                if (v2 <= v51) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v51)
                  {
                    LODWORD(v55) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_151;
                  }
                  unint64_t v79 = v51++;
                  char v80 = *(unsigned char *)(v52 + v79);
                  *((void *)this + 1) = v51;
                  v55 |= (unint64_t)(v80 & 0x7F) << v77;
                  if ((v80 & 0x80) == 0) {
                    break;
                  }
                  v77 += 7;
                  BOOL v14 = v78++ > 8;
                  if (v14)
                  {
                    LODWORD(v55) = 0;
LABEL_150:
                    unint64_t v2 = v79 + 1;
                    goto LABEL_151;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v55) = 0;
                }
                goto LABEL_150;
              }
              char v53 = 0;
              unsigned int v54 = 0;
              uint64_t v55 = 0;
              do
              {
                unint64_t v2 = v51 + 1;
                *((void *)this + 1) = v51 + 1;
                char v56 = *(unsigned char *)(v52 + v51);
                v55 |= (unint64_t)(v56 & 0x7F) << v53;
                if ((v56 & 0x80) == 0) {
                  goto LABEL_151;
                }
                v53 += 7;
                unint64_t v51 = v2;
                BOOL v14 = v54++ > 8;
              }
              while (!v14);
              LODWORD(v55) = 0;
LABEL_151:
              *(_DWORD *)(a1 + 44) = v55;
LABEL_152:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_152;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C37D0C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 64);
  if ((v4 & 0x200) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    __int16 v4 = *(_WORD *)(v3 + 64);
    if ((v4 & 0x10) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v4 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 2) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 1) == 0)
  {
LABEL_6:
    if ((v4 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x80) == 0)
  {
LABEL_7:
    if ((v4 & 0x100) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x100) == 0)
  {
LABEL_8:
    if ((v4 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x40) == 0)
  {
LABEL_9:
    if ((v4 & 4) == 0) {
      goto LABEL_10;
    }
LABEL_20:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24));
    if ((*(_WORD *)(v3 + 64) & 0x20) == 0) {
      return result;
    }
    goto LABEL_21;
  }
LABEL_19:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 4) != 0) {
    goto LABEL_20;
  }
LABEL_10:
  if ((v4 & 0x20) == 0) {
    return result;
  }
LABEL_21:

  return PB::Writer::writeVarInt(this);
}

void sub_227C37E60(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C37E98(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC25FD0;
  *(_DWORD *)(result + 32) = 0;
  char v2 = *(unsigned char *)(a2 + 32);
  if ((v2 & 0x10) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 28);
    char v3 = 16;
    *(unsigned char *)(result + 32) = 16;
    *(_DWORD *)(result + 28) = v4;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 32) & 8) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 24);
    v3 |= 8u;
    *(unsigned char *)(result + 32) = v3;
    *(_DWORD *)(result + 24) = v5;
    char v2 = *(unsigned char *)(a2 + 32);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 20);
    v3 |= 4u;
    *(unsigned char *)(result + 32) = v3;
    *(_DWORD *)(result + 20) = v6;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 1) == 0)
    {
LABEL_8:
      if ((v2 & 2) == 0) {
        return result;
      }
LABEL_12:
      int v8 = *(_DWORD *)(a2 + 16);
      *(unsigned char *)(result + 32) = v3 | 2;
      *(_DWORD *)(result + 16) = v8;
      return result;
    }
  }
  else if ((v2 & 1) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(unsigned char *)(result + 32) = v3;
  *(void *)(result + 8) = v7;
  if ((*(unsigned char *)(a2 + 32) & 2) != 0) {
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_227C37F4C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "genericWorkoutLabel");
    char v5 = *(unsigned char *)(a1 + 32);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 32) & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "poolLength", *(double *)(a1 + 8));
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(this, "swimLocation");
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(this, "workoutLocationType");
  if ((*(unsigned char *)(a1 + 32) & 0x10) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "workoutType");
LABEL_7:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C38030(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 32) |= 0x10u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v45 = 0;
                unsigned int v46 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    LODWORD(v24) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_88;
                  }
                  unint64_t v47 = v20++;
                  char v48 = *(unsigned char *)(v21 + v47);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v48 & 0x7F) << v45;
                  if ((v48 & 0x80) == 0) {
                    break;
                  }
                  v45 += 7;
                  BOOL v14 = v46++ > 8;
                  if (v14)
                  {
                    LODWORD(v24) = 0;
                    goto LABEL_87;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v24) = 0;
                }
LABEL_87:
                unint64_t v2 = v47 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_88;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                LODWORD(v24) = 0;
              }
LABEL_88:
              *(_DWORD *)(a1 + 28) = v24;
              goto LABEL_104;
            case 2u:
              *(unsigned char *)(a1 + 32) |= 8u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v49 = 0;
                unsigned int v50 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_93;
                  }
                  unint64_t v51 = v27++;
                  char v52 = *(unsigned char *)(v28 + v51);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v52 & 0x7F) << v49;
                  if ((v52 & 0x80) == 0) {
                    break;
                  }
                  v49 += 7;
                  BOOL v14 = v50++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_92:
                    unint64_t v2 = v51 + 1;
                    goto LABEL_93;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_92;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_93;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_93:
              *(_DWORD *)(a1 + 24) = v31;
              goto LABEL_104;
            case 3u:
              *(unsigned char *)(a1 + 32) |= 4u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v53 = 0;
                unsigned int v54 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_98;
                  }
                  unint64_t v55 = v33++;
                  char v56 = *(unsigned char *)(v34 + v55);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v56 & 0x7F) << v53;
                  if ((v56 & 0x80) == 0) {
                    break;
                  }
                  v53 += 7;
                  BOOL v14 = v54++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_97:
                    unint64_t v2 = v55 + 1;
                    goto LABEL_98;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_97;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_98;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_98:
              *(_DWORD *)(a1 + 20) = v37;
              goto LABEL_104;
            case 4u:
              *(unsigned char *)(a1 + 32) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_104;
            case 5u:
              *(unsigned char *)(a1 + 32) |= 2u;
              unint64_t v39 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v40 = *(void *)this;
              if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
              {
                char v57 = 0;
                unsigned int v58 = 0;
                uint64_t v43 = 0;
                if (v2 <= v39) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v39)
                  {
                    LODWORD(v43) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_103;
                  }
                  unint64_t v59 = v39++;
                  char v60 = *(unsigned char *)(v40 + v59);
                  *((void *)this + 1) = v39;
                  v43 |= (unint64_t)(v60 & 0x7F) << v57;
                  if ((v60 & 0x80) == 0) {
                    break;
                  }
                  v57 += 7;
                  BOOL v14 = v58++ > 8;
                  if (v14)
                  {
                    LODWORD(v43) = 0;
LABEL_102:
                    unint64_t v2 = v59 + 1;
                    goto LABEL_103;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v43) = 0;
                }
                goto LABEL_102;
              }
              char v41 = 0;
              unsigned int v42 = 0;
              uint64_t v43 = 0;
              do
              {
                unint64_t v2 = v39 + 1;
                *((void *)this + 1) = v39 + 1;
                char v44 = *(unsigned char *)(v40 + v39);
                v43 |= (unint64_t)(v44 & 0x7F) << v41;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_103;
                }
                v41 += 7;
                unint64_t v39 = v2;
                BOOL v14 = v42++ > 8;
              }
              while (!v14);
              LODWORD(v43) = 0;
LABEL_103:
              *(_DWORD *)(a1 + 16) = v43;
LABEL_104:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_104;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C385B4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if ((v4 & 0x10) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 32);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 32) & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 1) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
    if ((*(unsigned char *)(v3 + 32) & 2) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 32);
  if (v4) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_11:

  return PB::Writer::writeVarInt(this);
}

void *sub_227C38678(void *result)
{
  *uint64_t result = &unk_26DC26008;
  result[1] = 0;
  return result;
}

void sub_227C38698(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC26008;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C38718(PB::Base *a1)
{
  sub_227C38698(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227C38750(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC26008;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C387F8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C38874(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C38A70(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

void *sub_227C38A8C(void *result)
{
  *uint64_t result = &unk_26DC26040;
  result[1] = 0;
  return result;
}

void sub_227C38AAC(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC26040;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C38B2C(PB::Base *a1)
{
  sub_227C38AAC(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227C38B64(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC26040;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C38C0C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C38C88(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C38E84(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

void *sub_227C38EA0(void *result)
{
  *uint64_t result = &unk_26DC26078;
  result[1] = 0;
  return result;
}

void sub_227C38EC0(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC26078;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C38F40(PB::Base *a1)
{
  sub_227C38EC0(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227C38F78(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC26078;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C39020(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C3909C(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C39298(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

void *sub_227C392B4(void *result)
{
  *uint64_t result = &unk_26DC260B0;
  result[1] = 0;
  return result;
}

void sub_227C392D4(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC260B0;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C39354(PB::Base *a1)
{
  sub_227C392D4(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227C3938C(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC260B0;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C39434(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C394B0(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C396AC(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

void *sub_227C396C8(void *result)
{
  *uint64_t result = &unk_26DC260E8;
  result[1] = 0;
  return result;
}

void sub_227C396E8(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC260E8;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C39768(PB::Base *a1)
{
  sub_227C396E8(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227C397A0(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC260E8;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C39848(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C398C4(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C39AC0(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

void *sub_227C39ADC(void *result)
{
  *uint64_t result = &unk_26DC26120;
  result[1] = 0;
  return result;
}

void sub_227C39AFC(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC26120;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C39B7C(PB::Base *a1)
{
  sub_227C39AFC(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227C39BB4(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC26120;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C39C5C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C39CD8(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C39ED4(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

void *sub_227C39EF0(void *result)
{
  *uint64_t result = &unk_26DC26158;
  result[1] = 0;
  return result;
}

void sub_227C39F10(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC26158;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C39F90(PB::Base *a1)
{
  sub_227C39F10(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227C39FC8(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC26158;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C3A070(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C3A0EC(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C3A2E8(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

void *sub_227C3A304(void *result)
{
  *uint64_t result = &unk_26DC26190;
  result[1] = 0;
  return result;
}

void sub_227C3A324(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC26190;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C3A3A4(PB::Base *a1)
{
  sub_227C3A324(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227C3A3DC(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC26190;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C3A484(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C3A500(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C3A6FC(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

void *sub_227C3A718(void *result)
{
  *uint64_t result = &unk_26DC261C8;
  result[1] = 0;
  return result;
}

void sub_227C3A738(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC261C8;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C3A7B8(PB::Base *a1)
{
  sub_227C3A738(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227C3A7F0(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC261C8;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C3A898(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C3A914(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C3AB10(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

uint64_t sub_227C3AB2C(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC26200;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

void sub_227C3AB54(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227C3AB8C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC26200;
  *(_DWORD *)(a1 + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 28);
  if ((v2 & 4) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 24);
    char v3 = 4;
    *(unsigned char *)(a1 + 28) = 4;
    *(_DWORD *)(a1 + 24) = v4;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if (*(unsigned char *)(a2 + 28))
  {
LABEL_5:
    double result = *(double *)(a2 + 8);
    v3 |= 1u;
    *(unsigned char *)(a1 + 28) = v3;
    *(double *)(a1 + 8) = result;
    char v2 = *(unsigned char *)(a2 + 28);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    double result = *(double *)(a2 + 16);
    *(unsigned char *)(a1 + 28) = v3 | 2;
    *(double *)(a1 + 16) = result;
  }
  return result;
}

uint64_t sub_227C3AC0C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 28);
  if (v5)
  {
    PB::TextFormatter::format(this, "restingHeartRate", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 28);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((*(unsigned char *)(a1 + 28) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "walkingHeartRateAverage", *(double *)(a1 + 16));
  if ((*(unsigned char *)(a1 + 28) & 4) != 0) {
LABEL_4:
  }
    PB::TextFormatter::format(this, "workoutActivityType");
LABEL_5:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C3ACB0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  for (int i = *((unsigned __int8 *)this + 24); v2 < v3 && i == 0; int i = *((unsigned __int8 *)this + 24))
  {
    uint64_t v8 = *(void *)this;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      while (v3 != v2)
      {
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)this + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_20;
        }
        v15 += 7;
        unint64_t v2 = v17;
        if (v16++ >= 9)
        {
LABEL_19:
          unint64_t v11 = 0;
          goto LABEL_20;
        }
      }
      int i = 1;
      *((unsigned char *)this + 24) = 1;
      return i == 0;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)this + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_20:
    if ((v11 & 7) == 4)
    {
      int i = 0;
      return i == 0;
    }
    unint64_t v20 = v11 >> 3;
    if ((v11 >> 3) == 3)
    {
      *(unsigned char *)(a1 + 28) |= 2u;
      unint64_t v2 = *((void *)this + 1);
      if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
      {
        *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
LABEL_47:
        unint64_t v2 = *((void *)this + 1) + 8;
        *((void *)this + 1) = v2;
        goto LABEL_53;
      }
    }
    else
    {
      if (v20 != 2)
      {
        if (v20 == 1)
        {
          *(unsigned char *)(a1 + 28) |= 4u;
          unint64_t v21 = *((void *)this + 1);
          unint64_t v2 = *((void *)this + 2);
          uint64_t v22 = *(void *)this;
          if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
          {
            char v28 = 0;
            unsigned int v29 = 0;
            uint64_t v25 = 0;
            if (v2 <= v21) {
              unint64_t v2 = *((void *)this + 1);
            }
            while (1)
            {
              if (v2 == v21)
              {
                LODWORD(v25) = 0;
                *((unsigned char *)this + 24) = 1;
                goto LABEL_52;
              }
              unint64_t v30 = v21++;
              char v31 = *(unsigned char *)(v22 + v30);
              *((void *)this + 1) = v21;
              v25 |= (unint64_t)(v31 & 0x7F) << v28;
              if ((v31 & 0x80) == 0) {
                break;
              }
              v28 += 7;
              BOOL v14 = v29++ > 8;
              if (v14)
              {
                LODWORD(v25) = 0;
                goto LABEL_51;
              }
            }
            if (*((unsigned char *)this + 24)) {
              LODWORD(v25) = 0;
            }
LABEL_51:
            unint64_t v2 = v30 + 1;
          }
          else
          {
            char v23 = 0;
            unsigned int v24 = 0;
            uint64_t v25 = 0;
            while (1)
            {
              unint64_t v2 = v21 + 1;
              *((void *)this + 1) = v21 + 1;
              char v26 = *(unsigned char *)(v22 + v21);
              v25 |= (unint64_t)(v26 & 0x7F) << v23;
              if ((v26 & 0x80) == 0) {
                break;
              }
              v23 += 7;
              unint64_t v21 = v2;
              BOOL v14 = v24++ > 8;
              if (v14)
              {
                LODWORD(v25) = 0;
                break;
              }
            }
          }
LABEL_52:
          *(_DWORD *)(a1 + 24) = v25;
        }
        else
        {
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
        }
        goto LABEL_53;
      }
      *(unsigned char *)(a1 + 28) |= 1u;
      unint64_t v2 = *((void *)this + 1);
      if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
      {
        *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
        goto LABEL_47;
      }
    }
    *((unsigned char *)this + 24) = 1;
LABEL_53:
    unint64_t v3 = *((void *)this + 2);
  }
  return i == 0;
}

uint64_t sub_227C3AF80(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if ((v4 & 4) == 0)
  {
    if ((*(unsigned char *)(result + 28) & 1) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
    if ((*(unsigned char *)(v3 + 28) & 2) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 28);
  if (v4) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_7:
  double v5 = *(double *)(v3 + 16);

  return PB::Writer::write(this, v5);
}

void *sub_227C3B00C(void *result)
{
  *uint64_t result = &unk_26DC26238;
  result[1] = 0;
  return result;
}

void sub_227C3B02C(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC26238;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C3B0AC(PB::Base *a1)
{
  sub_227C3B02C(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227C3B0E4(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC26238;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C3B18C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C3B208(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C3B404(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

void *sub_227C3B420(void *result)
{
  *uint64_t result = &unk_26DC26270;
  result[1] = 0;
  return result;
}

void sub_227C3B440(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC26270;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C3B4C0(PB::Base *a1)
{
  sub_227C3B440(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227C3B4F8(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC26270;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C3B5A0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C3B61C(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C3B818(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

void *sub_227C3B834(void *result)
{
  *uint64_t result = &unk_26DC262A8;
  result[1] = 0;
  return result;
}

void sub_227C3B854(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC262A8;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C3B8D4(PB::Base *a1)
{
  sub_227C3B854(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227C3B90C(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC262A8;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C3B9B4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C3BA30(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C3BC2C(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

void *sub_227C3BC48(void *result)
{
  *uint64_t result = &unk_26DC262E0;
  result[1] = 0;
  return result;
}

void sub_227C3BC68(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC262E0;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C3BCE8(PB::Base *a1)
{
  sub_227C3BC68(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227C3BD20(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC262E0;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C3BDC8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C3BE44(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C3C040(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

void *sub_227C3C05C(void *result)
{
  *uint64_t result = &unk_26DC26318;
  result[1] = 0;
  return result;
}

void sub_227C3C07C(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC26318;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C3C0FC(PB::Base *a1)
{
  sub_227C3C07C(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227C3C134(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC26318;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C3C1DC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C3C258(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C3C454(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

void *sub_227C3C470(void *result)
{
  *uint64_t result = &unk_26DC26350;
  result[1] = 0;
  return result;
}

void sub_227C3C490(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC26350;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C3C510(PB::Base *a1)
{
  sub_227C3C490(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227C3C548(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC26350;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C3C5F0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C3C66C(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C3C884(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

void *sub_227C3C8A0(void *result)
{
  *uint64_t result = &unk_26DC26388;
  result[1] = 0;
  return result;
}

void sub_227C3C8C0(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC26388;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C3C940(PB::Base *a1)
{
  sub_227C3C8C0(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227C3C978(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC26388;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C3CA20(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C3CA9C(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C3CCB4(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

void *sub_227C3CCD0(void *result)
{
  *uint64_t result = &unk_26DC263C0;
  result[1] = 0;
  return result;
}

void sub_227C3CCF0(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC263C0;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C3CD70(PB::Base *a1)
{
  sub_227C3CCF0(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227C3CDA8(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC263C0;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C3CE50(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C3CECC(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C3D0E4(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

void *sub_227C3D100(void *result)
{
  *uint64_t result = &unk_26DC263F8;
  result[1] = 0;
  return result;
}

void sub_227C3D120(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC263F8;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C3D1A0(PB::Base *a1)
{
  sub_227C3D120(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227C3D1D8(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC263F8;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C3D280(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C3D2FC(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C3D514(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

void *sub_227C3D530(void *result)
{
  *uint64_t result = &unk_26DC26430;
  result[1] = 0;
  return result;
}

void sub_227C3D550(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC26430;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C3D5D0(PB::Base *a1)
{
  sub_227C3D550(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227C3D608(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC26430;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C3D6B4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C3D730(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

void *sub_227C3D948(void *result)
{
  *uint64_t result = &unk_26DC26468;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_227C3D96C(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

void sub_227C3D988(void **a1)
{
  *a1 = &unk_26DC26468;
  unint64_t v2 = a1 + 1;
  sub_227B8B5D0(&v2);
  PB::Base::~Base((PB::Base *)a1);
}

uint64_t sub_227C3D9E4(void **a1)
{
  *a1 = &unk_26DC26468;
  unint64_t v3 = a1 + 1;
  sub_227B8B5D0(&v3);
  PB::Base::~Base((PB::Base *)a1);
  return MEMORY[0x22A6850E0]();
}

void *sub_227C3DA54(void *result, uint64_t a2)
{
  result[1] = 0;
  *uint64_t result = &unk_26DC26468;
  result[2] = 0;
  result[3] = 0;
  if (*(void *)(a2 + 8) != *(void *)(a2 + 16)) {
    sub_227C3DACC();
  }
  return result;
}

void sub_227C3DACC()
{
}

void sub_227C3DBD0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_227B8BDA0((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_227C3DC14(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(uint64_t **)(a1 + 8);
  int v6 = *(uint64_t **)(a1 + 16);
  while (v5 != v6)
  {
    uint64_t v7 = *v5++;
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v7 + 32))(v7, this, "workoutPriors");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C3DCAC(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 2) {
        sub_227C3DE68();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

void sub_227C3DE68()
{
}

void sub_227C3DF80(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_227B8BDA0((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_227C3DFC4(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base ***)(result + 8);
  for (i = *(const PB::Base ***)(result + 16); v2 != i; uint64_t result = PB::Writer::writeSubmessage(this, v5))
    uint64_t v5 = *v2++;
  return result;
}

void *sub_227C3E010(void *result)
{
  *uint64_t result = &unk_26DC264A0;
  result[1] = 0;
  return result;
}

void sub_227C3E030(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC264A0;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C3E0B0(PB::Base *a1)
{
  sub_227C3E030(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227C3E0E8(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC264A0;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C3E190(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "correction");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C3E20C(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C3E408(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

uint64_t sub_227C3E424(uint64_t *a1, void *a2)
{
  uint64_t result = sub_227C3E49C((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_227C3E49C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v8 = (void *)(a7 - 8);
    unsigned int v9 = (void *)(a7 - 8);
    do
    {
      uint64_t v10 = *--a3;
      *a3 = 0;
      *v9-- = v10;
      *((void *)&v16 + 1) = v8;
      v7 -= 8;
      uint64_t v8 = v9;
    }
    while (a3 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  sub_227C3E534((uint64_t)v13);
  return v11;
}

uint64_t sub_227C3E534(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_227B8BD38((void *)a1);
  }
  return a1;
}

uint64_t sub_227C3E56C(uint64_t *a1, void *a2)
{
  uint64_t result = sub_227C3E5E4((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_227C3E5E4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v8 = (void *)(a7 - 8);
    unsigned int v9 = (void *)(a7 - 8);
    do
    {
      uint64_t v10 = *--a3;
      *a3 = 0;
      *v9-- = v10;
      *((void *)&v16 + 1) = v8;
      v7 -= 8;
      uint64_t v8 = v9;
    }
    while (a3 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  sub_227C3E67C((uint64_t)v13);
  return v11;
}

uint64_t sub_227C3E67C(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_227B8BD38((void *)a1);
  }
  return a1;
}

uint64_t sub_227C3E6B4(uint64_t *a1, void *a2)
{
  uint64_t result = sub_227C3E72C((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_227C3E72C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v8 = (void *)(a7 - 8);
    unsigned int v9 = (void *)(a7 - 8);
    do
    {
      uint64_t v10 = *--a3;
      *a3 = 0;
      *v9-- = v10;
      *((void *)&v16 + 1) = v8;
      v7 -= 8;
      uint64_t v8 = v9;
    }
    while (a3 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  sub_227C3E7C4((uint64_t)v13);
  return v11;
}

uint64_t sub_227C3E7C4(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_227B8BD38((void *)a1);
  }
  return a1;
}

uint64_t sub_227C3E7FC(uint64_t *a1, void *a2)
{
  uint64_t result = sub_227C3E874((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_227C3E874(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v8 = (void *)(a7 - 8);
    unsigned int v9 = (void *)(a7 - 8);
    do
    {
      uint64_t v10 = *--a3;
      *a3 = 0;
      *v9-- = v10;
      *((void *)&v16 + 1) = v8;
      v7 -= 8;
      uint64_t v8 = v9;
    }
    while (a3 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  sub_227C3E90C((uint64_t)v13);
  return v11;
}

uint64_t sub_227C3E90C(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_227B8BD38((void *)a1);
  }
  return a1;
}

uint64_t sub_227C3E944(uint64_t *a1, void *a2)
{
  uint64_t result = sub_227C3E9BC((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_227C3E9BC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v8 = (void *)(a7 - 8);
    unsigned int v9 = (void *)(a7 - 8);
    do
    {
      uint64_t v10 = *--a3;
      *a3 = 0;
      *v9-- = v10;
      *((void *)&v16 + 1) = v8;
      v7 -= 8;
      uint64_t v8 = v9;
    }
    while (a3 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  sub_227C3EA54((uint64_t)v13);
  return v11;
}

uint64_t sub_227C3EA54(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_227B8BD38((void *)a1);
  }
  return a1;
}

uint64_t sub_227C3EA8C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  uint64_t v7 = objc_msgSend_defaultManager(MEMORY[0x263F08850], a2, a3, a4);
  if (*(char *)(a1 + 23) >= 0) {
    objc_msgSend_stringWithUTF8String_(NSString, v5, a1, v6);
  }
  else {
  uint64_t v8 = objc_msgSend_stringWithUTF8String_(NSString, v5, *(void *)a1, v6);
  }
  char v18 = 0;
  if (objc_msgSend_fileExistsAtPath_isDirectory_(v7, v9, (uint64_t)v8, (uint64_t)&v18))
  {
    if (!v18)
    {
LABEL_15:
      uint64_t v14 = 0;
      goto LABEL_16;
    }
  }
  else
  {
    id v17 = 0;
    char v11 = objc_msgSend_createDirectoryAtPath_withIntermediateDirectories_attributes_error_(v7, v10, (uint64_t)v8, 1, 0, &v17);
    id v12 = v17;
    char v13 = v12;
    if ((v11 & 1) == 0)
    {
      if (qword_2681B9B90 != -1) {
        dispatch_once(&qword_2681B9B90, &unk_26DC26F18);
      }
      long long v15 = qword_2681B9B88;
      if (os_log_type_enabled((os_log_t)qword_2681B9B88, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138543618;
        unint64_t v20 = v8;
        __int16 v21 = 2114;
        uint64_t v22 = v13;
        _os_log_impl(&dword_227B19000, v15, OS_LOG_TYPE_INFO, "Unable to create directory at path: %{public}@, error, %{public}@", buf, 0x16u);
      }

      goto LABEL_15;
    }
  }
  uint64_t v14 = 1;
LABEL_16:

  return v14;
}

void sub_227C3EC14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_227C3EC3C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v56 = *MEMORY[0x263EF8340];
  *a5 = 0;
  a5[1] = 0;
  a5[2] = 0;
  uint64_t v10 = objc_msgSend_defaultManager(MEMORY[0x263F08850], (const char *)a2, a3, a4);
  char v11 = NSURL;
  if (*(char *)(a1 + 23) >= 0) {
    objc_msgSend_stringWithUTF8String_(NSString, v8, a1, v9);
  }
  else {
  id v12 = objc_msgSend_stringWithUTF8String_(NSString, v8, *(void *)a1, v9);
  }
  long long v15 = objc_msgSend_fileURLWithPath_(v11, v13, (uint64_t)v12, v14);
  id v50 = 0;
  char v45 = objc_msgSend_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_(v10, v16, (uint64_t)v15, 0, 4, &v50);
  id v17 = v50;

  if (v17)
  {
    if (qword_2681B9B90 != -1) {
      dispatch_once(&qword_2681B9B90, &unk_26DC26F18);
    }
    unint64_t v20 = qword_2681B9B88;
    if (os_log_type_enabled((os_log_t)qword_2681B9B88, OS_LOG_TYPE_INFO))
    {
      if (*(char *)(a1 + 23) >= 0) {
        uint64_t v21 = a1;
      }
      else {
        uint64_t v21 = *(void *)a1;
      }
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = v21;
      __int16 v54 = 2114;
      id v55 = v17;
      _os_log_impl(&dword_227B19000, v20, OS_LOG_TYPE_INFO, "Unable to list files at path: %{public}s, error, %{public}@", buf, 0x16u);
    }
  }
  else
  {
    if (*(char *)(a2 + 23) >= 0) {
      objc_msgSend_stringWithUTF8String_(NSString, v18, a2, v19);
    }
    else {
    uint64_t v22 = objc_msgSend_stringWithUTF8String_(NSString, v18, *(void *)a2, v19);
    }
    long long v48 = 0u;
    long long v49 = 0u;
    long long v46 = 0u;
    long long v47 = 0u;
    id v23 = v45;
    uint64_t v28 = objc_msgSend_countByEnumeratingWithState_objects_count_(v23, v24, (uint64_t)&v46, (uint64_t)v52, 16);
    if (v28)
    {
      uint64_t v29 = *(void *)v47;
      do
      {
        for (uint64_t i = 0; i != v28; ++i)
        {
          if (*(void *)v47 != v29) {
            objc_enumerationMutation(v23);
          }
          char v31 = *(void **)(*((void *)&v46 + 1) + 8 * i);
          char v32 = objc_msgSend_pathExtension(v31, v25, v26, v27);
          BOOL v34 = objc_msgSend_compare_options_(v32, v33, (uint64_t)v22, 1) == 0;

          if (v34)
          {
            id v35 = v31;
            unint64_t v39 = (char *)objc_msgSend_fileSystemRepresentation(v35, v36, v37, v38);
            *(void *)buf = v39;
            unint64_t v40 = a5[1];
            if (v40 >= a5[2])
            {
              uint64_t v41 = sub_227C3F1A4(a5, (char **)buf);
            }
            else
            {
              sub_227B8D46C((void *)a5[1], v39);
              uint64_t v41 = v40 + 24;
              a5[1] = v40 + 24;
            }
            a5[1] = v41;
          }
        }
        uint64_t v28 = objc_msgSend_countByEnumeratingWithState_objects_count_(v23, v25, (uint64_t)&v46, (uint64_t)v52, 16);
      }
      while (v28);
    }

    unsigned int v42 = (long long *)a5[1];
    unint64_t v43 = 126 - 2 * __clz(0xAAAAAAAAAAAAAAABLL * (((uint64_t)v42 - *a5) >> 3));
    if (v42 == (long long *)*a5) {
      uint64_t v44 = 0;
    }
    else {
      uint64_t v44 = v43;
    }
    sub_227C3F2AC(*a5, v42, (uint64_t)&v51, v44, 1);
  }
}

void sub_227C3EF4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  *(void *)(v12 - 128) = v10;
  sub_227BD4320((void ***)(v12 - 128));
  _Unwind_Resume(a1);
}

void sub_227C3EFDC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v7 = objc_msgSend_defaultManager(MEMORY[0x263F08850], a2, a3, a4);
  if (*(char *)(a1 + 23) >= 0) {
    objc_msgSend_stringWithUTF8String_(NSString, v5, a1, v6);
  }
  else {
  uint64_t v8 = objc_msgSend_stringWithUTF8String_(NSString, v5, *(void *)a1, v6);
  }
  id v14 = 0;
  char v10 = objc_msgSend_removeItemAtPath_error_(v7, v9, (uint64_t)v8, (uint64_t)&v14);
  id v11 = v14;

  if ((v10 & 1) == 0)
  {
    if (qword_2681B9B90 != -1) {
      dispatch_once(&qword_2681B9B90, &unk_26DC26F18);
    }
    uint64_t v12 = qword_2681B9B88;
    if (os_log_type_enabled((os_log_t)qword_2681B9B88, OS_LOG_TYPE_INFO))
    {
      if (*(char *)(a1 + 23) >= 0) {
        uint64_t v13 = a1;
      }
      else {
        uint64_t v13 = *(void *)a1;
      }
      *(_DWORD *)buf = 136446466;
      uint64_t v16 = v13;
      __int16 v17 = 2114;
      id v18 = v11;
      _os_log_impl(&dword_227B19000, v12, OS_LOG_TYPE_INFO, "Unable to delete file %{public}s, error, %{public}@", buf, 0x16u);
    }
  }
}

void sub_227C3F13C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_227C3F160()
{
  os_log_t v0 = os_log_create("com.apple.MotionSensorLogging", "MSL");
  v1 = (void *)qword_2681B9B88;
  qword_2681B9B88 = (uint64_t)v0;
}

uint64_t sub_227C3F1A4(uint64_t *a1, char **a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_227B8B89C();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x555555555555555) {
    unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  __int16 v17 = a1 + 2;
  if (v9) {
    char v10 = (char *)sub_227BD6B9C(v7, v9);
  }
  else {
    char v10 = 0;
  }
  uint64_t v13 = v10;
  id v14 = &v10[24 * v4];
  long long v15 = v14;
  uint64_t v16 = &v10[24 * v9];
  sub_227B8D46C(v14, *a2);
  long long v15 = v14 + 24;
  sub_227BDB824(a1, &v13);
  uint64_t v11 = a1[1];
  sub_227BDB9BC((uint64_t)&v13);
  return v11;
}

void sub_227C3F298(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_227BDB9BC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_227C3F2AC(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, char a5)
{
LABEL_1:
  uint64_t v11 = (long long *)((char *)a2 - 24);
  uint64_t v12 = (const void **)a1;
LABEL_2:
  uint64_t v13 = 1 - a4;
  while (1)
  {
    a1 = (uint64_t)v12;
    uint64_t v14 = v13;
    uint64_t v15 = (char *)a2 - (char *)v12;
    unint64_t v16 = 0xAAAAAAAAAAAAAAABLL * (((char *)a2 - (char *)v12) >> 3);
    if (!(!v6 & v5))
    {
      switch(v16)
      {
        case 0uLL:
        case 1uLL:
          return;
        case 2uLL:
          if (sub_227BDF1BC(a3, (const void **)a2 - 3, v12))
          {
            char v31 = v12[2];
            long long v29 = *(_OWORD *)v12;
            long long v27 = *v11;
            v12[2] = (const void *)*((void *)a2 - 1);
            *(_OWORD *)uint64_t v12 = v27;
            *uint64_t v11 = v29;
            *((void *)a2 - 1) = v31;
          }
          break;
        case 3uLL:
          sub_227C3F908(v12, v12 + 3, (const void **)a2 - 3, a3);
          break;
        case 4uLL:
          sub_227C3FFCC((uint64_t)v12, v12 + 3, v12 + 6, (long long *)((char *)a2 - 24), a3);
          break;
        case 5uLL:
          sub_227C400B8((uint64_t)v12, v12 + 3, v12 + 6, (long long *)(v12 + 9), (long long *)((char *)a2 - 24), a3);
          break;
        default:
          JUMPOUT(0);
      }
      return;
    }
    if (v15 <= 575) {
      break;
    }
    if (v14 == 1)
    {
      if (v12 != (const void **)a2)
      {
        sub_227C401DC((uint64_t)v12, a2, a2, a3);
      }
      return;
    }
    unint64_t v17 = v16 >> 1;
    id v18 = &v12[3 * (v16 >> 1)];
    if ((unint64_t)v15 >= 0xC01)
    {
      sub_227C3F908(v12, &v12[3 * (v16 >> 1)], (const void **)a2 - 3, a3);
      uint64_t v19 = 3 * v17;
      unint64_t v20 = &v12[3 * v17 - 3];
      sub_227C3F908(v12 + 3, v20, (const void **)a2 - 6, a3);
      uint64_t v21 = v12 + 6;
      uint64_t v22 = &v12[v19 + 3];
      sub_227C3F908(v21, v22, (const void **)a2 - 9, a3);
      sub_227C3F908(v20, v18, v22, a3);
      unint64_t v30 = *(const void **)(a1 + 16);
      long long v28 = *(_OWORD *)a1;
      long long v23 = *(_OWORD *)v18;
      *(void *)(a1 + 16) = v18[2];
      *(_OWORD *)a1 = v23;
      v18[2] = v30;
      *(_OWORD *)id v18 = v28;
      if (a5) {
        goto LABEL_13;
      }
    }
    else
    {
      sub_227C3F908(&v12[3 * (v16 >> 1)], v12, (const void **)a2 - 3, a3);
      if (a5) {
        goto LABEL_13;
      }
    }
    if (!sub_227BDF1BC(a3, (const void **)(a1 - 24), (const void **)a1))
    {
      uint64_t v12 = sub_227C3FA54((const void **)a1, (unint64_t)a2, a3);
      goto LABEL_18;
    }
LABEL_13:
    unint64_t v24 = sub_227C3FBE8((long long *)a1, (const void **)a2, a3);
    if ((v25 & 1) == 0) {
      goto LABEL_16;
    }
    BOOL v26 = sub_227C3FD78(a1, v24, a3);
    uint64_t v12 = (const void **)(v24 + 24);
    if (sub_227C3FD78(v24 + 24, (uint64_t)a2, a3))
    {
      a4 = -v14;
      a2 = (long long *)v24;
      if (v26) {
        return;
      }
      goto LABEL_1;
    }
    uint64_t v13 = v14 + 1;
    if (!v26)
    {
LABEL_16:
      sub_227C3F2AC(a1, v24, a3, -v14, a5 & 1);
      uint64_t v12 = (const void **)(v24 + 24);
LABEL_18:
      a5 = 0;
      a4 = -v14;
      goto LABEL_2;
    }
  }
  if (a5)
  {
    sub_227C3F6D4((uint64_t)v12, (const void **)a2, a3);
  }
  else
  {
    sub_227C3F7FC(v12, (const void **)a2, a3);
  }
}

void sub_227C3F6D4(uint64_t a1, const void **a2, uint64_t a3)
{
  if ((const void **)a1 != a2)
  {
    uint64_t v19 = v3;
    uint64_t v20 = v4;
    uint64_t v7 = (const void **)(a1 + 24);
    if ((const void **)(a1 + 24) != a2)
    {
      uint64_t v9 = 0;
      char v10 = (const void **)a1;
      do
      {
        uint64_t v11 = v10;
        char v10 = v7;
        if (sub_227BDF1BC(a3, v7, v11))
        {
          long long v17 = *(_OWORD *)v10;
          id v18 = v10[2];
          v10[1] = 0;
          v10[2] = 0;
          *char v10 = 0;
          uint64_t v12 = v9;
          do
          {
            uint64_t v13 = a1 + v12;
            uint64_t v14 = (void **)(a1 + v12 + 24);
            if (*(char *)(a1 + v12 + 47) < 0) {
              operator delete(*v14);
            }
            *(_OWORD *)uint64_t v14 = *(_OWORD *)v13;
            *(void *)(a1 + v12 + 40) = *(void *)(v13 + 16);
            *(unsigned char *)(v13 + 23) = 0;
            *(unsigned char *)uint64_t v13 = 0;
            if (!v12)
            {
              uint64_t v16 = a1;
              goto LABEL_13;
            }
            v12 -= 24;
          }
          while (sub_227BDF1BC(a3, (const void **)&v17, (const void **)(v12 + a1)));
          int v15 = *(char *)(a1 + v12 + 47);
          uint64_t v16 = a1 + v12 + 24;
          if (v15 < 0) {
            operator delete(*(void **)v16);
          }
LABEL_13:
          *(_OWORD *)uint64_t v16 = v17;
          *(void *)(v16 + 16) = v18;
        }
        uint64_t v7 = v10 + 3;
        v9 += 24;
      }
      while (v10 + 3 != a2);
    }
  }
}

void sub_227C3F7FC(const void **a1, const void **a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v18 = v3;
    uint64_t v19 = v4;
    char v6 = a1;
    uint64_t v7 = a1 + 3;
    if (a1 + 3 != a2)
    {
      uint64_t v9 = a1 - 3;
      do
      {
        char v10 = v6;
        char v6 = v7;
        if (sub_227BDF1BC(a3, v7, v10))
        {
          long long v16 = *(_OWORD *)v6;
          long long v17 = v6[2];
          v6[1] = 0;
          v6[2] = 0;
          *char v6 = 0;
          uint64_t v11 = v9;
          do
          {
            uint64_t v12 = (void **)(v11 + 6);
            if (*((char *)v11 + 71) < 0) {
              operator delete(*v12);
            }
            *(_OWORD *)uint64_t v12 = *(_OWORD *)(v11 + 3);
            v11[8] = v11[5];
            *((unsigned char *)v11 + 47) = 0;
            *((unsigned char *)v11 + 24) = 0;
            BOOL v13 = sub_227BDF1BC(a3, (const void **)&v16, v11);
            v11 -= 3;
          }
          while (v13);
          int v14 = *((char *)v11 + 71);
          int v15 = v11 + 6;
          if (v14 < 0) {
            operator delete((void *)*v15);
          }
          *(_OWORD *)int v15 = v16;
          v15[2] = v17;
        }
        uint64_t v7 = v6 + 3;
        v9 += 3;
      }
      while (v6 + 3 != a2);
    }
  }
}

uint64_t sub_227C3F908(const void **a1, const void **a2, const void **a3, uint64_t a4)
{
  BOOL v8 = sub_227BDF1BC(a4, a2, a1);
  uint64_t result = sub_227BDF1BC(a4, a3, a2);
  if (!v8)
  {
    if (!result) {
      return result;
    }
    BOOL v13 = a2[2];
    long long v14 = *(_OWORD *)a2;
    int v15 = a3[2];
    *(_OWORD *)a2 = *(_OWORD *)a3;
    a2[2] = v15;
    *(_OWORD *)a3 = v14;
    a3[2] = v13;
    if (!sub_227BDF1BC(a4, a2, a1)) {
      return 1;
    }
    long long v16 = a1[2];
    long long v17 = *(_OWORD *)a1;
    uint64_t v18 = a2[2];
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = v18;
    *(_OWORD *)a2 = v17;
    a2[2] = v16;
    return 2;
  }
  if (!result)
  {
    uint64_t v19 = a1[2];
    long long v20 = *(_OWORD *)a1;
    uint64_t v21 = a2[2];
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = v21;
    *(_OWORD *)a2 = v20;
    a2[2] = v19;
    if (!sub_227BDF1BC(a4, a3, a2)) {
      return 1;
    }
    uint64_t v22 = a2[2];
    long long v23 = *(_OWORD *)a2;
    unint64_t v24 = a3[2];
    *(_OWORD *)a2 = *(_OWORD *)a3;
    a2[2] = v24;
    *(_OWORD *)a3 = v23;
    a3[2] = v22;
    return 2;
  }
  char v10 = a1[2];
  long long v11 = *(_OWORD *)a1;
  uint64_t v12 = a3[2];
  *(_OWORD *)a1 = *(_OWORD *)a3;
  a1[2] = v12;
  *(_OWORD *)a3 = v11;
  a3[2] = v10;
  return 1;
}

const void **sub_227C3FA54(const void **a1, unint64_t a2, uint64_t a3)
{
  unint64_t v4 = a2;
  long long v16 = *(_OWORD *)a1;
  long long v17 = a1[2];
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  if (sub_227BDF1BC(a3, (const void **)&v16, (const void **)(a2 - 24)))
  {
    char v6 = a1;
    do
      v6 += 3;
    while (!sub_227BDF1BC(a3, (const void **)&v16, v6));
  }
  else
  {
    uint64_t v7 = a1 + 3;
    do
    {
      char v6 = v7;
      if ((unint64_t)v7 >= v4) {
        break;
      }
      BOOL v8 = sub_227BDF1BC(a3, (const void **)&v16, v7);
      uint64_t v7 = v6 + 3;
    }
    while (!v8);
  }
  if ((unint64_t)v6 < v4)
  {
    do
      v4 -= 24;
    while (sub_227BDF1BC(a3, (const void **)&v16, (const void **)v4));
  }
  while ((unint64_t)v6 < v4)
  {
    long long v9 = *(_OWORD *)v6;
    uint64_t v19 = v6[2];
    long long v18 = v9;
    long long v10 = *(_OWORD *)v4;
    v6[2] = *(const void **)(v4 + 16);
    *(_OWORD *)char v6 = v10;
    long long v11 = v18;
    *(void *)(v4 + 16) = v19;
    *(_OWORD *)unint64_t v4 = v11;
    do
      v6 += 3;
    while (!sub_227BDF1BC(a3, (const void **)&v16, v6));
    do
      v4 -= 24;
    while (sub_227BDF1BC(a3, (const void **)&v16, (const void **)v4));
  }
  uint64_t v12 = (void **)(v6 - 3);
  if (v6 - 3 == a1)
  {
    if (*((char *)v6 - 1) < 0) {
      operator delete(*v12);
    }
  }
  else
  {
    if (*((char *)a1 + 23) < 0) {
      operator delete((void *)*a1);
    }
    long long v13 = *(_OWORD *)v12;
    a1[2] = *(v6 - 1);
    *(_OWORD *)a1 = v13;
    *((unsigned char *)v6 - 1) = 0;
    *((unsigned char *)v6 - 24) = 0;
  }
  long long v14 = v16;
  *(v6 - 1) = v17;
  *(_OWORD *)uint64_t v12 = v14;
  return v6;
}

unint64_t sub_227C3FBE8(long long *a1, const void **a2, uint64_t a3)
{
  uint64_t v6 = 0;
  long long v17 = *a1;
  uint64_t v18 = *((void *)a1 + 2);
  *((void *)a1 + 1) = 0;
  *((void *)a1 + 2) = 0;
  *(void *)a1 = 0;
  do
    v6 += 24;
  while (sub_227BDF1BC(a3, (const void **)((char *)a1 + v6), (const void **)&v17));
  unint64_t v7 = (unint64_t)a1 + v6;
  if (v6 == 24)
  {
    do
    {
      if (v7 >= (unint64_t)a2) {
        break;
      }
      a2 -= 3;
    }
    while (!sub_227BDF1BC(a3, a2, (const void **)&v17));
  }
  else
  {
    do
      a2 -= 3;
    while (!sub_227BDF1BC(a3, a2, (const void **)&v17));
  }
  unint64_t v8 = (unint64_t)a1 + v6;
  if (v7 < (unint64_t)a2)
  {
    long long v9 = a2;
    do
    {
      long long v19 = *(_OWORD *)v8;
      long long v10 = v19;
      long long v20 = *(const void **)(v8 + 16);
      long long v11 = v20;
      uint64_t v12 = v9[2];
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v9;
      *(void *)(v8 + 16) = v12;
      v9[2] = v11;
      *(_OWORD *)long long v9 = v10;
      do
        v8 += 24;
      while (sub_227BDF1BC(a3, (const void **)v8, (const void **)&v17));
      do
        v9 -= 3;
      while (!sub_227BDF1BC(a3, v9, (const void **)&v17));
    }
    while (v8 < (unint64_t)v9);
  }
  long long v13 = (void **)(v8 - 24);
  if ((long long *)(v8 - 24) == a1)
  {
    if (*(char *)(v8 - 1) < 0) {
      operator delete(*v13);
    }
  }
  else
  {
    if (*((char *)a1 + 23) < 0) {
      operator delete(*(void **)a1);
    }
    long long v14 = *(_OWORD *)v13;
    *((void *)a1 + 2) = *(void *)(v8 - 8);
    *a1 = v14;
    *(unsigned char *)(v8 - 1) = 0;
    *(unsigned char *)(v8 - 24) = 0;
  }
  long long v15 = v17;
  *(void *)(v8 - 8) = v18;
  *(_OWORD *)long long v13 = v15;
  return v8 - 24;
}

BOOL sub_227C3FD78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (a2 - a1) >> 3;
  BOOL result = 1;
  switch(0xAAAAAAAAAAAAAAABLL * v6)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      uint64_t v8 = a2 - 24;
      if (sub_227BDF1BC(a3, (const void **)(a2 - 24), (const void **)a1))
      {
        uint64_t v9 = *(void *)(a1 + 16);
        long long v10 = *(_OWORD *)a1;
        uint64_t v11 = *(void *)(v8 + 16);
        *(_OWORD *)a1 = *(_OWORD *)v8;
        *(void *)(a1 + 16) = v11;
        *(_OWORD *)uint64_t v8 = v10;
        *(void *)(v8 + 16) = v9;
      }
      return 1;
    case 3uLL:
      sub_227C3F908((const void **)a1, (const void **)(a1 + 24), (const void **)(a2 - 24), a3);
      return 1;
    case 4uLL:
      sub_227C3FFCC(a1, (const void **)(a1 + 24), (const void **)(a1 + 48), (long long *)(a2 - 24), a3);
      return 1;
    case 5uLL:
      sub_227C400B8(a1, (const void **)(a1 + 24), (const void **)(a1 + 48), (long long *)(a1 + 72), (long long *)(a2 - 24), a3);
      return 1;
    default:
      uint64_t v12 = (const void **)(a1 + 48);
      sub_227C3F908((const void **)a1, (const void **)(a1 + 24), (const void **)(a1 + 48), a3);
      uint64_t v13 = a1 + 72;
      if (a1 + 72 == a2) {
        return 1;
      }
      uint64_t v14 = 0;
      int v15 = 0;
      break;
  }
  while (1)
  {
    if (sub_227BDF1BC(a3, (const void **)v13, v12))
    {
      long long v22 = *(_OWORD *)v13;
      uint64_t v23 = *(void *)(v13 + 16);
      *(void *)(v13 + 8) = 0;
      *(void *)(v13 + 16) = 0;
      *(void *)uint64_t v13 = 0;
      uint64_t v16 = v14;
      do
      {
        uint64_t v17 = a1 + v16;
        uint64_t v18 = (void **)(a1 + v16 + 72);
        if (*(char *)(a1 + v16 + 95) < 0) {
          operator delete(*v18);
        }
        *(_OWORD *)uint64_t v18 = *(_OWORD *)(v17 + 48);
        *(void *)(a1 + v16 + 88) = *(void *)(v17 + 64);
        *(unsigned char *)(v17 + 71) = 0;
        *(unsigned char *)(v17 + 48) = 0;
        if (v16 == -48)
        {
          uint64_t v21 = a1;
          goto LABEL_15;
        }
        BOOL v19 = sub_227BDF1BC(a3, (const void **)&v22, (const void **)(a1 + v16 + 24));
        v16 -= 24;
      }
      while (v19);
      int v20 = *(char *)(a1 + v16 + 95);
      uint64_t v21 = a1 + v16 + 72;
      if (v20 < 0) {
        operator delete(*(void **)v21);
      }
LABEL_15:
      *(_OWORD *)uint64_t v21 = v22;
      *(void *)(v21 + 16) = v23;
      if (++v15 == 8) {
        return v13 + 24 == a2;
      }
    }
    uint64_t v12 = (const void **)v13;
    v14 += 24;
    v13 += 24;
    if (v13 == a2) {
      return 1;
    }
  }
}

__n128 sub_227C3FFCC(uint64_t a1, const void **a2, const void **a3, long long *a4, uint64_t a5)
{
  sub_227C3F908((const void **)a1, a2, a3, a5);
  if (sub_227BDF1BC(a5, (const void **)a4, a3))
  {
    uint64_t v11 = a3[2];
    long long v12 = *(_OWORD *)a3;
    uint64_t v13 = (const void *)*((void *)a4 + 2);
    *(_OWORD *)a3 = *a4;
    a3[2] = v13;
    *a4 = v12;
    *((void *)a4 + 2) = v11;
    if (sub_227BDF1BC(a5, a3, a2))
    {
      uint64_t v14 = a2[2];
      long long v15 = *(_OWORD *)a2;
      uint64_t v16 = a3[2];
      *(_OWORD *)a2 = *(_OWORD *)a3;
      a2[2] = v16;
      *(_OWORD *)a3 = v15;
      a3[2] = v14;
      if (sub_227BDF1BC(a5, a2, (const void **)a1))
      {
        uint64_t v17 = *(const void **)(a1 + 16);
        __n128 result = *(__n128 *)a1;
        uint64_t v18 = a2[2];
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(void *)(a1 + 16) = v18;
        *(__n128 *)a2 = result;
        a2[2] = v17;
      }
    }
  }
  return result;
}

__n128 sub_227C400B8(uint64_t a1, const void **a2, const void **a3, long long *a4, long long *a5, uint64_t a6)
{
  sub_227C3FFCC(a1, a2, a3, a4, a6);
  if (sub_227BDF1BC(a6, (const void **)a5, (const void **)a4))
  {
    uint64_t v13 = *((void *)a4 + 2);
    long long v14 = *a4;
    uint64_t v15 = *((void *)a5 + 2);
    *a4 = *a5;
    *((void *)a4 + 2) = v15;
    *a5 = v14;
    *((void *)a5 + 2) = v13;
    if (sub_227BDF1BC(a6, (const void **)a4, a3))
    {
      uint64_t v16 = a3[2];
      long long v17 = *(_OWORD *)a3;
      uint64_t v18 = (const void *)*((void *)a4 + 2);
      *(_OWORD *)a3 = *a4;
      a3[2] = v18;
      *a4 = v17;
      *((void *)a4 + 2) = v16;
      if (sub_227BDF1BC(a6, a3, a2))
      {
        BOOL v19 = a2[2];
        long long v20 = *(_OWORD *)a2;
        uint64_t v21 = a3[2];
        *(_OWORD *)a2 = *(_OWORD *)a3;
        a2[2] = v21;
        *(_OWORD *)a3 = v20;
        a3[2] = v19;
        if (sub_227BDF1BC(a6, a2, (const void **)a1))
        {
          long long v22 = *(const void **)(a1 + 16);
          __n128 result = *(__n128 *)a1;
          uint64_t v23 = a2[2];
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(void *)(a1 + 16) = v23;
          *(__n128 *)a2 = result;
          a2[2] = v22;
        }
      }
    }
  }
  return result;
}

long long *sub_227C401DC(uint64_t a1, long long *a2, long long *a3, uint64_t a4)
{
  if ((long long *)a1 != a2)
  {
    uint64_t v8 = (uint64_t)a2 - a1;
    uint64_t v9 = ((uint64_t)a2 - a1) / 24;
    if ((uint64_t)a2 - a1 >= 25)
    {
      unint64_t v10 = (unint64_t)(v9 - 2) >> 1;
      unint64_t v11 = v10 + 1;
      long long v12 = (__n128 *)(a1 + 24 * v10);
      do
      {
        sub_227C40428(a1, a4, v9, v12);
        long long v12 = (__n128 *)((char *)v12 - 24);
        --v11;
      }
      while (v11);
    }
    uint64_t v13 = a2;
    if (a2 != a3)
    {
      long long v14 = a2;
      do
      {
        if (sub_227BDF1BC(a4, (const void **)v14, (const void **)a1))
        {
          uint64_t v15 = *((void *)v14 + 2);
          long long v16 = *v14;
          uint64_t v17 = *(void *)(a1 + 16);
          *long long v14 = *(_OWORD *)a1;
          *((void *)v14 + 2) = v17;
          *(_OWORD *)a1 = v16;
          *(void *)(a1 + 16) = v15;
          sub_227C40428(a1, a4, v9, (__n128 *)a1);
        }
        long long v14 = (long long *)((char *)v14 + 24);
      }
      while (v14 != a3);
      uint64_t v13 = a3;
    }
    if (v8 >= 25)
    {
      int64_t v18 = v8 / 0x18uLL;
      BOOL v19 = (long long *)((char *)a2 - 24);
      do
      {
        uint64_t v20 = *(void *)a1;
        *(void *)long long v28 = *(void *)(a1 + 8);
        *(void *)&v28[7] = *(void *)(a1 + 15);
        char v21 = *(unsigned char *)(a1 + 23);
        *(void *)(a1 + 8) = 0;
        *(void *)(a1 + 16) = 0;
        *(void *)a1 = 0;
        uint64_t v22 = sub_227C405C4(a1, a4, v18);
        uint64_t v23 = v22;
        int v24 = *(char *)(v22 + 23);
        if (v19 == (long long *)v22)
        {
          if (v24 < 0) {
            operator delete(*(void **)v22);
          }
          *(void *)uint64_t v23 = v20;
          *(void *)(v23 + 8) = *(void *)v28;
          *(void *)(v23 + 15) = *(void *)&v28[7];
          *(unsigned char *)(v23 + 23) = v21;
        }
        else
        {
          if (v24 < 0) {
            operator delete(*(void **)v22);
          }
          long long v25 = *v19;
          *(void *)(v23 + 16) = *((void *)v19 + 2);
          *(_OWORD *)uint64_t v23 = v25;
          *(void *)BOOL v19 = v20;
          *((void *)v19 + 1) = *(void *)v28;
          *(void *)((char *)v19 + 15) = *(void *)&v28[7];
          *((unsigned char *)v19 + 23) = v21;
          sub_227C406A0(a1, v23 + 24, a4, 0xAAAAAAAAAAAAAAABLL * ((v23 + 24 - a1) >> 3));
        }
        BOOL v19 = (long long *)((char *)v19 - 24);
      }
      while (v18-- > 2);
    }
    return v13;
  }
  return a3;
}

void sub_227C40410(_Unwind_Exception *exception_object)
{
  if (v2 < 0) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

__n128 sub_227C40428(uint64_t a1, uint64_t a2, uint64_t a3, __n128 *a4)
{
  unint64_t v6 = a3 - 2;
  if (a3 >= 2)
  {
    uint64_t v22 = v4;
    uint64_t v23 = v5;
    unint64_t v7 = a4;
    uint64_t v9 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) >= (uint64_t)(0xAAAAAAAAAAAAAAABLL * (((uint64_t)a4 - a1) >> 3)))
    {
      uint64_t v12 = (0x5555555555555556 * (((uint64_t)a4 - a1) >> 3)) | 1;
      uint64_t v13 = a1 + 24 * v12;
      uint64_t v14 = 0x5555555555555556 * (((uint64_t)a4 - a1) >> 3) + 2;
      if (v14 < a3 && sub_227BDF1BC(a2, (const void **)(a1 + 24 * v12), (const void **)(v13 + 24)))
      {
        v13 += 24;
        uint64_t v12 = v14;
      }
      if (!sub_227BDF1BC(a2, (const void **)v13, (const void **)v7))
      {
        __n128 v20 = *v7;
        unint64_t v21 = v7[1].n128_u64[0];
        v7->n128_u64[1] = 0;
        v7[1].n128_u64[0] = 0;
        v7->n128_u64[0] = 0;
        while (1)
        {
          long long v16 = (__n128 *)v13;
          if (v7[1].n128_i8[7] < 0) {
            operator delete((void *)v7->n128_u64[0]);
          }
          __n128 v17 = *(__n128 *)v13;
          v7[1].n128_u64[0] = *(void *)(v13 + 16);
          *unint64_t v7 = v17;
          *(unsigned char *)(v13 + 23) = 0;
          *(unsigned char *)uint64_t v13 = 0;
          if (v9 < v12) {
            break;
          }
          uint64_t v18 = (2 * v12) | 1;
          uint64_t v13 = a1 + 24 * v18;
          uint64_t v19 = 2 * v12 + 2;
          if (v19 < a3 && sub_227BDF1BC(a2, (const void **)(a1 + 24 * v18), (const void **)(v13 + 24)))
          {
            v13 += 24;
            uint64_t v18 = v19;
          }
          unint64_t v7 = v16;
          uint64_t v12 = v18;
          if (sub_227BDF1BC(a2, (const void **)v13, (const void **)&v20))
          {
            if (v16[1].n128_i8[7] < 0) {
              operator delete((void *)v16->n128_u64[0]);
            }
            break;
          }
        }
        __n128 result = v20;
        v16[1].n128_u64[0] = v21;
        *long long v16 = result;
      }
    }
  }
  return result;
}

uint64_t sub_227C405C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = 0;
  uint64_t v7 = a3 - 2;
  if (a3 < 2) {
    uint64_t v7 = a3 - 1;
  }
  uint64_t v8 = v7 >> 1;
  do
  {
    uint64_t v9 = a1 + 24 * v6 + 24;
    uint64_t v10 = 2 * v6;
    uint64_t v6 = (2 * v6) | 1;
    uint64_t v11 = v10 + 2;
    if (v10 + 2 < a3 && sub_227BDF1BC(a2, (const void **)v9, (const void **)(v9 + 24)))
    {
      v9 += 24;
      uint64_t v6 = v11;
    }
    if (*(char *)(a1 + 23) < 0) {
      operator delete(*(void **)a1);
    }
    long long v12 = *(_OWORD *)v9;
    *(void *)(a1 + 16) = *(void *)(v9 + 16);
    *(_OWORD *)a1 = v12;
    *(unsigned char *)(v9 + 23) = 0;
    *(unsigned char *)uint64_t v9 = 0;
    a1 = v9;
  }
  while (v6 <= v8);
  return v9;
}

double sub_227C406A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 >= 2)
  {
    uint64_t v16 = v4;
    uint64_t v17 = v5;
    unint64_t v8 = (unint64_t)(a4 - 2) >> 1;
    uint64_t v9 = (long long *)(a1 + 24 * v8);
    uint64_t v10 = (long long *)(a2 - 24);
    if (sub_227BDF1BC(a3, (const void **)v9, (const void **)(a2 - 24)))
    {
      long long v14 = *v10;
      uint64_t v15 = *((void *)v10 + 2);
      *((void *)v10 + 1) = 0;
      *((void *)v10 + 2) = 0;
      *(void *)uint64_t v10 = 0;
      while (1)
      {
        long long v12 = v9;
        if (*((char *)v10 + 23) < 0) {
          operator delete(*(void **)v10);
        }
        long long v13 = *v9;
        *((void *)v10 + 2) = *((void *)v9 + 2);
        *uint64_t v10 = v13;
        *((unsigned char *)v9 + 23) = 0;
        *(unsigned char *)uint64_t v9 = 0;
        if (!v8) {
          break;
        }
        unint64_t v8 = (v8 - 1) >> 1;
        uint64_t v9 = (long long *)(a1 + 24 * v8);
        uint64_t v10 = v12;
        if (!sub_227BDF1BC(a3, (const void **)v9, (const void **)&v14))
        {
          if (*((char *)v12 + 23) < 0) {
            operator delete(*(void **)v12);
          }
          break;
        }
      }
      double result = *(double *)&v14;
      *long long v12 = v14;
      *((void *)v12 + 2) = v15;
    }
  }
  return result;
}

double sub_227C407A4(unint64_t a1)
{
  double v2 = *(double *)&qword_2681B9B98;
  if (*(double *)&qword_2681B9B98 == 0.0)
  {
    mach_timebase_info(&info);
    if (info.denom)
    {
      uint32_t denom = info.denom;
      uint32_t numer = info.numer;
      do
      {
        uint32_t v5 = denom;
        uint32_t denom = numer % denom;
        uint32_t numer = v5;
      }
      while (denom);
    }
    else
    {
      uint32_t v5 = info.numer;
    }
    unsigned int v6 = 1000000000;
    uint32_t v7 = info.numer / v5;
    do
    {
      uint32_t v8 = v7;
      uint32_t v7 = v6;
      unsigned int v6 = v8 % v6;
    }
    while (v6);
    double v2 = (double)(info.numer / v5 / v7) / (double)(0x3B9ACA00 / v7 * (unint64_t)(info.denom / v5));
    *(double *)&qword_2681B9B98 = v2;
  }
  return v2 * (double)a1;
}

double sub_227C40864()
{
  uint64_t v0 = mach_absolute_time();

  return sub_227C407A4(v0);
}

double sub_227C4088C()
{
  uint64_t v0 = mach_continuous_time();

  return sub_227C407A4(v0);
}

uint64_t sub_227C408B4(uint64_t result)
{
  *(void *)double result = &unk_26DC26F48;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

void sub_227C408DC(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227C40914(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC26F48;
  *(_DWORD *)(a1 + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 28);
  if (v2)
  {
    double result = *(double *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 28) = 1;
    *(double *)(a1 + 8) = result;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 28) & 4) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 24);
    v3 |= 4u;
    *(unsigned char *)(a1 + 28) = v3;
    *(_DWORD *)(a1 + 24) = v5;
    char v2 = *(unsigned char *)(a2 + 28);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    double result = *(double *)(a2 + 16);
    *(unsigned char *)(a1 + 28) = v3 | 2;
    *(double *)(a1 + 16) = result;
  }
  return result;
}

uint64_t sub_227C40994(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "state");
    char v5 = *(unsigned char *)(a1 + 28);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((*(unsigned char *)(a1 + 28) & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  if ((*(unsigned char *)(a1 + 28) & 2) != 0) {
LABEL_4:
  }
    PB::TextFormatter::format(this, "timestampGestureBegin", *(double *)(a1 + 16));
LABEL_5:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C40A38(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  for (int i = *((unsigned __int8 *)this + 24); v2 < v3 && i == 0; int i = *((unsigned __int8 *)this + 24))
  {
    uint64_t v8 = *(void *)this;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      while (v3 != v2)
      {
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)this + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_20;
        }
        v15 += 7;
        unint64_t v2 = v17;
        if (v16++ >= 9)
        {
LABEL_19:
          unint64_t v11 = 0;
          goto LABEL_20;
        }
      }
      int i = 1;
      *((unsigned char *)this + 24) = 1;
      return i == 0;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)this + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_20:
    if ((v11 & 7) == 4)
    {
      int i = 0;
      return i == 0;
    }
    unint64_t v20 = v11 >> 3;
    if ((v11 >> 3) == 3)
    {
      *(unsigned char *)(a1 + 28) |= 2u;
      unint64_t v2 = *((void *)this + 1);
      if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
      {
        *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
        goto LABEL_47;
      }
    }
    else
    {
      if (v20 == 2)
      {
        *(unsigned char *)(a1 + 28) |= 4u;
        unint64_t v21 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v22 = *(void *)this;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v25 = 0;
          if (v2 <= v21) {
            unint64_t v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v21)
            {
              LODWORD(v25) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_52;
            }
            unint64_t v30 = v21++;
            char v31 = *(unsigned char *)(v22 + v30);
            *((void *)this + 1) = v21;
            v25 |= (unint64_t)(v31 & 0x7F) << v28;
            if ((v31 & 0x80) == 0) {
              break;
            }
            v28 += 7;
            BOOL v14 = v29++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              goto LABEL_51;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v25) = 0;
          }
LABEL_51:
          unint64_t v2 = v30 + 1;
        }
        else
        {
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          while (1)
          {
            unint64_t v2 = v21 + 1;
            *((void *)this + 1) = v21 + 1;
            char v26 = *(unsigned char *)(v22 + v21);
            v25 |= (unint64_t)(v26 & 0x7F) << v23;
            if ((v26 & 0x80) == 0) {
              break;
            }
            v23 += 7;
            unint64_t v21 = v2;
            BOOL v14 = v24++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              break;
            }
          }
        }
LABEL_52:
        *(_DWORD *)(a1 + 24) = v25;
        goto LABEL_53;
      }
      if (v20 != 1)
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
        goto LABEL_53;
      }
      *(unsigned char *)(a1 + 28) |= 1u;
      unint64_t v2 = *((void *)this + 1);
      if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
      {
        *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
LABEL_47:
        unint64_t v2 = *((void *)this + 1) + 8;
        *((void *)this + 1) = v2;
        goto LABEL_53;
      }
    }
    *((unsigned char *)this + 24) = 1;
LABEL_53:
    unint64_t v3 = *((void *)this + 2);
  }
  return i == 0;
}

uint64_t sub_227C40D08(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if ((v4 & 1) == 0)
  {
    if ((*(unsigned char *)(result + 28) & 4) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(unsigned char *)(v3 + 28) & 2) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 4) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_7:
  double v5 = *(double *)(v3 + 16);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227C40D94(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC26F80;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

void sub_227C40DBC(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C40DF4(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC26F80;
  *(_DWORD *)(result + 64) = 0;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    __int16 v3 = 1;
    *(_WORD *)(result + 64) = 1;
    *(void *)(result + 8) = v4;
    __int16 v2 = *(_WORD *)(a2 + 64);
    if ((v2 & 0x800) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((*(_WORD *)(a2 + 64) & 0x800) != 0)
  {
LABEL_5:
    char v5 = *(unsigned char *)(a2 + 60);
    v3 |= 0x800u;
    *(_WORD *)(result + 64) = v3;
    *(unsigned char *)(result + 60) = v5;
    __int16 v2 = *(_WORD *)(a2 + 64);
  }
LABEL_6:
  if ((v2 & 0x400) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 56);
    v3 |= 0x400u;
    *(_WORD *)(result + 64) = v3;
    *(_DWORD *)(result + 56) = v6;
    __int16 v2 = *(_WORD *)(a2 + 64);
    if ((v2 & 2) == 0)
    {
LABEL_8:
      if ((v2 & 0x1000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_20;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(result + 64) = v3;
  *(void *)(result + 16) = v7;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x1000) == 0)
  {
LABEL_9:
    if ((v2 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  char v8 = *(unsigned char *)(a2 + 61);
  v3 |= 0x1000u;
  *(_WORD *)(result + 64) = v3;
  *(unsigned char *)(result + 61) = v8;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x40) == 0)
  {
LABEL_10:
    if ((v2 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  int v9 = *(_DWORD *)(a2 + 40);
  v3 |= 0x40u;
  *(_WORD *)(result + 64) = v3;
  *(_DWORD *)(result + 40) = v9;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x80) == 0)
  {
LABEL_11:
    if ((v2 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v10 = *(_DWORD *)(a2 + 44);
  v3 |= 0x80u;
  *(_WORD *)(result + 64) = v3;
  *(_DWORD *)(result + 44) = v10;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x100) == 0)
  {
LABEL_12:
    if ((v2 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_24;
  }
LABEL_23:
  int v11 = *(_DWORD *)(a2 + 48);
  v3 |= 0x100u;
  *(_WORD *)(result + 64) = v3;
  *(_DWORD *)(result + 48) = v11;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 8) == 0)
  {
LABEL_13:
    if ((v2 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v12 = *(_DWORD *)(a2 + 28);
  v3 |= 8u;
  *(_WORD *)(result + 64) = v3;
  *(_DWORD *)(result + 28) = v12;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x10) == 0)
  {
LABEL_14:
    if ((v2 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_26;
  }
LABEL_25:
  int v13 = *(_DWORD *)(a2 + 32);
  v3 |= 0x10u;
  *(_WORD *)(result + 64) = v3;
  *(_DWORD *)(result + 32) = v13;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x20) == 0)
  {
LABEL_15:
    if ((v2 & 4) == 0) {
      goto LABEL_16;
    }
    goto LABEL_27;
  }
LABEL_26:
  int v14 = *(_DWORD *)(a2 + 36);
  v3 |= 0x20u;
  *(_WORD *)(result + 64) = v3;
  *(_DWORD *)(result + 36) = v14;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 4) == 0)
  {
LABEL_16:
    if ((v2 & 0x200) == 0) {
      return result;
    }
LABEL_28:
    int v16 = *(_DWORD *)(a2 + 52);
    *(_WORD *)(result + 64) = v3 | 0x200;
    *(_DWORD *)(result + 52) = v16;
    return result;
  }
LABEL_27:
  int v15 = *(_DWORD *)(a2 + 24);
  v3 |= 4u;
  *(_WORD *)(result + 64) = v3;
  *(_DWORD *)(result + 24) = v15;
  if ((*(_WORD *)(a2 + 64) & 0x200) != 0) {
    goto LABEL_28;
  }
  return result;
}

uint64_t sub_227C40F8C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "classificationType");
    __int16 v5 = *(_WORD *)(a1 + 64);
    if ((v5 & 8) == 0)
    {
LABEL_3:
      if ((v5 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v5 & 8) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "intervalSleepBeginToSleepDetected", *(float *)(a1 + 28));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x10) == 0)
  {
LABEL_4:
    if ((v5 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "intervalSleepDetectedToGazeDetected", *(float *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x20) == 0)
  {
LABEL_5:
    if ((v5 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "intervalSleepDetectedToWakeDetected", *(float *)(a1 + 36));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x40) == 0)
  {
LABEL_6:
    if ((v5 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "intervalWakeBeginToWakeDetected", *(float *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x80) == 0)
  {
LABEL_7:
    if ((v5 & 0x100) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "intervalWakeDetectedToGazeDetected", *(float *)(a1 + 44));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x100) == 0)
  {
LABEL_8:
    if ((v5 & 0x800) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "intervalWakeDetectedToSleepDetected", *(float *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x800) == 0)
  {
LABEL_9:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "shouldNotify");
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x1000) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "shouldNotifyStats");
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "sleepType");
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x400) == 0)
  {
LABEL_12:
    if ((v5 & 1) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "state");
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 1) == 0)
  {
LABEL_13:
    if ((v5 & 2) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_29:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  if ((*(_WORD *)(a1 + 64) & 2) != 0) {
LABEL_14:
  }
    PB::TextFormatter::format(this, "timestampGestureBegin", *(double *)(a1 + 16));
LABEL_15:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C41170(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 64) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_59;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_39;
            case 2u:
              *(_WORD *)(a1 + 64) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v22 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v21 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v22 = v21 != 0;
              }
              *(unsigned char *)(a1 + 60) = v22;
              goto LABEL_117;
            case 3u:
              *(_WORD *)(a1 + 64) |= 0x400u;
              unint64_t v23 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v24 = *(void *)this;
              if (v23 > 0xFFFFFFFFFFFFFFF5 || v23 + 10 > v2)
              {
                char v43 = 0;
                unsigned int v44 = 0;
                uint64_t v27 = 0;
                if (v2 <= v23) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v23)
                  {
                    LODWORD(v27) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_106;
                  }
                  unint64_t v45 = v23++;
                  char v46 = *(unsigned char *)(v24 + v45);
                  *((void *)this + 1) = v23;
                  v27 |= (unint64_t)(v46 & 0x7F) << v43;
                  if ((v46 & 0x80) == 0) {
                    break;
                  }
                  v43 += 7;
                  BOOL v14 = v44++ > 8;
                  if (v14)
                  {
                    LODWORD(v27) = 0;
LABEL_105:
                    unint64_t v2 = v45 + 1;
                    goto LABEL_106;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v27) = 0;
                }
                goto LABEL_105;
              }
              char v25 = 0;
              unsigned int v26 = 0;
              uint64_t v27 = 0;
              do
              {
                unint64_t v2 = v23 + 1;
                *((void *)this + 1) = v23 + 1;
                char v28 = *(unsigned char *)(v24 + v23);
                v27 |= (unint64_t)(v28 & 0x7F) << v25;
                if ((v28 & 0x80) == 0) {
                  goto LABEL_106;
                }
                v25 += 7;
                unint64_t v23 = v2;
                BOOL v14 = v26++ > 8;
              }
              while (!v14);
              LODWORD(v27) = 0;
LABEL_106:
              *(_DWORD *)(a1 + 56) = v27;
              goto LABEL_117;
            case 4u:
              *(_WORD *)(a1 + 64) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_59;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
LABEL_39:
              unint64_t v2 = *((void *)this + 1) + 8;
              goto LABEL_101;
            case 5u:
              *(_WORD *)(a1 + 64) |= 0x1000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v30 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v29 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v30 = v29 != 0;
              }
              *(unsigned char *)(a1 + 61) = v30;
              goto LABEL_117;
            case 6u:
              *(_WORD *)(a1 + 64) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_59;
              }
              *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_100;
            case 7u:
              *(_WORD *)(a1 + 64) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_59;
              }
              *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_100;
            case 8u:
              *(_WORD *)(a1 + 64) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_59;
              }
              *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_100;
            case 9u:
              *(_WORD *)(a1 + 64) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_59;
              }
              *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_100;
            case 0xAu:
              *(_WORD *)(a1 + 64) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_59;
              }
              *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_100;
            case 0xBu:
              *(_WORD *)(a1 + 64) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
LABEL_100:
                unint64_t v2 = *((void *)this + 1) + 4;
LABEL_101:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_59:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_117;
            case 0xCu:
              *(_WORD *)(a1 + 64) |= 4u;
              unint64_t v31 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v32 = *(void *)this;
              if (v31 > 0xFFFFFFFFFFFFFFF5 || v31 + 10 > v2)
              {
                char v47 = 0;
                unsigned int v48 = 0;
                uint64_t v35 = 0;
                if (v2 <= v31) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v31)
                  {
                    LODWORD(v35) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_111;
                  }
                  unint64_t v49 = v31++;
                  char v50 = *(unsigned char *)(v32 + v49);
                  *((void *)this + 1) = v31;
                  v35 |= (unint64_t)(v50 & 0x7F) << v47;
                  if ((v50 & 0x80) == 0) {
                    break;
                  }
                  v47 += 7;
                  BOOL v14 = v48++ > 8;
                  if (v14)
                  {
                    LODWORD(v35) = 0;
LABEL_110:
                    unint64_t v2 = v49 + 1;
                    goto LABEL_111;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v35) = 0;
                }
                goto LABEL_110;
              }
              char v33 = 0;
              unsigned int v34 = 0;
              uint64_t v35 = 0;
              do
              {
                unint64_t v2 = v31 + 1;
                *((void *)this + 1) = v31 + 1;
                char v36 = *(unsigned char *)(v32 + v31);
                v35 |= (unint64_t)(v36 & 0x7F) << v33;
                if ((v36 & 0x80) == 0) {
                  goto LABEL_111;
                }
                v33 += 7;
                unint64_t v31 = v2;
                BOOL v14 = v34++ > 8;
              }
              while (!v14);
              LODWORD(v35) = 0;
LABEL_111:
              *(_DWORD *)(a1 + 24) = v35;
              goto LABEL_117;
            case 0xDu:
              *(_WORD *)(a1 + 64) |= 0x200u;
              unint64_t v37 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v38 = *(void *)this;
              if (v37 > 0xFFFFFFFFFFFFFFF5 || v37 + 10 > v2)
              {
                char v51 = 0;
                unsigned int v52 = 0;
                uint64_t v41 = 0;
                if (v2 <= v37) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v37)
                  {
                    LODWORD(v41) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_116;
                  }
                  unint64_t v53 = v37++;
                  char v54 = *(unsigned char *)(v38 + v53);
                  *((void *)this + 1) = v37;
                  v41 |= (unint64_t)(v54 & 0x7F) << v51;
                  if ((v54 & 0x80) == 0) {
                    break;
                  }
                  v51 += 7;
                  BOOL v14 = v52++ > 8;
                  if (v14)
                  {
                    LODWORD(v41) = 0;
LABEL_115:
                    unint64_t v2 = v53 + 1;
                    goto LABEL_116;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v41) = 0;
                }
                goto LABEL_115;
              }
              char v39 = 0;
              unsigned int v40 = 0;
              uint64_t v41 = 0;
              do
              {
                unint64_t v2 = v37 + 1;
                *((void *)this + 1) = v37 + 1;
                char v42 = *(unsigned char *)(v38 + v37);
                v41 |= (unint64_t)(v42 & 0x7F) << v39;
                if ((v42 & 0x80) == 0) {
                  goto LABEL_116;
                }
                v39 += 7;
                unint64_t v37 = v2;
                BOOL v14 = v40++ > 8;
              }
              while (!v14);
              LODWORD(v41) = 0;
LABEL_116:
              *(_DWORD *)(a1 + 52) = v41;
LABEL_117:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_117;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C41840(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 64);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    __int16 v4 = *(_WORD *)(v3 + 64);
    if ((v4 & 0x800) == 0)
    {
LABEL_3:
      if ((v4 & 0x400) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((*(_WORD *)(result + 64) & 0x800) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x400) == 0)
  {
LABEL_4:
    if ((v4 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 2) == 0)
  {
LABEL_5:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x1000) == 0)
  {
LABEL_6:
    if ((v4 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x40) == 0)
  {
LABEL_7:
    if ((v4 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x80) == 0)
  {
LABEL_8:
    if ((v4 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x100) == 0)
  {
LABEL_9:
    if ((v4 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 8) == 0)
  {
LABEL_10:
    if ((v4 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x10) == 0)
  {
LABEL_11:
    if ((v4 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x20) == 0)
  {
LABEL_12:
    if ((v4 & 4) == 0) {
      goto LABEL_13;
    }
LABEL_26:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(_WORD *)(v3 + 64) & 0x200) == 0) {
      return result;
    }
    goto LABEL_27;
  }
LABEL_25:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 4) != 0) {
    goto LABEL_26;
  }
LABEL_13:
  if ((v4 & 0x200) == 0) {
    return result;
  }
LABEL_27:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227C419E4(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC26FB8;
  *(_DWORD *)(result + 100) = 0;
  return result;
}

void sub_227C41A0C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C41A44(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC26FB8;
  *(_DWORD *)(result + 100) = 0;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 0x100) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 72);
    __int16 v3 = 256;
    *(_WORD *)(result + 100) = 256;
    *(void *)(result + 72) = v4;
    __int16 v2 = *(_WORD *)(a2 + 100);
    if ((v2 & 0x1000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((*(_WORD *)(a2 + 100) & 0x1000) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 96);
    v3 |= 0x1000u;
    *(_WORD *)(result + 100) = v3;
    *(_DWORD *)(result + 96) = v5;
    __int16 v2 = *(_WORD *)(a2 + 100);
  }
LABEL_6:
  if ((v2 & 0x40) != 0)
  {
    uint64_t v6 = *(void *)(a2 + 56);
    v3 |= 0x40u;
    *(_WORD *)(result + 100) = v3;
    *(void *)(result + 56) = v6;
    __int16 v2 = *(_WORD *)(a2 + 100);
    if ((v2 & 0x80) == 0)
    {
LABEL_8:
      if ((v2 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_20;
    }
  }
  else if ((v2 & 0x80) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 64);
  v3 |= 0x80u;
  *(_WORD *)(result + 100) = v3;
  *(void *)(result + 64) = v7;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 0x10) == 0)
  {
LABEL_9:
    if ((v2 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t v8 = *(void *)(a2 + 40);
  v3 |= 0x10u;
  *(_WORD *)(result + 100) = v3;
  *(void *)(result + 40) = v8;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 0x20) == 0)
  {
LABEL_10:
    if ((v2 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t v9 = *(void *)(a2 + 48);
  v3 |= 0x20u;
  *(_WORD *)(result + 100) = v3;
  *(void *)(result + 48) = v9;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 8) == 0)
  {
LABEL_11:
    if ((v2 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t v10 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_WORD *)(result + 100) = v3;
  *(void *)(result + 32) = v10;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 1) == 0)
  {
LABEL_12:
    if ((v2 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v11 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(result + 100) = v3;
  *(void *)(result + 8) = v11;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 0x200) == 0)
  {
LABEL_13:
    if ((v2 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t v12 = *(void *)(a2 + 80);
  v3 |= 0x200u;
  *(_WORD *)(result + 100) = v3;
  *(void *)(result + 80) = v12;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 2) == 0)
  {
LABEL_14:
    if ((v2 & 4) == 0) {
      goto LABEL_15;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t v13 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(result + 100) = v3;
  *(void *)(result + 16) = v13;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 4) == 0)
  {
LABEL_15:
    if ((v2 & 0x400) == 0) {
      goto LABEL_16;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v14 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(_WORD *)(result + 100) = v3;
  *(void *)(result + 24) = v14;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 0x400) == 0)
  {
LABEL_16:
    if ((v2 & 0x800) == 0) {
      return result;
    }
LABEL_28:
    int v16 = *(_DWORD *)(a2 + 92);
    *(_WORD *)(result + 100) = v3 | 0x800;
    *(_DWORD *)(result + 92) = v16;
    return result;
  }
LABEL_27:
  int v15 = *(_DWORD *)(a2 + 88);
  v3 |= 0x400u;
  *(_WORD *)(result + 100) = v3;
  *(_DWORD *)(result + 88) = v15;
  if ((*(_WORD *)(a2 + 100) & 0x800) != 0) {
    goto LABEL_28;
  }
  return result;
}

uint64_t sub_227C41BDC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 100);
  if (v5)
  {
    PB::TextFormatter::format(this, "altitude", *(double *)(a1 + 8));
    __int16 v5 = *(_WORD *)(a1 + 100);
    if ((v5 & 0x400) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((*(_WORD *)(a1 + 100) & 0x400) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "confidence");
  __int16 v5 = *(_WORD *)(a1 + 100);
  if ((v5 & 2) == 0)
  {
LABEL_4:
    if ((v5 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "course", *(double *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 100);
  if ((v5 & 4) == 0)
  {
LABEL_5:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "courseAccuracy", *(double *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 100);
  if ((v5 & 8) == 0)
  {
LABEL_6:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "horizontalAccuracy", *(double *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 100);
  if ((v5 & 0x10) == 0)
  {
LABEL_7:
    if ((v5 & 0x800) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "latitude", *(double *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 100);
  if ((v5 & 0x800) == 0)
  {
LABEL_8:
    if ((v5 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "locationLoggingEnabled");
  __int16 v5 = *(_WORD *)(a1 + 100);
  if ((v5 & 0x20) == 0)
  {
LABEL_9:
    if ((v5 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "longitude", *(double *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 100);
  if ((v5 & 0x40) == 0)
  {
LABEL_10:
    if ((v5 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "speed", *(double *)(a1 + 56));
  __int16 v5 = *(_WORD *)(a1 + 100);
  if ((v5 & 0x80) == 0)
  {
LABEL_11:
    if ((v5 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "speedAccuracy", *(double *)(a1 + 64));
  __int16 v5 = *(_WORD *)(a1 + 100);
  if ((v5 & 0x100) == 0)
  {
LABEL_12:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 72));
  __int16 v5 = *(_WORD *)(a1 + 100);
  if ((v5 & 0x1000) == 0)
  {
LABEL_13:
    if ((v5 & 0x200) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_29:
  PB::TextFormatter::format(this, "type");
  if ((*(_WORD *)(a1 + 100) & 0x200) != 0) {
LABEL_14:
  }
    PB::TextFormatter::format(this, "verticalAccuracy", *(double *)(a1 + 80));
LABEL_15:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C41DC0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 100) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_60;
              }
              *(void *)(a1 + 72) = *(void *)(*(void *)this + v2);
              goto LABEL_97;
            case 2u:
              *(_WORD *)(a1 + 100) |= 0x1000u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v39 = 0;
                unsigned int v40 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_102;
                  }
                  unint64_t v41 = v21++;
                  char v42 = *(unsigned char *)(v22 + v41);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v42 & 0x7F) << v39;
                  if ((v42 & 0x80) == 0) {
                    break;
                  }
                  v39 += 7;
                  BOOL v14 = v40++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_101:
                    unint64_t v2 = v41 + 1;
                    goto LABEL_102;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_101;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_102;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_102:
              *(_DWORD *)(a1 + 96) = v25;
              goto LABEL_113;
            case 3u:
              *(_WORD *)(a1 + 100) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_60;
              }
              *(void *)(a1 + 56) = *(void *)(*(void *)this + v2);
              goto LABEL_97;
            case 4u:
              *(_WORD *)(a1 + 100) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_60;
              }
              *(void *)(a1 + 64) = *(void *)(*(void *)this + v2);
              goto LABEL_97;
            case 5u:
              *(_WORD *)(a1 + 100) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_60;
              }
              *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
              goto LABEL_97;
            case 6u:
              *(_WORD *)(a1 + 100) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_60;
              }
              *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
              goto LABEL_97;
            case 7u:
              *(_WORD *)(a1 + 100) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_60;
              }
              *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
              goto LABEL_97;
            case 8u:
              *(_WORD *)(a1 + 100) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_60;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_97;
            case 9u:
              *(_WORD *)(a1 + 100) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_60;
              }
              *(void *)(a1 + 80) = *(void *)(*(void *)this + v2);
              goto LABEL_97;
            case 0xAu:
              *(_WORD *)(a1 + 100) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_60;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_97;
            case 0xBu:
              *(_WORD *)(a1 + 100) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
LABEL_97:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_60:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_113;
            case 0xCu:
              *(_WORD *)(a1 + 100) |= 0x400u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v43 = 0;
                unsigned int v44 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_107;
                  }
                  unint64_t v45 = v27++;
                  char v46 = *(unsigned char *)(v28 + v45);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v46 & 0x7F) << v43;
                  if ((v46 & 0x80) == 0) {
                    break;
                  }
                  v43 += 7;
                  BOOL v14 = v44++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_106:
                    unint64_t v2 = v45 + 1;
                    goto LABEL_107;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_106;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_107;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_107:
              *(_DWORD *)(a1 + 88) = v31;
              goto LABEL_113;
            case 0xDu:
              *(_WORD *)(a1 + 100) |= 0x800u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v47 = 0;
                unsigned int v48 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_112;
                  }
                  unint64_t v49 = v33++;
                  char v50 = *(unsigned char *)(v34 + v49);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v50 & 0x7F) << v47;
                  if ((v50 & 0x80) == 0) {
                    break;
                  }
                  v47 += 7;
                  BOOL v14 = v48++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_111:
                    unint64_t v2 = v49 + 1;
                    goto LABEL_112;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_111;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_112;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_112:
              *(_DWORD *)(a1 + 92) = v37;
LABEL_113:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_113;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C42470(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 100);
  if ((v4 & 0x100) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 72));
    __int16 v4 = *(_WORD *)(v3 + 100);
    if ((v4 & 0x1000) == 0)
    {
LABEL_3:
      if ((v4 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((*(_WORD *)(result + 100) & 0x1000) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 0x40) == 0)
  {
LABEL_4:
    if ((v4 & 0x80) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 56));
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 0x80) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 64));
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40));
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 0x20) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48));
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 1) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32));
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 1) == 0)
  {
LABEL_9:
    if ((v4 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 0x200) == 0)
  {
LABEL_10:
    if ((v4 & 2) == 0) {
      goto LABEL_11;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 80));
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 2) == 0)
  {
LABEL_11:
    if ((v4 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 4) == 0)
  {
LABEL_12:
    if ((v4 & 0x400) == 0) {
      goto LABEL_13;
    }
LABEL_26:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(_WORD *)(v3 + 100) & 0x800) == 0) {
      return result;
    }
    goto LABEL_27;
  }
LABEL_25:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24));
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 0x400) != 0) {
    goto LABEL_26;
  }
LABEL_13:
  if ((v4 & 0x800) == 0) {
    return result;
  }
LABEL_27:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227C42614(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC26FF0;
  *(_DWORD *)(result + 12) = 0;
  return result;
}

void sub_227C4263C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C42674(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC26FF0;
  *(_DWORD *)(result + 12) = 0;
  if (*(unsigned char *)(a2 + 12))
  {
    char v2 = *(unsigned char *)(a2 + 8);
    *(unsigned char *)(result + 12) = 1;
    *(unsigned char *)(result + 8) = v2;
  }
  return result;
}

uint64_t sub_227C426B0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 12)) {
    PB::TextFormatter::format(this, "lockScreen");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C42710(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 12) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
        if (v2 >= v3)
        {
          BOOL v21 = 0;
          *((unsigned char *)this + 24) = 1;
        }
        else
        {
          int v20 = *(unsigned __int8 *)(*(void *)this + v2++);
          *((void *)this + 1) = v2;
          BOOL v21 = v20 != 0;
        }
        *(unsigned char *)(a1 + 8) = v21;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C428A0(uint64_t result, PB::Writer *this)
{
  if (*(unsigned char *)(result + 12)) {
    return PB::Writer::write(this);
  }
  return result;
}

void *sub_227C428C0(void *result)
{
  *uint64_t result = &unk_26DC27028;
  result[1] = 0;
  return result;
}

void sub_227C428E0(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC27028;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C42960(PB::Base *a1)
{
  sub_227C428E0(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227C42998(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC27028;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C42A40(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C42ABC(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C42CB8(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

uint64_t sub_227C42CD4(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC27060;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_227C42CFC(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C42D34(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC27060;
  *(_DWORD *)(result + 20) = 0;
  if (*(unsigned char *)(a2 + 20))
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 20) = 1;
    *(void *)(result + 8) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 20) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
LABEL_5:
    int v4 = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(result + 20) = v2;
    *(_DWORD *)(result + 16) = v4;
  }
  return result;
}

uint64_t sub_227C42D98(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "state");
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if (v5) {
    PB::TextFormatter::format(this, "timestamp");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C42E14(uint64_t a1, PB::Reader *this)
{
  unint64_t v3 = *((void *)this + 1);
  unint64_t v2 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v3 < v2 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v3 > 0xFFFFFFFFFFFFFFF5 || v3 + 10 > v2) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v3 + 1;
        *((void *)this + 1) = v3 + 1;
        char v13 = *(unsigned char *)(v8 + v3);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v3 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v26 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v27 = *(void *)this;
        if (v26 > 0xFFFFFFFFFFFFFFF5 || v26 + 10 > v2)
        {
          char v37 = 0;
          unsigned int v38 = 0;
          uint64_t v30 = 0;
          if (v2 <= v26) {
            unint64_t v3 = *((void *)this + 1);
          }
          else {
            unint64_t v3 = *((void *)this + 2);
          }
          while (1)
          {
            if (v3 == v26)
            {
              LODWORD(v30) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_64;
            }
            unint64_t v39 = v26++;
            char v40 = *(unsigned char *)(v27 + v39);
            *((void *)this + 1) = v26;
            v30 |= (unint64_t)(v40 & 0x7F) << v37;
            if ((v40 & 0x80) == 0) {
              break;
            }
            v37 += 7;
            BOOL v14 = v38++ > 8;
            if (v14)
            {
              LODWORD(v30) = 0;
              goto LABEL_63;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v30) = 0;
          }
LABEL_63:
          unint64_t v3 = v39 + 1;
        }
        else
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v30 = 0;
          while (1)
          {
            unint64_t v3 = v26 + 1;
            *((void *)this + 1) = v26 + 1;
            char v31 = *(unsigned char *)(v27 + v26);
            v30 |= (unint64_t)(v31 & 0x7F) << v28;
            if ((v31 & 0x80) == 0) {
              break;
            }
            v28 += 7;
            unint64_t v26 = v3;
            BOOL v14 = v29++ > 8;
            if (v14)
            {
              LODWORD(v30) = 0;
              break;
            }
          }
        }
LABEL_64:
        *(_DWORD *)(a1 + 16) = v30;
      }
      else if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v20 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v21 = *(void *)this;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
        {
          char v33 = 0;
          unsigned int v34 = 0;
          uint64_t v24 = 0;
          if (v2 <= v20) {
            unint64_t v3 = *((void *)this + 1);
          }
          else {
            unint64_t v3 = *((void *)this + 2);
          }
          while (1)
          {
            if (v3 == v20)
            {
              uint64_t v24 = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_60;
            }
            unint64_t v35 = v20++;
            char v36 = *(unsigned char *)(v21 + v35);
            *((void *)this + 1) = v20;
            v24 |= (unint64_t)(v36 & 0x7F) << v33;
            if ((v36 & 0x80) == 0) {
              break;
            }
            v33 += 7;
            BOOL v14 = v34++ > 8;
            if (v14)
            {
              uint64_t v24 = 0;
              goto LABEL_59;
            }
          }
          if (*((unsigned char *)this + 24)) {
            uint64_t v24 = 0;
          }
LABEL_59:
          unint64_t v3 = v35 + 1;
        }
        else
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          while (1)
          {
            unint64_t v3 = v20 + 1;
            *((void *)this + 1) = v20 + 1;
            char v25 = *(unsigned char *)(v21 + v20);
            v24 |= (unint64_t)(v25 & 0x7F) << v22;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v22 += 7;
            unint64_t v20 = v3;
            BOOL v14 = v23++ > 8;
            if (v14)
            {
              uint64_t v24 = 0;
              break;
            }
          }
        }
LABEL_60:
        *(void *)(a1 + 8) = v24;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v3 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v3 >= v2 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v3 > v2) {
      unint64_t v2 = v3;
    }
    while (v2 != v3)
    {
      unint64_t v17 = v3 + 1;
      char v18 = *(unsigned char *)(v8 + v3);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v3 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C43140(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    return PB::Writer::writeVarInt(this);
  }
  return result;
}

uint64_t sub_227C431AC(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC27098;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void sub_227C431D0(PB::Base *this)
{
  *(void *)this = &unk_26DC27098;
  uint64_t v4 = *((void *)this + 1);
  unint64_t v2 = (void *)((char *)this + 8);
  uint64_t v3 = v4;
  void *v2 = 0;
  if (v4) {
    sub_227B8B690((uint64_t)v2, v3);
  }

  PB::Base::~Base(this);
}

void sub_227C43234(PB::Base *a1)
{
  sub_227C431D0(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C4326C(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC27098;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 24) = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  char v2 = *(unsigned char *)(a2 + 24);
  if (v2)
  {
    int v3 = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(result + 24) |= 1u;
    *(_DWORD *)(result + 16) = v3;
    char v2 = *(unsigned char *)(a2 + 24);
  }
  if ((v2 & 2) != 0)
  {
    char v4 = *(unsigned char *)(a2 + 20);
    *(unsigned char *)(result + 24) |= 2u;
    *(unsigned char *)(result + 20) = v4;
  }
  return result;
}

uint64_t sub_227C43368(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 24);
  if (v5)
  {
    PB::TextFormatter::format(this, "accessoryType");
    char v5 = *(unsigned char *)(a1 + 24);
  }
  if ((v5 & 2) != 0) {
    PB::TextFormatter::format(this, "isAttached");
  }
  if (*(void *)(a1 + 8)) {
    PB::TextFormatter::format();
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C433FC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 3)
      {
        *(unsigned char *)(a1 + 24) |= 2u;
        unint64_t v21 = *((void *)this + 1);
        if (v21 >= *((void *)this + 2))
        {
          BOOL v24 = 0;
          *((unsigned char *)this + 24) = 1;
        }
        else
        {
          unint64_t v22 = v21 + 1;
          int v23 = *(unsigned __int8 *)(*(void *)this + v21);
          *((void *)this + 1) = v22;
          BOOL v24 = v23 != 0;
        }
        *(unsigned char *)(a1 + 20) = v24;
      }
      else if (v20 == 2)
      {
        *(unsigned char *)(a1 + 24) |= 1u;
        unint64_t v25 = *((void *)this + 1);
        unint64_t v26 = *((void *)this + 2);
        uint64_t v27 = *(void *)this;
        if (v25 > 0xFFFFFFFFFFFFFFF5 || v25 + 10 > v26)
        {
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v30 = 0;
          if (v26 <= v25) {
            unint64_t v26 = *((void *)this + 1);
          }
          while (1)
          {
            if (v26 == v25)
            {
              LODWORD(v30) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_48;
            }
            unint64_t v36 = v25 + 1;
            char v37 = *(unsigned char *)(v27 + v25);
            *((void *)this + 1) = v36;
            v30 |= (unint64_t)(v37 & 0x7F) << v34;
            if ((v37 & 0x80) == 0) {
              break;
            }
            v34 += 7;
            unint64_t v25 = v36;
            BOOL v14 = v35++ > 8;
            if (v14)
            {
LABEL_44:
              LODWORD(v30) = 0;
              goto LABEL_48;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v30) = 0;
          }
        }
        else
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v30 = 0;
          while (1)
          {
            unint64_t v31 = v25 + 1;
            *((void *)this + 1) = v25 + 1;
            char v32 = *(unsigned char *)(v27 + v25);
            v30 |= (unint64_t)(v32 & 0x7F) << v28;
            if ((v32 & 0x80) == 0) {
              break;
            }
            v28 += 7;
            unint64_t v25 = v31;
            BOOL v14 = v29++ > 8;
            if (v14) {
              goto LABEL_44;
            }
          }
        }
LABEL_48:
        *(_DWORD *)(a1 + 16) = v30;
      }
      else
      {
        if (v20 == 1) {
          operator new();
        }
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C436E8(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  if (*(void *)(result + 8)) {
    uint64_t result = PB::Writer::write();
  }
  char v4 = *(unsigned char *)(v3 + 24);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 24);
  }
  if ((v4 & 2) != 0)
  {
    return PB::Writer::write(this);
  }
  return result;
}

uint64_t sub_227C43768(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC270D0;
  *(_DWORD *)(result + 12) = 0;
  return result;
}

void sub_227C43790(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C437C8(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC270D0;
  *(_DWORD *)(result + 12) = 0;
  if (*(unsigned char *)(a2 + 12))
  {
    char v2 = *(unsigned char *)(a2 + 8);
    *(unsigned char *)(result + 12) = 1;
    *(unsigned char *)(result + 8) = v2;
  }
  return result;
}

uint64_t sub_227C43804(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 12)) {
    PB::TextFormatter::format(this, "isCharging");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C43864(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 12) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
        if (v2 >= v3)
        {
          BOOL v21 = 0;
          *((unsigned char *)this + 24) = 1;
        }
        else
        {
          int v20 = *(unsigned __int8 *)(*(void *)this + v2++);
          *((void *)this + 1) = v2;
          BOOL v21 = v20 != 0;
        }
        *(unsigned char *)(a1 + 8) = v21;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C439F4(uint64_t result, PB::Writer *this)
{
  if (*(unsigned char *)(result + 12)) {
    return PB::Writer::write(this);
  }
  return result;
}

uint64_t sub_227C43A14(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC27108;
  *(_DWORD *)(result + 36) = 0;
  return result;
}

void sub_227C43A3C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C43A74(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC27108;
  *(_DWORD *)(result + 36) = 0;
  char v2 = *(unsigned char *)(a2 + 36);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 36) = 1;
    *(void *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 36);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 36) & 8) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 24);
    v3 |= 8u;
    *(unsigned char *)(result + 36) = v3;
    *(_DWORD *)(result + 24) = v5;
    char v2 = *(unsigned char *)(a2 + 36);
  }
LABEL_6:
  if ((v2 & 0x10) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 28);
    v3 |= 0x10u;
    *(unsigned char *)(result + 36) = v3;
    *(_DWORD *)(result + 28) = v6;
    char v2 = *(unsigned char *)(a2 + 36);
    if ((v2 & 0x20) == 0)
    {
LABEL_8:
      if ((v2 & 4) == 0) {
        goto LABEL_9;
      }
      goto LABEL_13;
    }
  }
  else if ((v2 & 0x20) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 32);
  v3 |= 0x20u;
  *(unsigned char *)(result + 36) = v3;
  *(_DWORD *)(result + 32) = v7;
  char v2 = *(unsigned char *)(a2 + 36);
  if ((v2 & 4) == 0)
  {
LABEL_9:
    if ((v2 & 2) == 0) {
      return result;
    }
LABEL_14:
    int v9 = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(result + 36) = v3 | 2;
    *(_DWORD *)(result + 16) = v9;
    return result;
  }
LABEL_13:
  int v8 = *(_DWORD *)(a2 + 20);
  v3 |= 4u;
  *(unsigned char *)(result + 36) = v3;
  *(_DWORD *)(result + 20) = v8;
  if ((*(unsigned char *)(a2 + 36) & 2) != 0) {
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_227C43B48(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 36);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "location");
    char v5 = *(unsigned char *)(a1 + 36);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((*(unsigned char *)(a1 + 36) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "temperature", *(float *)(a1 + 20));
  char v5 = *(unsigned char *)(a1 + 36);
  if ((v5 & 1) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  char v5 = *(unsigned char *)(a1 + 36);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(this, "x", *(float *)(a1 + 24));
  char v5 = *(unsigned char *)(a1 + 36);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_15:
  PB::TextFormatter::format(this, "y", *(float *)(a1 + 28));
  if ((*(unsigned char *)(a1 + 36) & 0x20) != 0) {
LABEL_7:
  }
    PB::TextFormatter::format(this, "z", *(float *)(a1 + 32));
LABEL_8:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C43C4C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 36) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_38;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              unint64_t v2 = *((void *)this + 1) + 8;
              goto LABEL_55;
            case 2u:
              *(unsigned char *)(a1 + 36) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_38;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_54;
            case 3u:
              *(unsigned char *)(a1 + 36) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_38;
              }
              *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_54;
            case 4u:
              *(unsigned char *)(a1 + 36) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_38;
              }
              *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_54;
            case 5u:
              *(unsigned char *)(a1 + 36) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
LABEL_54:
                unint64_t v2 = *((void *)this + 1) + 4;
LABEL_55:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_38:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_61;
            case 6u:
              *(unsigned char *)(a1 + 36) |= 2u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v27 = 0;
                unsigned int v28 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_60;
                  }
                  unint64_t v29 = v21++;
                  char v30 = *(unsigned char *)(v22 + v29);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v30 & 0x7F) << v27;
                  if ((v30 & 0x80) == 0) {
                    break;
                  }
                  v27 += 7;
                  BOOL v14 = v28++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_59:
                    unint64_t v2 = v29 + 1;
                    goto LABEL_60;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_59;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_60;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_60:
              *(_DWORD *)(a1 + 16) = v25;
LABEL_61:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_61;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C43FF8(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 36);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 36);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((*(unsigned char *)(result + 36) & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
  char v4 = *(unsigned char *)(v3 + 36);
  if ((v4 & 0x10) == 0)
  {
LABEL_4:
    if ((v4 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
  char v4 = *(unsigned char *)(v3 + 36);
  if ((v4 & 0x20) == 0)
  {
LABEL_5:
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
    if ((*(unsigned char *)(v3 + 36) & 2) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_11:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
  char v4 = *(unsigned char *)(v3 + 36);
  if ((v4 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_13:

  return PB::Writer::writeVarInt(this);
}

double sub_227C440D8(uint64_t a1)
{
  *(void *)a1 = &unk_26DC27140;
  *(_DWORD *)(a1 + 112) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  return result;
}

void sub_227C44118(PB::Base *this)
{
  *(void *)this = &unk_26DC27140;
  unint64_t v2 = (void *)*((void *)this + 10);
  if (v2)
  {
    *((void *)this + 11) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 7);
  if (v3)
  {
    *((void *)this + 8) = v3;
    operator delete(v3);
  }
  char v4 = (void *)*((void *)this + 4);
  if (v4)
  {
    *((void *)this + 5) = v4;
    operator delete(v4);
  }
  char v5 = (void *)*((void *)this + 1);
  if (v5)
  {
    *((void *)this + 2) = v5;
    operator delete(v5);
  }

  PB::Base::~Base(this);
}

void sub_227C441AC(PB::Base *a1)
{
  sub_227C44118(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C441E4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC27140;
  *(_OWORD *)(a1 + 8) = 0u;
  char v4 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 56) = 0u;
  char v5 = (char *)(a1 + 56);
  *(_DWORD *)(a1 + 112) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  if (*(unsigned char *)(a2 + 112))
  {
    uint64_t v6 = *(void *)(a2 + 104);
    *(unsigned char *)(a1 + 112) = 1;
    *(void *)(a1 + 104) = v6;
  }
  if (a1 != a2)
  {
    sub_227B8BA68((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
    sub_227B8BA68(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
    sub_227B8BA68((char *)(a1 + 80), *(char **)(a2 + 80), *(void *)(a2 + 88), (uint64_t)(*(void *)(a2 + 88) - *(void *)(a2 + 80)) >> 2);
    sub_227B8BA68(v5, *(char **)(a2 + 56), *(void *)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 2);
  }
  return a1;
}

uint64_t sub_227C442D0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(float **)(a1 + 32);
  uint64_t v6 = *(float **)(a1 + 40);
  while (v5 != v6)
  {
    float v7 = *v5++;
    PB::TextFormatter::format(this, "biasEst", v7);
  }
  uint64_t v8 = *(float **)(a1 + 8);
  char v9 = *(float **)(a1 + 16);
  while (v8 != v9)
  {
    float v10 = *v8++;
    PB::TextFormatter::format(this, "biasEstVar", v10);
  }
  unint64_t v11 = *(float **)(a1 + 56);
  unint64_t v12 = *(float **)(a1 + 64);
  while (v11 != v12)
  {
    float v13 = *v11++;
    PB::TextFormatter::format(this, "residual", v13);
  }
  BOOL v14 = *(float **)(a1 + 80);
  char v15 = *(float **)(a1 + 88);
  while (v14 != v15)
  {
    float v16 = *v14++;
    PB::TextFormatter::format(this, "temperature", v16);
  }
  if (*(unsigned char *)(a1 + 112)) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 104));
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227C443F0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = (void **)(a1 + 56);
    char v9 = (void **)(a1 + 80);
    uint64_t v128 = a1 + 96;
    uint64_t v129 = a1 + 72;
    float v10 = (void **)(a1 + 8);
    uint64_t v127 = a1 + 24;
    unint64_t v11 = (void **)(a1 + 32);
    uint64_t v12 = a1 + 48;
    while (1)
    {
      uint64_t v13 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v14 = 0;
      unsigned int v15 = 0;
      unint64_t v16 = 0;
      while (1)
      {
        unint64_t v17 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v18 = *(unsigned char *)(v13 + v2);
        v16 |= (unint64_t)(v18 & 0x7F) << v14;
        if ((v18 & 0x80) == 0) {
          break;
        }
        v14 += 7;
        unint64_t v2 = v17;
        if (v15++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v25 = v16 & 7;
      if (v25 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v16 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 112) |= 1u;
          unint64_t v26 = *((void *)this + 1);
          if (v26 > 0xFFFFFFFFFFFFFFF7 || v26 + 8 > *((void *)this + 2)) {
            goto LABEL_196;
          }
          *(void *)(a1 + 104) = *(void *)(*(void *)this + v26);
          uint64_t v27 = *((void *)this + 1) + 8;
          goto LABEL_198;
        case 2u:
          if (v25 != 2)
          {
            uint64_t v85 = *(char **)(a1 + 40);
            unint64_t v84 = *(void *)(a1 + 48);
            if ((unint64_t)v85 >= v84)
            {
              uint64_t v93 = (char *)*v11;
              uint64_t v94 = (v85 - (unsigned char *)*v11) >> 2;
              unint64_t v95 = v94 + 1;
              if ((unint64_t)(v94 + 1) >> 62) {
LABEL_207:
              }
                sub_227B8B89C();
              uint64_t v96 = v84 - (void)v93;
              if (v96 >> 1 > v95) {
                unint64_t v95 = v96 >> 1;
              }
              if ((unint64_t)v96 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v97 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v97 = v95;
              }
              if (v97)
              {
                char v98 = (char *)sub_227B8BBB8(v12, v97);
                uint64_t v93 = *(char **)(a1 + 32);
                uint64_t v85 = *(char **)(a1 + 40);
              }
              else
              {
                char v98 = 0;
              }
              v117 = &v98[4 * v94];
              *(_DWORD *)v117 = 0;
              unint64_t v86 = v117 + 4;
              while (v85 != v93)
              {
                int v118 = *((_DWORD *)v85 - 1);
                v85 -= 4;
                *((_DWORD *)v117 - 1) = v118;
                v117 -= 4;
              }
              *(void *)(a1 + 32) = v117;
              *(void *)(a1 + 40) = v86;
              *(void *)(a1 + 48) = &v98[4 * v97];
              if (v93) {
                operator delete(v93);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v85 = 0;
              unint64_t v86 = v85 + 4;
            }
            *(void *)(a1 + 40) = v86;
            goto LABEL_194;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v28 = *((void *)this + 1);
          unint64_t v29 = *((void *)this + 2);
          while (v28 < v29 && !*((unsigned char *)this + 24))
          {
            unint64_t v31 = *(char **)(a1 + 40);
            unint64_t v30 = *(void *)(a1 + 48);
            if ((unint64_t)v31 >= v30)
            {
              char v33 = (char *)*v11;
              uint64_t v34 = (v31 - (unsigned char *)*v11) >> 2;
              unint64_t v35 = v34 + 1;
              if ((unint64_t)(v34 + 1) >> 62) {
                goto LABEL_207;
              }
              uint64_t v36 = v30 - (void)v33;
              if (v36 >> 1 > v35) {
                unint64_t v35 = v36 >> 1;
              }
              if ((unint64_t)v36 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v37 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v37 = v35;
              }
              if (v37)
              {
                unsigned int v38 = (char *)sub_227B8BBB8(v12, v37);
                char v33 = *(char **)(a1 + 32);
                unint64_t v31 = *(char **)(a1 + 40);
              }
              else
              {
                unsigned int v38 = 0;
              }
              unint64_t v39 = &v38[4 * v34];
              *(_DWORD *)unint64_t v39 = 0;
              char v32 = v39 + 4;
              while (v31 != v33)
              {
                int v40 = *((_DWORD *)v31 - 1);
                v31 -= 4;
                *((_DWORD *)v39 - 1) = v40;
                v39 -= 4;
              }
              *(void *)(a1 + 32) = v39;
              *(void *)(a1 + 40) = v32;
              *(void *)(a1 + 48) = &v38[4 * v37];
              if (v33) {
                operator delete(v33);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v31 = 0;
              char v32 = v31 + 4;
            }
            *(void *)(a1 + 40) = v32;
            unint64_t v41 = *((void *)this + 1);
            if (v41 > 0xFFFFFFFFFFFFFFFBLL || v41 + 4 > *((void *)this + 2)) {
              goto LABEL_124;
            }
            *(v32 - 1) = *(_DWORD *)(*(void *)this + v41);
            unint64_t v29 = *((void *)this + 2);
            unint64_t v28 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v28;
          }
          goto LABEL_125;
        case 3u:
          if (v25 != 2)
          {
            unint64_t v88 = *(char **)(a1 + 16);
            unint64_t v87 = *(void *)(a1 + 24);
            if ((unint64_t)v88 >= v87)
            {
              unsigned int v99 = (char *)*v10;
              uint64_t v100 = (v88 - (unsigned char *)*v10) >> 2;
              unint64_t v101 = v100 + 1;
              if ((unint64_t)(v100 + 1) >> 62) {
LABEL_208:
              }
                sub_227B8B89C();
              uint64_t v102 = v87 - (void)v99;
              if (v102 >> 1 > v101) {
                unint64_t v101 = v102 >> 1;
              }
              if ((unint64_t)v102 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v103 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v103 = v101;
              }
              if (v103)
              {
                unint64_t v104 = (char *)sub_227B8BBB8(v127, v103);
                unsigned int v99 = *(char **)(a1 + 8);
                unint64_t v88 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v104 = 0;
              }
              uint64_t v119 = &v104[4 * v100];
              *(_DWORD *)uint64_t v119 = 0;
              unint64_t v86 = v119 + 4;
              while (v88 != v99)
              {
                int v120 = *((_DWORD *)v88 - 1);
                v88 -= 4;
                *((_DWORD *)v119 - 1) = v120;
                v119 -= 4;
              }
              *(void *)(a1 + 8) = v119;
              *(void *)(a1 + 16) = v86;
              *(void *)(a1 + 24) = &v104[4 * v103];
              if (v99) {
                operator delete(v99);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v88 = 0;
              unint64_t v86 = v88 + 4;
            }
            *(void *)(a1 + 16) = v86;
            goto LABEL_194;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v42 = *((void *)this + 1);
          unint64_t v43 = *((void *)this + 2);
          while (v42 < v43 && !*((unsigned char *)this + 24))
          {
            unint64_t v45 = *(char **)(a1 + 16);
            unint64_t v44 = *(void *)(a1 + 24);
            if ((unint64_t)v45 >= v44)
            {
              char v47 = (char *)*v10;
              uint64_t v48 = (v45 - (unsigned char *)*v10) >> 2;
              unint64_t v49 = v48 + 1;
              if ((unint64_t)(v48 + 1) >> 62) {
                goto LABEL_208;
              }
              uint64_t v50 = v44 - (void)v47;
              if (v50 >> 1 > v49) {
                unint64_t v49 = v50 >> 1;
              }
              if ((unint64_t)v50 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v51 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v51 = v49;
              }
              if (v51)
              {
                unsigned int v52 = (char *)sub_227B8BBB8(v127, v51);
                char v47 = *(char **)(a1 + 8);
                unint64_t v45 = *(char **)(a1 + 16);
              }
              else
              {
                unsigned int v52 = 0;
              }
              unint64_t v53 = &v52[4 * v48];
              *(_DWORD *)unint64_t v53 = 0;
              char v46 = v53 + 4;
              while (v45 != v47)
              {
                int v54 = *((_DWORD *)v45 - 1);
                v45 -= 4;
                *((_DWORD *)v53 - 1) = v54;
                v53 -= 4;
              }
              *(void *)(a1 + 8) = v53;
              *(void *)(a1 + 16) = v46;
              *(void *)(a1 + 24) = &v52[4 * v51];
              if (v47) {
                operator delete(v47);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v45 = 0;
              char v46 = v45 + 4;
            }
            *(void *)(a1 + 16) = v46;
            unint64_t v55 = *((void *)this + 1);
            if (v55 > 0xFFFFFFFFFFFFFFFBLL || v55 + 4 > *((void *)this + 2)) {
              goto LABEL_124;
            }
            *(v46 - 1) = *(_DWORD *)(*(void *)this + v55);
            unint64_t v43 = *((void *)this + 2);
            unint64_t v42 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v42;
          }
          goto LABEL_125;
        case 4u:
          if (v25 != 2)
          {
            uint64_t v90 = *(char **)(a1 + 88);
            unint64_t v89 = *(void *)(a1 + 96);
            if ((unint64_t)v90 >= v89)
            {
              char v105 = (char *)*v9;
              uint64_t v106 = (v90 - (unsigned char *)*v9) >> 2;
              unint64_t v107 = v106 + 1;
              if ((unint64_t)(v106 + 1) >> 62) {
LABEL_209:
              }
                sub_227B8B89C();
              uint64_t v108 = v89 - (void)v105;
              if (v108 >> 1 > v107) {
                unint64_t v107 = v108 >> 1;
              }
              if ((unint64_t)v108 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v109 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v109 = v107;
              }
              if (v109)
              {
                char v110 = (char *)sub_227B8BBB8(v128, v109);
                char v105 = *(char **)(a1 + 80);
                uint64_t v90 = *(char **)(a1 + 88);
              }
              else
              {
                char v110 = 0;
              }
              v121 = &v110[4 * v106];
              *(_DWORD *)v121 = 0;
              unint64_t v86 = v121 + 4;
              while (v90 != v105)
              {
                int v122 = *((_DWORD *)v90 - 1);
                v90 -= 4;
                *((_DWORD *)v121 - 1) = v122;
                v121 -= 4;
              }
              *(void *)(a1 + 80) = v121;
              *(void *)(a1 + 88) = v86;
              *(void *)(a1 + 96) = &v110[4 * v109];
              if (v105) {
                operator delete(v105);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v90 = 0;
              unint64_t v86 = v90 + 4;
            }
            *(void *)(a1 + 88) = v86;
            goto LABEL_194;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v56 = *((void *)this + 1);
          unint64_t v57 = *((void *)this + 2);
          while (v56 < v57 && !*((unsigned char *)this + 24))
          {
            unint64_t v59 = *(char **)(a1 + 88);
            unint64_t v58 = *(void *)(a1 + 96);
            if ((unint64_t)v59 >= v58)
            {
              char v61 = (char *)*v9;
              uint64_t v62 = (v59 - (unsigned char *)*v9) >> 2;
              unint64_t v63 = v62 + 1;
              if ((unint64_t)(v62 + 1) >> 62) {
                goto LABEL_209;
              }
              uint64_t v64 = v58 - (void)v61;
              if (v64 >> 1 > v63) {
                unint64_t v63 = v64 >> 1;
              }
              if ((unint64_t)v64 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v65 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v65 = v63;
              }
              if (v65)
              {
                unsigned int v66 = (char *)sub_227B8BBB8(v128, v65);
                char v61 = *(char **)(a1 + 80);
                unint64_t v59 = *(char **)(a1 + 88);
              }
              else
              {
                unsigned int v66 = 0;
              }
              unint64_t v67 = &v66[4 * v62];
              *(_DWORD *)unint64_t v67 = 0;
              char v60 = v67 + 4;
              while (v59 != v61)
              {
                int v68 = *((_DWORD *)v59 - 1);
                v59 -= 4;
                *((_DWORD *)v67 - 1) = v68;
                v67 -= 4;
              }
              *(void *)(a1 + 80) = v67;
              *(void *)(a1 + 88) = v60;
              *(void *)(a1 + 96) = &v66[4 * v65];
              if (v61) {
                operator delete(v61);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v59 = 0;
              char v60 = v59 + 4;
            }
            *(void *)(a1 + 88) = v60;
            unint64_t v69 = *((void *)this + 1);
            if (v69 > 0xFFFFFFFFFFFFFFFBLL || v69 + 4 > *((void *)this + 2)) {
              goto LABEL_124;
            }
            *(v60 - 1) = *(_DWORD *)(*(void *)this + v69);
            unint64_t v57 = *((void *)this + 2);
            unint64_t v56 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v56;
          }
          goto LABEL_125;
        case 5u:
          if (v25 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v70 = *((void *)this + 1);
            unint64_t v71 = *((void *)this + 2);
            while (v70 < v71 && !*((unsigned char *)this + 24))
            {
              char v73 = *(char **)(a1 + 64);
              unint64_t v72 = *(void *)(a1 + 72);
              if ((unint64_t)v73 >= v72)
              {
                unint64_t v75 = (char *)*v8;
                uint64_t v76 = (v73 - (unsigned char *)*v8) >> 2;
                unint64_t v77 = v76 + 1;
                if ((unint64_t)(v76 + 1) >> 62) {
                  goto LABEL_210;
                }
                uint64_t v78 = v72 - (void)v75;
                if (v78 >> 1 > v77) {
                  unint64_t v77 = v78 >> 1;
                }
                if ((unint64_t)v78 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v79 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v79 = v77;
                }
                if (v79)
                {
                  char v80 = (char *)sub_227B8BBB8(v129, v79);
                  unint64_t v75 = *(char **)(a1 + 56);
                  char v73 = *(char **)(a1 + 64);
                }
                else
                {
                  char v80 = 0;
                }
                unint64_t v81 = &v80[4 * v76];
                *(_DWORD *)unint64_t v81 = 0;
                unsigned int v74 = v81 + 4;
                while (v73 != v75)
                {
                  int v82 = *((_DWORD *)v73 - 1);
                  v73 -= 4;
                  *((_DWORD *)v81 - 1) = v82;
                  v81 -= 4;
                }
                *(void *)(a1 + 56) = v81;
                *(void *)(a1 + 64) = v74;
                *(void *)(a1 + 72) = &v80[4 * v79];
                if (v75) {
                  operator delete(v75);
                }
              }
              else
              {
                *(_DWORD *)char v73 = 0;
                unsigned int v74 = v73 + 4;
              }
              *(void *)(a1 + 64) = v74;
              unint64_t v83 = *((void *)this + 1);
              if (v83 > 0xFFFFFFFFFFFFFFFBLL || v83 + 4 > *((void *)this + 2))
              {
LABEL_124:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v74 - 1) = *(_DWORD *)(*(void *)this + v83);
              unint64_t v71 = *((void *)this + 2);
              unint64_t v70 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v70;
            }
LABEL_125:
            PB::Reader::recallMark();
          }
          else
          {
            unsigned int v92 = *(char **)(a1 + 64);
            unint64_t v91 = *(void *)(a1 + 72);
            if ((unint64_t)v92 >= v91)
            {
              unsigned int v111 = (char *)*v8;
              uint64_t v112 = (v92 - (unsigned char *)*v8) >> 2;
              unint64_t v113 = v112 + 1;
              if ((unint64_t)(v112 + 1) >> 62) {
LABEL_210:
              }
                sub_227B8B89C();
              uint64_t v114 = v91 - (void)v111;
              if (v114 >> 1 > v113) {
                unint64_t v113 = v114 >> 1;
              }
              if ((unint64_t)v114 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v115 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v115 = v113;
              }
              if (v115)
              {
                unint64_t v116 = (char *)sub_227B8BBB8(v129, v115);
                unsigned int v111 = *(char **)(a1 + 56);
                unsigned int v92 = *(char **)(a1 + 64);
              }
              else
              {
                unint64_t v116 = 0;
              }
              v123 = &v116[4 * v112];
              *(_DWORD *)v123 = 0;
              unint64_t v86 = v123 + 4;
              while (v92 != v111)
              {
                int v124 = *((_DWORD *)v92 - 1);
                v92 -= 4;
                *((_DWORD *)v123 - 1) = v124;
                v123 -= 4;
              }
              *(void *)(a1 + 56) = v123;
              *(void *)(a1 + 64) = v86;
              *(void *)(a1 + 72) = &v116[4 * v115];
              if (v111) {
                operator delete(v111);
              }
            }
            else
            {
              *(_DWORD *)unsigned int v92 = 0;
              unint64_t v86 = v92 + 4;
            }
            *(void *)(a1 + 64) = v86;
LABEL_194:
            unint64_t v125 = *((void *)this + 1);
            if (v125 <= 0xFFFFFFFFFFFFFFFBLL && v125 + 4 <= *((void *)this + 2))
            {
              *(v86 - 1) = *(_DWORD *)(*(void *)this + v125);
              uint64_t v27 = *((void *)this + 1) + 4;
LABEL_198:
              *((void *)this + 1) = v27;
            }
            else
            {
LABEL_196:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_199:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || *((unsigned char *)this + 24)) {
            return v4 == 0;
          }
          break;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_199;
      }
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v16 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v22 = v2 + 1;
      char v23 = *(unsigned char *)(v13 + v2);
      *((void *)this + 1) = v22;
      v16 |= (unint64_t)(v23 & 0x7F) << v20;
      if ((v23 & 0x80) == 0) {
        goto LABEL_21;
      }
      v20 += 7;
      unint64_t v2 = v22;
      if (v21++ >= 9)
      {
LABEL_20:
        unint64_t v16 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C44D00(uint64_t result, PB::Writer *this)
{
  unint64_t v3 = (void *)result;
  if (*(unsigned char *)(result + 112)) {
    double result = PB::Writer::write(this, *(double *)(result + 104));
  }
  int v4 = (float *)v3[4];
  char v5 = (float *)v3[5];
  while (v4 != v5)
  {
    float v6 = *v4++;
    double result = PB::Writer::write(this, v6);
  }
  float v7 = (float *)v3[1];
  uint64_t v8 = (float *)v3[2];
  while (v7 != v8)
  {
    float v9 = *v7++;
    double result = PB::Writer::write(this, v9);
  }
  float v10 = (float *)v3[10];
  unint64_t v11 = (float *)v3[11];
  while (v10 != v11)
  {
    float v12 = *v10++;
    double result = PB::Writer::write(this, v12);
  }
  char v14 = (float *)v3[7];
  uint64_t v13 = (float *)v3[8];
  while (v14 != v13)
  {
    float v15 = *v14++;
    double result = PB::Writer::write(this, v15);
  }
  return result;
}

uint64_t sub_227C44DC4(uint64_t result)
{
  *(void *)double result = &unk_26DC27178;
  *(_DWORD *)(result + 44) = 0;
  return result;
}

void sub_227C44DEC(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C44E24(uint64_t result, uint64_t a2)
{
  *(void *)double result = &unk_26DC27178;
  *(_DWORD *)(result + 44) = 0;
  char v2 = *(unsigned char *)(a2 + 44);
  if ((v2 & 4) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 24);
    char v3 = 4;
    *(unsigned char *)(result + 44) = 4;
    *(void *)(result + 24) = v4;
    char v2 = *(unsigned char *)(a2 + 44);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 44) & 2) != 0)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(result + 44) = v3;
    *(void *)(result + 16) = v5;
    char v2 = *(unsigned char *)(a2 + 44);
  }
LABEL_6:
  if (v2)
  {
    uint64_t v6 = *(void *)(a2 + 8);
    v3 |= 1u;
    *(unsigned char *)(result + 44) = v3;
    *(void *)(result + 8) = v6;
    char v2 = *(unsigned char *)(a2 + 44);
    if ((v2 & 8) == 0)
    {
LABEL_8:
      if ((v2 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_14;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(unsigned char *)(result + 44) = v3;
  *(void *)(result + 32) = v7;
  char v2 = *(unsigned char *)(a2 + 44);
  if ((v2 & 0x40) == 0)
  {
LABEL_9:
    if ((v2 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_15;
  }
LABEL_14:
  char v8 = *(unsigned char *)(a2 + 42);
  v3 |= 0x40u;
  *(unsigned char *)(result + 44) = v3;
  *(unsigned char *)(result + 42) = v8;
  char v2 = *(unsigned char *)(a2 + 44);
  if ((v2 & 0x10) == 0)
  {
LABEL_10:
    if ((v2 & 0x20) == 0) {
      return result;
    }
LABEL_16:
    char v10 = *(unsigned char *)(a2 + 41);
    *(unsigned char *)(result + 44) = v3 | 0x20;
    *(unsigned char *)(result + 41) = v10;
    return result;
  }
LABEL_15:
  char v9 = *(unsigned char *)(a2 + 40);
  v3 |= 0x10u;
  *(unsigned char *)(result + 44) = v3;
  *(unsigned char *)(result + 40) = v9;
  if ((*(unsigned char *)(a2 + 44) & 0x20) != 0) {
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_227C44F14(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 0x10) != 0)
  {
    PB::TextFormatter::format(this, "exitingSaturation");
    char v5 = *(unsigned char *)(a1 + 44);
    if ((v5 & 0x20) == 0)
    {
LABEL_3:
      if ((v5 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(a1 + 44) & 0x20) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "extendedSaturation");
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 0x40) == 0)
  {
LABEL_4:
    if ((v5 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(this, "shiftInSaturation");
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 1) == 0)
  {
LABEL_5:
    if ((v5 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  PB::TextFormatter::format(this, "timeSinceLastRemag");
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 2) == 0)
  {
LABEL_6:
    if ((v5 & 4) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "timeSinceLastRemagTrigger");
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_17:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 24));
  if ((*(unsigned char *)(a1 + 44) & 8) != 0) {
LABEL_8:
  }
    PB::TextFormatter::format(this, "triggerCount");
LABEL_9:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C45038(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 44) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_97;
            case 2u:
              *(unsigned char *)(a1 + 44) |= 2u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v45 = 0;
                unsigned int v46 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    uint64_t v25 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_86;
                  }
                  unint64_t v47 = v21++;
                  char v48 = *(unsigned char *)(v22 + v47);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v48 & 0x7F) << v45;
                  if ((v48 & 0x80) == 0) {
                    break;
                  }
                  v45 += 7;
                  BOOL v14 = v46++ > 8;
                  if (v14)
                  {
                    uint64_t v25 = 0;
LABEL_85:
                    unint64_t v2 = v47 + 1;
                    goto LABEL_86;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v25 = 0;
                }
                goto LABEL_85;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_86;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              uint64_t v25 = 0;
LABEL_86:
              *(void *)(a1 + 16) = v25;
              goto LABEL_97;
            case 3u:
              *(unsigned char *)(a1 + 44) |= 1u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v49 = 0;
                unsigned int v50 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    uint64_t v31 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_91;
                  }
                  unint64_t v51 = v27++;
                  char v52 = *(unsigned char *)(v28 + v51);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v52 & 0x7F) << v49;
                  if ((v52 & 0x80) == 0) {
                    break;
                  }
                  v49 += 7;
                  BOOL v14 = v50++ > 8;
                  if (v14)
                  {
                    uint64_t v31 = 0;
LABEL_90:
                    unint64_t v2 = v51 + 1;
                    goto LABEL_91;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v31 = 0;
                }
                goto LABEL_90;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_91;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              uint64_t v31 = 0;
LABEL_91:
              *(void *)(a1 + 8) = v31;
              goto LABEL_97;
            case 4u:
              *(unsigned char *)(a1 + 44) |= 8u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v53 = 0;
                unsigned int v54 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    uint64_t v37 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_96;
                  }
                  unint64_t v55 = v33++;
                  char v56 = *(unsigned char *)(v34 + v55);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v56 & 0x7F) << v53;
                  if ((v56 & 0x80) == 0) {
                    break;
                  }
                  v53 += 7;
                  BOOL v14 = v54++ > 8;
                  if (v14)
                  {
                    uint64_t v37 = 0;
LABEL_95:
                    unint64_t v2 = v55 + 1;
                    goto LABEL_96;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v37 = 0;
                }
                goto LABEL_95;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_96;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              uint64_t v37 = 0;
LABEL_96:
              *(void *)(a1 + 32) = v37;
LABEL_97:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 5u:
              *(unsigned char *)(a1 + 44) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v40 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v39 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v40 = v39 != 0;
              }
              *(unsigned char *)(a1 + 42) = v40;
              goto LABEL_97;
            case 6u:
              *(unsigned char *)(a1 + 44) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v42 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v41 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v42 = v41 != 0;
              }
              *(unsigned char *)(a1 + 40) = v42;
              goto LABEL_97;
            case 7u:
              *(unsigned char *)(a1 + 44) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v44 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v43 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v44 = v43 != 0;
              }
              *(unsigned char *)(a1 + 41) = v44;
              goto LABEL_97;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_97;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C455A4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 44);
  if ((v4 & 4) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 24));
    char v4 = *(unsigned char *)(v3 + 44);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(result + 44) & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 1) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 0x40) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_14:
    uint64_t result = PB::Writer::write(this);
    if ((*(unsigned char *)(v3 + 44) & 0x20) == 0) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_13:
  uint64_t result = PB::Writer::write(this);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 0x10) != 0) {
    goto LABEL_14;
  }
LABEL_7:
  if ((v4 & 0x20) == 0) {
    return result;
  }
LABEL_15:

  return PB::Writer::write(this);
}

uint64_t sub_227C456A0(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC271B0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_227C456C8(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C45700(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC271B0;
  *(_DWORD *)(result + 20) = 0;
  __int16 v2 = *(_WORD *)(a2 + 20);
  if ((v2 & 0x80) != 0)
  {
    char v4 = *(unsigned char *)(a2 + 15);
    __int16 v3 = 128;
    *(_WORD *)(result + 20) = 128;
    *(unsigned char *)(result + 15) = v4;
    __int16 v2 = *(_WORD *)(a2 + 20);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_5:
    char v5 = *(unsigned char *)(a2 + 9);
    v3 |= 2u;
    *(_WORD *)(result + 20) = v3;
    *(unsigned char *)(result + 9) = v5;
    __int16 v2 = *(_WORD *)(a2 + 20);
  }
LABEL_6:
  if ((v2 & 8) != 0)
  {
    char v6 = *(unsigned char *)(a2 + 11);
    v3 |= 8u;
    *(_WORD *)(result + 20) = v3;
    *(unsigned char *)(result + 11) = v6;
    __int16 v2 = *(_WORD *)(a2 + 20);
    if ((v2 & 0x20) == 0)
    {
LABEL_8:
      if ((v2 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_16;
    }
  }
  else if ((v2 & 0x20) == 0)
  {
    goto LABEL_8;
  }
  char v7 = *(unsigned char *)(a2 + 13);
  v3 |= 0x20u;
  *(_WORD *)(result + 20) = v3;
  *(unsigned char *)(result + 13) = v7;
  __int16 v2 = *(_WORD *)(a2 + 20);
  if ((v2 & 0x40) == 0)
  {
LABEL_9:
    if ((v2 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_17;
  }
LABEL_16:
  char v8 = *(unsigned char *)(a2 + 14);
  v3 |= 0x40u;
  *(_WORD *)(result + 20) = v3;
  *(unsigned char *)(result + 14) = v8;
  __int16 v2 = *(_WORD *)(a2 + 20);
  if ((v2 & 0x10) == 0)
  {
LABEL_10:
    if ((v2 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_18;
  }
LABEL_17:
  char v9 = *(unsigned char *)(a2 + 12);
  v3 |= 0x10u;
  *(_WORD *)(result + 20) = v3;
  *(unsigned char *)(result + 12) = v9;
  __int16 v2 = *(_WORD *)(a2 + 20);
  if ((v2 & 0x100) == 0)
  {
LABEL_11:
    if ((v2 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_19;
  }
LABEL_18:
  char v10 = *(unsigned char *)(a2 + 16);
  v3 |= 0x100u;
  *(_WORD *)(result + 20) = v3;
  *(unsigned char *)(result + 16) = v10;
  __int16 v2 = *(_WORD *)(a2 + 20);
  if ((v2 & 4) == 0)
  {
LABEL_12:
    if ((v2 & 1) == 0) {
      return result;
    }
LABEL_20:
    char v12 = *(unsigned char *)(a2 + 8);
    *(_WORD *)(result + 20) = v3 | 1;
    *(unsigned char *)(result + 8) = v12;
    return result;
  }
LABEL_19:
  char v11 = *(unsigned char *)(a2 + 10);
  v3 |= 4u;
  *(_WORD *)(result + 20) = v3;
  *(unsigned char *)(result + 10) = v11;
  if (*(_WORD *)(a2 + 20)) {
    goto LABEL_20;
  }
  return result;
}

uint64_t sub_227C45828(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 20);
  if (v5)
  {
    PB::TextFormatter::format(this, "isAppleMapsRoutingActive");
    __int16 v5 = *(_WORD *)(a1 + 20);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "isBicycleRouting");
  __int16 v5 = *(_WORD *)(a1 + 20);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "isBicycleRoutingActive");
  __int16 v5 = *(_WORD *)(a1 + 20);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  PB::TextFormatter::format(this, "isPedestrianRouting");
  __int16 v5 = *(_WORD *)(a1 + 20);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "isPedestrianRoutingActive");
  __int16 v5 = *(_WORD *)(a1 + 20);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "isStepTypeBicycle");
  __int16 v5 = *(_WORD *)(a1 + 20);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "isStepTypePedestrian");
  __int16 v5 = *(_WORD *)(a1 + 20);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_21:
  PB::TextFormatter::format(this, "isVehicularRouting");
  if ((*(_WORD *)(a1 + 20) & 0x100) != 0) {
LABEL_10:
  }
    PB::TextFormatter::format(this, "isVehicularRoutingActive");
LABEL_11:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C4598C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          if (v10++ > 8) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 20) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              unint64_t v3 = *((void *)this + 2);
              if (v2 >= v3)
              {
                BOOL v21 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v20 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v21 = v20 != 0;
              }
              *(unsigned char *)(a1 + 15) = v21;
              goto LABEL_60;
            case 2u:
              *(_WORD *)(a1 + 20) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              unint64_t v3 = *((void *)this + 2);
              if (v2 >= v3)
              {
                BOOL v24 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v23 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v24 = v23 != 0;
              }
              *(unsigned char *)(a1 + 9) = v24;
              goto LABEL_60;
            case 3u:
              *(_WORD *)(a1 + 20) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              unint64_t v3 = *((void *)this + 2);
              if (v2 >= v3)
              {
                BOOL v26 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v25 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v26 = v25 != 0;
              }
              *(unsigned char *)(a1 + 11) = v26;
              goto LABEL_60;
            case 4u:
              *(_WORD *)(a1 + 20) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              unint64_t v3 = *((void *)this + 2);
              if (v2 >= v3)
              {
                BOOL v28 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v27 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v28 = v27 != 0;
              }
              *(unsigned char *)(a1 + 13) = v28;
              goto LABEL_60;
            case 5u:
              *(_WORD *)(a1 + 20) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              unint64_t v3 = *((void *)this + 2);
              if (v2 >= v3)
              {
                BOOL v30 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v29 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v30 = v29 != 0;
              }
              *(unsigned char *)(a1 + 14) = v30;
              goto LABEL_60;
            case 6u:
              *(_WORD *)(a1 + 20) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              unint64_t v3 = *((void *)this + 2);
              if (v2 >= v3)
              {
                BOOL v32 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v31 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v32 = v31 != 0;
              }
              *(unsigned char *)(a1 + 12) = v32;
              goto LABEL_60;
            case 7u:
              *(_WORD *)(a1 + 20) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              unint64_t v3 = *((void *)this + 2);
              if (v2 >= v3)
              {
                BOOL v34 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v33 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v34 = v33 != 0;
              }
              *(unsigned char *)(a1 + 16) = v34;
              goto LABEL_60;
            case 8u:
              *(_WORD *)(a1 + 20) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              unint64_t v3 = *((void *)this + 2);
              if (v2 >= v3)
              {
                BOOL v36 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v35 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v36 = v35 != 0;
              }
              *(unsigned char *)(a1 + 10) = v36;
              goto LABEL_60;
            case 9u:
              *(_WORD *)(a1 + 20) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              unint64_t v3 = *((void *)this + 2);
              if (v2 >= v3)
              {
                BOOL v38 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v37 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v38 = v37 != 0;
              }
              *(unsigned char *)(a1 + 8) = v38;
              goto LABEL_60;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              unint64_t v3 = *((void *)this + 2);
LABEL_60:
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || *((unsigned char *)this + 24)) {
                return v4 == 0;
              }
              continue;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C45D84(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 20);
  if ((v4 & 0x80) != 0)
  {
    uint64_t result = PB::Writer::write(this);
    __int16 v4 = *(_WORD *)(v3 + 20);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 20);
  if ((v4 & 8) == 0)
  {
LABEL_4:
    if ((v4 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 20);
  if ((v4 & 0x20) == 0)
  {
LABEL_5:
    if ((v4 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 20);
  if ((v4 & 0x40) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 20);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x100) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 20);
  if ((v4 & 0x100) == 0)
  {
LABEL_8:
    if ((v4 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_18:
    uint64_t result = PB::Writer::write(this);
    if ((*(_WORD *)(v3 + 20) & 1) == 0) {
      return result;
    }
    goto LABEL_19;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 20);
  if ((v4 & 4) != 0) {
    goto LABEL_18;
  }
LABEL_9:
  if ((v4 & 1) == 0) {
    return result;
  }
LABEL_19:

  return PB::Writer::write(this);
}

uint64_t sub_227C45EB8(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC271E8;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

void sub_227C45EE0(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227C45F18(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC271E8;
  *(_DWORD *)(a1 + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 28);
  if (v2)
  {
    float result = *(float *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 28) = 1;
    *(float *)(a1 + 8) = result;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 28) & 4) != 0)
  {
LABEL_5:
    float result = *(float *)(a2 + 16);
    v3 |= 4u;
    *(unsigned char *)(a1 + 28) = v3;
    *(float *)(a1 + 16) = result;
    char v2 = *(unsigned char *)(a2 + 28);
  }
LABEL_6:
  if ((v2 & 8) != 0)
  {
    float result = *(float *)(a2 + 20);
    v3 |= 8u;
    *(unsigned char *)(a1 + 28) = v3;
    *(float *)(a1 + 20) = result;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 0x10) == 0)
    {
LABEL_8:
      if ((v2 & 2) == 0) {
        return result;
      }
LABEL_12:
      float result = *(float *)(a2 + 12);
      *(unsigned char *)(a1 + 28) = v3 | 2;
      *(float *)(a1 + 12) = result;
      return result;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_8;
  }
  int v5 = *(_DWORD *)(a2 + 24);
  v3 |= 0x10u;
  *(unsigned char *)(a1 + 28) = v3;
  *(_DWORD *)(a1 + 24) = v5;
  if ((*(unsigned char *)(a2 + 28) & 2) != 0) {
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_227C45FD0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 28);
  if (v5)
  {
    PB::TextFormatter::format(this, "mets", *(float *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 28);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 28) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "metsDiff", *(float *)(a1 + 12));
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(this, "metsHR", *(float *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(this, "metsWR", *(float *)(a1 + 20));
  if ((*(unsigned char *)(a1 + 28) & 0x10) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "source");
LABEL_7:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C460B4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 28) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_42;
              }
              *(_DWORD *)(a1 + 8) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_51;
            case 2u:
              *(unsigned char *)(a1 + 28) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_42;
              }
              *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_51;
            case 3u:
              *(unsigned char *)(a1 + 28) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_42;
              }
              *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_51;
            case 4u:
              *(unsigned char *)(a1 + 28) |= 0x10u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v27 = 0;
                unsigned int v28 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_56;
                  }
                  unint64_t v29 = v21++;
                  char v30 = *(unsigned char *)(v22 + v29);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v30 & 0x7F) << v27;
                  if ((v30 & 0x80) == 0) {
                    break;
                  }
                  v27 += 7;
                  BOOL v14 = v28++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_55:
                    unint64_t v2 = v29 + 1;
                    goto LABEL_56;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_55;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_56;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_56:
              *(_DWORD *)(a1 + 24) = v25;
LABEL_57:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 5u:
              *(unsigned char *)(a1 + 28) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 12) = *(_DWORD *)(*(void *)this + v2);
LABEL_51:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_42:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_57;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_57;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C4641C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 28);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 28) & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16));
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 8) == 0)
  {
LABEL_4:
    if ((v4 & 0x10) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(unsigned char *)(v3 + 28) & 2) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 0x10) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_11:
  float v5 = *(float *)(v3 + 12);

  return PB::Writer::write(this, v5);
}

void *sub_227C464E0(void *result)
{
  *uint64_t result = &unk_26DC27220;
  result[23] = 0;
  return result;
}

void sub_227C46508(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227C46540(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC27220;
  *(void *)(a1 + 184) = 0;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 4) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 24);
    uint64_t v3 = 4;
    *(void *)(a1 + 184) = 4;
    *(void *)(a1 + 24) = v4;
    uint64_t v2 = *(void *)(a2 + 184);
    if ((v2 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v3 = 0;
  if (v2)
  {
LABEL_5:
    uint64_t v4 = *(void *)(a2 + 8);
    v3 |= 1uLL;
    *(void *)(a1 + 184) = v3;
    *(void *)(a1 + 8) = v4;
    uint64_t v2 = *(void *)(a2 + 184);
  }
LABEL_6:
  if ((v2 & 0x200000) != 0)
  {
    int v5 = *(_DWORD *)(a2 + 104);
    v3 |= 0x200000uLL;
    *(void *)(a1 + 184) = v3;
    *(_DWORD *)(a1 + 104) = v5;
    uint64_t v2 = *(void *)(a2 + 184);
    if ((v2 & 0x1000000000) == 0)
    {
LABEL_8:
      if ((v2 & 0x100000000000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_52;
    }
  }
  else if ((v2 & 0x1000000000) == 0)
  {
    goto LABEL_8;
  }
  LODWORD(v4) = *(_DWORD *)(a2 + 164);
  v3 |= 0x1000000000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 164) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x100000000000) == 0)
  {
LABEL_9:
    if ((v2 & 0x800) == 0) {
      goto LABEL_10;
    }
    goto LABEL_53;
  }
LABEL_52:
  char v6 = *(unsigned char *)(a2 + 181);
  v3 |= 0x100000000000uLL;
  *(void *)(a1 + 184) = v3;
  *(unsigned char *)(a1 + 181) = v6;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x800) == 0)
  {
LABEL_10:
    if ((v2 & 0x10000000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_54;
  }
LABEL_53:
  LODWORD(v4) = *(_DWORD *)(a2 + 64);
  v3 |= 0x800uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 64) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x10000000000) == 0)
  {
LABEL_11:
    if ((v2 & 0x2000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_55;
  }
LABEL_54:
  char v7 = *(unsigned char *)(a2 + 177);
  v3 |= 0x10000000000uLL;
  *(void *)(a1 + 184) = v3;
  *(unsigned char *)(a1 + 177) = v7;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x2000000) == 0)
  {
LABEL_12:
    if ((v2 & 0x80000000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_56;
  }
LABEL_55:
  LODWORD(v4) = *(_DWORD *)(a2 + 120);
  v3 |= 0x2000000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 120) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x80000000000) == 0)
  {
LABEL_13:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_57;
  }
LABEL_56:
  char v8 = *(unsigned char *)(a2 + 180);
  v3 |= 0x80000000000uLL;
  *(void *)(a1 + 184) = v3;
  *(unsigned char *)(a1 + 180) = v8;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x4000) == 0)
  {
LABEL_14:
    if ((v2 & 2) == 0) {
      goto LABEL_15;
    }
    goto LABEL_58;
  }
LABEL_57:
  int v9 = *(_DWORD *)(a2 + 76);
  v3 |= 0x4000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 76) = v9;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 2) == 0)
  {
LABEL_15:
    if ((v2 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t v4 = *(void *)(a2 + 16);
  v3 |= 2uLL;
  *(void *)(a1 + 184) = v3;
  *(void *)(a1 + 16) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 8) == 0)
  {
LABEL_16:
    if ((v2 & 0x8000000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_60;
  }
LABEL_59:
  LODWORD(v4) = *(_DWORD *)(a2 + 32);
  v3 |= 8uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 32) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x8000000000) == 0)
  {
LABEL_17:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_61;
  }
LABEL_60:
  char v10 = *(unsigned char *)(a2 + 176);
  v3 |= 0x8000000000uLL;
  *(void *)(a1 + 184) = v3;
  *(unsigned char *)(a1 + 176) = v10;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x2000) == 0)
  {
LABEL_18:
    if ((v2 & 0x200000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_62;
  }
LABEL_61:
  int v11 = *(_DWORD *)(a2 + 72);
  v3 |= 0x2000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 72) = v11;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x200000000) == 0)
  {
LABEL_19:
    if ((v2 & 0x4000000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_63;
  }
LABEL_62:
  int v12 = *(_DWORD *)(a2 + 152);
  v3 |= 0x200000000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 152) = v12;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x4000000000) == 0)
  {
LABEL_20:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_64;
  }
LABEL_63:
  int v13 = *(_DWORD *)(a2 + 172);
  v3 |= 0x4000000000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 172) = v13;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x100000) == 0)
  {
LABEL_21:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_65;
  }
LABEL_64:
  int v14 = *(_DWORD *)(a2 + 100);
  v3 |= 0x100000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 100) = v14;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x20000) == 0)
  {
LABEL_22:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_66;
  }
LABEL_65:
  int v15 = *(_DWORD *)(a2 + 88);
  v3 |= 0x20000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 88) = v15;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x10000) == 0)
  {
LABEL_23:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_67;
  }
LABEL_66:
  int v16 = *(_DWORD *)(a2 + 84);
  v3 |= 0x10000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 84) = v16;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x40000) == 0)
  {
LABEL_24:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_68;
  }
LABEL_67:
  int v17 = *(_DWORD *)(a2 + 92);
  v3 |= 0x40000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 92) = v17;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x80000) == 0)
  {
LABEL_25:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_69;
  }
LABEL_68:
  int v18 = *(_DWORD *)(a2 + 96);
  v3 |= 0x80000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 96) = v18;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x8000) == 0)
  {
LABEL_26:
    if ((v2 & 0x400) == 0) {
      goto LABEL_27;
    }
    goto LABEL_70;
  }
LABEL_69:
  int v19 = *(_DWORD *)(a2 + 80);
  v3 |= 0x8000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 80) = v19;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x400) == 0)
  {
LABEL_27:
    if ((v2 & 0x2000000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_71;
  }
LABEL_70:
  int v20 = *(_DWORD *)(a2 + 60);
  v3 |= 0x400uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 60) = v20;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x2000000000) == 0)
  {
LABEL_28:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_72;
  }
LABEL_71:
  int v21 = *(_DWORD *)(a2 + 168);
  v3 |= 0x2000000000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 168) = v21;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x1000) == 0)
  {
LABEL_29:
    if ((v2 & 0x20000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_73;
  }
LABEL_72:
  int v22 = *(_DWORD *)(a2 + 68);
  v3 |= 0x1000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 68) = v22;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x20000000) == 0)
  {
LABEL_30:
    if ((v2 & 0x10) == 0) {
      goto LABEL_31;
    }
    goto LABEL_74;
  }
LABEL_73:
  int v23 = *(_DWORD *)(a2 + 136);
  v3 |= 0x20000000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 136) = v23;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x10) == 0)
  {
LABEL_31:
    if ((v2 & 0x400000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_75;
  }
LABEL_74:
  int v24 = *(_DWORD *)(a2 + 36);
  v3 |= 0x10uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 36) = v24;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x400000000) == 0)
  {
LABEL_32:
    if ((v2 & 0x20000000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_76;
  }
LABEL_75:
  LODWORD(v4) = *(_DWORD *)(a2 + 156);
  v3 |= 0x400000000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 156) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x20000000000) == 0)
  {
LABEL_33:
    if ((v2 & 0x800000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_77;
  }
LABEL_76:
  char v25 = *(unsigned char *)(a2 + 178);
  v3 |= 0x20000000000uLL;
  *(void *)(a1 + 184) = v3;
  *(unsigned char *)(a1 + 178) = v25;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x800000000) == 0)
  {
LABEL_34:
    if ((v2 & 0x40000000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_78;
  }
LABEL_77:
  LODWORD(v4) = *(_DWORD *)(a2 + 160);
  v3 |= 0x800000000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 160) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x40000000000) == 0)
  {
LABEL_35:
    if ((v2 & 0x20) == 0) {
      goto LABEL_36;
    }
    goto LABEL_79;
  }
LABEL_78:
  char v26 = *(unsigned char *)(a2 + 179);
  v3 |= 0x40000000000uLL;
  *(void *)(a1 + 184) = v3;
  *(unsigned char *)(a1 + 179) = v26;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x20) == 0)
  {
LABEL_36:
    if ((v2 & 0x80) == 0) {
      goto LABEL_37;
    }
    goto LABEL_80;
  }
LABEL_79:
  int v27 = *(_DWORD *)(a2 + 40);
  v3 |= 0x20uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 40) = v27;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x80) == 0)
  {
LABEL_37:
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_81;
  }
LABEL_80:
  LODWORD(v4) = *(_DWORD *)(a2 + 48);
  v3 |= 0x80uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 48) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_38:
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_82;
  }
LABEL_81:
  LODWORD(v4) = *(_DWORD *)(a2 + 124);
  v3 |= 0x4000000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 124) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x8000000) == 0)
  {
LABEL_39:
    if ((v2 & 0x10000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_83;
  }
LABEL_82:
  LODWORD(v4) = *(_DWORD *)(a2 + 128);
  v3 |= 0x8000000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 128) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_40:
    if ((v2 & 0x40) == 0) {
      goto LABEL_41;
    }
    goto LABEL_84;
  }
LABEL_83:
  LODWORD(v4) = *(_DWORD *)(a2 + 132);
  v3 |= 0x10000000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 132) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x40) == 0)
  {
LABEL_41:
    if ((v2 & 0x100) == 0) {
      goto LABEL_42;
    }
    goto LABEL_85;
  }
LABEL_84:
  LODWORD(v4) = *(_DWORD *)(a2 + 44);
  v3 |= 0x40uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 44) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x100) == 0)
  {
LABEL_42:
    if ((v2 & 0x200) == 0) {
      goto LABEL_43;
    }
    goto LABEL_86;
  }
LABEL_85:
  LODWORD(v4) = *(_DWORD *)(a2 + 52);
  v3 |= 0x100uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 52) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x200) == 0)
  {
LABEL_43:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_87;
  }
LABEL_86:
  LODWORD(v4) = *(_DWORD *)(a2 + 56);
  v3 |= 0x200uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 56) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x400000) == 0)
  {
LABEL_44:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_88;
  }
LABEL_87:
  LODWORD(v4) = *(_DWORD *)(a2 + 108);
  v3 |= 0x400000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 108) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x800000) == 0)
  {
LABEL_45:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_89;
  }
LABEL_88:
  LODWORD(v4) = *(_DWORD *)(a2 + 112);
  v3 |= 0x800000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 112) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_46:
    if ((v2 & 0x40000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_90;
  }
LABEL_89:
  LODWORD(v4) = *(_DWORD *)(a2 + 116);
  v3 |= 0x1000000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 116) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x40000000) == 0)
  {
LABEL_47:
    if ((v2 & 0x80000000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_91;
  }
LABEL_90:
  LODWORD(v4) = *(_DWORD *)(a2 + 140);
  v3 |= 0x40000000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 140) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x80000000) == 0)
  {
LABEL_48:
    if ((v2 & 0x100000000) == 0) {
      return *(float *)&v4;
    }
    goto LABEL_92;
  }
LABEL_91:
  LODWORD(v4) = *(_DWORD *)(a2 + 144);
  v3 |= 0x80000000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 144) = v4;
  if ((*(void *)(a2 + 184) & 0x100000000) == 0) {
    return *(float *)&v4;
  }
LABEL_92:
  LODWORD(v4) = *(_DWORD *)(a2 + 148);
  *(void *)(a1 + 184) = v3 | 0x100000000;
  *(_DWORD *)(a1 + 148) = v4;
  return *(float *)&v4;
}

uint64_t sub_227C46A58(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 8) != 0)
  {
    PB::TextFormatter::format(this, "asymmetryPercentage", *(float *)(a1 + 32));
    uint64_t v5 = *(void *)(a1 + 184);
    if ((v5 & 0x8000000000) == 0)
    {
LABEL_3:
      if ((v5 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_52;
    }
  }
  else if ((v5 & 0x8000000000) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "asymmetryPercentageIsValid");
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x10) == 0)
  {
LABEL_4:
    if ((v5 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_53;
  }
LABEL_52:
  PB::TextFormatter::format(this, "asymmetryPercentageRejectionStatus");
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x20) == 0)
  {
LABEL_5:
    if ((v5 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(this, "boundaryType");
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x40) == 0)
  {
LABEL_6:
    if ((v5 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(this, "cycleTimeEntropy", *(float *)(a1 + 44));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x80) == 0)
  {
LABEL_7:
    if ((v5 & 0x100) == 0) {
      goto LABEL_8;
    }
    goto LABEL_56;
  }
LABEL_55:
  PB::TextFormatter::format(this, "cycleTimeMean", *(float *)(a1 + 48));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x100) == 0)
  {
LABEL_8:
    if ((v5 & 0x200) == 0) {
      goto LABEL_9;
    }
    goto LABEL_57;
  }
LABEL_56:
  PB::TextFormatter::format(this, "cycleTimePoincareSD1", *(float *)(a1 + 52));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x200) == 0)
  {
LABEL_9:
    if ((v5 & 0x400) == 0) {
      goto LABEL_10;
    }
    goto LABEL_58;
  }
LABEL_57:
  PB::TextFormatter::format(this, "cycleTimePoincareSD2", *(float *)(a1 + 56));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x400) == 0)
  {
LABEL_10:
    if ((v5 & 0x800) == 0) {
      goto LABEL_11;
    }
    goto LABEL_59;
  }
LABEL_58:
  PB::TextFormatter::format(this, "deviceSide");
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x800) == 0)
  {
LABEL_11:
    if ((v5 & 0x10000000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_60;
  }
LABEL_59:
  PB::TextFormatter::format(this, "doubleSupportPercentage", *(float *)(a1 + 64));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x10000000000) == 0)
  {
LABEL_12:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_61;
  }
LABEL_60:
  PB::TextFormatter::format(this, "doubleSupportPercentageIsValid");
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x1000) == 0)
  {
LABEL_13:
    if ((v5 & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_62;
  }
LABEL_61:
  PB::TextFormatter::format(this, "doubleSupportPercentageRejectionStatus");
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 1) == 0)
  {
LABEL_14:
    if ((v5 & 2) == 0) {
      goto LABEL_15;
    }
    goto LABEL_63;
  }
LABEL_62:
  PB::TextFormatter::format(this, "endTime", *(double *)(a1 + 8));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 2) == 0)
  {
LABEL_15:
    if ((v5 & 0x20000000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_64;
  }
LABEL_63:
  PB::TextFormatter::format(this, "invalidGradePercentage", *(double *)(a1 + 16));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x20000000000) == 0)
  {
LABEL_16:
    if ((v5 & 0x40000000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_65;
  }
LABEL_64:
  PB::TextFormatter::format(this, "isHeightSet");
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x40000000000) == 0)
  {
LABEL_17:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_66;
  }
LABEL_65:
  PB::TextFormatter::format(this, "isWeightSet");
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x2000) == 0)
  {
LABEL_18:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_67;
  }
LABEL_66:
  PB::TextFormatter::format(this, "numGaitMetrics");
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x4000) == 0)
  {
LABEL_19:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_68;
  }
LABEL_67:
  PB::TextFormatter::format(this, "rejectionStatus");
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x8000) == 0)
  {
LABEL_20:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_69;
  }
LABEL_68:
  PB::TextFormatter::format(this, "segmentsRejectedByIsCadenceConcordant");
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x10000) == 0)
  {
LABEL_21:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_70;
  }
LABEL_69:
  PB::TextFormatter::format(this, "segmentsRejectedByIsFeasibleWalkingSpeed");
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x20000) == 0)
  {
LABEL_22:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_71;
  }
LABEL_70:
  PB::TextFormatter::format(this, "segmentsRejectedByIsNotRunning");
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x40000) == 0)
  {
LABEL_23:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_72;
  }
LABEL_71:
  PB::TextFormatter::format(this, "segmentsRejectedByIsPendular");
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x80000) == 0)
  {
LABEL_24:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_73;
  }
LABEL_72:
  PB::TextFormatter::format(this, "segmentsRejectedByIsSufficientVerticalTwist");
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x100000) == 0)
  {
LABEL_25:
    if ((v5 & 4) == 0) {
      goto LABEL_26;
    }
    goto LABEL_74;
  }
LABEL_73:
  PB::TextFormatter::format(this, "segmentsRejectedByIsSwingStanceCycle");
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 4) == 0)
  {
LABEL_26:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_75;
  }
LABEL_74:
  PB::TextFormatter::format(this, "startTime", *(double *)(a1 + 24));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x200000) == 0)
  {
LABEL_27:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_76;
  }
LABEL_75:
  PB::TextFormatter::format(this, "stepCount");
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x400000) == 0)
  {
LABEL_28:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_77;
  }
LABEL_76:
  PB::TextFormatter::format(this, "stepIndexOfHarmonicityAP", *(float *)(a1 + 108));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x800000) == 0)
  {
LABEL_29:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_78;
  }
LABEL_77:
  PB::TextFormatter::format(this, "stepIndexOfHarmonicityML", *(float *)(a1 + 112));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_30:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_79;
  }
LABEL_78:
  PB::TextFormatter::format(this, "stepIndexOfHarmonicityVT", *(float *)(a1 + 116));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_31:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_80;
  }
LABEL_79:
  PB::TextFormatter::format(this, "stepLength", *(float *)(a1 + 120));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_32:
    if ((v5 & 0x80000000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_81;
  }
LABEL_80:
  PB::TextFormatter::format(this, "stepLengthEntropy", *(float *)(a1 + 124));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x80000000000) == 0)
  {
LABEL_33:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_82;
  }
LABEL_81:
  PB::TextFormatter::format(this, "stepLengthIsValid");
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_34:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_83;
  }
LABEL_82:
  PB::TextFormatter::format(this, "stepLengthPoincareSD1", *(float *)(a1 + 128));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_35:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_84;
  }
LABEL_83:
  PB::TextFormatter::format(this, "stepLengthPoincareSD2", *(float *)(a1 + 132));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x20000000) == 0)
  {
LABEL_36:
    if ((v5 & 0x40000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_85;
  }
LABEL_84:
  PB::TextFormatter::format(this, "stepLengthRejectionStatus");
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x40000000) == 0)
  {
LABEL_37:
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_86;
  }
LABEL_85:
  PB::TextFormatter::format(this, "swingIndexOfHarmonicityAP", *(float *)(a1 + 140));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x80000000) == 0)
  {
LABEL_38:
    if ((v5 & 0x100000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_87;
  }
LABEL_86:
  PB::TextFormatter::format(this, "swingIndexOfHarmonicityML", *(float *)(a1 + 144));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x100000000) == 0)
  {
LABEL_39:
    if ((v5 & 0x200000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_88;
  }
LABEL_87:
  PB::TextFormatter::format(this, "swingIndexOfHarmonicityVT", *(float *)(a1 + 148));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x200000000) == 0)
  {
LABEL_40:
    if ((v5 & 0x400000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_89;
  }
LABEL_88:
  PB::TextFormatter::format(this, "terminationReason");
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x400000000) == 0)
  {
LABEL_41:
    if ((v5 & 0x800000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_90;
  }
LABEL_89:
  PB::TextFormatter::format(this, "userHeight", *(float *)(a1 + 156));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x800000000) == 0)
  {
LABEL_42:
    if ((v5 & 0x1000000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_91;
  }
LABEL_90:
  PB::TextFormatter::format(this, "userWeight", *(float *)(a1 + 160));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x1000000000) == 0)
  {
LABEL_43:
    if ((v5 & 0x100000000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_92;
  }
LABEL_91:
  PB::TextFormatter::format(this, "walkingSpeed", *(float *)(a1 + 164));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x100000000000) == 0)
  {
LABEL_44:
    if ((v5 & 0x2000000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_93;
  }
LABEL_92:
  PB::TextFormatter::format(this, "walkingSpeedIsValid");
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x2000000000) == 0)
  {
LABEL_45:
    if ((v5 & 0x4000000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_46;
  }
LABEL_93:
  PB::TextFormatter::format(this, "walkingSpeedRejectionStatus");
  if ((*(void *)(a1 + 184) & 0x4000000000) != 0) {
LABEL_46:
  }
    PB::TextFormatter::format(this, "workoutType");
LABEL_47:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C4703C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(void *)(a1 + 184) |= 4uLL;
          unint64_t v20 = *((void *)this + 1);
          if (v20 > 0xFFFFFFFFFFFFFFF7 || v20 + 8 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(void *)(a1 + 24) = *(void *)(*(void *)this + v20);
          goto LABEL_62;
        case 2u:
          *(void *)(a1 + 184) |= 1uLL;
          unint64_t v22 = *((void *)this + 1);
          if (v22 > 0xFFFFFFFFFFFFFFF7 || v22 + 8 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v22);
          goto LABEL_62;
        case 3u:
          *(void *)(a1 + 184) |= 0x200000uLL;
          unint64_t v23 = *((void *)this + 1);
          unint64_t v24 = *((void *)this + 2);
          uint64_t v25 = *(void *)this;
          if (v23 <= 0xFFFFFFFFFFFFFFF5 && v23 + 10 <= v24)
          {
            char v26 = 0;
            unsigned int v27 = 0;
            uint64_t v28 = 0;
            do
            {
              unint64_t v29 = v23 + 1;
              *((void *)this + 1) = v23 + 1;
              char v30 = *(unsigned char *)(v25 + v23);
              v28 |= (unint64_t)(v30 & 0x7F) << v26;
              if ((v30 & 0x80) == 0) {
                goto LABEL_364;
              }
              v26 += 7;
              unint64_t v23 = v29;
              BOOL v14 = v27++ > 8;
            }
            while (!v14);
LABEL_228:
            LODWORD(v28) = 0;
            goto LABEL_364;
          }
          char v204 = 0;
          unsigned int v205 = 0;
          uint64_t v28 = 0;
          if (v24 <= v23) {
            unint64_t v24 = *((void *)this + 1);
          }
          while (2)
          {
            if (v24 == v23)
            {
              LODWORD(v28) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v206 = v23 + 1;
              char v207 = *(unsigned char *)(v25 + v23);
              *((void *)this + 1) = v206;
              v28 |= (unint64_t)(v207 & 0x7F) << v204;
              if (v207 < 0)
              {
                v204 += 7;
                unint64_t v23 = v206;
                BOOL v14 = v205++ > 8;
                if (v14) {
                  goto LABEL_228;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v28) = 0;
              }
            }
            break;
          }
LABEL_364:
          *(_DWORD *)(a1 + 104) = v28;
          goto LABEL_356;
        case 4u:
          *(void *)(a1 + 184) |= 0x1000000000uLL;
          unint64_t v31 = *((void *)this + 1);
          if (v31 > 0xFFFFFFFFFFFFFFFBLL || v31 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 164) = *(_DWORD *)(*(void *)this + v31);
          goto LABEL_354;
        case 5u:
          *(void *)(a1 + 184) |= 0x100000000000uLL;
          unint64_t v32 = *((void *)this + 1);
          if (v32 >= *((void *)this + 2))
          {
            BOOL v35 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v33 = v32 + 1;
            int v34 = *(unsigned __int8 *)(*(void *)this + v32);
            *((void *)this + 1) = v33;
            BOOL v35 = v34 != 0;
          }
          *(unsigned char *)(a1 + 181) = v35;
          goto LABEL_356;
        case 6u:
          *(void *)(a1 + 184) |= 0x800uLL;
          unint64_t v36 = *((void *)this + 1);
          if (v36 > 0xFFFFFFFFFFFFFFFBLL || v36 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v36);
          goto LABEL_354;
        case 7u:
          *(void *)(a1 + 184) |= 0x10000000000uLL;
          unint64_t v37 = *((void *)this + 1);
          if (v37 >= *((void *)this + 2))
          {
            BOOL v40 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v38 = v37 + 1;
            int v39 = *(unsigned __int8 *)(*(void *)this + v37);
            *((void *)this + 1) = v38;
            BOOL v40 = v39 != 0;
          }
          *(unsigned char *)(a1 + 177) = v40;
          goto LABEL_356;
        case 8u:
          *(void *)(a1 + 184) |= 0x2000000uLL;
          unint64_t v41 = *((void *)this + 1);
          if (v41 > 0xFFFFFFFFFFFFFFFBLL || v41 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 120) = *(_DWORD *)(*(void *)this + v41);
          goto LABEL_354;
        case 9u:
          *(void *)(a1 + 184) |= 0x80000000000uLL;
          unint64_t v42 = *((void *)this + 1);
          if (v42 >= *((void *)this + 2))
          {
            BOOL v45 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v43 = v42 + 1;
            int v44 = *(unsigned __int8 *)(*(void *)this + v42);
            *((void *)this + 1) = v43;
            BOOL v45 = v44 != 0;
          }
          *(unsigned char *)(a1 + 180) = v45;
          goto LABEL_356;
        case 0xAu:
          *(void *)(a1 + 184) |= 0x4000uLL;
          unint64_t v46 = *((void *)this + 1);
          unint64_t v47 = *((void *)this + 2);
          uint64_t v48 = *(void *)this;
          if (v46 <= 0xFFFFFFFFFFFFFFF5 && v46 + 10 <= v47)
          {
            char v49 = 0;
            unsigned int v50 = 0;
            uint64_t v51 = 0;
            do
            {
              unint64_t v52 = v46 + 1;
              *((void *)this + 1) = v46 + 1;
              char v53 = *(unsigned char *)(v48 + v46);
              v51 |= (unint64_t)(v53 & 0x7F) << v49;
              if ((v53 & 0x80) == 0) {
                goto LABEL_368;
              }
              v49 += 7;
              unint64_t v46 = v52;
              BOOL v14 = v50++ > 8;
            }
            while (!v14);
LABEL_241:
            LODWORD(v51) = 0;
            goto LABEL_368;
          }
          char v208 = 0;
          unsigned int v209 = 0;
          uint64_t v51 = 0;
          if (v47 <= v46) {
            unint64_t v47 = *((void *)this + 1);
          }
          while (2)
          {
            if (v47 == v46)
            {
              LODWORD(v51) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v210 = v46 + 1;
              char v211 = *(unsigned char *)(v48 + v46);
              *((void *)this + 1) = v210;
              v51 |= (unint64_t)(v211 & 0x7F) << v208;
              if (v211 < 0)
              {
                v208 += 7;
                unint64_t v46 = v210;
                BOOL v14 = v209++ > 8;
                if (v14) {
                  goto LABEL_241;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v51) = 0;
              }
            }
            break;
          }
LABEL_368:
          *(_DWORD *)(a1 + 76) = v51;
          goto LABEL_356;
        case 0xBu:
          *(void *)(a1 + 184) |= 2uLL;
          unint64_t v54 = *((void *)this + 1);
          if (v54 > 0xFFFFFFFFFFFFFFF7 || v54 + 8 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v54);
LABEL_62:
          uint64_t v55 = *((void *)this + 1) + 8;
          goto LABEL_355;
        case 0xCu:
          *(void *)(a1 + 184) |= 8uLL;
          unint64_t v56 = *((void *)this + 1);
          if (v56 > 0xFFFFFFFFFFFFFFFBLL || v56 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v56);
          goto LABEL_354;
        case 0xDu:
          *(void *)(a1 + 184) |= 0x8000000000uLL;
          unint64_t v57 = *((void *)this + 1);
          if (v57 >= *((void *)this + 2))
          {
            BOOL v60 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v58 = v57 + 1;
            int v59 = *(unsigned __int8 *)(*(void *)this + v57);
            *((void *)this + 1) = v58;
            BOOL v60 = v59 != 0;
          }
          *(unsigned char *)(a1 + 176) = v60;
          goto LABEL_356;
        case 0xEu:
          *(void *)(a1 + 184) |= 0x2000uLL;
          unint64_t v61 = *((void *)this + 1);
          unint64_t v62 = *((void *)this + 2);
          uint64_t v63 = *(void *)this;
          if (v61 <= 0xFFFFFFFFFFFFFFF5 && v61 + 10 <= v62)
          {
            char v64 = 0;
            unsigned int v65 = 0;
            uint64_t v66 = 0;
            do
            {
              unint64_t v67 = v61 + 1;
              *((void *)this + 1) = v61 + 1;
              char v68 = *(unsigned char *)(v63 + v61);
              v66 |= (unint64_t)(v68 & 0x7F) << v64;
              if ((v68 & 0x80) == 0) {
                goto LABEL_372;
              }
              v64 += 7;
              unint64_t v61 = v67;
              BOOL v14 = v65++ > 8;
            }
            while (!v14);
LABEL_250:
            LODWORD(v66) = 0;
            goto LABEL_372;
          }
          char v212 = 0;
          unsigned int v213 = 0;
          uint64_t v66 = 0;
          if (v62 <= v61) {
            unint64_t v62 = *((void *)this + 1);
          }
          while (2)
          {
            if (v62 == v61)
            {
              LODWORD(v66) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v214 = v61 + 1;
              char v215 = *(unsigned char *)(v63 + v61);
              *((void *)this + 1) = v214;
              v66 |= (unint64_t)(v215 & 0x7F) << v212;
              if (v215 < 0)
              {
                v212 += 7;
                unint64_t v61 = v214;
                BOOL v14 = v213++ > 8;
                if (v14) {
                  goto LABEL_250;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v66) = 0;
              }
            }
            break;
          }
LABEL_372:
          *(_DWORD *)(a1 + 72) = v66;
          goto LABEL_356;
        case 0xFu:
          *(void *)(a1 + 184) |= 0x200000000uLL;
          unint64_t v69 = *((void *)this + 1);
          unint64_t v70 = *((void *)this + 2);
          uint64_t v71 = *(void *)this;
          if (v69 <= 0xFFFFFFFFFFFFFFF5 && v69 + 10 <= v70)
          {
            char v72 = 0;
            unsigned int v73 = 0;
            uint64_t v74 = 0;
            do
            {
              unint64_t v75 = v69 + 1;
              *((void *)this + 1) = v69 + 1;
              char v76 = *(unsigned char *)(v71 + v69);
              v74 |= (unint64_t)(v76 & 0x7F) << v72;
              if ((v76 & 0x80) == 0) {
                goto LABEL_376;
              }
              v72 += 7;
              unint64_t v69 = v75;
              BOOL v14 = v73++ > 8;
            }
            while (!v14);
LABEL_257:
            LODWORD(v74) = 0;
            goto LABEL_376;
          }
          char v216 = 0;
          unsigned int v217 = 0;
          uint64_t v74 = 0;
          if (v70 <= v69) {
            unint64_t v70 = *((void *)this + 1);
          }
          while (2)
          {
            if (v70 == v69)
            {
              LODWORD(v74) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v218 = v69 + 1;
              char v219 = *(unsigned char *)(v71 + v69);
              *((void *)this + 1) = v218;
              v74 |= (unint64_t)(v219 & 0x7F) << v216;
              if (v219 < 0)
              {
                v216 += 7;
                unint64_t v69 = v218;
                BOOL v14 = v217++ > 8;
                if (v14) {
                  goto LABEL_257;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v74) = 0;
              }
            }
            break;
          }
LABEL_376:
          *(_DWORD *)(a1 + 152) = v74;
          goto LABEL_356;
        case 0x10u:
          *(void *)(a1 + 184) |= 0x4000000000uLL;
          unint64_t v77 = *((void *)this + 1);
          unint64_t v78 = *((void *)this + 2);
          uint64_t v79 = *(void *)this;
          if (v77 <= 0xFFFFFFFFFFFFFFF5 && v77 + 10 <= v78)
          {
            char v80 = 0;
            unsigned int v81 = 0;
            uint64_t v82 = 0;
            do
            {
              unint64_t v83 = v77 + 1;
              *((void *)this + 1) = v77 + 1;
              char v84 = *(unsigned char *)(v79 + v77);
              v82 |= (unint64_t)(v84 & 0x7F) << v80;
              if ((v84 & 0x80) == 0) {
                goto LABEL_380;
              }
              v80 += 7;
              unint64_t v77 = v83;
              BOOL v14 = v81++ > 8;
            }
            while (!v14);
LABEL_264:
            LODWORD(v82) = 0;
            goto LABEL_380;
          }
          char v220 = 0;
          unsigned int v221 = 0;
          uint64_t v82 = 0;
          if (v78 <= v77) {
            unint64_t v78 = *((void *)this + 1);
          }
          while (2)
          {
            if (v78 == v77)
            {
              LODWORD(v82) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v222 = v77 + 1;
              char v223 = *(unsigned char *)(v79 + v77);
              *((void *)this + 1) = v222;
              v82 |= (unint64_t)(v223 & 0x7F) << v220;
              if (v223 < 0)
              {
                v220 += 7;
                unint64_t v77 = v222;
                BOOL v14 = v221++ > 8;
                if (v14) {
                  goto LABEL_264;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v82) = 0;
              }
            }
            break;
          }
LABEL_380:
          *(_DWORD *)(a1 + 172) = v82;
          goto LABEL_356;
        case 0x11u:
          *(void *)(a1 + 184) |= 0x100000uLL;
          unint64_t v85 = *((void *)this + 1);
          unint64_t v86 = *((void *)this + 2);
          uint64_t v87 = *(void *)this;
          if (v85 <= 0xFFFFFFFFFFFFFFF5 && v85 + 10 <= v86)
          {
            char v88 = 0;
            unsigned int v89 = 0;
            uint64_t v90 = 0;
            do
            {
              unint64_t v91 = v85 + 1;
              *((void *)this + 1) = v85 + 1;
              char v92 = *(unsigned char *)(v87 + v85);
              v90 |= (unint64_t)(v92 & 0x7F) << v88;
              if ((v92 & 0x80) == 0) {
                goto LABEL_384;
              }
              v88 += 7;
              unint64_t v85 = v91;
              BOOL v14 = v89++ > 8;
            }
            while (!v14);
LABEL_271:
            LODWORD(v90) = 0;
            goto LABEL_384;
          }
          char v224 = 0;
          unsigned int v225 = 0;
          uint64_t v90 = 0;
          if (v86 <= v85) {
            unint64_t v86 = *((void *)this + 1);
          }
          while (2)
          {
            if (v86 == v85)
            {
              LODWORD(v90) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v226 = v85 + 1;
              char v227 = *(unsigned char *)(v87 + v85);
              *((void *)this + 1) = v226;
              v90 |= (unint64_t)(v227 & 0x7F) << v224;
              if (v227 < 0)
              {
                v224 += 7;
                unint64_t v85 = v226;
                BOOL v14 = v225++ > 8;
                if (v14) {
                  goto LABEL_271;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v90) = 0;
              }
            }
            break;
          }
LABEL_384:
          *(_DWORD *)(a1 + 100) = v90;
          goto LABEL_356;
        case 0x12u:
          *(void *)(a1 + 184) |= 0x20000uLL;
          unint64_t v93 = *((void *)this + 1);
          unint64_t v94 = *((void *)this + 2);
          uint64_t v95 = *(void *)this;
          if (v93 <= 0xFFFFFFFFFFFFFFF5 && v93 + 10 <= v94)
          {
            char v96 = 0;
            unsigned int v97 = 0;
            uint64_t v98 = 0;
            do
            {
              unint64_t v99 = v93 + 1;
              *((void *)this + 1) = v93 + 1;
              char v100 = *(unsigned char *)(v95 + v93);
              v98 |= (unint64_t)(v100 & 0x7F) << v96;
              if ((v100 & 0x80) == 0) {
                goto LABEL_388;
              }
              v96 += 7;
              unint64_t v93 = v99;
              BOOL v14 = v97++ > 8;
            }
            while (!v14);
LABEL_278:
            LODWORD(v98) = 0;
            goto LABEL_388;
          }
          char v228 = 0;
          unsigned int v229 = 0;
          uint64_t v98 = 0;
          if (v94 <= v93) {
            unint64_t v94 = *((void *)this + 1);
          }
          while (2)
          {
            if (v94 == v93)
            {
              LODWORD(v98) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v230 = v93 + 1;
              char v231 = *(unsigned char *)(v95 + v93);
              *((void *)this + 1) = v230;
              v98 |= (unint64_t)(v231 & 0x7F) << v228;
              if (v231 < 0)
              {
                v228 += 7;
                unint64_t v93 = v230;
                BOOL v14 = v229++ > 8;
                if (v14) {
                  goto LABEL_278;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v98) = 0;
              }
            }
            break;
          }
LABEL_388:
          *(_DWORD *)(a1 + 88) = v98;
          goto LABEL_356;
        case 0x13u:
          *(void *)(a1 + 184) |= 0x10000uLL;
          unint64_t v101 = *((void *)this + 1);
          unint64_t v102 = *((void *)this + 2);
          uint64_t v103 = *(void *)this;
          if (v101 <= 0xFFFFFFFFFFFFFFF5 && v101 + 10 <= v102)
          {
            char v104 = 0;
            unsigned int v105 = 0;
            uint64_t v106 = 0;
            do
            {
              unint64_t v107 = v101 + 1;
              *((void *)this + 1) = v101 + 1;
              char v108 = *(unsigned char *)(v103 + v101);
              v106 |= (unint64_t)(v108 & 0x7F) << v104;
              if ((v108 & 0x80) == 0) {
                goto LABEL_392;
              }
              v104 += 7;
              unint64_t v101 = v107;
              BOOL v14 = v105++ > 8;
            }
            while (!v14);
LABEL_285:
            LODWORD(v106) = 0;
            goto LABEL_392;
          }
          char v232 = 0;
          unsigned int v233 = 0;
          uint64_t v106 = 0;
          if (v102 <= v101) {
            unint64_t v102 = *((void *)this + 1);
          }
          while (2)
          {
            if (v102 == v101)
            {
              LODWORD(v106) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v234 = v101 + 1;
              char v235 = *(unsigned char *)(v103 + v101);
              *((void *)this + 1) = v234;
              v106 |= (unint64_t)(v235 & 0x7F) << v232;
              if (v235 < 0)
              {
                v232 += 7;
                unint64_t v101 = v234;
                BOOL v14 = v233++ > 8;
                if (v14) {
                  goto LABEL_285;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v106) = 0;
              }
            }
            break;
          }
LABEL_392:
          *(_DWORD *)(a1 + 84) = v106;
          goto LABEL_356;
        case 0x14u:
          *(void *)(a1 + 184) |= 0x40000uLL;
          unint64_t v109 = *((void *)this + 1);
          unint64_t v110 = *((void *)this + 2);
          uint64_t v111 = *(void *)this;
          if (v109 <= 0xFFFFFFFFFFFFFFF5 && v109 + 10 <= v110)
          {
            char v112 = 0;
            unsigned int v113 = 0;
            uint64_t v114 = 0;
            do
            {
              unint64_t v115 = v109 + 1;
              *((void *)this + 1) = v109 + 1;
              char v116 = *(unsigned char *)(v111 + v109);
              v114 |= (unint64_t)(v116 & 0x7F) << v112;
              if ((v116 & 0x80) == 0) {
                goto LABEL_396;
              }
              v112 += 7;
              unint64_t v109 = v115;
              BOOL v14 = v113++ > 8;
            }
            while (!v14);
LABEL_292:
            LODWORD(v114) = 0;
            goto LABEL_396;
          }
          char v236 = 0;
          unsigned int v237 = 0;
          uint64_t v114 = 0;
          if (v110 <= v109) {
            unint64_t v110 = *((void *)this + 1);
          }
          while (2)
          {
            if (v110 == v109)
            {
              LODWORD(v114) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v238 = v109 + 1;
              char v239 = *(unsigned char *)(v111 + v109);
              *((void *)this + 1) = v238;
              v114 |= (unint64_t)(v239 & 0x7F) << v236;
              if (v239 < 0)
              {
                v236 += 7;
                unint64_t v109 = v238;
                BOOL v14 = v237++ > 8;
                if (v14) {
                  goto LABEL_292;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v114) = 0;
              }
            }
            break;
          }
LABEL_396:
          *(_DWORD *)(a1 + 92) = v114;
          goto LABEL_356;
        case 0x15u:
          *(void *)(a1 + 184) |= 0x80000uLL;
          unint64_t v117 = *((void *)this + 1);
          unint64_t v118 = *((void *)this + 2);
          uint64_t v119 = *(void *)this;
          if (v117 <= 0xFFFFFFFFFFFFFFF5 && v117 + 10 <= v118)
          {
            char v120 = 0;
            unsigned int v121 = 0;
            uint64_t v122 = 0;
            do
            {
              unint64_t v123 = v117 + 1;
              *((void *)this + 1) = v117 + 1;
              char v124 = *(unsigned char *)(v119 + v117);
              v122 |= (unint64_t)(v124 & 0x7F) << v120;
              if ((v124 & 0x80) == 0) {
                goto LABEL_400;
              }
              v120 += 7;
              unint64_t v117 = v123;
              BOOL v14 = v121++ > 8;
            }
            while (!v14);
LABEL_299:
            LODWORD(v122) = 0;
            goto LABEL_400;
          }
          char v240 = 0;
          unsigned int v241 = 0;
          uint64_t v122 = 0;
          if (v118 <= v117) {
            unint64_t v118 = *((void *)this + 1);
          }
          while (2)
          {
            if (v118 == v117)
            {
              LODWORD(v122) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v242 = v117 + 1;
              char v243 = *(unsigned char *)(v119 + v117);
              *((void *)this + 1) = v242;
              v122 |= (unint64_t)(v243 & 0x7F) << v240;
              if (v243 < 0)
              {
                v240 += 7;
                unint64_t v117 = v242;
                BOOL v14 = v241++ > 8;
                if (v14) {
                  goto LABEL_299;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v122) = 0;
              }
            }
            break;
          }
LABEL_400:
          *(_DWORD *)(a1 + 96) = v122;
          goto LABEL_356;
        case 0x16u:
          *(void *)(a1 + 184) |= 0x8000uLL;
          unint64_t v125 = *((void *)this + 1);
          unint64_t v126 = *((void *)this + 2);
          uint64_t v127 = *(void *)this;
          if (v125 <= 0xFFFFFFFFFFFFFFF5 && v125 + 10 <= v126)
          {
            char v128 = 0;
            unsigned int v129 = 0;
            uint64_t v130 = 0;
            do
            {
              unint64_t v131 = v125 + 1;
              *((void *)this + 1) = v125 + 1;
              char v132 = *(unsigned char *)(v127 + v125);
              v130 |= (unint64_t)(v132 & 0x7F) << v128;
              if ((v132 & 0x80) == 0) {
                goto LABEL_404;
              }
              v128 += 7;
              unint64_t v125 = v131;
              BOOL v14 = v129++ > 8;
            }
            while (!v14);
LABEL_306:
            LODWORD(v130) = 0;
            goto LABEL_404;
          }
          char v244 = 0;
          unsigned int v245 = 0;
          uint64_t v130 = 0;
          if (v126 <= v125) {
            unint64_t v126 = *((void *)this + 1);
          }
          while (2)
          {
            if (v126 == v125)
            {
              LODWORD(v130) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v246 = v125 + 1;
              char v247 = *(unsigned char *)(v127 + v125);
              *((void *)this + 1) = v246;
              v130 |= (unint64_t)(v247 & 0x7F) << v244;
              if (v247 < 0)
              {
                v244 += 7;
                unint64_t v125 = v246;
                BOOL v14 = v245++ > 8;
                if (v14) {
                  goto LABEL_306;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v130) = 0;
              }
            }
            break;
          }
LABEL_404:
          *(_DWORD *)(a1 + 80) = v130;
          goto LABEL_356;
        case 0x17u:
          *(void *)(a1 + 184) |= 0x400uLL;
          unint64_t v133 = *((void *)this + 1);
          unint64_t v134 = *((void *)this + 2);
          uint64_t v135 = *(void *)this;
          if (v133 <= 0xFFFFFFFFFFFFFFF5 && v133 + 10 <= v134)
          {
            char v136 = 0;
            unsigned int v137 = 0;
            uint64_t v138 = 0;
            do
            {
              unint64_t v139 = v133 + 1;
              *((void *)this + 1) = v133 + 1;
              char v140 = *(unsigned char *)(v135 + v133);
              v138 |= (unint64_t)(v140 & 0x7F) << v136;
              if ((v140 & 0x80) == 0) {
                goto LABEL_408;
              }
              v136 += 7;
              unint64_t v133 = v139;
              BOOL v14 = v137++ > 8;
            }
            while (!v14);
LABEL_313:
            LODWORD(v138) = 0;
            goto LABEL_408;
          }
          char v248 = 0;
          unsigned int v249 = 0;
          uint64_t v138 = 0;
          if (v134 <= v133) {
            unint64_t v134 = *((void *)this + 1);
          }
          while (2)
          {
            if (v134 == v133)
            {
              LODWORD(v138) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v250 = v133 + 1;
              char v251 = *(unsigned char *)(v135 + v133);
              *((void *)this + 1) = v250;
              v138 |= (unint64_t)(v251 & 0x7F) << v248;
              if (v251 < 0)
              {
                v248 += 7;
                unint64_t v133 = v250;
                BOOL v14 = v249++ > 8;
                if (v14) {
                  goto LABEL_313;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v138) = 0;
              }
            }
            break;
          }
LABEL_408:
          *(_DWORD *)(a1 + 60) = v138;
          goto LABEL_356;
        case 0x18u:
          *(void *)(a1 + 184) |= 0x2000000000uLL;
          unint64_t v141 = *((void *)this + 1);
          unint64_t v142 = *((void *)this + 2);
          uint64_t v143 = *(void *)this;
          if (v141 <= 0xFFFFFFFFFFFFFFF5 && v141 + 10 <= v142)
          {
            char v144 = 0;
            unsigned int v145 = 0;
            uint64_t v146 = 0;
            do
            {
              unint64_t v147 = v141 + 1;
              *((void *)this + 1) = v141 + 1;
              char v148 = *(unsigned char *)(v143 + v141);
              v146 |= (unint64_t)(v148 & 0x7F) << v144;
              if ((v148 & 0x80) == 0) {
                goto LABEL_412;
              }
              v144 += 7;
              unint64_t v141 = v147;
              BOOL v14 = v145++ > 8;
            }
            while (!v14);
LABEL_320:
            LODWORD(v146) = 0;
            goto LABEL_412;
          }
          char v252 = 0;
          unsigned int v253 = 0;
          uint64_t v146 = 0;
          if (v142 <= v141) {
            unint64_t v142 = *((void *)this + 1);
          }
          while (2)
          {
            if (v142 == v141)
            {
              LODWORD(v146) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v254 = v141 + 1;
              char v255 = *(unsigned char *)(v143 + v141);
              *((void *)this + 1) = v254;
              v146 |= (unint64_t)(v255 & 0x7F) << v252;
              if (v255 < 0)
              {
                v252 += 7;
                unint64_t v141 = v254;
                BOOL v14 = v253++ > 8;
                if (v14) {
                  goto LABEL_320;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v146) = 0;
              }
            }
            break;
          }
LABEL_412:
          *(_DWORD *)(a1 + 168) = v146;
          goto LABEL_356;
        case 0x19u:
          *(void *)(a1 + 184) |= 0x1000uLL;
          unint64_t v149 = *((void *)this + 1);
          unint64_t v150 = *((void *)this + 2);
          uint64_t v151 = *(void *)this;
          if (v149 <= 0xFFFFFFFFFFFFFFF5 && v149 + 10 <= v150)
          {
            char v152 = 0;
            unsigned int v153 = 0;
            uint64_t v154 = 0;
            do
            {
              unint64_t v155 = v149 + 1;
              *((void *)this + 1) = v149 + 1;
              char v156 = *(unsigned char *)(v151 + v149);
              v154 |= (unint64_t)(v156 & 0x7F) << v152;
              if ((v156 & 0x80) == 0) {
                goto LABEL_416;
              }
              v152 += 7;
              unint64_t v149 = v155;
              BOOL v14 = v153++ > 8;
            }
            while (!v14);
LABEL_327:
            LODWORD(v154) = 0;
            goto LABEL_416;
          }
          char v256 = 0;
          unsigned int v257 = 0;
          uint64_t v154 = 0;
          if (v150 <= v149) {
            unint64_t v150 = *((void *)this + 1);
          }
          while (2)
          {
            if (v150 == v149)
            {
              LODWORD(v154) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v258 = v149 + 1;
              char v259 = *(unsigned char *)(v151 + v149);
              *((void *)this + 1) = v258;
              v154 |= (unint64_t)(v259 & 0x7F) << v256;
              if (v259 < 0)
              {
                v256 += 7;
                unint64_t v149 = v258;
                BOOL v14 = v257++ > 8;
                if (v14) {
                  goto LABEL_327;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v154) = 0;
              }
            }
            break;
          }
LABEL_416:
          *(_DWORD *)(a1 + 68) = v154;
          goto LABEL_356;
        case 0x1Au:
          *(void *)(a1 + 184) |= 0x20000000uLL;
          unint64_t v157 = *((void *)this + 1);
          unint64_t v158 = *((void *)this + 2);
          uint64_t v159 = *(void *)this;
          if (v157 <= 0xFFFFFFFFFFFFFFF5 && v157 + 10 <= v158)
          {
            char v160 = 0;
            unsigned int v161 = 0;
            uint64_t v162 = 0;
            do
            {
              unint64_t v163 = v157 + 1;
              *((void *)this + 1) = v157 + 1;
              char v164 = *(unsigned char *)(v159 + v157);
              v162 |= (unint64_t)(v164 & 0x7F) << v160;
              if ((v164 & 0x80) == 0) {
                goto LABEL_420;
              }
              v160 += 7;
              unint64_t v157 = v163;
              BOOL v14 = v161++ > 8;
            }
            while (!v14);
LABEL_334:
            LODWORD(v162) = 0;
            goto LABEL_420;
          }
          char v260 = 0;
          unsigned int v261 = 0;
          uint64_t v162 = 0;
          if (v158 <= v157) {
            unint64_t v158 = *((void *)this + 1);
          }
          while (2)
          {
            if (v158 == v157)
            {
              LODWORD(v162) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v262 = v157 + 1;
              char v263 = *(unsigned char *)(v159 + v157);
              *((void *)this + 1) = v262;
              v162 |= (unint64_t)(v263 & 0x7F) << v260;
              if (v263 < 0)
              {
                v260 += 7;
                unint64_t v157 = v262;
                BOOL v14 = v261++ > 8;
                if (v14) {
                  goto LABEL_334;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v162) = 0;
              }
            }
            break;
          }
LABEL_420:
          *(_DWORD *)(a1 + 136) = v162;
          goto LABEL_356;
        case 0x1Bu:
          *(void *)(a1 + 184) |= 0x10uLL;
          unint64_t v165 = *((void *)this + 1);
          unint64_t v166 = *((void *)this + 2);
          uint64_t v167 = *(void *)this;
          if (v165 <= 0xFFFFFFFFFFFFFFF5 && v165 + 10 <= v166)
          {
            char v168 = 0;
            unsigned int v169 = 0;
            uint64_t v170 = 0;
            do
            {
              unint64_t v171 = v165 + 1;
              *((void *)this + 1) = v165 + 1;
              char v172 = *(unsigned char *)(v167 + v165);
              v170 |= (unint64_t)(v172 & 0x7F) << v168;
              if ((v172 & 0x80) == 0) {
                goto LABEL_424;
              }
              v168 += 7;
              unint64_t v165 = v171;
              BOOL v14 = v169++ > 8;
            }
            while (!v14);
LABEL_341:
            LODWORD(v170) = 0;
            goto LABEL_424;
          }
          char v264 = 0;
          unsigned int v265 = 0;
          uint64_t v170 = 0;
          if (v166 <= v165) {
            unint64_t v166 = *((void *)this + 1);
          }
          while (2)
          {
            if (v166 == v165)
            {
              LODWORD(v170) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v266 = v165 + 1;
              char v267 = *(unsigned char *)(v167 + v165);
              *((void *)this + 1) = v266;
              v170 |= (unint64_t)(v267 & 0x7F) << v264;
              if (v267 < 0)
              {
                v264 += 7;
                unint64_t v165 = v266;
                BOOL v14 = v265++ > 8;
                if (v14) {
                  goto LABEL_341;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v170) = 0;
              }
            }
            break;
          }
LABEL_424:
          *(_DWORD *)(a1 + 36) = v170;
          goto LABEL_356;
        case 0x1Cu:
          *(void *)(a1 + 184) |= 0x400000000uLL;
          unint64_t v173 = *((void *)this + 1);
          if (v173 > 0xFFFFFFFFFFFFFFFBLL || v173 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 156) = *(_DWORD *)(*(void *)this + v173);
          goto LABEL_354;
        case 0x1Du:
          *(void *)(a1 + 184) |= 0x20000000000uLL;
          unint64_t v174 = *((void *)this + 1);
          if (v174 >= *((void *)this + 2))
          {
            BOOL v177 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v175 = v174 + 1;
            int v176 = *(unsigned __int8 *)(*(void *)this + v174);
            *((void *)this + 1) = v175;
            BOOL v177 = v176 != 0;
          }
          *(unsigned char *)(a1 + 178) = v177;
          goto LABEL_356;
        case 0x1Eu:
          *(void *)(a1 + 184) |= 0x800000000uLL;
          unint64_t v178 = *((void *)this + 1);
          if (v178 > 0xFFFFFFFFFFFFFFFBLL || v178 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 160) = *(_DWORD *)(*(void *)this + v178);
          goto LABEL_354;
        case 0x1Fu:
          *(void *)(a1 + 184) |= 0x40000000000uLL;
          unint64_t v179 = *((void *)this + 1);
          if (v179 >= *((void *)this + 2))
          {
            BOOL v182 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v180 = v179 + 1;
            int v181 = *(unsigned __int8 *)(*(void *)this + v179);
            *((void *)this + 1) = v180;
            BOOL v182 = v181 != 0;
          }
          *(unsigned char *)(a1 + 179) = v182;
          goto LABEL_356;
        case 0x20u:
          *(void *)(a1 + 184) |= 0x20uLL;
          unint64_t v183 = *((void *)this + 1);
          unint64_t v184 = *((void *)this + 2);
          uint64_t v185 = *(void *)this;
          if (v183 <= 0xFFFFFFFFFFFFFFF5 && v183 + 10 <= v184)
          {
            char v186 = 0;
            unsigned int v187 = 0;
            uint64_t v188 = 0;
            do
            {
              unint64_t v189 = v183 + 1;
              *((void *)this + 1) = v183 + 1;
              char v190 = *(unsigned char *)(v185 + v183);
              v188 |= (unint64_t)(v190 & 0x7F) << v186;
              if ((v190 & 0x80) == 0) {
                goto LABEL_428;
              }
              v186 += 7;
              unint64_t v183 = v189;
              BOOL v14 = v187++ > 8;
            }
            while (!v14);
LABEL_352:
            LODWORD(v188) = 0;
            goto LABEL_428;
          }
          char v268 = 0;
          unsigned int v269 = 0;
          uint64_t v188 = 0;
          if (v184 <= v183) {
            unint64_t v184 = *((void *)this + 1);
          }
          break;
        case 0x21u:
          *(void *)(a1 + 184) |= 0x80uLL;
          unint64_t v191 = *((void *)this + 1);
          if (v191 > 0xFFFFFFFFFFFFFFFBLL || v191 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v191);
          goto LABEL_354;
        case 0x22u:
          *(void *)(a1 + 184) |= 0x4000000uLL;
          unint64_t v192 = *((void *)this + 1);
          if (v192 > 0xFFFFFFFFFFFFFFFBLL || v192 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 124) = *(_DWORD *)(*(void *)this + v192);
          goto LABEL_354;
        case 0x23u:
          *(void *)(a1 + 184) |= 0x8000000uLL;
          unint64_t v193 = *((void *)this + 1);
          if (v193 > 0xFFFFFFFFFFFFFFFBLL || v193 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v193);
          goto LABEL_354;
        case 0x24u:
          *(void *)(a1 + 184) |= 0x10000000uLL;
          unint64_t v194 = *((void *)this + 1);
          if (v194 > 0xFFFFFFFFFFFFFFFBLL || v194 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 132) = *(_DWORD *)(*(void *)this + v194);
          goto LABEL_354;
        case 0x25u:
          *(void *)(a1 + 184) |= 0x40uLL;
          unint64_t v195 = *((void *)this + 1);
          if (v195 > 0xFFFFFFFFFFFFFFFBLL || v195 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v195);
          goto LABEL_354;
        case 0x26u:
          *(void *)(a1 + 184) |= 0x100uLL;
          unint64_t v196 = *((void *)this + 1);
          if (v196 > 0xFFFFFFFFFFFFFFFBLL || v196 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v196);
          goto LABEL_354;
        case 0x27u:
          *(void *)(a1 + 184) |= 0x200uLL;
          unint64_t v197 = *((void *)this + 1);
          if (v197 > 0xFFFFFFFFFFFFFFFBLL || v197 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v197);
          goto LABEL_354;
        case 0x28u:
          *(void *)(a1 + 184) |= 0x400000uLL;
          unint64_t v198 = *((void *)this + 1);
          if (v198 > 0xFFFFFFFFFFFFFFFBLL || v198 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 108) = *(_DWORD *)(*(void *)this + v198);
          goto LABEL_354;
        case 0x29u:
          *(void *)(a1 + 184) |= 0x800000uLL;
          unint64_t v199 = *((void *)this + 1);
          if (v199 > 0xFFFFFFFFFFFFFFFBLL || v199 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 112) = *(_DWORD *)(*(void *)this + v199);
          goto LABEL_354;
        case 0x2Au:
          *(void *)(a1 + 184) |= 0x1000000uLL;
          unint64_t v200 = *((void *)this + 1);
          if (v200 > 0xFFFFFFFFFFFFFFFBLL || v200 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 116) = *(_DWORD *)(*(void *)this + v200);
          goto LABEL_354;
        case 0x2Bu:
          *(void *)(a1 + 184) |= 0x40000000uLL;
          unint64_t v201 = *((void *)this + 1);
          if (v201 > 0xFFFFFFFFFFFFFFFBLL || v201 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 140) = *(_DWORD *)(*(void *)this + v201);
          goto LABEL_354;
        case 0x2Cu:
          *(void *)(a1 + 184) |= 0x80000000uLL;
          unint64_t v202 = *((void *)this + 1);
          if (v202 > 0xFFFFFFFFFFFFFFFBLL || v202 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 144) = *(_DWORD *)(*(void *)this + v202);
          goto LABEL_354;
        case 0x2Du:
          *(void *)(a1 + 184) |= 0x100000000uLL;
          unint64_t v203 = *((void *)this + 1);
          if (v203 <= 0xFFFFFFFFFFFFFFFBLL && v203 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 148) = *(_DWORD *)(*(void *)this + v203);
LABEL_354:
            uint64_t v55 = *((void *)this + 1) + 4;
LABEL_355:
            *((void *)this + 1) = v55;
          }
          else
          {
LABEL_221:
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_356;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          goto LABEL_356;
      }
      while (1)
      {
        if (v184 == v183)
        {
          LODWORD(v188) = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_428;
        }
        unint64_t v270 = v183 + 1;
        char v271 = *(unsigned char *)(v185 + v183);
        *((void *)this + 1) = v270;
        v188 |= (unint64_t)(v271 & 0x7F) << v268;
        if ((v271 & 0x80) == 0) {
          break;
        }
        v268 += 7;
        unint64_t v183 = v270;
        BOOL v14 = v269++ > 8;
        if (v14) {
          goto LABEL_352;
        }
      }
      if (*((unsigned char *)this + 24)) {
        LODWORD(v188) = 0;
      }
LABEL_428:
      *(_DWORD *)(a1 + 40) = v188;
LABEL_356:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C4885C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(result + 184);
  if ((v4 & 4) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 24));
    uint64_t v4 = *(void *)(v3 + 184);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      if ((v4 & 0x200000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_49;
    }
  }
  else if ((v4 & 1) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x200000) == 0)
  {
LABEL_4:
    if ((v4 & 0x1000000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x1000000000) == 0)
  {
LABEL_5:
    if ((v4 & 0x100000000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 164));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x100000000000) == 0)
  {
LABEL_6:
    if ((v4 & 0x800) == 0) {
      goto LABEL_7;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x800) == 0)
  {
LABEL_7:
    if ((v4 & 0x10000000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x10000000000) == 0)
  {
LABEL_8:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_9:
    if ((v4 & 0x80000000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 120));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x80000000000) == 0)
  {
LABEL_10:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x4000) == 0)
  {
LABEL_11:
    if ((v4 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 2) == 0)
  {
LABEL_12:
    if ((v4 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 8) == 0)
  {
LABEL_13:
    if ((v4 & 0x8000000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x8000000000) == 0)
  {
LABEL_14:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_60;
  }
LABEL_59:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x2000) == 0)
  {
LABEL_15:
    if ((v4 & 0x200000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x200000000) == 0)
  {
LABEL_16:
    if ((v4 & 0x4000000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x4000000000) == 0)
  {
LABEL_17:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x100000) == 0)
  {
LABEL_18:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_64;
  }
LABEL_63:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x20000) == 0)
  {
LABEL_19:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_65;
  }
LABEL_64:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x10000) == 0)
  {
LABEL_20:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_66;
  }
LABEL_65:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x40000) == 0)
  {
LABEL_21:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_67;
  }
LABEL_66:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x80000) == 0)
  {
LABEL_22:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_68;
  }
LABEL_67:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x8000) == 0)
  {
LABEL_23:
    if ((v4 & 0x400) == 0) {
      goto LABEL_24;
    }
    goto LABEL_69;
  }
LABEL_68:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x400) == 0)
  {
LABEL_24:
    if ((v4 & 0x2000000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_70;
  }
LABEL_69:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x2000000000) == 0)
  {
LABEL_25:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_71;
  }
LABEL_70:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x1000) == 0)
  {
LABEL_26:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_72;
  }
LABEL_71:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_27:
    if ((v4 & 0x10) == 0) {
      goto LABEL_28;
    }
    goto LABEL_73;
  }
LABEL_72:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x10) == 0)
  {
LABEL_28:
    if ((v4 & 0x400000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_74;
  }
LABEL_73:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x400000000) == 0)
  {
LABEL_29:
    if ((v4 & 0x20000000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_75;
  }
LABEL_74:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 156));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x20000000000) == 0)
  {
LABEL_30:
    if ((v4 & 0x800000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_76;
  }
LABEL_75:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x800000000) == 0)
  {
LABEL_31:
    if ((v4 & 0x40000000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_77;
  }
LABEL_76:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 160));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x40000000000) == 0)
  {
LABEL_32:
    if ((v4 & 0x20) == 0) {
      goto LABEL_33;
    }
    goto LABEL_78;
  }
LABEL_77:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x20) == 0)
  {
LABEL_33:
    if ((v4 & 0x80) == 0) {
      goto LABEL_34;
    }
    goto LABEL_79;
  }
LABEL_78:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x80) == 0)
  {
LABEL_34:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_80;
  }
LABEL_79:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_35:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_81;
  }
LABEL_80:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 124));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_36:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_82;
  }
LABEL_81:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 128));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_37:
    if ((v4 & 0x40) == 0) {
      goto LABEL_38;
    }
    goto LABEL_83;
  }
LABEL_82:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 132));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x40) == 0)
  {
LABEL_38:
    if ((v4 & 0x100) == 0) {
      goto LABEL_39;
    }
    goto LABEL_84;
  }
LABEL_83:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x100) == 0)
  {
LABEL_39:
    if ((v4 & 0x200) == 0) {
      goto LABEL_40;
    }
    goto LABEL_85;
  }
LABEL_84:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x200) == 0)
  {
LABEL_40:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_86;
  }
LABEL_85:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x400000) == 0)
  {
LABEL_41:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_87;
  }
LABEL_86:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 108));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x800000) == 0)
  {
LABEL_42:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_88;
  }
LABEL_87:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 112));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_43:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_89;
  }
LABEL_88:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 116));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x40000000) == 0)
  {
LABEL_44:
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_45;
    }
LABEL_90:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 144));
    if ((*(void *)(v3 + 184) & 0x100000000) == 0) {
      return result;
    }
    goto LABEL_91;
  }
LABEL_89:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 140));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x80000000) != 0) {
    goto LABEL_90;
  }
LABEL_45:
  if ((v4 & 0x100000000) == 0) {
    return result;
  }
LABEL_91:
  float v5 = *(float *)(v3 + 148);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227C48D80(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC27258;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void sub_227C48DA8(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227C48DE0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC27258;
  *(_DWORD *)(a1 + 40) = 0;
  char v2 = *(unsigned char *)(a2 + 40);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 40) = 1;
    *(void *)(a1 + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 40);
    if ((v2 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 40) & 0x40) != 0)
  {
LABEL_5:
    LODWORD(v4) = *(_DWORD *)(a2 + 36);
    v3 |= 0x40u;
    *(unsigned char *)(a1 + 40) = v3;
    *(_DWORD *)(a1 + 36) = v4;
    char v2 = *(unsigned char *)(a2 + 40);
  }
LABEL_6:
  if ((v2 & 0x20) != 0)
  {
    LODWORD(v4) = *(_DWORD *)(a2 + 32);
    v3 |= 0x20u;
    *(unsigned char *)(a1 + 40) = v3;
    *(_DWORD *)(a1 + 32) = v4;
    char v2 = *(unsigned char *)(a2 + 40);
    if ((v2 & 8) == 0)
    {
LABEL_8:
      if ((v2 & 4) == 0) {
        goto LABEL_9;
      }
      goto LABEL_14;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_8;
  }
  LODWORD(v4) = *(_DWORD *)(a2 + 24);
  v3 |= 8u;
  *(unsigned char *)(a1 + 40) = v3;
  *(_DWORD *)(a1 + 24) = v4;
  char v2 = *(unsigned char *)(a2 + 40);
  if ((v2 & 4) == 0)
  {
LABEL_9:
    if ((v2 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_15;
  }
LABEL_14:
  LODWORD(v4) = *(_DWORD *)(a2 + 20);
  v3 |= 4u;
  *(unsigned char *)(a1 + 40) = v3;
  *(_DWORD *)(a1 + 20) = v4;
  char v2 = *(unsigned char *)(a2 + 40);
  if ((v2 & 0x10) == 0)
  {
LABEL_10:
    if ((v2 & 2) == 0) {
      return *(float *)&v4;
    }
    goto LABEL_16;
  }
LABEL_15:
  LODWORD(v4) = *(_DWORD *)(a2 + 28);
  v3 |= 0x10u;
  *(unsigned char *)(a1 + 40) = v3;
  *(_DWORD *)(a1 + 28) = v4;
  if ((*(unsigned char *)(a2 + 40) & 2) == 0) {
    return *(float *)&v4;
  }
LABEL_16:
  LODWORD(v4) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 40) = v3 | 2;
  *(_DWORD *)(a1 + 16) = v4;
  return *(float *)&v4;
}

uint64_t sub_227C48ED0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "asymmetryProbability", *(float *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 40);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(a1 + 40) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "cycleTime", *(float *)(a1 + 20));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(this, "distance", *(float *)(a1 + 24));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  PB::TextFormatter::format(this, "doubleSupportPercentage", *(float *)(a1 + 28));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 1) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "startTime", *(double *)(a1 + 8));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_17:
  PB::TextFormatter::format(this, "stepLength", *(float *)(a1 + 32));
  if ((*(unsigned char *)(a1 + 40) & 0x40) != 0) {
LABEL_8:
  }
    PB::TextFormatter::format(this, "walkingSpeed", *(float *)(a1 + 36));
LABEL_9:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C48FF4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 40) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          goto LABEL_47;
        case 2u:
          *(unsigned char *)(a1 + 40) |= 0x40u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_46;
        case 3u:
          *(unsigned char *)(a1 + 40) |= 0x20u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_46;
        case 4u:
          *(unsigned char *)(a1 + 40) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_46;
        case 5u:
          *(unsigned char *)(a1 + 40) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_46;
        case 6u:
          *(unsigned char *)(a1 + 40) |= 0x10u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_46;
        case 7u:
          *(unsigned char *)(a1 + 40) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
LABEL_46:
            unint64_t v2 = *((void *)this + 1) + 4;
LABEL_47:
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_44:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C49328(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 40);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 40);
    if ((v4 & 0x40) == 0)
    {
LABEL_3:
      if ((v4 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(result + 40) & 0x40) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36));
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 0x20) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 4) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_14:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
    if ((*(unsigned char *)(v3 + 40) & 2) == 0) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_13:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 0x10) != 0) {
    goto LABEL_14;
  }
LABEL_7:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_15:
  float v5 = *(float *)(v3 + 16);

  return PB::Writer::write(this, v5);
}

void *sub_227C49424(void *result)
{
  *uint64_t result = &unk_26DC27290;
  result[1] = 0;
  return result;
}

void sub_227C49444(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC27290;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C494C4(PB::Base *a1)
{
  sub_227C49444(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227C494FC(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC27290;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C495A4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C49620(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C4981C(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

uint64_t sub_227C49838(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC272C8;
  *(_DWORD *)(result + 116) = 0;
  return result;
}

void sub_227C49860(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C49898(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC272C8;
  *(_DWORD *)(result + 116) = 0;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x10000) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 92);
    int v3 = 0x10000;
    *(_DWORD *)(result + 116) = 0x10000;
    *(_DWORD *)(result + 92) = v4;
    int v2 = *(_DWORD *)(a2 + 116);
    if ((v2 & 0x200) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 0x200) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 64);
    v3 |= 0x200u;
    *(_DWORD *)(result + 116) = v3;
    *(_DWORD *)(result + 64) = v5;
    int v2 = *(_DWORD *)(a2 + 116);
  }
LABEL_6:
  if ((v2 & 0x20) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 48);
    v3 |= 0x20u;
    *(_DWORD *)(result + 116) = v3;
    *(_DWORD *)(result + 48) = v6;
    int v2 = *(_DWORD *)(a2 + 116);
    if ((v2 & 0x400) == 0)
    {
LABEL_8:
      if ((v2 & 0x100000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_34;
    }
  }
  else if ((v2 & 0x400) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 68);
  v3 |= 0x400u;
  *(_DWORD *)(result + 116) = v3;
  *(_DWORD *)(result + 68) = v7;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x100000) == 0)
  {
LABEL_9:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_35;
  }
LABEL_34:
  char v8 = *(unsigned char *)(a2 + 108);
  v3 |= 0x100000u;
  *(_DWORD *)(result + 116) = v3;
  *(unsigned char *)(result + 108) = v8;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x8000) == 0)
  {
LABEL_10:
    if ((v2 & 4) == 0) {
      goto LABEL_11;
    }
    goto LABEL_36;
  }
LABEL_35:
  int v9 = *(_DWORD *)(a2 + 88);
  v3 |= 0x8000u;
  *(_DWORD *)(result + 116) = v3;
  *(_DWORD *)(result + 88) = v9;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 4) == 0)
  {
LABEL_11:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t v10 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(_DWORD *)(result + 116) = v3;
  *(void *)(result + 24) = v10;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x200000) == 0)
  {
LABEL_12:
    if ((v2 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_38;
  }
LABEL_37:
  char v11 = *(unsigned char *)(a2 + 109);
  v3 |= 0x200000u;
  *(_DWORD *)(result + 116) = v3;
  *(unsigned char *)(result + 109) = v11;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x100) == 0)
  {
LABEL_13:
    if ((v2 & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_39;
  }
LABEL_38:
  int v12 = *(_DWORD *)(a2 + 60);
  v3 |= 0x100u;
  *(_DWORD *)(result + 116) = v3;
  *(_DWORD *)(result + 60) = v12;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 1) == 0)
  {
LABEL_14:
    if ((v2 & 2) == 0) {
      goto LABEL_15;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t v13 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_DWORD *)(result + 116) = v3;
  *(void *)(result + 8) = v13;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 2) == 0)
  {
LABEL_15:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t v14 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_DWORD *)(result + 116) = v3;
  *(void *)(result + 16) = v14;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x1000) == 0)
  {
LABEL_16:
    if ((v2 & 0x800) == 0) {
      goto LABEL_17;
    }
    goto LABEL_42;
  }
LABEL_41:
  int v15 = *(_DWORD *)(a2 + 76);
  v3 |= 0x1000u;
  *(_DWORD *)(result + 116) = v3;
  *(_DWORD *)(result + 76) = v15;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x800) == 0)
  {
LABEL_17:
    if ((v2 & 0x2000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_43;
  }
LABEL_42:
  int v16 = *(_DWORD *)(a2 + 72);
  v3 |= 0x800u;
  *(_DWORD *)(result + 116) = v3;
  *(_DWORD *)(result + 72) = v16;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x2000000) == 0)
  {
LABEL_18:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_44;
  }
LABEL_43:
  char v17 = *(unsigned char *)(a2 + 113);
  v3 |= 0x2000000u;
  *(_DWORD *)(result + 116) = v3;
  *(unsigned char *)(result + 113) = v17;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_19:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_45;
  }
LABEL_44:
  char v18 = *(unsigned char *)(a2 + 112);
  v3 |= 0x1000000u;
  *(_DWORD *)(result + 116) = v3;
  *(unsigned char *)(result + 112) = v18;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x400000) == 0)
  {
LABEL_20:
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_46;
  }
LABEL_45:
  char v19 = *(unsigned char *)(a2 + 110);
  v3 |= 0x400000u;
  *(_DWORD *)(result + 116) = v3;
  *(unsigned char *)(result + 110) = v19;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_21:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_47;
  }
LABEL_46:
  char v20 = *(unsigned char *)(a2 + 114);
  v3 |= 0x4000000u;
  *(_DWORD *)(result + 116) = v3;
  *(unsigned char *)(result + 114) = v20;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x800000) == 0)
  {
LABEL_22:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_48;
  }
LABEL_47:
  char v21 = *(unsigned char *)(a2 + 111);
  v3 |= 0x800000u;
  *(_DWORD *)(result + 116) = v3;
  *(unsigned char *)(result + 111) = v21;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x40000) == 0)
  {
LABEL_23:
    if ((v2 & 0x80) == 0) {
      goto LABEL_24;
    }
    goto LABEL_49;
  }
LABEL_48:
  int v22 = *(_DWORD *)(a2 + 100);
  v3 |= 0x40000u;
  *(_DWORD *)(result + 116) = v3;
  *(_DWORD *)(result + 100) = v22;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x80) == 0)
  {
LABEL_24:
    if ((v2 & 0x40) == 0) {
      goto LABEL_25;
    }
    goto LABEL_50;
  }
LABEL_49:
  int v23 = *(_DWORD *)(a2 + 56);
  v3 |= 0x80u;
  *(_DWORD *)(result + 116) = v3;
  *(_DWORD *)(result + 56) = v23;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x40) == 0)
  {
LABEL_25:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_51;
  }
LABEL_50:
  int v24 = *(_DWORD *)(a2 + 52);
  v3 |= 0x40u;
  *(_DWORD *)(result + 116) = v3;
  *(_DWORD *)(result + 52) = v24;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x4000) == 0)
  {
LABEL_26:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_52;
  }
LABEL_51:
  int v25 = *(_DWORD *)(a2 + 84);
  v3 |= 0x4000u;
  *(_DWORD *)(result + 116) = v3;
  *(_DWORD *)(result + 84) = v25;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x80000) == 0)
  {
LABEL_27:
    if ((v2 & 8) == 0) {
      goto LABEL_28;
    }
    goto LABEL_53;
  }
LABEL_52:
  int v26 = *(_DWORD *)(a2 + 104);
  v3 |= 0x80000u;
  *(_DWORD *)(result + 116) = v3;
  *(_DWORD *)(result + 104) = v26;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 8) == 0)
  {
LABEL_28:
    if ((v2 & 0x10) == 0) {
      goto LABEL_29;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t v27 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_DWORD *)(result + 116) = v3;
  *(void *)(result + 32) = v27;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x10) == 0)
  {
LABEL_29:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t v28 = *(void *)(a2 + 40);
  v3 |= 0x10u;
  *(_DWORD *)(result + 116) = v3;
  *(void *)(result + 40) = v28;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x20000) == 0)
  {
LABEL_30:
    if ((v2 & 0x2000) == 0) {
      return result;
    }
LABEL_56:
    int v30 = *(_DWORD *)(a2 + 80);
    *(_DWORD *)(result + 116) = v3 | 0x2000;
    *(_DWORD *)(result + 80) = v30;
    return result;
  }
LABEL_55:
  int v29 = *(_DWORD *)(a2 + 96);
  v3 |= 0x20000u;
  *(_DWORD *)(result + 116) = v3;
  *(_DWORD *)(result + 96) = v29;
  if ((*(_DWORD *)(a2 + 116) & 0x2000) != 0) {
    goto LABEL_56;
  }
  return result;
}

uint64_t sub_227C49BB8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x20) != 0)
  {
    PB::TextFormatter::format(this, "confidence");
    int v5 = *(_DWORD *)(a1 + 116);
    if ((v5 & 0x40) == 0)
    {
LABEL_3:
      if ((v5 & 0x80) == 0) {
        goto LABEL_4;
      }
      goto LABEL_34;
    }
  }
  else if ((v5 & 0x40) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "drivingArmLikelihoodSum", *(float *)(a1 + 52));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x80) == 0)
  {
LABEL_4:
    if ((v5 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "drivingStowedLikelihoodSum", *(float *)(a1 + 56));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 1) == 0)
  {
LABEL_5:
    if ((v5 & 0x100) == 0) {
      goto LABEL_6;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "estExitTime", *(double *)(a1 + 8));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x100) == 0)
  {
LABEL_6:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "exitState");
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x100000) == 0)
  {
LABEL_7:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "isStanding");
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x200000) == 0)
  {
LABEL_8:
    if ((v5 & 0x200) == 0) {
      goto LABEL_9;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "isVehicleConnected");
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x200) == 0)
  {
LABEL_9:
    if ((v5 & 0x400) == 0) {
      goto LABEL_10;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "mountedConfidence");
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x400) == 0)
  {
LABEL_10:
    if ((v5 & 0x800) == 0) {
      goto LABEL_11;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "mountedState");
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x800) == 0)
  {
LABEL_11:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "rawConfidence");
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x1000) == 0)
  {
LABEL_12:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "rawType");
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x2000) == 0)
  {
LABEL_13:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "source");
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x4000) == 0)
  {
LABEL_14:
    if ((v5 & 2) == 0) {
      goto LABEL_15;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "ssLikelihoodSum", *(float *)(a1 + 84));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 2) == 0)
  {
LABEL_15:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_46;
  }
LABEL_45:
  PB::TextFormatter::format(this, "startTime", *(double *)(a1 + 16));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x8000) == 0)
  {
LABEL_16:
    if ((v5 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_47;
  }
LABEL_46:
  PB::TextFormatter::format(this, "tilt", *(float *)(a1 + 88));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 4) == 0)
  {
LABEL_17:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 24));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x10000) == 0)
  {
LABEL_18:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(this, "type");
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x20000) == 0)
  {
LABEL_19:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_50;
  }
LABEL_49:
  PB::TextFormatter::format(this, "typeYouth");
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x400000) == 0)
  {
LABEL_20:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_51;
  }
LABEL_50:
  PB::TextFormatter::format(this, "vehicularBasebandHint");
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x800000) == 0)
  {
LABEL_21:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_52;
  }
LABEL_51:
  PB::TextFormatter::format(this, "vehicularBtHint");
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x40000) == 0)
  {
LABEL_22:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_53;
  }
LABEL_52:
  PB::TextFormatter::format(this, "vehicularConfidence");
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_23:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(this, "vehicularGpsHint");
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_24:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(this, "vehicularMotionHint");
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_25:
    if ((v5 & 8) == 0) {
      goto LABEL_26;
    }
    goto LABEL_56;
  }
LABEL_55:
  PB::TextFormatter::format(this, "vehicularWifiHint");
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 8) == 0)
  {
LABEL_26:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_57;
  }
LABEL_56:
  PB::TextFormatter::format(this, "workoutDetectionTime", *(double *)(a1 + 32));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x80000) == 0)
  {
LABEL_27:
    if ((v5 & 0x10) == 0) {
      goto LABEL_29;
    }
    goto LABEL_28;
  }
LABEL_57:
  PB::TextFormatter::format(this, "workoutDetectionType");
  if ((*(_DWORD *)(a1 + 116) & 0x10) != 0) {
LABEL_28:
  }
    PB::TextFormatter::format(this, "workoutEscalationTime");
LABEL_29:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C49F5C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(_DWORD *)(a1 + 116) |= 0x10000u;
          unint64_t v20 = *((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
          uint64_t v22 = *(void *)this;
          if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v21)
          {
            char v154 = 0;
            unsigned int v155 = 0;
            uint64_t v25 = 0;
            if (v21 <= v20) {
              unint64_t v21 = *((void *)this + 1);
            }
            do
            {
              if (v21 == v20)
              {
                LODWORD(v25) = 0;
                *((unsigned char *)this + 24) = 1;
                goto LABEL_251;
              }
              unint64_t v156 = v20 + 1;
              char v157 = *(unsigned char *)(v22 + v20);
              *((void *)this + 1) = v156;
              v25 |= (unint64_t)(v157 & 0x7F) << v154;
              if ((v157 & 0x80) == 0)
              {
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_251;
              }
              v154 += 7;
              unint64_t v20 = v156;
              BOOL v14 = v155++ > 8;
            }
            while (!v14);
LABEL_153:
            LODWORD(v25) = 0;
          }
          else
          {
            char v23 = 0;
            unsigned int v24 = 0;
            uint64_t v25 = 0;
            while (1)
            {
              unint64_t v26 = v20 + 1;
              *((void *)this + 1) = v20 + 1;
              char v27 = *(unsigned char *)(v22 + v20);
              v25 |= (unint64_t)(v27 & 0x7F) << v23;
              if ((v27 & 0x80) == 0) {
                break;
              }
              v23 += 7;
              unint64_t v20 = v26;
              BOOL v14 = v24++ > 8;
              if (v14) {
                goto LABEL_153;
              }
            }
          }
LABEL_251:
          *(_DWORD *)(a1 + 92) = v25;
          goto LABEL_296;
        case 2u:
          *(_DWORD *)(a1 + 116) |= 0x200u;
          unint64_t v29 = *((void *)this + 1);
          unint64_t v30 = *((void *)this + 2);
          uint64_t v31 = *(void *)this;
          if (v29 <= 0xFFFFFFFFFFFFFFF5 && v29 + 10 <= v30)
          {
            char v32 = 0;
            unsigned int v33 = 0;
            uint64_t v34 = 0;
            do
            {
              unint64_t v35 = v29 + 1;
              *((void *)this + 1) = v29 + 1;
              char v36 = *(unsigned char *)(v31 + v29);
              v34 |= (unint64_t)(v36 & 0x7F) << v32;
              if ((v36 & 0x80) == 0) {
                goto LABEL_255;
              }
              v32 += 7;
              unint64_t v29 = v35;
              BOOL v14 = v33++ > 8;
            }
            while (!v14);
LABEL_160:
            LODWORD(v34) = 0;
            goto LABEL_255;
          }
          char v158 = 0;
          unsigned int v159 = 0;
          uint64_t v34 = 0;
          if (v30 <= v29) {
            unint64_t v30 = *((void *)this + 1);
          }
          while (2)
          {
            if (v30 == v29)
            {
              LODWORD(v34) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v160 = v29 + 1;
              char v161 = *(unsigned char *)(v31 + v29);
              *((void *)this + 1) = v160;
              v34 |= (unint64_t)(v161 & 0x7F) << v158;
              if (v161 < 0)
              {
                v158 += 7;
                unint64_t v29 = v160;
                BOOL v14 = v159++ > 8;
                if (v14) {
                  goto LABEL_160;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v34) = 0;
              }
            }
            break;
          }
LABEL_255:
          *(_DWORD *)(a1 + 64) = v34;
          goto LABEL_296;
        case 3u:
          *(_DWORD *)(a1 + 116) |= 0x20u;
          unint64_t v37 = *((void *)this + 1);
          unint64_t v38 = *((void *)this + 2);
          uint64_t v39 = *(void *)this;
          if (v37 <= 0xFFFFFFFFFFFFFFF5 && v37 + 10 <= v38)
          {
            char v40 = 0;
            unsigned int v41 = 0;
            uint64_t v42 = 0;
            do
            {
              unint64_t v43 = v37 + 1;
              *((void *)this + 1) = v37 + 1;
              char v44 = *(unsigned char *)(v39 + v37);
              v42 |= (unint64_t)(v44 & 0x7F) << v40;
              if ((v44 & 0x80) == 0) {
                goto LABEL_259;
              }
              v40 += 7;
              unint64_t v37 = v43;
              BOOL v14 = v41++ > 8;
            }
            while (!v14);
LABEL_167:
            LODWORD(v42) = 0;
            goto LABEL_259;
          }
          char v162 = 0;
          unsigned int v163 = 0;
          uint64_t v42 = 0;
          if (v38 <= v37) {
            unint64_t v38 = *((void *)this + 1);
          }
          while (2)
          {
            if (v38 == v37)
            {
              LODWORD(v42) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v164 = v37 + 1;
              char v165 = *(unsigned char *)(v39 + v37);
              *((void *)this + 1) = v164;
              v42 |= (unint64_t)(v165 & 0x7F) << v162;
              if (v165 < 0)
              {
                v162 += 7;
                unint64_t v37 = v164;
                BOOL v14 = v163++ > 8;
                if (v14) {
                  goto LABEL_167;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v42) = 0;
              }
            }
            break;
          }
LABEL_259:
          *(_DWORD *)(a1 + 48) = v42;
          goto LABEL_296;
        case 4u:
          *(_DWORD *)(a1 + 116) |= 0x400u;
          unint64_t v45 = *((void *)this + 1);
          unint64_t v46 = *((void *)this + 2);
          uint64_t v47 = *(void *)this;
          if (v45 <= 0xFFFFFFFFFFFFFFF5 && v45 + 10 <= v46)
          {
            char v48 = 0;
            unsigned int v49 = 0;
            uint64_t v50 = 0;
            do
            {
              unint64_t v51 = v45 + 1;
              *((void *)this + 1) = v45 + 1;
              char v52 = *(unsigned char *)(v47 + v45);
              v50 |= (unint64_t)(v52 & 0x7F) << v48;
              if ((v52 & 0x80) == 0) {
                goto LABEL_263;
              }
              v48 += 7;
              unint64_t v45 = v51;
              BOOL v14 = v49++ > 8;
            }
            while (!v14);
LABEL_174:
            LODWORD(v50) = 0;
            goto LABEL_263;
          }
          char v166 = 0;
          unsigned int v167 = 0;
          uint64_t v50 = 0;
          if (v46 <= v45) {
            unint64_t v46 = *((void *)this + 1);
          }
          while (2)
          {
            if (v46 == v45)
            {
              LODWORD(v50) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v168 = v45 + 1;
              char v169 = *(unsigned char *)(v47 + v45);
              *((void *)this + 1) = v168;
              v50 |= (unint64_t)(v169 & 0x7F) << v166;
              if (v169 < 0)
              {
                v166 += 7;
                unint64_t v45 = v168;
                BOOL v14 = v167++ > 8;
                if (v14) {
                  goto LABEL_174;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v50) = 0;
              }
            }
            break;
          }
LABEL_263:
          *(_DWORD *)(a1 + 68) = v50;
          goto LABEL_296;
        case 5u:
          *(_DWORD *)(a1 + 116) |= 0x100000u;
          unint64_t v53 = *((void *)this + 1);
          if (v53 >= *((void *)this + 2))
          {
            BOOL v56 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v54 = v53 + 1;
            int v55 = *(unsigned __int8 *)(*(void *)this + v53);
            *((void *)this + 1) = v54;
            BOOL v56 = v55 != 0;
          }
          *(unsigned char *)(a1 + 108) = v56;
          goto LABEL_296;
        case 6u:
          *(_DWORD *)(a1 + 116) |= 0x8000u;
          unint64_t v57 = *((void *)this + 1);
          if (v57 > 0xFFFFFFFFFFFFFFFBLL || v57 + 4 > *((void *)this + 2)) {
            goto LABEL_125;
          }
          *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v57);
          goto LABEL_115;
        case 7u:
          *(_DWORD *)(a1 + 116) |= 4u;
          unint64_t v58 = *((void *)this + 1);
          if (v58 > 0xFFFFFFFFFFFFFFF7 || v58 + 8 > *((void *)this + 2)) {
            goto LABEL_125;
          }
          *(void *)(a1 + 24) = *(void *)(*(void *)this + v58);
          goto LABEL_246;
        case 8u:
          *(_DWORD *)(a1 + 116) |= 0x200000u;
          unint64_t v59 = *((void *)this + 1);
          if (v59 >= *((void *)this + 2))
          {
            BOOL v62 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v60 = v59 + 1;
            int v61 = *(unsigned __int8 *)(*(void *)this + v59);
            *((void *)this + 1) = v60;
            BOOL v62 = v61 != 0;
          }
          *(unsigned char *)(a1 + 109) = v62;
          goto LABEL_296;
        case 9u:
          *(_DWORD *)(a1 + 116) |= 0x100u;
          unint64_t v63 = *((void *)this + 1);
          unint64_t v64 = *((void *)this + 2);
          uint64_t v65 = *(void *)this;
          if (v63 <= 0xFFFFFFFFFFFFFFF5 && v63 + 10 <= v64)
          {
            char v66 = 0;
            unsigned int v67 = 0;
            uint64_t v68 = 0;
            do
            {
              unint64_t v69 = v63 + 1;
              *((void *)this + 1) = v63 + 1;
              char v70 = *(unsigned char *)(v65 + v63);
              v68 |= (unint64_t)(v70 & 0x7F) << v66;
              if ((v70 & 0x80) == 0) {
                goto LABEL_267;
              }
              v66 += 7;
              unint64_t v63 = v69;
              BOOL v14 = v67++ > 8;
            }
            while (!v14);
LABEL_185:
            LODWORD(v68) = 0;
            goto LABEL_267;
          }
          char v170 = 0;
          unsigned int v171 = 0;
          uint64_t v68 = 0;
          if (v64 <= v63) {
            unint64_t v64 = *((void *)this + 1);
          }
          while (2)
          {
            if (v64 == v63)
            {
              LODWORD(v68) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v172 = v63 + 1;
              char v173 = *(unsigned char *)(v65 + v63);
              *((void *)this + 1) = v172;
              v68 |= (unint64_t)(v173 & 0x7F) << v170;
              if (v173 < 0)
              {
                v170 += 7;
                unint64_t v63 = v172;
                BOOL v14 = v171++ > 8;
                if (v14) {
                  goto LABEL_185;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v68) = 0;
              }
            }
            break;
          }
LABEL_267:
          *(_DWORD *)(a1 + 60) = v68;
          goto LABEL_296;
        case 0xAu:
          *(_DWORD *)(a1 + 116) |= 1u;
          unint64_t v71 = *((void *)this + 1);
          if (v71 > 0xFFFFFFFFFFFFFFF7 || v71 + 8 > *((void *)this + 2)) {
            goto LABEL_125;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v71);
          goto LABEL_246;
        case 0xBu:
          *(_DWORD *)(a1 + 116) |= 2u;
          unint64_t v72 = *((void *)this + 1);
          if (v72 > 0xFFFFFFFFFFFFFFF7 || v72 + 8 > *((void *)this + 2)) {
            goto LABEL_125;
          }
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v72);
          goto LABEL_246;
        case 0xCu:
          *(_DWORD *)(a1 + 116) |= 0x1000u;
          unint64_t v73 = *((void *)this + 1);
          unint64_t v74 = *((void *)this + 2);
          uint64_t v75 = *(void *)this;
          if (v73 <= 0xFFFFFFFFFFFFFFF5 && v73 + 10 <= v74)
          {
            char v76 = 0;
            unsigned int v77 = 0;
            uint64_t v78 = 0;
            do
            {
              unint64_t v79 = v73 + 1;
              *((void *)this + 1) = v73 + 1;
              char v80 = *(unsigned char *)(v75 + v73);
              v78 |= (unint64_t)(v80 & 0x7F) << v76;
              if ((v80 & 0x80) == 0) {
                goto LABEL_271;
              }
              v76 += 7;
              unint64_t v73 = v79;
              BOOL v14 = v77++ > 8;
            }
            while (!v14);
LABEL_192:
            LODWORD(v78) = 0;
            goto LABEL_271;
          }
          char v174 = 0;
          unsigned int v175 = 0;
          uint64_t v78 = 0;
          if (v74 <= v73) {
            unint64_t v74 = *((void *)this + 1);
          }
          while (2)
          {
            if (v74 == v73)
            {
              LODWORD(v78) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v176 = v73 + 1;
              char v177 = *(unsigned char *)(v75 + v73);
              *((void *)this + 1) = v176;
              v78 |= (unint64_t)(v177 & 0x7F) << v174;
              if (v177 < 0)
              {
                v174 += 7;
                unint64_t v73 = v176;
                BOOL v14 = v175++ > 8;
                if (v14) {
                  goto LABEL_192;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v78) = 0;
              }
            }
            break;
          }
LABEL_271:
          *(_DWORD *)(a1 + 76) = v78;
          goto LABEL_296;
        case 0xDu:
          *(_DWORD *)(a1 + 116) |= 0x800u;
          unint64_t v81 = *((void *)this + 1);
          unint64_t v82 = *((void *)this + 2);
          uint64_t v83 = *(void *)this;
          if (v81 <= 0xFFFFFFFFFFFFFFF5 && v81 + 10 <= v82)
          {
            char v84 = 0;
            unsigned int v85 = 0;
            uint64_t v86 = 0;
            do
            {
              unint64_t v87 = v81 + 1;
              *((void *)this + 1) = v81 + 1;
              char v88 = *(unsigned char *)(v83 + v81);
              v86 |= (unint64_t)(v88 & 0x7F) << v84;
              if ((v88 & 0x80) == 0) {
                goto LABEL_275;
              }
              v84 += 7;
              unint64_t v81 = v87;
              BOOL v14 = v85++ > 8;
            }
            while (!v14);
LABEL_199:
            LODWORD(v86) = 0;
            goto LABEL_275;
          }
          char v178 = 0;
          unsigned int v179 = 0;
          uint64_t v86 = 0;
          if (v82 <= v81) {
            unint64_t v82 = *((void *)this + 1);
          }
          while (2)
          {
            if (v82 == v81)
            {
              LODWORD(v86) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v180 = v81 + 1;
              char v181 = *(unsigned char *)(v83 + v81);
              *((void *)this + 1) = v180;
              v86 |= (unint64_t)(v181 & 0x7F) << v178;
              if (v181 < 0)
              {
                v178 += 7;
                unint64_t v81 = v180;
                BOOL v14 = v179++ > 8;
                if (v14) {
                  goto LABEL_199;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v86) = 0;
              }
            }
            break;
          }
LABEL_275:
          *(_DWORD *)(a1 + 72) = v86;
          goto LABEL_296;
        case 0xEu:
          *(_DWORD *)(a1 + 116) |= 0x2000000u;
          unint64_t v89 = *((void *)this + 1);
          if (v89 >= *((void *)this + 2))
          {
            BOOL v92 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v90 = v89 + 1;
            int v91 = *(unsigned __int8 *)(*(void *)this + v89);
            *((void *)this + 1) = v90;
            BOOL v92 = v91 != 0;
          }
          *(unsigned char *)(a1 + 113) = v92;
          goto LABEL_296;
        case 0xFu:
          *(_DWORD *)(a1 + 116) |= 0x1000000u;
          unint64_t v93 = *((void *)this + 1);
          if (v93 >= *((void *)this + 2))
          {
            BOOL v96 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v94 = v93 + 1;
            int v95 = *(unsigned __int8 *)(*(void *)this + v93);
            *((void *)this + 1) = v94;
            BOOL v96 = v95 != 0;
          }
          *(unsigned char *)(a1 + 112) = v96;
          goto LABEL_296;
        case 0x10u:
          *(_DWORD *)(a1 + 116) |= 0x400000u;
          unint64_t v97 = *((void *)this + 1);
          if (v97 >= *((void *)this + 2))
          {
            BOOL v100 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v98 = v97 + 1;
            int v99 = *(unsigned __int8 *)(*(void *)this + v97);
            *((void *)this + 1) = v98;
            BOOL v100 = v99 != 0;
          }
          *(unsigned char *)(a1 + 110) = v100;
          goto LABEL_296;
        case 0x11u:
          *(_DWORD *)(a1 + 116) |= 0x4000000u;
          unint64_t v101 = *((void *)this + 1);
          if (v101 >= *((void *)this + 2))
          {
            BOOL v104 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v102 = v101 + 1;
            int v103 = *(unsigned __int8 *)(*(void *)this + v101);
            *((void *)this + 1) = v102;
            BOOL v104 = v103 != 0;
          }
          *(unsigned char *)(a1 + 114) = v104;
          goto LABEL_296;
        case 0x12u:
          *(_DWORD *)(a1 + 116) |= 0x800000u;
          unint64_t v105 = *((void *)this + 1);
          if (v105 >= *((void *)this + 2))
          {
            BOOL v108 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v106 = v105 + 1;
            int v107 = *(unsigned __int8 *)(*(void *)this + v105);
            *((void *)this + 1) = v106;
            BOOL v108 = v107 != 0;
          }
          *(unsigned char *)(a1 + 111) = v108;
          goto LABEL_296;
        case 0x13u:
          *(_DWORD *)(a1 + 116) |= 0x40000u;
          unint64_t v109 = *((void *)this + 1);
          unint64_t v110 = *((void *)this + 2);
          uint64_t v111 = *(void *)this;
          if (v109 <= 0xFFFFFFFFFFFFFFF5 && v109 + 10 <= v110)
          {
            char v112 = 0;
            unsigned int v113 = 0;
            uint64_t v114 = 0;
            do
            {
              unint64_t v115 = v109 + 1;
              *((void *)this + 1) = v109 + 1;
              char v116 = *(unsigned char *)(v111 + v109);
              v114 |= (unint64_t)(v116 & 0x7F) << v112;
              if ((v116 & 0x80) == 0) {
                goto LABEL_279;
              }
              v112 += 7;
              unint64_t v109 = v115;
              BOOL v14 = v113++ > 8;
            }
            while (!v14);
LABEL_216:
            LODWORD(v114) = 0;
            goto LABEL_279;
          }
          char v182 = 0;
          unsigned int v183 = 0;
          uint64_t v114 = 0;
          if (v110 <= v109) {
            unint64_t v110 = *((void *)this + 1);
          }
          while (2)
          {
            if (v110 == v109)
            {
              LODWORD(v114) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v184 = v109 + 1;
              char v185 = *(unsigned char *)(v111 + v109);
              *((void *)this + 1) = v184;
              v114 |= (unint64_t)(v185 & 0x7F) << v182;
              if (v185 < 0)
              {
                v182 += 7;
                unint64_t v109 = v184;
                BOOL v14 = v183++ > 8;
                if (v14) {
                  goto LABEL_216;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v114) = 0;
              }
            }
            break;
          }
LABEL_279:
          *(_DWORD *)(a1 + 100) = v114;
          goto LABEL_296;
        case 0x14u:
          *(_DWORD *)(a1 + 116) |= 0x80u;
          unint64_t v117 = *((void *)this + 1);
          if (v117 > 0xFFFFFFFFFFFFFFFBLL || v117 + 4 > *((void *)this + 2)) {
            goto LABEL_125;
          }
          *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v117);
          goto LABEL_115;
        case 0x15u:
          *(_DWORD *)(a1 + 116) |= 0x40u;
          unint64_t v118 = *((void *)this + 1);
          if (v118 > 0xFFFFFFFFFFFFFFFBLL || v118 + 4 > *((void *)this + 2)) {
            goto LABEL_125;
          }
          *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v118);
          goto LABEL_115;
        case 0x16u:
          *(_DWORD *)(a1 + 116) |= 0x4000u;
          unint64_t v119 = *((void *)this + 1);
          if (v119 > 0xFFFFFFFFFFFFFFFBLL || v119 + 4 > *((void *)this + 2)) {
            goto LABEL_125;
          }
          *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v119);
LABEL_115:
          uint64_t v120 = *((void *)this + 1) + 4;
          goto LABEL_247;
        case 0x17u:
          *(_DWORD *)(a1 + 116) |= 0x80000u;
          unint64_t v121 = *((void *)this + 1);
          unint64_t v122 = *((void *)this + 2);
          uint64_t v123 = *(void *)this;
          if (v121 <= 0xFFFFFFFFFFFFFFF5 && v121 + 10 <= v122)
          {
            char v124 = 0;
            unsigned int v125 = 0;
            uint64_t v126 = 0;
            do
            {
              unint64_t v127 = v121 + 1;
              *((void *)this + 1) = v121 + 1;
              char v128 = *(unsigned char *)(v123 + v121);
              v126 |= (unint64_t)(v128 & 0x7F) << v124;
              if ((v128 & 0x80) == 0) {
                goto LABEL_283;
              }
              v124 += 7;
              unint64_t v121 = v127;
              BOOL v14 = v125++ > 8;
            }
            while (!v14);
LABEL_223:
            LODWORD(v126) = 0;
            goto LABEL_283;
          }
          char v186 = 0;
          unsigned int v187 = 0;
          uint64_t v126 = 0;
          if (v122 <= v121) {
            unint64_t v122 = *((void *)this + 1);
          }
          while (2)
          {
            if (v122 == v121)
            {
              LODWORD(v126) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v188 = v121 + 1;
              char v189 = *(unsigned char *)(v123 + v121);
              *((void *)this + 1) = v188;
              v126 |= (unint64_t)(v189 & 0x7F) << v186;
              if (v189 < 0)
              {
                v186 += 7;
                unint64_t v121 = v188;
                BOOL v14 = v187++ > 8;
                if (v14) {
                  goto LABEL_223;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v126) = 0;
              }
            }
            break;
          }
LABEL_283:
          *(_DWORD *)(a1 + 104) = v126;
          goto LABEL_296;
        case 0x18u:
          *(_DWORD *)(a1 + 116) |= 8u;
          unint64_t v129 = *((void *)this + 1);
          if (v129 <= 0xFFFFFFFFFFFFFFF7 && v129 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 32) = *(void *)(*(void *)this + v129);
LABEL_246:
            uint64_t v120 = *((void *)this + 1) + 8;
LABEL_247:
            *((void *)this + 1) = v120;
          }
          else
          {
LABEL_125:
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_296;
        case 0x19u:
          *(_DWORD *)(a1 + 116) |= 0x10u;
          unint64_t v130 = *((void *)this + 1);
          unint64_t v131 = *((void *)this + 2);
          uint64_t v132 = *(void *)this;
          if (v130 <= 0xFFFFFFFFFFFFFFF5 && v130 + 10 <= v131)
          {
            char v133 = 0;
            unsigned int v134 = 0;
            uint64_t v135 = 0;
            do
            {
              unint64_t v136 = v130 + 1;
              *((void *)this + 1) = v130 + 1;
              char v137 = *(unsigned char *)(v132 + v130);
              v135 |= (unint64_t)(v137 & 0x7F) << v133;
              if ((v137 & 0x80) == 0) {
                goto LABEL_287;
              }
              v133 += 7;
              unint64_t v130 = v136;
              BOOL v14 = v134++ > 8;
            }
            while (!v14);
LABEL_230:
            uint64_t v135 = 0;
            goto LABEL_287;
          }
          char v190 = 0;
          unsigned int v191 = 0;
          uint64_t v135 = 0;
          if (v131 <= v130) {
            unint64_t v131 = *((void *)this + 1);
          }
          while (2)
          {
            if (v131 == v130)
            {
              uint64_t v135 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v192 = v130 + 1;
              char v193 = *(unsigned char *)(v132 + v130);
              *((void *)this + 1) = v192;
              v135 |= (unint64_t)(v193 & 0x7F) << v190;
              if (v193 < 0)
              {
                v190 += 7;
                unint64_t v130 = v192;
                BOOL v14 = v191++ > 8;
                if (v14) {
                  goto LABEL_230;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v135 = 0;
              }
            }
            break;
          }
LABEL_287:
          *(void *)(a1 + 40) = v135;
          goto LABEL_296;
        case 0x1Au:
          *(_DWORD *)(a1 + 116) |= 0x20000u;
          unint64_t v138 = *((void *)this + 1);
          unint64_t v139 = *((void *)this + 2);
          uint64_t v140 = *(void *)this;
          if (v138 <= 0xFFFFFFFFFFFFFFF5 && v138 + 10 <= v139)
          {
            char v141 = 0;
            unsigned int v142 = 0;
            uint64_t v143 = 0;
            do
            {
              unint64_t v144 = v138 + 1;
              *((void *)this + 1) = v138 + 1;
              char v145 = *(unsigned char *)(v140 + v138);
              v143 |= (unint64_t)(v145 & 0x7F) << v141;
              if ((v145 & 0x80) == 0) {
                goto LABEL_291;
              }
              v141 += 7;
              unint64_t v138 = v144;
              BOOL v14 = v142++ > 8;
            }
            while (!v14);
LABEL_237:
            LODWORD(v143) = 0;
            goto LABEL_291;
          }
          char v194 = 0;
          unsigned int v195 = 0;
          uint64_t v143 = 0;
          if (v139 <= v138) {
            unint64_t v139 = *((void *)this + 1);
          }
          while (2)
          {
            if (v139 == v138)
            {
              LODWORD(v143) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v196 = v138 + 1;
              char v197 = *(unsigned char *)(v140 + v138);
              *((void *)this + 1) = v196;
              v143 |= (unint64_t)(v197 & 0x7F) << v194;
              if (v197 < 0)
              {
                v194 += 7;
                unint64_t v138 = v196;
                BOOL v14 = v195++ > 8;
                if (v14) {
                  goto LABEL_237;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v143) = 0;
              }
            }
            break;
          }
LABEL_291:
          *(_DWORD *)(a1 + 96) = v143;
          goto LABEL_296;
        case 0x1Bu:
          *(_DWORD *)(a1 + 116) |= 0x2000u;
          unint64_t v146 = *((void *)this + 1);
          unint64_t v147 = *((void *)this + 2);
          uint64_t v148 = *(void *)this;
          if (v146 <= 0xFFFFFFFFFFFFFFF5 && v146 + 10 <= v147)
          {
            char v149 = 0;
            unsigned int v150 = 0;
            uint64_t v151 = 0;
            do
            {
              unint64_t v152 = v146 + 1;
              *((void *)this + 1) = v146 + 1;
              char v153 = *(unsigned char *)(v148 + v146);
              v151 |= (unint64_t)(v153 & 0x7F) << v149;
              if ((v153 & 0x80) == 0) {
                goto LABEL_295;
              }
              v149 += 7;
              unint64_t v146 = v152;
              BOOL v14 = v150++ > 8;
            }
            while (!v14);
LABEL_244:
            LODWORD(v151) = 0;
            goto LABEL_295;
          }
          char v198 = 0;
          unsigned int v199 = 0;
          uint64_t v151 = 0;
          if (v147 <= v146) {
            unint64_t v147 = *((void *)this + 1);
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          goto LABEL_296;
      }
      while (1)
      {
        if (v147 == v146)
        {
          LODWORD(v151) = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_295;
        }
        unint64_t v200 = v146 + 1;
        char v201 = *(unsigned char *)(v148 + v146);
        *((void *)this + 1) = v200;
        v151 |= (unint64_t)(v201 & 0x7F) << v198;
        if ((v201 & 0x80) == 0) {
          break;
        }
        v198 += 7;
        unint64_t v146 = v200;
        BOOL v14 = v199++ > 8;
        if (v14) {
          goto LABEL_244;
        }
      }
      if (*((unsigned char *)this + 24)) {
        LODWORD(v151) = 0;
      }
LABEL_295:
      *(_DWORD *)(a1 + 80) = v151;
LABEL_296:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C4AFE4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 116);
  if ((v4 & 0x10000) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    int v4 = *(_DWORD *)(v3 + 116);
    if ((v4 & 0x200) == 0)
    {
LABEL_3:
      if ((v4 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_31;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x20) == 0)
  {
LABEL_4:
    if ((v4 & 0x400) == 0) {
      goto LABEL_5;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x400) == 0)
  {
LABEL_5:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x100000) == 0)
  {
LABEL_6:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x8000) == 0)
  {
LABEL_7:
    if ((v4 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 88));
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 4) == 0)
  {
LABEL_8:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24));
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x200000) == 0)
  {
LABEL_9:
    if ((v4 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x100) == 0)
  {
LABEL_10:
    if ((v4 & 1) == 0) {
      goto LABEL_11;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 1) == 0)
  {
LABEL_11:
    if ((v4 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 2) == 0)
  {
LABEL_12:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x1000) == 0)
  {
LABEL_13:
    if ((v4 & 0x800) == 0) {
      goto LABEL_14;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x800) == 0)
  {
LABEL_14:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_15:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_16:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x400000) == 0)
  {
LABEL_17:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_18:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x800000) == 0)
  {
LABEL_19:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x40000) == 0)
  {
LABEL_20:
    if ((v4 & 0x80) == 0) {
      goto LABEL_21;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x80) == 0)
  {
LABEL_21:
    if ((v4 & 0x40) == 0) {
      goto LABEL_22;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56));
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x40) == 0)
  {
LABEL_22:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x4000) == 0)
  {
LABEL_23:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84));
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x80000) == 0)
  {
LABEL_24:
    if ((v4 & 8) == 0) {
      goto LABEL_25;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 8) == 0)
  {
LABEL_25:
    if ((v4 & 0x10) == 0) {
      goto LABEL_26;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32));
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x10) == 0)
  {
LABEL_26:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_27;
    }
LABEL_54:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(_DWORD *)(v3 + 116) & 0x2000) == 0) {
      return result;
    }
    goto LABEL_55;
  }
LABEL_53:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x20000) != 0) {
    goto LABEL_54;
  }
LABEL_27:
  if ((v4 & 0x2000) == 0) {
    return result;
  }
LABEL_55:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227C4B310(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC27300;
  *(_DWORD *)(result + 36) = 0;
  return result;
}

void sub_227C4B338(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C4B370(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC27300;
  *(_DWORD *)(result + 36) = 0;
  __int16 v2 = *(_WORD *)(a2 + 36);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    __int16 v3 = 1;
    *(_WORD *)(result + 36) = 1;
    *(void *)(result + 8) = v4;
    __int16 v2 = *(_WORD *)(a2 + 36);
    if ((v2 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 0x10) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 28);
    v3 |= 0x10u;
    *(_WORD *)(result + 36) = v3;
    *(_DWORD *)(result + 28) = v5;
    __int16 v2 = *(_WORD *)(a2 + 36);
  }
LABEL_6:
  if ((v2 & 8) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 24);
    v3 |= 8u;
    *(_WORD *)(result + 36) = v3;
    *(_DWORD *)(result + 24) = v6;
    __int16 v2 = *(_WORD *)(a2 + 36);
    if ((v2 & 0x80) == 0)
    {
LABEL_8:
      if ((v2 & 0x100) == 0) {
        goto LABEL_9;
      }
      goto LABEL_16;
    }
  }
  else if ((v2 & 0x80) == 0)
  {
    goto LABEL_8;
  }
  char v7 = *(unsigned char *)(a2 + 34);
  v3 |= 0x80u;
  *(_WORD *)(result + 36) = v3;
  *(unsigned char *)(result + 34) = v7;
  __int16 v2 = *(_WORD *)(a2 + 36);
  if ((v2 & 0x100) == 0)
  {
LABEL_9:
    if ((v2 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_17;
  }
LABEL_16:
  char v8 = *(unsigned char *)(a2 + 35);
  v3 |= 0x100u;
  *(_WORD *)(result + 36) = v3;
  *(unsigned char *)(result + 35) = v8;
  __int16 v2 = *(_WORD *)(a2 + 36);
  if ((v2 & 0x20) == 0)
  {
LABEL_10:
    if ((v2 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_18;
  }
LABEL_17:
  char v9 = *(unsigned char *)(a2 + 32);
  v3 |= 0x20u;
  *(_WORD *)(result + 36) = v3;
  *(unsigned char *)(result + 32) = v9;
  __int16 v2 = *(_WORD *)(a2 + 36);
  if ((v2 & 0x40) == 0)
  {
LABEL_11:
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_19;
  }
LABEL_18:
  char v10 = *(unsigned char *)(a2 + 33);
  v3 |= 0x40u;
  *(_WORD *)(result + 36) = v3;
  *(unsigned char *)(result + 33) = v10;
  __int16 v2 = *(_WORD *)(a2 + 36);
  if ((v2 & 2) == 0)
  {
LABEL_12:
    if ((v2 & 4) == 0) {
      return result;
    }
LABEL_20:
    int v12 = *(_DWORD *)(a2 + 20);
    *(_WORD *)(result + 36) = v3 | 4;
    *(_DWORD *)(result + 20) = v12;
    return result;
  }
LABEL_19:
  int v11 = *(_DWORD *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(result + 36) = v3;
  *(_DWORD *)(result + 16) = v11;
  if ((*(_WORD *)(a2 + 36) & 4) != 0) {
    goto LABEL_20;
  }
  return result;
}

uint64_t sub_227C4B498(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 36);
  if (v5)
  {
    PB::TextFormatter::format(this, "iostime", *(double *)(a1 + 8));
    __int16 v5 = *(_WORD *)(a1 + 36);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "outdoorCyclingStateMachineFrom");
  __int16 v5 = *(_WORD *)(a1 + 36);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "outdoorCyclingStateMachineTo");
  __int16 v5 = *(_WORD *)(a1 + 36);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  PB::TextFormatter::format(this, "workoutLocationType");
  __int16 v5 = *(_WORD *)(a1 + 36);
  if ((v5 & 0x20) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "workoutPause");
  __int16 v5 = *(_WORD *)(a1 + 36);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "workoutResume");
  __int16 v5 = *(_WORD *)(a1 + 36);
  if ((v5 & 0x80) == 0)
  {
LABEL_8:
    if ((v5 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "workoutStart");
  __int16 v5 = *(_WORD *)(a1 + 36);
  if ((v5 & 0x100) == 0)
  {
LABEL_9:
    if ((v5 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_21:
  PB::TextFormatter::format(this, "workoutStop");
  if ((*(_WORD *)(a1 + 36) & 0x10) != 0) {
LABEL_10:
  }
    PB::TextFormatter::format(this, "workoutType");
LABEL_11:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C4B5FC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 36) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_120;
            case 2u:
              *(_WORD *)(a1 + 36) |= 0x10u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v53 = 0;
                unsigned int v54 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    LODWORD(v24) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_104;
                  }
                  unint64_t v55 = v20++;
                  char v56 = *(unsigned char *)(v21 + v55);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v56 & 0x7F) << v53;
                  if ((v56 & 0x80) == 0) {
                    break;
                  }
                  v53 += 7;
                  BOOL v14 = v54++ > 8;
                  if (v14)
                  {
                    LODWORD(v24) = 0;
LABEL_103:
                    unint64_t v2 = v55 + 1;
                    goto LABEL_104;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v24) = 0;
                }
                goto LABEL_103;
              }
              char v22 = 0;
              unsigned int v23 = 0;
              uint64_t v24 = 0;
              do
              {
                unint64_t v2 = v20 + 1;
                *((void *)this + 1) = v20 + 1;
                char v25 = *(unsigned char *)(v21 + v20);
                v24 |= (unint64_t)(v25 & 0x7F) << v22;
                if ((v25 & 0x80) == 0) {
                  goto LABEL_104;
                }
                v22 += 7;
                unint64_t v20 = v2;
                BOOL v14 = v23++ > 8;
              }
              while (!v14);
              LODWORD(v24) = 0;
LABEL_104:
              *(_DWORD *)(a1 + 28) = v24;
              goto LABEL_120;
            case 3u:
              *(_WORD *)(a1 + 36) |= 8u;
              unint64_t v26 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v27 = *(void *)this;
              if (v26 > 0xFFFFFFFFFFFFFFF5 || v26 + 10 > v2)
              {
                char v57 = 0;
                unsigned int v58 = 0;
                uint64_t v30 = 0;
                if (v2 <= v26) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v26)
                  {
                    LODWORD(v30) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_109;
                  }
                  unint64_t v59 = v26++;
                  char v60 = *(unsigned char *)(v27 + v59);
                  *((void *)this + 1) = v26;
                  v30 |= (unint64_t)(v60 & 0x7F) << v57;
                  if ((v60 & 0x80) == 0) {
                    break;
                  }
                  v57 += 7;
                  BOOL v14 = v58++ > 8;
                  if (v14)
                  {
                    LODWORD(v30) = 0;
LABEL_108:
                    unint64_t v2 = v59 + 1;
                    goto LABEL_109;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v30) = 0;
                }
                goto LABEL_108;
              }
              char v28 = 0;
              unsigned int v29 = 0;
              uint64_t v30 = 0;
              do
              {
                unint64_t v2 = v26 + 1;
                *((void *)this + 1) = v26 + 1;
                char v31 = *(unsigned char *)(v27 + v26);
                v30 |= (unint64_t)(v31 & 0x7F) << v28;
                if ((v31 & 0x80) == 0) {
                  goto LABEL_109;
                }
                v28 += 7;
                unint64_t v26 = v2;
                BOOL v14 = v29++ > 8;
              }
              while (!v14);
              LODWORD(v30) = 0;
LABEL_109:
              *(_DWORD *)(a1 + 24) = v30;
              goto LABEL_120;
            case 0xAu:
              *(_WORD *)(a1 + 36) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v34 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v33 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v34 = v33 != 0;
              }
              *(unsigned char *)(a1 + 34) = v34;
              goto LABEL_120;
            case 0xBu:
              *(_WORD *)(a1 + 36) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v36 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v35 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v36 = v35 != 0;
              }
              *(unsigned char *)(a1 + 35) = v36;
              goto LABEL_120;
            case 0xCu:
              *(_WORD *)(a1 + 36) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v38 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v37 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v38 = v37 != 0;
              }
              *(unsigned char *)(a1 + 32) = v38;
              goto LABEL_120;
            case 0xDu:
              *(_WORD *)(a1 + 36) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v40 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v39 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v40 = v39 != 0;
              }
              *(unsigned char *)(a1 + 33) = v40;
              goto LABEL_120;
            case 0x15u:
              *(_WORD *)(a1 + 36) |= 2u;
              unint64_t v41 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v42 = *(void *)this;
              if (v41 > 0xFFFFFFFFFFFFFFF5 || v41 + 10 > v2)
              {
                char v61 = 0;
                unsigned int v62 = 0;
                uint64_t v45 = 0;
                if (v2 <= v41) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v41)
                  {
                    LODWORD(v45) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_114;
                  }
                  unint64_t v63 = v41++;
                  char v64 = *(unsigned char *)(v42 + v63);
                  *((void *)this + 1) = v41;
                  v45 |= (unint64_t)(v64 & 0x7F) << v61;
                  if ((v64 & 0x80) == 0) {
                    break;
                  }
                  v61 += 7;
                  BOOL v14 = v62++ > 8;
                  if (v14)
                  {
                    LODWORD(v45) = 0;
LABEL_113:
                    unint64_t v2 = v63 + 1;
                    goto LABEL_114;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v45) = 0;
                }
                goto LABEL_113;
              }
              char v43 = 0;
              unsigned int v44 = 0;
              uint64_t v45 = 0;
              do
              {
                unint64_t v2 = v41 + 1;
                *((void *)this + 1) = v41 + 1;
                char v46 = *(unsigned char *)(v42 + v41);
                v45 |= (unint64_t)(v46 & 0x7F) << v43;
                if ((v46 & 0x80) == 0) {
                  goto LABEL_114;
                }
                v43 += 7;
                unint64_t v41 = v2;
                BOOL v14 = v44++ > 8;
              }
              while (!v14);
              LODWORD(v45) = 0;
LABEL_114:
              *(_DWORD *)(a1 + 16) = v45;
              goto LABEL_120;
            case 0x16u:
              *(_WORD *)(a1 + 36) |= 4u;
              unint64_t v47 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v48 = *(void *)this;
              if (v47 > 0xFFFFFFFFFFFFFFF5 || v47 + 10 > v2)
              {
                char v65 = 0;
                unsigned int v66 = 0;
                uint64_t v51 = 0;
                if (v2 <= v47) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v47)
                  {
                    LODWORD(v51) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_119;
                  }
                  unint64_t v67 = v47++;
                  char v68 = *(unsigned char *)(v48 + v67);
                  *((void *)this + 1) = v47;
                  v51 |= (unint64_t)(v68 & 0x7F) << v65;
                  if ((v68 & 0x80) == 0) {
                    break;
                  }
                  v65 += 7;
                  BOOL v14 = v66++ > 8;
                  if (v14)
                  {
                    LODWORD(v51) = 0;
LABEL_118:
                    unint64_t v2 = v67 + 1;
                    goto LABEL_119;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v51) = 0;
                }
                goto LABEL_118;
              }
              char v49 = 0;
              unsigned int v50 = 0;
              uint64_t v51 = 0;
              do
              {
                unint64_t v2 = v47 + 1;
                *((void *)this + 1) = v47 + 1;
                char v52 = *(unsigned char *)(v48 + v47);
                v51 |= (unint64_t)(v52 & 0x7F) << v49;
                if ((v52 & 0x80) == 0) {
                  goto LABEL_119;
                }
                v49 += 7;
                unint64_t v47 = v2;
                BOOL v14 = v50++ > 8;
              }
              while (!v14);
              LODWORD(v51) = 0;
LABEL_119:
              *(_DWORD *)(a1 + 20) = v51;
LABEL_120:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_120;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C4BCD4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 36);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    __int16 v4 = *(_WORD *)(v3 + 36);
    if ((v4 & 0x10) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v4 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 36);
  if ((v4 & 8) == 0)
  {
LABEL_4:
    if ((v4 & 0x80) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 36);
  if ((v4 & 0x80) == 0)
  {
LABEL_5:
    if ((v4 & 0x100) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 36);
  if ((v4 & 0x100) == 0)
  {
LABEL_6:
    if ((v4 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 36);
  if ((v4 & 0x20) == 0)
  {
LABEL_7:
    if ((v4 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 36);
  if ((v4 & 0x40) == 0)
  {
LABEL_8:
    if ((v4 & 2) == 0) {
      goto LABEL_9;
    }
LABEL_18:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(_WORD *)(v3 + 36) & 4) == 0) {
      return result;
    }
    goto LABEL_19;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 36);
  if ((v4 & 2) != 0) {
    goto LABEL_18;
  }
LABEL_9:
  if ((v4 & 4) == 0) {
    return result;
  }
LABEL_19:

  return PB::Writer::writeVarInt(this);
}

void *sub_227C4BE08(void *result)
{
  *uint64_t result = &unk_26DC27338;
  result[1] = 0;
  result[3] = 0;
  return result;
}

void sub_227C4BE2C(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC27338;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C4BEAC(PB::Base *a1)
{
  sub_227C4BE2C(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C4BEE4(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC27338;
  *(void *)(result + 8) = 0;
  *(void *)(result + 24) = 0;
  if ((*(unsigned char *)(a2 + 28) & 2) != 0)
  {
    int v3 = *(_DWORD *)(a2 + 24);
    *(unsigned char *)(result + 28) = 2;
    *(_DWORD *)(result + 24) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 28) & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v2 = 1;
  if (*(unsigned char *)(a2 + 28))
  {
LABEL_5:
    uint64_t v4 = *(void *)(a2 + 16);
    *(unsigned char *)(result + 28) = v2;
    *(void *)(result + 16) = v4;
  }
LABEL_6:
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C4BFD0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "impulse");
  }
  char v6 = *(unsigned char *)(a1 + 28);
  if ((v6 & 2) != 0)
  {
    PB::TextFormatter::format(this, "state");
    char v6 = *(unsigned char *)(a1 + 28);
  }
  if (v6) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 16));
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C4C084(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 3) {
        operator new();
      }
      if (v20 == 2)
      {
        *(unsigned char *)(a1 + 28) |= 1u;
        unint64_t v29 = *((void *)this + 1);
        if (v29 <= 0xFFFFFFFFFFFFFFF7 && v29 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v29);
          *((void *)this + 1) += 8;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else if (v20 == 1)
      {
        *(unsigned char *)(a1 + 28) |= 2u;
        unint64_t v21 = *((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        uint64_t v23 = *(void *)this;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v22)
        {
          char v31 = 0;
          unsigned int v32 = 0;
          uint64_t v26 = 0;
          if (v22 <= v21) {
            unint64_t v22 = *((void *)this + 1);
          }
          while (1)
          {
            if (v22 == v21)
            {
              LODWORD(v26) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_48;
            }
            unint64_t v33 = v21 + 1;
            char v34 = *(unsigned char *)(v23 + v21);
            *((void *)this + 1) = v33;
            v26 |= (unint64_t)(v34 & 0x7F) << v31;
            if ((v34 & 0x80) == 0) {
              break;
            }
            v31 += 7;
            unint64_t v21 = v33;
            BOOL v14 = v32++ > 8;
            if (v14)
            {
LABEL_43:
              LODWORD(v26) = 0;
              goto LABEL_48;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v26) = 0;
          }
        }
        else
        {
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v26 = 0;
          while (1)
          {
            unint64_t v27 = v21 + 1;
            *((void *)this + 1) = v21 + 1;
            char v28 = *(unsigned char *)(v23 + v21);
            v26 |= (unint64_t)(v28 & 0x7F) << v24;
            if ((v28 & 0x80) == 0) {
              break;
            }
            v24 += 7;
            unint64_t v21 = v27;
            BOOL v14 = v25++ > 8;
            if (v14) {
              goto LABEL_43;
            }
          }
        }
LABEL_48:
        *(_DWORD *)(a1 + 24) = v26;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C4C3E0(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC27A00;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_227C4C404(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 28);
  }
  if (v4) {
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  }
  uint64_t v5 = *(const PB::Base **)(v3 + 8);
  if (v5)
  {
    return PB::Writer::writeSubmessage(this, v5);
  }
  return result;
}

uint64_t sub_227C4C484(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC27370;
  *(void *)(result + 112) = 0;
  *(_DWORD *)(result + 180) = 0;
  return result;
}

void sub_227C4C4AC(PB::Base *this)
{
  *(void *)this = &unk_26DC27370;
  uint64_t v2 = *((void *)this + 14);
  *((void *)this + 14) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C4C530(PB::Base *a1)
{
  sub_227C4C4AC(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C4C568(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC27370;
  *(void *)(result + 112) = 0;
  *(_DWORD *)(result + 180) = 0;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 0x800) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 96);
    int v3 = 2048;
    *(_DWORD *)(result + 180) = 2048;
    *(void *)(result + 96) = v4;
    int v2 = *(_DWORD *)(a2 + 180);
    if ((v2 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 0x40) != 0)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 56);
    v3 |= 0x40u;
    *(_DWORD *)(result + 180) = v3;
    *(void *)(result + 56) = v5;
    int v2 = *(_DWORD *)(a2 + 180);
  }
LABEL_6:
  if ((v2 & 0x80) != 0)
  {
    uint64_t v10 = *(void *)(a2 + 64);
    v3 |= 0x80u;
    *(_DWORD *)(result + 180) = v3;
    *(void *)(result + 64) = v10;
    int v2 = *(_DWORD *)(a2 + 180);
    if ((v2 & 0x200) == 0)
    {
LABEL_8:
      if ((v2 & 0x400) == 0) {
        goto LABEL_9;
      }
      goto LABEL_39;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v11 = *(void *)(a2 + 80);
  v3 |= 0x200u;
  *(_DWORD *)(result + 180) = v3;
  *(void *)(result + 80) = v11;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 0x400) == 0)
  {
LABEL_9:
    if ((v2 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t v12 = *(void *)(a2 + 88);
  v3 |= 0x400u;
  *(_DWORD *)(result + 180) = v3;
  *(void *)(result + 88) = v12;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 0x20) == 0)
  {
LABEL_10:
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t v13 = *(void *)(a2 + 48);
  v3 |= 0x20u;
  *(_DWORD *)(result + 180) = v3;
  *(void *)(result + 48) = v13;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 2) == 0)
  {
LABEL_11:
    if ((v2 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t v14 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_DWORD *)(result + 180) = v3;
  *(void *)(result + 16) = v14;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 4) == 0)
  {
LABEL_12:
    if ((v2 & 1) == 0) {
      goto LABEL_13;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t v15 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(_DWORD *)(result + 180) = v3;
  *(void *)(result + 24) = v15;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 1) == 0)
  {
LABEL_13:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t v16 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_DWORD *)(result + 180) = v3;
  *(void *)(result + 8) = v16;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 0x2000) == 0)
  {
LABEL_14:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t v17 = *(void *)(a2 + 120);
  v3 |= 0x2000u;
  *(_DWORD *)(result + 180) = v3;
  *(void *)(result + 120) = v17;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 0x800000) == 0)
  {
LABEL_15:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_46;
  }
LABEL_45:
  int v18 = *(_DWORD *)(a2 + 164);
  v3 |= 0x800000u;
  *(_DWORD *)(result + 180) = v3;
  *(_DWORD *)(result + 164) = v18;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 0x1000) == 0)
  {
LABEL_16:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t v19 = *(void *)(a2 + 104);
  v3 |= 0x1000u;
  *(_DWORD *)(result + 180) = v3;
  *(void *)(result + 104) = v19;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_17:
    if ((v2 & 0x2000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_48;
  }
LABEL_47:
  int v20 = *(_DWORD *)(a2 + 168);
  v3 |= 0x1000000u;
  *(_DWORD *)(result + 180) = v3;
  *(_DWORD *)(result + 168) = v20;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 0x2000000) == 0)
  {
LABEL_18:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_49;
  }
LABEL_48:
  int v21 = *(_DWORD *)(a2 + 172);
  v3 |= 0x2000000u;
  *(_DWORD *)(result + 180) = v3;
  *(_DWORD *)(result + 172) = v21;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 0x20000) == 0)
  {
LABEL_19:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_50;
  }
LABEL_49:
  int v22 = *(_DWORD *)(a2 + 140);
  v3 |= 0x20000u;
  *(_DWORD *)(result + 180) = v3;
  *(_DWORD *)(result + 140) = v22;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 0x80000) == 0)
  {
LABEL_20:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_51;
  }
LABEL_50:
  int v23 = *(_DWORD *)(a2 + 148);
  v3 |= 0x80000u;
  *(_DWORD *)(result + 180) = v3;
  *(_DWORD *)(result + 148) = v23;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 0x40000) == 0)
  {
LABEL_21:
    if ((v2 & 0x100) == 0) {
      goto LABEL_22;
    }
    goto LABEL_52;
  }
LABEL_51:
  int v24 = *(_DWORD *)(a2 + 144);
  v3 |= 0x40000u;
  *(_DWORD *)(result + 180) = v3;
  *(_DWORD *)(result + 144) = v24;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 0x100) == 0)
  {
LABEL_22:
    if ((v2 & 8) == 0) {
      goto LABEL_23;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t v25 = *(void *)(a2 + 72);
  v3 |= 0x100u;
  *(_DWORD *)(result + 180) = v3;
  *(void *)(result + 72) = v25;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 8) == 0)
  {
LABEL_23:
    if ((v2 & 0x10) == 0) {
      goto LABEL_24;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t v26 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_DWORD *)(result + 180) = v3;
  *(void *)(result + 32) = v26;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 0x10) == 0)
  {
LABEL_24:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t v27 = *(void *)(a2 + 40);
  v3 |= 0x10u;
  *(_DWORD *)(result + 180) = v3;
  *(void *)(result + 40) = v27;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 0x200000) == 0)
  {
LABEL_25:
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_56;
  }
LABEL_55:
  int v28 = *(_DWORD *)(a2 + 156);
  v3 |= 0x200000u;
  *(_DWORD *)(result + 180) = v3;
  *(_DWORD *)(result + 156) = v28;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_26:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_57;
  }
LABEL_56:
  v3 |= 0x4000000u;
  *(_DWORD *)(result + 176) = *(_DWORD *)(a2 + 176);
  *(_DWORD *)(result + 180) = v3;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 0x400000) == 0)
  {
LABEL_27:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_58;
  }
LABEL_57:
  int v29 = *(_DWORD *)(a2 + 160);
  v3 |= 0x400000u;
  *(_DWORD *)(result + 180) = v3;
  *(_DWORD *)(result + 160) = v29;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 0x10000) == 0)
  {
LABEL_28:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_29;
  }
LABEL_58:
  int v30 = *(_DWORD *)(a2 + 136);
  v3 |= 0x10000u;
  *(_DWORD *)(result + 180) = v3;
  *(_DWORD *)(result + 136) = v30;
  if ((*(_DWORD *)(a2 + 180) & 0x100000) != 0)
  {
LABEL_29:
    int v6 = *(_DWORD *)(a2 + 152);
    *(_DWORD *)(result + 180) = v3 | 0x100000;
    *(_DWORD *)(result + 152) = v6;
  }
LABEL_30:
  if (*(void *)(a2 + 112)) {
    operator new();
  }
  int v7 = *(_DWORD *)(a2 + 180);
  if ((v7 & 0x8000) != 0)
  {
    int v8 = *(_DWORD *)(a2 + 132);
    *(_DWORD *)(result + 180) |= 0x8000u;
    *(_DWORD *)(result + 132) = v8;
    int v7 = *(_DWORD *)(a2 + 180);
  }
  if ((v7 & 0x4000) != 0)
  {
    int v9 = *(_DWORD *)(a2 + 128);
    *(_DWORD *)(result + 180) |= 0x4000u;
    *(_DWORD *)(result + 128) = v9;
  }
  return result;
}

uint64_t sub_227C4C90C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 180);
  if (v5)
  {
    PB::TextFormatter::format(this, "altitude", *(double *)(a1 + 8));
    int v5 = *(_DWORD *)(a1 + 180);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_37;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "course", *(double *)(a1 + 16));
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "courseAccuracy", *(double *)(a1 + 24));
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "deltaDistance", *(double *)(a1 + 32));
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "deltaDistanceAccuracy", *(double *)(a1 + 40));
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 0x4000) == 0)
  {
LABEL_7:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "demConfidence", *(float *)(a1 + 128));
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 0x8000) == 0)
  {
LABEL_8:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "demNumContiguousFlatPoints");
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 0x10000) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "gnssModesOfOperation");
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 0x20) == 0)
  {
LABEL_10:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "horizontalAccuracy", *(double *)(a1 + 48));
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 0x20000) == 0)
  {
LABEL_11:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "horzUncSemiMaj", *(float *)(a1 + 140));
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 0x40000) == 0)
  {
LABEL_12:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_46;
  }
LABEL_45:
  PB::TextFormatter::format(this, "horzUncSemiMajAz", *(float *)(a1 + 144));
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 0x80000) == 0)
  {
LABEL_13:
    if ((v5 & 0x40) == 0) {
      goto LABEL_14;
    }
    goto LABEL_47;
  }
LABEL_46:
  PB::TextFormatter::format(this, "horzUncSemiMin", *(float *)(a1 + 148));
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 0x40) == 0)
  {
LABEL_14:
    if ((v5 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(this, "latitude", *(double *)(a1 + 56));
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 0x80) == 0)
  {
LABEL_15:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(this, "longitude", *(double *)(a1 + 64));
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 0x100000) == 0)
  {
LABEL_16:
    if ((v5 & 0x100) == 0) {
      goto LABEL_17;
    }
    goto LABEL_50;
  }
LABEL_49:
  PB::TextFormatter::format(this, "notificationType");
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 0x100) == 0)
  {
LABEL_17:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_51;
  }
LABEL_50:
  PB::TextFormatter::format(this, "odometer", *(double *)(a1 + 72));
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 0x200000) == 0)
  {
LABEL_18:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_52;
  }
LABEL_51:
  PB::TextFormatter::format(this, "originDevice");
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 0x400000) == 0)
  {
LABEL_19:
    if ((v5 & 0x200) == 0) {
      goto LABEL_20;
    }
    goto LABEL_53;
  }
LABEL_52:
  PB::TextFormatter::format(this, "roadClass");
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 0x200) == 0)
  {
LABEL_20:
    if ((v5 & 0x400) == 0) {
      goto LABEL_21;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(this, "speed", *(double *)(a1 + 80));
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 0x400) == 0)
  {
LABEL_21:
    if ((v5 & 0x800) == 0) {
      goto LABEL_22;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(this, "speedAccuracy", *(double *)(a1 + 88));
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 0x800) == 0)
  {
LABEL_22:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_23;
  }
LABEL_55:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 96));
  if ((*(_DWORD *)(a1 + 180) & 0x1000) != 0) {
LABEL_23:
  }
    PB::TextFormatter::format(this, "timestampGps", *(double *)(a1 + 104));
LABEL_24:
  uint64_t v6 = *(void *)(a1 + 112);
  if (v6) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v6 + 32))(v6, this, "trackRunData");
  }
  int v7 = *(_DWORD *)(a1 + 180);
  if ((v7 & 0x800000) != 0)
  {
    PB::TextFormatter::format(this, "type");
    int v7 = *(_DWORD *)(a1 + 180);
    if ((v7 & 0x1000000) == 0)
    {
LABEL_28:
      if ((v7 & 0x2000000) == 0) {
        goto LABEL_29;
      }
      goto LABEL_59;
    }
  }
  else if ((v7 & 0x1000000) == 0)
  {
    goto LABEL_28;
  }
  PB::TextFormatter::format(this, "undulation", *(float *)(a1 + 168));
  int v7 = *(_DWORD *)(a1 + 180);
  if ((v7 & 0x2000000) == 0)
  {
LABEL_29:
    if ((v7 & 0x2000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_60;
  }
LABEL_59:
  PB::TextFormatter::format(this, "undulationModel");
  int v7 = *(_DWORD *)(a1 + 180);
  if ((v7 & 0x2000) == 0)
  {
LABEL_30:
    if ((v7 & 0x4000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_31;
  }
LABEL_60:
  PB::TextFormatter::format(this, "verticalAccuracy", *(double *)(a1 + 120));
  if ((*(_DWORD *)(a1 + 180) & 0x4000000) != 0) {
LABEL_31:
  }
    PB::TextFormatter::format(this, "wayForm");
LABEL_32:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C4CCE8(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(_DWORD *)(a1 + 180) |= 0x800u;
          unint64_t v20 = *((void *)this + 1);
          if (v20 > 0xFFFFFFFFFFFFFFF7 || v20 + 8 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(void *)(a1 + 96) = *(void *)(*(void *)this + v20);
          goto LABEL_92;
        case 2u:
          *(_DWORD *)(a1 + 180) |= 0x40u;
          unint64_t v22 = *((void *)this + 1);
          if (v22 > 0xFFFFFFFFFFFFFFF7 || v22 + 8 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(void *)(a1 + 56) = *(void *)(*(void *)this + v22);
          goto LABEL_92;
        case 3u:
          *(_DWORD *)(a1 + 180) |= 0x80u;
          unint64_t v23 = *((void *)this + 1);
          if (v23 > 0xFFFFFFFFFFFFFFF7 || v23 + 8 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(void *)(a1 + 64) = *(void *)(*(void *)this + v23);
          goto LABEL_92;
        case 4u:
          *(_DWORD *)(a1 + 180) |= 0x200u;
          unint64_t v24 = *((void *)this + 1);
          if (v24 > 0xFFFFFFFFFFFFFFF7 || v24 + 8 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(void *)(a1 + 80) = *(void *)(*(void *)this + v24);
          goto LABEL_92;
        case 5u:
          *(_DWORD *)(a1 + 180) |= 0x400u;
          unint64_t v25 = *((void *)this + 1);
          if (v25 > 0xFFFFFFFFFFFFFFF7 || v25 + 8 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(void *)(a1 + 88) = *(void *)(*(void *)this + v25);
          goto LABEL_92;
        case 6u:
          *(_DWORD *)(a1 + 180) |= 0x20u;
          unint64_t v26 = *((void *)this + 1);
          if (v26 > 0xFFFFFFFFFFFFFFF7 || v26 + 8 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(void *)(a1 + 48) = *(void *)(*(void *)this + v26);
          goto LABEL_92;
        case 7u:
          *(_DWORD *)(a1 + 180) |= 2u;
          unint64_t v27 = *((void *)this + 1);
          if (v27 > 0xFFFFFFFFFFFFFFF7 || v27 + 8 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v27);
          goto LABEL_92;
        case 8u:
          *(_DWORD *)(a1 + 180) |= 4u;
          unint64_t v28 = *((void *)this + 1);
          if (v28 > 0xFFFFFFFFFFFFFFF7 || v28 + 8 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(void *)(a1 + 24) = *(void *)(*(void *)this + v28);
          goto LABEL_92;
        case 9u:
          *(_DWORD *)(a1 + 180) |= 1u;
          unint64_t v29 = *((void *)this + 1);
          if (v29 > 0xFFFFFFFFFFFFFFF7 || v29 + 8 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v29);
          goto LABEL_92;
        case 0xAu:
          *(_DWORD *)(a1 + 180) |= 0x2000u;
          unint64_t v30 = *((void *)this + 1);
          if (v30 > 0xFFFFFFFFFFFFFFF7 || v30 + 8 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(void *)(a1 + 120) = *(void *)(*(void *)this + v30);
          goto LABEL_92;
        case 0xBu:
          *(_DWORD *)(a1 + 180) |= 0x800000u;
          unint64_t v31 = *((void *)this + 1);
          unint64_t v32 = *((void *)this + 2);
          uint64_t v33 = *(void *)this;
          if (v31 <= 0xFFFFFFFFFFFFFFF5 && v31 + 10 <= v32)
          {
            char v34 = 0;
            unsigned int v35 = 0;
            uint64_t v36 = 0;
            do
            {
              unint64_t v37 = v31 + 1;
              *((void *)this + 1) = v31 + 1;
              char v38 = *(unsigned char *)(v33 + v31);
              v36 |= (unint64_t)(v38 & 0x7F) << v34;
              if ((v38 & 0x80) == 0) {
                goto LABEL_213;
              }
              v34 += 7;
              unint64_t v31 = v37;
              BOOL v14 = v35++ > 8;
            }
            while (!v14);
LABEL_145:
            LODWORD(v36) = 0;
            goto LABEL_213;
          }
          char v105 = 0;
          unsigned int v106 = 0;
          uint64_t v36 = 0;
          if (v32 <= v31) {
            unint64_t v32 = *((void *)this + 1);
          }
          while (2)
          {
            if (v32 == v31)
            {
              LODWORD(v36) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v107 = v31 + 1;
              char v108 = *(unsigned char *)(v33 + v31);
              *((void *)this + 1) = v107;
              v36 |= (unint64_t)(v108 & 0x7F) << v105;
              if (v108 < 0)
              {
                v105 += 7;
                unint64_t v31 = v107;
                BOOL v14 = v106++ > 8;
                if (v14) {
                  goto LABEL_145;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v36) = 0;
              }
            }
            break;
          }
LABEL_213:
          *(_DWORD *)(a1 + 164) = v36;
          goto LABEL_198;
        case 0xCu:
          *(_DWORD *)(a1 + 180) |= 0x1000u;
          unint64_t v39 = *((void *)this + 1);
          if (v39 > 0xFFFFFFFFFFFFFFF7 || v39 + 8 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(void *)(a1 + 104) = *(void *)(*(void *)this + v39);
          goto LABEL_92;
        case 0xDu:
          *(_DWORD *)(a1 + 180) |= 0x1000000u;
          unint64_t v40 = *((void *)this + 1);
          if (v40 > 0xFFFFFFFFFFFFFFFBLL || v40 + 4 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(_DWORD *)(a1 + 168) = *(_DWORD *)(*(void *)this + v40);
          goto LABEL_196;
        case 0xEu:
          *(_DWORD *)(a1 + 180) |= 0x2000000u;
          unint64_t v41 = *((void *)this + 1);
          unint64_t v42 = *((void *)this + 2);
          uint64_t v43 = *(void *)this;
          if (v41 <= 0xFFFFFFFFFFFFFFF5 && v41 + 10 <= v42)
          {
            char v44 = 0;
            unsigned int v45 = 0;
            uint64_t v46 = 0;
            do
            {
              unint64_t v47 = v41 + 1;
              *((void *)this + 1) = v41 + 1;
              char v48 = *(unsigned char *)(v43 + v41);
              v46 |= (unint64_t)(v48 & 0x7F) << v44;
              if ((v48 & 0x80) == 0) {
                goto LABEL_216;
              }
              v44 += 7;
              unint64_t v41 = v47;
              BOOL v14 = v45++ > 8;
            }
            while (!v14);
LABEL_152:
            LODWORD(v46) = 0;
            goto LABEL_216;
          }
          char v109 = 0;
          unsigned int v110 = 0;
          uint64_t v46 = 0;
          if (v42 <= v41) {
            unint64_t v42 = *((void *)this + 1);
          }
          while (2)
          {
            if (v42 == v41)
            {
              LODWORD(v46) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v111 = v41 + 1;
              char v112 = *(unsigned char *)(v43 + v41);
              *((void *)this + 1) = v111;
              v46 |= (unint64_t)(v112 & 0x7F) << v109;
              if (v112 < 0)
              {
                v109 += 7;
                unint64_t v41 = v111;
                BOOL v14 = v110++ > 8;
                if (v14) {
                  goto LABEL_152;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v46) = 0;
              }
            }
            break;
          }
LABEL_216:
          *(_DWORD *)(a1 + 172) = v46;
          goto LABEL_198;
        case 0xFu:
          *(_DWORD *)(a1 + 180) |= 0x20000u;
          unint64_t v49 = *((void *)this + 1);
          if (v49 > 0xFFFFFFFFFFFFFFFBLL || v49 + 4 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(_DWORD *)(a1 + 140) = *(_DWORD *)(*(void *)this + v49);
          goto LABEL_196;
        case 0x10u:
          *(_DWORD *)(a1 + 180) |= 0x80000u;
          unint64_t v50 = *((void *)this + 1);
          if (v50 > 0xFFFFFFFFFFFFFFFBLL || v50 + 4 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(_DWORD *)(a1 + 148) = *(_DWORD *)(*(void *)this + v50);
          goto LABEL_196;
        case 0x11u:
          *(_DWORD *)(a1 + 180) |= 0x40000u;
          unint64_t v51 = *((void *)this + 1);
          if (v51 > 0xFFFFFFFFFFFFFFFBLL || v51 + 4 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(_DWORD *)(a1 + 144) = *(_DWORD *)(*(void *)this + v51);
          goto LABEL_196;
        case 0x12u:
          *(_DWORD *)(a1 + 180) |= 0x100u;
          unint64_t v52 = *((void *)this + 1);
          if (v52 > 0xFFFFFFFFFFFFFFF7 || v52 + 8 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(void *)(a1 + 72) = *(void *)(*(void *)this + v52);
          goto LABEL_92;
        case 0x13u:
          *(_DWORD *)(a1 + 180) |= 8u;
          unint64_t v53 = *((void *)this + 1);
          if (v53 > 0xFFFFFFFFFFFFFFF7 || v53 + 8 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v53);
          goto LABEL_92;
        case 0x14u:
          *(_DWORD *)(a1 + 180) |= 0x10u;
          unint64_t v54 = *((void *)this + 1);
          if (v54 > 0xFFFFFFFFFFFFFFF7 || v54 + 8 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(void *)(a1 + 40) = *(void *)(*(void *)this + v54);
LABEL_92:
          uint64_t v55 = *((void *)this + 1) + 8;
          goto LABEL_197;
        case 0x15u:
          *(_DWORD *)(a1 + 180) |= 0x200000u;
          unint64_t v56 = *((void *)this + 1);
          unint64_t v57 = *((void *)this + 2);
          uint64_t v58 = *(void *)this;
          if (v56 <= 0xFFFFFFFFFFFFFFF5 && v56 + 10 <= v57)
          {
            char v59 = 0;
            unsigned int v60 = 0;
            uint64_t v61 = 0;
            do
            {
              unint64_t v62 = v56 + 1;
              *((void *)this + 1) = v56 + 1;
              char v63 = *(unsigned char *)(v58 + v56);
              v61 |= (unint64_t)(v63 & 0x7F) << v59;
              if ((v63 & 0x80) == 0) {
                goto LABEL_219;
              }
              v59 += 7;
              unint64_t v56 = v62;
              BOOL v14 = v60++ > 8;
            }
            while (!v14);
LABEL_159:
            LODWORD(v61) = 0;
            goto LABEL_219;
          }
          char v113 = 0;
          unsigned int v114 = 0;
          uint64_t v61 = 0;
          if (v57 <= v56) {
            unint64_t v57 = *((void *)this + 1);
          }
          while (2)
          {
            if (v57 == v56)
            {
              LODWORD(v61) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v115 = v56 + 1;
              char v116 = *(unsigned char *)(v58 + v56);
              *((void *)this + 1) = v115;
              v61 |= (unint64_t)(v116 & 0x7F) << v113;
              if (v116 < 0)
              {
                v113 += 7;
                unint64_t v56 = v115;
                BOOL v14 = v114++ > 8;
                if (v14) {
                  goto LABEL_159;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v61) = 0;
              }
            }
            break;
          }
LABEL_219:
          *(_DWORD *)(a1 + 156) = v61;
          goto LABEL_198;
        case 0x16u:
          *(_DWORD *)(a1 + 180) |= 0x4000000u;
          unint64_t v64 = *((void *)this + 1);
          unint64_t v65 = *((void *)this + 2);
          uint64_t v66 = *(void *)this;
          if (v64 <= 0xFFFFFFFFFFFFFFF5 && v64 + 10 <= v65)
          {
            char v67 = 0;
            unsigned int v68 = 0;
            uint64_t v69 = 0;
            do
            {
              unint64_t v70 = v64 + 1;
              *((void *)this + 1) = v64 + 1;
              char v71 = *(unsigned char *)(v66 + v64);
              v69 |= (unint64_t)(v71 & 0x7F) << v67;
              if ((v71 & 0x80) == 0) {
                goto LABEL_222;
              }
              v67 += 7;
              unint64_t v64 = v70;
              BOOL v14 = v68++ > 8;
            }
            while (!v14);
LABEL_166:
            LODWORD(v69) = 0;
            goto LABEL_222;
          }
          char v117 = 0;
          unsigned int v118 = 0;
          uint64_t v69 = 0;
          if (v65 <= v64) {
            unint64_t v65 = *((void *)this + 1);
          }
          while (2)
          {
            if (v65 == v64)
            {
              LODWORD(v69) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v119 = v64 + 1;
              char v120 = *(unsigned char *)(v66 + v64);
              *((void *)this + 1) = v119;
              v69 |= (unint64_t)(v120 & 0x7F) << v117;
              if (v120 < 0)
              {
                v117 += 7;
                unint64_t v64 = v119;
                BOOL v14 = v118++ > 8;
                if (v14) {
                  goto LABEL_166;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v69) = 0;
              }
            }
            break;
          }
LABEL_222:
          *(_DWORD *)(a1 + 176) = v69;
          goto LABEL_198;
        case 0x17u:
          *(_DWORD *)(a1 + 180) |= 0x400000u;
          unint64_t v72 = *((void *)this + 1);
          unint64_t v73 = *((void *)this + 2);
          uint64_t v74 = *(void *)this;
          if (v72 <= 0xFFFFFFFFFFFFFFF5 && v72 + 10 <= v73)
          {
            char v75 = 0;
            unsigned int v76 = 0;
            uint64_t v77 = 0;
            do
            {
              unint64_t v78 = v72 + 1;
              *((void *)this + 1) = v72 + 1;
              char v79 = *(unsigned char *)(v74 + v72);
              v77 |= (unint64_t)(v79 & 0x7F) << v75;
              if ((v79 & 0x80) == 0) {
                goto LABEL_225;
              }
              v75 += 7;
              unint64_t v72 = v78;
              BOOL v14 = v76++ > 8;
            }
            while (!v14);
LABEL_173:
            LODWORD(v77) = 0;
            goto LABEL_225;
          }
          char v121 = 0;
          unsigned int v122 = 0;
          uint64_t v77 = 0;
          if (v73 <= v72) {
            unint64_t v73 = *((void *)this + 1);
          }
          while (2)
          {
            if (v73 == v72)
            {
              LODWORD(v77) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v123 = v72 + 1;
              char v124 = *(unsigned char *)(v74 + v72);
              *((void *)this + 1) = v123;
              v77 |= (unint64_t)(v124 & 0x7F) << v121;
              if (v124 < 0)
              {
                v121 += 7;
                unint64_t v72 = v123;
                BOOL v14 = v122++ > 8;
                if (v14) {
                  goto LABEL_173;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v77) = 0;
              }
            }
            break;
          }
LABEL_225:
          *(_DWORD *)(a1 + 160) = v77;
          goto LABEL_198;
        case 0x18u:
          *(_DWORD *)(a1 + 180) |= 0x10000u;
          unint64_t v80 = *((void *)this + 1);
          unint64_t v81 = *((void *)this + 2);
          uint64_t v82 = *(void *)this;
          if (v80 <= 0xFFFFFFFFFFFFFFF5 && v80 + 10 <= v81)
          {
            char v83 = 0;
            unsigned int v84 = 0;
            uint64_t v85 = 0;
            do
            {
              unint64_t v86 = v80 + 1;
              *((void *)this + 1) = v80 + 1;
              char v87 = *(unsigned char *)(v82 + v80);
              v85 |= (unint64_t)(v87 & 0x7F) << v83;
              if ((v87 & 0x80) == 0) {
                goto LABEL_228;
              }
              v83 += 7;
              unint64_t v80 = v86;
              BOOL v14 = v84++ > 8;
            }
            while (!v14);
LABEL_180:
            LODWORD(v85) = 0;
            goto LABEL_228;
          }
          char v125 = 0;
          unsigned int v126 = 0;
          uint64_t v85 = 0;
          if (v81 <= v80) {
            unint64_t v81 = *((void *)this + 1);
          }
          while (2)
          {
            if (v81 == v80)
            {
              LODWORD(v85) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v127 = v80 + 1;
              char v128 = *(unsigned char *)(v82 + v80);
              *((void *)this + 1) = v127;
              v85 |= (unint64_t)(v128 & 0x7F) << v125;
              if (v128 < 0)
              {
                v125 += 7;
                unint64_t v80 = v127;
                BOOL v14 = v126++ > 8;
                if (v14) {
                  goto LABEL_180;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v85) = 0;
              }
            }
            break;
          }
LABEL_228:
          *(_DWORD *)(a1 + 136) = v85;
          goto LABEL_198;
        case 0x19u:
          *(_DWORD *)(a1 + 180) |= 0x100000u;
          unint64_t v88 = *((void *)this + 1);
          unint64_t v89 = *((void *)this + 2);
          uint64_t v90 = *(void *)this;
          if (v88 <= 0xFFFFFFFFFFFFFFF5 && v88 + 10 <= v89)
          {
            char v91 = 0;
            unsigned int v92 = 0;
            uint64_t v93 = 0;
            do
            {
              unint64_t v94 = v88 + 1;
              *((void *)this + 1) = v88 + 1;
              char v95 = *(unsigned char *)(v90 + v88);
              v93 |= (unint64_t)(v95 & 0x7F) << v91;
              if ((v95 & 0x80) == 0) {
                goto LABEL_231;
              }
              v91 += 7;
              unint64_t v88 = v94;
              BOOL v14 = v92++ > 8;
            }
            while (!v14);
LABEL_187:
            LODWORD(v93) = 0;
            goto LABEL_231;
          }
          char v129 = 0;
          unsigned int v130 = 0;
          uint64_t v93 = 0;
          if (v89 <= v88) {
            unint64_t v89 = *((void *)this + 1);
          }
          while (2)
          {
            if (v89 == v88)
            {
              LODWORD(v93) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v131 = v88 + 1;
              char v132 = *(unsigned char *)(v90 + v88);
              *((void *)this + 1) = v131;
              v93 |= (unint64_t)(v132 & 0x7F) << v129;
              if (v132 < 0)
              {
                v129 += 7;
                unint64_t v88 = v131;
                BOOL v14 = v130++ > 8;
                if (v14) {
                  goto LABEL_187;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v93) = 0;
              }
            }
            break;
          }
LABEL_231:
          *(_DWORD *)(a1 + 152) = v93;
          goto LABEL_198;
        case 0x1Au:
          operator new();
        case 0x1Bu:
          *(_DWORD *)(a1 + 180) |= 0x8000u;
          unint64_t v96 = *((void *)this + 1);
          unint64_t v97 = *((void *)this + 2);
          uint64_t v98 = *(void *)this;
          if (v96 <= 0xFFFFFFFFFFFFFFF5 && v96 + 10 <= v97)
          {
            char v99 = 0;
            unsigned int v100 = 0;
            uint64_t v101 = 0;
            do
            {
              unint64_t v102 = v96 + 1;
              *((void *)this + 1) = v96 + 1;
              char v103 = *(unsigned char *)(v98 + v96);
              v101 |= (unint64_t)(v103 & 0x7F) << v99;
              if ((v103 & 0x80) == 0) {
                goto LABEL_234;
              }
              v99 += 7;
              unint64_t v96 = v102;
              BOOL v14 = v100++ > 8;
            }
            while (!v14);
LABEL_194:
            LODWORD(v101) = 0;
            goto LABEL_234;
          }
          char v133 = 0;
          unsigned int v134 = 0;
          uint64_t v101 = 0;
          if (v97 <= v96) {
            unint64_t v97 = *((void *)this + 1);
          }
          break;
        case 0x1Cu:
          *(_DWORD *)(a1 + 180) |= 0x4000u;
          unint64_t v104 = *((void *)this + 1);
          if (v104 <= 0xFFFFFFFFFFFFFFFBLL && v104 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v104);
LABEL_196:
            uint64_t v55 = *((void *)this + 1) + 4;
LABEL_197:
            *((void *)this + 1) = v55;
          }
          else
          {
LABEL_138:
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_198;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          goto LABEL_198;
      }
      while (1)
      {
        if (v97 == v96)
        {
          LODWORD(v101) = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_234;
        }
        unint64_t v135 = v96 + 1;
        char v136 = *(unsigned char *)(v98 + v96);
        *((void *)this + 1) = v135;
        v101 |= (unint64_t)(v136 & 0x7F) << v133;
        if ((v136 & 0x80) == 0) {
          break;
        }
        v133 += 7;
        unint64_t v96 = v135;
        BOOL v14 = v134++ > 8;
        if (v14) {
          goto LABEL_194;
        }
      }
      if (*((unsigned char *)this + 24)) {
        LODWORD(v101) = 0;
      }
LABEL_234:
      *(_DWORD *)(a1 + 132) = v101;
LABEL_198:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C4DB00(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 180);
  if ((v4 & 0x800) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 96));
    int v4 = *(_DWORD *)(v3 + 180);
    if ((v4 & 0x40) == 0)
    {
LABEL_3:
      if ((v4 & 0x80) == 0) {
        goto LABEL_4;
      }
      goto LABEL_35;
    }
  }
  else if ((v4 & 0x40) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 56));
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x80) == 0)
  {
LABEL_4:
    if ((v4 & 0x200) == 0) {
      goto LABEL_5;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 64));
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x200) == 0)
  {
LABEL_5:
    if ((v4 & 0x400) == 0) {
      goto LABEL_6;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 80));
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x400) == 0)
  {
LABEL_6:
    if ((v4 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 88));
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x20) == 0)
  {
LABEL_7:
    if ((v4 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48));
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 2) == 0)
  {
LABEL_8:
    if ((v4 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 4) == 0)
  {
LABEL_9:
    if ((v4 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24));
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 1) == 0)
  {
LABEL_10:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x2000) == 0)
  {
LABEL_11:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 120));
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x800000) == 0)
  {
LABEL_12:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x1000) == 0)
  {
LABEL_13:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 104));
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_14:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 168));
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_15:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x20000) == 0)
  {
LABEL_16:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 140));
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x80000) == 0)
  {
LABEL_17:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 148));
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x40000) == 0)
  {
LABEL_18:
    if ((v4 & 0x100) == 0) {
      goto LABEL_19;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 144));
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x100) == 0)
  {
LABEL_19:
    if ((v4 & 8) == 0) {
      goto LABEL_20;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 72));
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 8) == 0)
  {
LABEL_20:
    if ((v4 & 0x10) == 0) {
      goto LABEL_21;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32));
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x10) == 0)
  {
LABEL_21:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40));
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x200000) == 0)
  {
LABEL_22:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_23:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x400000) == 0)
  {
LABEL_24:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x10000) == 0)
  {
LABEL_25:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_26;
  }
LABEL_56:
  uint64_t result = PB::Writer::writeVarInt(this);
  if ((*(_DWORD *)(v3 + 180) & 0x100000) != 0) {
LABEL_26:
  }
    uint64_t result = PB::Writer::writeVarInt(this);
LABEL_27:
  int v5 = *(const PB::Base **)(v3 + 112);
  if (v5) {
    uint64_t result = PB::Writer::writeSubmessage(this, v5);
  }
  int v6 = *(_DWORD *)(v3 + 180);
  if ((v6 & 0x8000) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    int v6 = *(_DWORD *)(v3 + 180);
  }
  if ((v6 & 0x4000) != 0)
  {
    float v7 = *(float *)(v3 + 128);
    return PB::Writer::write(this, v7);
  }
  return result;
}

uint64_t sub_227C4DE3C(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC273A8;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void sub_227C4DE64(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C4DE9C(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC273A8;
  *(_DWORD *)(result + 24) = 0;
  char v2 = *(unsigned char *)(a2 + 24);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 24) = 1;
    *(void *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 24);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 24) & 2) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(result + 24) = v3;
    *(_DWORD *)(result + 16) = v5;
    char v2 = *(unsigned char *)(a2 + 24);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 20);
    *(unsigned char *)(result + 24) = v3 | 4;
    *(_DWORD *)(result + 20) = v6;
  }
  return result;
}

uint64_t sub_227C4DF1C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 24);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "event");
    char v5 = *(unsigned char *)(a1 + 24);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((*(unsigned char *)(a1 + 24) & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  if ((*(unsigned char *)(a1 + 24) & 4) != 0) {
LABEL_4:
  }
    PB::TextFormatter::format(this, "value");
LABEL_5:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C4DFC0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 3)
      {
        *(unsigned char *)(a1 + 24) |= 4u;
        unint64_t v21 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v22 = *(void *)this;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
        {
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v25 = 0;
          if (v2 <= v21) {
            unint64_t v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v21)
            {
              LODWORD(v25) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_62;
            }
            unint64_t v36 = v21++;
            char v37 = *(unsigned char *)(v22 + v36);
            *((void *)this + 1) = v21;
            v25 |= (unint64_t)(v37 & 0x7F) << v34;
            if ((v37 & 0x80) == 0) {
              break;
            }
            v34 += 7;
            BOOL v14 = v35++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              goto LABEL_61;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v25) = 0;
          }
LABEL_61:
          unint64_t v2 = v36 + 1;
        }
        else
        {
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          while (1)
          {
            unint64_t v2 = v21 + 1;
            *((void *)this + 1) = v21 + 1;
            char v26 = *(unsigned char *)(v22 + v21);
            v25 |= (unint64_t)(v26 & 0x7F) << v23;
            if ((v26 & 0x80) == 0) {
              break;
            }
            v23 += 7;
            unint64_t v21 = v2;
            BOOL v14 = v24++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              break;
            }
          }
        }
LABEL_62:
        *(_DWORD *)(a1 + 20) = v25;
      }
      else if (v20 == 2)
      {
        *(unsigned char *)(a1 + 24) |= 2u;
        unint64_t v27 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v28 = *(void *)this;
        if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
        {
          char v38 = 0;
          unsigned int v39 = 0;
          uint64_t v31 = 0;
          if (v2 <= v27) {
            unint64_t v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v27)
            {
              LODWORD(v31) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_67;
            }
            unint64_t v40 = v27++;
            char v41 = *(unsigned char *)(v28 + v40);
            *((void *)this + 1) = v27;
            v31 |= (unint64_t)(v41 & 0x7F) << v38;
            if ((v41 & 0x80) == 0) {
              break;
            }
            v38 += 7;
            BOOL v14 = v39++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              goto LABEL_66;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v31) = 0;
          }
LABEL_66:
          unint64_t v2 = v40 + 1;
        }
        else
        {
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v31 = 0;
          while (1)
          {
            unint64_t v2 = v27 + 1;
            *((void *)this + 1) = v27 + 1;
            char v32 = *(unsigned char *)(v28 + v27);
            v31 |= (unint64_t)(v32 & 0x7F) << v29;
            if ((v32 & 0x80) == 0) {
              break;
            }
            v29 += 7;
            unint64_t v27 = v2;
            BOOL v14 = v30++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              break;
            }
          }
        }
LABEL_67:
        *(_DWORD *)(a1 + 16) = v31;
      }
      else if (v20 == 1)
      {
        *(unsigned char *)(a1 + 24) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C4E344(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 24);
  if ((v4 & 1) == 0)
  {
    if ((*(unsigned char *)(result + 24) & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(unsigned char *)(v3 + 24) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
  char v4 = *(unsigned char *)(v3 + 24);
  if ((v4 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v4 & 4) == 0) {
    return result;
  }
LABEL_7:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227C4E3D0(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC273E0;
  *(_DWORD *)(result + 220) = 0;
  return result;
}

void sub_227C4E3F8(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C4E430(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC273E0;
  *(_DWORD *)(result + 220) = 0;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x40000) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 152);
    int v3 = 0x40000;
    *(_DWORD *)(result + 220) = 0x40000;
    *(void *)(result + 152) = v4;
    int v2 = *(_DWORD *)(a2 + 220);
    if ((v2 & 0x100) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 0x100) != 0)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 72);
    v3 |= 0x100u;
    *(_DWORD *)(result + 220) = v3;
    *(void *)(result + 72) = v5;
    int v2 = *(_DWORD *)(a2 + 220);
  }
LABEL_6:
  if ((v2 & 0x200) != 0)
  {
    uint64_t v6 = *(void *)(a2 + 80);
    v3 |= 0x200u;
    *(_DWORD *)(result + 220) = v3;
    *(void *)(result + 80) = v6;
    int v2 = *(_DWORD *)(a2 + 220);
    if ((v2 & 0x10000) == 0)
    {
LABEL_8:
      if ((v2 & 0x20000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_39;
    }
  }
  else if ((v2 & 0x10000) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 136);
  v3 |= 0x10000u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 136) = v7;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x20000) == 0)
  {
LABEL_9:
    if ((v2 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t v8 = *(void *)(a2 + 144);
  v3 |= 0x20000u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 144) = v8;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x80) == 0)
  {
LABEL_10:
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t v9 = *(void *)(a2 + 64);
  v3 |= 0x80u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 64) = v9;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 2) == 0)
  {
LABEL_11:
    if ((v2 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t v10 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 16) = v10;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 4) == 0)
  {
LABEL_12:
    if ((v2 & 1) == 0) {
      goto LABEL_13;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t v11 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 24) = v11;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 1) == 0)
  {
LABEL_13:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t v12 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 8) = v12;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x100000) == 0)
  {
LABEL_14:
    if ((v2 & 0x10000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t v13 = *(void *)(a2 + 168);
  v3 |= 0x100000u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 168) = v13;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_15:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_46;
  }
LABEL_45:
  int v14 = *(_DWORD *)(a2 + 204);
  v3 |= 0x10000000u;
  *(_DWORD *)(result + 220) = v3;
  *(_DWORD *)(result + 204) = v14;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x80000) == 0)
  {
LABEL_16:
    if ((v2 & 0x20000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t v15 = *(void *)(a2 + 160);
  v3 |= 0x80000u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 160) = v15;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x20000000) == 0)
  {
LABEL_17:
    if ((v2 & 0x40000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_48;
  }
LABEL_47:
  int v16 = *(_DWORD *)(a2 + 208);
  v3 |= 0x20000000u;
  *(_DWORD *)(result + 220) = v3;
  *(_DWORD *)(result + 208) = v16;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x40000000) == 0)
  {
LABEL_18:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_49;
  }
LABEL_48:
  int v17 = *(_DWORD *)(a2 + 212);
  v3 |= 0x40000000u;
  *(_DWORD *)(result + 220) = v3;
  *(_DWORD *)(result + 212) = v17;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x200000) == 0)
  {
LABEL_19:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_50;
  }
LABEL_49:
  int v18 = *(_DWORD *)(a2 + 176);
  v3 |= 0x200000u;
  *(_DWORD *)(result + 220) = v3;
  *(_DWORD *)(result + 176) = v18;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x800000) == 0)
  {
LABEL_20:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_51;
  }
LABEL_50:
  int v19 = *(_DWORD *)(a2 + 184);
  v3 |= 0x800000u;
  *(_DWORD *)(result + 220) = v3;
  *(_DWORD *)(result + 184) = v19;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x400000) == 0)
  {
LABEL_21:
    if ((v2 & 0x800) == 0) {
      goto LABEL_22;
    }
    goto LABEL_52;
  }
LABEL_51:
  int v20 = *(_DWORD *)(a2 + 180);
  v3 |= 0x400000u;
  *(_DWORD *)(result + 220) = v3;
  *(_DWORD *)(result + 180) = v20;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x800) == 0)
  {
LABEL_22:
    if ((v2 & 8) == 0) {
      goto LABEL_23;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t v21 = *(void *)(a2 + 96);
  v3 |= 0x800u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 96) = v21;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 8) == 0)
  {
LABEL_23:
    if ((v2 & 0x10) == 0) {
      goto LABEL_24;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t v22 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 32) = v22;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x10) == 0)
  {
LABEL_24:
    if ((v2 & 0x2000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t v23 = *(void *)(a2 + 40);
  v3 |= 0x10u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 40) = v23;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x2000000) == 0)
  {
LABEL_25:
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_56;
  }
LABEL_55:
  int v24 = *(_DWORD *)(a2 + 192);
  v3 |= 0x2000000u;
  *(_DWORD *)(result + 220) = v3;
  *(_DWORD *)(result + 192) = v24;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x8000000) == 0)
  {
LABEL_26:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_57;
  }
LABEL_56:
  int v25 = *(_DWORD *)(a2 + 200);
  v3 |= 0x8000000u;
  *(_DWORD *)(result + 220) = v3;
  *(_DWORD *)(result + 200) = v25;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_27:
    if ((v2 & 0x20) == 0) {
      goto LABEL_28;
    }
    goto LABEL_58;
  }
LABEL_57:
  int v26 = *(_DWORD *)(a2 + 188);
  v3 |= 0x1000000u;
  *(_DWORD *)(result + 220) = v3;
  *(_DWORD *)(result + 188) = v26;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x20) == 0)
  {
LABEL_28:
    if ((v2 & 0x40) == 0) {
      goto LABEL_29;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t v27 = *(void *)(a2 + 48);
  v3 |= 0x20u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 48) = v27;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x40) == 0)
  {
LABEL_29:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_60;
  }
LABEL_59:
  uint64_t v28 = *(void *)(a2 + 56);
  v3 |= 0x40u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 56) = v28;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x8000) == 0)
  {
LABEL_30:
    if ((v2 & 0x400) == 0) {
      goto LABEL_31;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t v29 = *(void *)(a2 + 128);
  v3 |= 0x8000u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 128) = v29;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x400) == 0)
  {
LABEL_31:
    if ((v2 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t v30 = *(void *)(a2 + 88);
  v3 |= 0x400u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 88) = v30;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x80000000) == 0)
  {
LABEL_32:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_63;
  }
LABEL_62:
  char v31 = *(unsigned char *)(a2 + 216);
  v3 |= 0x80000000;
  *(_DWORD *)(result + 220) = v3;
  *(unsigned char *)(result + 216) = v31;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x1000) == 0)
  {
LABEL_33:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_64;
  }
LABEL_63:
  uint64_t v32 = *(void *)(a2 + 104);
  v3 |= 0x1000u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 104) = v32;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x4000) == 0)
  {
LABEL_34:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_65;
  }
LABEL_64:
  uint64_t v33 = *(void *)(a2 + 120);
  v3 |= 0x4000u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 120) = v33;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x2000) == 0)
  {
LABEL_35:
    if ((v2 & 0x4000000) == 0) {
      return result;
    }
LABEL_66:
    int v35 = *(_DWORD *)(a2 + 196);
    *(_DWORD *)(result + 220) = v3 | 0x4000000;
    *(_DWORD *)(result + 196) = v35;
    return result;
  }
LABEL_65:
  uint64_t v34 = *(void *)(a2 + 112);
  v3 |= 0x2000u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 112) = v34;
  if ((*(_DWORD *)(a2 + 220) & 0x4000000) != 0) {
    goto LABEL_66;
  }
  return result;
}

uint64_t sub_227C4E7DC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 220);
  if (v5)
  {
    PB::TextFormatter::format(this, "altitude", *(double *)(a1 + 8));
    int v5 = *(_DWORD *)(a1 + 220);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_39;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "course", *(double *)(a1 + 16));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "courseAccuracy", *(double *)(a1 + 24));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "deltaDistance", *(double *)(a1 + 32));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "deltaDistanceAccuracy", *(double *)(a1 + 40));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "groundAltitude", *(double *)(a1 + 48));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "groundAltitudeUncertainty", *(double *)(a1 + 56));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "horizontalAccuracy", *(double *)(a1 + 64));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x200000) == 0)
  {
LABEL_10:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_46;
  }
LABEL_45:
  PB::TextFormatter::format(this, "horzUncSemiMaj", *(float *)(a1 + 176));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x400000) == 0)
  {
LABEL_11:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_47;
  }
LABEL_46:
  PB::TextFormatter::format(this, "horzUncSemiMajAz", *(float *)(a1 + 180));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x800000) == 0)
  {
LABEL_12:
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(this, "horzUncSemiMin", *(float *)(a1 + 184));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x80000000) == 0)
  {
LABEL_13:
    if ((v5 & 0x100) == 0) {
      goto LABEL_14;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(this, "isPrefilteredLocation");
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x100) == 0)
  {
LABEL_14:
    if ((v5 & 0x200) == 0) {
      goto LABEL_15;
    }
    goto LABEL_50;
  }
LABEL_49:
  PB::TextFormatter::format(this, "latitude", *(double *)(a1 + 72));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x200) == 0)
  {
LABEL_15:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_51;
  }
LABEL_50:
  PB::TextFormatter::format(this, "longitude", *(double *)(a1 + 80));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_16:
    if ((v5 & 0x400) == 0) {
      goto LABEL_17;
    }
    goto LABEL_52;
  }
LABEL_51:
  PB::TextFormatter::format(this, "matchQuality");
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x400) == 0)
  {
LABEL_17:
    if ((v5 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_53;
  }
LABEL_52:
  PB::TextFormatter::format(this, "maxAbsSlope", *(double *)(a1 + 88));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x800) == 0)
  {
LABEL_18:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(this, "odometer", *(double *)(a1 + 96));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_19:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(this, "originDevice");
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x1000) == 0)
  {
LABEL_20:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_56;
  }
LABEL_55:
  PB::TextFormatter::format(this, "rawAltitude", *(double *)(a1 + 104));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x2000) == 0)
  {
LABEL_21:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_57;
  }
LABEL_56:
  PB::TextFormatter::format(this, "rawUndulation", *(double *)(a1 + 112));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_22:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_58;
  }
LABEL_57:
  PB::TextFormatter::format(this, "rawUndulationModel");
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x4000) == 0)
  {
LABEL_23:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_59;
  }
LABEL_58:
  PB::TextFormatter::format(this, "rawVerticalAccuracy", *(double *)(a1 + 120));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_24:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_60;
  }
LABEL_59:
  PB::TextFormatter::format(this, "signalEnvironment");
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x8000) == 0)
  {
LABEL_25:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_61;
  }
LABEL_60:
  PB::TextFormatter::format(this, "slope", *(double *)(a1 + 128));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x10000) == 0)
  {
LABEL_26:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_62;
  }
LABEL_61:
  PB::TextFormatter::format(this, "speed", *(double *)(a1 + 136));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x20000) == 0)
  {
LABEL_27:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_63;
  }
LABEL_62:
  PB::TextFormatter::format(this, "speedAccuracy", *(double *)(a1 + 144));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x40000) == 0)
  {
LABEL_28:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_64;
  }
LABEL_63:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 152));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x80000) == 0)
  {
LABEL_29:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_65;
  }
LABEL_64:
  PB::TextFormatter::format(this, "timestampGps", *(double *)(a1 + 160));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_66;
  }
LABEL_65:
  PB::TextFormatter::format(this, "type");
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v5 & 0x40000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_67;
  }
LABEL_66:
  PB::TextFormatter::format(this, "undulation", *(float *)(a1 + 208));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x40000000) == 0)
  {
LABEL_32:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_33;
  }
LABEL_67:
  PB::TextFormatter::format(this, "undulationModel");
  if ((*(_DWORD *)(a1 + 220) & 0x100000) != 0) {
LABEL_33:
  }
    PB::TextFormatter::format(this, "verticalAccuracy", *(double *)(a1 + 168));
LABEL_34:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C4EC20(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_DWORD *)(a1 + 220) |= 0x40000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 152) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 2u:
              *(_DWORD *)(a1 + 220) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 72) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 3u:
              *(_DWORD *)(a1 + 220) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 80) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 4u:
              *(_DWORD *)(a1 + 220) |= 0x10000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 136) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 5u:
              *(_DWORD *)(a1 + 220) |= 0x20000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 144) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 6u:
              *(_DWORD *)(a1 + 220) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 64) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 7u:
              *(_DWORD *)(a1 + 220) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 8u:
              *(_DWORD *)(a1 + 220) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 9u:
              *(_DWORD *)(a1 + 220) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 0xAu:
              *(_DWORD *)(a1 + 220) |= 0x100000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 168) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 0xBu:
              *(_DWORD *)(a1 + 220) |= 0x10000000u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v59 = 0;
                unsigned int v60 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_200;
                  }
                  unint64_t v61 = v21++;
                  char v62 = *(unsigned char *)(v22 + v61);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v62 & 0x7F) << v59;
                  if ((v62 & 0x80) == 0) {
                    break;
                  }
                  v59 += 7;
                  BOOL v14 = v60++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_199:
                    unint64_t v2 = v61 + 1;
                    goto LABEL_200;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_199;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_200;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_200:
              *(_DWORD *)(a1 + 204) = v25;
              goto LABEL_191;
            case 0xCu:
              *(_DWORD *)(a1 + 220) |= 0x80000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 160) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 0xDu:
              *(_DWORD *)(a1 + 220) |= 0x20000000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(_DWORD *)(a1 + 208) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_83;
            case 0xEu:
              *(_DWORD *)(a1 + 220) |= 0x40000000u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v63 = 0;
                unsigned int v64 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_205;
                  }
                  unint64_t v65 = v27++;
                  char v66 = *(unsigned char *)(v28 + v65);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v66 & 0x7F) << v63;
                  if ((v66 & 0x80) == 0) {
                    break;
                  }
                  v63 += 7;
                  BOOL v14 = v64++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_204:
                    unint64_t v2 = v65 + 1;
                    goto LABEL_205;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_204;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_205;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_205:
              *(_DWORD *)(a1 + 212) = v31;
              goto LABEL_191;
            case 0xFu:
              *(_DWORD *)(a1 + 220) |= 0x200000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(_DWORD *)(a1 + 176) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_83;
            case 0x10u:
              *(_DWORD *)(a1 + 220) |= 0x800000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(_DWORD *)(a1 + 184) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_83;
            case 0x11u:
              *(_DWORD *)(a1 + 220) |= 0x400000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(_DWORD *)(a1 + 180) = *(_DWORD *)(*(void *)this + v2);
LABEL_83:
              unint64_t v2 = *((void *)this + 1) + 4;
              goto LABEL_190;
            case 0x12u:
              *(_DWORD *)(a1 + 220) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 96) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 0x13u:
              *(_DWORD *)(a1 + 220) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 0x14u:
              *(_DWORD *)(a1 + 220) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 0x15u:
              *(_DWORD *)(a1 + 220) |= 0x2000000u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v67 = 0;
                unsigned int v68 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_210;
                  }
                  unint64_t v69 = v33++;
                  char v70 = *(unsigned char *)(v34 + v69);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v70 & 0x7F) << v67;
                  if ((v70 & 0x80) == 0) {
                    break;
                  }
                  v67 += 7;
                  BOOL v14 = v68++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_209:
                    unint64_t v2 = v69 + 1;
                    goto LABEL_210;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_209;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_210;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_210:
              *(_DWORD *)(a1 + 192) = v37;
              goto LABEL_191;
            case 0x16u:
              *(_DWORD *)(a1 + 220) |= 0x8000000u;
              unint64_t v39 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v40 = *(void *)this;
              if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
              {
                char v71 = 0;
                unsigned int v72 = 0;
                uint64_t v43 = 0;
                if (v2 <= v39) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v39)
                  {
                    LODWORD(v43) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_215;
                  }
                  unint64_t v73 = v39++;
                  char v74 = *(unsigned char *)(v40 + v73);
                  *((void *)this + 1) = v39;
                  v43 |= (unint64_t)(v74 & 0x7F) << v71;
                  if ((v74 & 0x80) == 0) {
                    break;
                  }
                  v71 += 7;
                  BOOL v14 = v72++ > 8;
                  if (v14)
                  {
                    LODWORD(v43) = 0;
LABEL_214:
                    unint64_t v2 = v73 + 1;
                    goto LABEL_215;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v43) = 0;
                }
                goto LABEL_214;
              }
              char v41 = 0;
              unsigned int v42 = 0;
              uint64_t v43 = 0;
              do
              {
                unint64_t v2 = v39 + 1;
                *((void *)this + 1) = v39 + 1;
                char v44 = *(unsigned char *)(v40 + v39);
                v43 |= (unint64_t)(v44 & 0x7F) << v41;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_215;
                }
                v41 += 7;
                unint64_t v39 = v2;
                BOOL v14 = v42++ > 8;
              }
              while (!v14);
              LODWORD(v43) = 0;
LABEL_215:
              *(_DWORD *)(a1 + 200) = v43;
              goto LABEL_191;
            case 0x17u:
              *(_DWORD *)(a1 + 220) |= 0x1000000u;
              unint64_t v45 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v46 = *(void *)this;
              if (v45 > 0xFFFFFFFFFFFFFFF5 || v45 + 10 > v2)
              {
                char v75 = 0;
                unsigned int v76 = 0;
                uint64_t v49 = 0;
                if (v2 <= v45) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v45)
                  {
                    LODWORD(v49) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_220;
                  }
                  unint64_t v77 = v45++;
                  char v78 = *(unsigned char *)(v46 + v77);
                  *((void *)this + 1) = v45;
                  v49 |= (unint64_t)(v78 & 0x7F) << v75;
                  if ((v78 & 0x80) == 0) {
                    break;
                  }
                  v75 += 7;
                  BOOL v14 = v76++ > 8;
                  if (v14)
                  {
                    LODWORD(v49) = 0;
LABEL_219:
                    unint64_t v2 = v77 + 1;
                    goto LABEL_220;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v49) = 0;
                }
                goto LABEL_219;
              }
              char v47 = 0;
              unsigned int v48 = 0;
              uint64_t v49 = 0;
              do
              {
                unint64_t v2 = v45 + 1;
                *((void *)this + 1) = v45 + 1;
                char v50 = *(unsigned char *)(v46 + v45);
                v49 |= (unint64_t)(v50 & 0x7F) << v47;
                if ((v50 & 0x80) == 0) {
                  goto LABEL_220;
                }
                v47 += 7;
                unint64_t v45 = v2;
                BOOL v14 = v48++ > 8;
              }
              while (!v14);
              LODWORD(v49) = 0;
LABEL_220:
              *(_DWORD *)(a1 + 188) = v49;
              goto LABEL_191;
            case 0x18u:
              *(_DWORD *)(a1 + 220) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 0x19u:
              *(_DWORD *)(a1 + 220) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 56) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 0x1Au:
              *(_DWORD *)(a1 + 220) |= 0x8000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 128) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 0x1Bu:
              *(_DWORD *)(a1 + 220) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 88) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 0x1Cu:
              *(_DWORD *)(a1 + 220) |= 0x80000000;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v52 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v51 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v52 = v51 != 0;
              }
              *(unsigned char *)(a1 + 216) = v52;
              goto LABEL_191;
            case 0x1Du:
              *(_DWORD *)(a1 + 220) |= 0x1000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 104) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 0x1Eu:
              *(_DWORD *)(a1 + 220) |= 0x4000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 120) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 0x1Fu:
              *(_DWORD *)(a1 + 220) |= 0x2000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 112) = *(void *)(*(void *)this + v2);
LABEL_189:
                unint64_t v2 = *((void *)this + 1) + 8;
LABEL_190:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_136:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_191;
            case 0x20u:
              *(_DWORD *)(a1 + 220) |= 0x4000000u;
              unint64_t v53 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v54 = *(void *)this;
              if (v53 > 0xFFFFFFFFFFFFFFF5 || v53 + 10 > v2)
              {
                char v79 = 0;
                unsigned int v80 = 0;
                uint64_t v57 = 0;
                if (v2 <= v53) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v53)
                  {
                    LODWORD(v57) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_225;
                  }
                  unint64_t v81 = v53++;
                  char v82 = *(unsigned char *)(v54 + v81);
                  *((void *)this + 1) = v53;
                  v57 |= (unint64_t)(v82 & 0x7F) << v79;
                  if ((v82 & 0x80) == 0) {
                    break;
                  }
                  v79 += 7;
                  BOOL v14 = v80++ > 8;
                  if (v14)
                  {
                    LODWORD(v57) = 0;
LABEL_224:
                    unint64_t v2 = v81 + 1;
                    goto LABEL_225;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v57) = 0;
                }
                goto LABEL_224;
              }
              char v55 = 0;
              unsigned int v56 = 0;
              uint64_t v57 = 0;
              do
              {
                unint64_t v2 = v53 + 1;
                *((void *)this + 1) = v53 + 1;
                char v58 = *(unsigned char *)(v54 + v53);
                v57 |= (unint64_t)(v58 & 0x7F) << v55;
                if ((v58 & 0x80) == 0) {
                  goto LABEL_225;
                }
                v55 += 7;
                unint64_t v53 = v2;
                BOOL v14 = v56++ > 8;
              }
              while (!v14);
              LODWORD(v57) = 0;
LABEL_225:
              *(_DWORD *)(a1 + 196) = v57;
LABEL_191:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_191;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C4F988(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 220);
  if ((v4 & 0x40000) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 152));
    int v4 = *(_DWORD *)(v3 + 220);
    if ((v4 & 0x100) == 0)
    {
LABEL_3:
      if ((v4 & 0x200) == 0) {
        goto LABEL_4;
      }
      goto LABEL_36;
    }
  }
  else if ((v4 & 0x100) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 72));
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x200) == 0)
  {
LABEL_4:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 80));
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x10000) == 0)
  {
LABEL_5:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 136));
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x20000) == 0)
  {
LABEL_6:
    if ((v4 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 144));
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x80) == 0)
  {
LABEL_7:
    if ((v4 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 64));
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 2) == 0)
  {
LABEL_8:
    if ((v4 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 4) == 0)
  {
LABEL_9:
    if ((v4 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24));
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 1) == 0)
  {
LABEL_10:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x100000) == 0)
  {
LABEL_11:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 168));
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_12:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x80000) == 0)
  {
LABEL_13:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 160));
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_14:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 208));
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x40000000) == 0)
  {
LABEL_15:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x200000) == 0)
  {
LABEL_16:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 176));
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x800000) == 0)
  {
LABEL_17:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 184));
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x400000) == 0)
  {
LABEL_18:
    if ((v4 & 0x800) == 0) {
      goto LABEL_19;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 180));
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x800) == 0)
  {
LABEL_19:
    if ((v4 & 8) == 0) {
      goto LABEL_20;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 96));
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 8) == 0)
  {
LABEL_20:
    if ((v4 & 0x10) == 0) {
      goto LABEL_21;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32));
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x10) == 0)
  {
LABEL_21:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40));
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_22:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_23:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_24:
    if ((v4 & 0x20) == 0) {
      goto LABEL_25;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x20) == 0)
  {
LABEL_25:
    if ((v4 & 0x40) == 0) {
      goto LABEL_26;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48));
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x40) == 0)
  {
LABEL_26:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 56));
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x8000) == 0)
  {
LABEL_27:
    if ((v4 & 0x400) == 0) {
      goto LABEL_28;
    }
    goto LABEL_60;
  }
LABEL_59:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 128));
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x400) == 0)
  {
LABEL_28:
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 88));
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x80000000) == 0)
  {
LABEL_29:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x1000) == 0)
  {
LABEL_30:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 104));
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x4000) == 0)
  {
LABEL_31:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_32;
    }
LABEL_64:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 112));
    if ((*(_DWORD *)(v3 + 220) & 0x4000000) == 0) {
      return result;
    }
    goto LABEL_65;
  }
LABEL_63:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 120));
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x2000) != 0) {
    goto LABEL_64;
  }
LABEL_32:
  if ((v4 & 0x4000000) == 0) {
    return result;
  }
LABEL_65:

  return PB::Writer::writeVarInt(this);
}

double sub_227C4FD40(uint64_t a1)
{
  *(void *)a1 = &unk_26DC27418;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return result;
}

void sub_227C4FD70(PB::Base *this)
{
  *(void *)this = &unk_26DC27418;
  unint64_t v2 = (void *)*((void *)this + 4);
  if (v2)
  {
    *((void *)this + 5) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 2) = v3;
    operator delete(v3);
  }

  PB::Base::~Base(this);
}

void sub_227C4FDE4(PB::Base *a1)
{
  sub_227C4FD70(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C4FE1C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC27418;
  *(_OWORD *)(a1 + 8) = 0u;
  uint64_t v3 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  if (a1 != a2)
  {
    sub_227B8B74C(v3, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
    sub_227B8B74C((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 3);
  }
  return a1;
}

uint64_t sub_227C4FEA8(void *a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = (double *)a1[1];
  uint64_t v6 = (double *)a1[2];
  while (v5 != v6)
  {
    double v7 = *v5++;
    PB::TextFormatter::format(this, "loiAltitude", v7);
  }
  uint64_t v8 = (double *)a1[4];
  char v9 = (double *)a1[5];
  while (v8 != v9)
  {
    double v10 = *v8++;
    PB::TextFormatter::format(this, "loiVerticalUncertainty", v10);
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227C4FF54(void *a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = (void **)(a1 + 4);
    uint64_t v9 = (uint64_t)(a1 + 6);
    double v10 = (void **)(a1 + 1);
    uint64_t v11 = (uint64_t)(a1 + 3);
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        unint64_t v15 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v21 = v2 + 1;
          char v22 = *(unsigned char *)(v12 + v2);
          *((void *)this + 1) = v21;
          v15 |= (unint64_t)(v22 & 0x7F) << v19;
          if ((v22 & 0x80) == 0) {
            goto LABEL_21;
          }
          v19 += 7;
          unint64_t v2 = v21;
          if (v20++ >= 9)
          {
LABEL_20:
            unint64_t v15 = 0;
            goto LABEL_21;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
        return v4 == 0;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        if (v14++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v24 = v15 & 7;
      if (v24 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v15 >> 3) == 2) {
        break;
      }
      if ((v15 >> 3) == 1)
      {
        if (v24 != 2)
        {
          uint64_t v54 = (char *)a1[2];
          unint64_t v53 = a1[3];
          if ((unint64_t)v54 >= v53)
          {
            char v58 = (char *)*v10;
            uint64_t v59 = (v54 - (unsigned char *)*v10) >> 3;
            unint64_t v60 = v59 + 1;
            if ((unint64_t)(v59 + 1) >> 61) {
LABEL_122:
            }
              sub_227B8B89C();
            uint64_t v61 = v53 - (void)v58;
            if (v61 >> 2 > v60) {
              unint64_t v60 = v61 >> 2;
            }
            if ((unint64_t)v61 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v62 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v62 = v60;
            }
            if (v62)
            {
              char v63 = (char *)sub_227B8B8B4(v11, v62);
              char v58 = (char *)a1[1];
              uint64_t v54 = (char *)a1[2];
            }
            else
            {
              char v63 = 0;
            }
            char v70 = &v63[8 * v59];
            *(void *)char v70 = 0;
            char v55 = v70 + 8;
            while (v54 != v58)
            {
              uint64_t v71 = *((void *)v54 - 1);
              v54 -= 8;
              *((void *)v70 - 1) = v71;
              v70 -= 8;
            }
            a1[1] = v70;
            a1[2] = v55;
            a1[3] = &v63[8 * v62];
            if (v58) {
              operator delete(v58);
            }
          }
          else
          {
            *(void *)uint64_t v54 = 0;
            char v55 = v54 + 8;
          }
          a1[2] = v55;
LABEL_110:
          unint64_t v74 = *((void *)this + 1);
          if (v74 <= 0xFFFFFFFFFFFFFFF7 && v74 + 8 <= *((void *)this + 2))
          {
            *(v55 - 1) = *(void *)(*(void *)this + v74);
            *((void *)this + 1) += 8;
          }
          else
          {
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_114;
        }
        if (PB::Reader::placeMark()) {
          return 0;
        }
        unint64_t v25 = *((void *)this + 1);
        unint64_t v26 = *((void *)this + 2);
        while (v25 < v26 && !*((unsigned char *)this + 24))
        {
          uint64_t v28 = (char *)a1[2];
          unint64_t v27 = a1[3];
          if ((unint64_t)v28 >= v27)
          {
            unsigned int v30 = (char *)*v10;
            uint64_t v31 = (v28 - (unsigned char *)*v10) >> 3;
            unint64_t v32 = v31 + 1;
            if ((unint64_t)(v31 + 1) >> 61) {
              goto LABEL_122;
            }
            uint64_t v33 = v27 - (void)v30;
            if (v33 >> 2 > v32) {
              unint64_t v32 = v33 >> 2;
            }
            if ((unint64_t)v33 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v34 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v34 = v32;
            }
            if (v34)
            {
              char v35 = (char *)sub_227B8B8B4(v11, v34);
              unsigned int v30 = (char *)a1[1];
              uint64_t v28 = (char *)a1[2];
            }
            else
            {
              char v35 = 0;
            }
            unsigned int v36 = &v35[8 * v31];
            *(void *)unsigned int v36 = 0;
            char v29 = v36 + 8;
            while (v28 != v30)
            {
              uint64_t v37 = *((void *)v28 - 1);
              v28 -= 8;
              *((void *)v36 - 1) = v37;
              v36 -= 8;
            }
            a1[1] = v36;
            a1[2] = v29;
            a1[3] = &v35[8 * v34];
            if (v30) {
              operator delete(v30);
            }
          }
          else
          {
            *(void *)uint64_t v28 = 0;
            char v29 = v28 + 8;
          }
          a1[2] = v29;
          unint64_t v38 = *((void *)this + 1);
          if (v38 > 0xFFFFFFFFFFFFFFF7 || v38 + 8 > *((void *)this + 2)) {
            goto LABEL_78;
          }
          *(v29 - 1) = *(void *)(*(void *)this + v38);
          unint64_t v26 = *((void *)this + 2);
          unint64_t v25 = *((void *)this + 1) + 8;
          *((void *)this + 1) = v25;
        }
LABEL_79:
        PB::Reader::recallMark();
        goto LABEL_114;
      }
      if ((PB::Reader::skip(this) & 1) == 0) {
        return 0;
      }
LABEL_114:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    if (v24 != 2)
    {
      uint64_t v57 = (char *)a1[5];
      unint64_t v56 = a1[6];
      if ((unint64_t)v57 >= v56)
      {
        unsigned int v64 = (char *)*v8;
        uint64_t v65 = (v57 - (unsigned char *)*v8) >> 3;
        unint64_t v66 = v65 + 1;
        if ((unint64_t)(v65 + 1) >> 61) {
LABEL_123:
        }
          sub_227B8B89C();
        uint64_t v67 = v56 - (void)v64;
        if (v67 >> 2 > v66) {
          unint64_t v66 = v67 >> 2;
        }
        if ((unint64_t)v67 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v68 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v68 = v66;
        }
        if (v68)
        {
          unint64_t v69 = (char *)sub_227B8B8B4(v9, v68);
          unsigned int v64 = (char *)a1[4];
          uint64_t v57 = (char *)a1[5];
        }
        else
        {
          unint64_t v69 = 0;
        }
        unsigned int v72 = &v69[8 * v65];
        *(void *)unsigned int v72 = 0;
        char v55 = v72 + 8;
        while (v57 != v64)
        {
          uint64_t v73 = *((void *)v57 - 1);
          v57 -= 8;
          *((void *)v72 - 1) = v73;
          v72 -= 8;
        }
        a1[4] = v72;
        a1[5] = v55;
        a1[6] = &v69[8 * v68];
        if (v64) {
          operator delete(v64);
        }
      }
      else
      {
        *(void *)uint64_t v57 = 0;
        char v55 = v57 + 8;
      }
      a1[5] = v55;
      goto LABEL_110;
    }
    if (PB::Reader::placeMark()) {
      return 0;
    }
    unint64_t v39 = *((void *)this + 1);
    unint64_t v40 = *((void *)this + 2);
    while (v39 < v40 && !*((unsigned char *)this + 24))
    {
      unsigned int v42 = (char *)a1[5];
      unint64_t v41 = a1[6];
      if ((unint64_t)v42 >= v41)
      {
        char v44 = (char *)*v8;
        uint64_t v45 = (v42 - (unsigned char *)*v8) >> 3;
        unint64_t v46 = v45 + 1;
        if ((unint64_t)(v45 + 1) >> 61) {
          goto LABEL_123;
        }
        uint64_t v47 = v41 - (void)v44;
        if (v47 >> 2 > v46) {
          unint64_t v46 = v47 >> 2;
        }
        if ((unint64_t)v47 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v48 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v48 = v46;
        }
        if (v48)
        {
          uint64_t v49 = (char *)sub_227B8B8B4(v9, v48);
          char v44 = (char *)a1[4];
          unsigned int v42 = (char *)a1[5];
        }
        else
        {
          uint64_t v49 = 0;
        }
        char v50 = &v49[8 * v45];
        *(void *)char v50 = 0;
        uint64_t v43 = v50 + 8;
        while (v42 != v44)
        {
          uint64_t v51 = *((void *)v42 - 1);
          v42 -= 8;
          *((void *)v50 - 1) = v51;
          v50 -= 8;
        }
        a1[4] = v50;
        a1[5] = v43;
        a1[6] = &v49[8 * v48];
        if (v44) {
          operator delete(v44);
        }
      }
      else
      {
        *(void *)unsigned int v42 = 0;
        uint64_t v43 = v42 + 8;
      }
      a1[5] = v43;
      unint64_t v52 = *((void *)this + 1);
      if (v52 > 0xFFFFFFFFFFFFFFF7 || v52 + 8 > *((void *)this + 2))
      {
LABEL_78:
        *((unsigned char *)this + 24) = 1;
        goto LABEL_79;
      }
      *(v43 - 1) = *(void *)(*(void *)this + v52);
      unint64_t v40 = *((void *)this + 2);
      unint64_t v39 = *((void *)this + 1) + 8;
      *((void *)this + 1) = v39;
    }
    goto LABEL_79;
  }
  return v4 == 0;
}

uint64_t sub_227C50488(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(double **)(result + 8);
  int v5 = *(double **)(result + 16);
  while (v4 != v5)
  {
    double v6 = *v4++;
    double result = PB::Writer::write(this, v6);
  }
  uint64_t v8 = *(double **)(v3 + 32);
  double v7 = *(double **)(v3 + 40);
  while (v8 != v7)
  {
    double v9 = *v8++;
    double result = PB::Writer::write(this, v9);
  }
  return result;
}

uint64_t sub_227C504F4(uint64_t result)
{
  *(void *)double result = &unk_26DC27450;
  *(_DWORD *)(result + 84) = -1;
  *(_DWORD *)(result + 92) = 0;
  return result;
}

void sub_227C50524(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C5055C(uint64_t result, uint64_t a2)
{
  *(void *)double result = &unk_26DC27450;
  *(_DWORD *)(result + 84) = -1;
  *(_DWORD *)(result + 92) = 0;
  __int16 v2 = *(_WORD *)(a2 + 92);
  if ((v2 & 0x40) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 56);
    __int16 v3 = 64;
    *(_WORD *)(result + 92) = 64;
    *(void *)(result + 56) = v4;
    __int16 v2 = *(_WORD *)(a2 + 92);
    if ((v2 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 0x20) != 0)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 48);
    v3 |= 0x20u;
    *(_WORD *)(result + 92) = v3;
    *(void *)(result + 48) = v5;
    __int16 v2 = *(_WORD *)(a2 + 92);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    uint64_t v6 = *(void *)(a2 + 24);
    v3 |= 4u;
    *(_WORD *)(result + 92) = v3;
    *(void *)(result + 24) = v6;
    __int16 v2 = *(_WORD *)(a2 + 92);
    if ((v2 & 1) == 0)
    {
LABEL_8:
      if ((v2 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_19;
    }
  }
  else if ((v2 & 1) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(result + 92) = v3;
  *(void *)(result + 8) = v7;
  __int16 v2 = *(_WORD *)(a2 + 92);
  if ((v2 & 0x10) == 0)
  {
LABEL_9:
    if ((v2 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v8 = *(void *)(a2 + 40);
  v3 |= 0x10u;
  *(_WORD *)(result + 92) = v3;
  *(void *)(result + 40) = v8;
  __int16 v2 = *(_WORD *)(a2 + 92);
  if ((v2 & 0x200) == 0)
  {
LABEL_10:
    if ((v2 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_21;
  }
LABEL_20:
  int v9 = *(_DWORD *)(a2 + 80);
  v3 |= 0x200u;
  *(_WORD *)(result + 92) = v3;
  *(_DWORD *)(result + 80) = v9;
  __int16 v2 = *(_WORD *)(a2 + 92);
  if ((v2 & 0x100) == 0)
  {
LABEL_11:
    if ((v2 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t v10 = *(void *)(a2 + 72);
  v3 |= 0x100u;
  *(_WORD *)(result + 92) = v3;
  *(void *)(result + 72) = v10;
  __int16 v2 = *(_WORD *)(a2 + 92);
  if ((v2 & 0x80) == 0)
  {
LABEL_12:
    if ((v2 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t v11 = *(void *)(a2 + 64);
  v3 |= 0x80u;
  *(_WORD *)(result + 92) = v3;
  *(void *)(result + 64) = v11;
  __int16 v2 = *(_WORD *)(a2 + 92);
  if ((v2 & 2) == 0)
  {
LABEL_13:
    if ((v2 & 0x400) == 0) {
      goto LABEL_14;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v12 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(result + 92) = v3;
  *(void *)(result + 16) = v12;
  __int16 v2 = *(_WORD *)(a2 + 92);
  if ((v2 & 0x400) == 0)
  {
LABEL_14:
    if ((v2 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v13 = *(_DWORD *)(a2 + 84);
  v3 |= 0x400u;
  *(_WORD *)(result + 92) = v3;
  *(_DWORD *)(result + 84) = v13;
  __int16 v2 = *(_WORD *)(a2 + 92);
  if ((v2 & 8) == 0)
  {
LABEL_15:
    if ((v2 & 0x800) == 0) {
      return result;
    }
LABEL_26:
    char v15 = *(unsigned char *)(a2 + 88);
    *(_WORD *)(result + 92) = v3 | 0x800;
    *(unsigned char *)(result + 88) = v15;
    return result;
  }
LABEL_25:
  uint64_t v14 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_WORD *)(result + 92) = v3;
  *(void *)(result + 32) = v14;
  if ((*(_WORD *)(a2 + 92) & 0x800) != 0) {
    goto LABEL_26;
  }
  return result;
}

uint64_t sub_227C506E0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 92);
  if (v5)
  {
    PB::TextFormatter::format(this, "arrivalDate", *(double *)(a1 + 8));
    __int16 v5 = *(_WORD *)(a1 + 92);
    if ((v5 & 0x200) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((*(_WORD *)(a1 + 92) & 0x200) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "confidence");
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 2) == 0)
  {
LABEL_4:
    if ((v5 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "confidenceOfGeoLocation", *(double *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 4) == 0)
  {
LABEL_5:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "departureDate", *(double *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 8) == 0)
  {
LABEL_6:
    if ((v5 & 0x800) == 0) {
      goto LABEL_7;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "distanceToLoi", *(double *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 0x800) == 0)
  {
LABEL_7:
    if ((v5 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "hashedLatLong");
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 0x10) == 0)
  {
LABEL_8:
    if ((v5 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "horizontalAccuracy", *(double *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 0x20) == 0)
  {
LABEL_9:
    if ((v5 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "latitude", *(double *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 0x40) == 0)
  {
LABEL_10:
    if ((v5 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "longitude", *(double *)(a1 + 56));
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 0x400) == 0)
  {
LABEL_11:
    if ((v5 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "type");
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 0x80) == 0)
  {
LABEL_12:
    if ((v5 & 0x100) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_27:
  PB::TextFormatter::format(this, "uncertaintyOfGeoLocation", *(double *)(a1 + 64));
  if ((*(_WORD *)(a1 + 92) & 0x100) != 0) {
LABEL_13:
  }
    PB::TextFormatter::format(this, "withinDistance", *(double *)(a1 + 72));
LABEL_14:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C508A4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 92) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 56) = *(void *)(*(void *)this + v2);
              goto LABEL_84;
            case 2u:
              *(_WORD *)(a1 + 92) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
              goto LABEL_84;
            case 3u:
              *(_WORD *)(a1 + 92) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
              goto LABEL_84;
            case 4u:
              *(_WORD *)(a1 + 92) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_84;
            case 5u:
              *(_WORD *)(a1 + 92) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
              goto LABEL_84;
            case 6u:
              *(_WORD *)(a1 + 92) |= 0x200u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v35 = 0;
                unsigned int v36 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_89;
                  }
                  unint64_t v37 = v21++;
                  char v38 = *(unsigned char *)(v22 + v37);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v38 & 0x7F) << v35;
                  if ((v38 & 0x80) == 0) {
                    break;
                  }
                  v35 += 7;
                  BOOL v14 = v36++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_88:
                    unint64_t v2 = v37 + 1;
                    goto LABEL_89;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_88;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_89;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_89:
              *(_DWORD *)(a1 + 80) = v25;
              goto LABEL_95;
            case 7u:
              *(_WORD *)(a1 + 92) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 72) = *(void *)(*(void *)this + v2);
              goto LABEL_84;
            case 8u:
              *(_WORD *)(a1 + 92) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 64) = *(void *)(*(void *)this + v2);
              goto LABEL_84;
            case 9u:
              *(_WORD *)(a1 + 92) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_84;
            case 0xAu:
              *(_WORD *)(a1 + 92) |= 0x400u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v39 = 0;
                unsigned int v40 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_94;
                  }
                  unint64_t v41 = v27++;
                  char v42 = *(unsigned char *)(v28 + v41);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v42 & 0x7F) << v39;
                  if ((v42 & 0x80) == 0) {
                    break;
                  }
                  v39 += 7;
                  BOOL v14 = v40++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_93:
                    unint64_t v2 = v41 + 1;
                    goto LABEL_94;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_93;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_94;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_94:
              *(_DWORD *)(a1 + 84) = v31;
LABEL_95:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 0xBu:
              *(_WORD *)(a1 + 92) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
LABEL_84:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_64:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_95;
            case 0xCu:
              *(_WORD *)(a1 + 92) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v34 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v33 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v34 = v33 != 0;
              }
              *(unsigned char *)(a1 + 88) = v34;
              goto LABEL_95;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_95;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C50E70(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 92);
  if ((v4 & 0x40) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 56));
    __int16 v4 = *(_WORD *)(v3 + 92);
    if ((v4 & 0x20) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v4 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48));
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24));
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 1) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 0x200) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40));
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 0x200) == 0)
  {
LABEL_7:
    if ((v4 & 0x100) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 0x100) == 0)
  {
LABEL_8:
    if ((v4 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 72));
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 0x80) == 0)
  {
LABEL_9:
    if ((v4 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 64));
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 2) == 0)
  {
LABEL_10:
    if ((v4 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 0x400) == 0)
  {
LABEL_11:
    if ((v4 & 8) == 0) {
      goto LABEL_12;
    }
LABEL_24:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32));
    if ((*(_WORD *)(v3 + 92) & 0x800) == 0) {
      return result;
    }
    goto LABEL_25;
  }
LABEL_23:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 8) != 0) {
    goto LABEL_24;
  }
LABEL_12:
  if ((v4 & 0x800) == 0) {
    return result;
  }
LABEL_25:

  return PB::Writer::write(this);
}

void *sub_227C50FF8(void *result)
{
  *uint64_t result = &unk_26DC27488;
  result[4] = 0;
  result[24] = 0;
  return result;
}

void sub_227C51020(PB::Base *this)
{
  *(void *)this = &unk_26DC27488;
  uint64_t v2 = *((void *)this + 4);
  *((void *)this + 4) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C510A4(PB::Base *a1)
{
  sub_227C51020(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C510DC(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC27488;
  *(void *)(result + 32) = 0;
  *(void *)(result + 192) = 0;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x8000) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 100);
    uint64_t v3 = 0x8000;
    *(void *)(result + 192) = 0x8000;
    *(_DWORD *)(result + 100) = v4;
    uint64_t v2 = *(void *)(a2 + 192);
    if ((v2 & 0x100) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v3 = 0;
  if ((v2 & 0x100) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 72);
    v3 |= 0x100uLL;
    *(void *)(result + 192) = v3;
    *(_DWORD *)(result + 72) = v5;
    uint64_t v2 = *(void *)(a2 + 192);
  }
LABEL_6:
  if ((v2 & 0x10000) != 0)
  {
    int v9 = *(_DWORD *)(a2 + 104);
    v3 |= 0x10000uLL;
    *(void *)(result + 192) = v3;
    *(_DWORD *)(result + 104) = v9;
    uint64_t v2 = *(void *)(a2 + 192);
    if ((v2 & 0x20000) == 0)
    {
LABEL_8:
      if ((v2 & 0x800) == 0) {
        goto LABEL_9;
      }
      goto LABEL_49;
    }
  }
  else if ((v2 & 0x20000) == 0)
  {
    goto LABEL_8;
  }
  int v10 = *(_DWORD *)(a2 + 108);
  v3 |= 0x20000uLL;
  *(void *)(result + 192) = v3;
  *(_DWORD *)(result + 108) = v10;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x800) == 0)
  {
LABEL_9:
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_50;
  }
LABEL_49:
  int v11 = *(_DWORD *)(a2 + 84);
  v3 |= 0x800uLL;
  *(void *)(result + 192) = v3;
  *(_DWORD *)(result + 84) = v11;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x8000000) == 0)
  {
LABEL_10:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_51;
  }
LABEL_50:
  int v12 = *(_DWORD *)(a2 + 148);
  v3 |= 0x8000000uLL;
  *(void *)(result + 192) = v3;
  *(_DWORD *)(result + 148) = v12;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x2000) == 0)
  {
LABEL_11:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_52;
  }
LABEL_51:
  int v13 = *(_DWORD *)(a2 + 92);
  v3 |= 0x2000uLL;
  *(void *)(result + 192) = v3;
  *(_DWORD *)(result + 92) = v13;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x1000) == 0)
  {
LABEL_12:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_53;
  }
LABEL_52:
  int v14 = *(_DWORD *)(a2 + 88);
  v3 |= 0x1000uLL;
  *(void *)(result + 192) = v3;
  *(_DWORD *)(result + 88) = v14;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_13:
    if ((v2 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_54;
  }
LABEL_53:
  int v15 = *(_DWORD *)(a2 + 136);
  v3 |= 0x1000000uLL;
  *(void *)(result + 192) = v3;
  *(_DWORD *)(result + 136) = v15;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 8) == 0)
  {
LABEL_14:
    if ((v2 & 1) == 0) {
      goto LABEL_15;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t v16 = *(void *)(a2 + 40);
  v3 |= 8uLL;
  *(void *)(result + 192) = v3;
  *(void *)(result + 40) = v16;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 1) == 0)
  {
LABEL_15:
    if ((v2 & 4) == 0) {
      goto LABEL_16;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t v17 = *(void *)(a2 + 8);
  v3 |= 1uLL;
  *(void *)(result + 192) = v3;
  *(void *)(result + 8) = v17;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 4) == 0)
  {
LABEL_16:
    if ((v2 & 2) == 0) {
      goto LABEL_17;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t v18 = *(void *)(a2 + 24);
  v3 |= 4uLL;
  *(void *)(result + 192) = v3;
  *(void *)(result + 24) = v18;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 2) == 0)
  {
LABEL_17:
    if ((v2 & 0x80) == 0) {
      goto LABEL_18;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t v19 = *(void *)(a2 + 16);
  v3 |= 2uLL;
  *(void *)(result + 192) = v3;
  *(void *)(result + 16) = v19;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x80) == 0)
  {
LABEL_18:
    if ((v2 & 0x20000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_59;
  }
LABEL_58:
  int v20 = *(_DWORD *)(a2 + 68);
  v3 |= 0x80uLL;
  *(void *)(result + 192) = v3;
  *(_DWORD *)(result + 68) = v20;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x20000000) == 0)
  {
LABEL_19:
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_60;
  }
LABEL_59:
  int v21 = *(_DWORD *)(a2 + 156);
  v3 |= 0x20000000uLL;
  *(void *)(result + 192) = v3;
  *(_DWORD *)(result + 156) = v21;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_20:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_61;
  }
LABEL_60:
  int v22 = *(_DWORD *)(a2 + 144);
  v3 |= 0x4000000uLL;
  *(void *)(result + 192) = v3;
  *(_DWORD *)(result + 144) = v22;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x4000) == 0)
  {
LABEL_21:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_62;
  }
LABEL_61:
  int v23 = *(_DWORD *)(a2 + 96);
  v3 |= 0x4000uLL;
  *(void *)(result + 192) = v3;
  *(_DWORD *)(result + 96) = v23;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x400000) == 0)
  {
LABEL_22:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_63;
  }
LABEL_62:
  int v24 = *(_DWORD *)(a2 + 128);
  v3 |= 0x400000uLL;
  *(void *)(result + 192) = v3;
  *(_DWORD *)(result + 128) = v24;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x200000) == 0)
  {
LABEL_23:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_64;
  }
LABEL_63:
  int v25 = *(_DWORD *)(a2 + 124);
  v3 |= 0x200000uLL;
  *(void *)(result + 192) = v3;
  *(_DWORD *)(result + 124) = v25;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x800000) == 0)
  {
LABEL_24:
    if ((v2 & 0x10) == 0) {
      goto LABEL_25;
    }
    goto LABEL_65;
  }
LABEL_64:
  int v26 = *(_DWORD *)(a2 + 132);
  v3 |= 0x800000uLL;
  *(void *)(result + 192) = v3;
  *(_DWORD *)(result + 132) = v26;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x10) == 0)
  {
LABEL_25:
    if ((v2 & 0x800000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_66;
  }
LABEL_65:
  uint64_t v27 = *(void *)(a2 + 48);
  v3 |= 0x10uLL;
  *(void *)(result + 192) = v3;
  *(void *)(result + 48) = v27;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x800000000) == 0)
  {
LABEL_26:
    if ((v2 & 0x40000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_67;
  }
LABEL_66:
  int v28 = *(_DWORD *)(a2 + 180);
  v3 |= 0x800000000uLL;
  *(void *)(result + 192) = v3;
  *(_DWORD *)(result + 180) = v28;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x40000000) == 0)
  {
LABEL_27:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_68;
  }
LABEL_67:
  int v29 = *(_DWORD *)(a2 + 160);
  v3 |= 0x40000000uLL;
  *(void *)(result + 192) = v3;
  *(_DWORD *)(result + 160) = v29;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x100000) == 0)
  {
LABEL_28:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_69;
  }
LABEL_68:
  int v30 = *(_DWORD *)(a2 + 120);
  v3 |= 0x100000uLL;
  *(void *)(result + 192) = v3;
  *(_DWORD *)(result + 120) = v30;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x80000) == 0)
  {
LABEL_29:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_30;
  }
LABEL_69:
  int v31 = *(_DWORD *)(a2 + 116);
  v3 |= 0x80000uLL;
  *(void *)(result + 192) = v3;
  *(_DWORD *)(result + 116) = v31;
  if ((*(void *)(a2 + 192) & 0x40000) != 0)
  {
LABEL_30:
    int v6 = *(_DWORD *)(a2 + 112);
    *(void *)(result + 192) = v3 | 0x40000;
    *(_DWORD *)(result + 112) = v6;
  }
LABEL_31:
  if (*(void *)(a2 + 32)) {
    operator new();
  }
  uint64_t v7 = *(void *)(a2 + 192);
  if ((v7 & 0x400) != 0)
  {
    int v32 = *(_DWORD *)(a2 + 80);
    *(void *)(result + 192) |= 0x400uLL;
    *(_DWORD *)(result + 80) = v32;
    uint64_t v7 = *(void *)(a2 + 192);
    if ((v7 & 0x200) == 0)
    {
LABEL_35:
      if ((v7 & 0x2000000) == 0) {
        goto LABEL_36;
      }
      goto LABEL_73;
    }
  }
  else if ((v7 & 0x200) == 0)
  {
    goto LABEL_35;
  }
  int v33 = *(_DWORD *)(a2 + 76);
  *(void *)(result + 192) |= 0x200uLL;
  *(_DWORD *)(result + 76) = v33;
  uint64_t v7 = *(void *)(a2 + 192);
  if ((v7 & 0x2000000) == 0)
  {
LABEL_36:
    if ((v7 & 0x1000000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_74;
  }
LABEL_73:
  int v34 = *(_DWORD *)(a2 + 140);
  *(void *)(result + 192) |= 0x2000000uLL;
  *(_DWORD *)(result + 140) = v34;
  uint64_t v7 = *(void *)(a2 + 192);
  if ((v7 & 0x1000000000) == 0)
  {
LABEL_37:
    if ((v7 & 0x20) == 0) {
      goto LABEL_38;
    }
    goto LABEL_75;
  }
LABEL_74:
  int v35 = *(_DWORD *)(a2 + 184);
  *(void *)(result + 192) |= 0x1000000000uLL;
  *(_DWORD *)(result + 184) = v35;
  uint64_t v7 = *(void *)(a2 + 192);
  if ((v7 & 0x20) == 0)
  {
LABEL_38:
    if ((v7 & 0x10000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_76;
  }
LABEL_75:
  uint64_t v36 = *(void *)(a2 + 56);
  *(void *)(result + 192) |= 0x20uLL;
  *(void *)(result + 56) = v36;
  uint64_t v7 = *(void *)(a2 + 192);
  if ((v7 & 0x10000000) == 0)
  {
LABEL_39:
    if ((v7 & 0x2000000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_77;
  }
LABEL_76:
  int v37 = *(_DWORD *)(a2 + 152);
  *(void *)(result + 192) |= 0x10000000uLL;
  *(_DWORD *)(result + 152) = v37;
  uint64_t v7 = *(void *)(a2 + 192);
  if ((v7 & 0x2000000000) == 0)
  {
LABEL_40:
    if ((v7 & 0x40) == 0) {
      goto LABEL_41;
    }
    goto LABEL_78;
  }
LABEL_77:
  int v38 = *(_DWORD *)(a2 + 188);
  *(void *)(result + 192) |= 0x2000000000uLL;
  *(_DWORD *)(result + 188) = v38;
  uint64_t v7 = *(void *)(a2 + 192);
  if ((v7 & 0x40) == 0)
  {
LABEL_41:
    if ((v7 & 0x80000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_79;
  }
LABEL_78:
  int v39 = *(_DWORD *)(a2 + 64);
  *(void *)(result + 192) |= 0x40uLL;
  *(_DWORD *)(result + 64) = v39;
  uint64_t v7 = *(void *)(a2 + 192);
  if ((v7 & 0x80000000) == 0)
  {
LABEL_42:
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_80;
  }
LABEL_79:
  int v40 = *(_DWORD *)(a2 + 164);
  *(void *)(result + 192) |= 0x80000000uLL;
  *(_DWORD *)(result + 164) = v40;
  uint64_t v7 = *(void *)(a2 + 192);
  if ((v7 & 0x100000000) == 0)
  {
LABEL_43:
    if ((v7 & 0x200000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_81;
  }
LABEL_80:
  int v41 = *(_DWORD *)(a2 + 168);
  *(void *)(result + 192) |= 0x100000000uLL;
  *(_DWORD *)(result + 168) = v41;
  uint64_t v7 = *(void *)(a2 + 192);
  if ((v7 & 0x200000000) == 0)
  {
LABEL_44:
    if ((v7 & 0x400000000) == 0) {
      return result;
    }
    goto LABEL_45;
  }
LABEL_81:
  int v42 = *(_DWORD *)(a2 + 172);
  *(void *)(result + 192) |= 0x200000000uLL;
  *(_DWORD *)(result + 172) = v42;
  if ((*(void *)(a2 + 192) & 0x400000000) == 0) {
    return result;
  }
LABEL_45:
  int v8 = *(_DWORD *)(a2 + 176);
  *(void *)(result + 192) |= 0x400000000uLL;
  *(_DWORD *)(result + 176) = v8;
  return result;
}

uint64_t sub_227C515E8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x40) != 0)
  {
    PB::TextFormatter::format(this, "alsLux");
    uint64_t v5 = *(void *)(a1 + 192);
    if ((v5 & 0x80) == 0)
    {
LABEL_3:
      if ((v5 & 0x100) == 0) {
        goto LABEL_4;
      }
      goto LABEL_48;
    }
  }
  else if ((v5 & 0x80) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "caltype");
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x100) == 0)
  {
LABEL_4:
    if ((v5 & 0x200) == 0) {
      goto LABEL_5;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(this, "confidence");
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x200) == 0)
  {
LABEL_5:
    if ((v5 & 0x400) == 0) {
      goto LABEL_6;
    }
    goto LABEL_50;
  }
LABEL_49:
  PB::TextFormatter::format(this, "drivingArmLikelihoodSum", *(float *)(a1 + 76));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x400) == 0)
  {
LABEL_6:
    if ((v5 & 0x800) == 0) {
      goto LABEL_7;
    }
    goto LABEL_51;
  }
LABEL_50:
  PB::TextFormatter::format(this, "drivingStowedLikelihoodSum", *(float *)(a1 + 80));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x800) == 0)
  {
LABEL_7:
    if ((v5 & 1) == 0) {
      goto LABEL_8;
    }
    goto LABEL_52;
  }
LABEL_51:
  PB::TextFormatter::format(this, "exitState");
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 1) == 0)
  {
LABEL_8:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_53;
  }
LABEL_52:
  PB::TextFormatter::format(this, "hidTimestamp", *(double *)(a1 + 8));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x1000) == 0)
  {
LABEL_9:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(this, "isMoving");
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x2000) == 0)
  {
LABEL_10:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(this, "isVehicular");
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x4000) == 0)
  {
LABEL_11:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_56;
  }
LABEL_55:
  PB::TextFormatter::format(this, "machineFrequency", *(float *)(a1 + 96));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x8000) == 0)
  {
LABEL_12:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_57;
  }
LABEL_56:
  PB::TextFormatter::format(this, "motionType");
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x10000) == 0)
  {
LABEL_13:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_58;
  }
LABEL_57:
  PB::TextFormatter::format(this, "mounted");
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x20000) == 0)
  {
LABEL_14:
    if ((v5 & 2) == 0) {
      goto LABEL_15;
    }
    goto LABEL_59;
  }
LABEL_58:
  PB::TextFormatter::format(this, "mountedConfidence");
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 2) == 0)
  {
LABEL_15:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_60;
  }
LABEL_59:
  PB::TextFormatter::format(this, "now");
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x40000) == 0)
  {
LABEL_16:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_61;
  }
LABEL_60:
  PB::TextFormatter::format(this, "rawConfidence");
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x80000) == 0)
  {
LABEL_17:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_62;
  }
LABEL_61:
  PB::TextFormatter::format(this, "rawIsVehicular");
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x100000) == 0)
  {
LABEL_18:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_63;
  }
LABEL_62:
  PB::TextFormatter::format(this, "rawMotionType");
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x200000) == 0)
  {
LABEL_19:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_64;
  }
LABEL_63:
  PB::TextFormatter::format(this, "rowStrokeAmplitude", *(float *)(a1 + 124));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x400000) == 0)
  {
LABEL_20:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_65;
  }
LABEL_64:
  PB::TextFormatter::format(this, "rowStrokeFrequency", *(float *)(a1 + 128));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x800000) == 0)
  {
LABEL_21:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_66;
  }
LABEL_65:
  PB::TextFormatter::format(this, "rowStrokePower", *(float *)(a1 + 132));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_22:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_67;
  }
LABEL_66:
  PB::TextFormatter::format(this, "seq");
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_23:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_68;
  }
LABEL_67:
  PB::TextFormatter::format(this, "ssLikelihoodSum", *(float *)(a1 + 140));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_24:
    if ((v5 & 4) == 0) {
      goto LABEL_25;
    }
    goto LABEL_69;
  }
LABEL_68:
  PB::TextFormatter::format(this, "standing");
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 4) == 0)
  {
LABEL_25:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_70;
  }
LABEL_69:
  PB::TextFormatter::format(this, "startTime");
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_26:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_71;
  }
LABEL_70:
  PB::TextFormatter::format(this, "turn");
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_27:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_72;
  }
LABEL_71:
  PB::TextFormatter::format(this, "typeYouth");
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x20000000) == 0)
  {
LABEL_28:
    if ((v5 & 0x40000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_73;
  }
LABEL_72:
  PB::TextFormatter::format(this, "vectorMagnitude", *(float *)(a1 + 156));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x40000000) == 0)
  {
LABEL_29:
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_74;
  }
LABEL_73:
  PB::TextFormatter::format(this, "vehicleExitState");
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x80000000) == 0)
  {
LABEL_30:
    if ((v5 & 0x100000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_75;
  }
LABEL_74:
  PB::TextFormatter::format(this, "vehicleProbabilityLongTermMean0", *(float *)(a1 + 164));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x100000000) == 0)
  {
LABEL_31:
    if ((v5 & 0x200000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_76;
  }
LABEL_75:
  PB::TextFormatter::format(this, "vehicleProbabilityLongTermMean1", *(float *)(a1 + 168));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x200000000) == 0)
  {
LABEL_32:
    if ((v5 & 0x400000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_77;
  }
LABEL_76:
  PB::TextFormatter::format(this, "vehicleProbabilityLongTermMean2", *(float *)(a1 + 172));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x400000000) == 0)
  {
LABEL_33:
    if ((v5 & 0x800000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_34;
  }
LABEL_77:
  PB::TextFormatter::format(this, "vehicleType");
  if ((*(void *)(a1 + 192) & 0x800000000) != 0) {
LABEL_34:
  }
    PB::TextFormatter::format(this, "vehicularConfidence");
LABEL_35:
  uint64_t v6 = *(void *)(a1 + 32);
  if (v6) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v6 + 32))(v6, this, "vehicularFlags");
  }
  uint64_t v7 = *(void *)(a1 + 192);
  if ((v7 & 8) != 0)
  {
    PB::TextFormatter::format(this, "wallStartTime", *(double *)(a1 + 40));
    uint64_t v7 = *(void *)(a1 + 192);
    if ((v7 & 0x10) == 0)
    {
LABEL_39:
      if ((v7 & 0x1000000000) == 0) {
        goto LABEL_40;
      }
      goto LABEL_81;
    }
  }
  else if ((v7 & 0x10) == 0)
  {
    goto LABEL_39;
  }
  PB::TextFormatter::format(this, "workoutDetectionTime");
  uint64_t v7 = *(void *)(a1 + 192);
  if ((v7 & 0x1000000000) == 0)
  {
LABEL_40:
    if ((v7 & 0x20) == 0) {
      goto LABEL_41;
    }
    goto LABEL_82;
  }
LABEL_81:
  PB::TextFormatter::format(this, "workoutDetectionType");
  uint64_t v7 = *(void *)(a1 + 192);
  if ((v7 & 0x20) == 0)
  {
LABEL_41:
    if ((v7 & 0x2000000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_42;
  }
LABEL_82:
  PB::TextFormatter::format(this, "workoutEscalationTime");
  if ((*(void *)(a1 + 192) & 0x2000000000) != 0) {
LABEL_42:
  }
    PB::TextFormatter::format(this, "youthClassificationReason");
LABEL_43:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C51B24(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(void *)(a1 + 192) |= 0x8000uLL;
          unint64_t v20 = *((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
          uint64_t v22 = *(void *)this;
          if (v20 <= 0xFFFFFFFFFFFFFFF5 && v20 + 10 <= v21)
          {
            char v23 = 0;
            unsigned int v24 = 0;
            uint64_t v25 = 0;
            do
            {
              unint64_t v26 = v20 + 1;
              *((void *)this + 1) = v20 + 1;
              char v27 = *(unsigned char *)(v22 + v20);
              v25 |= (unint64_t)(v27 & 0x7F) << v23;
              if ((v27 & 0x80) == 0) {
                goto LABEL_445;
              }
              v23 += 7;
              unint64_t v20 = v26;
              BOOL v14 = v24++ > 8;
            }
            while (!v14);
LABEL_246:
            LODWORD(v25) = 0;
            goto LABEL_445;
          }
          char v235 = 0;
          unsigned int v236 = 0;
          uint64_t v25 = 0;
          if (v21 <= v20) {
            unint64_t v21 = *((void *)this + 1);
          }
          while (2)
          {
            if (v21 == v20)
            {
              LODWORD(v25) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v237 = v20 + 1;
              char v238 = *(unsigned char *)(v22 + v20);
              *((void *)this + 1) = v237;
              v25 |= (unint64_t)(v238 & 0x7F) << v235;
              if (v238 < 0)
              {
                v235 += 7;
                unint64_t v20 = v237;
                BOOL v14 = v236++ > 8;
                if (v14) {
                  goto LABEL_246;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v25) = 0;
              }
            }
            break;
          }
LABEL_445:
          *(_DWORD *)(a1 + 100) = v25;
          goto LABEL_518;
        case 2u:
          *(void *)(a1 + 192) |= 0x100uLL;
          unint64_t v29 = *((void *)this + 1);
          unint64_t v30 = *((void *)this + 2);
          uint64_t v31 = *(void *)this;
          if (v29 <= 0xFFFFFFFFFFFFFFF5 && v29 + 10 <= v30)
          {
            char v32 = 0;
            unsigned int v33 = 0;
            uint64_t v34 = 0;
            do
            {
              unint64_t v35 = v29 + 1;
              *((void *)this + 1) = v29 + 1;
              char v36 = *(unsigned char *)(v31 + v29);
              v34 |= (unint64_t)(v36 & 0x7F) << v32;
              if ((v36 & 0x80) == 0) {
                goto LABEL_448;
              }
              v32 += 7;
              unint64_t v29 = v35;
              BOOL v14 = v33++ > 8;
            }
            while (!v14);
LABEL_253:
            LODWORD(v34) = 0;
            goto LABEL_448;
          }
          char v239 = 0;
          unsigned int v240 = 0;
          uint64_t v34 = 0;
          if (v30 <= v29) {
            unint64_t v30 = *((void *)this + 1);
          }
          while (2)
          {
            if (v30 == v29)
            {
              LODWORD(v34) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v241 = v29 + 1;
              char v242 = *(unsigned char *)(v31 + v29);
              *((void *)this + 1) = v241;
              v34 |= (unint64_t)(v242 & 0x7F) << v239;
              if (v242 < 0)
              {
                v239 += 7;
                unint64_t v29 = v241;
                BOOL v14 = v240++ > 8;
                if (v14) {
                  goto LABEL_253;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v34) = 0;
              }
            }
            break;
          }
LABEL_448:
          *(_DWORD *)(a1 + 72) = v34;
          goto LABEL_518;
        case 3u:
          *(void *)(a1 + 192) |= 0x10000uLL;
          unint64_t v37 = *((void *)this + 1);
          unint64_t v38 = *((void *)this + 2);
          uint64_t v39 = *(void *)this;
          if (v37 <= 0xFFFFFFFFFFFFFFF5 && v37 + 10 <= v38)
          {
            char v40 = 0;
            unsigned int v41 = 0;
            uint64_t v42 = 0;
            do
            {
              unint64_t v43 = v37 + 1;
              *((void *)this + 1) = v37 + 1;
              char v44 = *(unsigned char *)(v39 + v37);
              v42 |= (unint64_t)(v44 & 0x7F) << v40;
              if ((v44 & 0x80) == 0) {
                goto LABEL_451;
              }
              v40 += 7;
              unint64_t v37 = v43;
              BOOL v14 = v41++ > 8;
            }
            while (!v14);
LABEL_260:
            LODWORD(v42) = 0;
            goto LABEL_451;
          }
          char v243 = 0;
          unsigned int v244 = 0;
          uint64_t v42 = 0;
          if (v38 <= v37) {
            unint64_t v38 = *((void *)this + 1);
          }
          while (2)
          {
            if (v38 == v37)
            {
              LODWORD(v42) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v245 = v37 + 1;
              char v246 = *(unsigned char *)(v39 + v37);
              *((void *)this + 1) = v245;
              v42 |= (unint64_t)(v246 & 0x7F) << v243;
              if (v246 < 0)
              {
                v243 += 7;
                unint64_t v37 = v245;
                BOOL v14 = v244++ > 8;
                if (v14) {
                  goto LABEL_260;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v42) = 0;
              }
            }
            break;
          }
LABEL_451:
          *(_DWORD *)(a1 + 104) = v42;
          goto LABEL_518;
        case 4u:
          *(void *)(a1 + 192) |= 0x20000uLL;
          unint64_t v45 = *((void *)this + 1);
          unint64_t v46 = *((void *)this + 2);
          uint64_t v47 = *(void *)this;
          if (v45 <= 0xFFFFFFFFFFFFFFF5 && v45 + 10 <= v46)
          {
            char v48 = 0;
            unsigned int v49 = 0;
            uint64_t v50 = 0;
            do
            {
              unint64_t v51 = v45 + 1;
              *((void *)this + 1) = v45 + 1;
              char v52 = *(unsigned char *)(v47 + v45);
              v50 |= (unint64_t)(v52 & 0x7F) << v48;
              if ((v52 & 0x80) == 0) {
                goto LABEL_454;
              }
              v48 += 7;
              unint64_t v45 = v51;
              BOOL v14 = v49++ > 8;
            }
            while (!v14);
LABEL_267:
            LODWORD(v50) = 0;
            goto LABEL_454;
          }
          char v247 = 0;
          unsigned int v248 = 0;
          uint64_t v50 = 0;
          if (v46 <= v45) {
            unint64_t v46 = *((void *)this + 1);
          }
          while (2)
          {
            if (v46 == v45)
            {
              LODWORD(v50) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v249 = v45 + 1;
              char v250 = *(unsigned char *)(v47 + v45);
              *((void *)this + 1) = v249;
              v50 |= (unint64_t)(v250 & 0x7F) << v247;
              if (v250 < 0)
              {
                v247 += 7;
                unint64_t v45 = v249;
                BOOL v14 = v248++ > 8;
                if (v14) {
                  goto LABEL_267;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v50) = 0;
              }
            }
            break;
          }
LABEL_454:
          *(_DWORD *)(a1 + 108) = v50;
          goto LABEL_518;
        case 5u:
          *(void *)(a1 + 192) |= 0x800uLL;
          unint64_t v53 = *((void *)this + 1);
          unint64_t v54 = *((void *)this + 2);
          uint64_t v55 = *(void *)this;
          if (v53 <= 0xFFFFFFFFFFFFFFF5 && v53 + 10 <= v54)
          {
            char v56 = 0;
            unsigned int v57 = 0;
            uint64_t v58 = 0;
            do
            {
              unint64_t v59 = v53 + 1;
              *((void *)this + 1) = v53 + 1;
              char v60 = *(unsigned char *)(v55 + v53);
              v58 |= (unint64_t)(v60 & 0x7F) << v56;
              if ((v60 & 0x80) == 0) {
                goto LABEL_457;
              }
              v56 += 7;
              unint64_t v53 = v59;
              BOOL v14 = v57++ > 8;
            }
            while (!v14);
LABEL_274:
            LODWORD(v58) = 0;
            goto LABEL_457;
          }
          char v251 = 0;
          unsigned int v252 = 0;
          uint64_t v58 = 0;
          if (v54 <= v53) {
            unint64_t v54 = *((void *)this + 1);
          }
          while (2)
          {
            if (v54 == v53)
            {
              LODWORD(v58) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v253 = v53 + 1;
              char v254 = *(unsigned char *)(v55 + v53);
              *((void *)this + 1) = v253;
              v58 |= (unint64_t)(v254 & 0x7F) << v251;
              if (v254 < 0)
              {
                v251 += 7;
                unint64_t v53 = v253;
                BOOL v14 = v252++ > 8;
                if (v14) {
                  goto LABEL_274;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v58) = 0;
              }
            }
            break;
          }
LABEL_457:
          *(_DWORD *)(a1 + 84) = v58;
          goto LABEL_518;
        case 6u:
          *(void *)(a1 + 192) |= 0x8000000uLL;
          unint64_t v61 = *((void *)this + 1);
          unint64_t v62 = *((void *)this + 2);
          uint64_t v63 = *(void *)this;
          if (v61 <= 0xFFFFFFFFFFFFFFF5 && v61 + 10 <= v62)
          {
            char v64 = 0;
            unsigned int v65 = 0;
            uint64_t v66 = 0;
            do
            {
              unint64_t v67 = v61 + 1;
              *((void *)this + 1) = v61 + 1;
              char v68 = *(unsigned char *)(v63 + v61);
              v66 |= (unint64_t)(v68 & 0x7F) << v64;
              if ((v68 & 0x80) == 0) {
                goto LABEL_460;
              }
              v64 += 7;
              unint64_t v61 = v67;
              BOOL v14 = v65++ > 8;
            }
            while (!v14);
LABEL_281:
            LODWORD(v66) = 0;
            goto LABEL_460;
          }
          char v255 = 0;
          unsigned int v256 = 0;
          uint64_t v66 = 0;
          if (v62 <= v61) {
            unint64_t v62 = *((void *)this + 1);
          }
          while (2)
          {
            if (v62 == v61)
            {
              LODWORD(v66) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v257 = v61 + 1;
              char v258 = *(unsigned char *)(v63 + v61);
              *((void *)this + 1) = v257;
              v66 |= (unint64_t)(v258 & 0x7F) << v255;
              if (v258 < 0)
              {
                v255 += 7;
                unint64_t v61 = v257;
                BOOL v14 = v256++ > 8;
                if (v14) {
                  goto LABEL_281;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v66) = 0;
              }
            }
            break;
          }
LABEL_460:
          *(_DWORD *)(a1 + 148) = v66;
          goto LABEL_518;
        case 7u:
          *(void *)(a1 + 192) |= 0x2000uLL;
          unint64_t v69 = *((void *)this + 1);
          unint64_t v70 = *((void *)this + 2);
          uint64_t v71 = *(void *)this;
          if (v69 <= 0xFFFFFFFFFFFFFFF5 && v69 + 10 <= v70)
          {
            char v72 = 0;
            unsigned int v73 = 0;
            uint64_t v74 = 0;
            do
            {
              unint64_t v75 = v69 + 1;
              *((void *)this + 1) = v69 + 1;
              char v76 = *(unsigned char *)(v71 + v69);
              v74 |= (unint64_t)(v76 & 0x7F) << v72;
              if ((v76 & 0x80) == 0) {
                goto LABEL_463;
              }
              v72 += 7;
              unint64_t v69 = v75;
              BOOL v14 = v73++ > 8;
            }
            while (!v14);
LABEL_288:
            LODWORD(v74) = 0;
            goto LABEL_463;
          }
          char v259 = 0;
          unsigned int v260 = 0;
          uint64_t v74 = 0;
          if (v70 <= v69) {
            unint64_t v70 = *((void *)this + 1);
          }
          while (2)
          {
            if (v70 == v69)
            {
              LODWORD(v74) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v261 = v69 + 1;
              char v262 = *(unsigned char *)(v71 + v69);
              *((void *)this + 1) = v261;
              v74 |= (unint64_t)(v262 & 0x7F) << v259;
              if (v262 < 0)
              {
                v259 += 7;
                unint64_t v69 = v261;
                BOOL v14 = v260++ > 8;
                if (v14) {
                  goto LABEL_288;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v74) = 0;
              }
            }
            break;
          }
LABEL_463:
          *(_DWORD *)(a1 + 92) = v74;
          goto LABEL_518;
        case 8u:
          *(void *)(a1 + 192) |= 0x1000uLL;
          unint64_t v77 = *((void *)this + 1);
          unint64_t v78 = *((void *)this + 2);
          uint64_t v79 = *(void *)this;
          if (v77 <= 0xFFFFFFFFFFFFFFF5 && v77 + 10 <= v78)
          {
            char v80 = 0;
            unsigned int v81 = 0;
            uint64_t v82 = 0;
            do
            {
              unint64_t v83 = v77 + 1;
              *((void *)this + 1) = v77 + 1;
              char v84 = *(unsigned char *)(v79 + v77);
              v82 |= (unint64_t)(v84 & 0x7F) << v80;
              if ((v84 & 0x80) == 0) {
                goto LABEL_466;
              }
              v80 += 7;
              unint64_t v77 = v83;
              BOOL v14 = v81++ > 8;
            }
            while (!v14);
LABEL_295:
            LODWORD(v82) = 0;
            goto LABEL_466;
          }
          char v263 = 0;
          unsigned int v264 = 0;
          uint64_t v82 = 0;
          if (v78 <= v77) {
            unint64_t v78 = *((void *)this + 1);
          }
          while (2)
          {
            if (v78 == v77)
            {
              LODWORD(v82) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v265 = v77 + 1;
              char v266 = *(unsigned char *)(v79 + v77);
              *((void *)this + 1) = v265;
              v82 |= (unint64_t)(v266 & 0x7F) << v263;
              if (v266 < 0)
              {
                v263 += 7;
                unint64_t v77 = v265;
                BOOL v14 = v264++ > 8;
                if (v14) {
                  goto LABEL_295;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v82) = 0;
              }
            }
            break;
          }
LABEL_466:
          *(_DWORD *)(a1 + 88) = v82;
          goto LABEL_518;
        case 9u:
          *(void *)(a1 + 192) |= 0x1000000uLL;
          unint64_t v85 = *((void *)this + 1);
          unint64_t v86 = *((void *)this + 2);
          uint64_t v87 = *(void *)this;
          if (v85 <= 0xFFFFFFFFFFFFFFF5 && v85 + 10 <= v86)
          {
            char v88 = 0;
            unsigned int v89 = 0;
            uint64_t v90 = 0;
            do
            {
              unint64_t v91 = v85 + 1;
              *((void *)this + 1) = v85 + 1;
              char v92 = *(unsigned char *)(v87 + v85);
              v90 |= (unint64_t)(v92 & 0x7F) << v88;
              if ((v92 & 0x80) == 0) {
                goto LABEL_469;
              }
              v88 += 7;
              unint64_t v85 = v91;
              BOOL v14 = v89++ > 8;
            }
            while (!v14);
LABEL_302:
            LODWORD(v90) = 0;
            goto LABEL_469;
          }
          char v267 = 0;
          unsigned int v268 = 0;
          uint64_t v90 = 0;
          if (v86 <= v85) {
            unint64_t v86 = *((void *)this + 1);
          }
          while (2)
          {
            if (v86 == v85)
            {
              LODWORD(v90) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v269 = v85 + 1;
              char v270 = *(unsigned char *)(v87 + v85);
              *((void *)this + 1) = v269;
              v90 |= (unint64_t)(v270 & 0x7F) << v267;
              if (v270 < 0)
              {
                v267 += 7;
                unint64_t v85 = v269;
                BOOL v14 = v268++ > 8;
                if (v14) {
                  goto LABEL_302;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v90) = 0;
              }
            }
            break;
          }
LABEL_469:
          *(_DWORD *)(a1 + 136) = v90;
          goto LABEL_518;
        case 0xAu:
          *(void *)(a1 + 192) |= 8uLL;
          unint64_t v93 = *((void *)this + 1);
          if (v93 > 0xFFFFFFFFFFFFFFF7 || v93 + 8 > *((void *)this + 2)) {
            goto LABEL_232;
          }
          *(void *)(a1 + 40) = *(void *)(*(void *)this + v93);
          goto LABEL_93;
        case 0xBu:
          *(void *)(a1 + 192) |= 1uLL;
          unint64_t v94 = *((void *)this + 1);
          if (v94 > 0xFFFFFFFFFFFFFFF7 || v94 + 8 > *((void *)this + 2)) {
            goto LABEL_232;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v94);
LABEL_93:
          uint64_t v95 = *((void *)this + 1) + 8;
          goto LABEL_417;
        case 0xCu:
          *(void *)(a1 + 192) |= 4uLL;
          unint64_t v96 = *((void *)this + 1);
          unint64_t v97 = *((void *)this + 2);
          uint64_t v98 = *(void *)this;
          if (v96 <= 0xFFFFFFFFFFFFFFF5 && v96 + 10 <= v97)
          {
            char v99 = 0;
            unsigned int v100 = 0;
            uint64_t v101 = 0;
            do
            {
              unint64_t v102 = v96 + 1;
              *((void *)this + 1) = v96 + 1;
              char v103 = *(unsigned char *)(v98 + v96);
              v101 |= (unint64_t)(v103 & 0x7F) << v99;
              if ((v103 & 0x80) == 0) {
                goto LABEL_472;
              }
              v99 += 7;
              unint64_t v96 = v102;
              BOOL v14 = v100++ > 8;
            }
            while (!v14);
LABEL_309:
            uint64_t v101 = 0;
            goto LABEL_472;
          }
          char v271 = 0;
          unsigned int v272 = 0;
          uint64_t v101 = 0;
          if (v97 <= v96) {
            unint64_t v97 = *((void *)this + 1);
          }
          while (2)
          {
            if (v97 == v96)
            {
              uint64_t v101 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v273 = v96 + 1;
              char v274 = *(unsigned char *)(v98 + v96);
              *((void *)this + 1) = v273;
              v101 |= (unint64_t)(v274 & 0x7F) << v271;
              if (v274 < 0)
              {
                v271 += 7;
                unint64_t v96 = v273;
                BOOL v14 = v272++ > 8;
                if (v14) {
                  goto LABEL_309;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v101 = 0;
              }
            }
            break;
          }
LABEL_472:
          *(void *)(a1 + 24) = v101;
          goto LABEL_518;
        case 0xDu:
          *(void *)(a1 + 192) |= 2uLL;
          unint64_t v104 = *((void *)this + 1);
          unint64_t v105 = *((void *)this + 2);
          uint64_t v106 = *(void *)this;
          if (v104 <= 0xFFFFFFFFFFFFFFF5 && v104 + 10 <= v105)
          {
            char v107 = 0;
            unsigned int v108 = 0;
            uint64_t v109 = 0;
            do
            {
              unint64_t v110 = v104 + 1;
              *((void *)this + 1) = v104 + 1;
              char v111 = *(unsigned char *)(v106 + v104);
              v109 |= (unint64_t)(v111 & 0x7F) << v107;
              if ((v111 & 0x80) == 0) {
                goto LABEL_475;
              }
              v107 += 7;
              unint64_t v104 = v110;
              BOOL v14 = v108++ > 8;
            }
            while (!v14);
LABEL_316:
            uint64_t v109 = 0;
            goto LABEL_475;
          }
          char v275 = 0;
          unsigned int v276 = 0;
          uint64_t v109 = 0;
          if (v105 <= v104) {
            unint64_t v105 = *((void *)this + 1);
          }
          while (2)
          {
            if (v105 == v104)
            {
              uint64_t v109 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v277 = v104 + 1;
              char v278 = *(unsigned char *)(v106 + v104);
              *((void *)this + 1) = v277;
              v109 |= (unint64_t)(v278 & 0x7F) << v275;
              if (v278 < 0)
              {
                v275 += 7;
                unint64_t v104 = v277;
                BOOL v14 = v276++ > 8;
                if (v14) {
                  goto LABEL_316;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v109 = 0;
              }
            }
            break;
          }
LABEL_475:
          *(void *)(a1 + 16) = v109;
          goto LABEL_518;
        case 0xEu:
          *(void *)(a1 + 192) |= 0x80uLL;
          unint64_t v112 = *((void *)this + 1);
          unint64_t v113 = *((void *)this + 2);
          uint64_t v114 = *(void *)this;
          if (v112 <= 0xFFFFFFFFFFFFFFF5 && v112 + 10 <= v113)
          {
            char v115 = 0;
            unsigned int v116 = 0;
            uint64_t v117 = 0;
            do
            {
              unint64_t v118 = v112 + 1;
              *((void *)this + 1) = v112 + 1;
              char v119 = *(unsigned char *)(v114 + v112);
              v117 |= (unint64_t)(v119 & 0x7F) << v115;
              if ((v119 & 0x80) == 0) {
                goto LABEL_478;
              }
              v115 += 7;
              unint64_t v112 = v118;
              BOOL v14 = v116++ > 8;
            }
            while (!v14);
LABEL_323:
            LODWORD(v117) = 0;
            goto LABEL_478;
          }
          char v279 = 0;
          unsigned int v280 = 0;
          uint64_t v117 = 0;
          if (v113 <= v112) {
            unint64_t v113 = *((void *)this + 1);
          }
          while (2)
          {
            if (v113 == v112)
            {
              LODWORD(v117) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v281 = v112 + 1;
              char v282 = *(unsigned char *)(v114 + v112);
              *((void *)this + 1) = v281;
              v117 |= (unint64_t)(v282 & 0x7F) << v279;
              if (v282 < 0)
              {
                v279 += 7;
                unint64_t v112 = v281;
                BOOL v14 = v280++ > 8;
                if (v14) {
                  goto LABEL_323;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v117) = 0;
              }
            }
            break;
          }
LABEL_478:
          *(_DWORD *)(a1 + 68) = v117;
          goto LABEL_518;
        case 0xFu:
          *(void *)(a1 + 192) |= 0x20000000uLL;
          unint64_t v120 = *((void *)this + 1);
          if (v120 > 0xFFFFFFFFFFFFFFFBLL || v120 + 4 > *((void *)this + 2)) {
            goto LABEL_232;
          }
          *(_DWORD *)(a1 + 156) = *(_DWORD *)(*(void *)this + v120);
          goto LABEL_416;
        case 0x10u:
          *(void *)(a1 + 192) |= 0x4000000uLL;
          unint64_t v121 = *((void *)this + 1);
          unint64_t v122 = *((void *)this + 2);
          uint64_t v123 = *(void *)this;
          if (v121 <= 0xFFFFFFFFFFFFFFF5 && v121 + 10 <= v122)
          {
            char v124 = 0;
            unsigned int v125 = 0;
            uint64_t v126 = 0;
            do
            {
              unint64_t v127 = v121 + 1;
              *((void *)this + 1) = v121 + 1;
              char v128 = *(unsigned char *)(v123 + v121);
              v126 |= (unint64_t)(v128 & 0x7F) << v124;
              if ((v128 & 0x80) == 0) {
                goto LABEL_481;
              }
              v124 += 7;
              unint64_t v121 = v127;
              BOOL v14 = v125++ > 8;
            }
            while (!v14);
LABEL_330:
            LODWORD(v126) = 0;
            goto LABEL_481;
          }
          char v283 = 0;
          unsigned int v284 = 0;
          uint64_t v126 = 0;
          if (v122 <= v121) {
            unint64_t v122 = *((void *)this + 1);
          }
          while (2)
          {
            if (v122 == v121)
            {
              LODWORD(v126) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v285 = v121 + 1;
              char v286 = *(unsigned char *)(v123 + v121);
              *((void *)this + 1) = v285;
              v126 |= (unint64_t)(v286 & 0x7F) << v283;
              if (v286 < 0)
              {
                v283 += 7;
                unint64_t v121 = v285;
                BOOL v14 = v284++ > 8;
                if (v14) {
                  goto LABEL_330;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v126) = 0;
              }
            }
            break;
          }
LABEL_481:
          *(_DWORD *)(a1 + 144) = v126;
          goto LABEL_518;
        case 0x11u:
          *(void *)(a1 + 192) |= 0x4000uLL;
          unint64_t v129 = *((void *)this + 1);
          if (v129 > 0xFFFFFFFFFFFFFFFBLL || v129 + 4 > *((void *)this + 2)) {
            goto LABEL_232;
          }
          *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v129);
          goto LABEL_416;
        case 0x12u:
          *(void *)(a1 + 192) |= 0x400000uLL;
          unint64_t v130 = *((void *)this + 1);
          if (v130 > 0xFFFFFFFFFFFFFFFBLL || v130 + 4 > *((void *)this + 2)) {
            goto LABEL_232;
          }
          *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v130);
          goto LABEL_416;
        case 0x13u:
          *(void *)(a1 + 192) |= 0x200000uLL;
          unint64_t v131 = *((void *)this + 1);
          if (v131 > 0xFFFFFFFFFFFFFFFBLL || v131 + 4 > *((void *)this + 2)) {
            goto LABEL_232;
          }
          *(_DWORD *)(a1 + 124) = *(_DWORD *)(*(void *)this + v131);
          goto LABEL_416;
        case 0x14u:
          *(void *)(a1 + 192) |= 0x800000uLL;
          unint64_t v132 = *((void *)this + 1);
          if (v132 > 0xFFFFFFFFFFFFFFFBLL || v132 + 4 > *((void *)this + 2)) {
            goto LABEL_232;
          }
          *(_DWORD *)(a1 + 132) = *(_DWORD *)(*(void *)this + v132);
          goto LABEL_416;
        case 0x15u:
          *(void *)(a1 + 192) |= 0x10uLL;
          unint64_t v133 = *((void *)this + 1);
          unint64_t v134 = *((void *)this + 2);
          uint64_t v135 = *(void *)this;
          if (v133 <= 0xFFFFFFFFFFFFFFF5 && v133 + 10 <= v134)
          {
            char v136 = 0;
            unsigned int v137 = 0;
            uint64_t v138 = 0;
            do
            {
              unint64_t v139 = v133 + 1;
              *((void *)this + 1) = v133 + 1;
              char v140 = *(unsigned char *)(v135 + v133);
              v138 |= (unint64_t)(v140 & 0x7F) << v136;
              if ((v140 & 0x80) == 0) {
                goto LABEL_484;
              }
              v136 += 7;
              unint64_t v133 = v139;
              BOOL v14 = v137++ > 8;
            }
            while (!v14);
LABEL_337:
            uint64_t v138 = 0;
            goto LABEL_484;
          }
          char v287 = 0;
          unsigned int v288 = 0;
          uint64_t v138 = 0;
          if (v134 <= v133) {
            unint64_t v134 = *((void *)this + 1);
          }
          while (2)
          {
            if (v134 == v133)
            {
              uint64_t v138 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v289 = v133 + 1;
              char v290 = *(unsigned char *)(v135 + v133);
              *((void *)this + 1) = v289;
              v138 |= (unint64_t)(v290 & 0x7F) << v287;
              if (v290 < 0)
              {
                v287 += 7;
                unint64_t v133 = v289;
                BOOL v14 = v288++ > 8;
                if (v14) {
                  goto LABEL_337;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v138 = 0;
              }
            }
            break;
          }
LABEL_484:
          *(void *)(a1 + 48) = v138;
          goto LABEL_518;
        case 0x16u:
          *(void *)(a1 + 192) |= 0x800000000uLL;
          unint64_t v141 = *((void *)this + 1);
          unint64_t v142 = *((void *)this + 2);
          uint64_t v143 = *(void *)this;
          if (v141 <= 0xFFFFFFFFFFFFFFF5 && v141 + 10 <= v142)
          {
            char v144 = 0;
            unsigned int v145 = 0;
            uint64_t v146 = 0;
            do
            {
              unint64_t v147 = v141 + 1;
              *((void *)this + 1) = v141 + 1;
              char v148 = *(unsigned char *)(v143 + v141);
              v146 |= (unint64_t)(v148 & 0x7F) << v144;
              if ((v148 & 0x80) == 0) {
                goto LABEL_487;
              }
              v144 += 7;
              unint64_t v141 = v147;
              BOOL v14 = v145++ > 8;
            }
            while (!v14);
LABEL_344:
            LODWORD(v146) = 0;
            goto LABEL_487;
          }
          char v291 = 0;
          unsigned int v292 = 0;
          uint64_t v146 = 0;
          if (v142 <= v141) {
            unint64_t v142 = *((void *)this + 1);
          }
          while (2)
          {
            if (v142 == v141)
            {
              LODWORD(v146) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v293 = v141 + 1;
              char v294 = *(unsigned char *)(v143 + v141);
              *((void *)this + 1) = v293;
              v146 |= (unint64_t)(v294 & 0x7F) << v291;
              if (v294 < 0)
              {
                v291 += 7;
                unint64_t v141 = v293;
                BOOL v14 = v292++ > 8;
                if (v14) {
                  goto LABEL_344;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v146) = 0;
              }
            }
            break;
          }
LABEL_487:
          *(_DWORD *)(a1 + 180) = v146;
          goto LABEL_518;
        case 0x17u:
          *(void *)(a1 + 192) |= 0x40000000uLL;
          unint64_t v149 = *((void *)this + 1);
          unint64_t v150 = *((void *)this + 2);
          uint64_t v151 = *(void *)this;
          if (v149 <= 0xFFFFFFFFFFFFFFF5 && v149 + 10 <= v150)
          {
            char v152 = 0;
            unsigned int v153 = 0;
            uint64_t v154 = 0;
            do
            {
              unint64_t v155 = v149 + 1;
              *((void *)this + 1) = v149 + 1;
              char v156 = *(unsigned char *)(v151 + v149);
              v154 |= (unint64_t)(v156 & 0x7F) << v152;
              if ((v156 & 0x80) == 0) {
                goto LABEL_490;
              }
              v152 += 7;
              unint64_t v149 = v155;
              BOOL v14 = v153++ > 8;
            }
            while (!v14);
LABEL_351:
            LODWORD(v154) = 0;
            goto LABEL_490;
          }
          char v295 = 0;
          unsigned int v296 = 0;
          uint64_t v154 = 0;
          if (v150 <= v149) {
            unint64_t v150 = *((void *)this + 1);
          }
          while (2)
          {
            if (v150 == v149)
            {
              LODWORD(v154) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v297 = v149 + 1;
              char v298 = *(unsigned char *)(v151 + v149);
              *((void *)this + 1) = v297;
              v154 |= (unint64_t)(v298 & 0x7F) << v295;
              if (v298 < 0)
              {
                v295 += 7;
                unint64_t v149 = v297;
                BOOL v14 = v296++ > 8;
                if (v14) {
                  goto LABEL_351;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v154) = 0;
              }
            }
            break;
          }
LABEL_490:
          *(_DWORD *)(a1 + 160) = v154;
          goto LABEL_518;
        case 0x18u:
          *(void *)(a1 + 192) |= 0x100000uLL;
          unint64_t v157 = *((void *)this + 1);
          unint64_t v158 = *((void *)this + 2);
          uint64_t v159 = *(void *)this;
          if (v157 <= 0xFFFFFFFFFFFFFFF5 && v157 + 10 <= v158)
          {
            char v160 = 0;
            unsigned int v161 = 0;
            uint64_t v162 = 0;
            do
            {
              unint64_t v163 = v157 + 1;
              *((void *)this + 1) = v157 + 1;
              char v164 = *(unsigned char *)(v159 + v157);
              v162 |= (unint64_t)(v164 & 0x7F) << v160;
              if ((v164 & 0x80) == 0) {
                goto LABEL_493;
              }
              v160 += 7;
              unint64_t v157 = v163;
              BOOL v14 = v161++ > 8;
            }
            while (!v14);
LABEL_358:
            LODWORD(v162) = 0;
            goto LABEL_493;
          }
          char v299 = 0;
          unsigned int v300 = 0;
          uint64_t v162 = 0;
          if (v158 <= v157) {
            unint64_t v158 = *((void *)this + 1);
          }
          while (2)
          {
            if (v158 == v157)
            {
              LODWORD(v162) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v301 = v157 + 1;
              char v302 = *(unsigned char *)(v159 + v157);
              *((void *)this + 1) = v301;
              v162 |= (unint64_t)(v302 & 0x7F) << v299;
              if (v302 < 0)
              {
                v299 += 7;
                unint64_t v157 = v301;
                BOOL v14 = v300++ > 8;
                if (v14) {
                  goto LABEL_358;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v162) = 0;
              }
            }
            break;
          }
LABEL_493:
          *(_DWORD *)(a1 + 120) = v162;
          goto LABEL_518;
        case 0x19u:
          *(void *)(a1 + 192) |= 0x80000uLL;
          unint64_t v165 = *((void *)this + 1);
          unint64_t v166 = *((void *)this + 2);
          uint64_t v167 = *(void *)this;
          if (v165 <= 0xFFFFFFFFFFFFFFF5 && v165 + 10 <= v166)
          {
            char v168 = 0;
            unsigned int v169 = 0;
            uint64_t v170 = 0;
            do
            {
              unint64_t v171 = v165 + 1;
              *((void *)this + 1) = v165 + 1;
              char v172 = *(unsigned char *)(v167 + v165);
              v170 |= (unint64_t)(v172 & 0x7F) << v168;
              if ((v172 & 0x80) == 0) {
                goto LABEL_496;
              }
              v168 += 7;
              unint64_t v165 = v171;
              BOOL v14 = v169++ > 8;
            }
            while (!v14);
LABEL_365:
            LODWORD(v170) = 0;
            goto LABEL_496;
          }
          char v303 = 0;
          unsigned int v304 = 0;
          uint64_t v170 = 0;
          if (v166 <= v165) {
            unint64_t v166 = *((void *)this + 1);
          }
          while (2)
          {
            if (v166 == v165)
            {
              LODWORD(v170) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v305 = v165 + 1;
              char v306 = *(unsigned char *)(v167 + v165);
              *((void *)this + 1) = v305;
              v170 |= (unint64_t)(v306 & 0x7F) << v303;
              if (v306 < 0)
              {
                v303 += 7;
                unint64_t v165 = v305;
                BOOL v14 = v304++ > 8;
                if (v14) {
                  goto LABEL_365;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v170) = 0;
              }
            }
            break;
          }
LABEL_496:
          *(_DWORD *)(a1 + 116) = v170;
          goto LABEL_518;
        case 0x1Au:
          *(void *)(a1 + 192) |= 0x40000uLL;
          unint64_t v173 = *((void *)this + 1);
          unint64_t v174 = *((void *)this + 2);
          uint64_t v175 = *(void *)this;
          if (v173 <= 0xFFFFFFFFFFFFFFF5 && v173 + 10 <= v174)
          {
            char v176 = 0;
            unsigned int v177 = 0;
            uint64_t v178 = 0;
            do
            {
              unint64_t v179 = v173 + 1;
              *((void *)this + 1) = v173 + 1;
              char v180 = *(unsigned char *)(v175 + v173);
              v178 |= (unint64_t)(v180 & 0x7F) << v176;
              if ((v180 & 0x80) == 0) {
                goto LABEL_499;
              }
              v176 += 7;
              unint64_t v173 = v179;
              BOOL v14 = v177++ > 8;
            }
            while (!v14);
LABEL_372:
            LODWORD(v178) = 0;
            goto LABEL_499;
          }
          char v307 = 0;
          unsigned int v308 = 0;
          uint64_t v178 = 0;
          if (v174 <= v173) {
            unint64_t v174 = *((void *)this + 1);
          }
          while (2)
          {
            if (v174 == v173)
            {
              LODWORD(v178) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v309 = v173 + 1;
              char v310 = *(unsigned char *)(v175 + v173);
              *((void *)this + 1) = v309;
              v178 |= (unint64_t)(v310 & 0x7F) << v307;
              if (v310 < 0)
              {
                v307 += 7;
                unint64_t v173 = v309;
                BOOL v14 = v308++ > 8;
                if (v14) {
                  goto LABEL_372;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v178) = 0;
              }
            }
            break;
          }
LABEL_499:
          *(_DWORD *)(a1 + 112) = v178;
          goto LABEL_518;
        case 0x1Bu:
          operator new();
        case 0x1Cu:
          *(void *)(a1 + 192) |= 0x400uLL;
          unint64_t v181 = *((void *)this + 1);
          if (v181 > 0xFFFFFFFFFFFFFFFBLL || v181 + 4 > *((void *)this + 2)) {
            goto LABEL_232;
          }
          *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v181);
          goto LABEL_416;
        case 0x1Du:
          *(void *)(a1 + 192) |= 0x200uLL;
          unint64_t v182 = *((void *)this + 1);
          if (v182 > 0xFFFFFFFFFFFFFFFBLL || v182 + 4 > *((void *)this + 2)) {
            goto LABEL_232;
          }
          *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v182);
          goto LABEL_416;
        case 0x1Eu:
          *(void *)(a1 + 192) |= 0x2000000uLL;
          unint64_t v183 = *((void *)this + 1);
          if (v183 > 0xFFFFFFFFFFFFFFFBLL || v183 + 4 > *((void *)this + 2)) {
            goto LABEL_232;
          }
          *(_DWORD *)(a1 + 140) = *(_DWORD *)(*(void *)this + v183);
          goto LABEL_416;
        case 0x1Fu:
          *(void *)(a1 + 192) |= 0x1000000000uLL;
          unint64_t v184 = *((void *)this + 1);
          unint64_t v185 = *((void *)this + 2);
          uint64_t v186 = *(void *)this;
          if (v184 <= 0xFFFFFFFFFFFFFFF5 && v184 + 10 <= v185)
          {
            char v187 = 0;
            unsigned int v188 = 0;
            uint64_t v189 = 0;
            do
            {
              unint64_t v190 = v184 + 1;
              *((void *)this + 1) = v184 + 1;
              char v191 = *(unsigned char *)(v186 + v184);
              v189 |= (unint64_t)(v191 & 0x7F) << v187;
              if ((v191 & 0x80) == 0) {
                goto LABEL_502;
              }
              v187 += 7;
              unint64_t v184 = v190;
              BOOL v14 = v188++ > 8;
            }
            while (!v14);
LABEL_379:
            LODWORD(v189) = 0;
            goto LABEL_502;
          }
          char v311 = 0;
          unsigned int v312 = 0;
          uint64_t v189 = 0;
          if (v185 <= v184) {
            unint64_t v185 = *((void *)this + 1);
          }
          while (2)
          {
            if (v185 == v184)
            {
              LODWORD(v189) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v313 = v184 + 1;
              char v314 = *(unsigned char *)(v186 + v184);
              *((void *)this + 1) = v313;
              v189 |= (unint64_t)(v314 & 0x7F) << v311;
              if (v314 < 0)
              {
                v311 += 7;
                unint64_t v184 = v313;
                BOOL v14 = v312++ > 8;
                if (v14) {
                  goto LABEL_379;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v189) = 0;
              }
            }
            break;
          }
LABEL_502:
          *(_DWORD *)(a1 + 184) = v189;
          goto LABEL_518;
        case 0x20u:
          *(void *)(a1 + 192) |= 0x20uLL;
          unint64_t v192 = *((void *)this + 1);
          unint64_t v193 = *((void *)this + 2);
          uint64_t v194 = *(void *)this;
          if (v192 <= 0xFFFFFFFFFFFFFFF5 && v192 + 10 <= v193)
          {
            char v195 = 0;
            unsigned int v196 = 0;
            uint64_t v197 = 0;
            do
            {
              unint64_t v198 = v192 + 1;
              *((void *)this + 1) = v192 + 1;
              char v199 = *(unsigned char *)(v194 + v192);
              v197 |= (unint64_t)(v199 & 0x7F) << v195;
              if ((v199 & 0x80) == 0) {
                goto LABEL_505;
              }
              v195 += 7;
              unint64_t v192 = v198;
              BOOL v14 = v196++ > 8;
            }
            while (!v14);
LABEL_386:
            uint64_t v197 = 0;
            goto LABEL_505;
          }
          char v315 = 0;
          unsigned int v316 = 0;
          uint64_t v197 = 0;
          if (v193 <= v192) {
            unint64_t v193 = *((void *)this + 1);
          }
          while (2)
          {
            if (v193 == v192)
            {
              uint64_t v197 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v317 = v192 + 1;
              char v318 = *(unsigned char *)(v194 + v192);
              *((void *)this + 1) = v317;
              v197 |= (unint64_t)(v318 & 0x7F) << v315;
              if (v318 < 0)
              {
                v315 += 7;
                unint64_t v192 = v317;
                BOOL v14 = v316++ > 8;
                if (v14) {
                  goto LABEL_386;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v197 = 0;
              }
            }
            break;
          }
LABEL_505:
          *(void *)(a1 + 56) = v197;
          goto LABEL_518;
        case 0x21u:
          *(void *)(a1 + 192) |= 0x10000000uLL;
          unint64_t v200 = *((void *)this + 1);
          unint64_t v201 = *((void *)this + 2);
          uint64_t v202 = *(void *)this;
          if (v200 <= 0xFFFFFFFFFFFFFFF5 && v200 + 10 <= v201)
          {
            char v203 = 0;
            unsigned int v204 = 0;
            uint64_t v205 = 0;
            do
            {
              unint64_t v206 = v200 + 1;
              *((void *)this + 1) = v200 + 1;
              char v207 = *(unsigned char *)(v202 + v200);
              v205 |= (unint64_t)(v207 & 0x7F) << v203;
              if ((v207 & 0x80) == 0) {
                goto LABEL_508;
              }
              v203 += 7;
              unint64_t v200 = v206;
              BOOL v14 = v204++ > 8;
            }
            while (!v14);
LABEL_393:
            LODWORD(v205) = 0;
            goto LABEL_508;
          }
          char v319 = 0;
          unsigned int v320 = 0;
          uint64_t v205 = 0;
          if (v201 <= v200) {
            unint64_t v201 = *((void *)this + 1);
          }
          while (2)
          {
            if (v201 == v200)
            {
              LODWORD(v205) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v321 = v200 + 1;
              char v322 = *(unsigned char *)(v202 + v200);
              *((void *)this + 1) = v321;
              v205 |= (unint64_t)(v322 & 0x7F) << v319;
              if (v322 < 0)
              {
                v319 += 7;
                unint64_t v200 = v321;
                BOOL v14 = v320++ > 8;
                if (v14) {
                  goto LABEL_393;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v205) = 0;
              }
            }
            break;
          }
LABEL_508:
          *(_DWORD *)(a1 + 152) = v205;
          goto LABEL_518;
        case 0x22u:
          *(void *)(a1 + 192) |= 0x2000000000uLL;
          unint64_t v208 = *((void *)this + 1);
          unint64_t v209 = *((void *)this + 2);
          uint64_t v210 = *(void *)this;
          if (v208 <= 0xFFFFFFFFFFFFFFF5 && v208 + 10 <= v209)
          {
            char v211 = 0;
            unsigned int v212 = 0;
            uint64_t v213 = 0;
            do
            {
              unint64_t v214 = v208 + 1;
              *((void *)this + 1) = v208 + 1;
              char v215 = *(unsigned char *)(v210 + v208);
              v213 |= (unint64_t)(v215 & 0x7F) << v211;
              if ((v215 & 0x80) == 0) {
                goto LABEL_511;
              }
              v211 += 7;
              unint64_t v208 = v214;
              BOOL v14 = v212++ > 8;
            }
            while (!v14);
LABEL_400:
            LODWORD(v213) = 0;
            goto LABEL_511;
          }
          char v323 = 0;
          unsigned int v324 = 0;
          uint64_t v213 = 0;
          if (v209 <= v208) {
            unint64_t v209 = *((void *)this + 1);
          }
          while (2)
          {
            if (v209 == v208)
            {
              LODWORD(v213) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v325 = v208 + 1;
              char v326 = *(unsigned char *)(v210 + v208);
              *((void *)this + 1) = v325;
              v213 |= (unint64_t)(v326 & 0x7F) << v323;
              if (v326 < 0)
              {
                v323 += 7;
                unint64_t v208 = v325;
                BOOL v14 = v324++ > 8;
                if (v14) {
                  goto LABEL_400;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v213) = 0;
              }
            }
            break;
          }
LABEL_511:
          *(_DWORD *)(a1 + 188) = v213;
          goto LABEL_518;
        case 0x23u:
          *(void *)(a1 + 192) |= 0x40uLL;
          unint64_t v216 = *((void *)this + 1);
          unint64_t v217 = *((void *)this + 2);
          uint64_t v218 = *(void *)this;
          if (v216 <= 0xFFFFFFFFFFFFFFF5 && v216 + 10 <= v217)
          {
            char v219 = 0;
            unsigned int v220 = 0;
            uint64_t v221 = 0;
            do
            {
              unint64_t v222 = v216 + 1;
              *((void *)this + 1) = v216 + 1;
              char v223 = *(unsigned char *)(v218 + v216);
              v221 |= (unint64_t)(v223 & 0x7F) << v219;
              if ((v223 & 0x80) == 0) {
                goto LABEL_514;
              }
              v219 += 7;
              unint64_t v216 = v222;
              BOOL v14 = v220++ > 8;
            }
            while (!v14);
LABEL_407:
            LODWORD(v221) = 0;
            goto LABEL_514;
          }
          char v327 = 0;
          unsigned int v328 = 0;
          uint64_t v221 = 0;
          if (v217 <= v216) {
            unint64_t v217 = *((void *)this + 1);
          }
          while (2)
          {
            if (v217 == v216)
            {
              LODWORD(v221) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v329 = v216 + 1;
              char v330 = *(unsigned char *)(v218 + v216);
              *((void *)this + 1) = v329;
              v221 |= (unint64_t)(v330 & 0x7F) << v327;
              if (v330 < 0)
              {
                v327 += 7;
                unint64_t v216 = v329;
                BOOL v14 = v328++ > 8;
                if (v14) {
                  goto LABEL_407;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v221) = 0;
              }
            }
            break;
          }
LABEL_514:
          *(_DWORD *)(a1 + 64) = v221;
          goto LABEL_518;
        case 0x24u:
          *(void *)(a1 + 192) |= 0x80000000uLL;
          unint64_t v224 = *((void *)this + 1);
          if (v224 > 0xFFFFFFFFFFFFFFFBLL || v224 + 4 > *((void *)this + 2)) {
            goto LABEL_232;
          }
          *(_DWORD *)(a1 + 164) = *(_DWORD *)(*(void *)this + v224);
          goto LABEL_416;
        case 0x25u:
          *(void *)(a1 + 192) |= 0x100000000uLL;
          unint64_t v225 = *((void *)this + 1);
          if (v225 > 0xFFFFFFFFFFFFFFFBLL || v225 + 4 > *((void *)this + 2)) {
            goto LABEL_232;
          }
          *(_DWORD *)(a1 + 168) = *(_DWORD *)(*(void *)this + v225);
          goto LABEL_416;
        case 0x26u:
          *(void *)(a1 + 192) |= 0x200000000uLL;
          unint64_t v226 = *((void *)this + 1);
          if (v226 <= 0xFFFFFFFFFFFFFFFBLL && v226 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 172) = *(_DWORD *)(*(void *)this + v226);
LABEL_416:
            uint64_t v95 = *((void *)this + 1) + 4;
LABEL_417:
            *((void *)this + 1) = v95;
          }
          else
          {
LABEL_232:
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_518;
        case 0x27u:
          *(void *)(a1 + 192) |= 0x400000000uLL;
          unint64_t v227 = *((void *)this + 1);
          unint64_t v228 = *((void *)this + 2);
          uint64_t v229 = *(void *)this;
          if (v227 <= 0xFFFFFFFFFFFFFFF5 && v227 + 10 <= v228)
          {
            char v230 = 0;
            unsigned int v231 = 0;
            uint64_t v232 = 0;
            do
            {
              unint64_t v233 = v227 + 1;
              *((void *)this + 1) = v227 + 1;
              char v234 = *(unsigned char *)(v229 + v227);
              v232 |= (unint64_t)(v234 & 0x7F) << v230;
              if ((v234 & 0x80) == 0) {
                goto LABEL_517;
              }
              v230 += 7;
              unint64_t v227 = v233;
              BOOL v14 = v231++ > 8;
            }
            while (!v14);
LABEL_414:
            LODWORD(v232) = 0;
            goto LABEL_517;
          }
          char v331 = 0;
          unsigned int v332 = 0;
          uint64_t v232 = 0;
          if (v228 <= v227) {
            unint64_t v228 = *((void *)this + 1);
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          goto LABEL_518;
      }
      while (1)
      {
        if (v228 == v227)
        {
          LODWORD(v232) = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_517;
        }
        unint64_t v333 = v227 + 1;
        char v334 = *(unsigned char *)(v229 + v227);
        *((void *)this + 1) = v333;
        v232 |= (unint64_t)(v334 & 0x7F) << v331;
        if ((v334 & 0x80) == 0) {
          break;
        }
        v331 += 7;
        unint64_t v227 = v333;
        BOOL v14 = v332++ > 8;
        if (v14) {
          goto LABEL_414;
        }
      }
      if (*((unsigned char *)this + 24)) {
        LODWORD(v232) = 0;
      }
LABEL_517:
      *(_DWORD *)(a1 + 176) = v232;
LABEL_518:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C53780(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(result + 192);
  if ((v4 & 0x8000) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    uint64_t v4 = *(void *)(v3 + 192);
    if ((v4 & 0x100) == 0)
    {
LABEL_3:
      if ((v4 & 0x10000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_45;
    }
  }
  else if ((v4 & 0x100) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x10000) == 0)
  {
LABEL_4:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x20000) == 0)
  {
LABEL_5:
    if ((v4 & 0x800) == 0) {
      goto LABEL_6;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x800) == 0)
  {
LABEL_6:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_7:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x2000) == 0)
  {
LABEL_8:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x1000) == 0)
  {
LABEL_9:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_10:
    if ((v4 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 8) == 0)
  {
LABEL_11:
    if ((v4 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40));
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 1) == 0)
  {
LABEL_12:
    if ((v4 & 4) == 0) {
      goto LABEL_13;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 4) == 0)
  {
LABEL_13:
    if ((v4 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 2) == 0)
  {
LABEL_14:
    if ((v4 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x80) == 0)
  {
LABEL_15:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_16:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 156));
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_17:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x4000) == 0)
  {
LABEL_18:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_60;
  }
LABEL_59:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 96));
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x400000) == 0)
  {
LABEL_19:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 128));
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x200000) == 0)
  {
LABEL_20:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 124));
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x800000) == 0)
  {
LABEL_21:
    if ((v4 & 0x10) == 0) {
      goto LABEL_22;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 132));
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x10) == 0)
  {
LABEL_22:
    if ((v4 & 0x800000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_64;
  }
LABEL_63:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x800000000) == 0)
  {
LABEL_23:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_65;
  }
LABEL_64:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x40000000) == 0)
  {
LABEL_24:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_66;
  }
LABEL_65:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x100000) == 0)
  {
LABEL_25:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_67;
  }
LABEL_66:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x80000) == 0)
  {
LABEL_26:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_27;
  }
LABEL_67:
  uint64_t result = PB::Writer::writeVarInt(this);
  if ((*(void *)(v3 + 192) & 0x40000) != 0) {
LABEL_27:
  }
    uint64_t result = PB::Writer::writeVarInt(this);
LABEL_28:
  uint64_t v5 = *(const PB::Base **)(v3 + 32);
  if (v5) {
    uint64_t result = PB::Writer::writeSubmessage(this, v5);
  }
  uint64_t v6 = *(void *)(v3 + 192);
  if ((v6 & 0x400) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80));
    uint64_t v6 = *(void *)(v3 + 192);
    if ((v6 & 0x200) == 0)
    {
LABEL_32:
      if ((v6 & 0x2000000) == 0) {
        goto LABEL_33;
      }
      goto LABEL_71;
    }
  }
  else if ((v6 & 0x200) == 0)
  {
    goto LABEL_32;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76));
  uint64_t v6 = *(void *)(v3 + 192);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_33:
    if ((v6 & 0x1000000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_72;
  }
LABEL_71:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 140));
  uint64_t v6 = *(void *)(v3 + 192);
  if ((v6 & 0x1000000000) == 0)
  {
LABEL_34:
    if ((v6 & 0x20) == 0) {
      goto LABEL_35;
    }
    goto LABEL_73;
  }
LABEL_72:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v6 = *(void *)(v3 + 192);
  if ((v6 & 0x20) == 0)
  {
LABEL_35:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_74;
  }
LABEL_73:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v6 = *(void *)(v3 + 192);
  if ((v6 & 0x10000000) == 0)
  {
LABEL_36:
    if ((v6 & 0x2000000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_75;
  }
LABEL_74:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v6 = *(void *)(v3 + 192);
  if ((v6 & 0x2000000000) == 0)
  {
LABEL_37:
    if ((v6 & 0x40) == 0) {
      goto LABEL_38;
    }
    goto LABEL_76;
  }
LABEL_75:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v6 = *(void *)(v3 + 192);
  if ((v6 & 0x40) == 0)
  {
LABEL_38:
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_77;
  }
LABEL_76:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v6 = *(void *)(v3 + 192);
  if ((v6 & 0x80000000) == 0)
  {
LABEL_39:
    if ((v6 & 0x100000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_78;
  }
LABEL_77:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 164));
  uint64_t v6 = *(void *)(v3 + 192);
  if ((v6 & 0x100000000) == 0)
  {
LABEL_40:
    if ((v6 & 0x200000000) == 0) {
      goto LABEL_41;
    }
LABEL_79:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 172));
    if ((*(void *)(v3 + 192) & 0x400000000) == 0) {
      return result;
    }
    goto LABEL_80;
  }
LABEL_78:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 168));
  uint64_t v6 = *(void *)(v3 + 192);
  if ((v6 & 0x200000000) != 0) {
    goto LABEL_79;
  }
LABEL_41:
  if ((v6 & 0x400000000) == 0) {
    return result;
  }
LABEL_80:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227C53BF4(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC274C0;
  *(_DWORD *)(result + 12) = 0;
  return result;
}

void sub_227C53C1C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C53C54(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC274C0;
  *(_DWORD *)(result + 12) = 0;
  if (*(unsigned char *)(a2 + 12))
  {
    char v2 = *(unsigned char *)(a2 + 8);
    *(unsigned char *)(result + 12) = 1;
    *(unsigned char *)(result + 8) = v2;
  }
  return result;
}

uint64_t sub_227C53C90(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 12)) {
    PB::TextFormatter::format(this, "isWifiAssociated");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C53CF0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 12) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
        if (v2 >= v3)
        {
          BOOL v21 = 0;
          *((unsigned char *)this + 24) = 1;
        }
        else
        {
          int v20 = *(unsigned __int8 *)(*(void *)this + v2++);
          *((void *)this + 1) = v2;
          BOOL v21 = v20 != 0;
        }
        *(unsigned char *)(a1 + 8) = v21;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C53E80(uint64_t result, PB::Writer *this)
{
  if (*(unsigned char *)(result + 12)) {
    return PB::Writer::write(this);
  }
  return result;
}

void *sub_227C53EA0(void *result)
{
  *uint64_t result = &unk_26DC274F8;
  result[1] = 0;
  return result;
}

void sub_227C53EC0(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC274F8;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C53F40(PB::Base *a1)
{
  sub_227C53EC0(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227C53F78(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC274F8;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C54020(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C5409C(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C542B8(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

uint64_t sub_227C542D4(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC27530;
  *(_DWORD *)(result + 12) = 0;
  return result;
}

void sub_227C542FC(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227C54334(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC27530;
  *(_DWORD *)(a1 + 12) = 0;
  if (*(unsigned char *)(a2 + 12))
  {
    float result = *(float *)(a2 + 8);
    *(unsigned char *)(a1 + 12) = 1;
    *(float *)(a1 + 8) = result;
  }
  return result;
}

uint64_t sub_227C54370(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 12)) {
    PB::TextFormatter::format(this, "walkingVariable01", *(float *)(a1 + 8));
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C543D0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 12) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
        {
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 4;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C5456C(uint64_t result, PB::Writer *this)
{
  if (*(unsigned char *)(result + 12)) {
    return PB::Writer::write(this, *(float *)(result + 8));
  }
  return result;
}

double sub_227C54588(uint64_t a1)
{
  *(void *)a1 = &unk_26DC27568;
  *(_DWORD *)(a1 + 76) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return result;
}

void sub_227C545BC(PB::Base *this)
{
  *(void *)this = &unk_26DC27568;
  unint64_t v2 = (void *)*((void *)this + 4);
  if (v2)
  {
    *((void *)this + 5) = v2;
    operator delete(v2);
  }
  unint64_t v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 2) = v3;
    operator delete(v3);
  }

  PB::Base::~Base(this);
}

void sub_227C54630(PB::Base *a1)
{
  sub_227C545BC(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C54668(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC27568;
  *(_OWORD *)(a1 + 8) = 0u;
  int v4 = (char *)(a1 + 8);
  *(_DWORD *)(a1 + 76) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  char v5 = *(unsigned char *)(a2 + 76);
  if ((v5 & 2) != 0)
  {
    uint64_t v7 = *(void *)(a2 + 64);
    char v6 = 2;
    *(unsigned char *)(a1 + 76) = 2;
    *(void *)(a1 + 64) = v7;
    char v5 = *(unsigned char *)(a2 + 76);
    if ((v5 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v6 = 0;
  if (*(unsigned char *)(a2 + 76))
  {
LABEL_5:
    uint64_t v8 = *(void *)(a2 + 56);
    v6 |= 1u;
    *(unsigned char *)(a1 + 76) = v6;
    *(void *)(a1 + 56) = v8;
    char v5 = *(unsigned char *)(a2 + 76);
  }
LABEL_6:
  if ((v5 & 4) != 0)
  {
    int v9 = *(_DWORD *)(a2 + 72);
    *(unsigned char *)(a1 + 76) = v6 | 4;
    *(_DWORD *)(a1 + 72) = v9;
  }
  if (a1 != a2)
  {
    sub_227B8BA68((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
    sub_227B8BA68(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  return a1;
}

uint64_t sub_227C54758(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(float **)(a1 + 8);
  char v6 = *(float **)(a1 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    PB::TextFormatter::format(this, "accel", v7);
  }
  if (*(unsigned char *)(a1 + 76)) {
    PB::TextFormatter::format(this, "adjustedTimestamp", *(double *)(a1 + 56));
  }
  uint64_t v8 = *(float **)(a1 + 32);
  int v9 = *(float **)(a1 + 40);
  while (v8 != v9)
  {
    float v10 = *v8++;
    PB::TextFormatter::format(this, "gravity", v10);
  }
  char v11 = *(unsigned char *)(a1 + 76);
  if ((v11 & 4) != 0)
  {
    PB::TextFormatter::format(this, "rawProjectedSignal", *(float *)(a1 + 72));
    char v11 = *(unsigned char *)(a1 + 76);
  }
  if ((v11 & 2) != 0) {
    PB::TextFormatter::format(this, "timestamp");
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227C54858(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = (void **)(a1 + 8);
    uint64_t v9 = a1 + 24;
    float v10 = (void **)(a1 + 32);
    uint64_t v11 = a1 + 48;
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        BOOL v18 = v14++ > 8;
        if (v18) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v24 = v15 & 7;
      if (v24 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v15 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 76) |= 2u;
          unint64_t v25 = *((void *)this + 1);
          unint64_t v26 = *((void *)this + 2);
          uint64_t v27 = *(void *)this;
          if (v25 <= 0xFFFFFFFFFFFFFFF5 && v25 + 10 <= v26)
          {
            char v28 = 0;
            unsigned int v29 = 0;
            uint64_t v30 = 0;
            do
            {
              unint64_t v31 = v25 + 1;
              *((void *)this + 1) = v25 + 1;
              char v32 = *(unsigned char *)(v27 + v25);
              v30 |= (unint64_t)(v32 & 0x7F) << v28;
              if ((v32 & 0x80) == 0) {
                goto LABEL_118;
              }
              v28 += 7;
              unint64_t v25 = v31;
              BOOL v18 = v29++ > 8;
            }
            while (!v18);
LABEL_92:
            uint64_t v30 = 0;
            goto LABEL_118;
          }
          char v64 = 0;
          unsigned int v65 = 0;
          uint64_t v30 = 0;
          if (v26 <= v25) {
            unint64_t v26 = *((void *)this + 1);
          }
          while (2)
          {
            if (v26 == v25)
            {
              uint64_t v30 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v66 = v25 + 1;
              char v67 = *(unsigned char *)(v27 + v25);
              *((void *)this + 1) = v66;
              v30 |= (unint64_t)(v67 & 0x7F) << v64;
              if (v67 < 0)
              {
                v64 += 7;
                unint64_t v25 = v66;
                BOOL v18 = v65++ > 8;
                if (v18) {
                  goto LABEL_92;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v30 = 0;
              }
            }
            break;
          }
LABEL_118:
          *(void *)(a1 + 64) = v30;
          goto LABEL_139;
        case 2u:
          *(unsigned char *)(a1 + 76) |= 1u;
          unint64_t v33 = *((void *)this + 1);
          if (v33 > 0xFFFFFFFFFFFFFFF7 || v33 + 8 > *((void *)this + 2)) {
            goto LABEL_135;
          }
          *(void *)(a1 + 56) = *(void *)(*(void *)this + v33);
          uint64_t v34 = *((void *)this + 1) + 8;
          goto LABEL_138;
        case 3u:
          *(unsigned char *)(a1 + 76) |= 4u;
          unint64_t v35 = *((void *)this + 1);
          if (v35 > 0xFFFFFFFFFFFFFFFBLL || v35 + 4 > *((void *)this + 2)) {
            goto LABEL_135;
          }
          *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v35);
          goto LABEL_137;
        case 4u:
          if (v24 != 2)
          {
            unint64_t v69 = *(char **)(a1 + 40);
            unint64_t v68 = *(void *)(a1 + 48);
            if ((unint64_t)v69 >= v68)
            {
              unsigned int v73 = (char *)*v10;
              uint64_t v74 = (v69 - (unsigned char *)*v10) >> 2;
              unint64_t v75 = v74 + 1;
              if ((unint64_t)(v74 + 1) >> 62) {
LABEL_149:
              }
                sub_227B8B89C();
              uint64_t v76 = v68 - (void)v73;
              if (v76 >> 1 > v75) {
                unint64_t v75 = v76 >> 1;
              }
              if ((unint64_t)v76 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v77 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v77 = v75;
              }
              if (v77)
              {
                unint64_t v78 = (char *)sub_227B8BBB8(v11, v77);
                unsigned int v73 = *(char **)(a1 + 32);
                unint64_t v69 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v78 = 0;
              }
              unint64_t v85 = &v78[4 * v74];
              *(_DWORD *)unint64_t v85 = 0;
              unint64_t v70 = v85 + 4;
              while (v69 != v73)
              {
                int v86 = *((_DWORD *)v69 - 1);
                v69 -= 4;
                *((_DWORD *)v85 - 1) = v86;
                v85 -= 4;
              }
              *(void *)(a1 + 32) = v85;
              *(void *)(a1 + 40) = v70;
              *(void *)(a1 + 48) = &v78[4 * v77];
              if (v73) {
                operator delete(v73);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v69 = 0;
              unint64_t v70 = v69 + 4;
            }
            *(void *)(a1 + 40) = v70;
            goto LABEL_133;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v36 = *((void *)this + 1);
          unint64_t v37 = *((void *)this + 2);
          while (v36 < v37 && !*((unsigned char *)this + 24))
          {
            uint64_t v39 = *(char **)(a1 + 40);
            unint64_t v38 = *(void *)(a1 + 48);
            if ((unint64_t)v39 >= v38)
            {
              unsigned int v41 = (char *)*v10;
              uint64_t v42 = (v39 - (unsigned char *)*v10) >> 2;
              unint64_t v43 = v42 + 1;
              if ((unint64_t)(v42 + 1) >> 62) {
                goto LABEL_149;
              }
              uint64_t v44 = v38 - (void)v41;
              if (v44 >> 1 > v43) {
                unint64_t v43 = v44 >> 1;
              }
              if ((unint64_t)v44 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v45 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v45 = v43;
              }
              if (v45)
              {
                unint64_t v46 = (char *)sub_227B8BBB8(v11, v45);
                unsigned int v41 = *(char **)(a1 + 32);
                uint64_t v39 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v46 = 0;
              }
              uint64_t v47 = &v46[4 * v42];
              *(_DWORD *)uint64_t v47 = 0;
              char v40 = v47 + 4;
              while (v39 != v41)
              {
                int v48 = *((_DWORD *)v39 - 1);
                v39 -= 4;
                *((_DWORD *)v47 - 1) = v48;
                v47 -= 4;
              }
              *(void *)(a1 + 32) = v47;
              *(void *)(a1 + 40) = v40;
              *(void *)(a1 + 48) = &v46[4 * v45];
              if (v41) {
                operator delete(v41);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v39 = 0;
              char v40 = v39 + 4;
            }
            *(void *)(a1 + 40) = v40;
            unint64_t v49 = *((void *)this + 1);
            if (v49 > 0xFFFFFFFFFFFFFFFBLL || v49 + 4 > *((void *)this + 2)) {
              goto LABEL_97;
            }
            *(v40 - 1) = *(_DWORD *)(*(void *)this + v49);
            unint64_t v37 = *((void *)this + 2);
            unint64_t v36 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v36;
          }
          goto LABEL_98;
        case 5u:
          if (v24 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v50 = *((void *)this + 1);
            unint64_t v51 = *((void *)this + 2);
            while (v50 < v51 && !*((unsigned char *)this + 24))
            {
              unint64_t v53 = *(char **)(a1 + 16);
              unint64_t v52 = *(void *)(a1 + 24);
              if ((unint64_t)v53 >= v52)
              {
                uint64_t v55 = (char *)*v8;
                uint64_t v56 = (v53 - (unsigned char *)*v8) >> 2;
                unint64_t v57 = v56 + 1;
                if ((unint64_t)(v56 + 1) >> 62) {
                  goto LABEL_150;
                }
                uint64_t v58 = v52 - (void)v55;
                if (v58 >> 1 > v57) {
                  unint64_t v57 = v58 >> 1;
                }
                if ((unint64_t)v58 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v59 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v59 = v57;
                }
                if (v59)
                {
                  char v60 = (char *)sub_227B8BBB8(v9, v59);
                  uint64_t v55 = *(char **)(a1 + 8);
                  unint64_t v53 = *(char **)(a1 + 16);
                }
                else
                {
                  char v60 = 0;
                }
                unint64_t v61 = &v60[4 * v56];
                *(_DWORD *)unint64_t v61 = 0;
                unint64_t v54 = v61 + 4;
                while (v53 != v55)
                {
                  int v62 = *((_DWORD *)v53 - 1);
                  v53 -= 4;
                  *((_DWORD *)v61 - 1) = v62;
                  v61 -= 4;
                }
                *(void *)(a1 + 8) = v61;
                *(void *)(a1 + 16) = v54;
                *(void *)(a1 + 24) = &v60[4 * v59];
                if (v55) {
                  operator delete(v55);
                }
              }
              else
              {
                *(_DWORD *)unint64_t v53 = 0;
                unint64_t v54 = v53 + 4;
              }
              *(void *)(a1 + 16) = v54;
              unint64_t v63 = *((void *)this + 1);
              if (v63 > 0xFFFFFFFFFFFFFFFBLL || v63 + 4 > *((void *)this + 2))
              {
LABEL_97:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v54 - 1) = *(_DWORD *)(*(void *)this + v63);
              unint64_t v51 = *((void *)this + 2);
              unint64_t v50 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v50;
            }
LABEL_98:
            PB::Reader::recallMark();
          }
          else
          {
            char v72 = *(char **)(a1 + 16);
            unint64_t v71 = *(void *)(a1 + 24);
            if ((unint64_t)v72 >= v71)
            {
              uint64_t v79 = (char *)*v8;
              uint64_t v80 = (v72 - (unsigned char *)*v8) >> 2;
              unint64_t v81 = v80 + 1;
              if ((unint64_t)(v80 + 1) >> 62) {
LABEL_150:
              }
                sub_227B8B89C();
              uint64_t v82 = v71 - (void)v79;
              if (v82 >> 1 > v81) {
                unint64_t v81 = v82 >> 1;
              }
              if ((unint64_t)v82 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v83 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v83 = v81;
              }
              if (v83)
              {
                char v84 = (char *)sub_227B8BBB8(v9, v83);
                uint64_t v79 = *(char **)(a1 + 8);
                char v72 = *(char **)(a1 + 16);
              }
              else
              {
                char v84 = 0;
              }
              uint64_t v87 = &v84[4 * v80];
              *(_DWORD *)uint64_t v87 = 0;
              unint64_t v70 = v87 + 4;
              while (v72 != v79)
              {
                int v88 = *((_DWORD *)v72 - 1);
                v72 -= 4;
                *((_DWORD *)v87 - 1) = v88;
                v87 -= 4;
              }
              *(void *)(a1 + 8) = v87;
              *(void *)(a1 + 16) = v70;
              *(void *)(a1 + 24) = &v84[4 * v83];
              if (v79) {
                operator delete(v79);
              }
            }
            else
            {
              *(_DWORD *)char v72 = 0;
              unint64_t v70 = v72 + 4;
            }
            *(void *)(a1 + 16) = v70;
LABEL_133:
            unint64_t v89 = *((void *)this + 1);
            if (v89 <= 0xFFFFFFFFFFFFFFFBLL && v89 + 4 <= *((void *)this + 2))
            {
              *(v70 - 1) = *(_DWORD *)(*(void *)this + v89);
LABEL_137:
              uint64_t v34 = *((void *)this + 1) + 4;
LABEL_138:
              *((void *)this + 1) = v34;
            }
            else
            {
LABEL_135:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_139:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_139;
      }
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v15 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v21 = v2 + 1;
      char v22 = *(unsigned char *)(v12 + v2);
      *((void *)this + 1) = v21;
      v15 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0) {
        goto LABEL_21;
      }
      v19 += 7;
      unint64_t v2 = v21;
      if (v20++ >= 9)
      {
LABEL_20:
        unint64_t v15 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C54F18(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 76);
  if ((v4 & 2) == 0)
  {
    if ((*(unsigned char *)(result + 76) & 1) == 0) {
      goto LABEL_3;
    }
LABEL_13:
    double result = PB::Writer::write(this, *(double *)(v3 + 56));
    if ((*(unsigned char *)(v3 + 76) & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  double result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 76);
  if (v4) {
    goto LABEL_13;
  }
LABEL_3:
  if ((v4 & 4) != 0) {
LABEL_4:
  }
    double result = PB::Writer::write(this, *(float *)(v3 + 72));
LABEL_5:
  char v5 = *(float **)(v3 + 32);
  char v6 = *(float **)(v3 + 40);
  while (v5 != v6)
  {
    float v7 = *v5++;
    double result = PB::Writer::write(this, v7);
  }
  uint64_t v9 = *(float **)(v3 + 8);
  uint64_t v8 = *(float **)(v3 + 16);
  while (v9 != v8)
  {
    float v10 = *v9++;
    double result = PB::Writer::write(this, v10);
  }
  return result;
}

uint64_t sub_227C54FD8(uint64_t result)
{
  *(void *)double result = &unk_26DC275A0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void sub_227C55000(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227C55038(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC275A0;
  *(_DWORD *)(a1 + 40) = 0;
  char v2 = *(unsigned char *)(a2 + 40);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 40) = 1;
    *(void *)(a1 + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 40);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 40) & 8) != 0)
  {
LABEL_5:
    LODWORD(v4) = *(_DWORD *)(a2 + 24);
    v3 |= 8u;
    *(unsigned char *)(a1 + 40) = v3;
    *(_DWORD *)(a1 + 24) = v4;
    char v2 = *(unsigned char *)(a2 + 40);
  }
LABEL_6:
  if ((v2 & 0x40) != 0)
  {
    LODWORD(v4) = *(_DWORD *)(a2 + 36);
    v3 |= 0x40u;
    *(unsigned char *)(a1 + 40) = v3;
    *(_DWORD *)(a1 + 36) = v4;
    char v2 = *(unsigned char *)(a2 + 40);
    if ((v2 & 2) == 0)
    {
LABEL_8:
      if ((v2 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_14;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_8;
  }
  LODWORD(v4) = *(_DWORD *)(a2 + 16);
  v3 |= 2u;
  *(unsigned char *)(a1 + 40) = v3;
  *(_DWORD *)(a1 + 16) = v4;
  char v2 = *(unsigned char *)(a2 + 40);
  if ((v2 & 0x20) == 0)
  {
LABEL_9:
    if ((v2 & 4) == 0) {
      goto LABEL_10;
    }
    goto LABEL_15;
  }
LABEL_14:
  LODWORD(v4) = *(_DWORD *)(a2 + 32);
  v3 |= 0x20u;
  *(unsigned char *)(a1 + 40) = v3;
  *(_DWORD *)(a1 + 32) = v4;
  char v2 = *(unsigned char *)(a2 + 40);
  if ((v2 & 4) == 0)
  {
LABEL_10:
    if ((v2 & 0x10) == 0) {
      return *(float *)&v4;
    }
    goto LABEL_16;
  }
LABEL_15:
  LODWORD(v4) = *(_DWORD *)(a2 + 20);
  v3 |= 4u;
  *(unsigned char *)(a1 + 40) = v3;
  *(_DWORD *)(a1 + 20) = v4;
  if ((*(unsigned char *)(a2 + 40) & 0x10) == 0) {
    return *(float *)&v4;
  }
LABEL_16:
  LODWORD(v4) = *(_DWORD *)(a2 + 28);
  *(unsigned char *)(a1 + 40) = v3 | 0x10;
  *(_DWORD *)(a1 + 28) = v4;
  return *(float *)&v4;
}

uint64_t sub_227C55128(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "cadence", *(float *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 40);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(a1 + 40) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "horizontalRotationRateFiltered", *(float *)(a1 + 20));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(this, "sample", *(float *)(a1 + 24));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 1) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "verticalRotationRateFiltered", *(float *)(a1 + 28));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_17:
  PB::TextFormatter::format(this, "verticalUserAcceleration", *(float *)(a1 + 32));
  if ((*(unsigned char *)(a1 + 40) & 0x40) != 0) {
LABEL_8:
  }
    PB::TextFormatter::format(this, "walkSpeedFilteredSample", *(float *)(a1 + 36));
LABEL_9:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C5524C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 40) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          goto LABEL_47;
        case 2u:
          *(unsigned char *)(a1 + 40) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_46;
        case 3u:
          *(unsigned char *)(a1 + 40) |= 0x40u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_46;
        case 4u:
          *(unsigned char *)(a1 + 40) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_46;
        case 5u:
          *(unsigned char *)(a1 + 40) |= 0x20u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_46;
        case 6u:
          *(unsigned char *)(a1 + 40) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_46;
        case 7u:
          *(unsigned char *)(a1 + 40) |= 0x10u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
LABEL_46:
            unint64_t v2 = *((void *)this + 1) + 4;
LABEL_47:
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_44:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C55580(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 40);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(result + 40) & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 0x40) == 0)
  {
LABEL_4:
    if ((v4 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36));
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 2) == 0)
  {
LABEL_5:
    if ((v4 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16));
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 0x20) == 0)
  {
LABEL_6:
    if ((v4 & 4) == 0) {
      goto LABEL_7;
    }
LABEL_14:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
    if ((*(unsigned char *)(v3 + 40) & 0x10) == 0) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_13:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_7:
  if ((v4 & 0x10) == 0) {
    return result;
  }
LABEL_15:
  float v5 = *(float *)(v3 + 28);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227C5567C(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC275D8;
  *(_DWORD *)(result + 68) = 0;
  return result;
}

void sub_227C556A4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C556DC(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC275D8;
  *(_DWORD *)(result + 68) = 0;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x10) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 40);
    __int16 v3 = 16;
    *(_WORD *)(result + 68) = 16;
    *(void *)(result + 40) = v4;
    __int16 v2 = *(_WORD *)(a2 + 68);
    if ((v2 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 0x20) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 48);
    v3 |= 0x20u;
    *(_WORD *)(result + 68) = v3;
    *(_DWORD *)(result + 48) = v5;
    __int16 v2 = *(_WORD *)(a2 + 68);
  }
LABEL_6:
  if ((v2 & 0x400) != 0)
  {
    char v6 = *(unsigned char *)(a2 + 65);
    v3 |= 0x400u;
    *(_WORD *)(result + 68) = v3;
    *(unsigned char *)(result + 65) = v6;
    __int16 v2 = *(_WORD *)(a2 + 68);
    if ((v2 & 2) == 0)
    {
LABEL_8:
      if ((v2 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_18;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(result + 68) = v3;
  *(void *)(result + 16) = v7;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x40) == 0)
  {
LABEL_9:
    if ((v2 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_19;
  }
LABEL_18:
  int v8 = *(_DWORD *)(a2 + 52);
  v3 |= 0x40u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 52) = v8;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x100) == 0)
  {
LABEL_10:
    if ((v2 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_20;
  }
LABEL_19:
  int v9 = *(_DWORD *)(a2 + 60);
  v3 |= 0x100u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 60) = v9;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x80) == 0)
  {
LABEL_11:
    if ((v2 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_21;
  }
LABEL_20:
  int v10 = *(_DWORD *)(a2 + 56);
  v3 |= 0x80u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 56) = v10;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 4) == 0)
  {
LABEL_12:
    if ((v2 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t v11 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(_WORD *)(result + 68) = v3;
  *(void *)(result + 24) = v11;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 8) == 0)
  {
LABEL_13:
    if ((v2 & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t v12 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_WORD *)(result + 68) = v3;
  *(void *)(result + 32) = v12;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 1) == 0)
  {
LABEL_14:
    if ((v2 & 0x200) == 0) {
      return result;
    }
LABEL_24:
    char v14 = *(unsigned char *)(a2 + 64);
    *(_WORD *)(result + 68) = v3 | 0x200;
    *(unsigned char *)(result + 64) = v14;
    return result;
  }
LABEL_23:
  uint64_t v13 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(result + 68) = v3;
  *(void *)(result + 8) = v13;
  if ((*(_WORD *)(a2 + 68) & 0x200) != 0) {
    goto LABEL_24;
  }
  return result;
}

uint64_t sub_227C5583C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x20) != 0)
  {
    PB::TextFormatter::format(this, "activityType");
    __int16 v5 = *(_WORD *)(a1 + 68);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 0x200) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v5 & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "duration", *(double *)(a1 + 8));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x200) == 0)
  {
LABEL_4:
    if ((v5 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "fGpsAvailability");
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 2) == 0)
  {
LABEL_5:
    if ((v5 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "fractionalGrade", *(double *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x40) == 0)
  {
LABEL_6:
    if ((v5 & 4) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "gradeType");
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 0x400) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "hrmin", *(double *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x400) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "isStanding");
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "metSource");
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 8) == 0)
  {
LABEL_10:
    if ((v5 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "mets", *(double *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x100) == 0)
  {
LABEL_11:
    if ((v5 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_25:
  PB::TextFormatter::format(this, "rawGradeType");
  if ((*(_WORD *)(a1 + 68) & 0x10) != 0) {
LABEL_12:
  }
    PB::TextFormatter::format(this, "startTime", *(double *)(a1 + 40));
LABEL_13:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C559E0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 68) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_68;
              }
              *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
              goto LABEL_104;
            case 2u:
              *(_WORD *)(a1 + 68) |= 0x20u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v49 = 0;
                unsigned int v50 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_109;
                  }
                  unint64_t v51 = v21++;
                  char v52 = *(unsigned char *)(v22 + v51);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v52 & 0x7F) << v49;
                  if ((v52 & 0x80) == 0) {
                    break;
                  }
                  v49 += 7;
                  BOOL v14 = v50++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_108:
                    unint64_t v2 = v51 + 1;
                    goto LABEL_109;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_108;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_109;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_109:
              *(_DWORD *)(a1 + 48) = v25;
              goto LABEL_125;
            case 3u:
              *(_WORD *)(a1 + 68) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v28 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v27 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v28 = v27 != 0;
              }
              *(unsigned char *)(a1 + 65) = v28;
              goto LABEL_125;
            case 4u:
              *(_WORD *)(a1 + 68) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_68;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_104;
            case 5u:
              *(_WORD *)(a1 + 68) |= 0x40u;
              unint64_t v29 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v30 = *(void *)this;
              if (v29 > 0xFFFFFFFFFFFFFFF5 || v29 + 10 > v2)
              {
                char v53 = 0;
                unsigned int v54 = 0;
                uint64_t v33 = 0;
                if (v2 <= v29) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v29)
                  {
                    LODWORD(v33) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_114;
                  }
                  unint64_t v55 = v29++;
                  char v56 = *(unsigned char *)(v30 + v55);
                  *((void *)this + 1) = v29;
                  v33 |= (unint64_t)(v56 & 0x7F) << v53;
                  if ((v56 & 0x80) == 0) {
                    break;
                  }
                  v53 += 7;
                  BOOL v14 = v54++ > 8;
                  if (v14)
                  {
                    LODWORD(v33) = 0;
LABEL_113:
                    unint64_t v2 = v55 + 1;
                    goto LABEL_114;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v33) = 0;
                }
                goto LABEL_113;
              }
              char v31 = 0;
              unsigned int v32 = 0;
              uint64_t v33 = 0;
              do
              {
                unint64_t v2 = v29 + 1;
                *((void *)this + 1) = v29 + 1;
                char v34 = *(unsigned char *)(v30 + v29);
                v33 |= (unint64_t)(v34 & 0x7F) << v31;
                if ((v34 & 0x80) == 0) {
                  goto LABEL_114;
                }
                v31 += 7;
                unint64_t v29 = v2;
                BOOL v14 = v32++ > 8;
              }
              while (!v14);
              LODWORD(v33) = 0;
LABEL_114:
              *(_DWORD *)(a1 + 52) = v33;
              goto LABEL_125;
            case 6u:
              *(_WORD *)(a1 + 68) |= 0x100u;
              unint64_t v35 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v36 = *(void *)this;
              if (v35 > 0xFFFFFFFFFFFFFFF5 || v35 + 10 > v2)
              {
                char v57 = 0;
                unsigned int v58 = 0;
                uint64_t v39 = 0;
                if (v2 <= v35) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v35)
                  {
                    LODWORD(v39) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_119;
                  }
                  unint64_t v59 = v35++;
                  char v60 = *(unsigned char *)(v36 + v59);
                  *((void *)this + 1) = v35;
                  v39 |= (unint64_t)(v60 & 0x7F) << v57;
                  if ((v60 & 0x80) == 0) {
                    break;
                  }
                  v57 += 7;
                  BOOL v14 = v58++ > 8;
                  if (v14)
                  {
                    LODWORD(v39) = 0;
LABEL_118:
                    unint64_t v2 = v59 + 1;
                    goto LABEL_119;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v39) = 0;
                }
                goto LABEL_118;
              }
              char v37 = 0;
              unsigned int v38 = 0;
              uint64_t v39 = 0;
              do
              {
                unint64_t v2 = v35 + 1;
                *((void *)this + 1) = v35 + 1;
                char v40 = *(unsigned char *)(v36 + v35);
                v39 |= (unint64_t)(v40 & 0x7F) << v37;
                if ((v40 & 0x80) == 0) {
                  goto LABEL_119;
                }
                v37 += 7;
                unint64_t v35 = v2;
                BOOL v14 = v38++ > 8;
              }
              while (!v14);
              LODWORD(v39) = 0;
LABEL_119:
              *(_DWORD *)(a1 + 60) = v39;
              goto LABEL_125;
            case 7u:
              *(_WORD *)(a1 + 68) |= 0x80u;
              unint64_t v41 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v42 = *(void *)this;
              if (v41 > 0xFFFFFFFFFFFFFFF5 || v41 + 10 > v2)
              {
                char v61 = 0;
                unsigned int v62 = 0;
                uint64_t v45 = 0;
                if (v2 <= v41) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v41)
                  {
                    LODWORD(v45) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_124;
                  }
                  unint64_t v63 = v41++;
                  char v64 = *(unsigned char *)(v42 + v63);
                  *((void *)this + 1) = v41;
                  v45 |= (unint64_t)(v64 & 0x7F) << v61;
                  if ((v64 & 0x80) == 0) {
                    break;
                  }
                  v61 += 7;
                  BOOL v14 = v62++ > 8;
                  if (v14)
                  {
                    LODWORD(v45) = 0;
LABEL_123:
                    unint64_t v2 = v63 + 1;
                    goto LABEL_124;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v45) = 0;
                }
                goto LABEL_123;
              }
              char v43 = 0;
              unsigned int v44 = 0;
              uint64_t v45 = 0;
              do
              {
                unint64_t v2 = v41 + 1;
                *((void *)this + 1) = v41 + 1;
                char v46 = *(unsigned char *)(v42 + v41);
                v45 |= (unint64_t)(v46 & 0x7F) << v43;
                if ((v46 & 0x80) == 0) {
                  goto LABEL_124;
                }
                v43 += 7;
                unint64_t v41 = v2;
                BOOL v14 = v44++ > 8;
              }
              while (!v14);
              LODWORD(v45) = 0;
LABEL_124:
              *(_DWORD *)(a1 + 56) = v45;
LABEL_125:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 8u:
              *(_WORD *)(a1 + 68) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_68;
              }
              *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
              goto LABEL_104;
            case 9u:
              *(_WORD *)(a1 + 68) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_68;
              }
              *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
              goto LABEL_104;
            case 0xAu:
              *(_WORD *)(a1 + 68) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
LABEL_104:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_68:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_125;
            case 0xBu:
              *(_WORD *)(a1 + 68) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v48 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v47 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v48 = v47 != 0;
              }
              *(unsigned char *)(a1 + 64) = v48;
              goto LABEL_125;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_125;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C560E4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 68);
  if ((v4 & 0x10) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 40));
    __int16 v4 = *(_WORD *)(v3 + 68);
    if ((v4 & 0x20) == 0)
    {
LABEL_3:
      if ((v4 & 0x400) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v4 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x400) == 0)
  {
LABEL_4:
    if ((v4 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 2) == 0)
  {
LABEL_5:
    if ((v4 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x40) == 0)
  {
LABEL_6:
    if ((v4 & 0x100) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x100) == 0)
  {
LABEL_7:
    if ((v4 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x80) == 0)
  {
LABEL_8:
    if ((v4 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 4) == 0)
  {
LABEL_9:
    if ((v4 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 8) == 0)
  {
LABEL_10:
    if ((v4 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_22:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
    if ((*(_WORD *)(v3 + 68) & 0x200) == 0) {
      return result;
    }
    goto LABEL_23;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if (v4) {
    goto LABEL_22;
  }
LABEL_11:
  if ((v4 & 0x200) == 0) {
    return result;
  }
LABEL_23:

  return PB::Writer::write(this);
}

double sub_227C56250(uint64_t a1)
{
  *(void *)a1 = &unk_26DC27610;
  *(_DWORD *)(a1 + 180) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(void *)(a1 + 168) = 0;
  return result;
}

void sub_227C562A4(PB::Base *this)
{
  *(void *)this = &unk_26DC27610;
  unint64_t v2 = (void *)*((void *)this + 19);
  if (v2)
  {
    *((void *)this + 20) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 16);
  if (v3)
  {
    *((void *)this + 17) = v3;
    operator delete(v3);
  }
  __int16 v4 = (void *)*((void *)this + 13);
  if (v4)
  {
    *((void *)this + 14) = v4;
    operator delete(v4);
  }
  __int16 v5 = (void *)*((void *)this + 10);
  if (v5)
  {
    *((void *)this + 11) = v5;
    operator delete(v5);
  }
  char v6 = (void *)*((void *)this + 7);
  if (v6)
  {
    *((void *)this + 8) = v6;
    operator delete(v6);
  }
  uint64_t v7 = (void *)*((void *)this + 4);
  if (v7)
  {
    *((void *)this + 5) = v7;
    operator delete(v7);
  }
  uint64_t v8 = (void *)*((void *)this + 1);
  if (v8)
  {
    *((void *)this + 2) = v8;
    operator delete(v8);
  }

  PB::Base::~Base(this);
}

void sub_227C56368(PB::Base *a1)
{
  sub_227C562A4(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C563A0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC27610;
  *(_OWORD *)(a1 + 8) = 0u;
  __int16 v4 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 56) = 0u;
  __int16 v5 = (char *)(a1 + 56);
  *(_OWORD *)(a1 + 104) = 0u;
  char v6 = (char *)(a1 + 104);
  *(_OWORD *)(a1 + 152) = 0u;
  uint64_t v7 = (char *)(a1 + 152);
  *(_DWORD *)(a1 + 180) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(void *)(a1 + 168) = 0;
  if (a1 != a2)
  {
    sub_227B8BA68((char *)(a1 + 128), *(char **)(a2 + 128), *(void *)(a2 + 136), (uint64_t)(*(void *)(a2 + 136) - *(void *)(a2 + 128)) >> 2);
    sub_227B8BA68(v6, *(char **)(a2 + 104), *(void *)(a2 + 112), (uint64_t)(*(void *)(a2 + 112) - *(void *)(a2 + 104)) >> 2);
    sub_227B8BA68(v7, *(char **)(a2 + 152), *(void *)(a2 + 160), (uint64_t)(*(void *)(a2 + 160) - *(void *)(a2 + 152)) >> 2);
  }
  if (*(unsigned char *)(a2 + 180))
  {
    int v8 = *(_DWORD *)(a2 + 176);
    *(unsigned char *)(a1 + 180) |= 1u;
    *(_DWORD *)(a1 + 176) = v8;
  }
  if (a1 != a2)
  {
    sub_227B8BA68((char *)(a1 + 80), *(char **)(a2 + 80), *(void *)(a2 + 88), (uint64_t)(*(void *)(a2 + 88) - *(void *)(a2 + 80)) >> 2);
    sub_227B8BA68(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
    sub_227B8BA68((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
    sub_227B8BA68(v5, *(char **)(a2 + 56), *(void *)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 2);
  }
  return a1;
}

uint64_t sub_227C564F8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 80);
  uint64_t v6 = *(void *)(a1 + 88);
  while (v5 != v6)
  {
    v5 += 4;
    PB::TextFormatter::format(this, "error");
  }
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  while (v7 != v8)
  {
    v7 += 4;
    PB::TextFormatter::format(this, "errorX");
  }
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  while (v9 != v10)
  {
    v9 += 4;
    PB::TextFormatter::format(this, "errorY");
  }
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v12 = *(void *)(a1 + 64);
  while (v11 != v12)
  {
    v11 += 4;
    PB::TextFormatter::format(this, "errorZ");
  }
  char v13 = *(float **)(a1 + 104);
  BOOL v14 = *(float **)(a1 + 112);
  while (v13 != v14)
  {
    float v15 = *v13++;
    PB::TextFormatter::format(this, "intercept", v15);
  }
  if (*(unsigned char *)(a1 + 180)) {
    PB::TextFormatter::format(this, "overlap", *(float *)(a1 + 176));
  }
  unsigned int v16 = *(float **)(a1 + 128);
  unint64_t v17 = *(float **)(a1 + 136);
  while (v16 != v17)
  {
    float v18 = *v16++;
    PB::TextFormatter::format(this, "slope", v18);
  }
  char v19 = *(float **)(a1 + 152);
  unsigned int v20 = *(float **)(a1 + 160);
  while (v19 != v20)
  {
    float v21 = *v19++;
    PB::TextFormatter::format(this, "temperature", v21);
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227C5669C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = (void *)(a1 + 72);
    char v278 = (void **)(a1 + 32);
    char v279 = (void **)(a1 + 56);
    uint64_t v9 = (void *)(a1 + 48);
    unint64_t v277 = (void **)(a1 + 8);
    uint64_t v10 = (void *)(a1 + 24);
    uint64_t v11 = (void *)(a1 + 96);
    unint64_t v285 = (void **)(a1 + 152);
    uint64_t v283 = a1 + 168;
    unsigned int v284 = (void **)(a1 + 104);
    uint64_t v282 = a1 + 120;
    uint64_t v12 = (void **)(a1 + 128);
    unsigned int v280 = (void **)(a1 + 80);
    uint64_t v281 = a1 + 144;
    while (1)
    {
      uint64_t v13 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v14 = 0;
      unsigned int v15 = 0;
      unint64_t v16 = 0;
      while (1)
      {
        unint64_t v17 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v18 = *(unsigned char *)(v13 + v2);
        v16 |= (unint64_t)(v18 & 0x7F) << v14;
        if ((v18 & 0x80) == 0) {
          break;
        }
        v14 += 7;
        unint64_t v2 = v17;
        BOOL v81 = v15++ > 8;
        if (v81) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v24 = v16 & 7;
      if (v24 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v16 >> 3))
      {
        case 1u:
          if (v24 != 2)
          {
            uint64_t v162 = *(char **)(a1 + 136);
            unint64_t v161 = *(void *)(a1 + 144);
            if ((unint64_t)v162 >= v161)
            {
              unsigned int v177 = (char *)*v12;
              uint64_t v178 = (v162 - (unsigned char *)*v12) >> 2;
              unint64_t v179 = v178 + 1;
              if ((unint64_t)(v178 + 1) >> 62) {
LABEL_482:
              }
                sub_227B8B89C();
              uint64_t v180 = v161 - (void)v177;
              if (v180 >> 1 > v179) {
                unint64_t v179 = v180 >> 1;
              }
              if ((unint64_t)v180 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v181 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v181 = v179;
              }
              if (v181)
              {
                unint64_t v182 = (char *)sub_227B8BBB8(v281, v181);
                unsigned int v177 = *(char **)(a1 + 128);
                uint64_t v162 = *(char **)(a1 + 136);
              }
              else
              {
                unint64_t v182 = 0;
              }
              char v219 = &v182[4 * v178];
              *(_DWORD *)char v219 = 0;
              unint64_t v163 = v219 + 4;
              while (v162 != v177)
              {
                int v220 = *((_DWORD *)v162 - 1);
                v162 -= 4;
                *((_DWORD *)v219 - 1) = v220;
                v219 -= 4;
              }
              *(void *)(a1 + 128) = v219;
              *(void *)(a1 + 136) = v163;
              *(void *)(a1 + 144) = &v182[4 * v181];
              if (v177) {
                operator delete(v177);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v162 = 0;
              unint64_t v163 = v162 + 4;
            }
            *(void *)(a1 + 136) = v163;
            goto LABEL_374;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v25 = *((void *)this + 1);
          unint64_t v26 = *((void *)this + 2);
          while (v25 < v26 && !*((unsigned char *)this + 24))
          {
            BOOL v28 = *(char **)(a1 + 136);
            unint64_t v27 = *(void *)(a1 + 144);
            if ((unint64_t)v28 >= v27)
            {
              uint64_t v30 = (char *)*v12;
              uint64_t v31 = (v28 - (unsigned char *)*v12) >> 2;
              unint64_t v32 = v31 + 1;
              if ((unint64_t)(v31 + 1) >> 62) {
                goto LABEL_482;
              }
              uint64_t v33 = v27 - (void)v30;
              if (v33 >> 1 > v32) {
                unint64_t v32 = v33 >> 1;
              }
              if ((unint64_t)v33 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v34 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v34 = v32;
              }
              if (v34)
              {
                unint64_t v35 = (char *)sub_227B8BBB8(v281, v34);
                uint64_t v30 = *(char **)(a1 + 128);
                BOOL v28 = *(char **)(a1 + 136);
              }
              else
              {
                unint64_t v35 = 0;
              }
              uint64_t v36 = &v35[4 * v31];
              *(_DWORD *)uint64_t v36 = 0;
              unint64_t v29 = v36 + 4;
              while (v28 != v30)
              {
                int v37 = *((_DWORD *)v28 - 1);
                v28 -= 4;
                *((_DWORD *)v36 - 1) = v37;
                v36 -= 4;
              }
              *(void *)(a1 + 128) = v36;
              *(void *)(a1 + 136) = v29;
              *(void *)(a1 + 144) = &v35[4 * v34];
              if (v30) {
                operator delete(v30);
              }
            }
            else
            {
              *(_DWORD *)BOOL v28 = 0;
              unint64_t v29 = v28 + 4;
            }
            *(void *)(a1 + 136) = v29;
            unint64_t v38 = *((void *)this + 1);
            if (v38 > 0xFFFFFFFFFFFFFFFBLL || v38 + 4 > *((void *)this + 2)) {
              goto LABEL_295;
            }
            *(v29 - 1) = *(_DWORD *)(*(void *)this + v38);
            unint64_t v26 = *((void *)this + 2);
            unint64_t v25 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v25;
          }
          goto LABEL_296;
        case 2u:
          if (v24 != 2)
          {
            unint64_t v165 = *(char **)(a1 + 112);
            unint64_t v164 = *(void *)(a1 + 120);
            if ((unint64_t)v165 >= v164)
            {
              unint64_t v183 = (char *)*v284;
              uint64_t v184 = (v165 - (unsigned char *)*v284) >> 2;
              unint64_t v185 = v184 + 1;
              if ((unint64_t)(v184 + 1) >> 62) {
LABEL_483:
              }
                sub_227B8B89C();
              uint64_t v186 = v164 - (void)v183;
              if (v186 >> 1 > v185) {
                unint64_t v185 = v186 >> 1;
              }
              if ((unint64_t)v186 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v187 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v187 = v185;
              }
              if (v187)
              {
                unsigned int v188 = (char *)sub_227B8BBB8(v282, v187);
                unint64_t v183 = *(char **)(a1 + 104);
                unint64_t v165 = *(char **)(a1 + 112);
              }
              else
              {
                unsigned int v188 = 0;
              }
              uint64_t v221 = &v188[4 * v184];
              *(_DWORD *)uint64_t v221 = 0;
              unint64_t v163 = v221 + 4;
              while (v165 != v183)
              {
                int v222 = *((_DWORD *)v165 - 1);
                v165 -= 4;
                *((_DWORD *)v221 - 1) = v222;
                v221 -= 4;
              }
              *(void *)(a1 + 104) = v221;
              *(void *)(a1 + 112) = v163;
              *(void *)(a1 + 120) = &v188[4 * v187];
              if (v183) {
                operator delete(v183);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v165 = 0;
              unint64_t v163 = v165 + 4;
            }
            *(void *)(a1 + 112) = v163;
            goto LABEL_374;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v39 = *((void *)this + 1);
          unint64_t v40 = *((void *)this + 2);
          while (v39 < v40 && !*((unsigned char *)this + 24))
          {
            uint64_t v42 = *(char **)(a1 + 112);
            unint64_t v41 = *(void *)(a1 + 120);
            if ((unint64_t)v42 >= v41)
            {
              unsigned int v44 = (char *)*v284;
              uint64_t v45 = (v42 - (unsigned char *)*v284) >> 2;
              unint64_t v46 = v45 + 1;
              if ((unint64_t)(v45 + 1) >> 62) {
                goto LABEL_483;
              }
              uint64_t v47 = v41 - (void)v44;
              if (v47 >> 1 > v46) {
                unint64_t v46 = v47 >> 1;
              }
              if ((unint64_t)v47 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v48 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v48 = v46;
              }
              if (v48)
              {
                char v49 = (char *)sub_227B8BBB8(v282, v48);
                unsigned int v44 = *(char **)(a1 + 104);
                uint64_t v42 = *(char **)(a1 + 112);
              }
              else
              {
                char v49 = 0;
              }
              unsigned int v50 = &v49[4 * v45];
              *(_DWORD *)unsigned int v50 = 0;
              char v43 = v50 + 4;
              while (v42 != v44)
              {
                int v51 = *((_DWORD *)v42 - 1);
                v42 -= 4;
                *((_DWORD *)v50 - 1) = v51;
                v50 -= 4;
              }
              *(void *)(a1 + 104) = v50;
              *(void *)(a1 + 112) = v43;
              *(void *)(a1 + 120) = &v49[4 * v48];
              if (v44) {
                operator delete(v44);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v42 = 0;
              char v43 = v42 + 4;
            }
            *(void *)(a1 + 112) = v43;
            unint64_t v52 = *((void *)this + 1);
            if (v52 > 0xFFFFFFFFFFFFFFFBLL || v52 + 4 > *((void *)this + 2)) {
              goto LABEL_295;
            }
            *(v43 - 1) = *(_DWORD *)(*(void *)this + v52);
            unint64_t v40 = *((void *)this + 2);
            unint64_t v39 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v39;
          }
          goto LABEL_296;
        case 3u:
          if (v24 != 2)
          {
            uint64_t v167 = *(char **)(a1 + 160);
            unint64_t v166 = *(void *)(a1 + 168);
            if ((unint64_t)v167 >= v166)
            {
              uint64_t v189 = (char *)*v285;
              uint64_t v190 = (v167 - (unsigned char *)*v285) >> 2;
              unint64_t v191 = v190 + 1;
              if ((unint64_t)(v190 + 1) >> 62) {
LABEL_484:
              }
                sub_227B8B89C();
              uint64_t v192 = v166 - (void)v189;
              if (v192 >> 1 > v191) {
                unint64_t v191 = v192 >> 1;
              }
              if ((unint64_t)v192 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v193 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v193 = v191;
              }
              if (v193)
              {
                uint64_t v194 = (char *)sub_227B8BBB8(v283, v193);
                uint64_t v189 = *(char **)(a1 + 152);
                uint64_t v167 = *(char **)(a1 + 160);
              }
              else
              {
                uint64_t v194 = 0;
              }
              char v223 = &v194[4 * v190];
              *(_DWORD *)char v223 = 0;
              unint64_t v163 = v223 + 4;
              while (v167 != v189)
              {
                int v224 = *((_DWORD *)v167 - 1);
                v167 -= 4;
                *((_DWORD *)v223 - 1) = v224;
                v223 -= 4;
              }
              *(void *)(a1 + 152) = v223;
              *(void *)(a1 + 160) = v163;
              *(void *)(a1 + 168) = &v194[4 * v193];
              if (v189) {
                operator delete(v189);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v167 = 0;
              unint64_t v163 = v167 + 4;
            }
            *(void *)(a1 + 160) = v163;
LABEL_374:
            unint64_t v225 = *((void *)this + 1);
            if (v225 <= 0xFFFFFFFFFFFFFFFBLL && v225 + 4 <= *((void *)this + 2))
            {
              *(v163 - 1) = *(_DWORD *)(*(void *)this + v225);
LABEL_378:
              *((void *)this + 1) += 4;
            }
            else
            {
LABEL_376:
              *((unsigned char *)this + 24) = 1;
            }
            goto LABEL_472;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v53 = *((void *)this + 1);
          unint64_t v54 = *((void *)this + 2);
          while (v53 < v54 && !*((unsigned char *)this + 24))
          {
            char v56 = *(char **)(a1 + 160);
            unint64_t v55 = *(void *)(a1 + 168);
            if ((unint64_t)v56 >= v55)
            {
              unsigned int v58 = (char *)*v285;
              uint64_t v59 = (v56 - (unsigned char *)*v285) >> 2;
              unint64_t v60 = v59 + 1;
              if ((unint64_t)(v59 + 1) >> 62) {
                goto LABEL_484;
              }
              uint64_t v61 = v55 - (void)v58;
              if (v61 >> 1 > v60) {
                unint64_t v60 = v61 >> 1;
              }
              if ((unint64_t)v61 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v62 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v62 = v60;
              }
              if (v62)
              {
                unint64_t v63 = (char *)sub_227B8BBB8(v283, v62);
                unsigned int v58 = *(char **)(a1 + 152);
                char v56 = *(char **)(a1 + 160);
              }
              else
              {
                unint64_t v63 = 0;
              }
              char v64 = &v63[4 * v59];
              *(_DWORD *)char v64 = 0;
              char v57 = v64 + 4;
              while (v56 != v58)
              {
                int v65 = *((_DWORD *)v56 - 1);
                v56 -= 4;
                *((_DWORD *)v64 - 1) = v65;
                v64 -= 4;
              }
              *(void *)(a1 + 152) = v64;
              *(void *)(a1 + 160) = v57;
              *(void *)(a1 + 168) = &v63[4 * v62];
              if (v58) {
                operator delete(v58);
              }
            }
            else
            {
              *(_DWORD *)char v56 = 0;
              char v57 = v56 + 4;
            }
            *(void *)(a1 + 160) = v57;
            unint64_t v66 = *((void *)this + 1);
            if (v66 > 0xFFFFFFFFFFFFFFFBLL || v66 + 4 > *((void *)this + 2))
            {
LABEL_295:
              *((unsigned char *)this + 24) = 1;
              goto LABEL_296;
            }
            *(v57 - 1) = *(_DWORD *)(*(void *)this + v66);
            unint64_t v54 = *((void *)this + 2);
            unint64_t v53 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v53;
          }
          goto LABEL_296;
        case 4u:
          *(unsigned char *)(a1 + 180) |= 1u;
          unint64_t v67 = *((void *)this + 1);
          if (v67 > 0xFFFFFFFFFFFFFFFBLL || v67 + 4 > *((void *)this + 2)) {
            goto LABEL_376;
          }
          *(_DWORD *)(a1 + 176) = *(_DWORD *)(*(void *)this + v67);
          goto LABEL_378;
        case 5u:
          if (v24 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            if (*((void *)this + 1) < *((void *)this + 2) && !*((unsigned char *)this + 24))
            {
              unint64_t v68 = *(char **)(a1 + 88);
              do
              {
                if ((unint64_t)v68 >= *v11)
                {
                  unint64_t v69 = (char *)*v280;
                  uint64_t v70 = (v68 - (unsigned char *)*v280) >> 2;
                  unint64_t v71 = v70 + 1;
                  if ((unint64_t)(v70 + 1) >> 62) {
                    goto LABEL_485;
                  }
                  uint64_t v72 = *v11 - (void)v69;
                  if (v72 >> 1 > v71) {
                    unint64_t v71 = v72 >> 1;
                  }
                  if ((unint64_t)v72 >= 0x7FFFFFFFFFFFFFFCLL) {
                    unint64_t v73 = 0x3FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v73 = v71;
                  }
                  if (v73)
                  {
                    uint64_t v74 = (char *)sub_227B8BBB8((uint64_t)v11, v73);
                    unint64_t v69 = *(char **)(a1 + 80);
                    unint64_t v68 = *(char **)(a1 + 88);
                  }
                  else
                  {
                    uint64_t v74 = 0;
                  }
                  unint64_t v75 = &v74[4 * v70];
                  *(_DWORD *)unint64_t v75 = 0;
                  uint64_t v76 = v75 + 4;
                  while (v68 != v69)
                  {
                    int v77 = *((_DWORD *)v68 - 1);
                    v68 -= 4;
                    *((_DWORD *)v75 - 1) = v77;
                    v75 -= 4;
                  }
                  *(void *)(a1 + 80) = v75;
                  *(void *)(a1 + 88) = v76;
                  *(void *)(a1 + 96) = &v74[4 * v73];
                  if (v69) {
                    operator delete(v69);
                  }
                  unint64_t v68 = v76;
                }
                else
                {
                  *(_DWORD *)unint64_t v68 = 0;
                  v68 += 4;
                }
                *(void *)(a1 + 88) = v68;
                unint64_t v79 = *((void *)this + 1);
                unint64_t v78 = *((void *)this + 2);
                uint64_t v80 = *(void *)this;
                BOOL v81 = v79 > 0xFFFFFFFFFFFFFFF5 || v79 + 10 > v78;
                if (v81)
                {
                  char v82 = 0;
                  unsigned int v83 = 0;
                  uint64_t v89 = 0;
                  if (v78 <= v79) {
                    uint64_t v84 = *((void *)this + 1);
                  }
                  else {
                    uint64_t v84 = *((void *)this + 2);
                  }
                  while (1)
                  {
                    if (v84 == v79) {
                      goto LABEL_280;
                    }
                    unint64_t v85 = v79++;
                    char v86 = *(unsigned char *)(v80 + v85);
                    *((void *)this + 1) = v79;
                    v89 |= (unint64_t)(v86 & 0x7F) << v82;
                    if ((v86 & 0x80) == 0) {
                      break;
                    }
                    v82 += 7;
                    BOOL v81 = v83++ > 8;
                    if (v81)
                    {
                      LODWORD(v89) = 0;
                      goto LABEL_141;
                    }
                  }
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v89) = 0;
                  }
LABEL_141:
                  unint64_t v90 = v85 + 1;
                }
                else
                {
                  char v87 = 0;
                  unsigned int v88 = 0;
                  uint64_t v89 = 0;
                  while (1)
                  {
                    unint64_t v90 = v79 + 1;
                    *((void *)this + 1) = v79 + 1;
                    char v91 = *(unsigned char *)(v80 + v79);
                    v89 |= (unint64_t)(v91 & 0x7F) << v87;
                    if ((v91 & 0x80) == 0) {
                      break;
                    }
                    v87 += 7;
                    unint64_t v79 = v90;
                    BOOL v81 = v88++ > 8;
                    if (v81)
                    {
                      LODWORD(v89) = 0;
                      break;
                    }
                  }
                }
                *((_DWORD *)v68 - 1) = v89;
              }
              while (v90 < v78 && !*((unsigned char *)this + 24));
            }
            goto LABEL_296;
          }
          unsigned int v169 = *(char **)(a1 + 88);
          unint64_t v168 = *(void *)(a1 + 96);
          if ((unint64_t)v169 >= v168)
          {
            char v195 = (char *)*v280;
            uint64_t v196 = (v169 - (unsigned char *)*v280) >> 2;
            unint64_t v197 = v196 + 1;
            if ((unint64_t)(v196 + 1) >> 62) {
LABEL_485:
            }
              sub_227B8B89C();
            uint64_t v198 = v168 - (void)v195;
            if (v198 >> 1 > v197) {
              unint64_t v197 = v198 >> 1;
            }
            if ((unint64_t)v198 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v199 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v199 = v197;
            }
            if (v199)
            {
              unint64_t v200 = (char *)sub_227B8BBB8((uint64_t)v11, v199);
              char v195 = *(char **)(a1 + 80);
              unsigned int v169 = *(char **)(a1 + 88);
            }
            else
            {
              unint64_t v200 = 0;
            }
            unint64_t v226 = &v200[4 * v196];
            *(_DWORD *)unint64_t v226 = 0;
            uint64_t v170 = v226 + 4;
            while (v169 != v195)
            {
              int v227 = *((_DWORD *)v169 - 1);
              v169 -= 4;
              *((_DWORD *)v226 - 1) = v227;
              v226 -= 4;
            }
            *(void *)(a1 + 80) = v226;
            *(void *)(a1 + 88) = v170;
            *(void *)(a1 + 96) = &v200[4 * v199];
            if (v195) {
              operator delete(v195);
            }
          }
          else
          {
            *(_DWORD *)unsigned int v169 = 0;
            uint64_t v170 = v169 + 4;
          }
          *(void *)(a1 + 88) = v170;
          unint64_t v228 = *((void *)this + 1);
          unint64_t v229 = *((void *)this + 2);
          uint64_t v230 = *(void *)this;
          char v231 = 0;
          unsigned int v232 = 0;
          if (v228 <= 0xFFFFFFFFFFFFFFF5 && v228 + 10 <= v229)
          {
            uint64_t v236 = 0;
            while (1)
            {
              unint64_t v237 = v228 + 1;
              *((void *)this + 1) = v228 + 1;
              char v238 = *(unsigned char *)(v230 + v228);
              v236 |= (unint64_t)(v238 & 0x7F) << v231;
              if ((v238 & 0x80) == 0) {
                goto LABEL_471;
              }
              v231 += 7;
              unint64_t v228 = v237;
              BOOL v81 = v232++ > 8;
              if (v81) {
                goto LABEL_470;
              }
            }
          }
          uint64_t v236 = 0;
          if (v229 <= v228) {
            unint64_t v229 = *((void *)this + 1);
          }
          while (v229 != v228)
          {
            unint64_t v234 = v228 + 1;
            char v235 = *(unsigned char *)(v230 + v228);
            *((void *)this + 1) = v234;
            v236 |= (unint64_t)(v235 & 0x7F) << v231;
            if ((v235 & 0x80) == 0) {
              goto LABEL_464;
            }
            v231 += 7;
            unint64_t v228 = v234;
            BOOL v81 = v232++ > 8;
            if (v81) {
              goto LABEL_470;
            }
          }
          goto LABEL_463;
        case 6u:
          if (v24 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            if (*((void *)this + 1) < *((void *)this + 2) && !*((unsigned char *)this + 24))
            {
              unint64_t v68 = *(char **)(a1 + 16);
              do
              {
                if ((unint64_t)v68 >= *v10)
                {
                  char v92 = (char *)*v277;
                  uint64_t v93 = (v68 - (unsigned char *)*v277) >> 2;
                  unint64_t v94 = v93 + 1;
                  if ((unint64_t)(v93 + 1) >> 62) {
                    goto LABEL_486;
                  }
                  uint64_t v95 = *v10 - (void)v92;
                  if (v95 >> 1 > v94) {
                    unint64_t v94 = v95 >> 1;
                  }
                  if ((unint64_t)v95 >= 0x7FFFFFFFFFFFFFFCLL) {
                    unint64_t v96 = 0x3FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v96 = v94;
                  }
                  if (v96)
                  {
                    unint64_t v97 = (char *)sub_227B8BBB8((uint64_t)v10, v96);
                    char v92 = *(char **)(a1 + 8);
                    unint64_t v68 = *(char **)(a1 + 16);
                  }
                  else
                  {
                    unint64_t v97 = 0;
                  }
                  uint64_t v98 = &v97[4 * v93];
                  *(_DWORD *)uint64_t v98 = 0;
                  char v99 = v98 + 4;
                  while (v68 != v92)
                  {
                    int v100 = *((_DWORD *)v68 - 1);
                    v68 -= 4;
                    *((_DWORD *)v98 - 1) = v100;
                    v98 -= 4;
                  }
                  *(void *)(a1 + 8) = v98;
                  *(void *)(a1 + 16) = v99;
                  *(void *)(a1 + 24) = &v97[4 * v96];
                  if (v92) {
                    operator delete(v92);
                  }
                  unint64_t v68 = v99;
                }
                else
                {
                  *(_DWORD *)unint64_t v68 = 0;
                  v68 += 4;
                }
                *(void *)(a1 + 16) = v68;
                unint64_t v102 = *((void *)this + 1);
                unint64_t v101 = *((void *)this + 2);
                uint64_t v103 = *(void *)this;
                if (v102 > 0xFFFFFFFFFFFFFFF5 || v102 + 10 > v101)
                {
                  char v105 = 0;
                  unsigned int v106 = 0;
                  uint64_t v112 = 0;
                  if (v101 <= v102) {
                    uint64_t v107 = *((void *)this + 1);
                  }
                  else {
                    uint64_t v107 = *((void *)this + 2);
                  }
                  while (1)
                  {
                    if (v107 == v102) {
                      goto LABEL_280;
                    }
                    unint64_t v108 = v102++;
                    char v109 = *(unsigned char *)(v103 + v108);
                    *((void *)this + 1) = v102;
                    v112 |= (unint64_t)(v109 & 0x7F) << v105;
                    if ((v109 & 0x80) == 0) {
                      break;
                    }
                    v105 += 7;
                    BOOL v81 = v106++ > 8;
                    if (v81)
                    {
                      LODWORD(v112) = 0;
                      goto LABEL_186;
                    }
                  }
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v112) = 0;
                  }
LABEL_186:
                  unint64_t v113 = v108 + 1;
                }
                else
                {
                  char v110 = 0;
                  unsigned int v111 = 0;
                  uint64_t v112 = 0;
                  while (1)
                  {
                    unint64_t v113 = v102 + 1;
                    *((void *)this + 1) = v102 + 1;
                    char v114 = *(unsigned char *)(v103 + v102);
                    v112 |= (unint64_t)(v114 & 0x7F) << v110;
                    if ((v114 & 0x80) == 0) {
                      break;
                    }
                    v110 += 7;
                    unint64_t v102 = v113;
                    BOOL v81 = v111++ > 8;
                    if (v81)
                    {
                      LODWORD(v112) = 0;
                      break;
                    }
                  }
                }
                *((_DWORD *)v68 - 1) = v112;
              }
              while (v113 < v101 && !*((unsigned char *)this + 24));
            }
            goto LABEL_296;
          }
          char v172 = *(char **)(a1 + 16);
          unint64_t v171 = *(void *)(a1 + 24);
          if ((unint64_t)v172 >= v171)
          {
            unint64_t v201 = (char *)*v277;
            uint64_t v202 = (v172 - (unsigned char *)*v277) >> 2;
            unint64_t v203 = v202 + 1;
            if ((unint64_t)(v202 + 1) >> 62) {
LABEL_486:
            }
              sub_227B8B89C();
            uint64_t v204 = v171 - (void)v201;
            if (v204 >> 1 > v203) {
              unint64_t v203 = v204 >> 1;
            }
            if ((unint64_t)v204 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v205 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v205 = v203;
            }
            if (v205)
            {
              unint64_t v206 = (char *)sub_227B8BBB8((uint64_t)v10, v205);
              unint64_t v201 = *(char **)(a1 + 8);
              char v172 = *(char **)(a1 + 16);
            }
            else
            {
              unint64_t v206 = 0;
            }
            char v239 = &v206[4 * v202];
            *(_DWORD *)char v239 = 0;
            uint64_t v170 = v239 + 4;
            while (v172 != v201)
            {
              int v240 = *((_DWORD *)v172 - 1);
              v172 -= 4;
              *((_DWORD *)v239 - 1) = v240;
              v239 -= 4;
            }
            *(void *)(a1 + 8) = v239;
            *(void *)(a1 + 16) = v170;
            *(void *)(a1 + 24) = &v206[4 * v205];
            if (v201) {
              operator delete(v201);
            }
          }
          else
          {
            *(_DWORD *)char v172 = 0;
            uint64_t v170 = v172 + 4;
          }
          *(void *)(a1 + 16) = v170;
          unint64_t v241 = *((void *)this + 1);
          unint64_t v242 = *((void *)this + 2);
          uint64_t v243 = *(void *)this;
          char v244 = 0;
          unsigned int v245 = 0;
          if (v241 <= 0xFFFFFFFFFFFFFFF5 && v241 + 10 <= v242)
          {
            uint64_t v236 = 0;
            while (1)
            {
              unint64_t v249 = v241 + 1;
              *((void *)this + 1) = v241 + 1;
              char v250 = *(unsigned char *)(v243 + v241);
              v236 |= (unint64_t)(v250 & 0x7F) << v244;
              if ((v250 & 0x80) == 0) {
                goto LABEL_471;
              }
              v244 += 7;
              unint64_t v241 = v249;
              BOOL v81 = v245++ > 8;
              if (v81) {
                goto LABEL_470;
              }
            }
          }
          uint64_t v236 = 0;
          if (v242 <= v241) {
            unint64_t v242 = *((void *)this + 1);
          }
          while (v242 != v241)
          {
            unint64_t v247 = v241 + 1;
            char v248 = *(unsigned char *)(v243 + v241);
            *((void *)this + 1) = v247;
            v236 |= (unint64_t)(v248 & 0x7F) << v244;
            if ((v248 & 0x80) == 0) {
              goto LABEL_464;
            }
            v244 += 7;
            unint64_t v241 = v247;
            BOOL v81 = v245++ > 8;
            if (v81) {
              goto LABEL_470;
            }
          }
          goto LABEL_463;
        case 7u:
          if (v24 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            if (*((void *)this + 1) < *((void *)this + 2) && !*((unsigned char *)this + 24))
            {
              unint64_t v68 = *(char **)(a1 + 40);
              do
              {
                if ((unint64_t)v68 >= *v9)
                {
                  char v115 = (char *)*v278;
                  uint64_t v116 = (v68 - (unsigned char *)*v278) >> 2;
                  unint64_t v117 = v116 + 1;
                  if ((unint64_t)(v116 + 1) >> 62) {
                    goto LABEL_487;
                  }
                  uint64_t v118 = *v9 - (void)v115;
                  if (v118 >> 1 > v117) {
                    unint64_t v117 = v118 >> 1;
                  }
                  if ((unint64_t)v118 >= 0x7FFFFFFFFFFFFFFCLL) {
                    unint64_t v119 = 0x3FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v119 = v117;
                  }
                  if (v119)
                  {
                    unint64_t v120 = (char *)sub_227B8BBB8((uint64_t)v9, v119);
                    char v115 = *(char **)(a1 + 32);
                    unint64_t v68 = *(char **)(a1 + 40);
                  }
                  else
                  {
                    unint64_t v120 = 0;
                  }
                  unint64_t v121 = &v120[4 * v116];
                  *(_DWORD *)unint64_t v121 = 0;
                  unint64_t v122 = v121 + 4;
                  while (v68 != v115)
                  {
                    int v123 = *((_DWORD *)v68 - 1);
                    v68 -= 4;
                    *((_DWORD *)v121 - 1) = v123;
                    v121 -= 4;
                  }
                  *(void *)(a1 + 32) = v121;
                  *(void *)(a1 + 40) = v122;
                  *(void *)(a1 + 48) = &v120[4 * v119];
                  if (v115) {
                    operator delete(v115);
                  }
                  unint64_t v68 = v122;
                }
                else
                {
                  *(_DWORD *)unint64_t v68 = 0;
                  v68 += 4;
                }
                *(void *)(a1 + 40) = v68;
                unint64_t v125 = *((void *)this + 1);
                unint64_t v124 = *((void *)this + 2);
                uint64_t v126 = *(void *)this;
                if (v125 > 0xFFFFFFFFFFFFFFF5 || v125 + 10 > v124)
                {
                  char v128 = 0;
                  unsigned int v129 = 0;
                  uint64_t v135 = 0;
                  if (v124 <= v125) {
                    uint64_t v130 = *((void *)this + 1);
                  }
                  else {
                    uint64_t v130 = *((void *)this + 2);
                  }
                  while (1)
                  {
                    if (v130 == v125) {
                      goto LABEL_280;
                    }
                    unint64_t v131 = v125++;
                    char v132 = *(unsigned char *)(v126 + v131);
                    *((void *)this + 1) = v125;
                    v135 |= (unint64_t)(v132 & 0x7F) << v128;
                    if ((v132 & 0x80) == 0) {
                      break;
                    }
                    v128 += 7;
                    BOOL v81 = v129++ > 8;
                    if (v81)
                    {
                      LODWORD(v135) = 0;
                      goto LABEL_231;
                    }
                  }
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v135) = 0;
                  }
LABEL_231:
                  unint64_t v136 = v131 + 1;
                }
                else
                {
                  char v133 = 0;
                  unsigned int v134 = 0;
                  uint64_t v135 = 0;
                  while (1)
                  {
                    unint64_t v136 = v125 + 1;
                    *((void *)this + 1) = v125 + 1;
                    char v137 = *(unsigned char *)(v126 + v125);
                    v135 |= (unint64_t)(v137 & 0x7F) << v133;
                    if ((v137 & 0x80) == 0) {
                      break;
                    }
                    v133 += 7;
                    unint64_t v125 = v136;
                    BOOL v81 = v134++ > 8;
                    if (v81)
                    {
                      LODWORD(v135) = 0;
                      break;
                    }
                  }
                }
                *((_DWORD *)v68 - 1) = v135;
              }
              while (v136 < v124 && !*((unsigned char *)this + 24));
            }
            goto LABEL_296;
          }
          unint64_t v174 = *(char **)(a1 + 40);
          unint64_t v173 = *(void *)(a1 + 48);
          if ((unint64_t)v174 >= v173)
          {
            char v207 = (char *)*v278;
            uint64_t v208 = (v174 - (unsigned char *)*v278) >> 2;
            unint64_t v209 = v208 + 1;
            if ((unint64_t)(v208 + 1) >> 62) {
LABEL_487:
            }
              sub_227B8B89C();
            uint64_t v210 = v173 - (void)v207;
            if (v210 >> 1 > v209) {
              unint64_t v209 = v210 >> 1;
            }
            if ((unint64_t)v210 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v211 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v211 = v209;
            }
            if (v211)
            {
              unsigned int v212 = (char *)sub_227B8BBB8((uint64_t)v9, v211);
              char v207 = *(char **)(a1 + 32);
              unint64_t v174 = *(char **)(a1 + 40);
            }
            else
            {
              unsigned int v212 = 0;
            }
            char v251 = &v212[4 * v208];
            *(_DWORD *)char v251 = 0;
            uint64_t v170 = v251 + 4;
            while (v174 != v207)
            {
              int v252 = *((_DWORD *)v174 - 1);
              v174 -= 4;
              *((_DWORD *)v251 - 1) = v252;
              v251 -= 4;
            }
            *(void *)(a1 + 32) = v251;
            *(void *)(a1 + 40) = v170;
            *(void *)(a1 + 48) = &v212[4 * v211];
            if (v207) {
              operator delete(v207);
            }
          }
          else
          {
            *(_DWORD *)unint64_t v174 = 0;
            uint64_t v170 = v174 + 4;
          }
          *(void *)(a1 + 40) = v170;
          unint64_t v253 = *((void *)this + 1);
          unint64_t v254 = *((void *)this + 2);
          uint64_t v255 = *(void *)this;
          char v256 = 0;
          unsigned int v257 = 0;
          if (v253 <= 0xFFFFFFFFFFFFFFF5 && v253 + 10 <= v254)
          {
            uint64_t v236 = 0;
            while (1)
            {
              unint64_t v261 = v253 + 1;
              *((void *)this + 1) = v253 + 1;
              char v262 = *(unsigned char *)(v255 + v253);
              v236 |= (unint64_t)(v262 & 0x7F) << v256;
              if ((v262 & 0x80) == 0) {
                goto LABEL_471;
              }
              v256 += 7;
              unint64_t v253 = v261;
              BOOL v81 = v257++ > 8;
              if (v81) {
                goto LABEL_470;
              }
            }
          }
          uint64_t v236 = 0;
          if (v254 <= v253) {
            unint64_t v254 = *((void *)this + 1);
          }
          while (v254 != v253)
          {
            unint64_t v259 = v253 + 1;
            char v260 = *(unsigned char *)(v255 + v253);
            *((void *)this + 1) = v259;
            v236 |= (unint64_t)(v260 & 0x7F) << v256;
            if ((v260 & 0x80) == 0) {
              goto LABEL_464;
            }
            v256 += 7;
            unint64_t v253 = v259;
            BOOL v81 = v257++ > 8;
            if (v81) {
              goto LABEL_470;
            }
          }
          goto LABEL_463;
        case 8u:
          if (v24 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            if (*((void *)this + 1) < *((void *)this + 2) && !*((unsigned char *)this + 24))
            {
              unint64_t v68 = *(char **)(a1 + 64);
              do
              {
                if ((unint64_t)v68 >= *v8)
                {
                  uint64_t v138 = (char *)*v279;
                  uint64_t v139 = (v68 - (unsigned char *)*v279) >> 2;
                  unint64_t v140 = v139 + 1;
                  if ((unint64_t)(v139 + 1) >> 62) {
                    goto LABEL_488;
                  }
                  uint64_t v141 = *v8 - (void)v138;
                  if (v141 >> 1 > v140) {
                    unint64_t v140 = v141 >> 1;
                  }
                  if ((unint64_t)v141 >= 0x7FFFFFFFFFFFFFFCLL) {
                    unint64_t v142 = 0x3FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v142 = v140;
                  }
                  if (v142)
                  {
                    uint64_t v143 = (char *)sub_227B8BBB8((uint64_t)v8, v142);
                    uint64_t v138 = *(char **)(a1 + 56);
                    unint64_t v68 = *(char **)(a1 + 64);
                  }
                  else
                  {
                    uint64_t v143 = 0;
                  }
                  char v144 = &v143[4 * v139];
                  *(_DWORD *)char v144 = 0;
                  unsigned int v145 = v144 + 4;
                  while (v68 != v138)
                  {
                    int v146 = *((_DWORD *)v68 - 1);
                    v68 -= 4;
                    *((_DWORD *)v144 - 1) = v146;
                    v144 -= 4;
                  }
                  *(void *)(a1 + 56) = v144;
                  *(void *)(a1 + 64) = v145;
                  *(void *)(a1 + 72) = &v143[4 * v142];
                  if (v138) {
                    operator delete(v138);
                  }
                  unint64_t v68 = v145;
                }
                else
                {
                  *(_DWORD *)unint64_t v68 = 0;
                  v68 += 4;
                }
                *(void *)(a1 + 64) = v68;
                unint64_t v148 = *((void *)this + 1);
                unint64_t v147 = *((void *)this + 2);
                uint64_t v149 = *(void *)this;
                if (v148 <= 0xFFFFFFFFFFFFFFF5 && v148 + 10 <= v147)
                {
                  char v156 = 0;
                  unsigned int v157 = 0;
                  uint64_t v158 = 0;
                  while (1)
                  {
                    unint64_t v159 = v148 + 1;
                    *((void *)this + 1) = v148 + 1;
                    char v160 = *(unsigned char *)(v149 + v148);
                    v158 |= (unint64_t)(v160 & 0x7F) << v156;
                    if ((v160 & 0x80) == 0) {
                      goto LABEL_277;
                    }
                    v156 += 7;
                    unint64_t v148 = v159;
                    BOOL v81 = v157++ > 8;
                    if (v81)
                    {
                      LODWORD(v158) = 0;
                      goto LABEL_277;
                    }
                  }
                }
                char v151 = 0;
                unsigned int v152 = 0;
                uint64_t v158 = 0;
                if (v147 <= v148) {
                  uint64_t v153 = *((void *)this + 1);
                }
                else {
                  uint64_t v153 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v153 == v148)
                  {
LABEL_280:
                    *((unsigned char *)this + 24) = 1;
                    *((_DWORD *)v68 - 1) = 0;
                    goto LABEL_296;
                  }
                  unint64_t v154 = v148++;
                  char v155 = *(unsigned char *)(v149 + v154);
                  *((void *)this + 1) = v148;
                  v158 |= (unint64_t)(v155 & 0x7F) << v151;
                  if ((v155 & 0x80) == 0) {
                    break;
                  }
                  v151 += 7;
                  BOOL v81 = v152++ > 8;
                  if (v81)
                  {
                    LODWORD(v158) = 0;
                    goto LABEL_276;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v158) = 0;
                }
LABEL_276:
                unint64_t v159 = v154 + 1;
LABEL_277:
                *((_DWORD *)v68 - 1) = v158;
              }
              while (v159 < v147 && !*((unsigned char *)this + 24));
            }
LABEL_296:
            PB::Reader::recallMark();
          }
          else
          {
            char v176 = *(char **)(a1 + 64);
            unint64_t v175 = *(void *)(a1 + 72);
            if ((unint64_t)v176 >= v175)
            {
              uint64_t v213 = (char *)*v279;
              uint64_t v214 = (v176 - (unsigned char *)*v279) >> 2;
              unint64_t v215 = v214 + 1;
              if ((unint64_t)(v214 + 1) >> 62) {
LABEL_488:
              }
                sub_227B8B89C();
              uint64_t v216 = v175 - (void)v213;
              if (v216 >> 1 > v215) {
                unint64_t v215 = v216 >> 1;
              }
              if ((unint64_t)v216 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v217 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v217 = v215;
              }
              if (v217)
              {
                uint64_t v218 = (char *)sub_227B8BBB8((uint64_t)v8, v217);
                uint64_t v213 = *(char **)(a1 + 56);
                char v176 = *(char **)(a1 + 64);
              }
              else
              {
                uint64_t v218 = 0;
              }
              char v263 = &v218[4 * v214];
              *(_DWORD *)char v263 = 0;
              uint64_t v170 = v263 + 4;
              while (v176 != v213)
              {
                int v264 = *((_DWORD *)v176 - 1);
                v176 -= 4;
                *((_DWORD *)v263 - 1) = v264;
                v263 -= 4;
              }
              *(void *)(a1 + 56) = v263;
              *(void *)(a1 + 64) = v170;
              *(void *)(a1 + 72) = &v218[4 * v217];
              if (v213) {
                operator delete(v213);
              }
            }
            else
            {
              *(_DWORD *)char v176 = 0;
              uint64_t v170 = v176 + 4;
            }
            *(void *)(a1 + 64) = v170;
            unint64_t v265 = *((void *)this + 1);
            unint64_t v266 = *((void *)this + 2);
            uint64_t v267 = *(void *)this;
            char v268 = 0;
            unsigned int v269 = 0;
            if (v265 > 0xFFFFFFFFFFFFFFF5 || v265 + 10 > v266)
            {
              uint64_t v236 = 0;
              if (v266 <= v265) {
                unint64_t v266 = *((void *)this + 1);
              }
              while (v266 != v265)
              {
                unint64_t v271 = v265 + 1;
                char v272 = *(unsigned char *)(v267 + v265);
                *((void *)this + 1) = v271;
                v236 |= (unint64_t)(v272 & 0x7F) << v268;
                if ((v272 & 0x80) == 0)
                {
LABEL_464:
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v236) = 0;
                  }
                  goto LABEL_471;
                }
                v268 += 7;
                unint64_t v265 = v271;
                BOOL v81 = v269++ > 8;
                if (v81)
                {
LABEL_470:
                  LODWORD(v236) = 0;
                  goto LABEL_471;
                }
              }
LABEL_463:
              LODWORD(v236) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              uint64_t v236 = 0;
              while (1)
              {
                unint64_t v273 = v265 + 1;
                *((void *)this + 1) = v265 + 1;
                char v274 = *(unsigned char *)(v267 + v265);
                v236 |= (unint64_t)(v274 & 0x7F) << v268;
                if ((v274 & 0x80) == 0) {
                  break;
                }
                v268 += 7;
                unint64_t v265 = v273;
                BOOL v81 = v269++ > 8;
                if (v81) {
                  goto LABEL_470;
                }
              }
            }
LABEL_471:
            *(v170 - 1) = v236;
          }
LABEL_472:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_472;
      }
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v16 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v21 = v2 + 1;
      char v22 = *(unsigned char *)(v13 + v2);
      *((void *)this + 1) = v21;
      v16 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0) {
        goto LABEL_21;
      }
      v19 += 7;
      unint64_t v2 = v21;
      if (v20++ >= 9)
      {
LABEL_20:
        unint64_t v16 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C57A7C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(float **)(result + 128);
  uint64_t v5 = *(float **)(result + 136);
  while (v4 != v5)
  {
    float v6 = *v4++;
    double result = PB::Writer::write(this, v6);
  }
  uint64_t v7 = *(float **)(v3 + 104);
  uint64_t v8 = *(float **)(v3 + 112);
  while (v7 != v8)
  {
    float v9 = *v7++;
    double result = PB::Writer::write(this, v9);
  }
  uint64_t v10 = *(float **)(v3 + 152);
  uint64_t v11 = *(float **)(v3 + 160);
  while (v10 != v11)
  {
    float v12 = *v10++;
    double result = PB::Writer::write(this, v12);
  }
  if (*(unsigned char *)(v3 + 180)) {
    double result = PB::Writer::write(this, *(float *)(v3 + 176));
  }
  uint64_t v13 = *(void *)(v3 + 80);
  uint64_t v14 = *(void *)(v3 + 88);
  while (v13 != v14)
  {
    v13 += 4;
    double result = PB::Writer::writeVarInt(this);
  }
  uint64_t v15 = *(void *)(v3 + 8);
  uint64_t v16 = *(void *)(v3 + 16);
  while (v15 != v16)
  {
    v15 += 4;
    double result = PB::Writer::writeVarInt(this);
  }
  uint64_t v17 = *(void *)(v3 + 32);
  uint64_t v18 = *(void *)(v3 + 40);
  while (v17 != v18)
  {
    v17 += 4;
    double result = PB::Writer::writeVarInt(this);
  }
  uint64_t v20 = *(void *)(v3 + 56);
  uint64_t v19 = *(void *)(v3 + 64);
  while (v20 != v19)
  {
    v20 += 4;
    double result = PB::Writer::writeVarInt(this);
  }
  return result;
}

uint64_t sub_227C57BA0(uint64_t result)
{
  *(void *)double result = &unk_26DC27648;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void sub_227C57BC8(PB::Base *this)
{
  *(void *)this = &unk_26DC27648;
  unint64_t v2 = (void *)*((void *)this + 1);
  if (v2)
  {
    *((void *)this + 2) = v2;
    operator delete(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C57C2C(PB::Base *a1)
{
  sub_227C57BC8(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C57C64(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC27648;
  *(void *)(a1 + 8) = 0;
  uint64_t v3 = (char *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  if (*(unsigned char *)(a2 + 40))
  {
    uint64_t v4 = *(void *)(a2 + 32);
    *(unsigned char *)(a1 + 40) = 1;
    *(void *)(a1 + 32) = v4;
  }
  if (a1 != a2) {
    sub_227B8B74C(v3, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
  }
  return a1;
}

uint64_t sub_227C57CEC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(double **)(a1 + 8);
  float v6 = *(double **)(a1 + 16);
  while (v5 != v6)
  {
    double v7 = *v5++;
    PB::TextFormatter::format(this, "pose", v7);
  }
  if (*(unsigned char *)(a1 + 40)) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 32));
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227C57D88(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = (void **)(a1 + 8);
    uint64_t v9 = a1 + 24;
    do
    {
      uint64_t v10 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        unint64_t v13 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v19 = v2 + 1;
          char v20 = *(unsigned char *)(v10 + v2);
          *((void *)this + 1) = v19;
          v13 |= (unint64_t)(v20 & 0x7F) << v17;
          if ((v20 & 0x80) == 0) {
            goto LABEL_21;
          }
          v17 += 7;
          unint64_t v2 = v19;
          if (v18++ >= 9)
          {
LABEL_20:
            unint64_t v13 = 0;
            goto LABEL_21;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
        return v4 == 0;
      }
      char v11 = 0;
      unsigned int v12 = 0;
      unint64_t v13 = 0;
      while (1)
      {
        unint64_t v14 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v15 = *(unsigned char *)(v10 + v2);
        v13 |= (unint64_t)(v15 & 0x7F) << v11;
        if ((v15 & 0x80) == 0) {
          break;
        }
        v11 += 7;
        unint64_t v2 = v14;
        if (v12++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      if ((v13 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v13 >> 3) == 2)
      {
        if ((v13 & 7) != 2)
        {
          unint64_t v38 = *(char **)(a1 + 16);
          unint64_t v37 = *(void *)(a1 + 24);
          if ((unint64_t)v38 >= v37)
          {
            unint64_t v40 = (char *)*v8;
            uint64_t v41 = (v38 - (unsigned char *)*v8) >> 3;
            unint64_t v42 = v41 + 1;
            if ((unint64_t)(v41 + 1) >> 61) {
LABEL_84:
            }
              sub_227B8B89C();
            uint64_t v43 = v37 - (void)v40;
            if (v43 >> 2 > v42) {
              unint64_t v42 = v43 >> 2;
            }
            if ((unint64_t)v43 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v44 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v44 = v42;
            }
            if (v44)
            {
              uint64_t v45 = (char *)sub_227B8B8B4(v9, v44);
              unint64_t v40 = *(char **)(a1 + 8);
              unint64_t v38 = *(char **)(a1 + 16);
            }
            else
            {
              uint64_t v45 = 0;
            }
            unint64_t v46 = &v45[8 * v41];
            *(void *)unint64_t v46 = 0;
            unint64_t v39 = v46 + 8;
            while (v38 != v40)
            {
              uint64_t v47 = *((void *)v38 - 1);
              v38 -= 8;
              *((void *)v46 - 1) = v47;
              v46 -= 8;
            }
            *(void *)(a1 + 8) = v46;
            *(void *)(a1 + 16) = v39;
            *(void *)(a1 + 24) = &v45[8 * v44];
            if (v40) {
              operator delete(v40);
            }
          }
          else
          {
            *(void *)unint64_t v38 = 0;
            unint64_t v39 = v38 + 8;
          }
          *(void *)(a1 + 16) = v39;
          unint64_t v48 = *((void *)this + 1);
          if (v48 > 0xFFFFFFFFFFFFFFF7 || v48 + 8 > *((void *)this + 2))
          {
LABEL_73:
            *((unsigned char *)this + 24) = 1;
            goto LABEL_76;
          }
          *(v39 - 1) = *(void *)(*(void *)this + v48);
          goto LABEL_75;
        }
        if (PB::Reader::placeMark()) {
          return 0;
        }
        unint64_t v23 = *((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        while (v23 < v24 && !*((unsigned char *)this + 24))
        {
          unint64_t v26 = *(char **)(a1 + 16);
          unint64_t v25 = *(void *)(a1 + 24);
          if ((unint64_t)v26 >= v25)
          {
            BOOL v28 = (char *)*v8;
            uint64_t v29 = (v26 - (unsigned char *)*v8) >> 3;
            unint64_t v30 = v29 + 1;
            if ((unint64_t)(v29 + 1) >> 61) {
              goto LABEL_84;
            }
            uint64_t v31 = v25 - (void)v28;
            if (v31 >> 2 > v30) {
              unint64_t v30 = v31 >> 2;
            }
            if ((unint64_t)v31 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v32 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v32 = v30;
            }
            if (v32)
            {
              uint64_t v33 = (char *)sub_227B8B8B4(v9, v32);
              BOOL v28 = *(char **)(a1 + 8);
              unint64_t v26 = *(char **)(a1 + 16);
            }
            else
            {
              uint64_t v33 = 0;
            }
            unint64_t v34 = &v33[8 * v29];
            *(void *)unint64_t v34 = 0;
            unint64_t v27 = v34 + 8;
            while (v26 != v28)
            {
              uint64_t v35 = *((void *)v26 - 1);
              v26 -= 8;
              *((void *)v34 - 1) = v35;
              v34 -= 8;
            }
            *(void *)(a1 + 8) = v34;
            *(void *)(a1 + 16) = v27;
            *(void *)(a1 + 24) = &v33[8 * v32];
            if (v28) {
              operator delete(v28);
            }
          }
          else
          {
            *(void *)unint64_t v26 = 0;
            unint64_t v27 = v26 + 8;
          }
          *(void *)(a1 + 16) = v27;
          unint64_t v36 = *((void *)this + 1);
          if (v36 > 0xFFFFFFFFFFFFFFF7 || v36 + 8 > *((void *)this + 2))
          {
            *((unsigned char *)this + 24) = 1;
            break;
          }
          *(v27 - 1) = *(void *)(*(void *)this + v36);
          unint64_t v24 = *((void *)this + 2);
          unint64_t v23 = *((void *)this + 1) + 8;
          *((void *)this + 1) = v23;
        }
        PB::Reader::recallMark();
      }
      else
      {
        if ((v13 >> 3) == 1)
        {
          *(unsigned char *)(a1 + 40) |= 1u;
          unint64_t v22 = *((void *)this + 1);
          if (v22 > 0xFFFFFFFFFFFFFFF7 || v22 + 8 > *((void *)this + 2)) {
            goto LABEL_73;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v22);
LABEL_75:
          *((void *)this + 1) += 8;
          goto LABEL_76;
        }
        if ((PB::Reader::skip(this) & 1) == 0) {
          return 0;
        }
      }
LABEL_76:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
    }
    while (v2 < v3 && !*((unsigned char *)this + 24));
  }
  return v4 == 0;
}

uint64_t sub_227C5813C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  if (*(unsigned char *)(result + 40)) {
    double result = PB::Writer::write(this, *(double *)(result + 32));
  }
  uint64_t v5 = *(double **)(v3 + 8);
  int v4 = *(double **)(v3 + 16);
  while (v5 != v4)
  {
    double v6 = *v5++;
    double result = PB::Writer::write(this, v6);
  }
  return result;
}

uint64_t sub_227C581A0(uint64_t result)
{
  *(void *)double result = &unk_26DC27680;
  *(_DWORD *)(result + 100) = 0;
  return result;
}

void sub_227C581C8(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C58200(uint64_t result, uint64_t a2)
{
  *(void *)double result = &unk_26DC27680;
  *(_DWORD *)(result + 100) = 0;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 0x80) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 64);
    __int16 v3 = 128;
    *(_WORD *)(result + 100) = 128;
    *(void *)(result + 64) = v4;
    __int16 v2 = *(_WORD *)(a2 + 100);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 16);
    v3 |= 2u;
    *(_WORD *)(result + 100) = v3;
    *(void *)(result + 16) = v5;
    __int16 v2 = *(_WORD *)(a2 + 100);
  }
LABEL_6:
  if (v2)
  {
    uint64_t v6 = *(void *)(a2 + 8);
    v3 |= 1u;
    *(_WORD *)(result + 100) = v3;
    *(void *)(result + 8) = v6;
    __int16 v2 = *(_WORD *)(a2 + 100);
    if ((v2 & 4) == 0)
    {
LABEL_8:
      if ((v2 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_21;
    }
  }
  else if ((v2 & 4) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(_WORD *)(result + 100) = v3;
  *(void *)(result + 24) = v7;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 0x40) == 0)
  {
LABEL_9:
    if ((v2 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t v8 = *(void *)(a2 + 56);
  v3 |= 0x40u;
  *(_WORD *)(result + 100) = v3;
  *(void *)(result + 56) = v8;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 0x20) == 0)
  {
LABEL_10:
    if ((v2 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t v9 = *(void *)(a2 + 48);
  v3 |= 0x20u;
  *(_WORD *)(result + 100) = v3;
  *(void *)(result + 48) = v9;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 0x10) == 0)
  {
LABEL_11:
    if ((v2 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v10 = *(void *)(a2 + 40);
  v3 |= 0x10u;
  *(_WORD *)(result + 100) = v3;
  *(void *)(result + 40) = v10;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 8) == 0)
  {
LABEL_12:
    if ((v2 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t v11 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_WORD *)(result + 100) = v3;
  *(void *)(result + 32) = v11;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 0x100) == 0)
  {
LABEL_13:
    if ((v2 & 0x400) == 0) {
      goto LABEL_14;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t v12 = *(void *)(a2 + 72);
  v3 |= 0x100u;
  *(_WORD *)(result + 100) = v3;
  *(void *)(result + 72) = v12;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 0x400) == 0)
  {
LABEL_14:
    if ((v2 & 0x800) == 0) {
      goto LABEL_15;
    }
    goto LABEL_27;
  }
LABEL_26:
  int v13 = *(_DWORD *)(a2 + 84);
  v3 |= 0x400u;
  *(_WORD *)(result + 100) = v3;
  *(_DWORD *)(result + 84) = v13;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 0x800) == 0)
  {
LABEL_15:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_28;
  }
LABEL_27:
  int v14 = *(_DWORD *)(a2 + 88);
  v3 |= 0x800u;
  *(_WORD *)(result + 100) = v3;
  *(_DWORD *)(result + 88) = v14;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 0x1000) == 0)
  {
LABEL_16:
    if ((v2 & 0x200) == 0) {
      goto LABEL_17;
    }
    goto LABEL_29;
  }
LABEL_28:
  int v15 = *(_DWORD *)(a2 + 92);
  v3 |= 0x1000u;
  *(_WORD *)(result + 100) = v3;
  *(_DWORD *)(result + 92) = v15;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 0x200) == 0)
  {
LABEL_17:
    if ((v2 & 0x2000) == 0) {
      return result;
    }
LABEL_30:
    char v17 = *(unsigned char *)(a2 + 96);
    *(_WORD *)(result + 100) = v3 | 0x2000;
    *(unsigned char *)(result + 96) = v17;
    return result;
  }
LABEL_29:
  int v16 = *(_DWORD *)(a2 + 80);
  v3 |= 0x200u;
  *(_WORD *)(result + 100) = v3;
  *(_DWORD *)(result + 80) = v16;
  if ((*(_WORD *)(a2 + 100) & 0x2000) != 0) {
    goto LABEL_30;
  }
  return result;
}

uint64_t sub_227C583B4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 100);
  if (v5)
  {
    PB::TextFormatter::format(this, "accuracy", *(double *)(a1 + 8));
    __int16 v5 = *(_WORD *)(a1 + 100);
    if ((v5 & 0x200) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_21;
    }
  }
  else if ((*(_WORD *)(a1 + 100) & 0x200) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "batchedLocationFixType");
  __int16 v5 = *(_WORD *)(a1 + 100);
  if ((v5 & 2) == 0)
  {
LABEL_4:
    if ((v5 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "distance", *(double *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 100);
  if ((v5 & 4) == 0)
  {
LABEL_5:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "gpsAltitude", *(double *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 100);
  if ((v5 & 8) == 0)
  {
LABEL_6:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "gpsSpeedAccuracy", *(double *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 100);
  if ((v5 & 0x10) == 0)
  {
LABEL_7:
    if ((v5 & 0x400) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "odometer", *(double *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 100);
  if ((v5 & 0x400) == 0)
  {
LABEL_8:
    if ((v5 & 0x800) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "originDevice");
  __int16 v5 = *(_WORD *)(a1 + 100);
  if ((v5 & 0x800) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "quality");
  __int16 v5 = *(_WORD *)(a1 + 100);
  if ((v5 & 0x20) == 0)
  {
LABEL_10:
    if ((v5 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "rawSpeed", *(double *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 100);
  if ((v5 & 0x40) == 0)
  {
LABEL_11:
    if ((v5 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "speed", *(double *)(a1 + 56));
  __int16 v5 = *(_WORD *)(a1 + 100);
  if ((v5 & 0x80) == 0)
  {
LABEL_12:
    if ((v5 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(this, "startTime", *(double *)(a1 + 64));
  __int16 v5 = *(_WORD *)(a1 + 100);
  if ((v5 & 0x100) == 0)
  {
LABEL_13:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "timestampGps", *(double *)(a1 + 72));
  __int16 v5 = *(_WORD *)(a1 + 100);
  if ((v5 & 0x2000) == 0)
  {
LABEL_14:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_31:
  PB::TextFormatter::format(this, "trackRunOdometerHasBeenCorrected");
  if ((*(_WORD *)(a1 + 100) & 0x1000) != 0) {
LABEL_15:
  }
    PB::TextFormatter::format(this, "type");
LABEL_16:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C585B8(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 100) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_50;
              }
              *(void *)(a1 + 64) = *(void *)(*(void *)this + v2);
              goto LABEL_112;
            case 2u:
              *(_WORD *)(a1 + 100) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_50;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_112;
            case 3u:
              *(_WORD *)(a1 + 100) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_50;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_112;
            case 4u:
              *(_WORD *)(a1 + 100) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_50;
              }
              *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
              goto LABEL_112;
            case 5u:
              *(_WORD *)(a1 + 100) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_50;
              }
              *(void *)(a1 + 56) = *(void *)(*(void *)this + v2);
              goto LABEL_112;
            case 6u:
              *(_WORD *)(a1 + 100) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_50;
              }
              *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
              goto LABEL_112;
            case 7u:
              *(_WORD *)(a1 + 100) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_50;
              }
              *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
              goto LABEL_112;
            case 8u:
              *(_WORD *)(a1 + 100) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_50;
              }
              *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
              goto LABEL_112;
            case 9u:
              *(_WORD *)(a1 + 100) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 72) = *(void *)(*(void *)this + v2);
LABEL_112:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_50:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_133;
            case 0xAu:
              *(_WORD *)(a1 + 100) |= 0x400u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v47 = 0;
                unsigned int v48 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_117;
                  }
                  unint64_t v49 = v21++;
                  char v50 = *(unsigned char *)(v22 + v49);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v50 & 0x7F) << v47;
                  if ((v50 & 0x80) == 0) {
                    break;
                  }
                  v47 += 7;
                  BOOL v14 = v48++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_116:
                    unint64_t v2 = v49 + 1;
                    goto LABEL_117;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_116;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_117;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_117:
              *(_DWORD *)(a1 + 84) = v25;
              goto LABEL_133;
            case 0xBu:
              *(_WORD *)(a1 + 100) |= 0x800u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v51 = 0;
                unsigned int v52 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_122;
                  }
                  unint64_t v53 = v27++;
                  char v54 = *(unsigned char *)(v28 + v53);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v54 & 0x7F) << v51;
                  if ((v54 & 0x80) == 0) {
                    break;
                  }
                  v51 += 7;
                  BOOL v14 = v52++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_121:
                    unint64_t v2 = v53 + 1;
                    goto LABEL_122;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_121;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_122;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_122:
              *(_DWORD *)(a1 + 88) = v31;
              goto LABEL_133;
            case 0xCu:
              *(_WORD *)(a1 + 100) |= 0x1000u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v55 = 0;
                unsigned int v56 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_127;
                  }
                  unint64_t v57 = v33++;
                  char v58 = *(unsigned char *)(v34 + v57);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v58 & 0x7F) << v55;
                  if ((v58 & 0x80) == 0) {
                    break;
                  }
                  v55 += 7;
                  BOOL v14 = v56++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_126:
                    unint64_t v2 = v57 + 1;
                    goto LABEL_127;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_126;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_127;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_127:
              *(_DWORD *)(a1 + 92) = v37;
              goto LABEL_133;
            case 0xDu:
              *(_WORD *)(a1 + 100) |= 0x200u;
              unint64_t v39 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v40 = *(void *)this;
              if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
              {
                char v59 = 0;
                unsigned int v60 = 0;
                uint64_t v43 = 0;
                if (v2 <= v39) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v39)
                  {
                    LODWORD(v43) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_132;
                  }
                  unint64_t v61 = v39++;
                  char v62 = *(unsigned char *)(v40 + v61);
                  *((void *)this + 1) = v39;
                  v43 |= (unint64_t)(v62 & 0x7F) << v59;
                  if ((v62 & 0x80) == 0) {
                    break;
                  }
                  v59 += 7;
                  BOOL v14 = v60++ > 8;
                  if (v14)
                  {
                    LODWORD(v43) = 0;
LABEL_131:
                    unint64_t v2 = v61 + 1;
                    goto LABEL_132;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v43) = 0;
                }
                goto LABEL_131;
              }
              char v41 = 0;
              unsigned int v42 = 0;
              uint64_t v43 = 0;
              do
              {
                unint64_t v2 = v39 + 1;
                *((void *)this + 1) = v39 + 1;
                char v44 = *(unsigned char *)(v40 + v39);
                v43 |= (unint64_t)(v44 & 0x7F) << v41;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_132;
                }
                v41 += 7;
                unint64_t v39 = v2;
                BOOL v14 = v42++ > 8;
              }
              while (!v14);
              LODWORD(v43) = 0;
LABEL_132:
              *(_DWORD *)(a1 + 80) = v43;
LABEL_133:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 0xEu:
              *(_WORD *)(a1 + 100) |= 0x2000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v46 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v45 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v46 = v45 != 0;
              }
              *(unsigned char *)(a1 + 96) = v46;
              goto LABEL_133;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_133;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C58D64(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 100);
  if ((v4 & 0x80) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 64));
    __int16 v4 = *(_WORD *)(v3 + 100);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 1) == 0)
  {
LABEL_4:
    if ((v4 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24));
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 0x40) == 0)
  {
LABEL_6:
    if ((v4 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 56));
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 0x20) == 0)
  {
LABEL_7:
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48));
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 0x10) == 0)
  {
LABEL_8:
    if ((v4 & 8) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40));
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 8) == 0)
  {
LABEL_9:
    if ((v4 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32));
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 0x100) == 0)
  {
LABEL_10:
    if ((v4 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 72));
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 0x400) == 0)
  {
LABEL_11:
    if ((v4 & 0x800) == 0) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 0x800) == 0)
  {
LABEL_12:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 0x1000) == 0)
  {
LABEL_13:
    if ((v4 & 0x200) == 0) {
      goto LABEL_14;
    }
LABEL_28:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(_WORD *)(v3 + 100) & 0x2000) == 0) {
      return result;
    }
    goto LABEL_29;
  }
LABEL_27:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 0x200) != 0) {
    goto LABEL_28;
  }
LABEL_14:
  if ((v4 & 0x2000) == 0) {
    return result;
  }
LABEL_29:

  return PB::Writer::write(this);
}

uint64_t sub_227C58F24(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC276B8;
  *(void *)(result + 72) = 0;
  *(_DWORD *)(result + 80) = 0;
  return result;
}

void sub_227C58F4C(PB::Base *this)
{
  *(void *)this = &unk_26DC276B8;
  uint64_t v2 = *((void *)this + 9);
  *((void *)this + 9) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C58FD0(PB::Base *a1)
{
  sub_227C58F4C(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C59008(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC276B8;
  *(void *)(result + 72) = 0;
  *(_DWORD *)(result + 80) = 0;
  if (*(void *)(a2 + 72)) {
    operator new();
  }
  char v2 = *(unsigned char *)(a2 + 80);
  if ((v2 & 4) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 24);
    *(unsigned char *)(result + 80) |= 4u;
    *(void *)(result + 24) = v4;
    char v2 = *(unsigned char *)(a2 + 80);
    if ((v2 & 8) == 0)
    {
LABEL_5:
      if ((v2 & 0x40) == 0) {
        goto LABEL_6;
      }
      goto LABEL_15;
    }
  }
  else if ((*(unsigned char *)(a2 + 80) & 8) == 0)
  {
    goto LABEL_5;
  }
  uint64_t v5 = *(void *)(a2 + 32);
  *(unsigned char *)(result + 80) |= 8u;
  *(void *)(result + 32) = v5;
  char v2 = *(unsigned char *)(a2 + 80);
  if ((v2 & 0x40) == 0)
  {
LABEL_6:
    if ((v2 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t v6 = *(void *)(a2 + 56);
  *(unsigned char *)(result + 80) |= 0x40u;
  *(void *)(result + 56) = v6;
  char v2 = *(unsigned char *)(a2 + 80);
  if ((v2 & 0x80) == 0)
  {
LABEL_7:
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t v7 = *(void *)(a2 + 64);
  *(unsigned char *)(result + 80) |= 0x80u;
  *(void *)(result + 64) = v7;
  char v2 = *(unsigned char *)(a2 + 80);
  if ((v2 & 2) == 0)
  {
LABEL_8:
    if ((v2 & 1) == 0) {
      goto LABEL_9;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t v8 = *(void *)(a2 + 16);
  *(unsigned char *)(result + 80) |= 2u;
  *(void *)(result + 16) = v8;
  char v2 = *(unsigned char *)(a2 + 80);
  if ((v2 & 1) == 0)
  {
LABEL_9:
    if ((v2 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t v9 = *(void *)(a2 + 8);
  *(unsigned char *)(result + 80) |= 1u;
  *(void *)(result + 8) = v9;
  char v2 = *(unsigned char *)(a2 + 80);
  if ((v2 & 0x20) == 0)
  {
LABEL_10:
    if ((v2 & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_19:
  uint64_t v10 = *(void *)(a2 + 48);
  *(unsigned char *)(result + 80) |= 0x20u;
  *(void *)(result + 48) = v10;
  if ((*(unsigned char *)(a2 + 80) & 0x10) == 0) {
    return result;
  }
LABEL_11:
  uint64_t v3 = *(void *)(a2 + 40);
  *(unsigned char *)(result + 80) |= 0x10u;
  *(void *)(result + 40) = v3;
  return result;
}

uint64_t sub_227C591B8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 80);
  if (v5)
  {
    PB::TextFormatter::format(this, "gpsCourseAccuracy", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 80);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((*(unsigned char *)(a1 + 80) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "gpsCourseRadians", *(double *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 80);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "groundAltitude", *(double *)(a1 + 24));
  char v5 = *(unsigned char *)(a1 + 80);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  PB::TextFormatter::format(this, "groundAltitudeUncertainty", *(double *)(a1 + 32));
  char v5 = *(unsigned char *)(a1 + 80);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "maxAbsSlope", *(double *)(a1 + 40));
  char v5 = *(unsigned char *)(a1 + 80);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_20:
    PB::TextFormatter::format(this, "smoothedGPSAltitude", *(double *)(a1 + 56));
    if ((*(unsigned char *)(a1 + 80) & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_19:
  PB::TextFormatter::format(this, "slope", *(double *)(a1 + 48));
  char v5 = *(unsigned char *)(a1 + 80);
  if ((v5 & 0x40) != 0) {
    goto LABEL_20;
  }
LABEL_8:
  if ((v5 & 0x80) == 0) {
    goto LABEL_9;
  }
LABEL_21:
  PB::TextFormatter::format(this, "smoothedGPSAltitudeUncertainty", *(double *)(a1 + 64));
LABEL_9:
  uint64_t v6 = *(void *)(a1 + 72);
  if (v6) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v6 + 32))(v6, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C59334(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          if (v10++ > 8) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              operator new();
            case 2u:
              *(unsigned char *)(a1 + 80) |= 4u;
              unint64_t v21 = *((void *)this + 1);
              if (v21 > 0xFFFFFFFFFFFFFFF7 || v21 + 8 > *((void *)this + 2)) {
                goto LABEL_48;
              }
              *(void *)(a1 + 24) = *(void *)(*(void *)this + v21);
              goto LABEL_50;
            case 3u:
              *(unsigned char *)(a1 + 80) |= 8u;
              unint64_t v22 = *((void *)this + 1);
              if (v22 > 0xFFFFFFFFFFFFFFF7 || v22 + 8 > *((void *)this + 2)) {
                goto LABEL_48;
              }
              *(void *)(a1 + 32) = *(void *)(*(void *)this + v22);
              goto LABEL_50;
            case 4u:
              *(unsigned char *)(a1 + 80) |= 0x40u;
              unint64_t v23 = *((void *)this + 1);
              if (v23 > 0xFFFFFFFFFFFFFFF7 || v23 + 8 > *((void *)this + 2)) {
                goto LABEL_48;
              }
              *(void *)(a1 + 56) = *(void *)(*(void *)this + v23);
              goto LABEL_50;
            case 5u:
              *(unsigned char *)(a1 + 80) |= 0x80u;
              unint64_t v24 = *((void *)this + 1);
              if (v24 > 0xFFFFFFFFFFFFFFF7 || v24 + 8 > *((void *)this + 2)) {
                goto LABEL_48;
              }
              *(void *)(a1 + 64) = *(void *)(*(void *)this + v24);
              goto LABEL_50;
            case 6u:
              *(unsigned char *)(a1 + 80) |= 2u;
              unint64_t v25 = *((void *)this + 1);
              if (v25 > 0xFFFFFFFFFFFFFFF7 || v25 + 8 > *((void *)this + 2)) {
                goto LABEL_48;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v25);
              goto LABEL_50;
            case 7u:
              *(unsigned char *)(a1 + 80) |= 1u;
              unint64_t v26 = *((void *)this + 1);
              if (v26 > 0xFFFFFFFFFFFFFFF7 || v26 + 8 > *((void *)this + 2)) {
                goto LABEL_48;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v26);
              goto LABEL_50;
            case 8u:
              *(unsigned char *)(a1 + 80) |= 0x20u;
              unint64_t v27 = *((void *)this + 1);
              if (v27 > 0xFFFFFFFFFFFFFFF7 || v27 + 8 > *((void *)this + 2)) {
                goto LABEL_48;
              }
              *(void *)(a1 + 48) = *(void *)(*(void *)this + v27);
              goto LABEL_50;
            case 9u:
              *(unsigned char *)(a1 + 80) |= 0x10u;
              unint64_t v28 = *((void *)this + 1);
              if (v28 <= 0xFFFFFFFFFFFFFFF7 && v28 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 40) = *(void *)(*(void *)this + v28);
LABEL_50:
                *((void *)this + 1) += 8;
              }
              else
              {
LABEL_48:
                *((unsigned char *)this + 24) = 1;
              }
LABEL_51:
              unint64_t v2 = *((void *)this + 1);
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || *((unsigned char *)this + 24)) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              goto LABEL_51;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C5976C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(const PB::Base **)(result + 72);
  if (v4) {
    uint64_t result = PB::Writer::writeSubmessage(this, v4);
  }
  char v5 = *(unsigned char *)(v3 + 80);
  if ((v5 & 4) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24));
    char v5 = *(unsigned char *)(v3 + 80);
    if ((v5 & 8) == 0)
    {
LABEL_5:
      if ((v5 & 0x40) == 0) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(v3 + 80) & 8) == 0)
  {
    goto LABEL_5;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32));
  char v5 = *(unsigned char *)(v3 + 80);
  if ((v5 & 0x40) == 0)
  {
LABEL_6:
    if ((v5 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 56));
  char v5 = *(unsigned char *)(v3 + 80);
  if ((v5 & 0x80) == 0)
  {
LABEL_7:
    if ((v5 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 64));
  char v5 = *(unsigned char *)(v3 + 80);
  if ((v5 & 2) == 0)
  {
LABEL_8:
    if ((v5 & 1) == 0) {
      goto LABEL_9;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  char v5 = *(unsigned char *)(v3 + 80);
  if ((v5 & 1) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_18:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48));
    if ((*(unsigned char *)(v3 + 80) & 0x10) == 0) {
      return result;
    }
    goto LABEL_19;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
  char v5 = *(unsigned char *)(v3 + 80);
  if ((v5 & 0x20) != 0) {
    goto LABEL_18;
  }
LABEL_10:
  if ((v5 & 0x10) == 0) {
    return result;
  }
LABEL_19:
  double v6 = *(double *)(v3 + 40);

  return PB::Writer::write(this, v6);
}

uint64_t sub_227C59898(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC276F0;
  *(_DWORD *)(result + 68) = 0;
  return result;
}

void sub_227C598C0(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C598F8(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC276F0;
  *(_DWORD *)(result + 68) = 0;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x40) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 52);
    __int16 v3 = 64;
    *(_WORD *)(result + 68) = 64;
    *(_DWORD *)(result + 52) = v4;
    __int16 v2 = *(_WORD *)(a2 + 68);
    if ((v2 & 0x80) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 0x80) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 56);
    v3 |= 0x80u;
    *(_WORD *)(result + 68) = v3;
    *(_DWORD *)(result + 56) = v5;
    __int16 v2 = *(_WORD *)(a2 + 68);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    v3 |= 2u;
    *(_WORD *)(result + 68) = v3;
    *(void *)(result + 16) = v6;
    __int16 v2 = *(_WORD *)(a2 + 68);
    if ((v2 & 1) == 0)
    {
LABEL_8:
      if ((v2 & 0x200) == 0) {
        goto LABEL_9;
      }
      goto LABEL_17;
    }
  }
  else if ((v2 & 1) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(result + 68) = v3;
  *(void *)(result + 8) = v7;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x200) == 0)
  {
LABEL_9:
    if ((v2 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_18;
  }
LABEL_17:
  char v8 = *(unsigned char *)(a2 + 64);
  v3 |= 0x200u;
  *(_WORD *)(result + 68) = v3;
  *(unsigned char *)(result + 64) = v8;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x10) == 0)
  {
LABEL_10:
    if ((v2 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t v9 = *(void *)(a2 + 40);
  v3 |= 0x10u;
  *(_WORD *)(result + 68) = v3;
  *(void *)(result + 40) = v9;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 8) == 0)
  {
LABEL_11:
    if ((v2 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v10 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_WORD *)(result + 68) = v3;
  *(void *)(result + 32) = v10;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 4) == 0)
  {
LABEL_12:
    if ((v2 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t v11 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(_WORD *)(result + 68) = v3;
  *(void *)(result + 24) = v11;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x100) == 0)
  {
LABEL_13:
    if ((v2 & 0x20) == 0) {
      return result;
    }
LABEL_22:
    int v13 = *(_DWORD *)(a2 + 48);
    *(_WORD *)(result + 68) = v3 | 0x20;
    *(_DWORD *)(result + 48) = v13;
    return result;
  }
LABEL_21:
  int v12 = *(_DWORD *)(a2 + 60);
  v3 |= 0x100u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 60) = v12;
  if ((*(_WORD *)(a2 + 68) & 0x20) != 0) {
    goto LABEL_22;
  }
  return result;
}

uint64_t sub_227C59A3C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 68);
  if (v5)
  {
    PB::TextFormatter::format(this, "confidence", *(double *)(a1 + 8));
    __int16 v5 = *(_WORD *)(a1 + 68);
    if ((v5 & 0x20) == 0)
    {
LABEL_3:
      if ((v5 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v5 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "context");
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x40) == 0)
  {
LABEL_4:
    if ((v5 & 0x200) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  PB::TextFormatter::format(this, "dataSource");
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x200) == 0)
  {
LABEL_5:
    if ((v5 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "error");
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 2) == 0)
  {
LABEL_6:
    if ((v5 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "heartRate", *(double *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x80) == 0)
  {
LABEL_7:
    if ((v5 & 0x100) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "interpolation");
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x100) == 0)
  {
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "mode");
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 4) == 0)
  {
LABEL_9:
    if ((v5 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "sinceLastGood", *(double *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 8) == 0)
  {
LABEL_10:
    if ((v5 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_23:
  PB::TextFormatter::format(this, "startTime", *(double *)(a1 + 32));
  if ((*(_WORD *)(a1 + 68) & 0x10) != 0) {
LABEL_11:
  }
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 40));
LABEL_12:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C59BC0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 68) |= 0x40u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v47 = 0;
                unsigned int v48 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    LODWORD(v24) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_105;
                  }
                  unint64_t v49 = v20++;
                  char v50 = *(unsigned char *)(v21 + v49);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v50 & 0x7F) << v47;
                  if ((v50 & 0x80) == 0) {
                    break;
                  }
                  v47 += 7;
                  BOOL v14 = v48++ > 8;
                  if (v14)
                  {
                    LODWORD(v24) = 0;
                    goto LABEL_104;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v24) = 0;
                }
LABEL_104:
                unint64_t v2 = v49 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_105;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                LODWORD(v24) = 0;
              }
LABEL_105:
              *(_DWORD *)(a1 + 52) = v24;
              goto LABEL_121;
            case 2u:
              *(_WORD *)(a1 + 68) |= 0x80u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v51 = 0;
                unsigned int v52 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_110;
                  }
                  unint64_t v53 = v27++;
                  char v54 = *(unsigned char *)(v28 + v53);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v54 & 0x7F) << v51;
                  if ((v54 & 0x80) == 0) {
                    break;
                  }
                  v51 += 7;
                  BOOL v14 = v52++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_109:
                    unint64_t v2 = v53 + 1;
                    goto LABEL_110;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_109;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_110;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_110:
              *(_DWORD *)(a1 + 56) = v31;
              goto LABEL_121;
            case 3u:
              *(_WORD *)(a1 + 68) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_54;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_100;
            case 4u:
              *(_WORD *)(a1 + 68) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_54;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_100;
            case 5u:
              *(_WORD *)(a1 + 68) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v34 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v33 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v34 = v33 != 0;
              }
              *(unsigned char *)(a1 + 64) = v34;
              goto LABEL_121;
            case 6u:
              *(_WORD *)(a1 + 68) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_54;
              }
              *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
              goto LABEL_100;
            case 7u:
              *(_WORD *)(a1 + 68) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_54;
              }
              *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
              goto LABEL_100;
            case 8u:
              *(_WORD *)(a1 + 68) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
LABEL_100:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_54:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_121;
            case 9u:
              *(_WORD *)(a1 + 68) |= 0x100u;
              unint64_t v35 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v36 = *(void *)this;
              if (v35 > 0xFFFFFFFFFFFFFFF5 || v35 + 10 > v2)
              {
                char v55 = 0;
                unsigned int v56 = 0;
                uint64_t v39 = 0;
                if (v2 <= v35) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v35)
                  {
                    LODWORD(v39) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_115;
                  }
                  unint64_t v57 = v35++;
                  char v58 = *(unsigned char *)(v36 + v57);
                  *((void *)this + 1) = v35;
                  v39 |= (unint64_t)(v58 & 0x7F) << v55;
                  if ((v58 & 0x80) == 0) {
                    break;
                  }
                  v55 += 7;
                  BOOL v14 = v56++ > 8;
                  if (v14)
                  {
                    LODWORD(v39) = 0;
LABEL_114:
                    unint64_t v2 = v57 + 1;
                    goto LABEL_115;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v39) = 0;
                }
                goto LABEL_114;
              }
              char v37 = 0;
              unsigned int v38 = 0;
              uint64_t v39 = 0;
              do
              {
                unint64_t v2 = v35 + 1;
                *((void *)this + 1) = v35 + 1;
                char v40 = *(unsigned char *)(v36 + v35);
                v39 |= (unint64_t)(v40 & 0x7F) << v37;
                if ((v40 & 0x80) == 0) {
                  goto LABEL_115;
                }
                v37 += 7;
                unint64_t v35 = v2;
                BOOL v14 = v38++ > 8;
              }
              while (!v14);
              LODWORD(v39) = 0;
LABEL_115:
              *(_DWORD *)(a1 + 60) = v39;
              goto LABEL_121;
            case 0xAu:
              *(_WORD *)(a1 + 68) |= 0x20u;
              unint64_t v41 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v42 = *(void *)this;
              if (v41 > 0xFFFFFFFFFFFFFFF5 || v41 + 10 > v2)
              {
                char v59 = 0;
                unsigned int v60 = 0;
                uint64_t v45 = 0;
                if (v2 <= v41) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v41)
                  {
                    LODWORD(v45) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_120;
                  }
                  unint64_t v61 = v41++;
                  char v62 = *(unsigned char *)(v42 + v61);
                  *((void *)this + 1) = v41;
                  v45 |= (unint64_t)(v62 & 0x7F) << v59;
                  if ((v62 & 0x80) == 0) {
                    break;
                  }
                  v59 += 7;
                  BOOL v14 = v60++ > 8;
                  if (v14)
                  {
                    LODWORD(v45) = 0;
LABEL_119:
                    unint64_t v2 = v61 + 1;
                    goto LABEL_120;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v45) = 0;
                }
                goto LABEL_119;
              }
              char v43 = 0;
              unsigned int v44 = 0;
              uint64_t v45 = 0;
              do
              {
                unint64_t v2 = v41 + 1;
                *((void *)this + 1) = v41 + 1;
                char v46 = *(unsigned char *)(v42 + v41);
                v45 |= (unint64_t)(v46 & 0x7F) << v43;
                if ((v46 & 0x80) == 0) {
                  goto LABEL_120;
                }
                v43 += 7;
                unint64_t v41 = v2;
                BOOL v14 = v44++ > 8;
              }
              while (!v14);
              LODWORD(v45) = 0;
LABEL_120:
              *(_DWORD *)(a1 + 48) = v45;
LABEL_121:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_121;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C5A27C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 68);
  if ((v4 & 0x40) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    __int16 v4 = *(_WORD *)(v3 + 68);
    if ((v4 & 0x80) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v4 & 0x80) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 2) == 0)
  {
LABEL_4:
    if ((v4 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 1) == 0)
  {
LABEL_5:
    if ((v4 & 0x200) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x200) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 4) == 0)
  {
LABEL_9:
    if ((v4 & 0x100) == 0) {
      goto LABEL_10;
    }
LABEL_20:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(_WORD *)(v3 + 68) & 0x20) == 0) {
      return result;
    }
    goto LABEL_21;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x100) != 0) {
    goto LABEL_20;
  }
LABEL_10:
  if ((v4 & 0x20) == 0) {
    return result;
  }
LABEL_21:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227C5A3CC(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC27728;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_227C5A3F4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C5A42C(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC27728;
  *(_DWORD *)(result + 20) = 0;
  if (*(unsigned char *)(a2 + 20))
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 20) = 1;
    *(void *)(result + 8) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 20) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
LABEL_5:
    int v4 = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(result + 20) = v2;
    *(_DWORD *)(result + 16) = v4;
  }
  return result;
}

uint64_t sub_227C5A490(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "orientation");
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if (v5) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C5A50C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v20 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v21 = *(void *)this;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v24 = 0;
          if (v2 <= v20) {
            unint64_t v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v20)
            {
              LODWORD(v24) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_47;
            }
            unint64_t v29 = v20++;
            char v30 = *(unsigned char *)(v21 + v29);
            *((void *)this + 1) = v20;
            v24 |= (unint64_t)(v30 & 0x7F) << v27;
            if ((v30 & 0x80) == 0) {
              break;
            }
            v27 += 7;
            BOOL v14 = v28++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              goto LABEL_46;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v24) = 0;
          }
LABEL_46:
          unint64_t v2 = v29 + 1;
        }
        else
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          while (1)
          {
            unint64_t v2 = v20 + 1;
            *((void *)this + 1) = v20 + 1;
            char v25 = *(unsigned char *)(v21 + v20);
            v24 |= (unint64_t)(v25 & 0x7F) << v22;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v22 += 7;
            unint64_t v20 = v2;
            BOOL v14 = v23++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              break;
            }
          }
        }
LABEL_47:
        *(_DWORD *)(a1 + 16) = v24;
      }
      else if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C5A79C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    return PB::Writer::writeVarInt(this);
  }
  return result;
}

void *sub_227C5A808(void *result)
{
  *uint64_t result = &unk_26DC27760;
  result[1] = 0;
  return result;
}

void sub_227C5A82C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C5A864(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC27760;
  *(void *)(result + 8) = 0;
  if (*(unsigned char *)(a2 + 12))
  {
    int v2 = *(_DWORD *)(a2 + 8);
    *(unsigned char *)(result + 12) = 1;
    *(_DWORD *)(result + 8) = v2;
  }
  return result;
}

uint64_t sub_227C5A89C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 12)) {
    PB::TextFormatter::format(this, "type");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C5A8FC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 12) |= 1u;
        unint64_t v20 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
        uint64_t v21 = *(void *)this;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v3)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v24 = 0;
          if (v3 <= v20) {
            unint64_t v2 = *((void *)this + 1);
          }
          else {
            unint64_t v2 = *((void *)this + 2);
          }
          while (1)
          {
            if (v2 == v20)
            {
              LODWORD(v24) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_43;
            }
            unint64_t v29 = v20++;
            char v30 = *(unsigned char *)(v21 + v29);
            *((void *)this + 1) = v20;
            v24 |= (unint64_t)(v30 & 0x7F) << v27;
            if ((v30 & 0x80) == 0) {
              break;
            }
            v27 += 7;
            BOOL v14 = v28++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              goto LABEL_42;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v24) = 0;
          }
LABEL_42:
          unint64_t v2 = v29 + 1;
        }
        else
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          while (1)
          {
            unint64_t v2 = v20 + 1;
            *((void *)this + 1) = v20 + 1;
            char v25 = *(unsigned char *)(v21 + v20);
            v24 |= (unint64_t)(v25 & 0x7F) << v22;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v22 += 7;
            unint64_t v20 = v2;
            BOOL v14 = v23++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              break;
            }
          }
        }
LABEL_43:
        *(_DWORD *)(a1 + 8) = v24;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C5AB34(uint64_t result, PB::Writer *this)
{
  if (*(unsigned char *)(result + 12)) {
    return PB::Writer::writeVarInt(this);
  }
  return result;
}

uint64_t sub_227C5AB54(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC27798;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void sub_227C5AB7C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227C5ABB4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC27798;
  *(_DWORD *)(a1 + 32) = 0;
  char v2 = *(unsigned char *)(a2 + 32);
  if (v2)
  {
    double result = *(double *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 32) = 1;
    *(double *)(a1 + 8) = result;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 32) & 4) != 0)
  {
LABEL_5:
    LODWORD(result) = *(_DWORD *)(a2 + 24);
    v3 |= 4u;
    *(unsigned char *)(a1 + 32) = v3;
    *(_DWORD *)(a1 + 24) = LODWORD(result);
    char v2 = *(unsigned char *)(a2 + 32);
  }
LABEL_6:
  if ((v2 & 8) == 0)
  {
    if ((v2 & 2) == 0) {
      return result;
    }
LABEL_10:
    double result = *(double *)(a2 + 16);
    *(unsigned char *)(a1 + 32) = v3 | 2;
    *(double *)(a1 + 16) = result;
    return result;
  }
  LODWORD(result) = *(_DWORD *)(a2 + 28);
  v3 |= 8u;
  *(unsigned char *)(a1 + 32) = v3;
  *(_DWORD *)(a1 + 28) = LODWORD(result);
  if ((*(unsigned char *)(a2 + 32) & 2) != 0) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_227C5AC50(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "dot", *(float *)(a1 + 24));
    char v5 = *(unsigned char *)(a1 + 32);
    if ((v5 & 8) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 32) & 8) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "dotUnc", *(float *)(a1 + 28));
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 1) == 0)
  {
LABEL_4:
    if ((v5 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  if ((*(unsigned char *)(a1 + 32) & 2) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "timestampPast", *(double *)(a1 + 16));
LABEL_6:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C5AD14(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 32) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_36;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          goto LABEL_38;
        case 2u:
          *(unsigned char *)(a1 + 32) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_36;
          }
          *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_33;
        case 3u:
          *(unsigned char *)(a1 + 32) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_36;
          }
          *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
LABEL_33:
          unint64_t v2 = *((void *)this + 1) + 4;
          goto LABEL_39;
        case 4u:
          *(unsigned char *)(a1 + 32) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
LABEL_38:
            unint64_t v2 = *((void *)this + 1) + 8;
LABEL_39:
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_36:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C5AF94(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
      if ((*(unsigned char *)(v3 + 32) & 2) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 32) & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 8) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_9:
  double v5 = *(double *)(v3 + 16);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227C5B03C(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC277D0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void sub_227C5B064(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227C5B09C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC277D0;
  *(_DWORD *)(a1 + 32) = 0;
  char v2 = *(unsigned char *)(a2 + 32);
  if (v2)
  {
    double result = *(double *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 32) = 1;
    *(double *)(a1 + 8) = result;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 32) & 4) != 0)
  {
LABEL_5:
    LODWORD(result) = *(_DWORD *)(a2 + 24);
    v3 |= 4u;
    *(unsigned char *)(a1 + 32) = v3;
    *(_DWORD *)(a1 + 24) = LODWORD(result);
    char v2 = *(unsigned char *)(a2 + 32);
  }
LABEL_6:
  if ((v2 & 8) == 0)
  {
    if ((v2 & 2) == 0) {
      return result;
    }
LABEL_10:
    double result = *(double *)(a2 + 16);
    *(unsigned char *)(a1 + 32) = v3 | 2;
    *(double *)(a1 + 16) = result;
    return result;
  }
  LODWORD(result) = *(_DWORD *)(a2 + 28);
  v3 |= 8u;
  *(unsigned char *)(a1 + 32) = v3;
  *(_DWORD *)(a1 + 28) = LODWORD(result);
  if ((*(unsigned char *)(a2 + 32) & 2) != 0) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_227C5B138(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "dot", *(float *)(a1 + 24));
    char v5 = *(unsigned char *)(a1 + 32);
    if ((v5 & 8) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 32) & 8) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "dotUnc", *(float *)(a1 + 28));
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 1) == 0)
  {
LABEL_4:
    if ((v5 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  if ((*(unsigned char *)(a1 + 32) & 2) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "timestampPast", *(double *)(a1 + 16));
LABEL_6:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C5B1FC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 32) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_36;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          goto LABEL_38;
        case 2u:
          *(unsigned char *)(a1 + 32) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_36;
          }
          *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_33;
        case 3u:
          *(unsigned char *)(a1 + 32) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_36;
          }
          *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
LABEL_33:
          unint64_t v2 = *((void *)this + 1) + 4;
          goto LABEL_39;
        case 4u:
          *(unsigned char *)(a1 + 32) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
LABEL_38:
            unint64_t v2 = *((void *)this + 1) + 8;
LABEL_39:
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_36:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C5B47C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
      if ((*(unsigned char *)(v3 + 32) & 2) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 32) & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 8) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_9:
  double v5 = *(double *)(v3 + 16);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227C5B524(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC27808;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void sub_227C5B54C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227C5B584(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC27808;
  *(_DWORD *)(a1 + 32) = 0;
  char v2 = *(unsigned char *)(a2 + 32);
  if (v2)
  {
    double result = *(double *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 32) = 1;
    *(double *)(a1 + 8) = result;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 32) & 4) != 0)
  {
LABEL_5:
    LODWORD(result) = *(_DWORD *)(a2 + 24);
    v3 |= 4u;
    *(unsigned char *)(a1 + 32) = v3;
    *(_DWORD *)(a1 + 24) = LODWORD(result);
    char v2 = *(unsigned char *)(a2 + 32);
  }
LABEL_6:
  if ((v2 & 8) == 0)
  {
    if ((v2 & 2) == 0) {
      return result;
    }
LABEL_10:
    double result = *(double *)(a2 + 16);
    *(unsigned char *)(a1 + 32) = v3 | 2;
    *(double *)(a1 + 16) = result;
    return result;
  }
  LODWORD(result) = *(_DWORD *)(a2 + 28);
  v3 |= 8u;
  *(unsigned char *)(a1 + 32) = v3;
  *(_DWORD *)(a1 + 28) = LODWORD(result);
  if ((*(unsigned char *)(a2 + 32) & 2) != 0) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_227C5B620(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "dot", *(float *)(a1 + 24));
    char v5 = *(unsigned char *)(a1 + 32);
    if ((v5 & 8) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 32) & 8) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "dotUnc", *(float *)(a1 + 28));
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 1) == 0)
  {
LABEL_4:
    if ((v5 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  if ((*(unsigned char *)(a1 + 32) & 2) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "timestampPast", *(double *)(a1 + 16));
LABEL_6:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C5B6E4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 32) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_36;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          goto LABEL_38;
        case 2u:
          *(unsigned char *)(a1 + 32) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_36;
          }
          *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_33;
        case 3u:
          *(unsigned char *)(a1 + 32) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_36;
          }
          *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
LABEL_33:
          unint64_t v2 = *((void *)this + 1) + 4;
          goto LABEL_39;
        case 4u:
          *(unsigned char *)(a1 + 32) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
LABEL_38:
            unint64_t v2 = *((void *)this + 1) + 8;
LABEL_39:
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_36:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C5B964(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
      if ((*(unsigned char *)(v3 + 32) & 2) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 32) & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 8) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_9:
  double v5 = *(double *)(v3 + 16);

  return PB::Writer::write(this, v5);
}

double sub_227C5BA0C(uint64_t a1)
{
  *(void *)a1 = &unk_26DC27840;
  *(_DWORD *)(a1 + 72) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return result;
}

void sub_227C5BA40(PB::Base *this)
{
  *(void *)this = &unk_26DC27840;
  unint64_t v2 = (void *)*((void *)this + 4);
  if (v2)
  {
    *((void *)this + 5) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 2) = v3;
    operator delete(v3);
  }

  PB::Base::~Base(this);
}

void sub_227C5BAB4(PB::Base *a1)
{
  sub_227C5BA40(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C5BAEC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC27840;
  *(_OWORD *)(a1 + 8) = 0u;
  char v4 = (char *)(a1 + 8);
  *(_DWORD *)(a1 + 72) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  if (*(unsigned char *)(a2 + 72))
  {
    uint64_t v5 = *(void *)(a2 + 56);
    *(unsigned char *)(a1 + 72) = 1;
    *(void *)(a1 + 56) = v5;
  }
  if (a1 != a2)
  {
    sub_227B8BA68(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
    sub_227B8BA68((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
  }
  char v6 = *(unsigned char *)(a2 + 72);
  if ((v6 & 2) == 0)
  {
    if ((*(unsigned char *)(a2 + 72) & 8) == 0) {
      goto LABEL_7;
    }
LABEL_11:
    char v10 = *(unsigned char *)(a2 + 69);
    *(unsigned char *)(a1 + 72) |= 8u;
    *(unsigned char *)(a1 + 69) = v10;
    if ((*(unsigned char *)(a2 + 72) & 4) == 0) {
      return a1;
    }
    goto LABEL_8;
  }
  int v9 = *(_DWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 72) |= 2u;
  *(_DWORD *)(a1 + 64) = v9;
  char v6 = *(unsigned char *)(a2 + 72);
  if ((v6 & 8) != 0) {
    goto LABEL_11;
  }
LABEL_7:
  if ((v6 & 4) != 0)
  {
LABEL_8:
    char v7 = *(unsigned char *)(a2 + 68);
    *(unsigned char *)(a1 + 72) |= 4u;
    *(unsigned char *)(a1 + 68) = v7;
  }
  return a1;
}

uint64_t sub_227C5BBF0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(float **)(a1 + 8);
  char v6 = *(float **)(a1 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    PB::TextFormatter::format(this, "dotVector", v7);
  }
  if ((*(unsigned char *)(a1 + 72) & 4) != 0) {
    PB::TextFormatter::format(this, "hasValidTNBFrame");
  }
  uint64_t v8 = *(float **)(a1 + 32);
  int v9 = *(float **)(a1 + 40);
  while (v8 != v9)
  {
    float v10 = *v8++;
    PB::TextFormatter::format(this, "headingVector", v10);
  }
  char v11 = *(unsigned char *)(a1 + 72);
  if ((v11 & 8) != 0)
  {
    PB::TextFormatter::format(this, "isPedestrian");
    char v11 = *(unsigned char *)(a1 + 72);
    if ((v11 & 1) == 0)
    {
LABEL_9:
      if ((v11 & 2) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
  }
  else if ((*(unsigned char *)(a1 + 72) & 1) == 0)
  {
    goto LABEL_9;
  }
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 56));
  if ((*(unsigned char *)(a1 + 72) & 2) != 0) {
LABEL_10:
  }
    PB::TextFormatter::format(this, "uncertainty", *(float *)(a1 + 64));
LABEL_11:

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227C5BD18(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = (void **)(a1 + 32);
    uint64_t v9 = a1 + 48;
    float v10 = (void **)(a1 + 8);
    uint64_t v11 = a1 + 24;
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        if (v14++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v24 = v15 & 7;
      if (v24 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v15 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 72) |= 1u;
          unint64_t v25 = *((void *)this + 1);
          if (v25 > 0xFFFFFFFFFFFFFFF7 || v25 + 8 > *((void *)this + 2)) {
            goto LABEL_125;
          }
          *(void *)(a1 + 56) = *(void *)(*(void *)this + v25);
          uint64_t v26 = *((void *)this + 1) + 8;
          goto LABEL_128;
        case 2u:
          if (v24 != 2)
          {
            int v65 = *(char **)(a1 + 16);
            unint64_t v64 = *(void *)(a1 + 24);
            if ((unint64_t)v65 >= v64)
            {
              unint64_t v69 = (char *)*v10;
              uint64_t v70 = (v65 - (unsigned char *)*v10) >> 2;
              unint64_t v71 = v70 + 1;
              if ((unint64_t)(v70 + 1) >> 62) {
LABEL_137:
              }
                sub_227B8B89C();
              uint64_t v72 = v64 - (void)v69;
              if (v72 >> 1 > v71) {
                unint64_t v71 = v72 >> 1;
              }
              if ((unint64_t)v72 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v73 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v73 = v71;
              }
              if (v73)
              {
                uint64_t v74 = (char *)sub_227B8BBB8(v11, v73);
                unint64_t v69 = *(char **)(a1 + 8);
                int v65 = *(char **)(a1 + 16);
              }
              else
              {
                uint64_t v74 = 0;
              }
              BOOL v81 = &v74[4 * v70];
              *(_DWORD *)BOOL v81 = 0;
              unint64_t v66 = v81 + 4;
              while (v65 != v69)
              {
                int v82 = *((_DWORD *)v65 - 1);
                v65 -= 4;
                *((_DWORD *)v81 - 1) = v82;
                v81 -= 4;
              }
              *(void *)(a1 + 8) = v81;
              *(void *)(a1 + 16) = v66;
              *(void *)(a1 + 24) = &v74[4 * v73];
              if (v69) {
                operator delete(v69);
              }
            }
            else
            {
              *(_DWORD *)int v65 = 0;
              unint64_t v66 = v65 + 4;
            }
            *(void *)(a1 + 16) = v66;
            goto LABEL_123;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v27 = *((void *)this + 1);
          unint64_t v28 = *((void *)this + 2);
          while (v27 < v28 && !*((unsigned char *)this + 24))
          {
            char v30 = *(char **)(a1 + 16);
            unint64_t v29 = *(void *)(a1 + 24);
            if ((unint64_t)v30 >= v29)
            {
              char v32 = (char *)*v10;
              uint64_t v33 = (v30 - (unsigned char *)*v10) >> 2;
              unint64_t v34 = v33 + 1;
              if ((unint64_t)(v33 + 1) >> 62) {
                goto LABEL_137;
              }
              uint64_t v35 = v29 - (void)v32;
              if (v35 >> 1 > v34) {
                unint64_t v34 = v35 >> 1;
              }
              if ((unint64_t)v35 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v36 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v36 = v34;
              }
              if (v36)
              {
                char v37 = (char *)sub_227B8BBB8(v11, v36);
                char v32 = *(char **)(a1 + 8);
                char v30 = *(char **)(a1 + 16);
              }
              else
              {
                char v37 = 0;
              }
              unsigned int v38 = &v37[4 * v33];
              *(_DWORD *)unsigned int v38 = 0;
              uint64_t v31 = v38 + 4;
              while (v30 != v32)
              {
                int v39 = *((_DWORD *)v30 - 1);
                v30 -= 4;
                *((_DWORD *)v38 - 1) = v39;
                v38 -= 4;
              }
              *(void *)(a1 + 8) = v38;
              *(void *)(a1 + 16) = v31;
              *(void *)(a1 + 24) = &v37[4 * v36];
              if (v32) {
                operator delete(v32);
              }
            }
            else
            {
              *(_DWORD *)char v30 = 0;
              uint64_t v31 = v30 + 4;
            }
            *(void *)(a1 + 16) = v31;
            unint64_t v40 = *((void *)this + 1);
            if (v40 > 0xFFFFFFFFFFFFFFFBLL || v40 + 4 > *((void *)this + 2)) {
              goto LABEL_91;
            }
            *(v31 - 1) = *(_DWORD *)(*(void *)this + v40);
            unint64_t v28 = *((void *)this + 2);
            unint64_t v27 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v27;
          }
          goto LABEL_92;
        case 3u:
          if (v24 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v41 = *((void *)this + 1);
            unint64_t v42 = *((void *)this + 2);
            while (v41 < v42 && !*((unsigned char *)this + 24))
            {
              unsigned int v44 = *(char **)(a1 + 40);
              unint64_t v43 = *(void *)(a1 + 48);
              if ((unint64_t)v44 >= v43)
              {
                char v46 = (char *)*v8;
                uint64_t v47 = (v44 - (unsigned char *)*v8) >> 2;
                unint64_t v48 = v47 + 1;
                if ((unint64_t)(v47 + 1) >> 62) {
                  goto LABEL_138;
                }
                uint64_t v49 = v43 - (void)v46;
                if (v49 >> 1 > v48) {
                  unint64_t v48 = v49 >> 1;
                }
                if ((unint64_t)v49 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v50 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v50 = v48;
                }
                if (v50)
                {
                  char v51 = (char *)sub_227B8BBB8(v9, v50);
                  char v46 = *(char **)(a1 + 32);
                  unsigned int v44 = *(char **)(a1 + 40);
                }
                else
                {
                  char v51 = 0;
                }
                unsigned int v52 = &v51[4 * v47];
                *(_DWORD *)unsigned int v52 = 0;
                uint64_t v45 = v52 + 4;
                while (v44 != v46)
                {
                  int v53 = *((_DWORD *)v44 - 1);
                  v44 -= 4;
                  *((_DWORD *)v52 - 1) = v53;
                  v52 -= 4;
                }
                *(void *)(a1 + 32) = v52;
                *(void *)(a1 + 40) = v45;
                *(void *)(a1 + 48) = &v51[4 * v50];
                if (v46) {
                  operator delete(v46);
                }
              }
              else
              {
                *(_DWORD *)unsigned int v44 = 0;
                uint64_t v45 = v44 + 4;
              }
              *(void *)(a1 + 40) = v45;
              unint64_t v54 = *((void *)this + 1);
              if (v54 > 0xFFFFFFFFFFFFFFFBLL || v54 + 4 > *((void *)this + 2))
              {
LABEL_91:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v45 - 1) = *(_DWORD *)(*(void *)this + v54);
              unint64_t v42 = *((void *)this + 2);
              unint64_t v41 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v41;
            }
LABEL_92:
            PB::Reader::recallMark();
          }
          else
          {
            unint64_t v68 = *(char **)(a1 + 40);
            unint64_t v67 = *(void *)(a1 + 48);
            if ((unint64_t)v68 >= v67)
            {
              unint64_t v75 = (char *)*v8;
              uint64_t v76 = (v68 - (unsigned char *)*v8) >> 2;
              unint64_t v77 = v76 + 1;
              if ((unint64_t)(v76 + 1) >> 62) {
LABEL_138:
              }
                sub_227B8B89C();
              uint64_t v78 = v67 - (void)v75;
              if (v78 >> 1 > v77) {
                unint64_t v77 = v78 >> 1;
              }
              if ((unint64_t)v78 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v79 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v79 = v77;
              }
              if (v79)
              {
                uint64_t v80 = (char *)sub_227B8BBB8(v9, v79);
                unint64_t v75 = *(char **)(a1 + 32);
                unint64_t v68 = *(char **)(a1 + 40);
              }
              else
              {
                uint64_t v80 = 0;
              }
              unsigned int v83 = &v80[4 * v76];
              *(_DWORD *)unsigned int v83 = 0;
              unint64_t v66 = v83 + 4;
              while (v68 != v75)
              {
                int v84 = *((_DWORD *)v68 - 1);
                v68 -= 4;
                *((_DWORD *)v83 - 1) = v84;
                v83 -= 4;
              }
              *(void *)(a1 + 32) = v83;
              *(void *)(a1 + 40) = v66;
              *(void *)(a1 + 48) = &v80[4 * v79];
              if (v75) {
                operator delete(v75);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v68 = 0;
              unint64_t v66 = v68 + 4;
            }
            *(void *)(a1 + 40) = v66;
LABEL_123:
            unint64_t v85 = *((void *)this + 1);
            if (v85 <= 0xFFFFFFFFFFFFFFFBLL && v85 + 4 <= *((void *)this + 2))
            {
              *(v66 - 1) = *(_DWORD *)(*(void *)this + v85);
LABEL_127:
              uint64_t v26 = *((void *)this + 1) + 4;
LABEL_128:
              *((void *)this + 1) = v26;
            }
            else
            {
LABEL_125:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_129:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || *((unsigned char *)this + 24)) {
            return v4 == 0;
          }
          break;
        case 4u:
          *(unsigned char *)(a1 + 72) |= 2u;
          unint64_t v55 = *((void *)this + 1);
          if (v55 > 0xFFFFFFFFFFFFFFFBLL || v55 + 4 > *((void *)this + 2)) {
            goto LABEL_125;
          }
          *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v55);
          goto LABEL_127;
        case 5u:
          *(unsigned char *)(a1 + 72) |= 8u;
          unint64_t v56 = *((void *)this + 1);
          if (v56 >= *((void *)this + 2))
          {
            BOOL v59 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v57 = v56 + 1;
            int v58 = *(unsigned __int8 *)(*(void *)this + v56);
            *((void *)this + 1) = v57;
            BOOL v59 = v58 != 0;
          }
          *(unsigned char *)(a1 + 69) = v59;
          goto LABEL_129;
        case 6u:
          *(unsigned char *)(a1 + 72) |= 4u;
          unint64_t v60 = *((void *)this + 1);
          if (v60 >= *((void *)this + 2))
          {
            BOOL v63 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v61 = v60 + 1;
            int v62 = *(unsigned __int8 *)(*(void *)this + v60);
            *((void *)this + 1) = v61;
            BOOL v63 = v62 != 0;
          }
          *(unsigned char *)(a1 + 68) = v63;
          goto LABEL_129;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_129;
      }
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v15 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v21 = v2 + 1;
      char v22 = *(unsigned char *)(v12 + v2);
      *((void *)this + 1) = v21;
      v15 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0) {
        goto LABEL_21;
      }
      v19 += 7;
      unint64_t v2 = v21;
      if (v20++ >= 9)
      {
LABEL_20:
        unint64_t v15 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C5C380(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  if (*(unsigned char *)(result + 72)) {
    double result = PB::Writer::write(this, *(double *)(result + 56));
  }
  int v4 = *(float **)(v3 + 8);
  uint64_t v5 = *(float **)(v3 + 16);
  while (v4 != v5)
  {
    float v6 = *v4++;
    double result = PB::Writer::write(this, v6);
  }
  float v7 = *(float **)(v3 + 32);
  uint64_t v8 = *(float **)(v3 + 40);
  while (v7 != v8)
  {
    float v9 = *v7++;
    double result = PB::Writer::write(this, v9);
  }
  char v10 = *(unsigned char *)(v3 + 72);
  if ((v10 & 2) == 0)
  {
    if ((*(unsigned char *)(v3 + 72) & 8) == 0) {
      goto LABEL_11;
    }
LABEL_14:
    double result = PB::Writer::write(this);
    if ((*(unsigned char *)(v3 + 72) & 4) == 0) {
      return result;
    }
    goto LABEL_15;
  }
  double result = PB::Writer::write(this, *(float *)(v3 + 64));
  char v10 = *(unsigned char *)(v3 + 72);
  if ((v10 & 8) != 0) {
    goto LABEL_14;
  }
LABEL_11:
  if ((v10 & 4) == 0) {
    return result;
  }
LABEL_15:

  return PB::Writer::write(this);
}

uint64_t sub_227C5C470(uint64_t result)
{
  *(void *)double result = &unk_26DC27878;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void sub_227C5C498(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227C5C4D0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC27878;
  *(_DWORD *)(a1 + 32) = 0;
  char v2 = *(unsigned char *)(a2 + 32);
  if (v2)
  {
    double result = *(double *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 32) = 1;
    *(double *)(a1 + 8) = result;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 32) & 4) != 0)
  {
LABEL_5:
    LODWORD(result) = *(_DWORD *)(a2 + 24);
    v3 |= 4u;
    *(unsigned char *)(a1 + 32) = v3;
    *(_DWORD *)(a1 + 24) = LODWORD(result);
    char v2 = *(unsigned char *)(a2 + 32);
  }
LABEL_6:
  if ((v2 & 8) == 0)
  {
    if ((v2 & 2) == 0) {
      return result;
    }
LABEL_10:
    double result = *(double *)(a2 + 16);
    *(unsigned char *)(a1 + 32) = v3 | 2;
    *(double *)(a1 + 16) = result;
    return result;
  }
  LODWORD(result) = *(_DWORD *)(a2 + 28);
  v3 |= 8u;
  *(unsigned char *)(a1 + 32) = v3;
  *(_DWORD *)(a1 + 28) = LODWORD(result);
  if ((*(unsigned char *)(a2 + 32) & 2) != 0) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_227C5C56C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "dotMeasurement", *(float *)(a1 + 24));
    char v5 = *(unsigned char *)(a1 + 32);
    if ((v5 & 8) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 32) & 8) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "dotMeasurementUnc", *(float *)(a1 + 28));
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 1) == 0)
  {
LABEL_4:
    if ((v5 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  if ((*(unsigned char *)(a1 + 32) & 2) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "timestampPast", *(double *)(a1 + 16));
LABEL_6:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C5C630(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 32) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_36;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          goto LABEL_38;
        case 2u:
          *(unsigned char *)(a1 + 32) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_36;
          }
          *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_33;
        case 3u:
          *(unsigned char *)(a1 + 32) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_36;
          }
          *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
LABEL_33:
          unint64_t v2 = *((void *)this + 1) + 4;
          goto LABEL_39;
        case 4u:
          *(unsigned char *)(a1 + 32) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
LABEL_38:
            unint64_t v2 = *((void *)this + 1) + 8;
LABEL_39:
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_36:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C5C8B0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
      if ((*(unsigned char *)(v3 + 32) & 2) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 32) & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 8) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_9:
  double v5 = *(double *)(v3 + 16);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227C5C958(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC278B0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void sub_227C5C980(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227C5C9B8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC278B0;
  *(_DWORD *)(a1 + 32) = 0;
  char v2 = *(unsigned char *)(a2 + 32);
  if (v2)
  {
    double result = *(double *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 32) = 1;
    *(double *)(a1 + 8) = result;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 32) & 4) != 0)
  {
LABEL_5:
    LODWORD(result) = *(_DWORD *)(a2 + 24);
    v3 |= 4u;
    *(unsigned char *)(a1 + 32) = v3;
    *(_DWORD *)(a1 + 24) = LODWORD(result);
    char v2 = *(unsigned char *)(a2 + 32);
  }
LABEL_6:
  if ((v2 & 8) == 0)
  {
    if ((v2 & 2) == 0) {
      return result;
    }
LABEL_10:
    double result = *(double *)(a2 + 16);
    *(unsigned char *)(a1 + 32) = v3 | 2;
    *(double *)(a1 + 16) = result;
    return result;
  }
  LODWORD(result) = *(_DWORD *)(a2 + 28);
  v3 |= 8u;
  *(unsigned char *)(a1 + 32) = v3;
  *(_DWORD *)(a1 + 28) = LODWORD(result);
  if ((*(unsigned char *)(a2 + 32) & 2) != 0) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_227C5CA54(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "dot", *(float *)(a1 + 24));
    char v5 = *(unsigned char *)(a1 + 32);
    if ((v5 & 8) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 32) & 8) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "dotUnc", *(float *)(a1 + 28));
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 1) == 0)
  {
LABEL_4:
    if ((v5 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  if ((*(unsigned char *)(a1 + 32) & 2) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "timestampPast", *(double *)(a1 + 16));
LABEL_6:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C5CB18(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 32) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_36;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          goto LABEL_38;
        case 2u:
          *(unsigned char *)(a1 + 32) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_36;
          }
          *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_33;
        case 3u:
          *(unsigned char *)(a1 + 32) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_36;
          }
          *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
LABEL_33:
          unint64_t v2 = *((void *)this + 1) + 4;
          goto LABEL_39;
        case 4u:
          *(unsigned char *)(a1 + 32) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
LABEL_38:
            unint64_t v2 = *((void *)this + 1) + 8;
LABEL_39:
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_36:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C5CD98(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
      if ((*(unsigned char *)(v3 + 32) & 2) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 32) & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 8) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_9:
  double v5 = *(double *)(v3 + 16);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227C5CE40(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC278E8;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void sub_227C5CE68(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227C5CEA0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC278E8;
  *(_DWORD *)(a1 + 40) = 0;
  char v2 = *(unsigned char *)(a2 + 40);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 40) = 1;
    *(void *)(a1 + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 40);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 40) & 4) != 0)
  {
LABEL_5:
    LODWORD(v4) = *(_DWORD *)(a2 + 20);
    v3 |= 4u;
    *(unsigned char *)(a1 + 40) = v3;
    *(_DWORD *)(a1 + 20) = v4;
    char v2 = *(unsigned char *)(a2 + 40);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    LODWORD(v4) = *(_DWORD *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(a1 + 40) = v3;
    *(_DWORD *)(a1 + 16) = v4;
    char v2 = *(unsigned char *)(a2 + 40);
    if ((v2 & 0x20) == 0)
    {
LABEL_8:
      if ((v2 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_14;
    }
  }
  else if ((v2 & 0x20) == 0)
  {
    goto LABEL_8;
  }
  LODWORD(v4) = *(_DWORD *)(a2 + 32);
  v3 |= 0x20u;
  *(unsigned char *)(a1 + 40) = v3;
  *(_DWORD *)(a1 + 32) = v4;
  char v2 = *(unsigned char *)(a2 + 40);
  if ((v2 & 0x40) == 0)
  {
LABEL_9:
    if ((v2 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_15;
  }
LABEL_14:
  LODWORD(v4) = *(_DWORD *)(a2 + 36);
  v3 |= 0x40u;
  *(unsigned char *)(a1 + 40) = v3;
  *(_DWORD *)(a1 + 36) = v4;
  char v2 = *(unsigned char *)(a2 + 40);
  if ((v2 & 0x10) == 0)
  {
LABEL_10:
    if ((v2 & 8) == 0) {
      return *(float *)&v4;
    }
    goto LABEL_16;
  }
LABEL_15:
  LODWORD(v4) = *(_DWORD *)(a2 + 28);
  v3 |= 0x10u;
  *(unsigned char *)(a1 + 40) = v3;
  *(_DWORD *)(a1 + 28) = v4;
  if ((*(unsigned char *)(a2 + 40) & 8) == 0) {
    return *(float *)&v4;
  }
LABEL_16:
  LODWORD(v4) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = v3 | 8;
  *(_DWORD *)(a1 + 24) = v4;
  return *(float *)&v4;
}

uint64_t sub_227C5CF90(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "dotDeltaBufferMaxAbs", *(float *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 40);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(a1 + 40) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "dotDeltaBufferVar", *(float *)(a1 + 20));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(this, "dotErrorEstimate", *(float *)(a1 + 24));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  PB::TextFormatter::format(this, "dotRelativeChangeOverBuffer", *(float *)(a1 + 28));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 0x20) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "headingDeltaBufferVar", *(float *)(a1 + 32));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 1) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_17:
  PB::TextFormatter::format(this, "headingRelativeChangeOverBuffer", *(float *)(a1 + 36));
  if (*(unsigned char *)(a1 + 40)) {
LABEL_8:
  }
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
LABEL_9:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C5D0B4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 40) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          goto LABEL_47;
        case 2u:
          *(unsigned char *)(a1 + 40) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_46;
        case 3u:
          *(unsigned char *)(a1 + 40) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_46;
        case 4u:
          *(unsigned char *)(a1 + 40) |= 0x20u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_46;
        case 5u:
          *(unsigned char *)(a1 + 40) |= 0x40u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_46;
        case 6u:
          *(unsigned char *)(a1 + 40) |= 0x10u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_46;
        case 7u:
          *(unsigned char *)(a1 + 40) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
LABEL_46:
            unint64_t v2 = *((void *)this + 1) + 4;
LABEL_47:
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_44:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C5D3E8(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 40);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 40);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(result + 40) & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 2) == 0)
  {
LABEL_4:
    if ((v4 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16));
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 0x20) == 0)
  {
LABEL_5:
    if ((v4 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 0x40) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_14:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
    if ((*(unsigned char *)(v3 + 40) & 8) == 0) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_13:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36));
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 0x10) != 0) {
    goto LABEL_14;
  }
LABEL_7:
  if ((v4 & 8) == 0) {
    return result;
  }
LABEL_15:
  float v5 = *(float *)(v3 + 24);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227C5D4E4(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC27920;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 52) = 0;
  return result;
}

void sub_227C5D50C(PB::Base *this)
{
  *(void *)this = &unk_26DC27920;
  unint64_t v2 = (void *)*((void *)this + 1);
  if (v2)
  {
    *((void *)this + 2) = v2;
    operator delete(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C5D570(PB::Base *a1)
{
  sub_227C5D50C(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C5D5A8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC27920;
  *(void *)(a1 + 8) = 0;
  char v4 = (char *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 52) = 0;
  if (*(unsigned char *)(a2 + 52))
  {
    uint64_t v6 = *(void *)(a2 + 32);
    *(unsigned char *)(a1 + 52) = 1;
    *(void *)(a1 + 32) = v6;
    char v5 = 5;
    if ((*(unsigned char *)(a2 + 52) & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v5 = 4;
  if ((*(unsigned char *)(a2 + 52) & 4) != 0)
  {
LABEL_5:
    int v7 = *(_DWORD *)(a2 + 48);
    *(unsigned char *)(a1 + 52) = v5;
    *(_DWORD *)(a1 + 48) = v7;
  }
LABEL_6:
  if (a1 != a2) {
    sub_227B8BA68(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  if ((*(unsigned char *)(a2 + 52) & 2) != 0)
  {
    uint64_t v8 = *(void *)(a2 + 40);
    *(unsigned char *)(a1 + 52) |= 2u;
    *(void *)(a1 + 40) = v8;
  }
  return a1;
}

uint64_t sub_227C5D670(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if ((*(unsigned char *)(a1 + 52) & 4) != 0) {
    PB::TextFormatter::format(this, "placementFiltered");
  }
  char v5 = *(float **)(a1 + 8);
  uint64_t v6 = *(float **)(a1 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    PB::TextFormatter::format(this, "placementProbabilityFiltered", v7);
  }
  char v8 = *(unsigned char *)(a1 + 52);
  if (v8)
  {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 32));
    char v8 = *(unsigned char *)(a1 + 52);
  }
  if ((v8 & 2) != 0) {
    PB::TextFormatter::format(this, "timestampPast", *(double *)(a1 + 40));
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227C5D744(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    char v8 = (void **)(a1 + 8);
    uint64_t v9 = a1 + 24;
    while (1)
    {
      uint64_t v10 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v11 = 0;
      unsigned int v12 = 0;
      unint64_t v13 = 0;
      while (1)
      {
        unint64_t v14 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v15 = *(unsigned char *)(v10 + v2);
        v13 |= (unint64_t)(v15 & 0x7F) << v11;
        if ((v15 & 0x80) == 0) {
          break;
        }
        v11 += 7;
        unint64_t v2 = v14;
        BOOL v16 = v12++ > 8;
        if (v16) {
          goto LABEL_20;
        }
      }
LABEL_21:
      if ((v13 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v13 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 52) |= 1u;
          unint64_t v22 = *((void *)this + 1);
          if (v22 > 0xFFFFFFFFFFFFFFF7 || v22 + 8 > *((void *)this + 2)) {
            goto LABEL_95;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v22);
          goto LABEL_60;
        case 2u:
          *(unsigned char *)(a1 + 52) |= 4u;
          unint64_t v23 = *((void *)this + 1);
          unint64_t v24 = *((void *)this + 2);
          uint64_t v25 = *(void *)this;
          if (v23 <= 0xFFFFFFFFFFFFFFF5 && v23 + 10 <= v24)
          {
            char v26 = 0;
            unsigned int v27 = 0;
            uint64_t v28 = 0;
            do
            {
              unint64_t v29 = v23 + 1;
              *((void *)this + 1) = v23 + 1;
              char v30 = *(unsigned char *)(v25 + v23);
              v28 |= (unint64_t)(v30 & 0x7F) << v26;
              if ((v30 & 0x80) == 0) {
                goto LABEL_84;
              }
              v26 += 7;
              unint64_t v23 = v29;
              BOOL v16 = v27++ > 8;
            }
            while (!v16);
LABEL_70:
            LODWORD(v28) = 0;
            goto LABEL_84;
          }
          char v47 = 0;
          unsigned int v48 = 0;
          uint64_t v28 = 0;
          if (v24 <= v23) {
            unint64_t v24 = *((void *)this + 1);
          }
          while (2)
          {
            if (v24 == v23)
            {
              LODWORD(v28) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v49 = v23 + 1;
              char v50 = *(unsigned char *)(v25 + v23);
              *((void *)this + 1) = v49;
              v28 |= (unint64_t)(v50 & 0x7F) << v47;
              if (v50 < 0)
              {
                v47 += 7;
                unint64_t v23 = v49;
                BOOL v16 = v48++ > 8;
                if (v16) {
                  goto LABEL_70;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v28) = 0;
              }
            }
            break;
          }
LABEL_84:
          *(_DWORD *)(a1 + 48) = v28;
          goto LABEL_96;
        case 3u:
          if ((v13 & 7) == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v31 = *((void *)this + 1);
            unint64_t v32 = *((void *)this + 2);
            while (v31 < v32 && !*((unsigned char *)this + 24))
            {
              unint64_t v34 = *(char **)(a1 + 16);
              unint64_t v33 = *(void *)(a1 + 24);
              if ((unint64_t)v34 >= v33)
              {
                unint64_t v36 = (char *)*v8;
                uint64_t v37 = (v34 - (unsigned char *)*v8) >> 2;
                unint64_t v38 = v37 + 1;
                if ((unint64_t)(v37 + 1) >> 62) {
                  goto LABEL_107;
                }
                uint64_t v39 = v33 - (void)v36;
                if (v39 >> 1 > v38) {
                  unint64_t v38 = v39 >> 1;
                }
                if ((unint64_t)v39 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v40 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v40 = v38;
                }
                if (v40)
                {
                  unint64_t v41 = (char *)sub_227B8BBB8(v9, v40);
                  unint64_t v36 = *(char **)(a1 + 8);
                  unint64_t v34 = *(char **)(a1 + 16);
                }
                else
                {
                  unint64_t v41 = 0;
                }
                unint64_t v42 = &v41[4 * v37];
                *(_DWORD *)unint64_t v42 = 0;
                uint64_t v35 = v42 + 4;
                while (v34 != v36)
                {
                  int v43 = *((_DWORD *)v34 - 1);
                  v34 -= 4;
                  *((_DWORD *)v42 - 1) = v43;
                  v42 -= 4;
                }
                *(void *)(a1 + 8) = v42;
                *(void *)(a1 + 16) = v35;
                *(void *)(a1 + 24) = &v41[4 * v40];
                if (v36) {
                  operator delete(v36);
                }
              }
              else
              {
                *(_DWORD *)unint64_t v34 = 0;
                uint64_t v35 = v34 + 4;
              }
              *(void *)(a1 + 16) = v35;
              unint64_t v44 = *((void *)this + 1);
              if (v44 > 0xFFFFFFFFFFFFFFFBLL || v44 + 4 > *((void *)this + 2))
              {
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v35 - 1) = *(_DWORD *)(*(void *)this + v44);
              unint64_t v32 = *((void *)this + 2);
              unint64_t v31 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v31;
            }
            PB::Reader::recallMark();
          }
          else
          {
            unsigned int v52 = *(char **)(a1 + 16);
            unint64_t v51 = *(void *)(a1 + 24);
            if ((unint64_t)v52 >= v51)
            {
              unint64_t v54 = (char *)*v8;
              uint64_t v55 = (v52 - (unsigned char *)*v8) >> 2;
              unint64_t v56 = v55 + 1;
              if ((unint64_t)(v55 + 1) >> 62) {
LABEL_107:
              }
                sub_227B8B89C();
              uint64_t v57 = v51 - (void)v54;
              if (v57 >> 1 > v56) {
                unint64_t v56 = v57 >> 1;
              }
              if ((unint64_t)v57 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v58 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v58 = v56;
              }
              if (v58)
              {
                BOOL v59 = (char *)sub_227B8BBB8(v9, v58);
                unint64_t v54 = *(char **)(a1 + 8);
                unsigned int v52 = *(char **)(a1 + 16);
              }
              else
              {
                BOOL v59 = 0;
              }
              unint64_t v60 = &v59[4 * v55];
              *(_DWORD *)unint64_t v60 = 0;
              int v53 = v60 + 4;
              while (v52 != v54)
              {
                int v61 = *((_DWORD *)v52 - 1);
                v52 -= 4;
                *((_DWORD *)v60 - 1) = v61;
                v60 -= 4;
              }
              *(void *)(a1 + 8) = v60;
              *(void *)(a1 + 16) = v53;
              *(void *)(a1 + 24) = &v59[4 * v58];
              if (v54) {
                operator delete(v54);
              }
            }
            else
            {
              *(_DWORD *)unsigned int v52 = 0;
              int v53 = v52 + 4;
            }
            *(void *)(a1 + 16) = v53;
            unint64_t v62 = *((void *)this + 1);
            if (v62 <= 0xFFFFFFFFFFFFFFFBLL && v62 + 4 <= *((void *)this + 2))
            {
              *(v53 - 1) = *(_DWORD *)(*(void *)this + v62);
              uint64_t v46 = *((void *)this + 1) + 4;
LABEL_61:
              *((void *)this + 1) = v46;
            }
            else
            {
LABEL_95:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_96:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        case 4u:
          *(unsigned char *)(a1 + 52) |= 2u;
          unint64_t v45 = *((void *)this + 1);
          if (v45 > 0xFFFFFFFFFFFFFFF7 || v45 + 8 > *((void *)this + 2)) {
            goto LABEL_95;
          }
          *(void *)(a1 + 40) = *(void *)(*(void *)this + v45);
LABEL_60:
          uint64_t v46 = *((void *)this + 1) + 8;
          goto LABEL_61;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_96;
      }
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v13 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v19 = v2 + 1;
      char v20 = *(unsigned char *)(v10 + v2);
      *((void *)this + 1) = v19;
      v13 |= (unint64_t)(v20 & 0x7F) << v17;
      if ((v20 & 0x80) == 0) {
        goto LABEL_21;
      }
      v17 += 7;
      unint64_t v2 = v19;
      if (v18++ >= 9)
      {
LABEL_20:
        unint64_t v13 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C5DC48(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 52);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 32));
    char v4 = *(unsigned char *)(v3 + 52);
  }
  if ((v4 & 4) != 0) {
    uint64_t result = PB::Writer::writeVarInt(this);
  }
  char v5 = *(float **)(v3 + 8);
  uint64_t v6 = *(float **)(v3 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    uint64_t result = PB::Writer::write(this, v7);
  }
  if ((*(unsigned char *)(v3 + 52) & 2) != 0)
  {
    double v8 = *(double *)(v3 + 40);
    return PB::Writer::write(this, v8);
  }
  return result;
}

uint64_t sub_227C5DCF8(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC27958;
  *(_DWORD *)(result + 108) = 0;
  return result;
}

void sub_227C5DD20(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227C5DD58(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC27958;
  *(_DWORD *)(a1 + 108) = 0;
  int v2 = *(_DWORD *)(a2 + 108);
  if (v2)
  {
    double result = *(double *)(a2 + 8);
    int v3 = 1;
    *(_DWORD *)(a1 + 108) = 1;
    *(double *)(a1 + 8) = result;
    int v2 = *(_DWORD *)(a2 + 108);
    if ((v2 & 0x40000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 0x40000) != 0)
  {
LABEL_5:
    LODWORD(result) = *(_DWORD *)(a2 + 88);
    v3 |= 0x40000u;
    *(_DWORD *)(a1 + 108) = v3;
    *(_DWORD *)(a1 + 88) = LODWORD(result);
    int v2 = *(_DWORD *)(a2 + 108);
  }
LABEL_6:
  if ((v2 & 0x100000) != 0)
  {
    LODWORD(result) = *(_DWORD *)(a2 + 96);
    v3 |= 0x100000u;
    *(_DWORD *)(a1 + 108) = v3;
    *(_DWORD *)(a1 + 96) = LODWORD(result);
    int v2 = *(_DWORD *)(a2 + 108);
    if ((v2 & 0x80000) == 0)
    {
LABEL_8:
      if ((v2 & 0x200000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_30;
    }
  }
  else if ((v2 & 0x80000) == 0)
  {
    goto LABEL_8;
  }
  LODWORD(result) = *(_DWORD *)(a2 + 92);
  v3 |= 0x80000u;
  *(_DWORD *)(a1 + 108) = v3;
  *(_DWORD *)(a1 + 92) = LODWORD(result);
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x200000) == 0)
  {
LABEL_9:
    if ((v2 & 0x400) == 0) {
      goto LABEL_10;
    }
    goto LABEL_31;
  }
LABEL_30:
  LODWORD(result) = *(_DWORD *)(a2 + 100);
  v3 |= 0x200000u;
  *(_DWORD *)(a1 + 108) = v3;
  *(_DWORD *)(a1 + 100) = LODWORD(result);
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x400) == 0)
  {
LABEL_10:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_32;
  }
LABEL_31:
  LODWORD(result) = *(_DWORD *)(a2 + 56);
  v3 |= 0x400u;
  *(_DWORD *)(a1 + 108) = v3;
  *(_DWORD *)(a1 + 56) = LODWORD(result);
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x1000) == 0)
  {
LABEL_11:
    if ((v2 & 0x800) == 0) {
      goto LABEL_12;
    }
    goto LABEL_33;
  }
LABEL_32:
  LODWORD(result) = *(_DWORD *)(a2 + 64);
  v3 |= 0x1000u;
  *(_DWORD *)(a1 + 108) = v3;
  *(_DWORD *)(a1 + 64) = LODWORD(result);
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x800) == 0)
  {
LABEL_12:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_34;
  }
LABEL_33:
  LODWORD(result) = *(_DWORD *)(a2 + 60);
  v3 |= 0x800u;
  *(_DWORD *)(a1 + 108) = v3;
  *(_DWORD *)(a1 + 60) = LODWORD(result);
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x2000) == 0)
  {
LABEL_13:
    if ((v2 & 4) == 0) {
      goto LABEL_14;
    }
    goto LABEL_35;
  }
LABEL_34:
  LODWORD(result) = *(_DWORD *)(a2 + 68);
  v3 |= 0x2000u;
  *(_DWORD *)(a1 + 108) = v3;
  *(_DWORD *)(a1 + 68) = LODWORD(result);
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 4) == 0)
  {
LABEL_14:
    if ((v2 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_36;
  }
LABEL_35:
  LODWORD(result) = *(_DWORD *)(a2 + 24);
  v3 |= 4u;
  *(_DWORD *)(a1 + 108) = v3;
  *(_DWORD *)(a1 + 24) = LODWORD(result);
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_37;
  }
LABEL_36:
  LODWORD(result) = *(_DWORD *)(a2 + 32);
  v3 |= 0x10u;
  *(_DWORD *)(a1 + 108) = v3;
  *(_DWORD *)(a1 + 32) = LODWORD(result);
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 8) == 0)
  {
LABEL_16:
    if ((v2 & 0x20) == 0) {
      goto LABEL_17;
    }
    goto LABEL_38;
  }
LABEL_37:
  LODWORD(result) = *(_DWORD *)(a2 + 28);
  v3 |= 8u;
  *(_DWORD *)(a1 + 108) = v3;
  *(_DWORD *)(a1 + 28) = LODWORD(result);
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x20) == 0)
  {
LABEL_17:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_39;
  }
LABEL_38:
  LODWORD(result) = *(_DWORD *)(a2 + 36);
  v3 |= 0x20u;
  *(_DWORD *)(a1 + 108) = v3;
  *(_DWORD *)(a1 + 36) = LODWORD(result);
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x400000) == 0)
  {
LABEL_18:
    if ((v2 & 0x80) == 0) {
      goto LABEL_19;
    }
    goto LABEL_40;
  }
LABEL_39:
  LODWORD(result) = *(_DWORD *)(a2 + 104);
  v3 |= 0x400000u;
  *(_DWORD *)(a1 + 108) = v3;
  *(_DWORD *)(a1 + 104) = LODWORD(result);
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x80) == 0)
  {
LABEL_19:
    if ((v2 & 0x40) == 0) {
      goto LABEL_20;
    }
    goto LABEL_41;
  }
LABEL_40:
  LODWORD(result) = *(_DWORD *)(a2 + 44);
  v3 |= 0x80u;
  *(_DWORD *)(a1 + 108) = v3;
  *(_DWORD *)(a1 + 44) = LODWORD(result);
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x40) == 0)
  {
LABEL_20:
    if ((v2 & 0x200) == 0) {
      goto LABEL_21;
    }
    goto LABEL_42;
  }
LABEL_41:
  LODWORD(result) = *(_DWORD *)(a2 + 40);
  v3 |= 0x40u;
  *(_DWORD *)(a1 + 108) = v3;
  *(_DWORD *)(a1 + 40) = LODWORD(result);
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x200) == 0)
  {
LABEL_21:
    if ((v2 & 0x100) == 0) {
      goto LABEL_22;
    }
    goto LABEL_43;
  }
LABEL_42:
  LODWORD(result) = *(_DWORD *)(a2 + 52);
  v3 |= 0x200u;
  *(_DWORD *)(a1 + 108) = v3;
  *(_DWORD *)(a1 + 52) = LODWORD(result);
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x100) == 0)
  {
LABEL_22:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_44;
  }
LABEL_43:
  LODWORD(result) = *(_DWORD *)(a2 + 48);
  v3 |= 0x100u;
  *(_DWORD *)(a1 + 108) = v3;
  *(_DWORD *)(a1 + 48) = LODWORD(result);
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x8000) == 0)
  {
LABEL_23:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_45;
  }
LABEL_44:
  LODWORD(result) = *(_DWORD *)(a2 + 76);
  v3 |= 0x8000u;
  *(_DWORD *)(a1 + 108) = v3;
  *(_DWORD *)(a1 + 76) = LODWORD(result);
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x4000) == 0)
  {
LABEL_24:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_46;
  }
LABEL_45:
  LODWORD(result) = *(_DWORD *)(a2 + 72);
  v3 |= 0x4000u;
  *(_DWORD *)(a1 + 108) = v3;
  *(_DWORD *)(a1 + 72) = LODWORD(result);
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x20000) == 0)
  {
LABEL_25:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_47;
  }
LABEL_46:
  LODWORD(result) = *(_DWORD *)(a2 + 84);
  v3 |= 0x20000u;
  *(_DWORD *)(a1 + 108) = v3;
  *(_DWORD *)(a1 + 84) = LODWORD(result);
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x10000) == 0)
  {
LABEL_26:
    if ((v2 & 2) == 0) {
      return result;
    }
LABEL_48:
    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 108) = v3 | 2;
    *(double *)(a1 + 16) = result;
    return result;
  }
LABEL_47:
  LODWORD(result) = *(_DWORD *)(a2 + 80);
  v3 |= 0x10000u;
  *(_DWORD *)(a1 + 108) = v3;
  *(_DWORD *)(a1 + 80) = LODWORD(result);
  if ((*(_DWORD *)(a2 + 108) & 2) != 0) {
    goto LABEL_48;
  }
  return result;
}

uint64_t sub_227C5E008(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "pitchMean", *(float *)(a1 + 24));
    int v5 = *(_DWORD *)(a1 + 108);
    if ((v5 & 8) == 0)
    {
LABEL_3:
      if ((v5 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_30;
    }
  }
  else if ((v5 & 8) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "pitchStd", *(float *)(a1 + 28));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x10) == 0)
  {
LABEL_4:
    if ((v5 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "rollMeanAbs", *(float *)(a1 + 32));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x20) == 0)
  {
LABEL_5:
    if ((v5 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(this, "rollStd", *(float *)(a1 + 36));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x40) == 0)
  {
LABEL_6:
    if ((v5 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(this, "rotRateInerFFTAmpXYHigh", *(float *)(a1 + 40));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x80) == 0)
  {
LABEL_7:
    if ((v5 & 0x100) == 0) {
      goto LABEL_8;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(this, "rotRateInerFFTAmpXYPed", *(float *)(a1 + 44));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x100) == 0)
  {
LABEL_8:
    if ((v5 & 0x200) == 0) {
      goto LABEL_9;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "rotRateInerFFTAmpZHigh", *(float *)(a1 + 48));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x200) == 0)
  {
LABEL_9:
    if ((v5 & 0x400) == 0) {
      goto LABEL_10;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "rotRateInerFFTAmpZPed", *(float *)(a1 + 52));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x400) == 0)
  {
LABEL_10:
    if ((v5 & 0x800) == 0) {
      goto LABEL_11;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "rotRateInerXYMean", *(float *)(a1 + 56));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x800) == 0)
  {
LABEL_11:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "rotRateInerXYStd", *(float *)(a1 + 60));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x1000) == 0)
  {
LABEL_12:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "rotRateInerZMean", *(float *)(a1 + 64));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x2000) == 0)
  {
LABEL_13:
    if ((v5 & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "rotRateInerZStd", *(float *)(a1 + 68));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 1) == 0)
  {
LABEL_14:
    if ((v5 & 2) == 0) {
      goto LABEL_15;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 2) == 0)
  {
LABEL_15:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "timestampPast", *(double *)(a1 + 16));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x4000) == 0)
  {
LABEL_16:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "userAccelInerFFTAmpXYHigh", *(float *)(a1 + 72));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x8000) == 0)
  {
LABEL_17:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "userAccelInerFFTAmpXYPed", *(float *)(a1 + 76));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x10000) == 0)
  {
LABEL_18:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "userAccelInerFFTAmpZHigh", *(float *)(a1 + 80));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x20000) == 0)
  {
LABEL_19:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_46;
  }
LABEL_45:
  PB::TextFormatter::format(this, "userAccelInerFFTAmpZPed", *(float *)(a1 + 84));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x40000) == 0)
  {
LABEL_20:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_47;
  }
LABEL_46:
  PB::TextFormatter::format(this, "userAccelInerXYMean", *(float *)(a1 + 88));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x80000) == 0)
  {
LABEL_21:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(this, "userAccelInerXYStd", *(float *)(a1 + 92));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x100000) == 0)
  {
LABEL_22:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(this, "userAccelInerZMean", *(float *)(a1 + 96));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x200000) == 0)
  {
LABEL_23:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
LABEL_49:
  PB::TextFormatter::format(this, "userAccelInerZStd", *(float *)(a1 + 100));
  if ((*(_DWORD *)(a1 + 108) & 0x400000) != 0) {
LABEL_24:
  }
    PB::TextFormatter::format(this, "yawStd", *(float *)(a1 + 104));
LABEL_25:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C5E32C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(_DWORD *)(a1 + 108) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_93;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          goto LABEL_88;
        case 2u:
          *(_DWORD *)(a1 + 108) |= 0x40000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_93;
          }
          *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_95;
        case 3u:
          *(_DWORD *)(a1 + 108) |= 0x100000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_93;
          }
          *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_95;
        case 4u:
          *(_DWORD *)(a1 + 108) |= 0x80000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_93;
          }
          *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_95;
        case 5u:
          *(_DWORD *)(a1 + 108) |= 0x200000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_93;
          }
          *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_95;
        case 6u:
          *(_DWORD *)(a1 + 108) |= 0x400u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_93;
          }
          *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_95;
        case 7u:
          *(_DWORD *)(a1 + 108) |= 0x1000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_93;
          }
          *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_95;
        case 8u:
          *(_DWORD *)(a1 + 108) |= 0x800u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_93;
          }
          *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_95;
        case 9u:
          *(_DWORD *)(a1 + 108) |= 0x2000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_93;
          }
          *(_DWORD *)(a1 + 68) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_95;
        case 0xAu:
          *(_DWORD *)(a1 + 108) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_93;
          }
          *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_95;
        case 0xBu:
          *(_DWORD *)(a1 + 108) |= 0x10u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_93;
          }
          *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_95;
        case 0xCu:
          *(_DWORD *)(a1 + 108) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_93;
          }
          *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_95;
        case 0xDu:
          *(_DWORD *)(a1 + 108) |= 0x20u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_93;
          }
          *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_95;
        case 0xEu:
          *(_DWORD *)(a1 + 108) |= 0x400000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_93;
          }
          *(_DWORD *)(a1 + 104) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_95;
        case 0xFu:
          *(_DWORD *)(a1 + 108) |= 0x80u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_93;
          }
          *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_95;
        case 0x10u:
          *(_DWORD *)(a1 + 108) |= 0x40u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_93;
          }
          *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_95;
        case 0x11u:
          *(_DWORD *)(a1 + 108) |= 0x200u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_93;
          }
          *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_95;
        case 0x12u:
          *(_DWORD *)(a1 + 108) |= 0x100u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_93;
          }
          *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_95;
        case 0x13u:
          *(_DWORD *)(a1 + 108) |= 0x8000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_93;
          }
          *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_95;
        case 0x14u:
          *(_DWORD *)(a1 + 108) |= 0x4000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_93;
          }
          *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_95;
        case 0x15u:
          *(_DWORD *)(a1 + 108) |= 0x20000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_93;
          }
          *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_95;
        case 0x16u:
          *(_DWORD *)(a1 + 108) |= 0x10000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_93;
          }
          *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v2);
LABEL_95:
          unint64_t v2 = *((void *)this + 1) + 4;
          goto LABEL_96;
        case 0x17u:
          *(_DWORD *)(a1 + 108) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2))
          {
LABEL_93:
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
LABEL_88:
            unint64_t v2 = *((void *)this + 1) + 8;
LABEL_96:
            *((void *)this + 1) = v2;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C5EA20(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 108);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    int v4 = *(_DWORD *)(v3 + 108);
    if ((v4 & 0x40000) == 0)
    {
LABEL_3:
      if ((v4 & 0x100000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_27;
    }
  }
  else if ((v4 & 0x40000) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 88));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x100000) == 0)
  {
LABEL_4:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 96));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x80000) == 0)
  {
LABEL_5:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 92));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x200000) == 0)
  {
LABEL_6:
    if ((v4 & 0x400) == 0) {
      goto LABEL_7;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 100));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x400) == 0)
  {
LABEL_7:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x1000) == 0)
  {
LABEL_8:
    if ((v4 & 0x800) == 0) {
      goto LABEL_9;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x800) == 0)
  {
LABEL_9:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 60));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x2000) == 0)
  {
LABEL_10:
    if ((v4 & 4) == 0) {
      goto LABEL_11;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 68));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 4) == 0)
  {
LABEL_11:
    if ((v4 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x10) == 0)
  {
LABEL_12:
    if ((v4 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 8) == 0)
  {
LABEL_13:
    if ((v4 & 0x20) == 0) {
      goto LABEL_14;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x20) == 0)
  {
LABEL_14:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x400000) == 0)
  {
LABEL_15:
    if ((v4 & 0x80) == 0) {
      goto LABEL_16;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 104));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x80) == 0)
  {
LABEL_16:
    if ((v4 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x40) == 0)
  {
LABEL_17:
    if ((v4 & 0x200) == 0) {
      goto LABEL_18;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x200) == 0)
  {
LABEL_18:
    if ((v4 & 0x100) == 0) {
      goto LABEL_19;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x100) == 0)
  {
LABEL_19:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x8000) == 0)
  {
LABEL_20:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x4000) == 0)
  {
LABEL_21:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x20000) == 0)
  {
LABEL_22:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_23;
    }
LABEL_46:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80));
    if ((*(_DWORD *)(v3 + 108) & 2) == 0) {
      return result;
    }
    goto LABEL_47;
  }
LABEL_45:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x10000) != 0) {
    goto LABEL_46;
  }
LABEL_23:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_47:
  double v5 = *(double *)(v3 + 16);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227C5ECDC(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC27990;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_227C5ED04(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227C5ED3C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC27990;
  *(_DWORD *)(a1 + 20) = 0;
  if ((*(unsigned char *)(a2 + 20) & 1) == 0)
  {
    char v2 = 2;
    if ((*(unsigned char *)(a2 + 20) & 2) == 0) {
      return *(float *)&v3;
    }
    goto LABEL_5;
  }
  uint64_t v3 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 20) = 1;
  *(void *)(a1 + 8) = v3;
  char v2 = 3;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
LABEL_5:
    LODWORD(v3) = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(a1 + 20) = v2;
    *(_DWORD *)(a1 + 16) = v3;
  }
  return *(float *)&v3;
}

uint64_t sub_227C5EDA0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "radius", *(float *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if (v5) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C5EE1C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    do
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
        return v4 == 0;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
        unint64_t v2 = *((void *)this + 1) + 4;
      }
      else
      {
        if ((v11 >> 3) != 1)
        {
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          goto LABEL_33;
        }
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2))
        {
LABEL_28:
          *((unsigned char *)this + 24) = 1;
          goto LABEL_33;
        }
        *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
        unint64_t v2 = *((void *)this + 1) + 8;
      }
      *((void *)this + 1) = v2;
LABEL_33:
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
    }
    while (v2 < v3 && !*((unsigned char *)this + 24));
  }
  return v4 == 0;
}

uint64_t sub_227C5F000(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    float v5 = *(float *)(v3 + 16);
    return PB::Writer::write(this, v5);
  }
  return result;
}

uint64_t sub_227C5F06C(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC279C8;
  *(_DWORD *)(result + 68) = 0;
  return result;
}

void sub_227C5F094(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C5F0CC(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC279C8;
  *(_DWORD *)(result + 68) = 0;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    __int16 v3 = 1;
    *(_WORD *)(result + 68) = 1;
    *(void *)(result + 8) = v4;
    __int16 v2 = *(_WORD *)(a2 + 68);
    if ((v2 & 0x200) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((*(_WORD *)(a2 + 68) & 0x200) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 52);
    v3 |= 0x200u;
    *(_WORD *)(result + 68) = v3;
    *(_DWORD *)(result + 52) = v5;
    __int16 v2 = *(_WORD *)(a2 + 68);
  }
LABEL_6:
  if ((v2 & 0x400) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 56);
    v3 |= 0x400u;
    *(_WORD *)(result + 68) = v3;
    *(_DWORD *)(result + 56) = v6;
    __int16 v2 = *(_WORD *)(a2 + 68);
    if ((v2 & 0x800) == 0)
    {
LABEL_8:
      if ((v2 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_20;
    }
  }
  else if ((v2 & 0x800) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 60);
  v3 |= 0x800u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 60) = v7;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x40) == 0)
  {
LABEL_9:
    if ((v2 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  int v8 = *(_DWORD *)(a2 + 40);
  v3 |= 0x40u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 40) = v8;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x80) == 0)
  {
LABEL_10:
    if ((v2 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  int v9 = *(_DWORD *)(a2 + 44);
  v3 |= 0x80u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 44) = v9;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x100) == 0)
  {
LABEL_11:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v10 = *(_DWORD *)(a2 + 48);
  v3 |= 0x100u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 48) = v10;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x1000) == 0)
  {
LABEL_12:
    if ((v2 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_24;
  }
LABEL_23:
  char v11 = *(unsigned char *)(a2 + 64);
  v3 |= 0x1000u;
  *(_WORD *)(result + 68) = v3;
  *(unsigned char *)(result + 64) = v11;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 2) == 0)
  {
LABEL_13:
    if ((v2 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t v12 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(result + 68) = v3;
  *(void *)(result + 16) = v12;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 8) == 0)
  {
LABEL_14:
    if ((v2 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_26;
  }
LABEL_25:
  int v13 = *(_DWORD *)(a2 + 28);
  v3 |= 8u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 28) = v13;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_27;
  }
LABEL_26:
  int v14 = *(_DWORD *)(a2 + 32);
  v3 |= 0x10u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 32) = v14;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x20) == 0)
  {
LABEL_16:
    if ((v2 & 4) == 0) {
      return result;
    }
LABEL_28:
    int v16 = *(_DWORD *)(a2 + 24);
    *(_WORD *)(result + 68) = v3 | 4;
    *(_DWORD *)(result + 24) = v16;
    return result;
  }
LABEL_27:
  int v15 = *(_DWORD *)(a2 + 36);
  v3 |= 0x20u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 36) = v15;
  if ((*(_WORD *)(a2 + 68) & 4) != 0) {
    goto LABEL_28;
  }
  return result;
}

uint64_t sub_227C5F264(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x1000) != 0)
  {
    PB::TextFormatter::format(this, "didExceedRadius");
    __int16 v5 = *(_WORD *)(a1 + 68);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "fenceID");
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "positionRefX", *(float *)(a1 + 28));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "positionRefY", *(float *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x20) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "positionRefZ", *(float *)(a1 + 36));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "positionUncX", *(float *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x80) == 0)
  {
LABEL_8:
    if ((v5 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "positionUncY", *(float *)(a1 + 44));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x100) == 0)
  {
LABEL_9:
    if ((v5 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "positionUncZ", *(float *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x200) == 0)
  {
LABEL_10:
    if ((v5 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "positionX", *(float *)(a1 + 52));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x400) == 0)
  {
LABEL_11:
    if ((v5 & 0x800) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "positionY", *(float *)(a1 + 56));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x800) == 0)
  {
LABEL_12:
    if ((v5 & 1) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "positionZ", *(float *)(a1 + 60));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 1) == 0)
  {
LABEL_13:
    if ((v5 & 2) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_29:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  if ((*(_WORD *)(a1 + 68) & 2) != 0) {
LABEL_14:
  }
    PB::TextFormatter::format(this, "timestampPast", *(double *)(a1 + 16));
LABEL_15:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C5F448(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 68) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_59;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_50;
            case 2u:
              *(_WORD *)(a1 + 68) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_59;
              }
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_77;
            case 3u:
              *(_WORD *)(a1 + 68) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_59;
              }
              *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_77;
            case 4u:
              *(_WORD *)(a1 + 68) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_59;
              }
              *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_77;
            case 5u:
              *(_WORD *)(a1 + 68) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_59;
              }
              *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_77;
            case 6u:
              *(_WORD *)(a1 + 68) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_59;
              }
              *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_77;
            case 7u:
              *(_WORD *)(a1 + 68) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_59;
              }
              *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_77;
            case 8u:
              *(_WORD *)(a1 + 68) |= 0x1000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v22 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v21 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v22 = v21 != 0;
              }
              *(unsigned char *)(a1 + 64) = v22;
              goto LABEL_84;
            case 9u:
              *(_WORD *)(a1 + 68) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_59;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
LABEL_50:
              unint64_t v2 = *((void *)this + 1) + 8;
              goto LABEL_78;
            case 0xAu:
              *(_WORD *)(a1 + 68) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_59;
              }
              *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_77;
            case 0xBu:
              *(_WORD *)(a1 + 68) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_59;
              }
              *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_77;
            case 0xCu:
              *(_WORD *)(a1 + 68) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
LABEL_77:
                unint64_t v2 = *((void *)this + 1) + 4;
LABEL_78:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_59:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_84;
            case 0xDu:
              *(_WORD *)(a1 + 68) |= 4u;
              unint64_t v23 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v24 = *(void *)this;
              if (v23 > 0xFFFFFFFFFFFFFFF5 || v23 + 10 > v2)
              {
                char v29 = 0;
                unsigned int v30 = 0;
                uint64_t v27 = 0;
                if (v2 <= v23) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v23)
                  {
                    LODWORD(v27) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_83;
                  }
                  unint64_t v31 = v23++;
                  char v32 = *(unsigned char *)(v24 + v31);
                  *((void *)this + 1) = v23;
                  v27 |= (unint64_t)(v32 & 0x7F) << v29;
                  if ((v32 & 0x80) == 0) {
                    break;
                  }
                  v29 += 7;
                  BOOL v14 = v30++ > 8;
                  if (v14)
                  {
                    LODWORD(v27) = 0;
LABEL_82:
                    unint64_t v2 = v31 + 1;
                    goto LABEL_83;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v27) = 0;
                }
                goto LABEL_82;
              }
              char v25 = 0;
              unsigned int v26 = 0;
              uint64_t v27 = 0;
              do
              {
                unint64_t v2 = v23 + 1;
                *((void *)this + 1) = v23 + 1;
                char v28 = *(unsigned char *)(v24 + v23);
                v27 |= (unint64_t)(v28 & 0x7F) << v25;
                if ((v28 & 0x80) == 0) {
                  goto LABEL_83;
                }
                v25 += 7;
                unint64_t v23 = v2;
                BOOL v14 = v26++ > 8;
              }
              while (!v14);
              LODWORD(v27) = 0;
LABEL_83:
              *(_DWORD *)(a1 + 24) = v27;
LABEL_84:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_84;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C5F9A4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 68);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    __int16 v4 = *(_WORD *)(v3 + 68);
    if ((v4 & 0x200) == 0)
    {
LABEL_3:
      if ((v4 & 0x400) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((*(_WORD *)(result + 68) & 0x200) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x400) == 0)
  {
LABEL_4:
    if ((v4 & 0x800) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x800) == 0)
  {
LABEL_5:
    if ((v4 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 60));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x40) == 0)
  {
LABEL_6:
    if ((v4 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x80) == 0)
  {
LABEL_7:
    if ((v4 & 0x100) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x100) == 0)
  {
LABEL_8:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x1000) == 0)
  {
LABEL_9:
    if ((v4 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 2) == 0)
  {
LABEL_10:
    if ((v4 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 8) == 0)
  {
LABEL_11:
    if ((v4 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x10) == 0)
  {
LABEL_12:
    if ((v4 & 0x20) == 0) {
      goto LABEL_13;
    }
LABEL_26:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36));
    if ((*(_WORD *)(v3 + 68) & 4) == 0) {
      return result;
    }
    goto LABEL_27;
  }
LABEL_25:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x20) != 0) {
    goto LABEL_26;
  }
LABEL_13:
  if ((v4 & 4) == 0) {
    return result;
  }
LABEL_27:

  return PB::Writer::writeVarInt(this);
}

void sub_227C5FB4C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227C5FB84(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC27A00;
  *(_DWORD *)(a1 + 20) = 0;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
    int v3 = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(a1 + 20) = 2;
    *(_DWORD *)(a1 + 16) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 20) & 1) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 1;
  if (*(unsigned char *)(a2 + 20))
  {
LABEL_5:
    double result = *(double *)(a2 + 8);
    *(unsigned char *)(a1 + 20) = v2;
    *(double *)(a1 + 8) = result;
  }
  return result;
}

uint64_t sub_227C5FBE4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if (v5)
  {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if ((v5 & 2) != 0) {
    PB::TextFormatter::format(this, "type");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C5FC60(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v20 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v21 = *(void *)this;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v24 = 0;
          if (v2 <= v20) {
            unint64_t v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v20)
            {
              LODWORD(v24) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_47;
            }
            unint64_t v29 = v20++;
            char v30 = *(unsigned char *)(v21 + v29);
            *((void *)this + 1) = v20;
            v24 |= (unint64_t)(v30 & 0x7F) << v27;
            if ((v30 & 0x80) == 0) {
              break;
            }
            v27 += 7;
            BOOL v14 = v28++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              goto LABEL_46;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v24) = 0;
          }
LABEL_46:
          unint64_t v2 = v29 + 1;
        }
        else
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          while (1)
          {
            unint64_t v2 = v20 + 1;
            *((void *)this + 1) = v20 + 1;
            char v25 = *(unsigned char *)(v21 + v20);
            v24 |= (unint64_t)(v25 & 0x7F) << v22;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v22 += 7;
            unint64_t v20 = v2;
            BOOL v14 = v23++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              break;
            }
          }
        }
LABEL_47:
        *(_DWORD *)(a1 + 16) = v24;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C5FEF0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if (v4)
  {
    double v5 = *(double *)(v3 + 8);
    return PB::Writer::write(this, v5);
  }
  return result;
}

uint64_t sub_227C5FF5C(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC27A38;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 52) = 0;
  return result;
}

void sub_227C5FF84(PB::Base *this)
{
  *(void *)this = &unk_26DC27A38;
  unint64_t v2 = (void *)*((void *)this + 1);
  if (v2)
  {
    *((void *)this + 2) = v2;
    operator delete(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C5FFE8(PB::Base *a1)
{
  sub_227C5FF84(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C60020(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC27A38;
  *(void *)(a1 + 8) = 0;
  char v4 = (char *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 52) = 0;
  if (*(unsigned char *)(a2 + 52))
  {
    uint64_t v6 = *(void *)(a2 + 32);
    *(unsigned char *)(a1 + 52) = 1;
    *(void *)(a1 + 32) = v6;
    char v5 = 5;
    if ((*(unsigned char *)(a2 + 52) & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v5 = 4;
  if ((*(unsigned char *)(a2 + 52) & 4) != 0)
  {
LABEL_5:
    char v7 = *(unsigned char *)(a2 + 48);
    *(unsigned char *)(a1 + 52) = v5;
    *(unsigned char *)(a1 + 48) = v7;
  }
LABEL_6:
  if (a1 != a2) {
    sub_227B8BA68(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  if ((*(unsigned char *)(a2 + 52) & 2) != 0)
  {
    uint64_t v8 = *(void *)(a2 + 40);
    *(unsigned char *)(a1 + 52) |= 2u;
    *(void *)(a1 + 40) = v8;
  }
  return a1;
}

uint64_t sub_227C600E8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if ((*(unsigned char *)(a1 + 52) & 4) != 0) {
    PB::TextFormatter::format(this, "isPedestrian");
  }
  char v5 = *(float **)(a1 + 8);
  uint64_t v6 = *(float **)(a1 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    PB::TextFormatter::format(this, "pedestrianClassProbability", v7);
  }
  char v8 = *(unsigned char *)(a1 + 52);
  if (v8)
  {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 32));
    char v8 = *(unsigned char *)(a1 + 52);
  }
  if ((v8 & 2) != 0) {
    PB::TextFormatter::format(this, "timestampPast", *(double *)(a1 + 40));
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227C601BC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    char v8 = (void **)(a1 + 8);
    uint64_t v9 = a1 + 24;
    while (1)
    {
      uint64_t v10 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v11 = 0;
      unsigned int v12 = 0;
      unint64_t v13 = 0;
      while (1)
      {
        unint64_t v14 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v15 = *(unsigned char *)(v10 + v2);
        v13 |= (unint64_t)(v15 & 0x7F) << v11;
        if ((v15 & 0x80) == 0) {
          break;
        }
        v11 += 7;
        unint64_t v2 = v14;
        if (v12++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      if ((v13 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v13 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 52) |= 1u;
          unint64_t v22 = *((void *)this + 1);
          if (v22 > 0xFFFFFFFFFFFFFFF7 || v22 + 8 > *((void *)this + 2)) {
            goto LABEL_81;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v22);
          goto LABEL_55;
        case 2u:
          *(unsigned char *)(a1 + 52) |= 4u;
          unint64_t v23 = *((void *)this + 1);
          if (v23 >= *((void *)this + 2))
          {
            BOOL v26 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v24 = v23 + 1;
            int v25 = *(unsigned __int8 *)(*(void *)this + v23);
            *((void *)this + 1) = v24;
            BOOL v26 = v25 != 0;
          }
          *(unsigned char *)(a1 + 48) = v26;
          goto LABEL_82;
        case 3u:
          if ((v13 & 7) == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v27 = *((void *)this + 1);
            unint64_t v28 = *((void *)this + 2);
            while (v27 < v28 && !*((unsigned char *)this + 24))
            {
              char v30 = *(char **)(a1 + 16);
              unint64_t v29 = *(void *)(a1 + 24);
              if ((unint64_t)v30 >= v29)
              {
                char v32 = (char *)*v8;
                uint64_t v33 = (v30 - (unsigned char *)*v8) >> 2;
                unint64_t v34 = v33 + 1;
                if ((unint64_t)(v33 + 1) >> 62) {
                  goto LABEL_91;
                }
                uint64_t v35 = v29 - (void)v32;
                if (v35 >> 1 > v34) {
                  unint64_t v34 = v35 >> 1;
                }
                if ((unint64_t)v35 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v36 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v36 = v34;
                }
                if (v36)
                {
                  uint64_t v37 = (char *)sub_227B8BBB8(v9, v36);
                  char v32 = *(char **)(a1 + 8);
                  char v30 = *(char **)(a1 + 16);
                }
                else
                {
                  uint64_t v37 = 0;
                }
                unint64_t v38 = &v37[4 * v33];
                *(_DWORD *)unint64_t v38 = 0;
                unint64_t v31 = v38 + 4;
                while (v30 != v32)
                {
                  int v39 = *((_DWORD *)v30 - 1);
                  v30 -= 4;
                  *((_DWORD *)v38 - 1) = v39;
                  v38 -= 4;
                }
                *(void *)(a1 + 8) = v38;
                *(void *)(a1 + 16) = v31;
                *(void *)(a1 + 24) = &v37[4 * v36];
                if (v32) {
                  operator delete(v32);
                }
              }
              else
              {
                *(_DWORD *)char v30 = 0;
                unint64_t v31 = v30 + 4;
              }
              *(void *)(a1 + 16) = v31;
              unint64_t v40 = *((void *)this + 1);
              if (v40 > 0xFFFFFFFFFFFFFFFBLL || v40 + 4 > *((void *)this + 2))
              {
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v31 - 1) = *(_DWORD *)(*(void *)this + v40);
              unint64_t v28 = *((void *)this + 2);
              unint64_t v27 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v27;
            }
            PB::Reader::recallMark();
          }
          else
          {
            unint64_t v44 = *(char **)(a1 + 16);
            unint64_t v43 = *(void *)(a1 + 24);
            if ((unint64_t)v44 >= v43)
            {
              uint64_t v46 = (char *)*v8;
              uint64_t v47 = (v44 - (unsigned char *)*v8) >> 2;
              unint64_t v48 = v47 + 1;
              if ((unint64_t)(v47 + 1) >> 62) {
LABEL_91:
              }
                sub_227B8B89C();
              uint64_t v49 = v43 - (void)v46;
              if (v49 >> 1 > v48) {
                unint64_t v48 = v49 >> 1;
              }
              if ((unint64_t)v49 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v50 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v50 = v48;
              }
              if (v50)
              {
                unint64_t v51 = (char *)sub_227B8BBB8(v9, v50);
                uint64_t v46 = *(char **)(a1 + 8);
                unint64_t v44 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v51 = 0;
              }
              unsigned int v52 = &v51[4 * v47];
              *(_DWORD *)unsigned int v52 = 0;
              unint64_t v45 = v52 + 4;
              while (v44 != v46)
              {
                int v53 = *((_DWORD *)v44 - 1);
                v44 -= 4;
                *((_DWORD *)v52 - 1) = v53;
                v52 -= 4;
              }
              *(void *)(a1 + 8) = v52;
              *(void *)(a1 + 16) = v45;
              *(void *)(a1 + 24) = &v51[4 * v50];
              if (v46) {
                operator delete(v46);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v44 = 0;
              unint64_t v45 = v44 + 4;
            }
            *(void *)(a1 + 16) = v45;
            unint64_t v54 = *((void *)this + 1);
            if (v54 <= 0xFFFFFFFFFFFFFFFBLL && v54 + 4 <= *((void *)this + 2))
            {
              *(v45 - 1) = *(_DWORD *)(*(void *)this + v54);
              uint64_t v42 = *((void *)this + 1) + 4;
LABEL_56:
              *((void *)this + 1) = v42;
            }
            else
            {
LABEL_81:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_82:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || *((unsigned char *)this + 24)) {
            return v4 == 0;
          }
          break;
        case 4u:
          *(unsigned char *)(a1 + 52) |= 2u;
          unint64_t v41 = *((void *)this + 1);
          if (v41 > 0xFFFFFFFFFFFFFFF7 || v41 + 8 > *((void *)this + 2)) {
            goto LABEL_81;
          }
          *(void *)(a1 + 40) = *(void *)(*(void *)this + v41);
LABEL_55:
          uint64_t v42 = *((void *)this + 1) + 8;
          goto LABEL_56;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_82;
      }
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v13 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v19 = v2 + 1;
      char v20 = *(unsigned char *)(v10 + v2);
      *((void *)this + 1) = v19;
      v13 |= (unint64_t)(v20 & 0x7F) << v17;
      if ((v20 & 0x80) == 0) {
        goto LABEL_21;
      }
      v17 += 7;
      unint64_t v2 = v19;
      if (v18++ >= 9)
      {
LABEL_20:
        unint64_t v13 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C60620(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 52);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 32));
    char v4 = *(unsigned char *)(v3 + 52);
  }
  if ((v4 & 4) != 0) {
    uint64_t result = PB::Writer::write(this);
  }
  char v5 = *(float **)(v3 + 8);
  uint64_t v6 = *(float **)(v3 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    uint64_t result = PB::Writer::write(this, v7);
  }
  if ((*(unsigned char *)(v3 + 52) & 2) != 0)
  {
    double v8 = *(double *)(v3 + 40);
    return PB::Writer::write(this, v8);
  }
  return result;
}

uint64_t sub_227C606D0(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC27A70;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 52) = 0;
  return result;
}

void sub_227C606F8(PB::Base *this)
{
  *(void *)this = &unk_26DC27A70;
  unint64_t v2 = (void *)*((void *)this + 1);
  if (v2)
  {
    *((void *)this + 2) = v2;
    operator delete(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C6075C(PB::Base *a1)
{
  sub_227C606F8(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C60794(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC27A70;
  *(void *)(a1 + 8) = 0;
  char v4 = (char *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 52) = 0;
  if (*(unsigned char *)(a2 + 52))
  {
    uint64_t v6 = *(void *)(a2 + 32);
    *(unsigned char *)(a1 + 52) = 1;
    *(void *)(a1 + 32) = v6;
    char v5 = 5;
    if ((*(unsigned char *)(a2 + 52) & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v5 = 4;
  if ((*(unsigned char *)(a2 + 52) & 4) != 0)
  {
LABEL_5:
    int v7 = *(_DWORD *)(a2 + 48);
    *(unsigned char *)(a1 + 52) = v5;
    *(_DWORD *)(a1 + 48) = v7;
  }
LABEL_6:
  if (a1 != a2) {
    sub_227B8BA68(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  if ((*(unsigned char *)(a2 + 52) & 2) != 0)
  {
    uint64_t v8 = *(void *)(a2 + 40);
    *(unsigned char *)(a1 + 52) |= 2u;
    *(void *)(a1 + 40) = v8;
  }
  return a1;
}

uint64_t sub_227C6085C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if ((*(unsigned char *)(a1 + 52) & 4) != 0) {
    PB::TextFormatter::format(this, "placement");
  }
  char v5 = *(float **)(a1 + 8);
  uint64_t v6 = *(float **)(a1 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    PB::TextFormatter::format(this, "placementProbability", v7);
  }
  char v8 = *(unsigned char *)(a1 + 52);
  if (v8)
  {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 32));
    char v8 = *(unsigned char *)(a1 + 52);
  }
  if ((v8 & 2) != 0) {
    PB::TextFormatter::format(this, "timestampPast", *(double *)(a1 + 40));
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227C60930(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    char v8 = (void **)(a1 + 8);
    uint64_t v9 = a1 + 24;
    while (1)
    {
      uint64_t v10 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v11 = 0;
      unsigned int v12 = 0;
      unint64_t v13 = 0;
      while (1)
      {
        unint64_t v14 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v15 = *(unsigned char *)(v10 + v2);
        v13 |= (unint64_t)(v15 & 0x7F) << v11;
        if ((v15 & 0x80) == 0) {
          break;
        }
        v11 += 7;
        unint64_t v2 = v14;
        BOOL v16 = v12++ > 8;
        if (v16) {
          goto LABEL_20;
        }
      }
LABEL_21:
      if ((v13 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v13 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 52) |= 1u;
          unint64_t v22 = *((void *)this + 1);
          if (v22 > 0xFFFFFFFFFFFFFFF7 || v22 + 8 > *((void *)this + 2)) {
            goto LABEL_95;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v22);
          goto LABEL_60;
        case 2u:
          *(unsigned char *)(a1 + 52) |= 4u;
          unint64_t v23 = *((void *)this + 1);
          unint64_t v24 = *((void *)this + 2);
          uint64_t v25 = *(void *)this;
          if (v23 <= 0xFFFFFFFFFFFFFFF5 && v23 + 10 <= v24)
          {
            char v26 = 0;
            unsigned int v27 = 0;
            uint64_t v28 = 0;
            do
            {
              unint64_t v29 = v23 + 1;
              *((void *)this + 1) = v23 + 1;
              char v30 = *(unsigned char *)(v25 + v23);
              v28 |= (unint64_t)(v30 & 0x7F) << v26;
              if ((v30 & 0x80) == 0) {
                goto LABEL_84;
              }
              v26 += 7;
              unint64_t v23 = v29;
              BOOL v16 = v27++ > 8;
            }
            while (!v16);
LABEL_70:
            LODWORD(v28) = 0;
            goto LABEL_84;
          }
          char v47 = 0;
          unsigned int v48 = 0;
          uint64_t v28 = 0;
          if (v24 <= v23) {
            unint64_t v24 = *((void *)this + 1);
          }
          while (2)
          {
            if (v24 == v23)
            {
              LODWORD(v28) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v49 = v23 + 1;
              char v50 = *(unsigned char *)(v25 + v23);
              *((void *)this + 1) = v49;
              v28 |= (unint64_t)(v50 & 0x7F) << v47;
              if (v50 < 0)
              {
                v47 += 7;
                unint64_t v23 = v49;
                BOOL v16 = v48++ > 8;
                if (v16) {
                  goto LABEL_70;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v28) = 0;
              }
            }
            break;
          }
LABEL_84:
          *(_DWORD *)(a1 + 48) = v28;
          goto LABEL_96;
        case 3u:
          if ((v13 & 7) == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v31 = *((void *)this + 1);
            unint64_t v32 = *((void *)this + 2);
            while (v31 < v32 && !*((unsigned char *)this + 24))
            {
              unint64_t v34 = *(char **)(a1 + 16);
              unint64_t v33 = *(void *)(a1 + 24);
              if ((unint64_t)v34 >= v33)
              {
                unint64_t v36 = (char *)*v8;
                uint64_t v37 = (v34 - (unsigned char *)*v8) >> 2;
                unint64_t v38 = v37 + 1;
                if ((unint64_t)(v37 + 1) >> 62) {
                  goto LABEL_107;
                }
                uint64_t v39 = v33 - (void)v36;
                if (v39 >> 1 > v38) {
                  unint64_t v38 = v39 >> 1;
                }
                if ((unint64_t)v39 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v40 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v40 = v38;
                }
                if (v40)
                {
                  unint64_t v41 = (char *)sub_227B8BBB8(v9, v40);
                  unint64_t v36 = *(char **)(a1 + 8);
                  unint64_t v34 = *(char **)(a1 + 16);
                }
                else
                {
                  unint64_t v41 = 0;
                }
                uint64_t v42 = &v41[4 * v37];
                *(_DWORD *)uint64_t v42 = 0;
                uint64_t v35 = v42 + 4;
                while (v34 != v36)
                {
                  int v43 = *((_DWORD *)v34 - 1);
                  v34 -= 4;
                  *((_DWORD *)v42 - 1) = v43;
                  v42 -= 4;
                }
                *(void *)(a1 + 8) = v42;
                *(void *)(a1 + 16) = v35;
                *(void *)(a1 + 24) = &v41[4 * v40];
                if (v36) {
                  operator delete(v36);
                }
              }
              else
              {
                *(_DWORD *)unint64_t v34 = 0;
                uint64_t v35 = v34 + 4;
              }
              *(void *)(a1 + 16) = v35;
              unint64_t v44 = *((void *)this + 1);
              if (v44 > 0xFFFFFFFFFFFFFFFBLL || v44 + 4 > *((void *)this + 2))
              {
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v35 - 1) = *(_DWORD *)(*(void *)this + v44);
              unint64_t v32 = *((void *)this + 2);
              unint64_t v31 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v31;
            }
            PB::Reader::recallMark();
          }
          else
          {
            unsigned int v52 = *(char **)(a1 + 16);
            unint64_t v51 = *(void *)(a1 + 24);
            if ((unint64_t)v52 >= v51)
            {
              unint64_t v54 = (char *)*v8;
              uint64_t v55 = (v52 - (unsigned char *)*v8) >> 2;
              unint64_t v56 = v55 + 1;
              if ((unint64_t)(v55 + 1) >> 62) {
LABEL_107:
              }
                sub_227B8B89C();
              uint64_t v57 = v51 - (void)v54;
              if (v57 >> 1 > v56) {
                unint64_t v56 = v57 >> 1;
              }
              if ((unint64_t)v57 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v58 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v58 = v56;
              }
              if (v58)
              {
                BOOL v59 = (char *)sub_227B8BBB8(v9, v58);
                unint64_t v54 = *(char **)(a1 + 8);
                unsigned int v52 = *(char **)(a1 + 16);
              }
              else
              {
                BOOL v59 = 0;
              }
              unint64_t v60 = &v59[4 * v55];
              *(_DWORD *)unint64_t v60 = 0;
              int v53 = v60 + 4;
              while (v52 != v54)
              {
                int v61 = *((_DWORD *)v52 - 1);
                v52 -= 4;
                *((_DWORD *)v60 - 1) = v61;
                v60 -= 4;
              }
              *(void *)(a1 + 8) = v60;
              *(void *)(a1 + 16) = v53;
              *(void *)(a1 + 24) = &v59[4 * v58];
              if (v54) {
                operator delete(v54);
              }
            }
            else
            {
              *(_DWORD *)unsigned int v52 = 0;
              int v53 = v52 + 4;
            }
            *(void *)(a1 + 16) = v53;
            unint64_t v62 = *((void *)this + 1);
            if (v62 <= 0xFFFFFFFFFFFFFFFBLL && v62 + 4 <= *((void *)this + 2))
            {
              *(v53 - 1) = *(_DWORD *)(*(void *)this + v62);
              uint64_t v46 = *((void *)this + 1) + 4;
LABEL_61:
              *((void *)this + 1) = v46;
            }
            else
            {
LABEL_95:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_96:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        case 4u:
          *(unsigned char *)(a1 + 52) |= 2u;
          unint64_t v45 = *((void *)this + 1);
          if (v45 > 0xFFFFFFFFFFFFFFF7 || v45 + 8 > *((void *)this + 2)) {
            goto LABEL_95;
          }
          *(void *)(a1 + 40) = *(void *)(*(void *)this + v45);
LABEL_60:
          uint64_t v46 = *((void *)this + 1) + 8;
          goto LABEL_61;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_96;
      }
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v13 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v19 = v2 + 1;
      char v20 = *(unsigned char *)(v10 + v2);
      *((void *)this + 1) = v19;
      v13 |= (unint64_t)(v20 & 0x7F) << v17;
      if ((v20 & 0x80) == 0) {
        goto LABEL_21;
      }
      v17 += 7;
      unint64_t v2 = v19;
      if (v18++ >= 9)
      {
LABEL_20:
        unint64_t v13 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C60E34(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 52);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 32));
    char v4 = *(unsigned char *)(v3 + 52);
  }
  if ((v4 & 4) != 0) {
    uint64_t result = PB::Writer::writeVarInt(this);
  }
  char v5 = *(float **)(v3 + 8);
  uint64_t v6 = *(float **)(v3 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    uint64_t result = PB::Writer::write(this, v7);
  }
  if ((*(unsigned char *)(v3 + 52) & 2) != 0)
  {
    double v8 = *(double *)(v3 + 40);
    return PB::Writer::write(this, v8);
  }
  return result;
}

uint64_t sub_227C60EE4(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC27AA8;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void sub_227C60F0C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227C60F44(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC27AA8;
  *(_DWORD *)(a1 + 32) = 0;
  char v2 = *(unsigned char *)(a2 + 32);
  if (v2)
  {
    double result = *(double *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 32) = 1;
    *(double *)(a1 + 8) = result;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 32) & 4) != 0)
  {
LABEL_5:
    LODWORD(result) = *(_DWORD *)(a2 + 24);
    v3 |= 4u;
    *(unsigned char *)(a1 + 32) = v3;
    *(_DWORD *)(a1 + 24) = LODWORD(result);
    char v2 = *(unsigned char *)(a2 + 32);
  }
LABEL_6:
  if ((v2 & 8) == 0)
  {
    if ((v2 & 2) == 0) {
      return result;
    }
LABEL_10:
    double result = *(double *)(a2 + 16);
    *(unsigned char *)(a1 + 32) = v3 | 2;
    *(double *)(a1 + 16) = result;
    return result;
  }
  LODWORD(result) = *(_DWORD *)(a2 + 28);
  v3 |= 8u;
  *(unsigned char *)(a1 + 32) = v3;
  *(_DWORD *)(a1 + 28) = LODWORD(result);
  if ((*(unsigned char *)(a2 + 32) & 2) != 0) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_227C60FE0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "speed", *(float *)(a1 + 24));
    char v5 = *(unsigned char *)(a1 + 32);
    if ((v5 & 8) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 32) & 8) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "speedUnc", *(float *)(a1 + 28));
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 1) == 0)
  {
LABEL_4:
    if ((v5 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  if ((*(unsigned char *)(a1 + 32) & 2) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "timestampPast", *(double *)(a1 + 16));
LABEL_6:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C610A4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 32) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_36;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          goto LABEL_38;
        case 2u:
          *(unsigned char *)(a1 + 32) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_36;
          }
          *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_33;
        case 3u:
          *(unsigned char *)(a1 + 32) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_36;
          }
          *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
LABEL_33:
          unint64_t v2 = *((void *)this + 1) + 4;
          goto LABEL_39;
        case 4u:
          *(unsigned char *)(a1 + 32) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
LABEL_38:
            unint64_t v2 = *((void *)this + 1) + 8;
LABEL_39:
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_36:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C61324(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
      if ((*(unsigned char *)(v3 + 32) & 2) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 32) & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 8) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_9:
  double v5 = *(double *)(v3 + 16);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227C613CC(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC27AE0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void sub_227C613F4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227C6142C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC27AE0;
  *(_DWORD *)(a1 + 32) = 0;
  char v2 = *(unsigned char *)(a2 + 32);
  if (v2)
  {
    double result = *(double *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 32) = 1;
    *(double *)(a1 + 8) = result;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 32) & 4) != 0)
  {
LABEL_5:
    LODWORD(result) = *(_DWORD *)(a2 + 24);
    v3 |= 4u;
    *(unsigned char *)(a1 + 32) = v3;
    *(_DWORD *)(a1 + 24) = LODWORD(result);
    char v2 = *(unsigned char *)(a2 + 32);
  }
LABEL_6:
  if ((v2 & 8) == 0)
  {
    if ((v2 & 2) == 0) {
      return result;
    }
LABEL_10:
    double result = *(double *)(a2 + 16);
    *(unsigned char *)(a1 + 32) = v3 | 2;
    *(double *)(a1 + 16) = result;
    return result;
  }
  LODWORD(result) = *(_DWORD *)(a2 + 28);
  v3 |= 8u;
  *(unsigned char *)(a1 + 32) = v3;
  *(_DWORD *)(a1 + 28) = LODWORD(result);
  if ((*(unsigned char *)(a2 + 32) & 2) != 0) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_227C614C8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "speed", *(float *)(a1 + 24));
    char v5 = *(unsigned char *)(a1 + 32);
    if ((v5 & 8) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 32) & 8) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "speedUnc", *(float *)(a1 + 28));
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 1) == 0)
  {
LABEL_4:
    if ((v5 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  if ((*(unsigned char *)(a1 + 32) & 2) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "timestampPast", *(double *)(a1 + 16));
LABEL_6:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C6158C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 32) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_36;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          goto LABEL_38;
        case 2u:
          *(unsigned char *)(a1 + 32) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_36;
          }
          *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_33;
        case 3u:
          *(unsigned char *)(a1 + 32) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_36;
          }
          *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
LABEL_33:
          unint64_t v2 = *((void *)this + 1) + 4;
          goto LABEL_39;
        case 4u:
          *(unsigned char *)(a1 + 32) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
LABEL_38:
            unint64_t v2 = *((void *)this + 1) + 8;
LABEL_39:
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_36:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C6180C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
      if ((*(unsigned char *)(v3 + 32) & 2) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 32) & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 8) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_9:
  double v5 = *(double *)(v3 + 16);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227C618B4(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC27B18;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

void sub_227C618DC(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227C61914(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC27B18;
  *(_DWORD *)(a1 + 48) = 0;
  char v2 = *(unsigned char *)(a2 + 48);
  if (v2)
  {
    double result = *(double *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 48) = 1;
    *(double *)(a1 + 8) = result;
    char v2 = *(unsigned char *)(a2 + 48);
    if ((v2 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 48) & 0x20) != 0)
  {
LABEL_5:
    LODWORD(result) = *(_DWORD *)(a2 + 36);
    v3 |= 0x20u;
    *(unsigned char *)(a1 + 48) = v3;
    *(_DWORD *)(a1 + 36) = LODWORD(result);
    char v2 = *(unsigned char *)(a2 + 48);
  }
LABEL_6:
  if ((v2 & 0x40) != 0)
  {
    LODWORD(result) = *(_DWORD *)(a2 + 40);
    v3 |= 0x40u;
    *(unsigned char *)(a1 + 48) = v3;
    *(_DWORD *)(a1 + 40) = LODWORD(result);
    char v2 = *(unsigned char *)(a2 + 48);
    if ((v2 & 0x80) == 0)
    {
LABEL_8:
      if ((v2 & 4) == 0) {
        goto LABEL_9;
      }
      goto LABEL_15;
    }
  }
  else if ((v2 & 0x80) == 0)
  {
    goto LABEL_8;
  }
  LODWORD(result) = *(_DWORD *)(a2 + 44);
  v3 |= 0x80u;
  *(unsigned char *)(a1 + 48) = v3;
  *(_DWORD *)(a1 + 44) = LODWORD(result);
  char v2 = *(unsigned char *)(a2 + 48);
  if ((v2 & 4) == 0)
  {
LABEL_9:
    if ((v2 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_16;
  }
LABEL_15:
  LODWORD(result) = *(_DWORD *)(a2 + 24);
  v3 |= 4u;
  *(unsigned char *)(a1 + 48) = v3;
  *(_DWORD *)(a1 + 24) = LODWORD(result);
  char v2 = *(unsigned char *)(a2 + 48);
  if ((v2 & 8) == 0)
  {
LABEL_10:
    if ((v2 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_17;
  }
LABEL_16:
  LODWORD(result) = *(_DWORD *)(a2 + 28);
  v3 |= 8u;
  *(unsigned char *)(a1 + 48) = v3;
  *(_DWORD *)(a1 + 28) = LODWORD(result);
  char v2 = *(unsigned char *)(a2 + 48);
  if ((v2 & 0x10) == 0)
  {
LABEL_11:
    if ((v2 & 2) == 0) {
      return result;
    }
LABEL_18:
    double result = *(double *)(a2 + 16);
    *(unsigned char *)(a1 + 48) = v3 | 2;
    *(double *)(a1 + 16) = result;
    return result;
  }
LABEL_17:
  LODWORD(result) = *(_DWORD *)(a2 + 32);
  v3 |= 0x10u;
  *(unsigned char *)(a1 + 48) = v3;
  *(_DWORD *)(a1 + 32) = LODWORD(result);
  if ((*(unsigned char *)(a2 + 48) & 2) != 0) {
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_227C61A20(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 48);
  if (v5)
  {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 48);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(a1 + 48) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "timestampPast", *(double *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 48);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(this, "velocityUncX", *(float *)(a1 + 24));
  char v5 = *(unsigned char *)(a1 + 48);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  PB::TextFormatter::format(this, "velocityUncY", *(float *)(a1 + 28));
  char v5 = *(unsigned char *)(a1 + 48);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "velocityUncZ", *(float *)(a1 + 32));
  char v5 = *(unsigned char *)(a1 + 48);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_18:
    PB::TextFormatter::format(this, "velocityY", *(float *)(a1 + 40));
    if ((*(unsigned char *)(a1 + 48) & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }
LABEL_17:
  PB::TextFormatter::format(this, "velocityX", *(float *)(a1 + 36));
  char v5 = *(unsigned char *)(a1 + 48);
  if ((v5 & 0x40) != 0) {
    goto LABEL_18;
  }
LABEL_8:
  if ((v5 & 0x80) == 0) {
    goto LABEL_9;
  }
LABEL_19:
  PB::TextFormatter::format(this, "velocityZ", *(float *)(a1 + 44));
LABEL_9:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C61B64(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 48) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_48;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          goto LABEL_43;
        case 2u:
          *(unsigned char *)(a1 + 48) |= 0x20u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_48;
          }
          *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_50;
        case 3u:
          *(unsigned char *)(a1 + 48) |= 0x40u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_48;
          }
          *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_50;
        case 4u:
          *(unsigned char *)(a1 + 48) |= 0x80u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_48;
          }
          *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_50;
        case 5u:
          *(unsigned char *)(a1 + 48) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_48;
          }
          *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_50;
        case 6u:
          *(unsigned char *)(a1 + 48) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_48;
          }
          *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_50;
        case 7u:
          *(unsigned char *)(a1 + 48) |= 0x10u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_48;
          }
          *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
LABEL_50:
          unint64_t v2 = *((void *)this + 1) + 4;
          goto LABEL_51;
        case 8u:
          *(unsigned char *)(a1 + 48) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2))
          {
LABEL_48:
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
LABEL_43:
            unint64_t v2 = *((void *)this + 1) + 8;
LABEL_51:
            *((void *)this + 1) = v2;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C61ED4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 48);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 48);
    if ((v4 & 0x20) == 0)
    {
LABEL_3:
      if ((v4 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(result + 48) & 0x20) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36));
  char v4 = *(unsigned char *)(v3 + 48);
  if ((v4 & 0x40) == 0)
  {
LABEL_4:
    if ((v4 & 0x80) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
  char v4 = *(unsigned char *)(v3 + 48);
  if ((v4 & 0x80) == 0)
  {
LABEL_5:
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44));
  char v4 = *(unsigned char *)(v3 + 48);
  if ((v4 & 4) == 0)
  {
LABEL_6:
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
  char v4 = *(unsigned char *)(v3 + 48);
  if ((v4 & 8) == 0)
  {
LABEL_7:
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
LABEL_16:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
    if ((*(unsigned char *)(v3 + 48) & 2) == 0) {
      return result;
    }
    goto LABEL_17;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
  char v4 = *(unsigned char *)(v3 + 48);
  if ((v4 & 0x10) != 0) {
    goto LABEL_16;
  }
LABEL_8:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_17:
  double v5 = *(double *)(v3 + 16);

  return PB::Writer::write(this, v5);
}

void *sub_227C61FEC(void *result)
{
  result[1] = 0;
  result[2] = 0;
  *uint64_t result = &unk_26DC27B50;
  return result;
}

void sub_227C62010(PB::Base *this)
{
  *(void *)this = &unk_26DC27B50;
  uint64_t v2 = *((void *)this + 2);
  *((void *)this + 2) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *((void *)this + 1);
  *((void *)this + 1) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }

  PB::Base::~Base(this);
}

void sub_227C620C4(PB::Base *a1)
{
  sub_227C62010(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227C620FC(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC27B50;
  result[1] = 0;
  result[2] = 0;
  if (*(void *)(a2 + 16)) {
    operator new();
  }
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C62214(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "signalEnvironment");
  }
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v6 + 32))(v6, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C622C8(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 2) {
        operator new();
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C62540(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(const PB::Base **)(result + 16);
  if (v4) {
    uint64_t result = PB::Writer::writeSubmessage(this, v4);
  }
  uint64_t v5 = *(const PB::Base **)(v3 + 8);
  if (v5)
  {
    return PB::Writer::writeSubmessage(this, v5);
  }
  return result;
}

uint64_t sub_227C625A4(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC27B88;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

void sub_227C625CC(PB::Base *this)
{
  *(void *)this = &unk_26DC27B88;
  uint64_t v2 = *((void *)this + 6);
  *((void *)this + 6) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C62650(PB::Base *a1)
{
  sub_227C625CC(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C62688(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC27B88;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 64) = 0;
  char v2 = *(unsigned char *)(a2 + 64);
  if ((v2 & 0x20) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 56);
    char v3 = 32;
    *(unsigned char *)(result + 64) = 32;
    *(void *)(result + 56) = v4;
    char v2 = *(unsigned char *)(a2 + 64);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 64) & 8) != 0)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 32);
    v3 |= 8u;
    *(unsigned char *)(result + 64) = v3;
    *(void *)(result + 32) = v5;
    char v2 = *(unsigned char *)(a2 + 64);
  }
LABEL_6:
  if ((v2 & 0x10) != 0)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    v3 |= 0x10u;
    *(unsigned char *)(result + 64) = v3;
    *(void *)(result + 40) = v7;
    char v2 = *(unsigned char *)(a2 + 64);
    if ((v2 & 4) == 0)
    {
LABEL_8:
      if ((v2 & 1) == 0) {
        goto LABEL_9;
      }
      goto LABEL_16;
    }
  }
  else if ((v2 & 4) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v8 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(unsigned char *)(result + 64) = v3;
  *(void *)(result + 24) = v8;
  char v2 = *(unsigned char *)(a2 + 64);
  if ((v2 & 1) == 0)
  {
LABEL_9:
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_16:
  uint64_t v9 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(unsigned char *)(result + 64) = v3;
  *(void *)(result + 8) = v9;
  if ((*(unsigned char *)(a2 + 64) & 2) != 0)
  {
LABEL_10:
    uint64_t v6 = *(void *)(a2 + 16);
    *(unsigned char *)(result + 64) = v3 | 2;
    *(void *)(result + 16) = v6;
  }
LABEL_11:
  if (*(void *)(a2 + 48)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C627E4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 64);
  if (v5)
  {
    PB::TextFormatter::format(this, "course", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 64);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((*(unsigned char *)(a1 + 64) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "courseAccuracy", *(double *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 64);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "horizontalAccuracy", *(double *)(a1 + 24));
  char v5 = *(unsigned char *)(a1 + 64);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_17:
  PB::TextFormatter::format(this, "latitude", *(double *)(a1 + 32));
  if ((*(unsigned char *)(a1 + 64) & 0x10) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "longitude", *(double *)(a1 + 40));
LABEL_7:
  uint64_t v6 = *(void *)(a1 + 48);
  if (v6) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v6 + 32))(v6, this, "signalEnvironment");
  }
  if ((*(unsigned char *)(a1 + 64) & 0x20) != 0) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 56));
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C6291C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          if (v10++ > 8) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 64) |= 0x20u;
              unint64_t v20 = *((void *)this + 1);
              if (v20 > 0xFFFFFFFFFFFFFFF7 || v20 + 8 > *((void *)this + 2)) {
                goto LABEL_41;
              }
              *(void *)(a1 + 56) = *(void *)(*(void *)this + v20);
              goto LABEL_44;
            case 2u:
              *(unsigned char *)(a1 + 64) |= 8u;
              unint64_t v22 = *((void *)this + 1);
              if (v22 > 0xFFFFFFFFFFFFFFF7 || v22 + 8 > *((void *)this + 2)) {
                goto LABEL_41;
              }
              *(void *)(a1 + 32) = *(void *)(*(void *)this + v22);
              goto LABEL_44;
            case 3u:
              *(unsigned char *)(a1 + 64) |= 0x10u;
              unint64_t v23 = *((void *)this + 1);
              if (v23 > 0xFFFFFFFFFFFFFFF7 || v23 + 8 > *((void *)this + 2)) {
                goto LABEL_41;
              }
              *(void *)(a1 + 40) = *(void *)(*(void *)this + v23);
              goto LABEL_44;
            case 4u:
              *(unsigned char *)(a1 + 64) |= 4u;
              unint64_t v24 = *((void *)this + 1);
              if (v24 > 0xFFFFFFFFFFFFFFF7 || v24 + 8 > *((void *)this + 2)) {
                goto LABEL_41;
              }
              *(void *)(a1 + 24) = *(void *)(*(void *)this + v24);
              goto LABEL_44;
            case 5u:
              *(unsigned char *)(a1 + 64) |= 1u;
              unint64_t v25 = *((void *)this + 1);
              if (v25 > 0xFFFFFFFFFFFFFFF7 || v25 + 8 > *((void *)this + 2)) {
                goto LABEL_41;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v25);
              goto LABEL_44;
            case 6u:
              *(unsigned char *)(a1 + 64) |= 2u;
              unint64_t v26 = *((void *)this + 1);
              if (v26 <= 0xFFFFFFFFFFFFFFF7 && v26 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 16) = *(void *)(*(void *)this + v26);
LABEL_44:
                *((void *)this + 1) += 8;
              }
              else
              {
LABEL_41:
                *((unsigned char *)this + 24) = 1;
              }
LABEL_45:
              unint64_t v2 = *((void *)this + 1);
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || *((unsigned char *)this + 24)) {
                return v4 == 0;
              }
              continue;
            case 7u:
              operator new();
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              goto LABEL_45;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C62CC0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 64);
  if ((v4 & 0x20) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 56));
    char v4 = *(unsigned char *)(v3 + 64);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(result + 64) & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32));
  char v4 = *(unsigned char *)(v3 + 64);
  if ((v4 & 0x10) == 0)
  {
LABEL_4:
    if ((v4 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40));
  char v4 = *(unsigned char *)(v3 + 64);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24));
  char v4 = *(unsigned char *)(v3 + 64);
  if ((v4 & 1) == 0)
  {
LABEL_6:
    if ((v4 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
  if ((*(unsigned char *)(v3 + 64) & 2) != 0) {
LABEL_7:
  }
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
LABEL_8:
  char v5 = *(const PB::Base **)(v3 + 48);
  if (v5)
  {
    return PB::Writer::writeSubmessage(this, v5);
  }
  return result;
}

void *sub_227C62DB8(void *result)
{
  *uint64_t result = &unk_26DC27BC0;
  result[1] = 0;
  return result;
}

void sub_227C62DD8(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC27BC0;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C62E58(PB::Base *a1)
{
  sub_227C62DD8(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227C62E90(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC27BC0;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C62F38(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C62FB4(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C631D0(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

void *sub_227C631EC(void *result)
{
  *uint64_t result = &unk_26DC27BF8;
  result[1] = 0;
  return result;
}

void sub_227C6320C(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC27BF8;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C6328C(PB::Base *a1)
{
  sub_227C6320C(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227C632C4(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC27BF8;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C6336C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C633E8(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C63604(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

uint64_t sub_227C63620(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC27C30;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void sub_227C63648(PB::Base *this)
{
  *(void *)this = &unk_26DC27C30;
  unint64_t v2 = (void *)*((void *)this + 1);
  if (v2)
  {
    *((void *)this + 2) = v2;
    operator delete(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C636AC(PB::Base *a1)
{
  sub_227C63648(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C636E4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC27C30;
  *(void *)(a1 + 8) = 0;
  unint64_t v3 = (char *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  if (*(unsigned char *)(a2 + 40))
  {
    uint64_t v4 = *(void *)(a2 + 32);
    *(unsigned char *)(a1 + 40) = 1;
    *(void *)(a1 + 32) = v4;
  }
  if (a1 != a2) {
    sub_227B8B74C(v3, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
  }
  return a1;
}

uint64_t sub_227C6376C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 40)) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 32));
  }
  uint64_t v5 = *(double **)(a1 + 8);
  uint64_t v6 = *(double **)(a1 + 16);
  while (v5 != v6)
  {
    double v7 = *v5++;
    PB::TextFormatter::format(this, "velocity", v7);
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227C63800(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    char v8 = (void **)(a1 + 8);
    uint64_t v9 = a1 + 24;
    do
    {
      uint64_t v10 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        unint64_t v13 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v19 = v2 + 1;
          char v20 = *(unsigned char *)(v10 + v2);
          *((void *)this + 1) = v19;
          v13 |= (unint64_t)(v20 & 0x7F) << v17;
          if ((v20 & 0x80) == 0) {
            goto LABEL_21;
          }
          v17 += 7;
          unint64_t v2 = v19;
          if (v18++ >= 9)
          {
LABEL_20:
            unint64_t v13 = 0;
            goto LABEL_21;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
        return v4 == 0;
      }
      char v11 = 0;
      unsigned int v12 = 0;
      unint64_t v13 = 0;
      while (1)
      {
        unint64_t v14 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v15 = *(unsigned char *)(v10 + v2);
        v13 |= (unint64_t)(v15 & 0x7F) << v11;
        if ((v15 & 0x80) == 0) {
          break;
        }
        v11 += 7;
        unint64_t v2 = v14;
        if (v12++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      if ((v13 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v13 >> 3) == 2)
      {
        if ((v13 & 7) != 2)
        {
          unint64_t v38 = *(char **)(a1 + 16);
          unint64_t v37 = *(void *)(a1 + 24);
          if ((unint64_t)v38 >= v37)
          {
            unint64_t v40 = (char *)*v8;
            uint64_t v41 = (v38 - (unsigned char *)*v8) >> 3;
            unint64_t v42 = v41 + 1;
            if ((unint64_t)(v41 + 1) >> 61) {
LABEL_84:
            }
              sub_227B8B89C();
            uint64_t v43 = v37 - (void)v40;
            if (v43 >> 2 > v42) {
              unint64_t v42 = v43 >> 2;
            }
            if ((unint64_t)v43 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v44 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v44 = v42;
            }
            if (v44)
            {
              unint64_t v45 = (char *)sub_227B8B8B4(v9, v44);
              unint64_t v40 = *(char **)(a1 + 8);
              unint64_t v38 = *(char **)(a1 + 16);
            }
            else
            {
              unint64_t v45 = 0;
            }
            uint64_t v46 = &v45[8 * v41];
            *(void *)uint64_t v46 = 0;
            uint64_t v39 = v46 + 8;
            while (v38 != v40)
            {
              uint64_t v47 = *((void *)v38 - 1);
              v38 -= 8;
              *((void *)v46 - 1) = v47;
              v46 -= 8;
            }
            *(void *)(a1 + 8) = v46;
            *(void *)(a1 + 16) = v39;
            *(void *)(a1 + 24) = &v45[8 * v44];
            if (v40) {
              operator delete(v40);
            }
          }
          else
          {
            *(void *)unint64_t v38 = 0;
            uint64_t v39 = v38 + 8;
          }
          *(void *)(a1 + 16) = v39;
          unint64_t v48 = *((void *)this + 1);
          if (v48 > 0xFFFFFFFFFFFFFFF7 || v48 + 8 > *((void *)this + 2))
          {
LABEL_73:
            *((unsigned char *)this + 24) = 1;
            goto LABEL_76;
          }
          *(v39 - 1) = *(void *)(*(void *)this + v48);
          goto LABEL_75;
        }
        if (PB::Reader::placeMark()) {
          return 0;
        }
        unint64_t v23 = *((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        while (v23 < v24 && !*((unsigned char *)this + 24))
        {
          unint64_t v26 = *(char **)(a1 + 16);
          unint64_t v25 = *(void *)(a1 + 24);
          if ((unint64_t)v26 >= v25)
          {
            uint64_t v28 = (char *)*v8;
            uint64_t v29 = (v26 - (unsigned char *)*v8) >> 3;
            unint64_t v30 = v29 + 1;
            if ((unint64_t)(v29 + 1) >> 61) {
              goto LABEL_84;
            }
            uint64_t v31 = v25 - (void)v28;
            if (v31 >> 2 > v30) {
              unint64_t v30 = v31 >> 2;
            }
            if ((unint64_t)v31 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v32 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v32 = v30;
            }
            if (v32)
            {
              unint64_t v33 = (char *)sub_227B8B8B4(v9, v32);
              uint64_t v28 = *(char **)(a1 + 8);
              unint64_t v26 = *(char **)(a1 + 16);
            }
            else
            {
              unint64_t v33 = 0;
            }
            unint64_t v34 = &v33[8 * v29];
            *(void *)unint64_t v34 = 0;
            unsigned int v27 = v34 + 8;
            while (v26 != v28)
            {
              uint64_t v35 = *((void *)v26 - 1);
              v26 -= 8;
              *((void *)v34 - 1) = v35;
              v34 -= 8;
            }
            *(void *)(a1 + 8) = v34;
            *(void *)(a1 + 16) = v27;
            *(void *)(a1 + 24) = &v33[8 * v32];
            if (v28) {
              operator delete(v28);
            }
          }
          else
          {
            *(void *)unint64_t v26 = 0;
            unsigned int v27 = v26 + 8;
          }
          *(void *)(a1 + 16) = v27;
          unint64_t v36 = *((void *)this + 1);
          if (v36 > 0xFFFFFFFFFFFFFFF7 || v36 + 8 > *((void *)this + 2))
          {
            *((unsigned char *)this + 24) = 1;
            break;
          }
          *(v27 - 1) = *(void *)(*(void *)this + v36);
          unint64_t v24 = *((void *)this + 2);
          unint64_t v23 = *((void *)this + 1) + 8;
          *((void *)this + 1) = v23;
        }
        PB::Reader::recallMark();
      }
      else
      {
        if ((v13 >> 3) == 1)
        {
          *(unsigned char *)(a1 + 40) |= 1u;
          unint64_t v22 = *((void *)this + 1);
          if (v22 > 0xFFFFFFFFFFFFFFF7 || v22 + 8 > *((void *)this + 2)) {
            goto LABEL_73;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v22);
LABEL_75:
          *((void *)this + 1) += 8;
          goto LABEL_76;
        }
        if ((PB::Reader::skip(this) & 1) == 0) {
          return 0;
        }
      }
LABEL_76:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
    }
    while (v2 < v3 && !*((unsigned char *)this + 24));
  }
  return v4 == 0;
}

uint64_t sub_227C63BB4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  if (*(unsigned char *)(result + 40)) {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 32));
  }
  uint64_t v5 = *(double **)(v3 + 8);
  int v4 = *(double **)(v3 + 16);
  while (v5 != v4)
  {
    double v6 = *v5++;
    uint64_t result = PB::Writer::write(this, v6);
  }
  return result;
}

double sub_227C63C18(uint64_t a1)
{
  *(void *)a1 = &unk_26DC27C68;
  *(_DWORD *)(a1 + 124) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)(a1 + 72) = 0;
  return result;
}

void sub_227C63C54(PB::Base *this)
{
  *(void *)this = &unk_26DC27C68;
  unint64_t v2 = (void *)*((void *)this + 7);
  if (v2)
  {
    *((void *)this + 8) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 4);
  if (v3)
  {
    *((void *)this + 5) = v3;
    operator delete(v3);
  }
  int v4 = (void *)*((void *)this + 1);
  if (v4)
  {
    *((void *)this + 2) = v4;
    operator delete(v4);
  }

  PB::Base::~Base(this);
}

void sub_227C63CD8(PB::Base *a1)
{
  sub_227C63C54(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C63D10(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 8) = 0u;
  int v4 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)a1 = &unk_26DC27C68;
  *(_DWORD *)(a1 + 124) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 72) = 0;
  __int16 v5 = *(_WORD *)(a2 + 124);
  if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 80);
    __int16 v6 = 1;
    *(_WORD *)(a1 + 124) = 1;
    *(void *)(a1 + 80) = v7;
    __int16 v5 = *(_WORD *)(a2 + 124);
    if ((v5 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v6 = 0;
  if ((v5 & 0x40) != 0)
  {
LABEL_5:
    int v8 = *(_DWORD *)(a2 + 108);
    v6 |= 0x40u;
    *(_WORD *)(a1 + 124) = v6;
    *(_DWORD *)(a1 + 108) = v8;
    __int16 v5 = *(_WORD *)(a2 + 124);
  }
LABEL_6:
  if ((v5 & 0x20) != 0)
  {
    int v13 = *(_DWORD *)(a2 + 104);
    v6 |= 0x20u;
    *(_WORD *)(a1 + 124) = v6;
    *(_DWORD *)(a1 + 104) = v13;
    __int16 v5 = *(_WORD *)(a2 + 124);
    if ((v5 & 0x200) == 0)
    {
LABEL_8:
      if ((v5 & 2) == 0) {
        goto LABEL_9;
      }
      goto LABEL_23;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_8;
  }
  int v14 = *(_DWORD *)(a2 + 120);
  v6 |= 0x200u;
  *(_WORD *)(a1 + 124) = v6;
  *(_DWORD *)(a1 + 120) = v14;
  __int16 v5 = *(_WORD *)(a2 + 124);
  if ((v5 & 2) == 0)
  {
LABEL_9:
    if ((v5 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  int v15 = *(_DWORD *)(a2 + 88);
  v6 |= 2u;
  *(_WORD *)(a1 + 124) = v6;
  *(_DWORD *)(a1 + 88) = v15;
  __int16 v5 = *(_WORD *)(a2 + 124);
  if ((v5 & 0x80) == 0)
  {
LABEL_10:
    if ((v5 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_24:
  int v16 = *(_DWORD *)(a2 + 112);
  v6 |= 0x80u;
  *(_WORD *)(a1 + 124) = v6;
  *(_DWORD *)(a1 + 112) = v16;
  if ((*(_WORD *)(a2 + 124) & 0x10) != 0)
  {
LABEL_11:
    int v9 = *(_DWORD *)(a2 + 100);
    *(_WORD *)(a1 + 124) = v6 | 0x10;
    *(_DWORD *)(a1 + 100) = v9;
  }
LABEL_12:
  if (a1 != a2) {
    sub_227B8BA68(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  __int16 v10 = *(_WORD *)(a2 + 124);
  if ((v10 & 8) != 0)
  {
    int v17 = *(_DWORD *)(a2 + 96);
    *(_WORD *)(a1 + 124) |= 8u;
    *(_DWORD *)(a1 + 96) = v17;
    __int16 v10 = *(_WORD *)(a2 + 124);
    if ((v10 & 0x100) == 0)
    {
LABEL_16:
      if ((v10 & 4) == 0) {
        goto LABEL_18;
      }
      goto LABEL_17;
    }
  }
  else if ((*(_WORD *)(a2 + 124) & 0x100) == 0)
  {
    goto LABEL_16;
  }
  int v18 = *(_DWORD *)(a2 + 116);
  *(_WORD *)(a1 + 124) |= 0x100u;
  *(_DWORD *)(a1 + 116) = v18;
  if ((*(_WORD *)(a2 + 124) & 4) != 0)
  {
LABEL_17:
    int v11 = *(_DWORD *)(a2 + 92);
    *(_WORD *)(a1 + 124) |= 4u;
    *(_DWORD *)(a1 + 92) = v11;
  }
LABEL_18:
  if (a1 != a2)
  {
    sub_227B8BA68((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
    sub_227B8BA68((char *)(a1 + 56), *(char **)(a2 + 56), *(void *)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 2);
  }
  return a1;
}

uint64_t sub_227C63EF4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 124);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "distance", *(float *)(a1 + 88));
    __int16 v5 = *(_WORD *)(a1 + 124);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_27;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "focalLength", *(float *)(a1 + 92));
  __int16 v5 = *(_WORD *)(a1 + 124);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_27:
  PB::TextFormatter::format(this, "height", *(float *)(a1 + 96));
  if ((*(_WORD *)(a1 + 124) & 0x10) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "orientation");
LABEL_6:
  __int16 v6 = *(float **)(a1 + 8);
  uint64_t v7 = *(float **)(a1 + 16);
  while (v6 != v7)
  {
    float v8 = *v6++;
    PB::TextFormatter::format(this, "origin", v8);
  }
  if ((*(_WORD *)(a1 + 124) & 0x20) != 0) {
    PB::TextFormatter::format(this, "pitch", *(float *)(a1 + 104));
  }
  int v9 = *(float **)(a1 + 32);
  __int16 v10 = *(float **)(a1 + 40);
  while (v9 != v10)
  {
    float v11 = *v9++;
    PB::TextFormatter::format(this, "principlePoint", v11);
  }
  __int16 v12 = *(_WORD *)(a1 + 124);
  if ((v12 & 0x40) != 0)
  {
    PB::TextFormatter::format(this, "roll", *(float *)(a1 + 108));
    __int16 v12 = *(_WORD *)(a1 + 124);
  }
  if (v12) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 80));
  }
  int v13 = *(float **)(a1 + 56);
  int v14 = *(float **)(a1 + 64);
  while (v13 != v14)
  {
    float v15 = *v13++;
    PB::TextFormatter::format(this, "transform", v15);
  }
  __int16 v16 = *(_WORD *)(a1 + 124);
  if ((v16 & 0x80) != 0)
  {
    PB::TextFormatter::format(this, "type");
    __int16 v16 = *(_WORD *)(a1 + 124);
    if ((v16 & 0x100) == 0)
    {
LABEL_20:
      if ((v16 & 0x200) == 0) {
        goto LABEL_22;
      }
      goto LABEL_21;
    }
  }
  else if ((*(_WORD *)(a1 + 124) & 0x100) == 0)
  {
    goto LABEL_20;
  }
  PB::TextFormatter::format(this, "width", *(float *)(a1 + 116));
  if ((*(_WORD *)(a1 + 124) & 0x200) != 0) {
LABEL_21:
  }
    PB::TextFormatter::format(this, "yaw", *(float *)(a1 + 120));
LABEL_22:

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227C64100(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    float v8 = (void **)(a1 + 56);
    uint64_t v9 = a1 + 72;
    __int16 v10 = (void **)(a1 + 32);
    uint64_t v11 = a1 + 48;
    __int16 v12 = (void **)(a1 + 8);
    uint64_t v13 = a1 + 24;
    while (1)
    {
      uint64_t v14 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v17 = 0;
      while (1)
      {
        unint64_t v18 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v19 = *(unsigned char *)(v14 + v2);
        v17 |= (unint64_t)(v19 & 0x7F) << v15;
        if ((v19 & 0x80) == 0) {
          break;
        }
        v15 += 7;
        unint64_t v2 = v18;
        BOOL v20 = v16++ > 8;
        if (v20) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v26 = v17 & 7;
      if (v26 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v17 >> 3))
      {
        case 1u:
          *(_WORD *)(a1 + 124) |= 1u;
          unint64_t v27 = *((void *)this + 1);
          if (v27 > 0xFFFFFFFFFFFFFFF7 || v27 + 8 > *((void *)this + 2)) {
            goto LABEL_212;
          }
          *(void *)(a1 + 80) = *(void *)(*(void *)this + v27);
          uint64_t v28 = *((void *)this + 1) + 8;
          goto LABEL_215;
        case 2u:
          *(_WORD *)(a1 + 124) |= 0x40u;
          unint64_t v29 = *((void *)this + 1);
          if (v29 > 0xFFFFFFFFFFFFFFFBLL || v29 + 4 > *((void *)this + 2)) {
            goto LABEL_212;
          }
          *(_DWORD *)(a1 + 108) = *(_DWORD *)(*(void *)this + v29);
          goto LABEL_214;
        case 3u:
          *(_WORD *)(a1 + 124) |= 0x20u;
          unint64_t v30 = *((void *)this + 1);
          if (v30 > 0xFFFFFFFFFFFFFFFBLL || v30 + 4 > *((void *)this + 2)) {
            goto LABEL_212;
          }
          *(_DWORD *)(a1 + 104) = *(_DWORD *)(*(void *)this + v30);
          goto LABEL_214;
        case 4u:
          *(_WORD *)(a1 + 124) |= 0x200u;
          unint64_t v31 = *((void *)this + 1);
          if (v31 > 0xFFFFFFFFFFFFFFFBLL || v31 + 4 > *((void *)this + 2)) {
            goto LABEL_212;
          }
          *(_DWORD *)(a1 + 120) = *(_DWORD *)(*(void *)this + v31);
          goto LABEL_214;
        case 5u:
          *(_WORD *)(a1 + 124) |= 2u;
          unint64_t v32 = *((void *)this + 1);
          if (v32 > 0xFFFFFFFFFFFFFFFBLL || v32 + 4 > *((void *)this + 2)) {
            goto LABEL_212;
          }
          *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v32);
          goto LABEL_214;
        case 6u:
          *(_WORD *)(a1 + 124) |= 0x80u;
          unint64_t v33 = *((void *)this + 1);
          unint64_t v34 = *((void *)this + 2);
          uint64_t v35 = *(void *)this;
          if (v33 <= 0xFFFFFFFFFFFFFFF5 && v33 + 10 <= v34)
          {
            char v36 = 0;
            unsigned int v37 = 0;
            uint64_t v38 = 0;
            do
            {
              unint64_t v39 = v33 + 1;
              *((void *)this + 1) = v33 + 1;
              char v40 = *(unsigned char *)(v35 + v33);
              v38 |= (unint64_t)(v40 & 0x7F) << v36;
              if ((v40 & 0x80) == 0) {
                goto LABEL_185;
              }
              v36 += 7;
              unint64_t v33 = v39;
              BOOL v20 = v37++ > 8;
            }
            while (!v20);
LABEL_141:
            LODWORD(v38) = 0;
            goto LABEL_185;
          }
          char v94 = 0;
          unsigned int v95 = 0;
          uint64_t v38 = 0;
          if (v34 <= v33) {
            unint64_t v34 = *((void *)this + 1);
          }
          while (2)
          {
            if (v34 == v33)
            {
              LODWORD(v38) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v96 = v33 + 1;
              char v97 = *(unsigned char *)(v35 + v33);
              *((void *)this + 1) = v96;
              v38 |= (unint64_t)(v97 & 0x7F) << v94;
              if (v97 < 0)
              {
                v94 += 7;
                unint64_t v33 = v96;
                BOOL v20 = v95++ > 8;
                if (v20) {
                  goto LABEL_141;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v38) = 0;
              }
            }
            break;
          }
LABEL_185:
          *(_DWORD *)(a1 + 112) = v38;
          goto LABEL_216;
        case 7u:
          *(_WORD *)(a1 + 124) |= 0x10u;
          unint64_t v41 = *((void *)this + 1);
          unint64_t v42 = *((void *)this + 2);
          uint64_t v43 = *(void *)this;
          if (v41 <= 0xFFFFFFFFFFFFFFF5 && v41 + 10 <= v42)
          {
            char v44 = 0;
            unsigned int v45 = 0;
            uint64_t v46 = 0;
            do
            {
              unint64_t v47 = v41 + 1;
              *((void *)this + 1) = v41 + 1;
              char v48 = *(unsigned char *)(v43 + v41);
              v46 |= (unint64_t)(v48 & 0x7F) << v44;
              if ((v48 & 0x80) == 0) {
                goto LABEL_188;
              }
              v44 += 7;
              unint64_t v41 = v47;
              BOOL v20 = v45++ > 8;
            }
            while (!v20);
LABEL_148:
            LODWORD(v46) = 0;
            goto LABEL_188;
          }
          char v98 = 0;
          unsigned int v99 = 0;
          uint64_t v46 = 0;
          if (v42 <= v41) {
            unint64_t v42 = *((void *)this + 1);
          }
          while (2)
          {
            if (v42 == v41)
            {
              LODWORD(v46) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v100 = v41 + 1;
              char v101 = *(unsigned char *)(v43 + v41);
              *((void *)this + 1) = v100;
              v46 |= (unint64_t)(v101 & 0x7F) << v98;
              if (v101 < 0)
              {
                v98 += 7;
                unint64_t v41 = v100;
                BOOL v20 = v99++ > 8;
                if (v20) {
                  goto LABEL_148;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v46) = 0;
              }
            }
            break;
          }
LABEL_188:
          *(_DWORD *)(a1 + 100) = v46;
          goto LABEL_216;
        case 8u:
          if (v26 != 2)
          {
            uint64_t v103 = *(char **)(a1 + 16);
            unint64_t v102 = *(void *)(a1 + 24);
            if ((unint64_t)v103 >= v102)
            {
              char v109 = (char *)*v12;
              uint64_t v110 = (v103 - (unsigned char *)*v12) >> 2;
              unint64_t v111 = v110 + 1;
              if ((unint64_t)(v110 + 1) >> 62) {
LABEL_226:
              }
                sub_227B8B89C();
              uint64_t v112 = v102 - (void)v109;
              if (v112 >> 1 > v111) {
                unint64_t v111 = v112 >> 1;
              }
              if ((unint64_t)v112 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v113 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v113 = v111;
              }
              if (v113)
              {
                char v114 = (char *)sub_227B8BBB8(v13, v113);
                char v109 = *(char **)(a1 + 8);
                uint64_t v103 = *(char **)(a1 + 16);
              }
              else
              {
                char v114 = 0;
              }
              unint64_t v127 = &v114[4 * v110];
              *(_DWORD *)unint64_t v127 = 0;
              unint64_t v104 = v127 + 4;
              while (v103 != v109)
              {
                int v128 = *((_DWORD *)v103 - 1);
                v103 -= 4;
                *((_DWORD *)v127 - 1) = v128;
                v127 -= 4;
              }
              *(void *)(a1 + 8) = v127;
              *(void *)(a1 + 16) = v104;
              *(void *)(a1 + 24) = &v114[4 * v113];
              if (v109) {
                operator delete(v109);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v103 = 0;
              unint64_t v104 = v103 + 4;
            }
            *(void *)(a1 + 16) = v104;
            goto LABEL_210;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v49 = *((void *)this + 1);
          unint64_t v50 = *((void *)this + 2);
          while (v49 < v50 && !*((unsigned char *)this + 24))
          {
            unsigned int v52 = *(char **)(a1 + 16);
            unint64_t v51 = *(void *)(a1 + 24);
            if ((unint64_t)v52 >= v51)
            {
              unint64_t v54 = (char *)*v12;
              uint64_t v55 = (v52 - (unsigned char *)*v12) >> 2;
              unint64_t v56 = v55 + 1;
              if ((unint64_t)(v55 + 1) >> 62) {
                goto LABEL_226;
              }
              uint64_t v57 = v51 - (void)v54;
              if (v57 >> 1 > v56) {
                unint64_t v56 = v57 >> 1;
              }
              if ((unint64_t)v57 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v58 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v58 = v56;
              }
              if (v58)
              {
                BOOL v59 = (char *)sub_227B8BBB8(v13, v58);
                unint64_t v54 = *(char **)(a1 + 8);
                unsigned int v52 = *(char **)(a1 + 16);
              }
              else
              {
                BOOL v59 = 0;
              }
              unint64_t v60 = &v59[4 * v55];
              *(_DWORD *)unint64_t v60 = 0;
              int v53 = v60 + 4;
              while (v52 != v54)
              {
                int v61 = *((_DWORD *)v52 - 1);
                v52 -= 4;
                *((_DWORD *)v60 - 1) = v61;
                v60 -= 4;
              }
              *(void *)(a1 + 8) = v60;
              *(void *)(a1 + 16) = v53;
              *(void *)(a1 + 24) = &v59[4 * v58];
              if (v54) {
                operator delete(v54);
              }
            }
            else
            {
              *(_DWORD *)unsigned int v52 = 0;
              int v53 = v52 + 4;
            }
            *(void *)(a1 + 16) = v53;
            unint64_t v62 = *((void *)this + 1);
            if (v62 > 0xFFFFFFFFFFFFFFFBLL || v62 + 4 > *((void *)this + 2)) {
              goto LABEL_155;
            }
            *(v53 - 1) = *(_DWORD *)(*(void *)this + v62);
            unint64_t v50 = *((void *)this + 2);
            unint64_t v49 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v49;
          }
          goto LABEL_156;
        case 9u:
          *(_WORD *)(a1 + 124) |= 8u;
          unint64_t v63 = *((void *)this + 1);
          if (v63 > 0xFFFFFFFFFFFFFFFBLL || v63 + 4 > *((void *)this + 2)) {
            goto LABEL_212;
          }
          *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v63);
          goto LABEL_214;
        case 0xAu:
          *(_WORD *)(a1 + 124) |= 0x100u;
          unint64_t v64 = *((void *)this + 1);
          if (v64 > 0xFFFFFFFFFFFFFFFBLL || v64 + 4 > *((void *)this + 2)) {
            goto LABEL_212;
          }
          *(_DWORD *)(a1 + 116) = *(_DWORD *)(*(void *)this + v64);
          goto LABEL_214;
        case 0xBu:
          *(_WORD *)(a1 + 124) |= 4u;
          unint64_t v65 = *((void *)this + 1);
          if (v65 > 0xFFFFFFFFFFFFFFFBLL || v65 + 4 > *((void *)this + 2)) {
            goto LABEL_212;
          }
          *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v65);
          goto LABEL_214;
        case 0xCu:
          if (v26 != 2)
          {
            unsigned int v106 = *(char **)(a1 + 40);
            unint64_t v105 = *(void *)(a1 + 48);
            if ((unint64_t)v106 >= v105)
            {
              char v115 = (char *)*v10;
              uint64_t v116 = (v106 - (unsigned char *)*v10) >> 2;
              unint64_t v117 = v116 + 1;
              if ((unint64_t)(v116 + 1) >> 62) {
LABEL_227:
              }
                sub_227B8B89C();
              uint64_t v118 = v105 - (void)v115;
              if (v118 >> 1 > v117) {
                unint64_t v117 = v118 >> 1;
              }
              if ((unint64_t)v118 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v119 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v119 = v117;
              }
              if (v119)
              {
                unint64_t v120 = (char *)sub_227B8BBB8(v11, v119);
                char v115 = *(char **)(a1 + 32);
                unsigned int v106 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v120 = 0;
              }
              unsigned int v129 = &v120[4 * v116];
              *(_DWORD *)unsigned int v129 = 0;
              unint64_t v104 = v129 + 4;
              while (v106 != v115)
              {
                int v130 = *((_DWORD *)v106 - 1);
                v106 -= 4;
                *((_DWORD *)v129 - 1) = v130;
                v129 -= 4;
              }
              *(void *)(a1 + 32) = v129;
              *(void *)(a1 + 40) = v104;
              *(void *)(a1 + 48) = &v120[4 * v119];
              if (v115) {
                operator delete(v115);
              }
            }
            else
            {
              *(_DWORD *)unsigned int v106 = 0;
              unint64_t v104 = v106 + 4;
            }
            *(void *)(a1 + 40) = v104;
            goto LABEL_210;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v66 = *((void *)this + 1);
          unint64_t v67 = *((void *)this + 2);
          while (v66 < v67 && !*((unsigned char *)this + 24))
          {
            unint64_t v69 = *(char **)(a1 + 40);
            unint64_t v68 = *(void *)(a1 + 48);
            if ((unint64_t)v69 >= v68)
            {
              unint64_t v71 = (char *)*v10;
              uint64_t v72 = (v69 - (unsigned char *)*v10) >> 2;
              unint64_t v73 = v72 + 1;
              if ((unint64_t)(v72 + 1) >> 62) {
                goto LABEL_227;
              }
              uint64_t v74 = v68 - (void)v71;
              if (v74 >> 1 > v73) {
                unint64_t v73 = v74 >> 1;
              }
              if ((unint64_t)v74 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v75 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v75 = v73;
              }
              if (v75)
              {
                uint64_t v76 = (char *)sub_227B8BBB8(v11, v75);
                unint64_t v71 = *(char **)(a1 + 32);
                unint64_t v69 = *(char **)(a1 + 40);
              }
              else
              {
                uint64_t v76 = 0;
              }
              unint64_t v77 = &v76[4 * v72];
              *(_DWORD *)unint64_t v77 = 0;
              uint64_t v70 = v77 + 4;
              while (v69 != v71)
              {
                int v78 = *((_DWORD *)v69 - 1);
                v69 -= 4;
                *((_DWORD *)v77 - 1) = v78;
                v77 -= 4;
              }
              *(void *)(a1 + 32) = v77;
              *(void *)(a1 + 40) = v70;
              *(void *)(a1 + 48) = &v76[4 * v75];
              if (v71) {
                operator delete(v71);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v69 = 0;
              uint64_t v70 = v69 + 4;
            }
            *(void *)(a1 + 40) = v70;
            unint64_t v79 = *((void *)this + 1);
            if (v79 > 0xFFFFFFFFFFFFFFFBLL || v79 + 4 > *((void *)this + 2)) {
              goto LABEL_155;
            }
            *(v70 - 1) = *(_DWORD *)(*(void *)this + v79);
            unint64_t v67 = *((void *)this + 2);
            unint64_t v66 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v66;
          }
          goto LABEL_156;
        case 0xDu:
          if (v26 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v80 = *((void *)this + 1);
            unint64_t v81 = *((void *)this + 2);
            while (v80 < v81 && !*((unsigned char *)this + 24))
            {
              unsigned int v83 = *(char **)(a1 + 64);
              unint64_t v82 = *(void *)(a1 + 72);
              if ((unint64_t)v83 >= v82)
              {
                unint64_t v85 = (char *)*v8;
                uint64_t v86 = (v83 - (unsigned char *)*v8) >> 2;
                unint64_t v87 = v86 + 1;
                if ((unint64_t)(v86 + 1) >> 62) {
                  goto LABEL_228;
                }
                uint64_t v88 = v82 - (void)v85;
                if (v88 >> 1 > v87) {
                  unint64_t v87 = v88 >> 1;
                }
                if ((unint64_t)v88 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v89 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v89 = v87;
                }
                if (v89)
                {
                  unint64_t v90 = (char *)sub_227B8BBB8(v9, v89);
                  unint64_t v85 = *(char **)(a1 + 56);
                  unsigned int v83 = *(char **)(a1 + 64);
                }
                else
                {
                  unint64_t v90 = 0;
                }
                char v91 = &v90[4 * v86];
                *(_DWORD *)char v91 = 0;
                int v84 = v91 + 4;
                while (v83 != v85)
                {
                  int v92 = *((_DWORD *)v83 - 1);
                  v83 -= 4;
                  *((_DWORD *)v91 - 1) = v92;
                  v91 -= 4;
                }
                *(void *)(a1 + 56) = v91;
                *(void *)(a1 + 64) = v84;
                *(void *)(a1 + 72) = &v90[4 * v89];
                if (v85) {
                  operator delete(v85);
                }
              }
              else
              {
                *(_DWORD *)unsigned int v83 = 0;
                int v84 = v83 + 4;
              }
              *(void *)(a1 + 64) = v84;
              unint64_t v93 = *((void *)this + 1);
              if (v93 > 0xFFFFFFFFFFFFFFFBLL || v93 + 4 > *((void *)this + 2))
              {
LABEL_155:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v84 - 1) = *(_DWORD *)(*(void *)this + v93);
              unint64_t v81 = *((void *)this + 2);
              unint64_t v80 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v80;
            }
LABEL_156:
            PB::Reader::recallMark();
          }
          else
          {
            unint64_t v108 = *(char **)(a1 + 64);
            unint64_t v107 = *(void *)(a1 + 72);
            if ((unint64_t)v108 >= v107)
            {
              unint64_t v121 = (char *)*v8;
              uint64_t v122 = (v108 - (unsigned char *)*v8) >> 2;
              unint64_t v123 = v122 + 1;
              if ((unint64_t)(v122 + 1) >> 62) {
LABEL_228:
              }
                sub_227B8B89C();
              uint64_t v124 = v107 - (void)v121;
              if (v124 >> 1 > v123) {
                unint64_t v123 = v124 >> 1;
              }
              if ((unint64_t)v124 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v125 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v125 = v123;
              }
              if (v125)
              {
                uint64_t v126 = (char *)sub_227B8BBB8(v9, v125);
                unint64_t v121 = *(char **)(a1 + 56);
                unint64_t v108 = *(char **)(a1 + 64);
              }
              else
              {
                uint64_t v126 = 0;
              }
              unint64_t v131 = &v126[4 * v122];
              *(_DWORD *)unint64_t v131 = 0;
              unint64_t v104 = v131 + 4;
              while (v108 != v121)
              {
                int v132 = *((_DWORD *)v108 - 1);
                v108 -= 4;
                *((_DWORD *)v131 - 1) = v132;
                v131 -= 4;
              }
              *(void *)(a1 + 56) = v131;
              *(void *)(a1 + 64) = v104;
              *(void *)(a1 + 72) = &v126[4 * v125];
              if (v121) {
                operator delete(v121);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v108 = 0;
              unint64_t v104 = v108 + 4;
            }
            *(void *)(a1 + 64) = v104;
LABEL_210:
            unint64_t v133 = *((void *)this + 1);
            if (v133 <= 0xFFFFFFFFFFFFFFFBLL && v133 + 4 <= *((void *)this + 2))
            {
              *(v104 - 1) = *(_DWORD *)(*(void *)this + v133);
LABEL_214:
              uint64_t v28 = *((void *)this + 1) + 4;
LABEL_215:
              *((void *)this + 1) = v28;
            }
            else
            {
LABEL_212:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_216:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_216;
      }
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v17 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v23 = v2 + 1;
      char v24 = *(unsigned char *)(v14 + v2);
      *((void *)this + 1) = v23;
      v17 |= (unint64_t)(v24 & 0x7F) << v21;
      if ((v24 & 0x80) == 0) {
        goto LABEL_21;
      }
      v21 += 7;
      unint64_t v2 = v23;
      if (v22++ >= 9)
      {
LABEL_20:
        unint64_t v17 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C64BEC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 124);
  if (v4)
  {
    double result = PB::Writer::write(this, *(double *)(result + 80));
    __int16 v4 = *(_WORD *)(v3 + 124);
    if ((v4 & 0x40) == 0)
    {
LABEL_3:
      if ((v4 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_25;
    }
  }
  else if ((v4 & 0x40) == 0)
  {
    goto LABEL_3;
  }
  double result = PB::Writer::write(this, *(float *)(v3 + 108));
  __int16 v4 = *(_WORD *)(v3 + 124);
  if ((v4 & 0x20) == 0)
  {
LABEL_4:
    if ((v4 & 0x200) == 0) {
      goto LABEL_5;
    }
    goto LABEL_26;
  }
LABEL_25:
  double result = PB::Writer::write(this, *(float *)(v3 + 104));
  __int16 v4 = *(_WORD *)(v3 + 124);
  if ((v4 & 0x200) == 0)
  {
LABEL_5:
    if ((v4 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_27;
  }
LABEL_26:
  double result = PB::Writer::write(this, *(float *)(v3 + 120));
  __int16 v4 = *(_WORD *)(v3 + 124);
  if ((v4 & 2) == 0)
  {
LABEL_6:
    if ((v4 & 0x80) == 0) {
      goto LABEL_7;
    }
LABEL_28:
    double result = PB::Writer::writeVarInt(this);
    if ((*(_WORD *)(v3 + 124) & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_27:
  double result = PB::Writer::write(this, *(float *)(v3 + 88));
  __int16 v4 = *(_WORD *)(v3 + 124);
  if ((v4 & 0x80) != 0) {
    goto LABEL_28;
  }
LABEL_7:
  if ((v4 & 0x10) != 0) {
LABEL_8:
  }
    double result = PB::Writer::writeVarInt(this);
LABEL_9:
  __int16 v5 = *(float **)(v3 + 8);
  __int16 v6 = *(float **)(v3 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    double result = PB::Writer::write(this, v7);
  }
  __int16 v8 = *(_WORD *)(v3 + 124);
  if ((v8 & 8) == 0)
  {
    if ((*(_WORD *)(v3 + 124) & 0x100) == 0) {
      goto LABEL_14;
    }
LABEL_31:
    double result = PB::Writer::write(this, *(float *)(v3 + 116));
    if ((*(_WORD *)(v3 + 124) & 4) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
  double result = PB::Writer::write(this, *(float *)(v3 + 96));
  __int16 v8 = *(_WORD *)(v3 + 124);
  if ((v8 & 0x100) != 0) {
    goto LABEL_31;
  }
LABEL_14:
  if ((v8 & 4) != 0) {
LABEL_15:
  }
    double result = PB::Writer::write(this, *(float *)(v3 + 92));
LABEL_16:
  uint64_t v9 = *(float **)(v3 + 32);
  __int16 v10 = *(float **)(v3 + 40);
  while (v9 != v10)
  {
    float v11 = *v9++;
    double result = PB::Writer::write(this, v11);
  }
  uint64_t v13 = *(float **)(v3 + 56);
  __int16 v12 = *(float **)(v3 + 64);
  while (v13 != v12)
  {
    float v14 = *v13++;
    double result = PB::Writer::write(this, v14);
  }
  return result;
}

uint64_t sub_227C64D90(uint64_t result)
{
  *(void *)double result = &unk_26DC27CA0;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

void sub_227C64DB8(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C64DF0(uint64_t result, uint64_t a2)
{
  *(void *)double result = &unk_26DC27CA0;
  *(_DWORD *)(result + 56) = 0;
  char v2 = *(unsigned char *)(a2 + 56);
  if ((v2 & 4) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 24);
    char v3 = 4;
    *(unsigned char *)(result + 56) = 4;
    *(void *)(result + 24) = v4;
    char v2 = *(unsigned char *)(a2 + 56);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 56) & 8) != 0)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 32);
    v3 |= 8u;
    *(unsigned char *)(result + 56) = v3;
    *(void *)(result + 32) = v5;
    char v2 = *(unsigned char *)(a2 + 56);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(result + 56) = v3;
    *(void *)(result + 16) = v6;
    char v2 = *(unsigned char *)(a2 + 56);
    if ((v2 & 1) == 0)
    {
LABEL_8:
      if ((v2 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_14;
    }
  }
  else if ((v2 & 1) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(unsigned char *)(result + 56) = v3;
  *(void *)(result + 8) = v7;
  char v2 = *(unsigned char *)(a2 + 56);
  if ((v2 & 0x10) == 0)
  {
LABEL_9:
    if ((v2 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t v8 = *(void *)(a2 + 40);
  v3 |= 0x10u;
  *(unsigned char *)(result + 56) = v3;
  *(void *)(result + 40) = v8;
  char v2 = *(unsigned char *)(a2 + 56);
  if ((v2 & 0x40) == 0)
  {
LABEL_10:
    if ((v2 & 0x20) == 0) {
      return result;
    }
LABEL_16:
    int v10 = *(_DWORD *)(a2 + 48);
    *(unsigned char *)(result + 56) = v3 | 0x20;
    *(_DWORD *)(result + 48) = v10;
    return result;
  }
LABEL_15:
  char v9 = *(unsigned char *)(a2 + 52);
  v3 |= 0x40u;
  *(unsigned char *)(result + 56) = v3;
  *(unsigned char *)(result + 52) = v9;
  if ((*(unsigned char *)(a2 + 56) & 0x20) != 0) {
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_227C64EE0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 56);
  if ((v5 & 0x20) != 0)
  {
    PB::TextFormatter::format(this, "batchedLocationFixType");
    char v5 = *(unsigned char *)(a1 + 56);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(a1 + 56) & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "distOdom", *(double *)(a1 + 8));
  char v5 = *(unsigned char *)(a1 + 56);
  if ((v5 & 2) == 0)
  {
LABEL_4:
    if ((v5 & 0x40) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(this, "distPed", *(double *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 56);
  if ((v5 & 0x40) == 0)
  {
LABEL_5:
    if ((v5 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  PB::TextFormatter::format(this, "isValid");
  char v5 = *(unsigned char *)(a1 + 56);
  if ((v5 & 4) == 0)
  {
LABEL_6:
    if ((v5 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "timeStart", *(double *)(a1 + 24));
  char v5 = *(unsigned char *)(a1 + 56);
  if ((v5 & 8) == 0)
  {
LABEL_7:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_17:
  PB::TextFormatter::format(this, "timeStop", *(double *)(a1 + 32));
  if ((*(unsigned char *)(a1 + 56) & 0x10) != 0) {
LABEL_8:
  }
    PB::TextFormatter::format(this, "uncOdom", *(double *)(a1 + 40));
LABEL_9:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C65004(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 56) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_38;
              }
              *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
              goto LABEL_58;
            case 2u:
              *(unsigned char *)(a1 + 56) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_38;
              }
              *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
              goto LABEL_58;
            case 3u:
              *(unsigned char *)(a1 + 56) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_38;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_58;
            case 4u:
              *(unsigned char *)(a1 + 56) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_38;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_58;
            case 5u:
              *(unsigned char *)(a1 + 56) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
LABEL_58:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_38:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_64;
            case 6u:
              *(unsigned char *)(a1 + 56) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v22 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v21 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v22 = v21 != 0;
              }
              *(unsigned char *)(a1 + 52) = v22;
              goto LABEL_64;
            case 7u:
              *(unsigned char *)(a1 + 56) |= 0x20u;
              unint64_t v23 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v24 = *(void *)this;
              if (v23 > 0xFFFFFFFFFFFFFFF5 || v23 + 10 > v2)
              {
                char v29 = 0;
                unsigned int v30 = 0;
                uint64_t v27 = 0;
                if (v2 <= v23) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v23)
                  {
                    LODWORD(v27) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_63;
                  }
                  unint64_t v31 = v23++;
                  char v32 = *(unsigned char *)(v24 + v31);
                  *((void *)this + 1) = v23;
                  v27 |= (unint64_t)(v32 & 0x7F) << v29;
                  if ((v32 & 0x80) == 0) {
                    break;
                  }
                  v29 += 7;
                  BOOL v14 = v30++ > 8;
                  if (v14)
                  {
                    LODWORD(v27) = 0;
LABEL_62:
                    unint64_t v2 = v31 + 1;
                    goto LABEL_63;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v27) = 0;
                }
                goto LABEL_62;
              }
              char v25 = 0;
              unsigned int v26 = 0;
              uint64_t v27 = 0;
              do
              {
                unint64_t v2 = v23 + 1;
                *((void *)this + 1) = v23 + 1;
                char v28 = *(unsigned char *)(v24 + v23);
                v27 |= (unint64_t)(v28 & 0x7F) << v25;
                if ((v28 & 0x80) == 0) {
                  goto LABEL_63;
                }
                v25 += 7;
                unint64_t v23 = v2;
                BOOL v14 = v26++ > 8;
              }
              while (!v14);
              LODWORD(v27) = 0;
LABEL_63:
              *(_DWORD *)(a1 + 48) = v27;
LABEL_64:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_64;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C653F0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 56);
  if ((v4 & 4) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 24));
    char v4 = *(unsigned char *)(v3 + 56);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(result + 56) & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32));
  char v4 = *(unsigned char *)(v3 + 56);
  if ((v4 & 2) == 0)
  {
LABEL_4:
    if ((v4 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  char v4 = *(unsigned char *)(v3 + 56);
  if ((v4 & 1) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
  char v4 = *(unsigned char *)(v3 + 56);
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 0x40) == 0) {
      goto LABEL_7;
    }
LABEL_14:
    uint64_t result = PB::Writer::write(this);
    if ((*(unsigned char *)(v3 + 56) & 0x20) == 0) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_13:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40));
  char v4 = *(unsigned char *)(v3 + 56);
  if ((v4 & 0x40) != 0) {
    goto LABEL_14;
  }
LABEL_7:
  if ((v4 & 0x20) == 0) {
    return result;
  }
LABEL_15:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227C654EC(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC27CD8;
  *(_DWORD *)(result + 116) = 0;
  return result;
}

void sub_227C65514(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C6554C(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC27CD8;
  *(_DWORD *)(result + 116) = 0;
  __int16 v2 = *(_WORD *)(a2 + 116);
  if ((v2 & 0x80) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 64);
    __int16 v3 = 128;
    *(_WORD *)(result + 116) = 128;
    *(void *)(result + 64) = v4;
    __int16 v2 = *(_WORD *)(a2 + 116);
    if ((v2 & 0x2000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((*(_WORD *)(a2 + 116) & 0x2000) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 108);
    v3 |= 0x2000u;
    *(_WORD *)(result + 116) = v3;
    *(_DWORD *)(result + 108) = v5;
    __int16 v2 = *(_WORD *)(a2 + 116);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    uint64_t v6 = *(void *)(a2 + 24);
    v3 |= 4u;
    *(_WORD *)(result + 116) = v3;
    *(void *)(result + 24) = v6;
    __int16 v2 = *(_WORD *)(a2 + 116);
    if ((v2 & 0x40) == 0)
    {
LABEL_8:
      if ((v2 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_23;
    }
  }
  else if ((v2 & 0x40) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 56);
  v3 |= 0x40u;
  *(_WORD *)(result + 116) = v3;
  *(void *)(result + 56) = v7;
  __int16 v2 = *(_WORD *)(a2 + 116);
  if ((v2 & 0x10) == 0)
  {
LABEL_9:
    if ((v2 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v8 = *(void *)(a2 + 40);
  v3 |= 0x10u;
  *(_WORD *)(result + 116) = v3;
  *(void *)(result + 40) = v8;
  __int16 v2 = *(_WORD *)(a2 + 116);
  if ((v2 & 1) == 0)
  {
LABEL_10:
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t v9 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(result + 116) = v3;
  *(void *)(result + 8) = v9;
  __int16 v2 = *(_WORD *)(a2 + 116);
  if ((v2 & 2) == 0)
  {
LABEL_11:
    if ((v2 & 0x800) == 0) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t v10 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(result + 116) = v3;
  *(void *)(result + 16) = v10;
  __int16 v2 = *(_WORD *)(a2 + 116);
  if ((v2 & 0x800) == 0)
  {
LABEL_12:
    if ((v2 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v11 = *(void *)(a2 + 96);
  v3 |= 0x800u;
  *(_WORD *)(result + 116) = v3;
  *(void *)(result + 96) = v11;
  __int16 v2 = *(_WORD *)(a2 + 116);
  if ((v2 & 8) == 0)
  {
LABEL_13:
    if ((v2 & 0x100) == 0) {
      goto LABEL_14;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t v12 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_WORD *)(result + 116) = v3;
  *(void *)(result + 32) = v12;
  __int16 v2 = *(_WORD *)(a2 + 116);
  if ((v2 & 0x100) == 0)
  {
LABEL_14:
    if ((v2 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t v13 = *(void *)(a2 + 72);
  v3 |= 0x100u;
  *(_WORD *)(result + 116) = v3;
  *(void *)(result + 72) = v13;
  __int16 v2 = *(_WORD *)(a2 + 116);
  if ((v2 & 0x20) == 0)
  {
LABEL_15:
    if ((v2 & 0x400) == 0) {
      goto LABEL_16;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t v14 = *(void *)(a2 + 48);
  v3 |= 0x20u;
  *(_WORD *)(result + 116) = v3;
  *(void *)(result + 48) = v14;
  __int16 v2 = *(_WORD *)(a2 + 116);
  if ((v2 & 0x400) == 0)
  {
LABEL_16:
    if ((v2 & 0x200) == 0) {
      goto LABEL_17;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t v15 = *(void *)(a2 + 88);
  v3 |= 0x400u;
  *(_WORD *)(result + 116) = v3;
  *(void *)(result + 88) = v15;
  __int16 v2 = *(_WORD *)(a2 + 116);
  if ((v2 & 0x200) == 0)
  {
LABEL_17:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t v16 = *(void *)(a2 + 80);
  v3 |= 0x200u;
  *(_WORD *)(result + 116) = v3;
  *(void *)(result + 80) = v16;
  __int16 v2 = *(_WORD *)(a2 + 116);
  if ((v2 & 0x8000) == 0)
  {
LABEL_18:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_33;
  }
LABEL_32:
  char v17 = *(unsigned char *)(a2 + 113);
  v3 |= 0x8000u;
  *(_WORD *)(result + 116) = v3;
  *(unsigned char *)(result + 113) = v17;
  __int16 v2 = *(_WORD *)(a2 + 116);
  if ((v2 & 0x4000) == 0)
  {
LABEL_19:
    if ((v2 & 0x1000) == 0) {
      return result;
    }
LABEL_34:
    int v19 = *(_DWORD *)(a2 + 104);
    *(_WORD *)(result + 116) = v3 | 0x1000;
    *(_DWORD *)(result + 104) = v19;
    return result;
  }
LABEL_33:
  char v18 = *(unsigned char *)(a2 + 112);
  v3 |= 0x4000u;
  *(_WORD *)(result + 116) = v3;
  *(unsigned char *)(result + 112) = v18;
  if ((*(_WORD *)(a2 + 116) & 0x1000) != 0) {
    goto LABEL_34;
  }
  return result;
}

uint64_t sub_227C65738(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 116);
  if (v5)
  {
    PB::TextFormatter::format(this, "activeTime", *(double *)(a1 + 8));
    __int16 v5 = *(_WORD *)(a1 + 116);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_23;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "currentPace", *(double *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 116);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "distance", *(double *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 116);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "duration", *(double *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 116);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "firstStepTime", *(double *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 116);
  if ((v5 & 0x1000) == 0)
  {
LABEL_7:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "gradeType");
  __int16 v5 = *(_WORD *)(a1 + 116);
  if ((v5 & 0x4000) == 0)
  {
LABEL_8:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "isIndoor");
  __int16 v5 = *(_WORD *)(a1 + 116);
  if ((v5 & 0x8000) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "isMotionOverrideSet");
  __int16 v5 = *(_WORD *)(a1 + 116);
  if ((v5 & 0x20) == 0)
  {
LABEL_10:
    if ((v5 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(this, "metsWR", *(double *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 116);
  if ((v5 & 0x40) == 0)
  {
LABEL_11:
    if ((v5 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "rawDistance", *(double *)(a1 + 56));
  __int16 v5 = *(_WORD *)(a1 + 116);
  if ((v5 & 0x80) == 0)
  {
LABEL_12:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(this, "startTime", *(double *)(a1 + 64));
  __int16 v5 = *(_WORD *)(a1 + 116);
  if ((v5 & 0x2000) == 0)
  {
LABEL_13:
    if ((v5 & 0x100) == 0) {
      goto LABEL_14;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(this, "steps");
  __int16 v5 = *(_WORD *)(a1 + 116);
  if ((v5 & 0x100) == 0)
  {
LABEL_14:
    if ((v5 & 0x200) == 0) {
      goto LABEL_15;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(this, "stepsDuration", *(double *)(a1 + 72));
  __int16 v5 = *(_WORD *)(a1 + 116);
  if ((v5 & 0x200) == 0)
  {
LABEL_15:
    if ((v5 & 0x400) == 0) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "truthMetsGradeCorrected", *(double *)(a1 + 80));
  __int16 v5 = *(_WORD *)(a1 + 116);
  if ((v5 & 0x400) == 0)
  {
LABEL_16:
    if ((v5 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
LABEL_35:
  PB::TextFormatter::format(this, "truthMetsStrollerCorrected", *(double *)(a1 + 88));
  if ((*(_WORD *)(a1 + 116) & 0x800) != 0) {
LABEL_17:
  }
    PB::TextFormatter::format(this, "verticalSpeed", *(double *)(a1 + 96));
LABEL_18:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C6597C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 116) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_66;
              }
              *(void *)(a1 + 64) = *(void *)(*(void *)this + v2);
              goto LABEL_97;
            case 2u:
              *(_WORD *)(a1 + 116) |= 0x2000u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v37 = 0;
                unsigned int v38 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_102;
                  }
                  unint64_t v39 = v21++;
                  char v40 = *(unsigned char *)(v22 + v39);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v40 & 0x7F) << v37;
                  if ((v40 & 0x80) == 0) {
                    break;
                  }
                  v37 += 7;
                  BOOL v14 = v38++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_101:
                    unint64_t v2 = v39 + 1;
                    goto LABEL_102;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_101;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_102;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_102:
              *(_DWORD *)(a1 + 108) = v25;
              goto LABEL_108;
            case 3u:
              *(_WORD *)(a1 + 116) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_66;
              }
              *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
              goto LABEL_97;
            case 4u:
              *(_WORD *)(a1 + 116) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_66;
              }
              *(void *)(a1 + 56) = *(void *)(*(void *)this + v2);
              goto LABEL_97;
            case 5u:
              *(_WORD *)(a1 + 116) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_66;
              }
              *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
              goto LABEL_97;
            case 6u:
              *(_WORD *)(a1 + 116) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_66;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_97;
            case 7u:
              *(_WORD *)(a1 + 116) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_66;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_97;
            case 8u:
              *(_WORD *)(a1 + 116) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_66;
              }
              *(void *)(a1 + 96) = *(void *)(*(void *)this + v2);
              goto LABEL_97;
            case 9u:
              *(_WORD *)(a1 + 116) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_66;
              }
              *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
              goto LABEL_97;
            case 0xAu:
              *(_WORD *)(a1 + 116) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_66;
              }
              *(void *)(a1 + 72) = *(void *)(*(void *)this + v2);
              goto LABEL_97;
            case 0xBu:
              *(_WORD *)(a1 + 116) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_66;
              }
              *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
              goto LABEL_97;
            case 0xCu:
              *(_WORD *)(a1 + 116) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_66;
              }
              *(void *)(a1 + 88) = *(void *)(*(void *)this + v2);
              goto LABEL_97;
            case 0xDu:
              *(_WORD *)(a1 + 116) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 80) = *(void *)(*(void *)this + v2);
LABEL_97:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_66:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_108;
            case 0xEu:
              *(_WORD *)(a1 + 116) |= 0x8000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v28 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v27 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v28 = v27 != 0;
              }
              *(unsigned char *)(a1 + 113) = v28;
              goto LABEL_108;
            case 0xFu:
              *(_WORD *)(a1 + 116) |= 0x4000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v30 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v29 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v30 = v29 != 0;
              }
              *(unsigned char *)(a1 + 112) = v30;
              goto LABEL_108;
            case 0x10u:
              *(_WORD *)(a1 + 116) |= 0x1000u;
              unint64_t v31 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v32 = *(void *)this;
              if (v31 > 0xFFFFFFFFFFFFFFF5 || v31 + 10 > v2)
              {
                char v41 = 0;
                unsigned int v42 = 0;
                uint64_t v35 = 0;
                if (v2 <= v31) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v31)
                  {
                    LODWORD(v35) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_107;
                  }
                  unint64_t v43 = v31++;
                  char v44 = *(unsigned char *)(v32 + v43);
                  *((void *)this + 1) = v31;
                  v35 |= (unint64_t)(v44 & 0x7F) << v41;
                  if ((v44 & 0x80) == 0) {
                    break;
                  }
                  v41 += 7;
                  BOOL v14 = v42++ > 8;
                  if (v14)
                  {
                    LODWORD(v35) = 0;
LABEL_106:
                    unint64_t v2 = v43 + 1;
                    goto LABEL_107;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v35) = 0;
                }
                goto LABEL_106;
              }
              char v33 = 0;
              unsigned int v34 = 0;
              uint64_t v35 = 0;
              do
              {
                unint64_t v2 = v31 + 1;
                *((void *)this + 1) = v31 + 1;
                char v36 = *(unsigned char *)(v32 + v31);
                v35 |= (unint64_t)(v36 & 0x7F) << v33;
                if ((v36 & 0x80) == 0) {
                  goto LABEL_107;
                }
                v33 += 7;
                unint64_t v31 = v2;
                BOOL v14 = v34++ > 8;
              }
              while (!v14);
              LODWORD(v35) = 0;
LABEL_107:
              *(_DWORD *)(a1 + 104) = v35;
LABEL_108:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_108;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C66044(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 116);
  if ((v4 & 0x80) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 64));
    __int16 v4 = *(_WORD *)(v3 + 116);
    if ((v4 & 0x2000) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((*(_WORD *)(result + 116) & 0x2000) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 116);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 0x40) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24));
  __int16 v4 = *(_WORD *)(v3 + 116);
  if ((v4 & 0x40) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 56));
  __int16 v4 = *(_WORD *)(v3 + 116);
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40));
  __int16 v4 = *(_WORD *)(v3 + 116);
  if ((v4 & 1) == 0)
  {
LABEL_7:
    if ((v4 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
  __int16 v4 = *(_WORD *)(v3 + 116);
  if ((v4 & 2) == 0)
  {
LABEL_8:
    if ((v4 & 0x800) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  __int16 v4 = *(_WORD *)(v3 + 116);
  if ((v4 & 0x800) == 0)
  {
LABEL_9:
    if ((v4 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 96));
  __int16 v4 = *(_WORD *)(v3 + 116);
  if ((v4 & 8) == 0)
  {
LABEL_10:
    if ((v4 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32));
  __int16 v4 = *(_WORD *)(v3 + 116);
  if ((v4 & 0x100) == 0)
  {
LABEL_11:
    if ((v4 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 72));
  __int16 v4 = *(_WORD *)(v3 + 116);
  if ((v4 & 0x20) == 0)
  {
LABEL_12:
    if ((v4 & 0x400) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48));
  __int16 v4 = *(_WORD *)(v3 + 116);
  if ((v4 & 0x400) == 0)
  {
LABEL_13:
    if ((v4 & 0x200) == 0) {
      goto LABEL_14;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 88));
  __int16 v4 = *(_WORD *)(v3 + 116);
  if ((v4 & 0x200) == 0)
  {
LABEL_14:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 80));
  __int16 v4 = *(_WORD *)(v3 + 116);
  if ((v4 & 0x8000) == 0)
  {
LABEL_15:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_16;
    }
LABEL_32:
    uint64_t result = PB::Writer::write(this);
    if ((*(_WORD *)(v3 + 116) & 0x1000) == 0) {
      return result;
    }
    goto LABEL_33;
  }
LABEL_31:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 116);
  if ((v4 & 0x4000) != 0) {
    goto LABEL_32;
  }
LABEL_16:
  if ((v4 & 0x1000) == 0) {
    return result;
  }
LABEL_33:

  return PB::Writer::writeVarInt(this);
}

double sub_227C6623C(void *a1)
{
  *a1 = &unk_26DC27D10;
  *(void *)&double result = 0xFFFFFFFFLL;
  *(void *)((char *)a1 + 28) = 0xFFFFFFFFLL;
  return result;
}

void sub_227C66268(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C662A0(uint64_t result, uint64_t a2)
{
  *(void *)double result = &unk_26DC27D10;
  *(void *)(result + 28) = 0xFFFFFFFFLL;
  char v2 = *(unsigned char *)(a2 + 32);
  if ((v2 & 2) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 16);
    char v3 = 2;
    *(unsigned char *)(result + 32) = 2;
    *(void *)(result + 16) = v4;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if (*(unsigned char *)(a2 + 32))
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 8);
    v3 |= 1u;
    *(unsigned char *)(result + 32) = v3;
    *(void *)(result + 8) = v5;
    char v2 = *(unsigned char *)(a2 + 32);
  }
LABEL_6:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      return result;
    }
LABEL_10:
    int v7 = *(_DWORD *)(a2 + 28);
    *(unsigned char *)(result + 32) = v3 | 8;
    *(_DWORD *)(result + 28) = v7;
    return result;
  }
  int v6 = *(_DWORD *)(a2 + 24);
  v3 |= 4u;
  *(unsigned char *)(result + 32) = v3;
  *(_DWORD *)(result + 24) = v6;
  if ((*(unsigned char *)(a2 + 32) & 8) != 0) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_227C66340(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "radius", *(float *)(a1 + 24));
    char v5 = *(unsigned char *)(a1 + 32);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 32) & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "timestampExit", *(double *)(a1 + 8));
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 2) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "timestampSet", *(double *)(a1 + 16));
  if ((*(unsigned char *)(a1 + 32) & 8) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "userResponse");
LABEL_6:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C66404(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 32) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_33;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_30;
            case 2u:
              *(unsigned char *)(a1 + 32) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_33;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
LABEL_30:
              unint64_t v2 = *((void *)this + 1) + 8;
              goto LABEL_49;
            case 3u:
              *(unsigned char *)(a1 + 32) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
                unint64_t v2 = *((void *)this + 1) + 4;
LABEL_49:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_33:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_55;
            case 4u:
              *(unsigned char *)(a1 + 32) |= 8u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v27 = 0;
                unsigned int v28 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_54;
                  }
                  unint64_t v29 = v21++;
                  char v30 = *(unsigned char *)(v22 + v29);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v30 & 0x7F) << v27;
                  if ((v30 & 0x80) == 0) {
                    break;
                  }
                  v27 += 7;
                  BOOL v14 = v28++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_53:
                    unint64_t v2 = v29 + 1;
                    goto LABEL_54;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_53;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_54;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_54:
              *(_DWORD *)(a1 + 28) = v25;
LABEL_55:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_55;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C66738(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 16));
    char v4 = *(unsigned char *)(v3 + 32);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
      if ((*(unsigned char *)(v3 + 32) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 32) & 1) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 8) == 0) {
    return result;
  }
LABEL_9:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227C667E0(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC27D48;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

void sub_227C66808(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227C66840(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC27D48;
  *(_DWORD *)(a1 + 56) = 0;
  char v2 = *(unsigned char *)(a2 + 56);
  if ((v2 & 8) != 0)
  {
    double result = *(double *)(a2 + 32);
    char v3 = 8;
    *(unsigned char *)(a1 + 56) = 8;
    *(double *)(a1 + 32) = result;
    char v2 = *(unsigned char *)(a2 + 56);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 56) & 4) != 0)
  {
LABEL_5:
    double result = *(double *)(a2 + 24);
    v3 |= 4u;
    *(unsigned char *)(a1 + 56) = v3;
    *(double *)(a1 + 24) = result;
    char v2 = *(unsigned char *)(a2 + 56);
  }
LABEL_6:
  if ((v2 & 0x10) != 0)
  {
    double result = *(double *)(a2 + 40);
    v3 |= 0x10u;
    *(unsigned char *)(a1 + 56) = v3;
    *(double *)(a1 + 40) = result;
    char v2 = *(unsigned char *)(a2 + 56);
    if ((v2 & 2) == 0)
    {
LABEL_8:
      if ((v2 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_13;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_8;
  }
  double result = *(double *)(a2 + 16);
  v3 |= 2u;
  *(unsigned char *)(a1 + 56) = v3;
  *(double *)(a1 + 16) = result;
  char v2 = *(unsigned char *)(a2 + 56);
  if ((v2 & 0x20) == 0)
  {
LABEL_9:
    if ((v2 & 1) == 0) {
      return result;
    }
LABEL_14:
    double result = *(double *)(a2 + 8);
    *(unsigned char *)(a1 + 56) = v3 | 1;
    *(double *)(a1 + 8) = result;
    return result;
  }
LABEL_13:
  double result = *(double *)(a2 + 48);
  v3 |= 0x20u;
  *(unsigned char *)(a1 + 56) = v3;
  *(double *)(a1 + 48) = result;
  if (*(unsigned char *)(a2 + 56)) {
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_227C66914(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 56);
  if (v5)
  {
    PB::TextFormatter::format(this, "complexHandMotionPercentage", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 56);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((*(unsigned char *)(a1 + 56) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "confidence", *(double *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 56);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  PB::TextFormatter::format(this, "endTime", *(double *)(a1 + 24));
  char v5 = *(unsigned char *)(a1 + 56);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(this, "startTime", *(double *)(a1 + 32));
  char v5 = *(unsigned char *)(a1 + 56);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_15:
  PB::TextFormatter::format(this, "straightnessMetric", *(double *)(a1 + 40));
  if ((*(unsigned char *)(a1 + 56) & 0x20) != 0) {
LABEL_7:
  }
    PB::TextFormatter::format(this, "walkPercentage", *(double *)(a1 + 48));
LABEL_8:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C66A18(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 56) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_41;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
          goto LABEL_43;
        case 2u:
          *(unsigned char *)(a1 + 56) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_41;
          }
          *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
          goto LABEL_43;
        case 3u:
          *(unsigned char *)(a1 + 56) |= 0x10u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_41;
          }
          *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
          goto LABEL_43;
        case 4u:
          *(unsigned char *)(a1 + 56) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_41;
          }
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
          goto LABEL_43;
        case 5u:
          *(unsigned char *)(a1 + 56) |= 0x20u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_41;
          }
          *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
          goto LABEL_43;
        case 6u:
          *(unsigned char *)(a1 + 56) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
LABEL_43:
            unint64_t v2 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_41:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C66D08(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 56);
  if ((v4 & 8) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 32));
    char v4 = *(unsigned char *)(v3 + 56);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((*(unsigned char *)(result + 56) & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24));
  char v4 = *(unsigned char *)(v3 + 56);
  if ((v4 & 0x10) == 0)
  {
LABEL_4:
    if ((v4 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40));
  char v4 = *(unsigned char *)(v3 + 56);
  if ((v4 & 2) == 0)
  {
LABEL_5:
    if ((v4 & 0x20) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48));
    if ((*(unsigned char *)(v3 + 56) & 1) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_11:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  char v4 = *(unsigned char *)(v3 + 56);
  if ((v4 & 0x20) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v4 & 1) == 0) {
    return result;
  }
LABEL_13:
  double v5 = *(double *)(v3 + 8);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227C66DE8(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC27D80;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_227C66E10(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C66E48(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC27D80;
  *(_DWORD *)(result + 20) = 0;
  if (*(unsigned char *)(a2 + 20))
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 20) = 1;
    *(void *)(result + 8) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 20) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
LABEL_5:
    int v4 = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(result + 20) = v2;
    *(_DWORD *)(result + 16) = v4;
  }
  return result;
}

uint64_t sub_227C66EAC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "motionState");
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if (v5) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C66F28(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v20 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v21 = *(void *)this;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v24 = 0;
          if (v2 <= v20) {
            unint64_t v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v20)
            {
              LODWORD(v24) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_47;
            }
            unint64_t v29 = v20++;
            char v30 = *(unsigned char *)(v21 + v29);
            *((void *)this + 1) = v20;
            v24 |= (unint64_t)(v30 & 0x7F) << v27;
            if ((v30 & 0x80) == 0) {
              break;
            }
            v27 += 7;
            BOOL v14 = v28++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              goto LABEL_46;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v24) = 0;
          }
LABEL_46:
          unint64_t v2 = v29 + 1;
        }
        else
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          while (1)
          {
            unint64_t v2 = v20 + 1;
            *((void *)this + 1) = v20 + 1;
            char v25 = *(unsigned char *)(v21 + v20);
            v24 |= (unint64_t)(v25 & 0x7F) << v22;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v22 += 7;
            unint64_t v20 = v2;
            BOOL v14 = v23++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              break;
            }
          }
        }
LABEL_47:
        *(_DWORD *)(a1 + 16) = v24;
      }
      else if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C671B8(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    return PB::Writer::writeVarInt(this);
  }
  return result;
}

double sub_227C67224(uint64_t a1)
{
  *(void *)a1 = &unk_26DC27DB8;
  *(_DWORD *)(a1 + 48) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  return result;
}

void sub_227C67254(PB::Base *this)
{
  *(void *)this = &unk_26DC27DB8;
  uint64_t v2 = *((void *)this + 4);
  *((void *)this + 4) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 2) = v3;
    operator delete(v3);
  }

  PB::Base::~Base(this);
}

void sub_227C672E8(PB::Base *a1)
{
  sub_227C67254(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C67320(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC27DB8;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_DWORD *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  if (*(void *)(a2 + 32)) {
    operator new();
  }
  if (a1 != a2) {
    sub_227B8BA68((char *)(a1 + 8), *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  char v4 = *(unsigned char *)(a2 + 48);
  if ((v4 & 2) != 0)
  {
    int v5 = *(_DWORD *)(a2 + 44);
    *(unsigned char *)(a1 + 48) |= 2u;
    *(_DWORD *)(a1 + 44) = v5;
    char v4 = *(unsigned char *)(a2 + 48);
  }
  if (v4)
  {
    int v6 = *(_DWORD *)(a2 + 40);
    *(unsigned char *)(a1 + 48) |= 1u;
    *(_DWORD *)(a1 + 40) = v6;
  }
  return a1;
}

uint64_t sub_227C67438(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(float **)(a1 + 8);
  int v6 = *(float **)(a1 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    PB::TextFormatter::format(this, "gyroBias", v7);
  }
  uint64_t v8 = *(void *)(a1 + 32);
  if (v8) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v8 + 32))(v8, this, "super");
  }
  char v9 = *(unsigned char *)(a1 + 48);
  if (v9)
  {
    PB::TextFormatter::format(this, "temperatureGyro", *(float *)(a1 + 40));
    char v9 = *(unsigned char *)(a1 + 48);
  }
  if ((v9 & 2) != 0) {
    PB::TextFormatter::format(this, "temperatureGyroBias", *(float *)(a1 + 44));
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227C67528(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = (void **)(a1 + 8);
    uint64_t v9 = a1 + 24;
    while (1)
    {
      uint64_t v10 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v11 = 0;
      unsigned int v12 = 0;
      unint64_t v13 = 0;
      while (1)
      {
        unint64_t v14 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v15 = *(unsigned char *)(v10 + v2);
        v13 |= (unint64_t)(v15 & 0x7F) << v11;
        if ((v15 & 0x80) == 0) {
          break;
        }
        v11 += 7;
        unint64_t v2 = v14;
        if (v12++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      if ((v13 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v13 >> 3))
      {
        case 1u:
          operator new();
        case 2u:
          if ((v13 & 7) == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v22 = *((void *)this + 1);
            unint64_t v23 = *((void *)this + 2);
            while (v22 < v23 && !*((unsigned char *)this + 24))
            {
              char v25 = *(char **)(a1 + 16);
              unint64_t v24 = *(void *)(a1 + 24);
              if ((unint64_t)v25 >= v24)
              {
                char v27 = (char *)*v8;
                uint64_t v28 = (v25 - (unsigned char *)*v8) >> 2;
                unint64_t v29 = v28 + 1;
                if ((unint64_t)(v28 + 1) >> 62) {
                  goto LABEL_87;
                }
                uint64_t v30 = v24 - (void)v27;
                if (v30 >> 1 > v29) {
                  unint64_t v29 = v30 >> 1;
                }
                if ((unint64_t)v30 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v31 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v31 = v29;
                }
                if (v31)
                {
                  uint64_t v32 = (char *)sub_227B8BBB8(v9, v31);
                  char v27 = *(char **)(a1 + 8);
                  char v25 = *(char **)(a1 + 16);
                }
                else
                {
                  uint64_t v32 = 0;
                }
                char v33 = &v32[4 * v28];
                *(_DWORD *)char v33 = 0;
                char v26 = v33 + 4;
                while (v25 != v27)
                {
                  int v34 = *((_DWORD *)v25 - 1);
                  v25 -= 4;
                  *((_DWORD *)v33 - 1) = v34;
                  v33 -= 4;
                }
                *(void *)(a1 + 8) = v33;
                *(void *)(a1 + 16) = v26;
                *(void *)(a1 + 24) = &v32[4 * v31];
                if (v27) {
                  operator delete(v27);
                }
              }
              else
              {
                *(_DWORD *)char v25 = 0;
                char v26 = v25 + 4;
              }
              *(void *)(a1 + 16) = v26;
              unint64_t v35 = *((void *)this + 1);
              if (v35 > 0xFFFFFFFFFFFFFFFBLL || v35 + 4 > *((void *)this + 2))
              {
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v26 - 1) = *(_DWORD *)(*(void *)this + v35);
              unint64_t v23 = *((void *)this + 2);
              unint64_t v22 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v22;
            }
            PB::Reader::recallMark();
          }
          else
          {
            unint64_t v39 = *(char **)(a1 + 16);
            unint64_t v38 = *(void *)(a1 + 24);
            if ((unint64_t)v39 >= v38)
            {
              char v41 = (char *)*v8;
              uint64_t v42 = (v39 - (unsigned char *)*v8) >> 2;
              unint64_t v43 = v42 + 1;
              if ((unint64_t)(v42 + 1) >> 62) {
LABEL_87:
              }
                sub_227B8B89C();
              uint64_t v44 = v38 - (void)v41;
              if (v44 >> 1 > v43) {
                unint64_t v43 = v44 >> 1;
              }
              if ((unint64_t)v44 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v45 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v45 = v43;
              }
              if (v45)
              {
                uint64_t v46 = (char *)sub_227B8BBB8(v9, v45);
                char v41 = *(char **)(a1 + 8);
                unint64_t v39 = *(char **)(a1 + 16);
              }
              else
              {
                uint64_t v46 = 0;
              }
              unint64_t v47 = &v46[4 * v42];
              *(_DWORD *)unint64_t v47 = 0;
              char v40 = v47 + 4;
              while (v39 != v41)
              {
                int v48 = *((_DWORD *)v39 - 1);
                v39 -= 4;
                *((_DWORD *)v47 - 1) = v48;
                v47 -= 4;
              }
              *(void *)(a1 + 8) = v47;
              *(void *)(a1 + 16) = v40;
              *(void *)(a1 + 24) = &v46[4 * v45];
              if (v41) {
                operator delete(v41);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v39 = 0;
              char v40 = v39 + 4;
            }
            *(void *)(a1 + 16) = v40;
            unint64_t v49 = *((void *)this + 1);
            if (v49 <= 0xFFFFFFFFFFFFFFFBLL && v49 + 4 <= *((void *)this + 2))
            {
              *(v40 - 1) = *(_DWORD *)(*(void *)this + v49);
LABEL_78:
              *((void *)this + 1) += 4;
            }
            else
            {
LABEL_76:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_79:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || *((unsigned char *)this + 24)) {
            return v4 == 0;
          }
          break;
        case 3u:
          *(unsigned char *)(a1 + 48) |= 2u;
          unint64_t v36 = *((void *)this + 1);
          if (v36 > 0xFFFFFFFFFFFFFFFBLL || v36 + 4 > *((void *)this + 2)) {
            goto LABEL_76;
          }
          *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v36);
          goto LABEL_78;
        case 4u:
          *(unsigned char *)(a1 + 48) |= 1u;
          unint64_t v37 = *((void *)this + 1);
          if (v37 > 0xFFFFFFFFFFFFFFFBLL || v37 + 4 > *((void *)this + 2)) {
            goto LABEL_76;
          }
          *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v37);
          goto LABEL_78;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_79;
      }
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v13 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v19 = v2 + 1;
      char v20 = *(unsigned char *)(v10 + v2);
      *((void *)this + 1) = v19;
      v13 |= (unint64_t)(v20 & 0x7F) << v17;
      if ((v20 & 0x80) == 0) {
        goto LABEL_21;
      }
      v17 += 7;
      unint64_t v2 = v19;
      if (v18++ >= 9)
      {
LABEL_20:
        unint64_t v13 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C679D8(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(const PB::Base **)(result + 32);
  if (v4) {
    double result = PB::Writer::writeSubmessage(this, v4);
  }
  int v5 = *(float **)(v3 + 8);
  int v6 = *(float **)(v3 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    double result = PB::Writer::write(this, v7);
  }
  char v8 = *(unsigned char *)(v3 + 48);
  if ((v8 & 2) != 0)
  {
    double result = PB::Writer::write(this, *(float *)(v3 + 44));
    char v8 = *(unsigned char *)(v3 + 48);
  }
  if (v8)
  {
    float v9 = *(float *)(v3 + 40);
    return PB::Writer::write(this, v9);
  }
  return result;
}

uint64_t sub_227C67A84(uint64_t result)
{
  if (!*(void *)(result + 32)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C67B14(uint64_t result)
{
  *(void *)double result = &unk_26DC27DF0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

void sub_227C67B3C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C67B74(uint64_t result, uint64_t a2)
{
  *(void *)double result = &unk_26DC27DF0;
  *(_DWORD *)(result + 64) = 0;
  char v2 = *(unsigned char *)(a2 + 64);
  if ((v2 & 0x20) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 48);
    char v3 = 32;
    *(unsigned char *)(result + 64) = 32;
    *(void *)(result + 48) = v4;
    char v2 = *(unsigned char *)(a2 + 64);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 64) & 4) != 0)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 24);
    v3 |= 4u;
    *(unsigned char *)(result + 64) = v3;
    *(void *)(result + 24) = v5;
    char v2 = *(unsigned char *)(a2 + 64);
  }
LABEL_6:
  if ((v2 & 8) != 0)
  {
    uint64_t v6 = *(void *)(a2 + 32);
    v3 |= 8u;
    *(unsigned char *)(result + 64) = v3;
    *(void *)(result + 32) = v6;
    char v2 = *(unsigned char *)(a2 + 64);
    if ((v2 & 0x40) == 0)
    {
LABEL_8:
      if ((v2 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_15;
    }
  }
  else if ((v2 & 0x40) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 56);
  v3 |= 0x40u;
  *(unsigned char *)(result + 64) = v3;
  *(_DWORD *)(result + 56) = v7;
  char v2 = *(unsigned char *)(a2 + 64);
  if ((v2 & 0x10) == 0)
  {
LABEL_9:
    if ((v2 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t v8 = *(void *)(a2 + 40);
  v3 |= 0x10u;
  *(unsigned char *)(result + 64) = v3;
  *(void *)(result + 40) = v8;
  char v2 = *(unsigned char *)(a2 + 64);
  if ((v2 & 1) == 0)
  {
LABEL_10:
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t v9 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(unsigned char *)(result + 64) = v3;
  *(void *)(result + 8) = v9;
  char v2 = *(unsigned char *)(a2 + 64);
  if ((v2 & 2) == 0)
  {
LABEL_11:
    if ((v2 & 0x80) == 0) {
      return result;
    }
LABEL_18:
    int v11 = *(_DWORD *)(a2 + 60);
    *(unsigned char *)(result + 64) = v3 | 0x80;
    *(_DWORD *)(result + 60) = v11;
    return result;
  }
LABEL_17:
  uint64_t v10 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(unsigned char *)(result + 64) = v3;
  *(void *)(result + 16) = v10;
  if ((*(unsigned char *)(a2 + 64) & 0x80) != 0) {
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_227C67C80(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 64);
  if (v5)
  {
    PB::TextFormatter::format(this, "firstRingSensorTimeStampMicroSeconds");
    char v5 = *(unsigned char *)(a1 + 64);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((*(unsigned char *)(a1 + 64) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "lastRingSensorTimeStampMicroSeconds");
  char v5 = *(unsigned char *)(a1 + 64);
  if ((v5 & 0x40) == 0)
  {
LABEL_4:
    if ((v5 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  PB::TextFormatter::format(this, "medianBufferNumSamples");
  char v5 = *(unsigned char *)(a1 + 64);
  if ((v5 & 4) == 0)
  {
LABEL_5:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "medianNorthAlignmentEstimateRad", *(double *)(a1 + 24));
  char v5 = *(unsigned char *)(a1 + 64);
  if ((v5 & 8) == 0)
  {
LABEL_6:
    if ((v5 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  PB::TextFormatter::format(this, "newNorthAlignmentEstimateRad", *(double *)(a1 + 32));
  char v5 = *(unsigned char *)(a1 + 64);
  if ((v5 & 0x80) == 0)
  {
LABEL_7:
    if ((v5 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "numRingSensorSamples");
  char v5 = *(unsigned char *)(a1 + 64);
  if ((v5 & 0x10) == 0)
  {
LABEL_8:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_19:
  PB::TextFormatter::format(this, "timeElapsedSinceLastUpdateMicroSeconds");
  if ((*(unsigned char *)(a1 + 64) & 0x20) != 0) {
LABEL_9:
  }
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 48));
LABEL_10:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C67DC4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 64) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_32;
              }
              *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
              goto LABEL_104;
            case 2u:
              *(unsigned char *)(a1 + 64) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_32;
              }
              *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
              goto LABEL_104;
            case 3u:
              *(unsigned char *)(a1 + 64) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
LABEL_104:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_32:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_130;
            case 4u:
              *(unsigned char *)(a1 + 64) |= 0x40u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v51 = 0;
                unsigned int v52 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_109;
                  }
                  unint64_t v53 = v21++;
                  char v54 = *(unsigned char *)(v22 + v53);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v54 & 0x7F) << v51;
                  if ((v54 & 0x80) == 0) {
                    break;
                  }
                  v51 += 7;
                  BOOL v14 = v52++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_108:
                    unint64_t v2 = v53 + 1;
                    goto LABEL_109;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_108;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_109;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_109:
              *(_DWORD *)(a1 + 56) = v25;
              goto LABEL_130;
            case 5u:
              *(unsigned char *)(a1 + 64) |= 0x10u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v55 = 0;
                unsigned int v56 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    uint64_t v31 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_114;
                  }
                  unint64_t v57 = v27++;
                  char v58 = *(unsigned char *)(v28 + v57);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v58 & 0x7F) << v55;
                  if ((v58 & 0x80) == 0) {
                    break;
                  }
                  v55 += 7;
                  BOOL v14 = v56++ > 8;
                  if (v14)
                  {
                    uint64_t v31 = 0;
LABEL_113:
                    unint64_t v2 = v57 + 1;
                    goto LABEL_114;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v31 = 0;
                }
                goto LABEL_113;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_114;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              uint64_t v31 = 0;
LABEL_114:
              *(void *)(a1 + 40) = v31;
              goto LABEL_130;
            case 6u:
              *(unsigned char *)(a1 + 64) |= 1u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v59 = 0;
                unsigned int v60 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    uint64_t v37 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_119;
                  }
                  unint64_t v61 = v33++;
                  char v62 = *(unsigned char *)(v34 + v61);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v62 & 0x7F) << v59;
                  if ((v62 & 0x80) == 0) {
                    break;
                  }
                  v59 += 7;
                  BOOL v14 = v60++ > 8;
                  if (v14)
                  {
                    uint64_t v37 = 0;
LABEL_118:
                    unint64_t v2 = v61 + 1;
                    goto LABEL_119;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v37 = 0;
                }
                goto LABEL_118;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_119;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              uint64_t v37 = 0;
LABEL_119:
              *(void *)(a1 + 8) = v37;
              goto LABEL_130;
            case 7u:
              *(unsigned char *)(a1 + 64) |= 2u;
              unint64_t v39 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v40 = *(void *)this;
              if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
              {
                char v63 = 0;
                unsigned int v64 = 0;
                uint64_t v43 = 0;
                if (v2 <= v39) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v39)
                  {
                    uint64_t v43 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_124;
                  }
                  unint64_t v65 = v39++;
                  char v66 = *(unsigned char *)(v40 + v65);
                  *((void *)this + 1) = v39;
                  v43 |= (unint64_t)(v66 & 0x7F) << v63;
                  if ((v66 & 0x80) == 0) {
                    break;
                  }
                  v63 += 7;
                  BOOL v14 = v64++ > 8;
                  if (v14)
                  {
                    uint64_t v43 = 0;
LABEL_123:
                    unint64_t v2 = v65 + 1;
                    goto LABEL_124;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v43 = 0;
                }
                goto LABEL_123;
              }
              char v41 = 0;
              unsigned int v42 = 0;
              uint64_t v43 = 0;
              do
              {
                unint64_t v2 = v39 + 1;
                *((void *)this + 1) = v39 + 1;
                char v44 = *(unsigned char *)(v40 + v39);
                v43 |= (unint64_t)(v44 & 0x7F) << v41;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_124;
                }
                v41 += 7;
                unint64_t v39 = v2;
                BOOL v14 = v42++ > 8;
              }
              while (!v14);
              uint64_t v43 = 0;
LABEL_124:
              *(void *)(a1 + 16) = v43;
              goto LABEL_130;
            case 8u:
              *(unsigned char *)(a1 + 64) |= 0x80u;
              unint64_t v45 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v46 = *(void *)this;
              if (v45 > 0xFFFFFFFFFFFFFFF5 || v45 + 10 > v2)
              {
                char v67 = 0;
                unsigned int v68 = 0;
                uint64_t v49 = 0;
                if (v2 <= v45) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v45)
                  {
                    LODWORD(v49) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_129;
                  }
                  unint64_t v69 = v45++;
                  char v70 = *(unsigned char *)(v46 + v69);
                  *((void *)this + 1) = v45;
                  v49 |= (unint64_t)(v70 & 0x7F) << v67;
                  if ((v70 & 0x80) == 0) {
                    break;
                  }
                  v67 += 7;
                  BOOL v14 = v68++ > 8;
                  if (v14)
                  {
                    LODWORD(v49) = 0;
LABEL_128:
                    unint64_t v2 = v69 + 1;
                    goto LABEL_129;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v49) = 0;
                }
                goto LABEL_128;
              }
              char v47 = 0;
              unsigned int v48 = 0;
              uint64_t v49 = 0;
              do
              {
                unint64_t v2 = v45 + 1;
                *((void *)this + 1) = v45 + 1;
                char v50 = *(unsigned char *)(v46 + v45);
                v49 |= (unint64_t)(v50 & 0x7F) << v47;
                if ((v50 & 0x80) == 0) {
                  goto LABEL_129;
                }
                v47 += 7;
                unint64_t v45 = v2;
                BOOL v14 = v48++ > 8;
              }
              while (!v14);
              LODWORD(v49) = 0;
LABEL_129:
              *(_DWORD *)(a1 + 60) = v49;
LABEL_130:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_130;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C684B0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 64);
  if ((v4 & 0x20) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 48));
    char v4 = *(unsigned char *)(v3 + 64);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(result + 64) & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24));
  char v4 = *(unsigned char *)(v3 + 64);
  if ((v4 & 8) == 0)
  {
LABEL_4:
    if ((v4 & 0x40) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32));
  char v4 = *(unsigned char *)(v3 + 64);
  if ((v4 & 0x40) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 64);
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 64);
  if ((v4 & 1) == 0)
  {
LABEL_7:
    if ((v4 & 2) == 0) {
      goto LABEL_8;
    }
LABEL_16:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(unsigned char *)(v3 + 64) & 0x80) == 0) {
      return result;
    }
    goto LABEL_17;
  }
LABEL_15:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 64);
  if ((v4 & 2) != 0) {
    goto LABEL_16;
  }
LABEL_8:
  if ((v4 & 0x80) == 0) {
    return result;
  }
LABEL_17:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227C685C8(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC27E28;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

void sub_227C685F4(PB::Base *this)
{
  *(void *)this = &unk_26DC27E28;
  uint64_t v2 = *((void *)this + 6);
  *((void *)this + 6) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 2) = v3;
    operator delete(v3);
  }

  PB::Base::~Base(this);
}

void sub_227C68688(PB::Base *a1)
{
  sub_227C685F4(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C686C0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = &unk_26DC27E28;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 64) = 0;
  if (*(void *)(a2 + 48)) {
    operator new();
  }
  if ((*(unsigned char *)(a2 + 64) & 4) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 56);
    *(unsigned char *)(a1 + 64) |= 4u;
    *(void *)(a1 + 56) = v4;
  }
  if (a1 != a2) {
    sub_227B8B74C((char *)(a1 + 8), *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
  }
  char v5 = *(unsigned char *)(a2 + 64);
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 32);
    *(unsigned char *)(a1 + 64) |= 1u;
    *(void *)(a1 + 32) = v6;
    char v5 = *(unsigned char *)(a2 + 64);
  }
  if ((v5 & 2) != 0)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    *(unsigned char *)(a1 + 64) |= 2u;
    *(void *)(a1 + 40) = v7;
  }
  return a1;
}

uint64_t sub_227C687F8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 64);
  if (v5)
  {
    PB::TextFormatter::format(this, "lastAuxTimeStampMicroSeconds");
    char v5 = *(unsigned char *)(a1 + 64);
  }
  if ((v5 & 2) != 0) {
    PB::TextFormatter::format(this, "lastRingSensorTimeStampMicroSeconds");
  }
  uint64_t v6 = *(double **)(a1 + 8);
  uint64_t v7 = *(double **)(a1 + 16);
  while (v6 != v7)
  {
    double v8 = *v6++;
    PB::TextFormatter::format(this, "qSP", v8);
  }
  uint64_t v9 = *(void *)(a1 + 48);
  if (v9) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v9 + 32))(v9, this, "super");
  }
  if ((*(unsigned char *)(a1 + 64) & 4) != 0) {
    PB::TextFormatter::format(this, "timeStampMicroSeconds");
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227C68904(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    double v8 = (void **)(a1 + 8);
    uint64_t v9 = a1 + 24;
    while (1)
    {
      uint64_t v10 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v11 = 0;
      unsigned int v12 = 0;
      unint64_t v13 = 0;
      while (1)
      {
        unint64_t v14 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v15 = *(unsigned char *)(v10 + v2);
        v13 |= (unint64_t)(v15 & 0x7F) << v11;
        if ((v15 & 0x80) == 0) {
          break;
        }
        v11 += 7;
        unint64_t v2 = v14;
        BOOL v16 = v12++ > 8;
        if (v16) {
          goto LABEL_20;
        }
      }
LABEL_21:
      if ((v13 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v13 >> 3))
      {
        case 1u:
          operator new();
        case 2u:
          *(unsigned char *)(a1 + 64) |= 4u;
          unint64_t v22 = *((void *)this + 1);
          unint64_t v23 = *((void *)this + 2);
          uint64_t v24 = *(void *)this;
          if (v22 <= 0xFFFFFFFFFFFFFFF5 && v22 + 10 <= v23)
          {
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v27 = 0;
            do
            {
              unint64_t v28 = v22 + 1;
              *((void *)this + 1) = v22 + 1;
              char v29 = *(unsigned char *)(v24 + v22);
              v27 |= (unint64_t)(v29 & 0x7F) << v25;
              if ((v29 & 0x80) == 0) {
                goto LABEL_108;
              }
              v25 += 7;
              unint64_t v22 = v28;
              BOOL v16 = v26++ > 8;
            }
            while (!v16);
LABEL_78:
            uint64_t v27 = 0;
            goto LABEL_108;
          }
          char v60 = 0;
          unsigned int v61 = 0;
          uint64_t v27 = 0;
          if (v23 <= v22) {
            unint64_t v23 = *((void *)this + 1);
          }
          while (2)
          {
            if (v23 == v22)
            {
              uint64_t v27 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v62 = v22 + 1;
              char v63 = *(unsigned char *)(v24 + v22);
              *((void *)this + 1) = v62;
              v27 |= (unint64_t)(v63 & 0x7F) << v60;
              if (v63 < 0)
              {
                v60 += 7;
                unint64_t v22 = v62;
                BOOL v16 = v61++ > 8;
                if (v16) {
                  goto LABEL_78;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v27 = 0;
              }
            }
            break;
          }
LABEL_108:
          *(void *)(a1 + 56) = v27;
          goto LABEL_126;
        case 3u:
          if ((v13 & 7) == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v30 = *((void *)this + 1);
            unint64_t v31 = *((void *)this + 2);
            while (v30 < v31 && !*((unsigned char *)this + 24))
            {
              unint64_t v33 = *(char **)(a1 + 16);
              unint64_t v32 = *(void *)(a1 + 24);
              if ((unint64_t)v33 >= v32)
              {
                char v35 = (char *)*v8;
                uint64_t v36 = (v33 - (unsigned char *)*v8) >> 3;
                unint64_t v37 = v36 + 1;
                if ((unint64_t)(v36 + 1) >> 61) {
                  goto LABEL_136;
                }
                uint64_t v38 = v32 - (void)v35;
                if (v38 >> 2 > v37) {
                  unint64_t v37 = v38 >> 2;
                }
                if ((unint64_t)v38 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v39 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v39 = v37;
                }
                if (v39)
                {
                  uint64_t v40 = (char *)sub_227B8B8B4(v9, v39);
                  char v35 = *(char **)(a1 + 8);
                  unint64_t v33 = *(char **)(a1 + 16);
                }
                else
                {
                  uint64_t v40 = 0;
                }
                char v41 = &v40[8 * v36];
                *(void *)char v41 = 0;
                uint64_t v34 = v41 + 8;
                while (v33 != v35)
                {
                  uint64_t v42 = *((void *)v33 - 1);
                  v33 -= 8;
                  *((void *)v41 - 1) = v42;
                  v41 -= 8;
                }
                *(void *)(a1 + 8) = v41;
                *(void *)(a1 + 16) = v34;
                *(void *)(a1 + 24) = &v40[8 * v39];
                if (v35) {
                  operator delete(v35);
                }
              }
              else
              {
                *(void *)unint64_t v33 = 0;
                uint64_t v34 = v33 + 8;
              }
              *(void *)(a1 + 16) = v34;
              unint64_t v43 = *((void *)this + 1);
              if (v43 > 0xFFFFFFFFFFFFFFF7 || v43 + 8 > *((void *)this + 2))
              {
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v34 - 1) = *(void *)(*(void *)this + v43);
              unint64_t v31 = *((void *)this + 2);
              unint64_t v30 = *((void *)this + 1) + 8;
              *((void *)this + 1) = v30;
            }
            PB::Reader::recallMark();
          }
          else
          {
            unint64_t v65 = *(char **)(a1 + 16);
            unint64_t v64 = *(void *)(a1 + 24);
            if ((unint64_t)v65 >= v64)
            {
              unint64_t v75 = (char *)*v8;
              uint64_t v76 = (v65 - (unsigned char *)*v8) >> 3;
              unint64_t v77 = v76 + 1;
              if ((unint64_t)(v76 + 1) >> 61) {
LABEL_136:
              }
                sub_227B8B89C();
              uint64_t v78 = v64 - (void)v75;
              if (v78 >> 2 > v77) {
                unint64_t v77 = v78 >> 2;
              }
              if ((unint64_t)v78 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v79 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v79 = v77;
              }
              if (v79)
              {
                unint64_t v80 = (char *)sub_227B8B8B4(v9, v79);
                unint64_t v75 = *(char **)(a1 + 8);
                unint64_t v65 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v80 = 0;
              }
              unint64_t v81 = &v80[8 * v76];
              *(void *)unint64_t v81 = 0;
              char v66 = v81 + 8;
              while (v65 != v75)
              {
                uint64_t v82 = *((void *)v65 - 1);
                v65 -= 8;
                *((void *)v81 - 1) = v82;
                v81 -= 8;
              }
              *(void *)(a1 + 8) = v81;
              *(void *)(a1 + 16) = v66;
              *(void *)(a1 + 24) = &v80[8 * v79];
              if (v75) {
                operator delete(v75);
              }
            }
            else
            {
              *(void *)unint64_t v65 = 0;
              char v66 = v65 + 8;
            }
            *(void *)(a1 + 16) = v66;
            unint64_t v83 = *((void *)this + 1);
            if (v83 <= 0xFFFFFFFFFFFFFFF7 && v83 + 8 <= *((void *)this + 2))
            {
              *(v66 - 1) = *(void *)(*(void *)this + v83);
              *((void *)this + 1) += 8;
            }
            else
            {
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_126:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        case 4u:
          *(unsigned char *)(a1 + 64) |= 1u;
          unint64_t v44 = *((void *)this + 1);
          unint64_t v45 = *((void *)this + 2);
          uint64_t v46 = *(void *)this;
          if (v44 <= 0xFFFFFFFFFFFFFFF5 && v44 + 10 <= v45)
          {
            char v47 = 0;
            unsigned int v48 = 0;
            uint64_t v49 = 0;
            do
            {
              unint64_t v50 = v44 + 1;
              *((void *)this + 1) = v44 + 1;
              char v51 = *(unsigned char *)(v46 + v44);
              v49 |= (unint64_t)(v51 & 0x7F) << v47;
              if ((v51 & 0x80) == 0) {
                goto LABEL_111;
              }
              v47 += 7;
              unint64_t v44 = v50;
              BOOL v16 = v48++ > 8;
            }
            while (!v16);
LABEL_87:
            uint64_t v49 = 0;
            goto LABEL_111;
          }
          char v67 = 0;
          unsigned int v68 = 0;
          uint64_t v49 = 0;
          if (v45 <= v44) {
            unint64_t v45 = *((void *)this + 1);
          }
          while (2)
          {
            if (v45 == v44)
            {
              uint64_t v49 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v69 = v44 + 1;
              char v70 = *(unsigned char *)(v46 + v44);
              *((void *)this + 1) = v69;
              v49 |= (unint64_t)(v70 & 0x7F) << v67;
              if (v70 < 0)
              {
                v67 += 7;
                unint64_t v44 = v69;
                BOOL v16 = v68++ > 8;
                if (v16) {
                  goto LABEL_87;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v49 = 0;
              }
            }
            break;
          }
LABEL_111:
          *(void *)(a1 + 32) = v49;
          goto LABEL_126;
        case 5u:
          *(unsigned char *)(a1 + 64) |= 2u;
          unint64_t v52 = *((void *)this + 1);
          unint64_t v53 = *((void *)this + 2);
          uint64_t v54 = *(void *)this;
          if (v52 <= 0xFFFFFFFFFFFFFFF5 && v52 + 10 <= v53)
          {
            char v55 = 0;
            unsigned int v56 = 0;
            uint64_t v57 = 0;
            do
            {
              unint64_t v58 = v52 + 1;
              *((void *)this + 1) = v52 + 1;
              char v59 = *(unsigned char *)(v54 + v52);
              v57 |= (unint64_t)(v59 & 0x7F) << v55;
              if ((v59 & 0x80) == 0) {
                goto LABEL_114;
              }
              v55 += 7;
              unint64_t v52 = v58;
              BOOL v16 = v56++ > 8;
            }
            while (!v16);
LABEL_94:
            uint64_t v57 = 0;
            goto LABEL_114;
          }
          char v71 = 0;
          unsigned int v72 = 0;
          uint64_t v57 = 0;
          if (v53 <= v52) {
            unint64_t v53 = *((void *)this + 1);
          }
          while (2)
          {
            if (v53 == v52)
            {
              uint64_t v57 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v73 = v52 + 1;
              char v74 = *(unsigned char *)(v54 + v52);
              *((void *)this + 1) = v73;
              v57 |= (unint64_t)(v74 & 0x7F) << v71;
              if (v74 < 0)
              {
                v71 += 7;
                unint64_t v52 = v73;
                BOOL v16 = v72++ > 8;
                if (v16) {
                  goto LABEL_94;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v57 = 0;
              }
            }
            break;
          }
LABEL_114:
          *(void *)(a1 + 40) = v57;
          goto LABEL_126;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_126;
      }
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v13 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v19 = v2 + 1;
      char v20 = *(unsigned char *)(v10 + v2);
      *((void *)this + 1) = v19;
      v13 |= (unint64_t)(v20 & 0x7F) << v17;
      if ((v20 & 0x80) == 0) {
        goto LABEL_21;
      }
      v17 += 7;
      unint64_t v2 = v19;
      if (v18++ >= 9)
      {
LABEL_20:
        unint64_t v13 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C69010(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC27E60;
  *(_DWORD *)(result + 76) = 0;
  return result;
}

uint64_t sub_227C69034(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(const PB::Base **)(result + 48);
  if (v4) {
    uint64_t result = PB::Writer::writeSubmessage(this, v4);
  }
  if ((*(unsigned char *)(v3 + 64) & 4) != 0) {
    uint64_t result = PB::Writer::writeVarInt(this);
  }
  char v5 = *(double **)(v3 + 8);
  uint64_t v6 = *(double **)(v3 + 16);
  while (v5 != v6)
  {
    double v7 = *v5++;
    uint64_t result = PB::Writer::write(this, v7);
  }
  char v8 = *(unsigned char *)(v3 + 64);
  if (v8)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v8 = *(unsigned char *)(v3 + 64);
  }
  if ((v8 & 2) != 0)
  {
    return PB::Writer::writeVarInt(this);
  }
  return result;
}

void sub_227C690FC(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C69134(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC27E60;
  *(_DWORD *)(result + 76) = 0;
  __int16 v2 = *(_WORD *)(a2 + 76);
  if ((v2 & 0x10) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 40);
    __int16 v3 = 16;
    *(_WORD *)(result + 76) = 16;
    *(void *)(result + 40) = v4;
    __int16 v2 = *(_WORD *)(a2 + 76);
    if ((v2 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 0x20) != 0)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 48);
    v3 |= 0x20u;
    *(_WORD *)(result + 76) = v3;
    *(void *)(result + 48) = v5;
    __int16 v2 = *(_WORD *)(a2 + 76);
  }
LABEL_6:
  if ((v2 & 0x40) != 0)
  {
    uint64_t v6 = *(void *)(a2 + 56);
    v3 |= 0x40u;
    *(_WORD *)(result + 76) = v3;
    *(void *)(result + 56) = v6;
    __int16 v2 = *(_WORD *)(a2 + 76);
    if ((v2 & 0x80) == 0)
    {
LABEL_8:
      if ((v2 & 1) == 0) {
        goto LABEL_9;
      }
      goto LABEL_16;
    }
  }
  else if ((v2 & 0x80) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 64);
  v3 |= 0x80u;
  *(_WORD *)(result + 76) = v3;
  *(void *)(result + 64) = v7;
  __int16 v2 = *(_WORD *)(a2 + 76);
  if ((v2 & 1) == 0)
  {
LABEL_9:
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t v8 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(result + 76) = v3;
  *(void *)(result + 8) = v8;
  __int16 v2 = *(_WORD *)(a2 + 76);
  if ((v2 & 2) == 0)
  {
LABEL_10:
    if ((v2 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t v9 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(result + 76) = v3;
  *(void *)(result + 16) = v9;
  __int16 v2 = *(_WORD *)(a2 + 76);
  if ((v2 & 8) == 0)
  {
LABEL_11:
    if ((v2 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t v10 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_WORD *)(result + 76) = v3;
  *(void *)(result + 32) = v10;
  __int16 v2 = *(_WORD *)(a2 + 76);
  if ((v2 & 4) == 0)
  {
LABEL_12:
    if ((v2 & 0x100) == 0) {
      return result;
    }
LABEL_20:
    char v12 = *(unsigned char *)(a2 + 72);
    *(_WORD *)(result + 76) = v3 | 0x100;
    *(unsigned char *)(result + 72) = v12;
    return result;
  }
LABEL_19:
  uint64_t v11 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(_WORD *)(result + 76) = v3;
  *(void *)(result + 24) = v11;
  if ((*(_WORD *)(a2 + 76) & 0x100) != 0) {
    goto LABEL_20;
  }
  return result;
}

uint64_t sub_227C69258(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 76);
  if (v5)
  {
    PB::TextFormatter::format(this, "altitudeAngle", *(double *)(a1 + 8));
    __int16 v5 = *(_WORD *)(a1 + 76);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 0x100) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "azimuthAngle", *(double *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 76);
  if ((v5 & 0x100) == 0)
  {
LABEL_4:
    if ((v5 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "estimated");
  __int16 v5 = *(_WORD *)(a1 + 76);
  if ((v5 & 4) == 0)
  {
LABEL_5:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  PB::TextFormatter::format(this, "estimationUpdateIndex");
  __int16 v5 = *(_WORD *)(a1 + 76);
  if ((v5 & 8) == 0)
  {
LABEL_6:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "rollAngle", *(double *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 76);
  if ((v5 & 0x10) == 0)
  {
LABEL_7:
    if ((v5 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 76);
  if ((v5 & 0x20) == 0)
  {
LABEL_8:
    if ((v5 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "x", *(double *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 76);
  if ((v5 & 0x40) == 0)
  {
LABEL_9:
    if ((v5 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_21:
  PB::TextFormatter::format(this, "y", *(double *)(a1 + 56));
  if ((*(_WORD *)(a1 + 76) & 0x80) != 0) {
LABEL_10:
  }
    PB::TextFormatter::format(this, "z", *(double *)(a1 + 64));
LABEL_11:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C693BC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 76) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_44;
              }
              *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
              goto LABEL_64;
            case 2u:
              *(_WORD *)(a1 + 76) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_44;
              }
              *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
              goto LABEL_64;
            case 3u:
              *(_WORD *)(a1 + 76) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_44;
              }
              *(void *)(a1 + 56) = *(void *)(*(void *)this + v2);
              goto LABEL_64;
            case 4u:
              *(_WORD *)(a1 + 76) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_44;
              }
              *(void *)(a1 + 64) = *(void *)(*(void *)this + v2);
              goto LABEL_64;
            case 5u:
              *(_WORD *)(a1 + 76) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_44;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_64;
            case 6u:
              *(_WORD *)(a1 + 76) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_44;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_64;
            case 7u:
              *(_WORD *)(a1 + 76) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
LABEL_64:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_44:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_70;
            case 8u:
              *(_WORD *)(a1 + 76) |= 4u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v29 = 0;
                unsigned int v30 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    uint64_t v25 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_69;
                  }
                  unint64_t v31 = v21++;
                  char v32 = *(unsigned char *)(v22 + v31);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v32 & 0x7F) << v29;
                  if ((v32 & 0x80) == 0) {
                    break;
                  }
                  v29 += 7;
                  BOOL v14 = v30++ > 8;
                  if (v14)
                  {
                    uint64_t v25 = 0;
LABEL_68:
                    unint64_t v2 = v31 + 1;
                    goto LABEL_69;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v25 = 0;
                }
                goto LABEL_68;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_69;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              uint64_t v25 = 0;
LABEL_69:
              *(void *)(a1 + 24) = v25;
LABEL_70:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 9u:
              *(_WORD *)(a1 + 76) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v28 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v27 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v28 = v27 != 0;
              }
              *(unsigned char *)(a1 + 72) = v28;
              goto LABEL_70;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_70;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C69820(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 76);
  if ((v4 & 0x10) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 40));
    __int16 v4 = *(_WORD *)(v3 + 76);
    if ((v4 & 0x20) == 0)
    {
LABEL_3:
      if ((v4 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v4 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48));
  __int16 v4 = *(_WORD *)(v3 + 76);
  if ((v4 & 0x40) == 0)
  {
LABEL_4:
    if ((v4 & 0x80) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 56));
  __int16 v4 = *(_WORD *)(v3 + 76);
  if ((v4 & 0x80) == 0)
  {
LABEL_5:
    if ((v4 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 64));
  __int16 v4 = *(_WORD *)(v3 + 76);
  if ((v4 & 1) == 0)
  {
LABEL_6:
    if ((v4 & 2) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
  __int16 v4 = *(_WORD *)(v3 + 76);
  if ((v4 & 2) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  __int16 v4 = *(_WORD *)(v3 + 76);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_18:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(_WORD *)(v3 + 76) & 0x100) == 0) {
      return result;
    }
    goto LABEL_19;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32));
  __int16 v4 = *(_WORD *)(v3 + 76);
  if ((v4 & 4) != 0) {
    goto LABEL_18;
  }
LABEL_9:
  if ((v4 & 0x100) == 0) {
    return result;
  }
LABEL_19:

  return PB::Writer::write(this);
}

uint64_t sub_227C69954(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC27E98;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void sub_227C69980(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227C699B8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC27E98;
  *(_DWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  char v2 = *(unsigned char *)(a2 + 32);
  if ((v2 & 2) != 0)
  {
    double result = *(double *)(a2 + 16);
    char v3 = 2;
    *(unsigned char *)(a1 + 32) = 2;
    *(double *)(a1 + 16) = result;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 32) & 8) != 0)
  {
LABEL_5:
    char v5 = *(unsigned char *)(a2 + 28);
    v3 |= 8u;
    *(unsigned char *)(a1 + 32) = v3;
    *(unsigned char *)(a1 + 28) = v5;
    char v2 = *(unsigned char *)(a2 + 32);
  }
LABEL_6:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 1) == 0) {
      return result;
    }
LABEL_10:
    double result = *(double *)(a2 + 8);
    *(unsigned char *)(a1 + 32) = v3 | 1;
    *(double *)(a1 + 8) = result;
    return result;
  }
  int v6 = *(_DWORD *)(a2 + 24);
  v3 |= 4u;
  *(unsigned char *)(a1 + 32) = v3;
  *(_DWORD *)(a1 + 24) = v6;
  if (*(unsigned char *)(a2 + 32)) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_227C69A58(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 32);
  if (v5)
  {
    PB::TextFormatter::format(this, "avgRelOmegaRps", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 32);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 32) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "ringSensorTrustModelMode");
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 2) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 16));
  if ((*(unsigned char *)(a1 + 32) & 8) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "trustPencilRingSensorBool");
LABEL_6:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C69B1C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 32) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_38;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_49;
            case 2u:
              *(unsigned char *)(a1 + 32) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v22 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v21 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v22 = v21 != 0;
              }
              *(unsigned char *)(a1 + 28) = v22;
              goto LABEL_55;
            case 3u:
              *(unsigned char *)(a1 + 32) |= 4u;
              unint64_t v23 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v24 = *(void *)this;
              if (v23 > 0xFFFFFFFFFFFFFFF5 || v23 + 10 > v2)
              {
                char v29 = 0;
                unsigned int v30 = 0;
                uint64_t v27 = 0;
                if (v2 <= v23) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v23)
                  {
                    LODWORD(v27) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_54;
                  }
                  unint64_t v31 = v23++;
                  char v32 = *(unsigned char *)(v24 + v31);
                  *((void *)this + 1) = v23;
                  v27 |= (unint64_t)(v32 & 0x7F) << v29;
                  if ((v32 & 0x80) == 0) {
                    break;
                  }
                  v29 += 7;
                  BOOL v14 = v30++ > 8;
                  if (v14)
                  {
                    LODWORD(v27) = 0;
LABEL_53:
                    unint64_t v2 = v31 + 1;
                    goto LABEL_54;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v27) = 0;
                }
                goto LABEL_53;
              }
              char v25 = 0;
              unsigned int v26 = 0;
              uint64_t v27 = 0;
              do
              {
                unint64_t v2 = v23 + 1;
                *((void *)this + 1) = v23 + 1;
                char v28 = *(unsigned char *)(v24 + v23);
                v27 |= (unint64_t)(v28 & 0x7F) << v25;
                if ((v28 & 0x80) == 0) {
                  goto LABEL_54;
                }
                v25 += 7;
                unint64_t v23 = v2;
                BOOL v14 = v26++ > 8;
              }
              while (!v14);
              LODWORD(v27) = 0;
LABEL_54:
              *(_DWORD *)(a1 + 24) = v27;
LABEL_55:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 4u:
              *(unsigned char *)(a1 + 32) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
LABEL_49:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_38:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_55;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_55;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C69E54(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 16));
    char v4 = *(unsigned char *)(v3 + 32);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::writeVarInt(this);
      if ((*(unsigned char *)(v3 + 32) & 1) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 32) & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this);
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 1) == 0) {
    return result;
  }
LABEL_9:
  double v5 = *(double *)(v3 + 8);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227C69EFC(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC27ED0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void sub_227C69F24(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227C69F5C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC27ED0;
  *(_DWORD *)(a1 + 24) = 0;
  if (*(unsigned char *)(a2 + 24))
  {
    double result = *(double *)(a2 + 8);
    *(unsigned char *)(a1 + 24) = 1;
    *(double *)(a1 + 8) = result;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 24) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 24) & 2) != 0)
  {
LABEL_5:
    double result = *(double *)(a2 + 16);
    *(unsigned char *)(a1 + 24) = v2;
    *(double *)(a1 + 16) = result;
  }
  return result;
}

uint64_t sub_227C69FC0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 24);
  if (v5)
  {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 24);
  }
  if ((v5 & 2) != 0) {
    PB::TextFormatter::format(this, "tipForce", *(double *)(a1 + 16));
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C6A03C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    do
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
        return v4 == 0;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 24) |= 2u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
          goto LABEL_28;
        }
        *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
      }
      else
      {
        if ((v11 >> 3) != 1)
        {
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          goto LABEL_33;
        }
        *(unsigned char *)(a1 + 24) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2))
        {
LABEL_28:
          *((unsigned char *)this + 24) = 1;
          goto LABEL_33;
        }
        *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
      }
      unint64_t v2 = *((void *)this + 1) + 8;
      *((void *)this + 1) = v2;
LABEL_33:
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
    }
    while (v2 < v3 && !*((unsigned char *)this + 24));
  }
  return v4 == 0;
}

uint64_t sub_227C6A218(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 24);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 24);
  }
  if ((v4 & 2) != 0)
  {
    double v5 = *(double *)(v3 + 16);
    return PB::Writer::write(this, v5);
  }
  return result;
}

uint64_t sub_227C6A284(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC27F08;
  *(_DWORD *)(result + 88) = 0;
  return result;
}

void sub_227C6A2AC(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227C6A2E4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC27F08;
  *(_DWORD *)(a1 + 88) = 0;
  __int16 v2 = *(_WORD *)(a2 + 88);
  if ((v2 & 0x20) != 0)
  {
    double result = *(double *)(a2 + 48);
    __int16 v3 = 32;
    *(_WORD *)(a1 + 88) = 32;
    *(double *)(a1 + 48) = result;
    __int16 v2 = *(_WORD *)(a2 + 88);
    if ((v2 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 0x40) != 0)
  {
LABEL_5:
    double result = *(double *)(a2 + 56);
    v3 |= 0x40u;
    *(_WORD *)(a1 + 88) = v3;
    *(double *)(a1 + 56) = result;
    __int16 v2 = *(_WORD *)(a2 + 88);
  }
LABEL_6:
  if ((v2 & 0x80) != 0)
  {
    double result = *(double *)(a2 + 64);
    v3 |= 0x80u;
    *(_WORD *)(a1 + 88) = v3;
    *(double *)(a1 + 64) = result;
    __int16 v2 = *(_WORD *)(a2 + 88);
    if ((v2 & 0x100) == 0)
    {
LABEL_8:
      if ((v2 & 1) == 0) {
        goto LABEL_9;
      }
      goto LABEL_18;
    }
  }
  else if ((v2 & 0x100) == 0)
  {
    goto LABEL_8;
  }
  double result = *(double *)(a2 + 72);
  v3 |= 0x100u;
  *(_WORD *)(a1 + 88) = v3;
  *(double *)(a1 + 72) = result;
  __int16 v2 = *(_WORD *)(a2 + 88);
  if ((v2 & 1) == 0)
  {
LABEL_9:
    if ((v2 & 4) == 0) {
      goto LABEL_10;
    }
    goto LABEL_19;
  }
LABEL_18:
  double result = *(double *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(a1 + 88) = v3;
  *(double *)(a1 + 8) = result;
  __int16 v2 = *(_WORD *)(a2 + 88);
  if ((v2 & 4) == 0)
  {
LABEL_10:
    if ((v2 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_20;
  }
LABEL_19:
  double result = *(double *)(a2 + 24);
  v3 |= 4u;
  *(_WORD *)(a1 + 88) = v3;
  *(double *)(a1 + 24) = result;
  __int16 v2 = *(_WORD *)(a2 + 88);
  if ((v2 & 0x400) == 0)
  {
LABEL_11:
    if ((v2 & 0x200) == 0) {
      goto LABEL_12;
    }
    goto LABEL_21;
  }
LABEL_20:
  int v5 = *(_DWORD *)(a2 + 84);
  v3 |= 0x400u;
  *(_WORD *)(a1 + 88) = v3;
  *(_DWORD *)(a1 + 84) = v5;
  __int16 v2 = *(_WORD *)(a2 + 88);
  if ((v2 & 0x200) == 0)
  {
LABEL_12:
    if ((v2 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_22;
  }
LABEL_21:
  int v6 = *(_DWORD *)(a2 + 80);
  v3 |= 0x200u;
  *(_WORD *)(a1 + 88) = v3;
  *(_DWORD *)(a1 + 80) = v6;
  __int16 v2 = *(_WORD *)(a2 + 88);
  if ((v2 & 2) == 0)
  {
LABEL_13:
    if ((v2 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_23;
  }
LABEL_22:
  double result = *(double *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(a1 + 88) = v3;
  *(double *)(a1 + 16) = result;
  __int16 v2 = *(_WORD *)(a2 + 88);
  if ((v2 & 8) == 0)
  {
LABEL_14:
    if ((v2 & 0x10) == 0) {
      return result;
    }
LABEL_24:
    double result = *(double *)(a2 + 40);
    *(_WORD *)(a1 + 88) = v3 | 0x10;
    *(double *)(a1 + 40) = result;
    return result;
  }
LABEL_23:
  double result = *(double *)(a2 + 32);
  v3 |= 8u;
  *(_WORD *)(a1 + 88) = v3;
  *(double *)(a1 + 32) = result;
  if ((*(_WORD *)(a2 + 88) & 0x10) != 0) {
    goto LABEL_24;
  }
  return result;
}

uint64_t sub_227C6A444(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 88);
  if (v5)
  {
    PB::TextFormatter::format(this, "altitudeAngle", *(double *)(a1 + 8));
    __int16 v5 = *(_WORD *)(a1 + 88);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "altitudeAngleConfidence", *(double *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "azimuthAngle", *(double *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x200) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "azimuthAngleConfidence", *(double *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 0x200) == 0)
  {
LABEL_6:
    if ((v5 & 0x400) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "pathFlags");
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 0x400) == 0)
  {
LABEL_7:
    if ((v5 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "pathStage");
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 0x10) == 0)
  {
LABEL_8:
    if ((v5 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "positionConfidence", *(double *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 0x20) == 0)
  {
LABEL_9:
    if ((v5 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 0x40) == 0)
  {
LABEL_10:
    if ((v5 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "x", *(double *)(a1 + 56));
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 0x80) == 0)
  {
LABEL_11:
    if ((v5 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_25:
  PB::TextFormatter::format(this, "y", *(double *)(a1 + 64));
  if ((*(_WORD *)(a1 + 88) & 0x100) != 0) {
LABEL_12:
  }
    PB::TextFormatter::format(this, "z", *(double *)(a1 + 72));
LABEL_13:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C6A5E8(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 88) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
              goto LABEL_80;
            case 2u:
              *(_WORD *)(a1 + 88) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 56) = *(void *)(*(void *)this + v2);
              goto LABEL_80;
            case 3u:
              *(_WORD *)(a1 + 88) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 64) = *(void *)(*(void *)this + v2);
              goto LABEL_80;
            case 4u:
              *(_WORD *)(a1 + 88) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 72) = *(void *)(*(void *)this + v2);
              goto LABEL_80;
            case 5u:
              *(_WORD *)(a1 + 88) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_80;
            case 6u:
              *(_WORD *)(a1 + 88) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
              goto LABEL_80;
            case 7u:
              *(_WORD *)(a1 + 88) |= 0x400u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v33 = 0;
                unsigned int v34 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_85;
                  }
                  unint64_t v35 = v21++;
                  char v36 = *(unsigned char *)(v22 + v35);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v36 & 0x7F) << v33;
                  if ((v36 & 0x80) == 0) {
                    break;
                  }
                  v33 += 7;
                  BOOL v14 = v34++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_84:
                    unint64_t v2 = v35 + 1;
                    goto LABEL_85;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_84;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_85;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_85:
              *(_DWORD *)(a1 + 84) = v25;
              goto LABEL_91;
            case 8u:
              *(_WORD *)(a1 + 88) |= 0x200u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v37 = 0;
                unsigned int v38 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_90;
                  }
                  unint64_t v39 = v27++;
                  char v40 = *(unsigned char *)(v28 + v39);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v40 & 0x7F) << v37;
                  if ((v40 & 0x80) == 0) {
                    break;
                  }
                  v37 += 7;
                  BOOL v14 = v38++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_89:
                    unint64_t v2 = v39 + 1;
                    goto LABEL_90;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_89;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_90;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_90:
              *(_DWORD *)(a1 + 80) = v31;
LABEL_91:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 9u:
              *(_WORD *)(a1 + 88) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_80;
            case 0xAu:
              *(_WORD *)(a1 + 88) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
              goto LABEL_80;
            case 0xBu:
              *(_WORD *)(a1 + 88) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
LABEL_80:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_64:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_91;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_91;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C6AB6C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 88);
  if ((v4 & 0x20) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 48));
    __int16 v4 = *(_WORD *)(v3 + 88);
    if ((v4 & 0x40) == 0)
    {
LABEL_3:
      if ((v4 & 0x80) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v4 & 0x40) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 56));
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 0x80) == 0)
  {
LABEL_4:
    if ((v4 & 0x100) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 64));
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 0x100) == 0)
  {
LABEL_5:
    if ((v4 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 72));
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 1) == 0)
  {
LABEL_6:
    if ((v4 & 4) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 0x400) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24));
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 0x400) == 0)
  {
LABEL_8:
    if ((v4 & 0x200) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 0x200) == 0)
  {
LABEL_9:
    if ((v4 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 2) == 0)
  {
LABEL_10:
    if ((v4 & 8) == 0) {
      goto LABEL_11;
    }
LABEL_22:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32));
    if ((*(_WORD *)(v3 + 88) & 0x10) == 0) {
      return result;
    }
    goto LABEL_23;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 8) != 0) {
    goto LABEL_22;
  }
LABEL_11:
  if ((v4 & 0x10) == 0) {
    return result;
  }
LABEL_23:
  double v5 = *(double *)(v3 + 40);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227C6ACD8(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC27F40;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

void sub_227C6AD00(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C6AD38(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC27F40;
  *(_DWORD *)(result + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 28);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 28) = 1;
    *(void *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 28) & 2) != 0)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(result + 28) = v3;
    *(void *)(result + 16) = v5;
    char v2 = *(unsigned char *)(a2 + 28);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 24);
    *(unsigned char *)(result + 28) = v3 | 4;
    *(_DWORD *)(result + 24) = v6;
  }
  return result;
}

uint64_t sub_227C6ADB8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "activityType");
    char v5 = *(unsigned char *)(a1 + 28);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((*(unsigned char *)(a1 + 28) & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "sampleTime", *(double *)(a1 + 8));
  if ((*(unsigned char *)(a1 + 28) & 2) != 0) {
LABEL_4:
  }
    PB::TextFormatter::format(this, "wrMets", *(double *)(a1 + 16));
LABEL_5:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C6AE5C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  for (int i = *((unsigned __int8 *)this + 24); v2 < v3 && i == 0; int i = *((unsigned __int8 *)this + 24))
  {
    uint64_t v8 = *(void *)this;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      while (v3 != v2)
      {
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)this + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_20;
        }
        v15 += 7;
        unint64_t v2 = v17;
        if (v16++ >= 9)
        {
LABEL_19:
          unint64_t v11 = 0;
          goto LABEL_20;
        }
      }
      int i = 1;
      *((unsigned char *)this + 24) = 1;
      return i == 0;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)this + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_20:
    if ((v11 & 7) == 4)
    {
      int i = 0;
      return i == 0;
    }
    unint64_t v20 = v11 >> 3;
    if ((v11 >> 3) == 3)
    {
      *(unsigned char *)(a1 + 28) |= 4u;
      unint64_t v21 = *((void *)this + 1);
      unint64_t v2 = *((void *)this + 2);
      uint64_t v22 = *(void *)this;
      if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
      {
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v25 = 0;
        if (v2 <= v21) {
          unint64_t v2 = *((void *)this + 1);
        }
        while (1)
        {
          if (v2 == v21)
          {
            LODWORD(v25) = 0;
            *((unsigned char *)this + 24) = 1;
            goto LABEL_52;
          }
          unint64_t v30 = v21++;
          char v31 = *(unsigned char *)(v22 + v30);
          *((void *)this + 1) = v21;
          v25 |= (unint64_t)(v31 & 0x7F) << v28;
          if ((v31 & 0x80) == 0) {
            break;
          }
          v28 += 7;
          BOOL v14 = v29++ > 8;
          if (v14)
          {
            LODWORD(v25) = 0;
            goto LABEL_51;
          }
        }
        if (*((unsigned char *)this + 24)) {
          LODWORD(v25) = 0;
        }
LABEL_51:
        unint64_t v2 = v30 + 1;
      }
      else
      {
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v25 = 0;
        while (1)
        {
          unint64_t v2 = v21 + 1;
          *((void *)this + 1) = v21 + 1;
          char v26 = *(unsigned char *)(v22 + v21);
          v25 |= (unint64_t)(v26 & 0x7F) << v23;
          if ((v26 & 0x80) == 0) {
            break;
          }
          v23 += 7;
          unint64_t v21 = v2;
          BOOL v14 = v24++ > 8;
          if (v14)
          {
            LODWORD(v25) = 0;
            break;
          }
        }
      }
LABEL_52:
      *(_DWORD *)(a1 + 24) = v25;
      goto LABEL_53;
    }
    if (v20 == 2)
    {
      *(unsigned char *)(a1 + 28) |= 2u;
      unint64_t v2 = *((void *)this + 1);
      if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
      {
        *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
        goto LABEL_47;
      }
    }
    else
    {
      if (v20 != 1)
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
        goto LABEL_53;
      }
      *(unsigned char *)(a1 + 28) |= 1u;
      unint64_t v2 = *((void *)this + 1);
      if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
      {
        *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
LABEL_47:
        unint64_t v2 = *((void *)this + 1) + 8;
        *((void *)this + 1) = v2;
        goto LABEL_53;
      }
    }
    *((unsigned char *)this + 24) = 1;
LABEL_53:
    unint64_t v3 = *((void *)this + 2);
  }
  return i == 0;
}

uint64_t sub_227C6B12C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if ((v4 & 1) == 0)
  {
    if ((*(unsigned char *)(result + 28) & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
    if ((*(unsigned char *)(v3 + 28) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v4 & 4) == 0) {
    return result;
  }
LABEL_7:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227C6B1B8(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC27F78;
  *(_DWORD *)(result + 44) = 0;
  return result;
}

void sub_227C6B1E0(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C6B218(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC27F78;
  *(_DWORD *)(result + 44) = 0;
  char v2 = *(unsigned char *)(a2 + 44);
  if ((v2 & 4) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 24);
    char v3 = 4;
    *(unsigned char *)(result + 44) = 4;
    *(void *)(result + 24) = v4;
    char v2 = *(unsigned char *)(a2 + 44);
    if ((v2 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if (*(unsigned char *)(a2 + 44))
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 8);
    v3 |= 1u;
    *(unsigned char *)(result + 44) = v3;
    *(void *)(result + 8) = v5;
    char v2 = *(unsigned char *)(a2 + 44);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(result + 44) = v3;
    *(void *)(result + 16) = v6;
    char v2 = *(unsigned char *)(a2 + 44);
    if ((v2 & 8) == 0)
    {
LABEL_8:
      if ((v2 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_13;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 32);
  v3 |= 8u;
  *(unsigned char *)(result + 44) = v3;
  *(_DWORD *)(result + 32) = v7;
  char v2 = *(unsigned char *)(a2 + 44);
  if ((v2 & 0x10) == 0)
  {
LABEL_9:
    if ((v2 & 0x20) == 0) {
      return result;
    }
LABEL_14:
    int v9 = *(_DWORD *)(a2 + 40);
    *(unsigned char *)(result + 44) = v3 | 0x20;
    *(_DWORD *)(result + 40) = v9;
    return result;
  }
LABEL_13:
  int v8 = *(_DWORD *)(a2 + 36);
  v3 |= 0x10u;
  *(unsigned char *)(result + 44) = v3;
  *(_DWORD *)(result + 36) = v8;
  if ((*(unsigned char *)(a2 + 44) & 0x20) != 0) {
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_227C6B2EC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 8) != 0)
  {
    PB::TextFormatter::format(this, "activityType");
    char v5 = *(unsigned char *)(a1 + 44);
    if ((v5 & 0x10) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((*(unsigned char *)(a1 + 44) & 0x10) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "algorithmVersion");
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 1) == 0)
  {
LABEL_4:
    if ((v5 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  PB::TextFormatter::format(this, "endDate", *(double *)(a1 + 8));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 2) == 0)
  {
LABEL_5:
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(this, "mets", *(double *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 0x20) == 0)
  {
LABEL_6:
    if ((v5 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_15:
  PB::TextFormatter::format(this, "sampleStopReason");
  if ((*(unsigned char *)(a1 + 44) & 4) != 0) {
LABEL_7:
  }
    PB::TextFormatter::format(this, "startDate", *(double *)(a1 + 24));
LABEL_8:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C6B3F0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 44) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_32;
              }
              *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
              goto LABEL_76;
            case 2u:
              *(unsigned char *)(a1 + 44) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_32;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_76;
            case 3u:
              *(unsigned char *)(a1 + 44) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
LABEL_76:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_32:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_92;
            case 4u:
              *(unsigned char *)(a1 + 44) |= 8u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v39 = 0;
                unsigned int v40 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_81;
                  }
                  unint64_t v41 = v21++;
                  char v42 = *(unsigned char *)(v22 + v41);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v42 & 0x7F) << v39;
                  if ((v42 & 0x80) == 0) {
                    break;
                  }
                  v39 += 7;
                  BOOL v14 = v40++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_80:
                    unint64_t v2 = v41 + 1;
                    goto LABEL_81;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_80;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_81;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_81:
              *(_DWORD *)(a1 + 32) = v25;
              goto LABEL_92;
            case 5u:
              *(unsigned char *)(a1 + 44) |= 0x10u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v43 = 0;
                unsigned int v44 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_86;
                  }
                  unint64_t v45 = v27++;
                  char v46 = *(unsigned char *)(v28 + v45);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v46 & 0x7F) << v43;
                  if ((v46 & 0x80) == 0) {
                    break;
                  }
                  v43 += 7;
                  BOOL v14 = v44++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_85:
                    unint64_t v2 = v45 + 1;
                    goto LABEL_86;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_85;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_86;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_86:
              *(_DWORD *)(a1 + 36) = v31;
              goto LABEL_92;
            case 6u:
              *(unsigned char *)(a1 + 44) |= 0x20u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v47 = 0;
                unsigned int v48 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_91;
                  }
                  unint64_t v49 = v33++;
                  char v50 = *(unsigned char *)(v34 + v49);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v50 & 0x7F) << v47;
                  if ((v50 & 0x80) == 0) {
                    break;
                  }
                  v47 += 7;
                  BOOL v14 = v48++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_90:
                    unint64_t v2 = v49 + 1;
                    goto LABEL_91;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_90;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_91;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_91:
              *(_DWORD *)(a1 + 40) = v37;
LABEL_92:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_92;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C6B8FC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 44);
  if ((v4 & 4) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 24));
    char v4 = *(unsigned char *)(v3 + 44);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((*(unsigned char *)(result + 44) & 1) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 2) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(unsigned char *)(v3 + 44) & 0x20) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_11:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 0x10) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v4 & 0x20) == 0) {
    return result;
  }
LABEL_13:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227C6B9DC(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC27FB0;
  *(_DWORD *)(result + 84) = 0;
  return result;
}

void sub_227C6BA04(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227C6BA3C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC27FB0;
  *(_DWORD *)(a1 + 84) = 0;
  __int16 v2 = *(_WORD *)(a2 + 84);
  if ((v2 & 0x200) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 76);
    __int16 v3 = 512;
    *(_WORD *)(a1 + 84) = 512;
    *(_DWORD *)(a1 + 76) = v4;
    __int16 v2 = *(_WORD *)(a2 + 84);
    if ((v2 & 0x80) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 0x80) != 0)
  {
LABEL_5:
    double result = *(double *)(a2 + 64);
    v3 |= 0x80u;
    *(_WORD *)(a1 + 84) = v3;
    *(double *)(a1 + 64) = result;
    __int16 v2 = *(_WORD *)(a2 + 84);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    double result = *(double *)(a2 + 16);
    v3 |= 2u;
    *(_WORD *)(a1 + 84) = v3;
    *(double *)(a1 + 16) = result;
    __int16 v2 = *(_WORD *)(a2 + 84);
    if ((v2 & 4) == 0)
    {
LABEL_8:
      if ((v2 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_18;
    }
  }
  else if ((v2 & 4) == 0)
  {
    goto LABEL_8;
  }
  double result = *(double *)(a2 + 24);
  v3 |= 4u;
  *(_WORD *)(a1 + 84) = v3;
  *(double *)(a1 + 24) = result;
  __int16 v2 = *(_WORD *)(a2 + 84);
  if ((v2 & 0x10) == 0)
  {
LABEL_9:
    if ((v2 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_19;
  }
LABEL_18:
  double result = *(double *)(a2 + 40);
  v3 |= 0x10u;
  *(_WORD *)(a1 + 84) = v3;
  *(double *)(a1 + 40) = result;
  __int16 v2 = *(_WORD *)(a2 + 84);
  if ((v2 & 8) == 0)
  {
LABEL_10:
    if ((v2 & 1) == 0) {
      goto LABEL_11;
    }
    goto LABEL_20;
  }
LABEL_19:
  double result = *(double *)(a2 + 32);
  v3 |= 8u;
  *(_WORD *)(a1 + 84) = v3;
  *(double *)(a1 + 32) = result;
  __int16 v2 = *(_WORD *)(a2 + 84);
  if ((v2 & 1) == 0)
  {
LABEL_11:
    if ((v2 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_21;
  }
LABEL_20:
  double result = *(double *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(a1 + 84) = v3;
  *(double *)(a1 + 8) = result;
  __int16 v2 = *(_WORD *)(a2 + 84);
  if ((v2 & 0x400) == 0)
  {
LABEL_12:
    if ((v2 & 0x20) == 0) {
      goto LABEL_13;
    }
    goto LABEL_22;
  }
LABEL_21:
  char v6 = *(unsigned char *)(a2 + 80);
  v3 |= 0x400u;
  *(_WORD *)(a1 + 84) = v3;
  *(unsigned char *)(a1 + 80) = v6;
  __int16 v2 = *(_WORD *)(a2 + 84);
  if ((v2 & 0x20) == 0)
  {
LABEL_13:
    if ((v2 & 0x100) == 0) {
      goto LABEL_14;
    }
    goto LABEL_23;
  }
LABEL_22:
  double result = *(double *)(a2 + 48);
  v3 |= 0x20u;
  *(_WORD *)(a1 + 84) = v3;
  *(double *)(a1 + 48) = result;
  __int16 v2 = *(_WORD *)(a2 + 84);
  if ((v2 & 0x100) == 0)
  {
LABEL_14:
    if ((v2 & 0x40) == 0) {
      return result;
    }
LABEL_24:
    double result = *(double *)(a2 + 56);
    *(_WORD *)(a1 + 84) = v3 | 0x40;
    *(double *)(a1 + 56) = result;
    return result;
  }
LABEL_23:
  LODWORD(result) = *(_DWORD *)(a2 + 72);
  v3 |= 0x100u;
  *(_WORD *)(a1 + 84) = v3;
  *(_DWORD *)(a1 + 72) = LODWORD(result);
  if ((*(_WORD *)(a2 + 84) & 0x40) != 0) {
    goto LABEL_24;
  }
  return result;
}

uint64_t sub_227C6BB9C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 84);
  if (v5)
  {
    PB::TextFormatter::format(this, "ambient", *(double *)(a1 + 8));
    __int16 v5 = *(_WORD *)(a1 + 84);
    if ((v5 & 0x100) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((*(_WORD *)(a1 + 84) & 0x100) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "baselineAccuracy", *(float *)(a1 + 72));
  __int16 v5 = *(_WORD *)(a1 + 84);
  if ((v5 & 2) == 0)
  {
LABEL_4:
    if ((v5 & 0x200) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "flags", *(double *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 84);
  if ((v5 & 0x200) == 0)
  {
LABEL_5:
    if ((v5 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "header");
  __int16 v5 = *(_WORD *)(a1 + 84);
  if ((v5 & 4) == 0)
  {
LABEL_6:
    if ((v5 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "intensity", *(double *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 84);
  if ((v5 & 8) == 0)
  {
LABEL_7:
    if ((v5 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "intensityBaselineDelta", *(double *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 84);
  if ((v5 & 0x10) == 0)
  {
LABEL_8:
    if ((v5 & 0x400) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "intensityCalDelta", *(double *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 84);
  if ((v5 & 0x400) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "pocketFlag");
  __int16 v5 = *(_WORD *)(a1 + 84);
  if ((v5 & 0x20) == 0)
  {
LABEL_10:
    if ((v5 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "pocketProbability", *(double *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 84);
  if ((v5 & 0x40) == 0)
  {
LABEL_11:
    if ((v5 & 0x80) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_25:
  PB::TextFormatter::format(this, "temperature", *(double *)(a1 + 56));
  if ((*(_WORD *)(a1 + 84) & 0x80) != 0) {
LABEL_12:
  }
    PB::TextFormatter::format(this, "ts", *(double *)(a1 + 64));
LABEL_13:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C6BD40(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 84) |= 0x200u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v29 = 0;
                unsigned int v30 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    LODWORD(v24) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_76;
                  }
                  unint64_t v31 = v20++;
                  char v32 = *(unsigned char *)(v21 + v31);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v32 & 0x7F) << v29;
                  if ((v32 & 0x80) == 0) {
                    break;
                  }
                  v29 += 7;
                  BOOL v14 = v30++ > 8;
                  if (v14)
                  {
                    LODWORD(v24) = 0;
                    goto LABEL_75;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v24) = 0;
                }
LABEL_75:
                unint64_t v2 = v31 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_76;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                LODWORD(v24) = 0;
              }
LABEL_76:
              *(_DWORD *)(a1 + 76) = v24;
              goto LABEL_77;
            case 2u:
              *(_WORD *)(a1 + 84) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_59;
              }
              *(void *)(a1 + 64) = *(void *)(*(void *)this + v2);
              goto LABEL_70;
            case 3u:
              *(_WORD *)(a1 + 84) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_59;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_70;
            case 4u:
              *(_WORD *)(a1 + 84) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_59;
              }
              *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
              goto LABEL_70;
            case 5u:
              *(_WORD *)(a1 + 84) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_59;
              }
              *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
              goto LABEL_70;
            case 6u:
              *(_WORD *)(a1 + 84) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_59;
              }
              *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
              goto LABEL_70;
            case 7u:
              *(_WORD *)(a1 + 84) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_59;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_70;
            case 8u:
              *(_WORD *)(a1 + 84) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v28 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v27 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v28 = v27 != 0;
              }
              *(unsigned char *)(a1 + 80) = v28;
              goto LABEL_77;
            case 9u:
              *(_WORD *)(a1 + 84) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_59;
              }
              *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
              goto LABEL_70;
            case 0xAu:
              *(_WORD *)(a1 + 84) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_59;
              }
              *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v2);
              unint64_t v2 = *((void *)this + 1) + 4;
              goto LABEL_71;
            case 0xBu:
              *(_WORD *)(a1 + 84) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 56) = *(void *)(*(void *)this + v2);
LABEL_70:
                unint64_t v2 = *((void *)this + 1) + 8;
LABEL_71:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_59:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_77;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
LABEL_77:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C6C224(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 84);
  if ((v4 & 0x200) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    __int16 v4 = *(_WORD *)(v3 + 84);
    if ((v4 & 0x80) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v4 & 0x80) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 64));
  __int16 v4 = *(_WORD *)(v3 + 84);
  if ((v4 & 2) == 0)
  {
LABEL_4:
    if ((v4 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  __int16 v4 = *(_WORD *)(v3 + 84);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24));
  __int16 v4 = *(_WORD *)(v3 + 84);
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40));
  __int16 v4 = *(_WORD *)(v3 + 84);
  if ((v4 & 8) == 0)
  {
LABEL_7:
    if ((v4 & 1) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32));
  __int16 v4 = *(_WORD *)(v3 + 84);
  if ((v4 & 1) == 0)
  {
LABEL_8:
    if ((v4 & 0x400) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
  __int16 v4 = *(_WORD *)(v3 + 84);
  if ((v4 & 0x400) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 84);
  if ((v4 & 0x20) == 0)
  {
LABEL_10:
    if ((v4 & 0x100) == 0) {
      goto LABEL_11;
    }
LABEL_22:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72));
    if ((*(_WORD *)(v3 + 84) & 0x40) == 0) {
      return result;
    }
    goto LABEL_23;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48));
  __int16 v4 = *(_WORD *)(v3 + 84);
  if ((v4 & 0x100) != 0) {
    goto LABEL_22;
  }
LABEL_11:
  if ((v4 & 0x40) == 0) {
    return result;
  }
LABEL_23:
  double v5 = *(double *)(v3 + 56);

  return PB::Writer::write(this, v5);
}

double sub_227C6C390(uint64_t a1)
{
  *(void *)a1 = &unk_26DC27FE8;
  *(_DWORD *)(a1 + 64) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return result;
}

void sub_227C6C3C4(PB::Base *this)
{
  *(void *)this = &unk_26DC27FE8;
  unint64_t v2 = (void *)*((void *)this + 4);
  if (v2)
  {
    *((void *)this + 5) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 2) = v3;
    operator delete(v3);
  }

  PB::Base::~Base(this);
}

void sub_227C6C438(PB::Base *a1)
{
  sub_227C6C3C4(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C6C470(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC27FE8;
  *(_OWORD *)(a1 + 8) = 0u;
  __int16 v4 = (char *)(a1 + 8);
  *(_DWORD *)(a1 + 64) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  if (*(unsigned char *)(a2 + 64))
  {
    uint64_t v5 = *(void *)(a2 + 56);
    *(unsigned char *)(a1 + 64) = 1;
    *(void *)(a1 + 56) = v5;
  }
  if (a1 != a2)
  {
    sub_227B8B74C(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
    sub_227B8B74C((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 3);
  }
  return a1;
}

uint64_t sub_227C6C514(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(double **)(a1 + 8);
  char v6 = *(double **)(a1 + 16);
  while (v5 != v6)
  {
    double v7 = *v5++;
    PB::TextFormatter::format(this, "attitude", v7);
  }
  uint64_t v8 = *(double **)(a1 + 32);
  char v9 = *(double **)(a1 + 40);
  while (v8 != v9)
  {
    double v10 = *v8++;
    PB::TextFormatter::format(this, "position", v10);
  }
  if (*(unsigned char *)(a1 + 64)) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 56));
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227C6C5DC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = (void **)(a1 + 32);
    uint64_t v9 = a1 + 48;
    double v10 = (void **)(a1 + 8);
    uint64_t v11 = a1 + 24;
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        unint64_t v15 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v21 = v2 + 1;
          char v22 = *(unsigned char *)(v12 + v2);
          *((void *)this + 1) = v21;
          v15 |= (unint64_t)(v22 & 0x7F) << v19;
          if ((v22 & 0x80) == 0) {
            goto LABEL_21;
          }
          v19 += 7;
          unint64_t v2 = v21;
          if (v20++ >= 9)
          {
LABEL_20:
            unint64_t v15 = 0;
            goto LABEL_21;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
        return v4 == 0;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        if (v14++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v24 = v15 & 7;
      if (v24 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v25 = v15 >> 3;
      if ((v15 >> 3) == 3) {
        break;
      }
      if (v25 == 2)
      {
        if (v24 == 2)
        {
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v41 = *((void *)this + 1);
          unint64_t v42 = *((void *)this + 2);
          while (v41 < v42 && !*((unsigned char *)this + 24))
          {
            unsigned int v44 = *(char **)(a1 + 16);
            unint64_t v43 = *(void *)(a1 + 24);
            if ((unint64_t)v44 >= v43)
            {
              char v46 = (char *)*v10;
              uint64_t v47 = (v44 - (unsigned char *)*v10) >> 3;
              unint64_t v48 = v47 + 1;
              if ((unint64_t)(v47 + 1) >> 61) {
                goto LABEL_128;
              }
              uint64_t v49 = v43 - (void)v46;
              if (v49 >> 2 > v48) {
                unint64_t v48 = v49 >> 2;
              }
              if ((unint64_t)v49 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v50 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v50 = v48;
              }
              if (v50)
              {
                char v51 = (char *)sub_227B8B8B4(v11, v50);
                char v46 = *(char **)(a1 + 8);
                unsigned int v44 = *(char **)(a1 + 16);
              }
              else
              {
                char v51 = 0;
              }
              unint64_t v52 = &v51[8 * v47];
              *(void *)unint64_t v52 = 0;
              unint64_t v45 = v52 + 8;
              while (v44 != v46)
              {
                uint64_t v53 = *((void *)v44 - 1);
                v44 -= 8;
                *((void *)v52 - 1) = v53;
                v52 -= 8;
              }
              *(void *)(a1 + 8) = v52;
              *(void *)(a1 + 16) = v45;
              *(void *)(a1 + 24) = &v51[8 * v50];
              if (v46) {
                operator delete(v46);
              }
            }
            else
            {
              *(void *)unsigned int v44 = 0;
              unint64_t v45 = v44 + 8;
            }
            *(void *)(a1 + 16) = v45;
            unint64_t v54 = *((void *)this + 1);
            if (v54 > 0xFFFFFFFFFFFFFFF7 || v54 + 8 > *((void *)this + 2)) {
              goto LABEL_82;
            }
            *(v45 - 1) = *(void *)(*(void *)this + v54);
            unint64_t v42 = *((void *)this + 2);
            unint64_t v41 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v41;
          }
          goto LABEL_83;
        }
        char v59 = *(char **)(a1 + 16);
        unint64_t v58 = *(void *)(a1 + 24);
        if ((unint64_t)v59 >= v58)
        {
          char v66 = (char *)*v10;
          uint64_t v67 = (v59 - (unsigned char *)*v10) >> 3;
          unint64_t v68 = v67 + 1;
          if ((unint64_t)(v67 + 1) >> 61) {
LABEL_128:
          }
            sub_227B8B89C();
          uint64_t v69 = v58 - (void)v66;
          if (v69 >> 2 > v68) {
            unint64_t v68 = v69 >> 2;
          }
          if ((unint64_t)v69 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v70 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v70 = v68;
          }
          if (v70)
          {
            char v71 = (char *)sub_227B8B8B4(v11, v70);
            char v66 = *(char **)(a1 + 8);
            char v59 = *(char **)(a1 + 16);
          }
          else
          {
            char v71 = 0;
          }
          char v74 = &v71[8 * v67];
          *(void *)char v74 = 0;
          uint64_t v57 = v74 + 8;
          while (v59 != v66)
          {
            uint64_t v75 = *((void *)v59 - 1);
            v59 -= 8;
            *((void *)v74 - 1) = v75;
            v74 -= 8;
          }
          *(void *)(a1 + 8) = v74;
          *(void *)(a1 + 16) = v57;
          *(void *)(a1 + 24) = &v71[8 * v70];
          if (v66) {
            operator delete(v66);
          }
        }
        else
        {
          *(void *)char v59 = 0;
          uint64_t v57 = v59 + 8;
        }
        *(void *)(a1 + 16) = v57;
LABEL_114:
        unint64_t v76 = *((void *)this + 1);
        if (v76 > 0xFFFFFFFFFFFFFFF7 || v76 + 8 > *((void *)this + 2))
        {
LABEL_116:
          *((unsigned char *)this + 24) = 1;
          goto LABEL_119;
        }
        *(v57 - 1) = *(void *)(*(void *)this + v76);
        goto LABEL_118;
      }
      if (v25 == 1)
      {
        *(unsigned char *)(a1 + 64) |= 1u;
        unint64_t v26 = *((void *)this + 1);
        if (v26 > 0xFFFFFFFFFFFFFFF7 || v26 + 8 > *((void *)this + 2)) {
          goto LABEL_116;
        }
        *(void *)(a1 + 56) = *(void *)(*(void *)this + v26);
LABEL_118:
        *((void *)this + 1) += 8;
        goto LABEL_119;
      }
      if ((PB::Reader::skip(this) & 1) == 0) {
        return 0;
      }
LABEL_119:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    if (v24 == 2)
    {
      if (PB::Reader::placeMark()) {
        return 0;
      }
      unint64_t v27 = *((void *)this + 1);
      unint64_t v28 = *((void *)this + 2);
      while (v27 < v28 && !*((unsigned char *)this + 24))
      {
        unsigned int v30 = *(char **)(a1 + 40);
        unint64_t v29 = *(void *)(a1 + 48);
        if ((unint64_t)v30 >= v29)
        {
          char v32 = (char *)*v8;
          uint64_t v33 = (v30 - (unsigned char *)*v8) >> 3;
          unint64_t v34 = v33 + 1;
          if ((unint64_t)(v33 + 1) >> 61) {
            goto LABEL_127;
          }
          uint64_t v35 = v29 - (void)v32;
          if (v35 >> 2 > v34) {
            unint64_t v34 = v35 >> 2;
          }
          if ((unint64_t)v35 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v36 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v36 = v34;
          }
          if (v36)
          {
            uint64_t v37 = (char *)sub_227B8B8B4(v9, v36);
            char v32 = *(char **)(a1 + 32);
            unsigned int v30 = *(char **)(a1 + 40);
          }
          else
          {
            uint64_t v37 = 0;
          }
          char v38 = &v37[8 * v33];
          *(void *)char v38 = 0;
          unint64_t v31 = v38 + 8;
          while (v30 != v32)
          {
            uint64_t v39 = *((void *)v30 - 1);
            v30 -= 8;
            *((void *)v38 - 1) = v39;
            v38 -= 8;
          }
          *(void *)(a1 + 32) = v38;
          *(void *)(a1 + 40) = v31;
          *(void *)(a1 + 48) = &v37[8 * v36];
          if (v32) {
            operator delete(v32);
          }
        }
        else
        {
          *(void *)unsigned int v30 = 0;
          unint64_t v31 = v30 + 8;
        }
        *(void *)(a1 + 40) = v31;
        unint64_t v40 = *((void *)this + 1);
        if (v40 > 0xFFFFFFFFFFFFFFF7 || v40 + 8 > *((void *)this + 2))
        {
LABEL_82:
          *((unsigned char *)this + 24) = 1;
          break;
        }
        *(v31 - 1) = *(void *)(*(void *)this + v40);
        unint64_t v28 = *((void *)this + 2);
        unint64_t v27 = *((void *)this + 1) + 8;
        *((void *)this + 1) = v27;
      }
LABEL_83:
      PB::Reader::recallMark();
      goto LABEL_119;
    }
    unsigned int v56 = *(char **)(a1 + 40);
    unint64_t v55 = *(void *)(a1 + 48);
    if ((unint64_t)v56 >= v55)
    {
      char v60 = (char *)*v8;
      uint64_t v61 = (v56 - (unsigned char *)*v8) >> 3;
      unint64_t v62 = v61 + 1;
      if ((unint64_t)(v61 + 1) >> 61) {
LABEL_127:
      }
        sub_227B8B89C();
      uint64_t v63 = v55 - (void)v60;
      if (v63 >> 2 > v62) {
        unint64_t v62 = v63 >> 2;
      }
      if ((unint64_t)v63 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v64 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v64 = v62;
      }
      if (v64)
      {
        unint64_t v65 = (char *)sub_227B8B8B4(v9, v64);
        char v60 = *(char **)(a1 + 32);
        unsigned int v56 = *(char **)(a1 + 40);
      }
      else
      {
        unint64_t v65 = 0;
      }
      unsigned int v72 = &v65[8 * v61];
      *(void *)unsigned int v72 = 0;
      uint64_t v57 = v72 + 8;
      while (v56 != v60)
      {
        uint64_t v73 = *((void *)v56 - 1);
        v56 -= 8;
        *((void *)v72 - 1) = v73;
        v72 -= 8;
      }
      *(void *)(a1 + 32) = v72;
      *(void *)(a1 + 40) = v57;
      *(void *)(a1 + 48) = &v65[8 * v64];
      if (v60) {
        operator delete(v60);
      }
    }
    else
    {
      *(void *)unsigned int v56 = 0;
      uint64_t v57 = v56 + 8;
    }
    *(void *)(a1 + 40) = v57;
    goto LABEL_114;
  }
  return v4 == 0;
}

uint64_t sub_227C6CB50(uint64_t result, PB::Writer *this)
{
  unint64_t v3 = (void *)result;
  if (*(unsigned char *)(result + 64)) {
    double result = PB::Writer::write(this, *(double *)(result + 56));
  }
  int v4 = (double *)v3[1];
  uint64_t v5 = (double *)v3[2];
  while (v4 != v5)
  {
    double v6 = *v4++;
    double result = PB::Writer::write(this, v6);
  }
  uint64_t v8 = (double *)v3[4];
  double v7 = (double *)v3[5];
  while (v8 != v7)
  {
    double v9 = *v8++;
    double result = PB::Writer::write(this, v9);
  }
  return result;
}

double sub_227C6CBD4(uint64_t a1)
{
  *(void *)a1 = &unk_26DC28020;
  *(_DWORD *)(a1 + 44) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  return result;
}

void sub_227C6CC04(PB::Base *this)
{
  *(void *)this = &unk_26DC28020;
  uint64_t v2 = *((void *)this + 4);
  *((void *)this + 4) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  unint64_t v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 2) = v3;
    operator delete(v3);
  }

  PB::Base::~Base(this);
}

void sub_227C6CC98(PB::Base *a1)
{
  sub_227C6CC04(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C6CCD0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC28020;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_DWORD *)(a1 + 44) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  if (*(void *)(a2 + 32)) {
    operator new();
  }
  if (a1 != a2) {
    sub_227B8B74C((char *)(a1 + 8), *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
  }
  if (*(unsigned char *)(a2 + 44))
  {
    char v4 = *(unsigned char *)(a2 + 40);
    *(unsigned char *)(a1 + 44) |= 1u;
    *(unsigned char *)(a1 + 40) = v4;
  }
  return a1;
}

uint64_t sub_227C6CDCC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 32);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "pose");
  }
  double v6 = *(double **)(a1 + 8);
  double v7 = *(double **)(a1 + 16);
  while (v6 != v7)
  {
    double v8 = *v6++;
    PB::TextFormatter::format(this, "velocity", v8);
  }
  if (*(unsigned char *)(a1 + 44)) {
    PB::TextFormatter::format(this, "wasCorrected");
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227C6CEA0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    double v8 = (void **)(a1 + 8);
    uint64_t v9 = a1 + 24;
    while (1)
    {
      uint64_t v10 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v11 = 0;
      unsigned int v12 = 0;
      unint64_t v13 = 0;
      while (1)
      {
        unint64_t v14 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v15 = *(unsigned char *)(v10 + v2);
        v13 |= (unint64_t)(v15 & 0x7F) << v11;
        if ((v15 & 0x80) == 0) {
          break;
        }
        v11 += 7;
        unint64_t v2 = v14;
        if (v12++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      if ((v13 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v22 = v13 >> 3;
      if ((v13 >> 3) == 3)
      {
        *(unsigned char *)(a1 + 44) |= 1u;
        unint64_t v23 = *((void *)this + 1);
        if (v23 >= *((void *)this + 2))
        {
          BOOL v26 = 0;
          *((unsigned char *)this + 24) = 1;
        }
        else
        {
          unint64_t v24 = v23 + 1;
          int v25 = *(unsigned __int8 *)(*(void *)this + v23);
          *((void *)this + 1) = v24;
          BOOL v26 = v25 != 0;
        }
        *(unsigned char *)(a1 + 40) = v26;
      }
      else if (v22 == 2)
      {
        if ((v13 & 7) == 2)
        {
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v27 = *((void *)this + 1);
          unint64_t v28 = *((void *)this + 2);
          while (v27 < v28 && !*((unsigned char *)this + 24))
          {
            unsigned int v30 = *(char **)(a1 + 16);
            unint64_t v29 = *(void *)(a1 + 24);
            if ((unint64_t)v30 >= v29)
            {
              char v32 = (char *)*v8;
              uint64_t v33 = (v30 - (unsigned char *)*v8) >> 3;
              unint64_t v34 = v33 + 1;
              if ((unint64_t)(v33 + 1) >> 61) {
                goto LABEL_86;
              }
              uint64_t v35 = v29 - (void)v32;
              if (v35 >> 2 > v34) {
                unint64_t v34 = v35 >> 2;
              }
              if ((unint64_t)v35 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v36 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v36 = v34;
              }
              if (v36)
              {
                uint64_t v37 = (char *)sub_227B8B8B4(v9, v36);
                char v32 = *(char **)(a1 + 8);
                unsigned int v30 = *(char **)(a1 + 16);
              }
              else
              {
                uint64_t v37 = 0;
              }
              char v38 = &v37[8 * v33];
              *(void *)char v38 = 0;
              unint64_t v31 = v38 + 8;
              while (v30 != v32)
              {
                uint64_t v39 = *((void *)v30 - 1);
                v30 -= 8;
                *((void *)v38 - 1) = v39;
                v38 -= 8;
              }
              *(void *)(a1 + 8) = v38;
              *(void *)(a1 + 16) = v31;
              *(void *)(a1 + 24) = &v37[8 * v36];
              if (v32) {
                operator delete(v32);
              }
            }
            else
            {
              *(void *)unsigned int v30 = 0;
              unint64_t v31 = v30 + 8;
            }
            *(void *)(a1 + 16) = v31;
            unint64_t v40 = *((void *)this + 1);
            if (v40 > 0xFFFFFFFFFFFFFFF7 || v40 + 8 > *((void *)this + 2))
            {
              *((unsigned char *)this + 24) = 1;
              break;
            }
            *(v31 - 1) = *(void *)(*(void *)this + v40);
            unint64_t v28 = *((void *)this + 2);
            unint64_t v27 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v27;
          }
          PB::Reader::recallMark();
        }
        else
        {
          unint64_t v42 = *(char **)(a1 + 16);
          unint64_t v41 = *(void *)(a1 + 24);
          if ((unint64_t)v42 >= v41)
          {
            unsigned int v44 = (char *)*v8;
            uint64_t v45 = (v42 - (unsigned char *)*v8) >> 3;
            unint64_t v46 = v45 + 1;
            if ((unint64_t)(v45 + 1) >> 61) {
LABEL_86:
            }
              sub_227B8B89C();
            uint64_t v47 = v41 - (void)v44;
            if (v47 >> 2 > v46) {
              unint64_t v46 = v47 >> 2;
            }
            if ((unint64_t)v47 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v48 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v48 = v46;
            }
            if (v48)
            {
              uint64_t v49 = (char *)sub_227B8B8B4(v9, v48);
              unsigned int v44 = *(char **)(a1 + 8);
              unint64_t v42 = *(char **)(a1 + 16);
            }
            else
            {
              uint64_t v49 = 0;
            }
            unint64_t v50 = &v49[8 * v45];
            *(void *)unint64_t v50 = 0;
            unint64_t v43 = v50 + 8;
            while (v42 != v44)
            {
              uint64_t v51 = *((void *)v42 - 1);
              v42 -= 8;
              *((void *)v50 - 1) = v51;
              v50 -= 8;
            }
            *(void *)(a1 + 8) = v50;
            *(void *)(a1 + 16) = v43;
            *(void *)(a1 + 24) = &v49[8 * v48];
            if (v44) {
              operator delete(v44);
            }
          }
          else
          {
            *(void *)unint64_t v42 = 0;
            unint64_t v43 = v42 + 8;
          }
          *(void *)(a1 + 16) = v43;
          unint64_t v52 = *((void *)this + 1);
          if (v52 <= 0xFFFFFFFFFFFFFFF7 && v52 + 8 <= *((void *)this + 2))
          {
            *(v43 - 1) = *(void *)(*(void *)this + v52);
            *((void *)this + 1) += 8;
          }
          else
          {
            *((unsigned char *)this + 24) = 1;
          }
        }
      }
      else
      {
        if (v22 == 1) {
          operator new();
        }
        if ((PB::Reader::skip(this) & 1) == 0) {
          return 0;
        }
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v13 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v19 = v2 + 1;
      char v20 = *(unsigned char *)(v10 + v2);
      *((void *)this + 1) = v19;
      v13 |= (unint64_t)(v20 & 0x7F) << v17;
      if ((v20 & 0x80) == 0) {
        goto LABEL_21;
      }
      v17 += 7;
      unint64_t v2 = v19;
      if (v18++ >= 9)
      {
LABEL_20:
        unint64_t v13 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C6D32C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(const PB::Base **)(result + 32);
  if (v4) {
    double result = PB::Writer::writeSubmessage(this, v4);
  }
  uint64_t v5 = *(double **)(v3 + 8);
  double v6 = *(double **)(v3 + 16);
  while (v5 != v6)
  {
    double v7 = *v5++;
    double result = PB::Writer::write(this, v7);
  }
  if (*(unsigned char *)(v3 + 44))
  {
    return PB::Writer::write(this);
  }
  return result;
}

double sub_227C6D3C0(uint64_t a1)
{
  *(void *)a1 = &unk_26DC28058;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 56) = 0;
  return result;
}

void sub_227C6D3F4(PB::Base *this)
{
  *(void *)this = &unk_26DC28058;
  unint64_t v2 = (void *)*((void *)this + 4);
  if (v2)
  {
    *((void *)this + 5) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 2) = v3;
    operator delete(v3);
  }

  PB::Base::~Base(this);
}

void sub_227C6D468(PB::Base *a1)
{
  sub_227C6D3F4(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C6D4A0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC28058;
  *(_OWORD *)(a1 + 8) = 0u;
  int v4 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 56) = 0;
  if (a1 != a2)
  {
    sub_227B8B74C(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
    sub_227B8B74C((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 3);
  }
  if (*(unsigned char *)(a2 + 60))
  {
    int v5 = *(_DWORD *)(a2 + 56);
    *(unsigned char *)(a1 + 60) |= 1u;
    *(_DWORD *)(a1 + 56) = v5;
  }
  return a1;
}

uint64_t sub_227C6D548(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 60)) {
    PB::TextFormatter::format(this, "jointName");
  }
  int v5 = *(double **)(a1 + 8);
  double v6 = *(double **)(a1 + 16);
  while (v5 != v6)
  {
    double v7 = *v5++;
    PB::TextFormatter::format(this, "rotation", v7);
  }
  double v8 = *(double **)(a1 + 32);
  uint64_t v9 = *(double **)(a1 + 40);
  while (v8 != v9)
  {
    double v10 = *v8++;
    PB::TextFormatter::format(this, "translation", v10);
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227C6D610(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    double v8 = (void **)(a1 + 32);
    uint64_t v9 = a1 + 48;
    double v10 = (void **)(a1 + 8);
    uint64_t v11 = a1 + 24;
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        unint64_t v15 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v21 = v2 + 1;
          char v22 = *(unsigned char *)(v12 + v2);
          *((void *)this + 1) = v21;
          v15 |= (unint64_t)(v22 & 0x7F) << v19;
          if ((v22 & 0x80) == 0) {
            goto LABEL_21;
          }
          v19 += 7;
          unint64_t v2 = v21;
          if (v20++ >= 9)
          {
LABEL_20:
            unint64_t v15 = 0;
            goto LABEL_21;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
        return v4 == 0;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        BOOL v18 = v14++ > 8;
        if (v18) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v24 = v15 & 7;
      if (v24 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v25 = v15 >> 3;
      if ((v15 >> 3) == 3)
      {
        *(unsigned char *)(a1 + 60) |= 1u;
        unint64_t v40 = *((void *)this + 1);
        unint64_t v41 = *((void *)this + 2);
        uint64_t v42 = *(void *)this;
        if (v40 > 0xFFFFFFFFFFFFFFF5 || v40 + 10 > v41)
        {
          char v65 = 0;
          unsigned int v66 = 0;
          uint64_t v45 = 0;
          if (v41 <= v40) {
            unint64_t v41 = *((void *)this + 1);
          }
          while (1)
          {
            if (v41 == v40)
            {
              LODWORD(v45) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_114;
            }
            unint64_t v67 = v40 + 1;
            char v68 = *(unsigned char *)(v42 + v40);
            *((void *)this + 1) = v67;
            v45 |= (unint64_t)(v68 & 0x7F) << v65;
            if ((v68 & 0x80) == 0) {
              break;
            }
            v65 += 7;
            unint64_t v40 = v67;
            BOOL v18 = v66++ > 8;
            if (v18)
            {
LABEL_90:
              LODWORD(v45) = 0;
              goto LABEL_114;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v45) = 0;
          }
        }
        else
        {
          char v43 = 0;
          unsigned int v44 = 0;
          uint64_t v45 = 0;
          while (1)
          {
            unint64_t v46 = v40 + 1;
            *((void *)this + 1) = v40 + 1;
            char v47 = *(unsigned char *)(v42 + v40);
            v45 |= (unint64_t)(v47 & 0x7F) << v43;
            if ((v47 & 0x80) == 0) {
              break;
            }
            v43 += 7;
            unint64_t v40 = v46;
            BOOL v18 = v44++ > 8;
            if (v18) {
              goto LABEL_90;
            }
          }
        }
LABEL_114:
        *(_DWORD *)(a1 + 56) = v45;
        goto LABEL_133;
      }
      if (v25 == 2) {
        break;
      }
      if (v25 == 1)
      {
        if (v24 != 2)
        {
          uint64_t v63 = *(char **)(a1 + 16);
          unint64_t v62 = *(void *)(a1 + 24);
          if ((unint64_t)v63 >= v62)
          {
            char v71 = (char *)*v10;
            uint64_t v72 = (v63 - (unsigned char *)*v10) >> 3;
            unint64_t v73 = v72 + 1;
            if ((unint64_t)(v72 + 1) >> 61) {
LABEL_143:
            }
              sub_227B8B89C();
            uint64_t v74 = v62 - (void)v71;
            if (v74 >> 2 > v73) {
              unint64_t v73 = v74 >> 2;
            }
            if ((unint64_t)v74 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v75 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v75 = v73;
            }
            if (v75)
            {
              unint64_t v76 = (char *)sub_227B8B8B4(v11, v75);
              char v71 = *(char **)(a1 + 8);
              uint64_t v63 = *(char **)(a1 + 16);
            }
            else
            {
              unint64_t v76 = 0;
            }
            unint64_t v83 = &v76[8 * v72];
            *(void *)unint64_t v83 = 0;
            unint64_t v64 = v83 + 8;
            while (v63 != v71)
            {
              uint64_t v84 = *((void *)v63 - 1);
              v63 -= 8;
              *((void *)v83 - 1) = v84;
              v83 -= 8;
            }
            *(void *)(a1 + 8) = v83;
            *(void *)(a1 + 16) = v64;
            *(void *)(a1 + 24) = &v76[8 * v75];
            if (v71) {
              operator delete(v71);
            }
          }
          else
          {
            *(void *)uint64_t v63 = 0;
            unint64_t v64 = v63 + 8;
          }
          *(void *)(a1 + 16) = v64;
LABEL_129:
          unint64_t v87 = *((void *)this + 1);
          if (v87 <= 0xFFFFFFFFFFFFFFF7 && v87 + 8 <= *((void *)this + 2))
          {
            *(v64 - 1) = *(void *)(*(void *)this + v87);
            *((void *)this + 1) += 8;
          }
          else
          {
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_133;
        }
        if (PB::Reader::placeMark()) {
          return 0;
        }
        unint64_t v26 = *((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        while (v26 < v27 && !*((unsigned char *)this + 24))
        {
          unint64_t v29 = *(char **)(a1 + 16);
          unint64_t v28 = *(void *)(a1 + 24);
          if ((unint64_t)v29 >= v28)
          {
            unint64_t v31 = (char *)*v10;
            uint64_t v32 = (v29 - (unsigned char *)*v10) >> 3;
            unint64_t v33 = v32 + 1;
            if ((unint64_t)(v32 + 1) >> 61) {
              goto LABEL_143;
            }
            uint64_t v34 = v28 - (void)v31;
            if (v34 >> 2 > v33) {
              unint64_t v33 = v34 >> 2;
            }
            if ((unint64_t)v34 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v35 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v35 = v33;
            }
            if (v35)
            {
              unint64_t v36 = (char *)sub_227B8B8B4(v11, v35);
              unint64_t v31 = *(char **)(a1 + 8);
              unint64_t v29 = *(char **)(a1 + 16);
            }
            else
            {
              unint64_t v36 = 0;
            }
            uint64_t v37 = &v36[8 * v32];
            *(void *)uint64_t v37 = 0;
            unsigned int v30 = v37 + 8;
            while (v29 != v31)
            {
              uint64_t v38 = *((void *)v29 - 1);
              v29 -= 8;
              *((void *)v37 - 1) = v38;
              v37 -= 8;
            }
            *(void *)(a1 + 8) = v37;
            *(void *)(a1 + 16) = v30;
            *(void *)(a1 + 24) = &v36[8 * v35];
            if (v31) {
              operator delete(v31);
            }
          }
          else
          {
            *(void *)unint64_t v29 = 0;
            unsigned int v30 = v29 + 8;
          }
          *(void *)(a1 + 16) = v30;
          unint64_t v39 = *((void *)this + 1);
          if (v39 > 0xFFFFFFFFFFFFFFF7 || v39 + 8 > *((void *)this + 2)) {
            goto LABEL_93;
          }
          *(v30 - 1) = *(void *)(*(void *)this + v39);
          unint64_t v27 = *((void *)this + 2);
          unint64_t v26 = *((void *)this + 1) + 8;
          *((void *)this + 1) = v26;
        }
LABEL_94:
        PB::Reader::recallMark();
        goto LABEL_133;
      }
      if ((PB::Reader::skip(this) & 1) == 0) {
        return 0;
      }
LABEL_133:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    if (v24 != 2)
    {
      unint64_t v70 = *(char **)(a1 + 40);
      unint64_t v69 = *(void *)(a1 + 48);
      if ((unint64_t)v70 >= v69)
      {
        unint64_t v77 = (char *)*v8;
        uint64_t v78 = (v70 - (unsigned char *)*v8) >> 3;
        unint64_t v79 = v78 + 1;
        if ((unint64_t)(v78 + 1) >> 61) {
LABEL_144:
        }
          sub_227B8B89C();
        uint64_t v80 = v69 - (void)v77;
        if (v80 >> 2 > v79) {
          unint64_t v79 = v80 >> 2;
        }
        if ((unint64_t)v80 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v81 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v81 = v79;
        }
        if (v81)
        {
          uint64_t v82 = (char *)sub_227B8B8B4(v9, v81);
          unint64_t v77 = *(char **)(a1 + 32);
          unint64_t v70 = *(char **)(a1 + 40);
        }
        else
        {
          uint64_t v82 = 0;
        }
        unint64_t v85 = &v82[8 * v78];
        *(void *)unint64_t v85 = 0;
        unint64_t v64 = v85 + 8;
        while (v70 != v77)
        {
          uint64_t v86 = *((void *)v70 - 1);
          v70 -= 8;
          *((void *)v85 - 1) = v86;
          v85 -= 8;
        }
        *(void *)(a1 + 32) = v85;
        *(void *)(a1 + 40) = v64;
        *(void *)(a1 + 48) = &v82[8 * v81];
        if (v77) {
          operator delete(v77);
        }
      }
      else
      {
        *(void *)unint64_t v70 = 0;
        unint64_t v64 = v70 + 8;
      }
      *(void *)(a1 + 40) = v64;
      goto LABEL_129;
    }
    if (PB::Reader::placeMark()) {
      return 0;
    }
    unint64_t v48 = *((void *)this + 1);
    unint64_t v49 = *((void *)this + 2);
    while (v48 < v49 && !*((unsigned char *)this + 24))
    {
      uint64_t v51 = *(char **)(a1 + 40);
      unint64_t v50 = *(void *)(a1 + 48);
      if ((unint64_t)v51 >= v50)
      {
        uint64_t v53 = (char *)*v8;
        uint64_t v54 = (v51 - (unsigned char *)*v8) >> 3;
        unint64_t v55 = v54 + 1;
        if ((unint64_t)(v54 + 1) >> 61) {
          goto LABEL_144;
        }
        uint64_t v56 = v50 - (void)v53;
        if (v56 >> 2 > v55) {
          unint64_t v55 = v56 >> 2;
        }
        if ((unint64_t)v56 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v57 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v57 = v55;
        }
        if (v57)
        {
          unint64_t v58 = (char *)sub_227B8B8B4(v9, v57);
          uint64_t v53 = *(char **)(a1 + 32);
          uint64_t v51 = *(char **)(a1 + 40);
        }
        else
        {
          unint64_t v58 = 0;
        }
        char v59 = &v58[8 * v54];
        *(void *)char v59 = 0;
        unint64_t v52 = v59 + 8;
        while (v51 != v53)
        {
          uint64_t v60 = *((void *)v51 - 1);
          v51 -= 8;
          *((void *)v59 - 1) = v60;
          v59 -= 8;
        }
        *(void *)(a1 + 32) = v59;
        *(void *)(a1 + 40) = v52;
        *(void *)(a1 + 48) = &v58[8 * v57];
        if (v53) {
          operator delete(v53);
        }
      }
      else
      {
        *(void *)uint64_t v51 = 0;
        unint64_t v52 = v51 + 8;
      }
      *(void *)(a1 + 40) = v52;
      unint64_t v61 = *((void *)this + 1);
      if (v61 > 0xFFFFFFFFFFFFFFF7 || v61 + 8 > *((void *)this + 2))
      {
LABEL_93:
        *((unsigned char *)this + 24) = 1;
        goto LABEL_94;
      }
      *(v52 - 1) = *(void *)(*(void *)this + v61);
      unint64_t v49 = *((void *)this + 2);
      unint64_t v48 = *((void *)this + 1) + 8;
      *((void *)this + 1) = v48;
    }
    goto LABEL_94;
  }
  return v4 == 0;
}

uint64_t sub_227C6DC30(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(double **)(result + 8);
  int v5 = *(double **)(result + 16);
  while (v4 != v5)
  {
    double v6 = *v4++;
    double result = PB::Writer::write(this, v6);
  }
  double v7 = *(double **)(v3 + 32);
  double v8 = *(double **)(v3 + 40);
  while (v7 != v8)
  {
    double v9 = *v7++;
    double result = PB::Writer::write(this, v9);
  }
  if (*(unsigned char *)(v3 + 60))
  {
    return PB::Writer::writeVarInt(this);
  }
  return result;
}

void *sub_227C6DCD0(void *result)
{
  *double result = &unk_26DC28090;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void sub_227C6DCF4(void **a1)
{
  *a1 = &unk_26DC28090;
  unint64_t v2 = a1 + 1;
  sub_227B8B5D0(&v2);
  PB::Base::~Base((PB::Base *)a1);
}

uint64_t sub_227C6DD50(void **a1)
{
  *a1 = &unk_26DC28090;
  uint64_t v3 = a1 + 1;
  sub_227B8B5D0(&v3);
  PB::Base::~Base((PB::Base *)a1);
  return MEMORY[0x22A6850E0]();
}

void *sub_227C6DDC0(void *result, uint64_t a2)
{
  result[1] = 0;
  *double result = &unk_26DC28090;
  result[2] = 0;
  result[3] = 0;
  if (*(void *)(a2 + 8) != *(void *)(a2 + 16)) {
    sub_227C6DE38();
  }
  return result;
}

void sub_227C6DE38()
{
}

void sub_227C6DF3C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_227B8BDA0((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_227C6DF84(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(uint64_t **)(a1 + 8);
  double v6 = *(uint64_t **)(a1 + 16);
  while (v5 != v6)
  {
    uint64_t v7 = *v5++;
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v7 + 32))(v7, this, "joint");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C6E01C(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        sub_227C6E1D8();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

void sub_227C6E1D8()
{
}

void sub_227C6E300(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_227B8BDA0((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_227C6E344(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base ***)(result + 8);
  for (i = *(const PB::Base ***)(result + 16); v2 != i; uint64_t result = PB::Writer::writeSubmessage(this, v5))
    int v5 = *v2++;
  return result;
}

uint64_t sub_227C6E390(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC280C8;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void sub_227C6E3B8(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C6E3F0(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC280C8;
  *(_DWORD *)(result + 16) = 0;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v2 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 16) = 1;
    *(void *)(result + 8) = v2;
  }
  return result;
}

uint64_t sub_227C6E42C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 16)) {
    PB::TextFormatter::format(this, "userActivity");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C6E48C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 16) |= 1u;
        unint64_t v20 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
        uint64_t v21 = *(void *)this;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v3)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v24 = 0;
          if (v3 <= v20) {
            unint64_t v2 = *((void *)this + 1);
          }
          else {
            unint64_t v2 = *((void *)this + 2);
          }
          while (1)
          {
            if (v2 == v20)
            {
              uint64_t v24 = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_43;
            }
            unint64_t v29 = v20++;
            char v30 = *(unsigned char *)(v21 + v29);
            *((void *)this + 1) = v20;
            v24 |= (unint64_t)(v30 & 0x7F) << v27;
            if ((v30 & 0x80) == 0) {
              break;
            }
            v27 += 7;
            BOOL v14 = v28++ > 8;
            if (v14)
            {
              uint64_t v24 = 0;
              goto LABEL_42;
            }
          }
          if (*((unsigned char *)this + 24)) {
            uint64_t v24 = 0;
          }
LABEL_42:
          unint64_t v2 = v29 + 1;
        }
        else
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          while (1)
          {
            unint64_t v2 = v20 + 1;
            *((void *)this + 1) = v20 + 1;
            char v25 = *(unsigned char *)(v21 + v20);
            v24 |= (unint64_t)(v25 & 0x7F) << v22;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v22 += 7;
            unint64_t v20 = v2;
            BOOL v14 = v23++ > 8;
            if (v14)
            {
              uint64_t v24 = 0;
              break;
            }
          }
        }
LABEL_43:
        *(void *)(a1 + 8) = v24;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C6E6C4(uint64_t result, PB::Writer *this)
{
  if (*(unsigned char *)(result + 16)) {
    return PB::Writer::writeVarInt(this);
  }
  return result;
}

uint64_t sub_227C6E6E4(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC28100;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void sub_227C6E70C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227C6E744(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC28100;
  *(_DWORD *)(a1 + 24) = 0;
  if ((*(unsigned char *)(a2 + 24) & 2) != 0)
  {
    double result = *(double *)(a2 + 16);
    *(unsigned char *)(a1 + 24) = 2;
    *(double *)(a1 + 16) = result;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 24) & 1) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 1;
  if (*(unsigned char *)(a2 + 24))
  {
LABEL_5:
    double result = *(double *)(a2 + 8);
    *(unsigned char *)(a1 + 24) = v2;
    *(double *)(a1 + 8) = result;
  }
  return result;
}

uint64_t sub_227C6E7A8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 24);
  if (v5)
  {
    PB::TextFormatter::format(this, "dot", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 24);
  }
  if ((v5 & 2) != 0) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 16));
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C6E824(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    do
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
        return v4 == 0;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 24) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
          goto LABEL_28;
        }
        *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
      }
      else
      {
        if ((v11 >> 3) != 1)
        {
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          goto LABEL_33;
        }
        *(unsigned char *)(a1 + 24) |= 2u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2))
        {
LABEL_28:
          *((unsigned char *)this + 24) = 1;
          goto LABEL_33;
        }
        *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
      }
      unint64_t v2 = *((void *)this + 1) + 8;
      *((void *)this + 1) = v2;
LABEL_33:
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
    }
    while (v2 < v3 && !*((unsigned char *)this + 24));
  }
  return v4 == 0;
}

uint64_t sub_227C6EA00(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 24);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 16));
    char v4 = *(unsigned char *)(v3 + 24);
  }
  if (v4)
  {
    double v5 = *(double *)(v3 + 8);
    return PB::Writer::write(this, v5);
  }
  return result;
}

uint64_t sub_227C6EA6C(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC28138;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void sub_227C6EA94(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C6EACC(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC28138;
  *(_DWORD *)(result + 40) = 0;
  char v2 = *(unsigned char *)(a2 + 40);
  if ((v2 & 2) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 16);
    char v3 = 2;
    *(unsigned char *)(result + 40) = 2;
    *(void *)(result + 16) = v4;
    char v2 = *(unsigned char *)(a2 + 40);
    if ((v2 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if (*(unsigned char *)(a2 + 40))
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 8);
    v3 |= 1u;
    *(unsigned char *)(result + 40) = v3;
    *(void *)(result + 8) = v5;
    char v2 = *(unsigned char *)(a2 + 40);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 24);
    v3 |= 4u;
    *(unsigned char *)(result + 40) = v3;
    *(_DWORD *)(result + 24) = v6;
    char v2 = *(unsigned char *)(a2 + 40);
    if ((v2 & 0x10) == 0)
    {
LABEL_8:
      if ((v2 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_14;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 32);
  v3 |= 0x10u;
  *(unsigned char *)(result + 40) = v3;
  *(_DWORD *)(result + 32) = v7;
  char v2 = *(unsigned char *)(a2 + 40);
  if ((v2 & 8) == 0)
  {
LABEL_9:
    if ((v2 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_15;
  }
LABEL_14:
  int v8 = *(_DWORD *)(a2 + 28);
  v3 |= 8u;
  *(unsigned char *)(result + 40) = v3;
  *(_DWORD *)(result + 28) = v8;
  char v2 = *(unsigned char *)(a2 + 40);
  if ((v2 & 0x20) == 0)
  {
LABEL_10:
    if ((v2 & 0x40) == 0) {
      return result;
    }
LABEL_16:
    char v10 = *(unsigned char *)(a2 + 37);
    *(unsigned char *)(result + 40) = v3 | 0x40;
    *(unsigned char *)(result + 37) = v10;
    return result;
  }
LABEL_15:
  char v9 = *(unsigned char *)(a2 + 36);
  v3 |= 0x20u;
  *(unsigned char *)(result + 40) = v3;
  *(unsigned char *)(result + 36) = v9;
  if ((*(unsigned char *)(a2 + 40) & 0x40) != 0) {
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_227C6EBBC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "inlierCount");
    char v5 = *(unsigned char *)(a1 + 40);
    if ((v5 & 0x20) == 0)
    {
LABEL_3:
      if ((v5 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(a1 + 40) & 0x20) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "isOutlierCurrentSample");
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 0x40) == 0)
  {
LABEL_4:
    if ((v5 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(this, "isValidMeasurement");
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 1) == 0)
  {
LABEL_5:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  PB::TextFormatter::format(this, "range", *(double *)(a1 + 8));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 8) == 0)
  {
LABEL_6:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "rangeFrequency", *(float *)(a1 + 28));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 0x10) == 0)
  {
LABEL_7:
    if ((v5 & 2) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_17:
  PB::TextFormatter::format(this, "rangeShift", *(float *)(a1 + 32));
  if ((*(unsigned char *)(a1 + 40) & 2) != 0) {
LABEL_8:
  }
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 16));
LABEL_9:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C6ECE0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 40) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_43;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_30;
            case 2u:
              *(unsigned char *)(a1 + 40) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_43;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
LABEL_30:
              unint64_t v2 = *((void *)this + 1) + 8;
              goto LABEL_61;
            case 3u:
              *(unsigned char *)(a1 + 40) |= 4u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v31 = 0;
                unsigned int v32 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_66;
                  }
                  unint64_t v33 = v21++;
                  char v34 = *(unsigned char *)(v22 + v33);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v34 & 0x7F) << v31;
                  if ((v34 & 0x80) == 0) {
                    break;
                  }
                  v31 += 7;
                  BOOL v14 = v32++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_65:
                    unint64_t v2 = v33 + 1;
                    goto LABEL_66;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_65;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_66;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_66:
              *(_DWORD *)(a1 + 24) = v25;
LABEL_67:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 4u:
              *(unsigned char *)(a1 + 40) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_43;
              }
              *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_60;
            case 5u:
              *(unsigned char *)(a1 + 40) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
LABEL_60:
                unint64_t v2 = *((void *)this + 1) + 4;
LABEL_61:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_43:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_67;
            case 6u:
              *(unsigned char *)(a1 + 40) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v28 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v27 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v28 = v27 != 0;
              }
              *(unsigned char *)(a1 + 36) = v28;
              goto LABEL_67;
            case 7u:
              *(unsigned char *)(a1 + 40) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v30 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v29 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v30 = v29 != 0;
              }
              *(unsigned char *)(a1 + 37) = v30;
              goto LABEL_67;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_67;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C6F0E0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 40);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 16));
    char v4 = *(unsigned char *)(v3 + 40);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(result + 40) & 1) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 0x10) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_14:
    uint64_t result = PB::Writer::write(this);
    if ((*(unsigned char *)(v3 + 40) & 0x40) == 0) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_13:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 0x20) != 0) {
    goto LABEL_14;
  }
LABEL_7:
  if ((v4 & 0x40) == 0) {
    return result;
  }
LABEL_15:

  return PB::Writer::write(this);
}

uint64_t sub_227C6F1DC(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC28170;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_227C6F204(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C6F23C(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC28170;
  *(_DWORD *)(result + 20) = 0;
  if (*(unsigned char *)(a2 + 20))
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 20) = 1;
    *(void *)(result + 8) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 20) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
LABEL_5:
    char v4 = *(unsigned char *)(a2 + 16);
    *(unsigned char *)(result + 20) = v2;
    *(unsigned char *)(result + 16) = v4;
  }
  return result;
}

uint64_t sub_227C6F2A0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "isStart");
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if (v5) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C6F31C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 >= *((void *)this + 2))
        {
          BOOL v21 = 0;
          *((unsigned char *)this + 24) = 1;
        }
        else
        {
          int v20 = *(unsigned __int8 *)(*(void *)this + v2++);
          *((void *)this + 1) = v2;
          BOOL v21 = v20 != 0;
        }
        *(unsigned char *)(a1 + 16) = v21;
      }
      else if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C6F504(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    return PB::Writer::write(this);
  }
  return result;
}

uint64_t sub_227C6F570(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC281A8;
  *(_DWORD *)(result + 92) = 0;
  return result;
}

void sub_227C6F598(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227C6F5D0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC281A8;
  *(_DWORD *)(a1 + 92) = 0;
  __int16 v2 = *(_WORD *)(a2 + 92);
  if ((v2 & 0x40) != 0)
  {
    double result = *(double *)(a2 + 56);
    __int16 v3 = 64;
    *(_WORD *)(a1 + 92) = 64;
    *(double *)(a1 + 56) = result;
    __int16 v2 = *(_WORD *)(a2 + 92);
    if ((v2 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if (v2)
  {
LABEL_5:
    double result = *(double *)(a2 + 8);
    v3 |= 1u;
    *(_WORD *)(a1 + 92) = v3;
    *(double *)(a1 + 8) = result;
    __int16 v2 = *(_WORD *)(a2 + 92);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    double result = *(double *)(a2 + 16);
    v3 |= 2u;
    *(_WORD *)(a1 + 92) = v3;
    *(double *)(a1 + 16) = result;
    __int16 v2 = *(_WORD *)(a2 + 92);
    if ((v2 & 4) == 0)
    {
LABEL_8:
      if ((v2 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_20;
    }
  }
  else if ((v2 & 4) == 0)
  {
    goto LABEL_8;
  }
  double result = *(double *)(a2 + 24);
  v3 |= 4u;
  *(_WORD *)(a1 + 92) = v3;
  *(double *)(a1 + 24) = result;
  __int16 v2 = *(_WORD *)(a2 + 92);
  if ((v2 & 8) == 0)
  {
LABEL_9:
    if ((v2 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  double result = *(double *)(a2 + 32);
  v3 |= 8u;
  *(_WORD *)(a1 + 92) = v3;
  *(double *)(a1 + 32) = result;
  __int16 v2 = *(_WORD *)(a2 + 92);
  if ((v2 & 0x10) == 0)
  {
LABEL_10:
    if ((v2 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  double result = *(double *)(a2 + 40);
  v3 |= 0x10u;
  *(_WORD *)(a1 + 92) = v3;
  *(double *)(a1 + 40) = result;
  __int16 v2 = *(_WORD *)(a2 + 92);
  if ((v2 & 0x80) == 0)
  {
LABEL_11:
    if ((v2 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_22:
  double result = *(double *)(a2 + 64);
  v3 |= 0x80u;
  *(_WORD *)(a1 + 92) = v3;
  *(double *)(a1 + 64) = result;
  __int16 v2 = *(_WORD *)(a2 + 92);
  if ((v2 & 0x100) == 0)
  {
LABEL_12:
    if ((v2 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_24;
  }
LABEL_23:
  double result = *(double *)(a2 + 72);
  v3 |= 0x100u;
  *(_WORD *)(a1 + 92) = v3;
  *(double *)(a1 + 72) = result;
  __int16 v2 = *(_WORD *)(a2 + 92);
  if ((v2 & 0x800) == 0)
  {
LABEL_13:
    if ((v2 & 0x400) == 0) {
      goto LABEL_14;
    }
    goto LABEL_25;
  }
LABEL_24:
  char v5 = *(unsigned char *)(a2 + 88);
  v3 |= 0x800u;
  *(_WORD *)(a1 + 92) = v3;
  *(unsigned char *)(a1 + 88) = v5;
  __int16 v2 = *(_WORD *)(a2 + 92);
  if ((v2 & 0x400) == 0)
  {
LABEL_14:
    if ((v2 & 0x200) == 0) {
      goto LABEL_15;
    }
    goto LABEL_26;
  }
LABEL_25:
  int v6 = *(_DWORD *)(a2 + 84);
  v3 |= 0x400u;
  *(_WORD *)(a1 + 92) = v3;
  *(_DWORD *)(a1 + 84) = v6;
  __int16 v2 = *(_WORD *)(a2 + 92);
  if ((v2 & 0x200) == 0)
  {
LABEL_15:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_27;
  }
LABEL_26:
  LODWORD(result) = *(_DWORD *)(a2 + 80);
  v3 |= 0x200u;
  *(_WORD *)(a1 + 92) = v3;
  *(_DWORD *)(a1 + 80) = LODWORD(result);
  __int16 v2 = *(_WORD *)(a2 + 92);
  if ((v2 & 0x1000) == 0)
  {
LABEL_16:
    if ((v2 & 0x20) == 0) {
      return result;
    }
LABEL_28:
    double result = *(double *)(a2 + 48);
    *(_WORD *)(a1 + 92) = v3 | 0x20;
    *(double *)(a1 + 48) = result;
    return result;
  }
LABEL_27:
  char v7 = *(unsigned char *)(a2 + 89);
  v3 |= 0x1000u;
  *(_WORD *)(a1 + 92) = v3;
  *(unsigned char *)(a1 + 89) = v7;
  if ((*(_WORD *)(a2 + 92) & 0x20) != 0) {
    goto LABEL_28;
  }
  return result;
}

uint64_t sub_227C6F768(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 0x200) != 0)
  {
    PB::TextFormatter::format(this, "distanceFromParticleFilter", *(float *)(a1 + 80));
    __int16 v5 = *(_WORD *)(a1 + 92);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v5 & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "horizontalAngle", *(double *)(a1 + 8));
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 2) == 0)
  {
LABEL_4:
    if ((v5 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "horizontalAngleUncertainty", *(double *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 4) == 0)
  {
LABEL_5:
    if ((v5 & 0x800) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "horizontalAngleUncertaintyUnfiltered", *(double *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 0x800) == 0)
  {
LABEL_6:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "isConverged");
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 0x1000) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "isDistanceValid");
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "positionX", *(double *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "positionY", *(double *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 0x20) == 0)
  {
LABEL_10:
    if ((v5 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "positionZ", *(double *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 0x400) == 0)
  {
LABEL_11:
    if ((v5 & 0x40) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "revokeReason");
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 0x40) == 0)
  {
LABEL_12:
    if ((v5 & 0x80) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 56));
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 0x80) == 0)
  {
LABEL_13:
    if ((v5 & 0x100) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_29:
  PB::TextFormatter::format(this, "velocityX", *(double *)(a1 + 64));
  if ((*(_WORD *)(a1 + 92) & 0x100) != 0) {
LABEL_14:
  }
    PB::TextFormatter::format(this, "velocityY", *(double *)(a1 + 72));
LABEL_15:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C6F94C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 92) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 56) = *(void *)(*(void *)this + v2);
              goto LABEL_77;
            case 2u:
              *(_WORD *)(a1 + 92) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_77;
            case 3u:
              *(_WORD *)(a1 + 92) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_77;
            case 4u:
              *(_WORD *)(a1 + 92) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
              goto LABEL_77;
            case 5u:
              *(_WORD *)(a1 + 92) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
              goto LABEL_77;
            case 6u:
              *(_WORD *)(a1 + 92) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
              goto LABEL_77;
            case 7u:
              *(_WORD *)(a1 + 92) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 64) = *(void *)(*(void *)this + v2);
              goto LABEL_77;
            case 8u:
              *(_WORD *)(a1 + 92) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 72) = *(void *)(*(void *)this + v2);
              goto LABEL_77;
            case 9u:
              *(_WORD *)(a1 + 92) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v22 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v21 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v22 = v21 != 0;
              }
              *(unsigned char *)(a1 + 88) = v22;
              goto LABEL_84;
            case 0xAu:
              *(_WORD *)(a1 + 92) |= 0x400u;
              unint64_t v23 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v24 = *(void *)this;
              if (v23 > 0xFFFFFFFFFFFFFFF5 || v23 + 10 > v2)
              {
                char v31 = 0;
                unsigned int v32 = 0;
                uint64_t v27 = 0;
                if (v2 <= v23) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v23)
                  {
                    LODWORD(v27) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_83;
                  }
                  unint64_t v33 = v23++;
                  char v34 = *(unsigned char *)(v24 + v33);
                  *((void *)this + 1) = v23;
                  v27 |= (unint64_t)(v34 & 0x7F) << v31;
                  if ((v34 & 0x80) == 0) {
                    break;
                  }
                  v31 += 7;
                  BOOL v14 = v32++ > 8;
                  if (v14)
                  {
                    LODWORD(v27) = 0;
LABEL_82:
                    unint64_t v2 = v33 + 1;
                    goto LABEL_83;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v27) = 0;
                }
                goto LABEL_82;
              }
              char v25 = 0;
              unsigned int v26 = 0;
              uint64_t v27 = 0;
              do
              {
                unint64_t v2 = v23 + 1;
                *((void *)this + 1) = v23 + 1;
                char v28 = *(unsigned char *)(v24 + v23);
                v27 |= (unint64_t)(v28 & 0x7F) << v25;
                if ((v28 & 0x80) == 0) {
                  goto LABEL_83;
                }
                v25 += 7;
                unint64_t v23 = v2;
                BOOL v14 = v26++ > 8;
              }
              while (!v14);
              LODWORD(v27) = 0;
LABEL_83:
              *(_DWORD *)(a1 + 84) = v27;
LABEL_84:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 0xBu:
              *(_WORD *)(a1 + 92) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v2);
              unint64_t v2 = *((void *)this + 1) + 4;
              goto LABEL_78;
            case 0xCu:
              *(_WORD *)(a1 + 92) |= 0x1000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v30 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v29 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v30 = v29 != 0;
              }
              *(unsigned char *)(a1 + 89) = v30;
              goto LABEL_84;
            case 0xDu:
              *(_WORD *)(a1 + 92) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
LABEL_77:
                unint64_t v2 = *((void *)this + 1) + 8;
LABEL_78:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_64:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_84;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_84;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C6FEB4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 92);
  if ((v4 & 0x40) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 56));
    __int16 v4 = *(_WORD *)(v3 + 92);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v4 & 1) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 2) == 0)
  {
LABEL_4:
    if ((v4 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24));
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32));
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40));
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 0x80) == 0)
  {
LABEL_8:
    if ((v4 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 64));
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 0x100) == 0)
  {
LABEL_9:
    if ((v4 & 0x800) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 72));
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 0x800) == 0)
  {
LABEL_10:
    if ((v4 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 0x400) == 0)
  {
LABEL_11:
    if ((v4 & 0x200) == 0) {
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 0x200) == 0)
  {
LABEL_12:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_13;
    }
LABEL_26:
    uint64_t result = PB::Writer::write(this);
    if ((*(_WORD *)(v3 + 92) & 0x20) == 0) {
      return result;
    }
    goto LABEL_27;
  }
LABEL_25:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80));
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 0x1000) != 0) {
    goto LABEL_26;
  }
LABEL_13:
  if ((v4 & 0x20) == 0) {
    return result;
  }
LABEL_27:
  double v5 = *(double *)(v3 + 48);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227C70058(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC281E0;
  *(_DWORD *)(result + 44) = 0;
  return result;
}

void sub_227C70080(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227C700B8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC281E0;
  *(_DWORD *)(a1 + 44) = 0;
  char v2 = *(unsigned char *)(a2 + 44);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 44) = 1;
    *(void *)(a1 + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 44);
    if ((v2 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 44) & 0x10) != 0)
  {
LABEL_5:
    LODWORD(v4) = *(_DWORD *)(a2 + 28);
    v3 |= 0x10u;
    *(unsigned char *)(a1 + 44) = v3;
    *(_DWORD *)(a1 + 28) = v4;
    char v2 = *(unsigned char *)(a2 + 44);
  }
LABEL_6:
  if ((v2 & 0x20) != 0)
  {
    LODWORD(v4) = *(_DWORD *)(a2 + 32);
    v3 |= 0x20u;
    *(unsigned char *)(a1 + 44) = v3;
    *(_DWORD *)(a1 + 32) = v4;
    char v2 = *(unsigned char *)(a2 + 44);
    if ((v2 & 2) == 0)
    {
LABEL_8:
      if ((v2 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_15;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_8;
  }
  LODWORD(v4) = *(_DWORD *)(a2 + 16);
  v3 |= 2u;
  *(unsigned char *)(a1 + 44) = v3;
  *(_DWORD *)(a1 + 16) = v4;
  char v2 = *(unsigned char *)(a2 + 44);
  if ((v2 & 0x40) == 0)
  {
LABEL_9:
    if ((v2 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_16;
  }
LABEL_15:
  LODWORD(v4) = *(_DWORD *)(a2 + 36);
  v3 |= 0x40u;
  *(unsigned char *)(a1 + 44) = v3;
  *(_DWORD *)(a1 + 36) = v4;
  char v2 = *(unsigned char *)(a2 + 44);
  if ((v2 & 0x80) == 0)
  {
LABEL_10:
    if ((v2 & 4) == 0) {
      goto LABEL_11;
    }
    goto LABEL_17;
  }
LABEL_16:
  LODWORD(v4) = *(_DWORD *)(a2 + 40);
  v3 |= 0x80u;
  *(unsigned char *)(a1 + 44) = v3;
  *(_DWORD *)(a1 + 40) = v4;
  char v2 = *(unsigned char *)(a2 + 44);
  if ((v2 & 4) == 0)
  {
LABEL_11:
    if ((v2 & 8) == 0) {
      return *(float *)&v4;
    }
    goto LABEL_18;
  }
LABEL_17:
  LODWORD(v4) = *(_DWORD *)(a2 + 20);
  v3 |= 4u;
  *(unsigned char *)(a1 + 44) = v3;
  *(_DWORD *)(a1 + 20) = v4;
  if ((*(unsigned char *)(a2 + 44) & 8) == 0) {
    return *(float *)&v4;
  }
LABEL_18:
  LODWORD(v4) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 44) = v3 | 8;
  *(_DWORD *)(a1 + 24) = v4;
  return *(float *)&v4;
}

uint64_t sub_227C701C4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "dot", *(float *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 44);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(a1 + 44) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "noiseVelocityX", *(float *)(a1 + 20));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(this, "noiseVelocityY", *(float *)(a1 + 24));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  PB::TextFormatter::format(this, "speed", *(float *)(a1 + 28));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 0x20) == 0)
  {
LABEL_6:
    if ((v5 & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "speedUncertainty", *(float *)(a1 + 32));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 1) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_18:
    PB::TextFormatter::format(this, "velocityX", *(float *)(a1 + 36));
    if ((*(unsigned char *)(a1 + 44) & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }
LABEL_17:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 0x40) != 0) {
    goto LABEL_18;
  }
LABEL_8:
  if ((v5 & 0x80) == 0) {
    goto LABEL_9;
  }
LABEL_19:
  PB::TextFormatter::format(this, "velocityY", *(float *)(a1 + 40));
LABEL_9:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C70308(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 44) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_47;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          goto LABEL_50;
        case 2u:
          *(unsigned char *)(a1 + 44) |= 0x10u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_47;
          }
          *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_49;
        case 3u:
          *(unsigned char *)(a1 + 44) |= 0x20u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_47;
          }
          *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_49;
        case 4u:
          *(unsigned char *)(a1 + 44) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_47;
          }
          *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_49;
        case 5u:
          *(unsigned char *)(a1 + 44) |= 0x40u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_47;
          }
          *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_49;
        case 6u:
          *(unsigned char *)(a1 + 44) |= 0x80u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_47;
          }
          *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_49;
        case 7u:
          *(unsigned char *)(a1 + 44) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_47;
          }
          *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_49;
        case 8u:
          *(unsigned char *)(a1 + 44) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2))
          {
LABEL_47:
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
LABEL_49:
            unint64_t v2 = *((void *)this + 1) + 4;
LABEL_50:
            *((void *)this + 1) = v2;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C70678(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 44);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 44);
    if ((v4 & 0x10) == 0)
    {
LABEL_3:
      if ((v4 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(result + 44) & 0x10) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 0x20) == 0)
  {
LABEL_4:
    if ((v4 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 2) == 0)
  {
LABEL_5:
    if ((v4 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16));
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 0x40) == 0)
  {
LABEL_6:
    if ((v4 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36));
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 0x80) == 0)
  {
LABEL_7:
    if ((v4 & 4) == 0) {
      goto LABEL_8;
    }
LABEL_16:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
    if ((*(unsigned char *)(v3 + 44) & 8) == 0) {
      return result;
    }
    goto LABEL_17;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 4) != 0) {
    goto LABEL_16;
  }
LABEL_8:
  if ((v4 & 8) == 0) {
    return result;
  }
LABEL_17:
  float v5 = *(float *)(v3 + 24);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227C70790(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC28218;
  *(_DWORD *)(result + 60) = 0;
  return result;
}

void sub_227C707B8(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C707F0(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC28218;
  *(_DWORD *)(result + 60) = 0;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x10) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 40);
    __int16 v3 = 16;
    *(_WORD *)(result + 60) = 16;
    *(void *)(result + 40) = v4;
    __int16 v2 = *(_WORD *)(a2 + 60);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 16);
    v3 |= 2u;
    *(_WORD *)(result + 60) = v3;
    *(void *)(result + 16) = v5;
    __int16 v2 = *(_WORD *)(a2 + 60);
  }
LABEL_6:
  if ((v2 & 0x20) != 0)
  {
    uint64_t v6 = *(void *)(a2 + 48);
    v3 |= 0x20u;
    *(_WORD *)(result + 60) = v3;
    *(void *)(result + 48) = v6;
    __int16 v2 = *(_WORD *)(a2 + 60);
    if ((v2 & 8) == 0)
    {
LABEL_8:
      if ((v2 & 1) == 0) {
        goto LABEL_9;
      }
      goto LABEL_16;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_WORD *)(result + 60) = v3;
  *(void *)(result + 32) = v7;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 1) == 0)
  {
LABEL_9:
    if ((v2 & 4) == 0) {
      goto LABEL_10;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t v8 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(result + 60) = v3;
  *(void *)(result + 8) = v8;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 4) == 0)
  {
LABEL_10:
    if ((v2 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t v9 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(_WORD *)(result + 60) = v3;
  *(void *)(result + 24) = v9;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x100) == 0)
  {
LABEL_11:
    if ((v2 & 0x40) == 0) {
      goto LABEL_12;
    }
    goto LABEL_19;
  }
LABEL_18:
  char v10 = *(unsigned char *)(a2 + 58);
  v3 |= 0x100u;
  *(_WORD *)(result + 60) = v3;
  *(unsigned char *)(result + 58) = v10;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x40) == 0)
  {
LABEL_12:
    if ((v2 & 0x80) == 0) {
      return result;
    }
LABEL_20:
    char v12 = *(unsigned char *)(a2 + 57);
    *(_WORD *)(result + 60) = v3 | 0x80;
    *(unsigned char *)(result + 57) = v12;
    return result;
  }
LABEL_19:
  char v11 = *(unsigned char *)(a2 + 56);
  v3 |= 0x40u;
  *(_WORD *)(result + 60) = v3;
  *(unsigned char *)(result + 56) = v11;
  if ((*(_WORD *)(a2 + 60) & 0x80) != 0) {
    goto LABEL_20;
  }
  return result;
}

uint64_t sub_227C70918(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 60);
  if (v5)
  {
    PB::TextFormatter::format(this, "fractionAboveThreshold", *(double *)(a1 + 8));
    __int16 v5 = *(_WORD *)(a1 + 60);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "horizontalDistance", *(double *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x40) == 0)
  {
LABEL_4:
    if ((v5 & 0x80) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "isAboveBelow");
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x80) == 0)
  {
LABEL_5:
    if ((v5 & 0x100) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  PB::TextFormatter::format(this, "isAboveBelowMessageShowing");
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x100) == 0)
  {
LABEL_6:
    if ((v5 & 4) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "isConverged");
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "likelihoodAboveThreshold", *(double *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "relativeAltitude", *(double *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_21:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 40));
  if ((*(_WORD *)(a1 + 60) & 0x20) != 0) {
LABEL_10:
  }
    PB::TextFormatter::format(this, "verticalDistance", *(double *)(a1 + 48));
LABEL_11:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C70A7C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(_WORD *)(a1 + 60) |= 0x10u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_43;
          }
          *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
          goto LABEL_55;
        case 2u:
          *(_WORD *)(a1 + 60) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_43;
          }
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
          goto LABEL_55;
        case 3u:
          *(_WORD *)(a1 + 60) |= 0x20u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_43;
          }
          *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
          goto LABEL_55;
        case 4u:
          *(_WORD *)(a1 + 60) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_43;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
          goto LABEL_55;
        case 5u:
          *(_WORD *)(a1 + 60) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_43;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          goto LABEL_55;
        case 6u:
          *(_WORD *)(a1 + 60) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
LABEL_55:
            unint64_t v2 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_43:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        case 7u:
          *(_WORD *)(a1 + 60) |= 0x100u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 >= *((void *)this + 2))
          {
            BOOL v24 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            int v23 = *(unsigned __int8 *)(*(void *)this + v2++);
            *((void *)this + 1) = v2;
            BOOL v24 = v23 != 0;
          }
          *(unsigned char *)(a1 + 58) = v24;
          break;
        case 8u:
          *(_WORD *)(a1 + 60) |= 0x40u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 >= *((void *)this + 2))
          {
            BOOL v21 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            int v20 = *(unsigned __int8 *)(*(void *)this + v2++);
            *((void *)this + 1) = v2;
            BOOL v21 = v20 != 0;
          }
          *(unsigned char *)(a1 + 56) = v21;
          break;
        case 9u:
          *(_WORD *)(a1 + 60) |= 0x80u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 >= *((void *)this + 2))
          {
            BOOL v26 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            int v25 = *(unsigned __int8 *)(*(void *)this + v2++);
            *((void *)this + 1) = v2;
            BOOL v26 = v25 != 0;
          }
          *(unsigned char *)(a1 + 57) = v26;
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C70E44(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 60);
  if ((v4 & 0x10) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 40));
    __int16 v4 = *(_WORD *)(v3 + 60);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x20) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48));
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32));
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 1) == 0)
  {
LABEL_6:
    if ((v4 & 4) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 0x100) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24));
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x100) == 0)
  {
LABEL_8:
    if ((v4 & 0x40) == 0) {
      goto LABEL_9;
    }
LABEL_18:
    uint64_t result = PB::Writer::write(this);
    if ((*(_WORD *)(v3 + 60) & 0x80) == 0) {
      return result;
    }
    goto LABEL_19;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x40) != 0) {
    goto LABEL_18;
  }
LABEL_9:
  if ((v4 & 0x80) == 0) {
    return result;
  }
LABEL_19:

  return PB::Writer::write(this);
}

uint64_t sub_227C70F78(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC28250;
  *(_DWORD *)(result + 80) = 0;
  return result;
}

void sub_227C70FA0(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227C70FD8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC28250;
  *(_DWORD *)(a1 + 80) = 0;
  __int16 v2 = *(_WORD *)(a2 + 80);
  if (v2)
  {
    double result = *(double *)(a2 + 8);
    __int16 v3 = 1;
    *(_WORD *)(a1 + 80) = 1;
    *(double *)(a1 + 8) = result;
    __int16 v2 = *(_WORD *)(a2 + 80);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 4) != 0)
  {
LABEL_5:
    double result = *(double *)(a2 + 24);
    v3 |= 4u;
    *(_WORD *)(a1 + 80) = v3;
    *(double *)(a1 + 24) = result;
    __int16 v2 = *(_WORD *)(a2 + 80);
  }
LABEL_6:
  if ((v2 & 0x10) != 0)
  {
    LODWORD(result) = *(_DWORD *)(a2 + 36);
    v3 |= 0x10u;
    *(_WORD *)(a1 + 80) = v3;
    *(_DWORD *)(a1 + 36) = LODWORD(result);
    __int16 v2 = *(_WORD *)(a2 + 80);
    if ((v2 & 0x20) == 0)
    {
LABEL_8:
      if ((v2 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_22;
    }
  }
  else if ((v2 & 0x20) == 0)
  {
    goto LABEL_8;
  }
  LODWORD(result) = *(_DWORD *)(a2 + 40);
  v3 |= 0x20u;
  *(_WORD *)(a1 + 80) = v3;
  *(_DWORD *)(a1 + 40) = LODWORD(result);
  __int16 v2 = *(_WORD *)(a2 + 80);
  if ((v2 & 0x40) == 0)
  {
LABEL_9:
    if ((v2 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  LODWORD(result) = *(_DWORD *)(a2 + 44);
  v3 |= 0x40u;
  *(_WORD *)(a1 + 80) = v3;
  *(_DWORD *)(a1 + 44) = LODWORD(result);
  __int16 v2 = *(_WORD *)(a2 + 80);
  if ((v2 & 8) == 0)
  {
LABEL_10:
    if ((v2 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_24;
  }
LABEL_23:
  LODWORD(result) = *(_DWORD *)(a2 + 32);
  v3 |= 8u;
  *(_WORD *)(a1 + 80) = v3;
  *(_DWORD *)(a1 + 32) = LODWORD(result);
  __int16 v2 = *(_WORD *)(a2 + 80);
  if ((v2 & 0x100) == 0)
  {
LABEL_11:
    if ((v2 & 0x200) == 0) {
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_24:
  LODWORD(result) = *(_DWORD *)(a2 + 52);
  v3 |= 0x100u;
  *(_WORD *)(a1 + 80) = v3;
  *(_DWORD *)(a1 + 52) = LODWORD(result);
  __int16 v2 = *(_WORD *)(a2 + 80);
  if ((v2 & 0x200) == 0)
  {
LABEL_12:
    if ((v2 & 0x400) == 0) {
      goto LABEL_13;
    }
    goto LABEL_26;
  }
LABEL_25:
  LODWORD(result) = *(_DWORD *)(a2 + 56);
  v3 |= 0x200u;
  *(_WORD *)(a1 + 80) = v3;
  *(_DWORD *)(a1 + 56) = LODWORD(result);
  __int16 v2 = *(_WORD *)(a2 + 80);
  if ((v2 & 0x400) == 0)
  {
LABEL_13:
    if ((v2 & 0x80) == 0) {
      goto LABEL_14;
    }
    goto LABEL_27;
  }
LABEL_26:
  LODWORD(result) = *(_DWORD *)(a2 + 60);
  v3 |= 0x400u;
  *(_WORD *)(a1 + 80) = v3;
  *(_DWORD *)(a1 + 60) = LODWORD(result);
  __int16 v2 = *(_WORD *)(a2 + 80);
  if ((v2 & 0x80) == 0)
  {
LABEL_14:
    if ((v2 & 0x800) == 0) {
      goto LABEL_15;
    }
    goto LABEL_28;
  }
LABEL_27:
  LODWORD(result) = *(_DWORD *)(a2 + 48);
  v3 |= 0x80u;
  *(_WORD *)(a1 + 80) = v3;
  *(_DWORD *)(a1 + 48) = LODWORD(result);
  __int16 v2 = *(_WORD *)(a2 + 80);
  if ((v2 & 0x800) == 0)
  {
LABEL_15:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_29;
  }
LABEL_28:
  LODWORD(result) = *(_DWORD *)(a2 + 64);
  v3 |= 0x800u;
  *(_WORD *)(a1 + 80) = v3;
  *(_DWORD *)(a1 + 64) = LODWORD(result);
  __int16 v2 = *(_WORD *)(a2 + 80);
  if ((v2 & 0x1000) == 0)
  {
LABEL_16:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_30;
  }
LABEL_29:
  LODWORD(result) = *(_DWORD *)(a2 + 68);
  v3 |= 0x1000u;
  *(_WORD *)(a1 + 80) = v3;
  *(_DWORD *)(a1 + 68) = LODWORD(result);
  __int16 v2 = *(_WORD *)(a2 + 80);
  if ((v2 & 0x2000) == 0)
  {
LABEL_17:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_31;
  }
LABEL_30:
  LODWORD(result) = *(_DWORD *)(a2 + 72);
  v3 |= 0x2000u;
  *(_WORD *)(a1 + 80) = v3;
  *(_DWORD *)(a1 + 72) = LODWORD(result);
  __int16 v2 = *(_WORD *)(a2 + 80);
  if ((v2 & 0x4000) == 0)
  {
LABEL_18:
    if ((v2 & 2) == 0) {
      return result;
    }
LABEL_32:
    double result = *(double *)(a2 + 16);
    *(_WORD *)(a1 + 80) = v3 | 2;
    *(double *)(a1 + 16) = result;
    return result;
  }
LABEL_31:
  char v5 = *(unsigned char *)(a2 + 76);
  v3 |= 0x4000u;
  *(_WORD *)(a1 + 80) = v3;
  *(unsigned char *)(a1 + 76) = v5;
  if ((*(_WORD *)(a2 + 80) & 2) != 0) {
    goto LABEL_32;
  }
  return result;
}

uint64_t sub_227C711A8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 80);
  if (v5)
  {
    PB::TextFormatter::format(this, "lastStateTimestamp", *(double *)(a1 + 8));
    __int16 v5 = *(_WORD *)(a1 + 80);
    if ((v5 & 8) == 0)
    {
LABEL_3:
      if ((v5 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_22;
    }
  }
  else if ((v5 & 8) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "qStartW", *(float *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 80);
  if ((v5 & 0x10) == 0)
  {
LABEL_4:
    if ((v5 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "qStartX", *(float *)(a1 + 36));
  __int16 v5 = *(_WORD *)(a1 + 80);
  if ((v5 & 0x20) == 0)
  {
LABEL_5:
    if ((v5 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "qStartY", *(float *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 80);
  if ((v5 & 0x40) == 0)
  {
LABEL_6:
    if ((v5 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "qStartZ", *(float *)(a1 + 44));
  __int16 v5 = *(_WORD *)(a1 + 80);
  if ((v5 & 0x80) == 0)
  {
LABEL_7:
    if ((v5 & 0x100) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "qStopW", *(float *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 80);
  if ((v5 & 0x100) == 0)
  {
LABEL_8:
    if ((v5 & 0x200) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "qStopX", *(float *)(a1 + 52));
  __int16 v5 = *(_WORD *)(a1 + 80);
  if ((v5 & 0x200) == 0)
  {
LABEL_9:
    if ((v5 & 0x400) == 0) {
      goto LABEL_10;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "qStopY", *(float *)(a1 + 56));
  __int16 v5 = *(_WORD *)(a1 + 80);
  if ((v5 & 0x400) == 0)
  {
LABEL_10:
    if ((v5 & 0x800) == 0) {
      goto LABEL_11;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "qStopZ", *(float *)(a1 + 60));
  __int16 v5 = *(_WORD *)(a1 + 80);
  if ((v5 & 0x800) == 0)
  {
LABEL_11:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(this, "rBoresightX", *(float *)(a1 + 64));
  __int16 v5 = *(_WORD *)(a1 + 80);
  if ((v5 & 0x1000) == 0)
  {
LABEL_12:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "rBoresightY", *(float *)(a1 + 68));
  __int16 v5 = *(_WORD *)(a1 + 80);
  if ((v5 & 0x2000) == 0)
  {
LABEL_13:
    if ((v5 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(this, "rBoresightZ", *(float *)(a1 + 72));
  __int16 v5 = *(_WORD *)(a1 + 80);
  if ((v5 & 2) == 0)
  {
LABEL_14:
    if ((v5 & 4) == 0) {
      goto LABEL_15;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(this, "srcTimestamp", *(double *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 80);
  if ((v5 & 4) == 0)
  {
LABEL_15:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_33:
  PB::TextFormatter::format(this, "targetTimestamp", *(double *)(a1 + 24));
  if ((*(_WORD *)(a1 + 80) & 0x4000) != 0) {
LABEL_16:
  }
    PB::TextFormatter::format(this, "useForwardPrediction");
LABEL_17:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C713CC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(_WORD *)(a1 + 80) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_68;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          goto LABEL_65;
        case 2u:
          *(_WORD *)(a1 + 80) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_68;
          }
          *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
          goto LABEL_65;
        case 3u:
          *(_WORD *)(a1 + 80) |= 0x10u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_68;
          }
          *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_72;
        case 4u:
          *(_WORD *)(a1 + 80) |= 0x20u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_68;
          }
          *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_72;
        case 5u:
          *(_WORD *)(a1 + 80) |= 0x40u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_68;
          }
          *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_72;
        case 6u:
          *(_WORD *)(a1 + 80) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_68;
          }
          *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_72;
        case 7u:
          *(_WORD *)(a1 + 80) |= 0x100u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_68;
          }
          *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_72;
        case 8u:
          *(_WORD *)(a1 + 80) |= 0x200u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_68;
          }
          *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_72;
        case 9u:
          *(_WORD *)(a1 + 80) |= 0x400u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_68;
          }
          *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_72;
        case 0xAu:
          *(_WORD *)(a1 + 80) |= 0x80u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_68;
          }
          *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_72;
        case 0xBu:
          *(_WORD *)(a1 + 80) |= 0x800u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_68;
          }
          *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_72;
        case 0xCu:
          *(_WORD *)(a1 + 80) |= 0x1000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_68;
          }
          *(_DWORD *)(a1 + 68) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_72;
        case 0xDu:
          *(_WORD *)(a1 + 80) |= 0x2000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_68;
          }
          *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v2);
LABEL_72:
          unint64_t v2 = *((void *)this + 1) + 4;
          goto LABEL_73;
        case 0xEu:
          *(_WORD *)(a1 + 80) |= 0x4000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 >= *((void *)this + 2))
          {
            BOOL v22 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            int v21 = *(unsigned __int8 *)(*(void *)this + v2++);
            *((void *)this + 1) = v2;
            BOOL v22 = v21 != 0;
          }
          *(unsigned char *)(a1 + 76) = v22;
          break;
        case 0xFu:
          *(_WORD *)(a1 + 80) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2))
          {
LABEL_68:
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
LABEL_65:
            unint64_t v2 = *((void *)this + 1) + 8;
LABEL_73:
            *((void *)this + 1) = v2;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C718EC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 80);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    __int16 v4 = *(_WORD *)(v3 + 80);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24));
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 0x10) == 0)
  {
LABEL_4:
    if ((v4 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36));
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 0x20) == 0)
  {
LABEL_5:
    if ((v4 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 0x40) == 0)
  {
LABEL_6:
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44));
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 8) == 0)
  {
LABEL_7:
    if ((v4 & 0x100) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 0x100) == 0)
  {
LABEL_8:
    if ((v4 & 0x200) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 0x200) == 0)
  {
LABEL_9:
    if ((v4 & 0x400) == 0) {
      goto LABEL_10;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56));
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 0x400) == 0)
  {
LABEL_10:
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 60));
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 0x80) == 0)
  {
LABEL_11:
    if ((v4 & 0x800) == 0) {
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48));
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 0x800) == 0)
  {
LABEL_12:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64));
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 0x1000) == 0)
  {
LABEL_13:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 68));
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 0x2000) == 0)
  {
LABEL_14:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_15;
    }
LABEL_30:
    uint64_t result = PB::Writer::write(this);
    if ((*(_WORD *)(v3 + 80) & 2) == 0) {
      return result;
    }
    goto LABEL_31;
  }
LABEL_29:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72));
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 0x4000) != 0) {
    goto LABEL_30;
  }
LABEL_15:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_31:
  double v5 = *(double *)(v3 + 16);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227C71AC8(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC28288;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void sub_227C71AF0(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227C71B28(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC28288;
  *(_DWORD *)(a1 + 24) = 0;
  char v2 = *(unsigned char *)(a2 + 24);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 24) = 1;
    *(void *)(a1 + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 24);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 24) & 2) != 0)
  {
LABEL_5:
    LODWORD(v4) = *(_DWORD *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(a1 + 24) = v3;
    *(_DWORD *)(a1 + 16) = v4;
    char v2 = *(unsigned char *)(a2 + 24);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    LODWORD(v4) = *(_DWORD *)(a2 + 20);
    *(unsigned char *)(a1 + 24) = v3 | 4;
    *(_DWORD *)(a1 + 20) = v4;
  }
  return *(float *)&v4;
}

uint64_t sub_227C71BA8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 24);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "pressure", *(float *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 24);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((*(unsigned char *)(a1 + 24) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "temperature", *(float *)(a1 + 20));
  if (*(unsigned char *)(a1 + 24)) {
LABEL_4:
  }
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
LABEL_5:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C71C4C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
        return v4 == 0;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 3) {
        break;
      }
      if (v20 == 2)
      {
        *(unsigned char *)(a1 + 24) |= 2u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
LABEL_36:
        unint64_t v2 = *((void *)this + 1) + 4;
        goto LABEL_37;
      }
      if (v20 != 1)
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
        goto LABEL_38;
      }
      *(unsigned char *)(a1 + 24) |= 1u;
      unint64_t v2 = *((void *)this + 1);
      if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2))
      {
LABEL_32:
        *((unsigned char *)this + 24) = 1;
        goto LABEL_38;
      }
      *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
      unint64_t v2 = *((void *)this + 1) + 8;
LABEL_37:
      *((void *)this + 1) = v2;
LABEL_38:
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    *(unsigned char *)(a1 + 24) |= 4u;
    unint64_t v2 = *((void *)this + 1);
    if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
      goto LABEL_32;
    }
    *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
    goto LABEL_36;
  }
  return v4 == 0;
}

uint64_t sub_227C71E70(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 24);
  if ((v4 & 1) == 0)
  {
    if ((*(unsigned char *)(result + 24) & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16));
    if ((*(unsigned char *)(v3 + 24) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
  char v4 = *(unsigned char *)(v3 + 24);
  if ((v4 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v4 & 4) == 0) {
    return result;
  }
LABEL_7:
  float v5 = *(float *)(v3 + 20);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227C71EFC(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC282C0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void sub_227C71F24(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227C71F5C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC282C0;
  *(_DWORD *)(a1 + 32) = 0;
  char v2 = *(unsigned char *)(a2 + 32);
  if ((v2 & 0x20) != 0)
  {
    float result = *(float *)(a2 + 28);
    char v3 = 32;
    *(unsigned char *)(a1 + 32) = 32;
    *(float *)(a1 + 28) = result;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 32) & 0x10) != 0)
  {
LABEL_5:
    float result = *(float *)(a2 + 24);
    v3 |= 0x10u;
    *(unsigned char *)(a1 + 32) = v3;
    *(float *)(a1 + 24) = result;
    char v2 = *(unsigned char *)(a2 + 32);
  }
LABEL_6:
  if ((v2 & 8) != 0)
  {
    float result = *(float *)(a2 + 20);
    v3 |= 8u;
    *(unsigned char *)(a1 + 32) = v3;
    *(float *)(a1 + 20) = result;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 1) == 0)
    {
LABEL_8:
      if ((v2 & 2) == 0) {
        goto LABEL_9;
      }
      goto LABEL_13;
    }
  }
  else if ((v2 & 1) == 0)
  {
    goto LABEL_8;
  }
  float result = *(float *)(a2 + 8);
  v3 |= 1u;
  *(unsigned char *)(a1 + 32) = v3;
  *(float *)(a1 + 8) = result;
  char v2 = *(unsigned char *)(a2 + 32);
  if ((v2 & 2) == 0)
  {
LABEL_9:
    if ((v2 & 4) == 0) {
      return result;
    }
LABEL_14:
    float result = *(float *)(a2 + 16);
    *(unsigned char *)(a1 + 32) = v3 | 4;
    *(float *)(a1 + 16) = result;
    return result;
  }
LABEL_13:
  float result = *(float *)(a2 + 12);
  v3 |= 2u;
  *(unsigned char *)(a1 + 32) = v3;
  *(float *)(a1 + 12) = result;
  if ((*(unsigned char *)(a2 + 32) & 4) != 0) {
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_227C72030(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 32);
  if (v5)
  {
    PB::TextFormatter::format(this, "inertialX", *(float *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 32);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((*(unsigned char *)(a1 + 32) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "inertialY", *(float *)(a1 + 12));
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  PB::TextFormatter::format(this, "inertialZ", *(float *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(this, "maxTemp", *(float *)(a1 + 20));
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_15:
  PB::TextFormatter::format(this, "medTocFactoryTemp", *(float *)(a1 + 24));
  if ((*(unsigned char *)(a1 + 32) & 0x20) != 0) {
LABEL_7:
  }
    PB::TextFormatter::format(this, "medianToc", *(float *)(a1 + 28));
LABEL_8:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C72134(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 32) |= 0x20u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_41;
          }
          *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_43;
        case 2u:
          *(unsigned char *)(a1 + 32) |= 0x10u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_41;
          }
          *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_43;
        case 3u:
          *(unsigned char *)(a1 + 32) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_41;
          }
          *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_43;
        case 4u:
          *(unsigned char *)(a1 + 32) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_41;
          }
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_43;
        case 5u:
          *(unsigned char *)(a1 + 32) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_41;
          }
          *(_DWORD *)(a1 + 12) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_43;
        case 6u:
          *(unsigned char *)(a1 + 32) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
LABEL_43:
            unint64_t v2 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_41:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C72424(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if ((v4 & 0x20) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(result + 28));
    char v4 = *(unsigned char *)(v3 + 32);
    if ((v4 & 0x10) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((*(unsigned char *)(result + 32) & 0x10) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 8) == 0)
  {
LABEL_4:
    if ((v4 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 1) == 0)
  {
LABEL_5:
    if ((v4 & 2) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 12));
    if ((*(unsigned char *)(v3 + 32) & 4) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_11:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 8));
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 2) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v4 & 4) == 0) {
    return result;
  }
LABEL_13:
  float v5 = *(float *)(v3 + 16);

  return PB::Writer::write(this, v5);
}

void *sub_227C72504(void *result)
{
  *uint64_t result = &unk_26DC282F8;
  result[1] = 0;
  return result;
}

void sub_227C72524(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC282F8;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C725A4(PB::Base *a1)
{
  sub_227C72524(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227C725DC(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC282F8;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C72684(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C72700(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C72918(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

void *sub_227C72934(void *result)
{
  *uint64_t result = &unk_26DC28330;
  result[1] = 0;
  return result;
}

void sub_227C72954(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC28330;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C729D4(PB::Base *a1)
{
  sub_227C72954(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227C72A0C(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC28330;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C72AB4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C72B30(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C72D48(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

uint64_t sub_227C72D64(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC28368;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void sub_227C72D8C(PB::Base *this)
{
  *(void *)this = &unk_26DC28368;
  uint64_t v2 = *((void *)this + 2);
  *((void *)this + 2) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C72E10(PB::Base *a1)
{
  sub_227C72D8C(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C72E48(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC28368;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  if (*(unsigned char *)(a2 + 24))
  {
    uint64_t v2 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 24) = 1;
    *(void *)(result + 8) = v2;
  }
  if (*(void *)(a2 + 16)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C72F14(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 24)) {
    PB::TextFormatter::format(this, "iostime", *(double *)(a1 + 8));
  }
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C72FAC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2) {
        operator new();
      }
      if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 24) |= 1u;
        unint64_t v20 = *((void *)this + 1);
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v20);
          *((void *)this + 1) += 8;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C7321C(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC283A0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_227C73240(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  if (*(unsigned char *)(result + 24)) {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
  }
  int v4 = *(const PB::Base **)(v3 + 16);
  if (v4)
  {
    return PB::Writer::writeSubmessage(this, v4);
  }
  return result;
}

void sub_227C732AC(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227C732E4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC283A0;
  *(_DWORD *)(a1 + 20) = 0;
  if (*(unsigned char *)(a2 + 20))
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(unsigned char *)(a1 + 20) = 1;
    *(void *)(a1 + 8) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 20) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
LABEL_5:
    float result = *(float *)(a2 + 16);
    *(unsigned char *)(a1 + 20) = v2;
    *(float *)(a1 + 16) = result;
  }
  return result;
}

uint64_t sub_227C73344(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "pressure", *(float *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if (v5) {
    PB::TextFormatter::format(this, "timestamp");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C733C0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
        {
          *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 4;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v20 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v21 = *(void *)this;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v24 = 0;
          if (v2 <= v20) {
            unint64_t v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v20)
            {
              uint64_t v24 = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_47;
            }
            unint64_t v29 = v20++;
            char v30 = *(unsigned char *)(v21 + v29);
            *((void *)this + 1) = v20;
            v24 |= (unint64_t)(v30 & 0x7F) << v27;
            if ((v30 & 0x80) == 0) {
              break;
            }
            v27 += 7;
            BOOL v14 = v28++ > 8;
            if (v14)
            {
              uint64_t v24 = 0;
              goto LABEL_46;
            }
          }
          if (*((unsigned char *)this + 24)) {
            uint64_t v24 = 0;
          }
LABEL_46:
          unint64_t v2 = v29 + 1;
        }
        else
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          while (1)
          {
            unint64_t v2 = v20 + 1;
            *((void *)this + 1) = v20 + 1;
            char v25 = *(unsigned char *)(v21 + v20);
            v24 |= (unint64_t)(v25 & 0x7F) << v22;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v22 += 7;
            unint64_t v20 = v2;
            BOOL v14 = v23++ > 8;
            if (v14)
            {
              uint64_t v24 = 0;
              break;
            }
          }
        }
LABEL_47:
        *(void *)(a1 + 8) = v24;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C73650(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    float v5 = *(float *)(v3 + 16);
    return PB::Writer::write(this, v5);
  }
  return result;
}

void *sub_227C736BC(void *result)
{
  *uint64_t result = &unk_26DC283D8;
  result[1] = 0;
  return result;
}

void sub_227C736DC(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC283D8;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C7375C(PB::Base *a1)
{
  sub_227C736DC(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227C73794(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC283D8;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C7383C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C738B8(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C73AD0(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

void *sub_227C73AEC(void *result)
{
  *uint64_t result = &unk_26DC28410;
  result[1] = 0;
  return result;
}

void sub_227C73B0C(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC28410;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C73B8C(PB::Base *a1)
{
  sub_227C73B0C(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227C73BC4(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC28410;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227C73C6C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C73CE8(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C73F00(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

uint64_t sub_227C73F1C(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC28448;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

void sub_227C73F48(PB::Base *this)
{
  *(void *)this = &unk_26DC28448;
  uint64_t v2 = *((void *)this + 5);
  *((void *)this + 5) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  unint64_t v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 2) = v3;
    operator delete(v3);
  }

  PB::Base::~Base(this);
}

void sub_227C73FDC(PB::Base *a1)
{
  sub_227C73F48(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C74014(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = &unk_26DC28448;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 48) = 0;
  if (*(void *)(a2 + 40)) {
    operator new();
  }
  if (a1 != a2) {
    sub_227B8B74C((char *)(a1 + 8), *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
  }
  if (*(unsigned char *)(a2 + 48))
  {
    uint64_t v4 = *(void *)(a2 + 32);
    *(unsigned char *)(a1 + 48) |= 1u;
    *(void *)(a1 + 32) = v4;
  }
  return a1;
}

uint64_t sub_227C74110(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 48)) {
    PB::TextFormatter::format(this, "originalTimestamp", *(double *)(a1 + 32));
  }
  uint64_t v5 = *(void *)(a1 + 40);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "pose");
  }
  uint64_t v6 = *(double **)(a1 + 8);
  uint64_t v7 = *(double **)(a1 + 16);
  while (v6 != v7)
  {
    double v8 = *v6++;
    PB::TextFormatter::format(this, "velocity", v8);
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227C741DC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    double v8 = (void **)(a1 + 8);
    uint64_t v9 = a1 + 24;
    while (1)
    {
      uint64_t v10 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        unint64_t v13 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v19 = v2 + 1;
          char v20 = *(unsigned char *)(v10 + v2);
          *((void *)this + 1) = v19;
          v13 |= (unint64_t)(v20 & 0x7F) << v17;
          if ((v20 & 0x80) == 0) {
            goto LABEL_21;
          }
          v17 += 7;
          unint64_t v2 = v19;
          if (v18++ >= 9)
          {
LABEL_20:
            unint64_t v13 = 0;
            goto LABEL_21;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
        return v4 == 0;
      }
      char v11 = 0;
      unsigned int v12 = 0;
      unint64_t v13 = 0;
      while (1)
      {
        unint64_t v14 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v15 = *(unsigned char *)(v10 + v2);
        v13 |= (unint64_t)(v15 & 0x7F) << v11;
        if ((v15 & 0x80) == 0) {
          break;
        }
        v11 += 7;
        unint64_t v2 = v14;
        if (v12++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      if ((v13 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v22 = v13 >> 3;
      if ((v13 >> 3) == 3) {
        break;
      }
      if (v22 == 2)
      {
        if ((v13 & 7) != 2)
        {
          unint64_t v39 = *(char **)(a1 + 16);
          unint64_t v38 = *(void *)(a1 + 24);
          if ((unint64_t)v39 >= v38)
          {
            unint64_t v41 = (char *)*v8;
            uint64_t v42 = (v39 - (unsigned char *)*v8) >> 3;
            unint64_t v43 = v42 + 1;
            if ((unint64_t)(v42 + 1) >> 61) {
LABEL_86:
            }
              sub_227B8B89C();
            uint64_t v44 = v38 - (void)v41;
            if (v44 >> 2 > v43) {
              unint64_t v43 = v44 >> 2;
            }
            if ((unint64_t)v44 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v45 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v45 = v43;
            }
            if (v45)
            {
              unint64_t v46 = (char *)sub_227B8B8B4(v9, v45);
              unint64_t v41 = *(char **)(a1 + 8);
              unint64_t v39 = *(char **)(a1 + 16);
            }
            else
            {
              unint64_t v46 = 0;
            }
            char v47 = &v46[8 * v42];
            *(void *)char v47 = 0;
            unint64_t v40 = v47 + 8;
            while (v39 != v41)
            {
              uint64_t v48 = *((void *)v39 - 1);
              v39 -= 8;
              *((void *)v47 - 1) = v48;
              v47 -= 8;
            }
            *(void *)(a1 + 8) = v47;
            *(void *)(a1 + 16) = v40;
            *(void *)(a1 + 24) = &v46[8 * v45];
            if (v41) {
              operator delete(v41);
            }
          }
          else
          {
            *(void *)unint64_t v39 = 0;
            unint64_t v40 = v39 + 8;
          }
          *(void *)(a1 + 16) = v40;
          unint64_t v49 = *((void *)this + 1);
          if (v49 > 0xFFFFFFFFFFFFFFF7 || v49 + 8 > *((void *)this + 2))
          {
LABEL_75:
            *((unsigned char *)this + 24) = 1;
            goto LABEL_78;
          }
          *(v40 - 1) = *(void *)(*(void *)this + v49);
          goto LABEL_77;
        }
        if (PB::Reader::placeMark()) {
          return 0;
        }
        unint64_t v24 = *((void *)this + 1);
        unint64_t v25 = *((void *)this + 2);
        while (v24 < v25 && !*((unsigned char *)this + 24))
        {
          char v27 = *(char **)(a1 + 16);
          unint64_t v26 = *(void *)(a1 + 24);
          if ((unint64_t)v27 >= v26)
          {
            unint64_t v29 = (char *)*v8;
            uint64_t v30 = (v27 - (unsigned char *)*v8) >> 3;
            unint64_t v31 = v30 + 1;
            if ((unint64_t)(v30 + 1) >> 61) {
              goto LABEL_86;
            }
            uint64_t v32 = v26 - (void)v29;
            if (v32 >> 2 > v31) {
              unint64_t v31 = v32 >> 2;
            }
            if ((unint64_t)v32 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v33 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v33 = v31;
            }
            if (v33)
            {
              char v34 = (char *)sub_227B8B8B4(v9, v33);
              unint64_t v29 = *(char **)(a1 + 8);
              char v27 = *(char **)(a1 + 16);
            }
            else
            {
              char v34 = 0;
            }
            unint64_t v35 = &v34[8 * v30];
            *(void *)unint64_t v35 = 0;
            unsigned int v28 = v35 + 8;
            while (v27 != v29)
            {
              uint64_t v36 = *((void *)v27 - 1);
              v27 -= 8;
              *((void *)v35 - 1) = v36;
              v35 -= 8;
            }
            *(void *)(a1 + 8) = v35;
            *(void *)(a1 + 16) = v28;
            *(void *)(a1 + 24) = &v34[8 * v33];
            if (v29) {
              operator delete(v29);
            }
          }
          else
          {
            *(void *)char v27 = 0;
            unsigned int v28 = v27 + 8;
          }
          *(void *)(a1 + 16) = v28;
          unint64_t v37 = *((void *)this + 1);
          if (v37 > 0xFFFFFFFFFFFFFFF7 || v37 + 8 > *((void *)this + 2))
          {
            *((unsigned char *)this + 24) = 1;
            break;
          }
          *(v28 - 1) = *(void *)(*(void *)this + v37);
          unint64_t v25 = *((void *)this + 2);
          unint64_t v24 = *((void *)this + 1) + 8;
          *((void *)this + 1) = v24;
        }
        PB::Reader::recallMark();
      }
      else
      {
        if (v22 == 1) {
          operator new();
        }
        if ((PB::Reader::skip(this) & 1) == 0) {
          return 0;
        }
      }
LABEL_78:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    *(unsigned char *)(a1 + 48) |= 1u;
    unint64_t v23 = *((void *)this + 1);
    if (v23 > 0xFFFFFFFFFFFFFFF7 || v23 + 8 > *((void *)this + 2)) {
      goto LABEL_75;
    }
    *(void *)(a1 + 32) = *(void *)(*(void *)this + v23);
LABEL_77:
    *((void *)this + 1) += 8;
    goto LABEL_78;
  }
  return v4 == 0;
}

uint64_t sub_227C7465C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(const PB::Base **)(result + 40);
  if (v4) {
    uint64_t result = PB::Writer::writeSubmessage(this, v4);
  }
  uint64_t v5 = *(double **)(v3 + 8);
  uint64_t v6 = *(double **)(v3 + 16);
  while (v5 != v6)
  {
    double v7 = *v5++;
    uint64_t result = PB::Writer::write(this, v7);
  }
  if (*(unsigned char *)(v3 + 48))
  {
    double v8 = *(double *)(v3 + 32);
    return PB::Writer::write(this, v8);
  }
  return result;
}

uint64_t sub_227C746F0(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC28480;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_227C74718(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C74750(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC28480;
  *(_DWORD *)(result + 20) = 0;
  if (*(unsigned char *)(a2 + 20))
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 20) = 1;
    *(void *)(result + 8) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 20) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
LABEL_5:
    int v4 = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(result + 20) = v2;
    *(_DWORD *)(result + 16) = v4;
  }
  return result;
}

uint64_t sub_227C747B4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "detectionMask");
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if (v5) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C74830(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v20 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v21 = *(void *)this;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v24 = 0;
          if (v2 <= v20) {
            unint64_t v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v20)
            {
              LODWORD(v24) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_47;
            }
            unint64_t v29 = v20++;
            char v30 = *(unsigned char *)(v21 + v29);
            *((void *)this + 1) = v20;
            v24 |= (unint64_t)(v30 & 0x7F) << v27;
            if ((v30 & 0x80) == 0) {
              break;
            }
            v27 += 7;
            BOOL v14 = v28++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              goto LABEL_46;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v24) = 0;
          }
LABEL_46:
          unint64_t v2 = v29 + 1;
        }
        else
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          while (1)
          {
            unint64_t v2 = v20 + 1;
            *((void *)this + 1) = v20 + 1;
            char v25 = *(unsigned char *)(v21 + v20);
            v24 |= (unint64_t)(v25 & 0x7F) << v22;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v22 += 7;
            unint64_t v20 = v2;
            BOOL v14 = v23++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              break;
            }
          }
        }
LABEL_47:
        *(_DWORD *)(a1 + 16) = v24;
      }
      else if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C74AC0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    return PB::Writer::writeVarInt(this);
  }
  return result;
}

uint64_t sub_227C74B2C(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC284B8;
  *(_DWORD *)(result + 88) = 0;
  return result;
}

void sub_227C74B54(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227C74B8C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC284B8;
  *(_DWORD *)(a1 + 88) = 0;
  int v2 = *(_DWORD *)(a2 + 88);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    int v3 = 1;
    *(_DWORD *)(a1 + 88) = 1;
    *(void *)(a1 + 8) = v4;
    int v2 = *(_DWORD *)(a2 + 88);
    if ((v2 & 0x100) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 0x100) != 0)
  {
LABEL_5:
    float result = *(float *)(a2 + 44);
    v3 |= 0x100u;
    *(_DWORD *)(a1 + 88) = v3;
    *(float *)(a1 + 44) = result;
    int v2 = *(_DWORD *)(a2 + 88);
  }
LABEL_6:
  if ((v2 & 0x400) != 0)
  {
    float result = *(float *)(a2 + 52);
    v3 |= 0x400u;
    *(_DWORD *)(a1 + 88) = v3;
    *(float *)(a1 + 52) = result;
    int v2 = *(_DWORD *)(a2 + 88);
    if ((v2 & 0x1000) == 0)
    {
LABEL_8:
      if ((v2 & 0x800) == 0) {
        goto LABEL_9;
      }
      goto LABEL_26;
    }
  }
  else if ((v2 & 0x1000) == 0)
  {
    goto LABEL_8;
  }
  float result = *(float *)(a2 + 60);
  v3 |= 0x1000u;
  *(_DWORD *)(a1 + 88) = v3;
  *(float *)(a1 + 60) = result;
  int v2 = *(_DWORD *)(a2 + 88);
  if ((v2 & 0x800) == 0)
  {
LABEL_9:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_26:
  float result = *(float *)(a2 + 56);
  v3 |= 0x800u;
  *(_DWORD *)(a1 + 88) = v3;
  *(float *)(a1 + 56) = result;
  int v2 = *(_DWORD *)(a2 + 88);
  if ((v2 & 0x10000) == 0)
  {
LABEL_10:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_28;
  }
LABEL_27:
  float result = *(float *)(a2 + 76);
  v3 |= 0x10000u;
  *(_DWORD *)(a1 + 88) = v3;
  *(float *)(a1 + 76) = result;
  int v2 = *(_DWORD *)(a2 + 88);
  if ((v2 & 0x20000) == 0)
  {
LABEL_11:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_28:
  float result = *(float *)(a2 + 80);
  v3 |= 0x20000u;
  *(_DWORD *)(a1 + 88) = v3;
  *(float *)(a1 + 80) = result;
  int v2 = *(_DWORD *)(a2 + 88);
  if ((v2 & 0x40000) == 0)
  {
LABEL_12:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_30;
  }
LABEL_29:
  char v6 = *(unsigned char *)(a2 + 84);
  v3 |= 0x40000u;
  *(_DWORD *)(a1 + 88) = v3;
  *(unsigned char *)(a1 + 84) = v6;
  int v2 = *(_DWORD *)(a2 + 88);
  if ((v2 & 0x4000) == 0)
  {
LABEL_13:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_31;
  }
LABEL_30:
  float result = *(float *)(a2 + 68);
  v3 |= 0x4000u;
  *(_DWORD *)(a1 + 88) = v3;
  *(float *)(a1 + 68) = result;
  int v2 = *(_DWORD *)(a2 + 88);
  if ((v2 & 0x2000) == 0)
  {
LABEL_14:
    if ((v2 & 2) == 0) {
      goto LABEL_15;
    }
    goto LABEL_32;
  }
LABEL_31:
  float result = *(float *)(a2 + 64);
  v3 |= 0x2000u;
  *(_DWORD *)(a1 + 88) = v3;
  *(float *)(a1 + 64) = result;
  int v2 = *(_DWORD *)(a2 + 88);
  if ((v2 & 2) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_33;
  }
LABEL_32:
  float result = *(float *)(a2 + 16);
  v3 |= 2u;
  *(_DWORD *)(a1 + 88) = v3;
  *(float *)(a1 + 16) = result;
  int v2 = *(_DWORD *)(a2 + 88);
  if ((v2 & 0x20) == 0)
  {
LABEL_16:
    if ((v2 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_34;
  }
LABEL_33:
  float result = *(float *)(a2 + 32);
  v3 |= 0x20u;
  *(_DWORD *)(a1 + 88) = v3;
  *(float *)(a1 + 32) = result;
  int v2 = *(_DWORD *)(a2 + 88);
  if ((v2 & 0x40) == 0)
  {
LABEL_17:
    if ((v2 & 0x80) == 0) {
      goto LABEL_18;
    }
    goto LABEL_35;
  }
LABEL_34:
  float result = *(float *)(a2 + 36);
  v3 |= 0x40u;
  *(_DWORD *)(a1 + 88) = v3;
  *(float *)(a1 + 36) = result;
  int v2 = *(_DWORD *)(a2 + 88);
  if ((v2 & 0x80) == 0)
  {
LABEL_18:
    if ((v2 & 4) == 0) {
      goto LABEL_19;
    }
    goto LABEL_36;
  }
LABEL_35:
  float result = *(float *)(a2 + 40);
  v3 |= 0x80u;
  *(_DWORD *)(a1 + 88) = v3;
  *(float *)(a1 + 40) = result;
  int v2 = *(_DWORD *)(a2 + 88);
  if ((v2 & 4) == 0)
  {
LABEL_19:
    if ((v2 & 8) == 0) {
      goto LABEL_20;
    }
    goto LABEL_37;
  }
LABEL_36:
  float result = *(float *)(a2 + 20);
  v3 |= 4u;
  *(_DWORD *)(a1 + 88) = v3;
  *(float *)(a1 + 20) = result;
  int v2 = *(_DWORD *)(a2 + 88);
  if ((v2 & 8) == 0)
  {
LABEL_20:
    if ((v2 & 0x10) == 0) {
      goto LABEL_21;
    }
    goto LABEL_38;
  }
LABEL_37:
  float result = *(float *)(a2 + 24);
  v3 |= 8u;
  *(_DWORD *)(a1 + 88) = v3;
  *(float *)(a1 + 24) = result;
  int v2 = *(_DWORD *)(a2 + 88);
  if ((v2 & 0x10) == 0)
  {
LABEL_21:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_39;
  }
LABEL_38:
  float result = *(float *)(a2 + 28);
  v3 |= 0x10u;
  *(_DWORD *)(a1 + 88) = v3;
  *(float *)(a1 + 28) = result;
  int v2 = *(_DWORD *)(a2 + 88);
  if ((v2 & 0x8000) == 0)
  {
LABEL_22:
    if ((v2 & 0x200) == 0) {
      return result;
    }
LABEL_40:
    float result = *(float *)(a2 + 48);
    *(_DWORD *)(a1 + 88) = v3 | 0x200;
    *(float *)(a1 + 48) = result;
    return result;
  }
LABEL_39:
  float result = *(float *)(a2 + 72);
  v3 |= 0x8000u;
  *(_DWORD *)(a1 + 88) = v3;
  *(float *)(a1 + 72) = result;
  if ((*(_DWORD *)(a2 + 88) & 0x200) != 0) {
    goto LABEL_40;
  }
  return result;
}

uint64_t sub_227C74DCC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 88);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "baselineError", *(float *)(a1 + 16));
    int v5 = *(_DWORD *)(a1 + 88);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_26;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "covariancePostMeasurement00", *(float *)(a1 + 20));
  int v5 = *(_DWORD *)(a1 + 88);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "covariancePostMeasurement01", *(float *)(a1 + 24));
  int v5 = *(_DWORD *)(a1 + 88);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "covariancePostMeasurement11", *(float *)(a1 + 28));
  int v5 = *(_DWORD *)(a1 + 88);
  if ((v5 & 0x20) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "covariancePreMeasurement00", *(float *)(a1 + 32));
  int v5 = *(_DWORD *)(a1 + 88);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(this, "covariancePreMeasurement01", *(float *)(a1 + 36));
  int v5 = *(_DWORD *)(a1 + 88);
  if ((v5 & 0x80) == 0)
  {
LABEL_8:
    if ((v5 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "covariancePreMeasurement11", *(float *)(a1 + 40));
  int v5 = *(_DWORD *)(a1 + 88);
  if ((v5 & 0x100) == 0)
  {
LABEL_9:
    if ((v5 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(this, "estimate", *(float *)(a1 + 44));
  int v5 = *(_DWORD *)(a1 + 88);
  if ((v5 & 0x200) == 0)
  {
LABEL_10:
    if ((v5 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(this, "factoryXTalk", *(float *)(a1 + 48));
  int v5 = *(_DWORD *)(a1 + 88);
  if ((v5 & 0x400) == 0)
  {
LABEL_11:
    if ((v5 & 0x800) == 0) {
      goto LABEL_12;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(this, "gain", *(float *)(a1 + 52));
  int v5 = *(_DWORD *)(a1 + 88);
  if ((v5 & 0x800) == 0)
  {
LABEL_12:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "intensity", *(float *)(a1 + 56));
  int v5 = *(_DWORD *)(a1 + 88);
  if ((v5 & 0x1000) == 0)
  {
LABEL_13:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "measurement", *(float *)(a1 + 60));
  int v5 = *(_DWORD *)(a1 + 88);
  if ((v5 & 0x40000) == 0)
  {
LABEL_14:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "possibleObstructed");
  int v5 = *(_DWORD *)(a1 + 88);
  if ((v5 & 0x2000) == 0)
  {
LABEL_15:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "proxBufferMax", *(float *)(a1 + 64));
  int v5 = *(_DWORD *)(a1 + 88);
  if ((v5 & 0x4000) == 0)
  {
LABEL_16:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "proxBufferVariance", *(float *)(a1 + 68));
  int v5 = *(_DWORD *)(a1 + 88);
  if ((v5 & 0x8000) == 0)
  {
LABEL_17:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "sensitivityCal", *(float *)(a1 + 72));
  int v5 = *(_DWORD *)(a1 + 88);
  if ((v5 & 0x10000) == 0)
  {
LABEL_18:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "temperature", *(float *)(a1 + 76));
  int v5 = *(_DWORD *)(a1 + 88);
  if ((v5 & 0x20000) == 0)
  {
LABEL_19:
    if ((v5 & 1) == 0) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }
LABEL_41:
  PB::TextFormatter::format(this, "temperatureCalError", *(float *)(a1 + 80));
  if (*(_DWORD *)(a1 + 88)) {
LABEL_20:
  }
    PB::TextFormatter::format(this, "timestamp");
LABEL_21:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C75070(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_DWORD *)(a1 + 88) |= 1u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v29 = 0;
                unsigned int v30 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_104;
                  }
                  unint64_t v31 = v20++;
                  char v32 = *(unsigned char *)(v21 + v31);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v32 & 0x7F) << v29;
                  if ((v32 & 0x80) == 0) {
                    break;
                  }
                  v29 += 7;
                  BOOL v14 = v30++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_103;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_103:
                unint64_t v2 = v31 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_104;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_104:
              *(void *)(a1 + 8) = v24;
              goto LABEL_95;
            case 2u:
              *(_DWORD *)(a1 + 88) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_94;
            case 3u:
              *(_DWORD *)(a1 + 88) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_94;
            case 4u:
              *(_DWORD *)(a1 + 88) |= 0x1000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_94;
            case 5u:
              *(_DWORD *)(a1 + 88) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_94;
            case 6u:
              *(_DWORD *)(a1 + 88) |= 0x10000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_94;
            case 7u:
              *(_DWORD *)(a1 + 88) |= 0x20000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_94;
            case 8u:
              *(_DWORD *)(a1 + 88) |= 0x40000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v28 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v27 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v28 = v27 != 0;
              }
              *(unsigned char *)(a1 + 84) = v28;
              goto LABEL_95;
            case 9u:
              *(_DWORD *)(a1 + 88) |= 0x4000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(_DWORD *)(a1 + 68) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_94;
            case 0xAu:
              *(_DWORD *)(a1 + 88) |= 0x2000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_94;
            case 0xBu:
              *(_DWORD *)(a1 + 88) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_94;
            case 0xCu:
              *(_DWORD *)(a1 + 88) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_94;
            case 0xDu:
              *(_DWORD *)(a1 + 88) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_94;
            case 0xEu:
              *(_DWORD *)(a1 + 88) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_94;
            case 0xFu:
              *(_DWORD *)(a1 + 88) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_94;
            case 0x10u:
              *(_DWORD *)(a1 + 88) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_94;
            case 0x11u:
              *(_DWORD *)(a1 + 88) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_94;
            case 0x12u:
              *(_DWORD *)(a1 + 88) |= 0x8000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_94;
            case 0x13u:
              *(_DWORD *)(a1 + 88) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
LABEL_94:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_83:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_95;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
LABEL_95:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C7572C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 88);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    int v4 = *(_DWORD *)(v3 + 88);
    if ((v4 & 0x100) == 0)
    {
LABEL_3:
      if ((v4 & 0x400) == 0) {
        goto LABEL_4;
      }
      goto LABEL_23;
    }
  }
  else if ((v4 & 0x100) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44));
  int v4 = *(_DWORD *)(v3 + 88);
  if ((v4 & 0x400) == 0)
  {
LABEL_4:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
  int v4 = *(_DWORD *)(v3 + 88);
  if ((v4 & 0x1000) == 0)
  {
LABEL_5:
    if ((v4 & 0x800) == 0) {
      goto LABEL_6;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 60));
  int v4 = *(_DWORD *)(v3 + 88);
  if ((v4 & 0x800) == 0)
  {
LABEL_6:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56));
  int v4 = *(_DWORD *)(v3 + 88);
  if ((v4 & 0x10000) == 0)
  {
LABEL_7:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76));
  int v4 = *(_DWORD *)(v3 + 88);
  if ((v4 & 0x20000) == 0)
  {
LABEL_8:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80));
  int v4 = *(_DWORD *)(v3 + 88);
  if ((v4 & 0x40000) == 0)
  {
LABEL_9:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 88);
  if ((v4 & 0x4000) == 0)
  {
LABEL_10:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 68));
  int v4 = *(_DWORD *)(v3 + 88);
  if ((v4 & 0x2000) == 0)
  {
LABEL_11:
    if ((v4 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64));
  int v4 = *(_DWORD *)(v3 + 88);
  if ((v4 & 2) == 0)
  {
LABEL_12:
    if ((v4 & 0x20) == 0) {
      goto LABEL_13;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16));
  int v4 = *(_DWORD *)(v3 + 88);
  if ((v4 & 0x20) == 0)
  {
LABEL_13:
    if ((v4 & 0x40) == 0) {
      goto LABEL_14;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
  int v4 = *(_DWORD *)(v3 + 88);
  if ((v4 & 0x40) == 0)
  {
LABEL_14:
    if ((v4 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36));
  int v4 = *(_DWORD *)(v3 + 88);
  if ((v4 & 0x80) == 0)
  {
LABEL_15:
    if ((v4 & 4) == 0) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
  int v4 = *(_DWORD *)(v3 + 88);
  if ((v4 & 4) == 0)
  {
LABEL_16:
    if ((v4 & 8) == 0) {
      goto LABEL_17;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
  int v4 = *(_DWORD *)(v3 + 88);
  if ((v4 & 8) == 0)
  {
LABEL_17:
    if ((v4 & 0x10) == 0) {
      goto LABEL_18;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
  int v4 = *(_DWORD *)(v3 + 88);
  if ((v4 & 0x10) == 0)
  {
LABEL_18:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_19;
    }
LABEL_38:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72));
    if ((*(_DWORD *)(v3 + 88) & 0x200) == 0) {
      return result;
    }
    goto LABEL_39;
  }
LABEL_37:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
  int v4 = *(_DWORD *)(v3 + 88);
  if ((v4 & 0x8000) != 0) {
    goto LABEL_38;
  }
LABEL_19:
  if ((v4 & 0x200) == 0) {
    return result;
  }
LABEL_39:
  float v5 = *(float *)(v3 + 48);

  return PB::Writer::write(this, v5);
}

double sub_227C75978(uint64_t a1)
{
  *(void *)a1 = &unk_26DC284F0;
  *(_DWORD *)(a1 + 72) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return result;
}

void sub_227C759AC(PB::Base *this)
{
  *(void *)this = &unk_26DC284F0;
  unint64_t v2 = (void *)*((void *)this + 4);
  if (v2)
  {
    *((void *)this + 5) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 2) = v3;
    operator delete(v3);
  }

  PB::Base::~Base(this);
}

void sub_227C75A20(PB::Base *a1)
{
  sub_227C759AC(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C75A58(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC284F0;
  *(_OWORD *)(a1 + 8) = 0u;
  int v4 = (char *)(a1 + 8);
  *(_DWORD *)(a1 + 72) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  char v5 = *(unsigned char *)(a2 + 72);
  if ((v5 & 2) != 0)
  {
    int v7 = *(_DWORD *)(a2 + 60);
    char v6 = 2;
    *(unsigned char *)(a1 + 72) = 2;
    *(_DWORD *)(a1 + 60) = v7;
    char v5 = *(unsigned char *)(a2 + 72);
    if ((v5 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v6 = 0;
  if (*(unsigned char *)(a2 + 72))
  {
LABEL_5:
    int v8 = *(_DWORD *)(a2 + 56);
    v6 |= 1u;
    *(unsigned char *)(a1 + 72) = v6;
    *(_DWORD *)(a1 + 56) = v8;
    char v5 = *(unsigned char *)(a2 + 72);
  }
LABEL_6:
  if ((v5 & 4) == 0)
  {
    if ((v5 & 8) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  int v11 = *(_DWORD *)(a2 + 64);
  v6 |= 4u;
  *(unsigned char *)(a1 + 72) = v6;
  *(_DWORD *)(a1 + 64) = v11;
  if ((*(unsigned char *)(a2 + 72) & 8) != 0)
  {
LABEL_8:
    int v9 = *(_DWORD *)(a2 + 68);
    *(unsigned char *)(a1 + 72) = v6 | 8;
    *(_DWORD *)(a1 + 68) = v9;
  }
LABEL_9:
  if (a1 != a2)
  {
    sub_227B8BA68(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
    sub_227B8BA68((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
  }
  return a1;
}

uint64_t sub_227C75B58(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 72);
  if (v5)
  {
    PB::TextFormatter::format(this, "bC150RXAVE", *(float *)(a1 + 56));
    char v5 = *(unsigned char *)(a1 + 72);
  }
  if ((v5 & 2) != 0) {
    PB::TextFormatter::format(this, "gC0RXAVE", *(float *)(a1 + 60));
  }
  char v6 = *(float **)(a1 + 8);
  int v7 = *(float **)(a1 + 16);
  while (v6 != v7)
  {
    float v8 = *v6++;
    PB::TextFormatter::format(this, "ntcRamp", v8);
  }
  int v9 = *(float **)(a1 + 32);
  unsigned int v10 = *(float **)(a1 + 40);
  while (v9 != v10)
  {
    float v11 = *v9++;
    PB::TextFormatter::format(this, "rxXT", v11);
  }
  char v12 = *(unsigned char *)(a1 + 72);
  if ((v12 & 4) != 0)
  {
    PB::TextFormatter::format(this, "versionPxCL");
    char v12 = *(unsigned char *)(a1 + 72);
  }
  if ((v12 & 8) != 0) {
    PB::TextFormatter::format(this, "versionPxTC");
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227C75C74(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    float v8 = (void **)(a1 + 32);
    uint64_t v9 = a1 + 48;
    unsigned int v10 = (void **)(a1 + 8);
    uint64_t v11 = a1 + 24;
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        BOOL v18 = v14++ > 8;
        if (v18) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v24 = v15 & 7;
      if (v24 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v15 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 72) |= 2u;
          unint64_t v25 = *((void *)this + 1);
          if (v25 > 0xFFFFFFFFFFFFFFFBLL || v25 + 4 > *((void *)this + 2)) {
            goto LABEL_153;
          }
          *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v25);
          goto LABEL_155;
        case 2u:
          *(unsigned char *)(a1 + 72) |= 1u;
          unint64_t v26 = *((void *)this + 1);
          if (v26 > 0xFFFFFFFFFFFFFFFBLL || v26 + 4 > *((void *)this + 2)) {
            goto LABEL_153;
          }
          *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v26);
          goto LABEL_155;
        case 3u:
          *(unsigned char *)(a1 + 72) |= 4u;
          unint64_t v27 = *((void *)this + 1);
          unint64_t v28 = *((void *)this + 2);
          uint64_t v29 = *(void *)this;
          if (v27 <= 0xFFFFFFFFFFFFFFF5 && v27 + 10 <= v28)
          {
            char v30 = 0;
            unsigned int v31 = 0;
            uint64_t v32 = 0;
            do
            {
              unint64_t v33 = v27 + 1;
              *((void *)this + 1) = v27 + 1;
              char v34 = *(unsigned char *)(v29 + v27);
              v32 |= (unint64_t)(v34 & 0x7F) << v30;
              if ((v34 & 0x80) == 0) {
                goto LABEL_133;
              }
              v30 += 7;
              unint64_t v27 = v33;
              BOOL v18 = v31++ > 8;
            }
            while (!v18);
LABEL_99:
            LODWORD(v32) = 0;
            goto LABEL_133;
          }
          char v71 = 0;
          unsigned int v72 = 0;
          uint64_t v32 = 0;
          if (v28 <= v27) {
            unint64_t v28 = *((void *)this + 1);
          }
          while (2)
          {
            if (v28 == v27)
            {
              LODWORD(v32) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v73 = v27 + 1;
              char v74 = *(unsigned char *)(v29 + v27);
              *((void *)this + 1) = v73;
              v32 |= (unint64_t)(v74 & 0x7F) << v71;
              if (v74 < 0)
              {
                v71 += 7;
                unint64_t v27 = v73;
                BOOL v18 = v72++ > 8;
                if (v18) {
                  goto LABEL_99;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v32) = 0;
              }
            }
            break;
          }
LABEL_133:
          *(_DWORD *)(a1 + 64) = v32;
          goto LABEL_156;
        case 4u:
          *(unsigned char *)(a1 + 72) |= 8u;
          unint64_t v35 = *((void *)this + 1);
          unint64_t v36 = *((void *)this + 2);
          uint64_t v37 = *(void *)this;
          if (v35 <= 0xFFFFFFFFFFFFFFF5 && v35 + 10 <= v36)
          {
            char v38 = 0;
            unsigned int v39 = 0;
            uint64_t v40 = 0;
            do
            {
              unint64_t v41 = v35 + 1;
              *((void *)this + 1) = v35 + 1;
              char v42 = *(unsigned char *)(v37 + v35);
              v40 |= (unint64_t)(v42 & 0x7F) << v38;
              if ((v42 & 0x80) == 0) {
                goto LABEL_136;
              }
              v38 += 7;
              unint64_t v35 = v41;
              BOOL v18 = v39++ > 8;
            }
            while (!v18);
LABEL_106:
            LODWORD(v40) = 0;
            goto LABEL_136;
          }
          char v75 = 0;
          unsigned int v76 = 0;
          uint64_t v40 = 0;
          if (v36 <= v35) {
            unint64_t v36 = *((void *)this + 1);
          }
          while (2)
          {
            if (v36 == v35)
            {
              LODWORD(v40) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v77 = v35 + 1;
              char v78 = *(unsigned char *)(v37 + v35);
              *((void *)this + 1) = v77;
              v40 |= (unint64_t)(v78 & 0x7F) << v75;
              if (v78 < 0)
              {
                v75 += 7;
                unint64_t v35 = v77;
                BOOL v18 = v76++ > 8;
                if (v18) {
                  goto LABEL_106;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v40) = 0;
              }
            }
            break;
          }
LABEL_136:
          *(_DWORD *)(a1 + 68) = v40;
          goto LABEL_156;
        case 5u:
          if (v24 != 2)
          {
            uint64_t v80 = *(char **)(a1 + 16);
            unint64_t v79 = *(void *)(a1 + 24);
            if ((unint64_t)v80 >= v79)
            {
              uint64_t v84 = (char *)*v10;
              uint64_t v85 = (v80 - (unsigned char *)*v10) >> 2;
              unint64_t v86 = v85 + 1;
              if ((unint64_t)(v85 + 1) >> 62) {
LABEL_166:
              }
                sub_227B8B89C();
              uint64_t v87 = v79 - (void)v84;
              if (v87 >> 1 > v86) {
                unint64_t v86 = v87 >> 1;
              }
              if ((unint64_t)v87 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v88 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v88 = v86;
              }
              if (v88)
              {
                unint64_t v89 = (char *)sub_227B8BBB8(v11, v88);
                uint64_t v84 = *(char **)(a1 + 8);
                uint64_t v80 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v89 = 0;
              }
              unint64_t v96 = &v89[4 * v85];
              *(_DWORD *)unint64_t v96 = 0;
              unint64_t v81 = v96 + 4;
              while (v80 != v84)
              {
                int v97 = *((_DWORD *)v80 - 1);
                v80 -= 4;
                *((_DWORD *)v96 - 1) = v97;
                v96 -= 4;
              }
              *(void *)(a1 + 8) = v96;
              *(void *)(a1 + 16) = v81;
              *(void *)(a1 + 24) = &v89[4 * v88];
              if (v84) {
                operator delete(v84);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v80 = 0;
              unint64_t v81 = v80 + 4;
            }
            *(void *)(a1 + 16) = v81;
            goto LABEL_151;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v43 = *((void *)this + 1);
          unint64_t v44 = *((void *)this + 2);
          while (v43 < v44 && !*((unsigned char *)this + 24))
          {
            unint64_t v46 = *(char **)(a1 + 16);
            unint64_t v45 = *(void *)(a1 + 24);
            if ((unint64_t)v46 >= v45)
            {
              uint64_t v48 = (char *)*v10;
              uint64_t v49 = (v46 - (unsigned char *)*v10) >> 2;
              unint64_t v50 = v49 + 1;
              if ((unint64_t)(v49 + 1) >> 62) {
                goto LABEL_166;
              }
              uint64_t v51 = v45 - (void)v48;
              if (v51 >> 1 > v50) {
                unint64_t v50 = v51 >> 1;
              }
              if ((unint64_t)v51 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v52 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v52 = v50;
              }
              if (v52)
              {
                uint64_t v53 = (char *)sub_227B8BBB8(v11, v52);
                uint64_t v48 = *(char **)(a1 + 8);
                unint64_t v46 = *(char **)(a1 + 16);
              }
              else
              {
                uint64_t v53 = 0;
              }
              uint64_t v54 = &v53[4 * v49];
              *(_DWORD *)uint64_t v54 = 0;
              char v47 = v54 + 4;
              while (v46 != v48)
              {
                int v55 = *((_DWORD *)v46 - 1);
                v46 -= 4;
                *((_DWORD *)v54 - 1) = v55;
                v54 -= 4;
              }
              *(void *)(a1 + 8) = v54;
              *(void *)(a1 + 16) = v47;
              *(void *)(a1 + 24) = &v53[4 * v52];
              if (v48) {
                operator delete(v48);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v46 = 0;
              char v47 = v46 + 4;
            }
            *(void *)(a1 + 16) = v47;
            unint64_t v56 = *((void *)this + 1);
            if (v56 > 0xFFFFFFFFFFFFFFFBLL || v56 + 4 > *((void *)this + 2)) {
              goto LABEL_111;
            }
            *(v47 - 1) = *(_DWORD *)(*(void *)this + v56);
            unint64_t v44 = *((void *)this + 2);
            unint64_t v43 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v43;
          }
          goto LABEL_112;
        case 6u:
          if (v24 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v57 = *((void *)this + 1);
            unint64_t v58 = *((void *)this + 2);
            while (v57 < v58 && !*((unsigned char *)this + 24))
            {
              uint64_t v60 = *(char **)(a1 + 40);
              unint64_t v59 = *(void *)(a1 + 48);
              if ((unint64_t)v60 >= v59)
              {
                unint64_t v62 = (char *)*v8;
                uint64_t v63 = (v60 - (unsigned char *)*v8) >> 2;
                unint64_t v64 = v63 + 1;
                if ((unint64_t)(v63 + 1) >> 62) {
                  goto LABEL_167;
                }
                uint64_t v65 = v59 - (void)v62;
                if (v65 >> 1 > v64) {
                  unint64_t v64 = v65 >> 1;
                }
                if ((unint64_t)v65 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v66 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v66 = v64;
                }
                if (v66)
                {
                  unint64_t v67 = (char *)sub_227B8BBB8(v9, v66);
                  unint64_t v62 = *(char **)(a1 + 32);
                  uint64_t v60 = *(char **)(a1 + 40);
                }
                else
                {
                  unint64_t v67 = 0;
                }
                char v68 = &v67[4 * v63];
                *(_DWORD *)char v68 = 0;
                unint64_t v61 = v68 + 4;
                while (v60 != v62)
                {
                  int v69 = *((_DWORD *)v60 - 1);
                  v60 -= 4;
                  *((_DWORD *)v68 - 1) = v69;
                  v68 -= 4;
                }
                *(void *)(a1 + 32) = v68;
                *(void *)(a1 + 40) = v61;
                *(void *)(a1 + 48) = &v67[4 * v66];
                if (v62) {
                  operator delete(v62);
                }
              }
              else
              {
                *(_DWORD *)uint64_t v60 = 0;
                unint64_t v61 = v60 + 4;
              }
              *(void *)(a1 + 40) = v61;
              unint64_t v70 = *((void *)this + 1);
              if (v70 > 0xFFFFFFFFFFFFFFFBLL || v70 + 4 > *((void *)this + 2))
              {
LABEL_111:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v61 - 1) = *(_DWORD *)(*(void *)this + v70);
              unint64_t v58 = *((void *)this + 2);
              unint64_t v57 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v57;
            }
LABEL_112:
            PB::Reader::recallMark();
          }
          else
          {
            unint64_t v83 = *(char **)(a1 + 40);
            unint64_t v82 = *(void *)(a1 + 48);
            if ((unint64_t)v83 >= v82)
            {
              unint64_t v90 = (char *)*v8;
              uint64_t v91 = (v83 - (unsigned char *)*v8) >> 2;
              unint64_t v92 = v91 + 1;
              if ((unint64_t)(v91 + 1) >> 62) {
LABEL_167:
              }
                sub_227B8B89C();
              uint64_t v93 = v82 - (void)v90;
              if (v93 >> 1 > v92) {
                unint64_t v92 = v93 >> 1;
              }
              if ((unint64_t)v93 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v94 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v94 = v92;
              }
              if (v94)
              {
                unsigned int v95 = (char *)sub_227B8BBB8(v9, v94);
                unint64_t v90 = *(char **)(a1 + 32);
                unint64_t v83 = *(char **)(a1 + 40);
              }
              else
              {
                unsigned int v95 = 0;
              }
              char v98 = &v95[4 * v91];
              *(_DWORD *)char v98 = 0;
              unint64_t v81 = v98 + 4;
              while (v83 != v90)
              {
                int v99 = *((_DWORD *)v83 - 1);
                v83 -= 4;
                *((_DWORD *)v98 - 1) = v99;
                v98 -= 4;
              }
              *(void *)(a1 + 32) = v98;
              *(void *)(a1 + 40) = v81;
              *(void *)(a1 + 48) = &v95[4 * v94];
              if (v90) {
                operator delete(v90);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v83 = 0;
              unint64_t v81 = v83 + 4;
            }
            *(void *)(a1 + 40) = v81;
LABEL_151:
            unint64_t v100 = *((void *)this + 1);
            if (v100 <= 0xFFFFFFFFFFFFFFFBLL && v100 + 4 <= *((void *)this + 2))
            {
              *(v81 - 1) = *(_DWORD *)(*(void *)this + v100);
LABEL_155:
              *((void *)this + 1) += 4;
            }
            else
            {
LABEL_153:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_156:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_156;
      }
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v15 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v21 = v2 + 1;
      char v22 = *(unsigned char *)(v12 + v2);
      *((void *)this + 1) = v21;
      v15 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0) {
        goto LABEL_21;
      }
      v19 += 7;
      unint64_t v2 = v21;
      if (v20++ >= 9)
      {
LABEL_20:
        unint64_t v15 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C76414(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 72);
  if ((v4 & 2) != 0)
  {
    double result = PB::Writer::write(this, *(float *)(result + 60));
    char v4 = *(unsigned char *)(v3 + 72);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_15:
      double result = PB::Writer::writeVarInt(this);
      if ((*(unsigned char *)(v3 + 72) & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_5;
    }
  }
  else if ((*(unsigned char *)(result + 72) & 1) == 0)
  {
    goto LABEL_3;
  }
  double result = PB::Writer::write(this, *(float *)(v3 + 56));
  char v4 = *(unsigned char *)(v3 + 72);
  if ((v4 & 4) != 0) {
    goto LABEL_15;
  }
LABEL_4:
  if ((v4 & 8) != 0) {
LABEL_5:
  }
    double result = PB::Writer::writeVarInt(this);
LABEL_6:
  char v5 = *(float **)(v3 + 8);
  char v6 = *(float **)(v3 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    double result = PB::Writer::write(this, v7);
  }
  uint64_t v9 = *(float **)(v3 + 32);
  float v8 = *(float **)(v3 + 40);
  while (v9 != v8)
  {
    float v10 = *v9++;
    double result = PB::Writer::write(this, v10);
  }
  return result;
}

uint64_t sub_227C764F0(uint64_t result)
{
  *(void *)double result = &unk_26DC28528;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

void sub_227C76518(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C76550(uint64_t result, uint64_t a2)
{
  *(void *)double result = &unk_26DC28528;
  *(_DWORD *)(result + 48) = 0;
  __int16 v2 = *(_WORD *)(a2 + 48);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    __int16 v3 = 1;
    *(_WORD *)(result + 48) = 1;
    *(void *)(result + 8) = v4;
    __int16 v2 = *(_WORD *)(a2 + 48);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 8) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 24);
    v3 |= 8u;
    *(_WORD *)(result + 48) = v3;
    *(_DWORD *)(result + 24) = v5;
    __int16 v2 = *(_WORD *)(a2 + 48);
  }
LABEL_6:
  if ((v2 & 0x20) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 32);
    v3 |= 0x20u;
    *(_WORD *)(result + 48) = v3;
    *(_DWORD *)(result + 32) = v6;
    __int16 v2 = *(_WORD *)(a2 + 48);
    if ((v2 & 0x10) == 0)
    {
LABEL_8:
      if ((v2 & 2) == 0) {
        goto LABEL_9;
      }
      goto LABEL_17;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 28);
  v3 |= 0x10u;
  *(_WORD *)(result + 48) = v3;
  *(_DWORD *)(result + 28) = v7;
  __int16 v2 = *(_WORD *)(a2 + 48);
  if ((v2 & 2) == 0)
  {
LABEL_9:
    if ((v2 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_18;
  }
LABEL_17:
  int v8 = *(_DWORD *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(result + 48) = v3;
  *(_DWORD *)(result + 16) = v8;
  __int16 v2 = *(_WORD *)(a2 + 48);
  if ((v2 & 0x40) == 0)
  {
LABEL_10:
    if ((v2 & 4) == 0) {
      goto LABEL_11;
    }
    goto LABEL_19;
  }
LABEL_18:
  int v9 = *(_DWORD *)(a2 + 36);
  v3 |= 0x40u;
  *(_WORD *)(result + 48) = v3;
  *(_DWORD *)(result + 36) = v9;
  __int16 v2 = *(_WORD *)(a2 + 48);
  if ((v2 & 4) == 0)
  {
LABEL_11:
    if ((v2 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_20;
  }
LABEL_19:
  int v10 = *(_DWORD *)(a2 + 20);
  v3 |= 4u;
  *(_WORD *)(result + 48) = v3;
  *(_DWORD *)(result + 20) = v10;
  __int16 v2 = *(_WORD *)(a2 + 48);
  if ((v2 & 0x80) == 0)
  {
LABEL_12:
    if ((v2 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_21;
  }
LABEL_20:
  int v11 = *(_DWORD *)(a2 + 40);
  v3 |= 0x80u;
  *(_WORD *)(result + 48) = v3;
  *(_DWORD *)(result + 40) = v11;
  __int16 v2 = *(_WORD *)(a2 + 48);
  if ((v2 & 0x200) == 0)
  {
LABEL_13:
    if ((v2 & 0x100) == 0) {
      return result;
    }
LABEL_22:
    char v13 = *(unsigned char *)(a2 + 44);
    *(_WORD *)(result + 48) = v3 | 0x100;
    *(unsigned char *)(result + 44) = v13;
    return result;
  }
LABEL_21:
  char v12 = *(unsigned char *)(a2 + 45);
  v3 |= 0x200u;
  *(_WORD *)(result + 48) = v3;
  *(unsigned char *)(result + 45) = v12;
  if ((*(_WORD *)(a2 + 48) & 0x100) != 0) {
    goto LABEL_22;
  }
  return result;
}

uint64_t sub_227C76694(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 48);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "ambient", *(float *)(a1 + 16));
    __int16 v5 = *(_WORD *)(a1 + 48);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "baselineConfidence", *(float *)(a1 + 20));
  __int16 v5 = *(_WORD *)(a1 + 48);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  PB::TextFormatter::format(this, "intensity", *(float *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 48);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "intensityBaselineDelta", *(float *)(a1 + 28));
  __int16 v5 = *(_WORD *)(a1 + 48);
  if ((v5 & 0x20) == 0)
  {
LABEL_6:
    if ((v5 & 0x100) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "intensityCalDelta", *(float *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 48);
  if ((v5 & 0x100) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "pocketFlag");
  __int16 v5 = *(_WORD *)(a1 + 48);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "pocketProbability", *(float *)(a1 + 36));
  __int16 v5 = *(_WORD *)(a1 + 48);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "rxNtcC", *(float *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 48);
  if ((v5 & 0x200) == 0)
  {
LABEL_10:
    if ((v5 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_23:
  PB::TextFormatter::format(this, "scanFlags");
  if (*(_WORD *)(a1 + 48)) {
LABEL_11:
  }
    PB::TextFormatter::format(this, "timestamp");
LABEL_12:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C76818(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 48) |= 1u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v31 = 0;
                unsigned int v32 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_73;
                  }
                  unint64_t v33 = v20++;
                  char v34 = *(unsigned char *)(v21 + v33);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v34 & 0x7F) << v31;
                  if ((v34 & 0x80) == 0) {
                    break;
                  }
                  v31 += 7;
                  BOOL v14 = v32++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_72;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_72:
                unint64_t v2 = v33 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_73;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_73:
              *(void *)(a1 + 8) = v24;
              goto LABEL_74;
            case 2u:
              *(_WORD *)(a1 + 48) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_51;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_68;
            case 3u:
              *(_WORD *)(a1 + 48) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_51;
              }
              *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_68;
            case 4u:
              *(_WORD *)(a1 + 48) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_51;
              }
              *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_68;
            case 5u:
              *(_WORD *)(a1 + 48) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_51;
              }
              *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_68;
            case 6u:
              *(_WORD *)(a1 + 48) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_51;
              }
              *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_68;
            case 7u:
              *(_WORD *)(a1 + 48) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_51;
              }
              *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_68;
            case 8u:
              *(_WORD *)(a1 + 48) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
LABEL_68:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_51:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_74;
            case 9u:
              *(_WORD *)(a1 + 48) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v28 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v27 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v28 = v27 != 0;
              }
              *(unsigned char *)(a1 + 45) = v28;
              goto LABEL_74;
            case 0xAu:
              *(_WORD *)(a1 + 48) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v30 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v29 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v30 = v29 != 0;
              }
              *(unsigned char *)(a1 + 44) = v30;
              goto LABEL_74;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
LABEL_74:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C76CC4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 48);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    __int16 v4 = *(_WORD *)(v3 + 48);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v4 & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
  __int16 v4 = *(_WORD *)(v3 + 48);
  if ((v4 & 0x20) == 0)
  {
LABEL_4:
    if ((v4 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
  __int16 v4 = *(_WORD *)(v3 + 48);
  if ((v4 & 0x10) == 0)
  {
LABEL_5:
    if ((v4 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
  __int16 v4 = *(_WORD *)(v3 + 48);
  if ((v4 & 2) == 0)
  {
LABEL_6:
    if ((v4 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16));
  __int16 v4 = *(_WORD *)(v3 + 48);
  if ((v4 & 0x40) == 0)
  {
LABEL_7:
    if ((v4 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36));
  __int16 v4 = *(_WORD *)(v3 + 48);
  if ((v4 & 4) == 0)
  {
LABEL_8:
    if ((v4 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
  __int16 v4 = *(_WORD *)(v3 + 48);
  if ((v4 & 0x80) == 0)
  {
LABEL_9:
    if ((v4 & 0x200) == 0) {
      goto LABEL_10;
    }
LABEL_20:
    uint64_t result = PB::Writer::write(this);
    if ((*(_WORD *)(v3 + 48) & 0x100) == 0) {
      return result;
    }
    goto LABEL_21;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
  __int16 v4 = *(_WORD *)(v3 + 48);
  if ((v4 & 0x200) != 0) {
    goto LABEL_20;
  }
LABEL_10:
  if ((v4 & 0x100) == 0) {
    return result;
  }
LABEL_21:

  return PB::Writer::write(this);
}

void *sub_227C76E14(void *result)
{
  *uint64_t result = &unk_26DC28560;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void sub_227C76E38(PB::Base *this)
{
  *(void *)this = &unk_26DC28560;
  unint64_t v2 = (void *)*((void *)this + 1);
  if (v2)
  {
    *((void *)this + 2) = v2;
    operator delete(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C76E9C(PB::Base *a1)
{
  sub_227C76E38(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227C76ED4(void *a1, uint64_t a2)
{
  *a1 = &unk_26DC28560;
  a1[1] = 0;
  uint64_t v3 = (char *)(a1 + 1);
  a1[2] = 0;
  a1[3] = 0;
  if (a1 != (void *)a2) {
    sub_227B8BA68(v3, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  return a1;
}

uint64_t sub_227C76F40(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  while (v5 != v6)
  {
    v5 += 4;
    PB::TextFormatter::format(this, "volts");
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227C76FB8(void *a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = (void **)(a1 + 1);
    char v9 = a1 + 3;
    while (1)
    {
      uint64_t v10 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v11 = 0;
      unsigned int v12 = 0;
      unint64_t v13 = 0;
      while (1)
      {
        unint64_t v14 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v15 = *(unsigned char *)(v10 + v2);
        v13 |= (unint64_t)(v15 & 0x7F) << v11;
        if ((v15 & 0x80) == 0) {
          break;
        }
        v11 += 7;
        unint64_t v2 = v14;
        BOOL v34 = v12++ > 8;
        if (v34) {
          goto LABEL_20;
        }
      }
LABEL_21:
      if ((v13 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v13 >> 3) == 1)
      {
        if ((v13 & 7) == 2)
        {
          if (PB::Reader::placeMark()) {
            return 0;
          }
          if (*((void *)this + 1) < *((void *)this + 2) && !*((unsigned char *)this + 24))
          {
            uint64_t v21 = (char *)a1[2];
            do
            {
              if ((unint64_t)v21 >= *v9)
              {
                char v22 = (char *)*v8;
                uint64_t v23 = (v21 - (unsigned char *)*v8) >> 2;
                unint64_t v24 = v23 + 1;
                if ((unint64_t)(v23 + 1) >> 62) {
                  goto LABEL_118;
                }
                uint64_t v25 = *v9 - (void)v22;
                if (v25 >> 1 > v24) {
                  unint64_t v24 = v25 >> 1;
                }
                if ((unint64_t)v25 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v26 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v26 = v24;
                }
                if (v26)
                {
                  int v27 = (char *)sub_227B8BBB8((uint64_t)v9, v26);
                  char v22 = (char *)a1[1];
                  uint64_t v21 = (char *)a1[2];
                }
                else
                {
                  int v27 = 0;
                }
                BOOL v28 = &v27[4 * v23];
                *(_DWORD *)BOOL v28 = 0;
                int v29 = v28 + 4;
                while (v21 != v22)
                {
                  int v30 = *((_DWORD *)v21 - 1);
                  v21 -= 4;
                  *((_DWORD *)v28 - 1) = v30;
                  v28 -= 4;
                }
                a1[1] = v28;
                a1[2] = v29;
                a1[3] = &v27[4 * v26];
                if (v22) {
                  operator delete(v22);
                }
                uint64_t v21 = v29;
              }
              else
              {
                *(_DWORD *)uint64_t v21 = 0;
                v21 += 4;
              }
              a1[2] = v21;
              unint64_t v32 = *((void *)this + 1);
              unint64_t v31 = *((void *)this + 2);
              uint64_t v33 = *(void *)this;
              BOOL v34 = v32 > 0xFFFFFFFFFFFFFFF5 || v32 + 10 > v31;
              if (!v34)
              {
                char v40 = 0;
                unsigned int v41 = 0;
                uint64_t v42 = 0;
                while (1)
                {
                  unint64_t v43 = v32 + 1;
                  *((void *)this + 1) = v32 + 1;
                  char v44 = *(unsigned char *)(v33 + v32);
                  v42 |= (unint64_t)(v44 & 0x7F) << v40;
                  if ((v44 & 0x80) == 0) {
                    goto LABEL_65;
                  }
                  v40 += 7;
                  unint64_t v32 = v43;
                  BOOL v34 = v41++ > 8;
                  if (v34)
                  {
                    LODWORD(v42) = 0;
                    goto LABEL_65;
                  }
                }
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v42 = 0;
              if (v31 <= v32) {
                uint64_t v37 = *((void *)this + 1);
              }
              else {
                uint64_t v37 = *((void *)this + 2);
              }
              while (1)
              {
                if (v37 == v32)
                {
                  *((unsigned char *)this + 24) = 1;
                  *((_DWORD *)v21 - 1) = 0;
                  goto LABEL_81;
                }
                unint64_t v38 = v32++;
                char v39 = *(unsigned char *)(v33 + v38);
                *((void *)this + 1) = v32;
                v42 |= (unint64_t)(v39 & 0x7F) << v35;
                if ((v39 & 0x80) == 0) {
                  break;
                }
                v35 += 7;
                BOOL v34 = v36++ > 8;
                if (v34)
                {
                  LODWORD(v42) = 0;
                  goto LABEL_64;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v42) = 0;
              }
LABEL_64:
              unint64_t v43 = v38 + 1;
LABEL_65:
              *((_DWORD *)v21 - 1) = v42;
            }
            while (v43 < v31 && !*((unsigned char *)this + 24));
          }
LABEL_81:
          PB::Reader::recallMark();
        }
        else
        {
          unint64_t v46 = (char *)a1[2];
          unint64_t v45 = a1[3];
          if ((unint64_t)v46 >= v45)
          {
            uint64_t v48 = (char *)*v8;
            uint64_t v49 = (v46 - (unsigned char *)*v8) >> 2;
            unint64_t v50 = v49 + 1;
            if ((unint64_t)(v49 + 1) >> 62) {
LABEL_118:
            }
              sub_227B8B89C();
            uint64_t v51 = v45 - (void)v48;
            if (v51 >> 1 > v50) {
              unint64_t v50 = v51 >> 1;
            }
            if ((unint64_t)v51 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v52 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v52 = v50;
            }
            if (v52)
            {
              uint64_t v53 = (char *)sub_227B8BBB8((uint64_t)v9, v52);
              uint64_t v48 = (char *)a1[1];
              unint64_t v46 = (char *)a1[2];
            }
            else
            {
              uint64_t v53 = 0;
            }
            uint64_t v54 = &v53[4 * v49];
            *(_DWORD *)uint64_t v54 = 0;
            char v47 = v54 + 4;
            while (v46 != v48)
            {
              int v55 = *((_DWORD *)v46 - 1);
              v46 -= 4;
              *((_DWORD *)v54 - 1) = v55;
              v54 -= 4;
            }
            a1[1] = v54;
            a1[2] = v47;
            a1[3] = &v53[4 * v52];
            if (v48) {
              operator delete(v48);
            }
          }
          else
          {
            *(_DWORD *)unint64_t v46 = 0;
            char v47 = v46 + 4;
          }
          a1[2] = v47;
          unint64_t v56 = *((void *)this + 1);
          unint64_t v57 = *((void *)this + 2);
          uint64_t v58 = *(void *)this;
          char v59 = 0;
          unsigned int v60 = 0;
          if (v56 > 0xFFFFFFFFFFFFFFF5 || v56 + 10 > v57)
          {
            uint64_t v64 = 0;
            if (v57 <= v56) {
              unint64_t v57 = *((void *)this + 1);
            }
            while (1)
            {
              if (v57 == v56)
              {
                LODWORD(v64) = 0;
                *((unsigned char *)this + 24) = 1;
                goto LABEL_107;
              }
              unint64_t v62 = v56 + 1;
              char v63 = *(unsigned char *)(v58 + v56);
              *((void *)this + 1) = v62;
              v64 |= (unint64_t)(v63 & 0x7F) << v59;
              if ((v63 & 0x80) == 0) {
                break;
              }
              v59 += 7;
              unint64_t v56 = v62;
              BOOL v34 = v60++ > 8;
              if (v34)
              {
LABEL_103:
                LODWORD(v64) = 0;
                goto LABEL_107;
              }
            }
            if (*((unsigned char *)this + 24)) {
              LODWORD(v64) = 0;
            }
          }
          else
          {
            uint64_t v64 = 0;
            while (1)
            {
              unint64_t v65 = v56 + 1;
              *((void *)this + 1) = v56 + 1;
              char v66 = *(unsigned char *)(v58 + v56);
              v64 |= (unint64_t)(v66 & 0x7F) << v59;
              if ((v66 & 0x80) == 0) {
                break;
              }
              v59 += 7;
              unint64_t v56 = v65;
              BOOL v34 = v60++ > 8;
              if (v34) {
                goto LABEL_103;
              }
            }
          }
LABEL_107:
          *(v47 - 1) = v64;
        }
      }
      else if ((PB::Reader::skip(this) & 1) == 0)
      {
        return 0;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v16 = 0;
    unsigned int v17 = 0;
    unint64_t v13 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v18 = v2 + 1;
      char v19 = *(unsigned char *)(v10 + v2);
      *((void *)this + 1) = v18;
      v13 |= (unint64_t)(v19 & 0x7F) << v16;
      if ((v19 & 0x80) == 0) {
        goto LABEL_21;
      }
      v16 += 7;
      unint64_t v2 = v18;
      if (v17++ >= 9)
      {
LABEL_20:
        unint64_t v13 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C77468(uint64_t result, PB::Writer *this)
{
  uint64_t v2 = *(void *)(result + 8);
  for (i = *(void *)(result + 16); v2 != i; uint64_t result = PB::Writer::writeVarInt(this))
    v2 += 4;
  return result;
}

uint64_t sub_227C774B4(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC28598;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void sub_227C774D8(PB::Base *this)
{
  *(void *)this = &unk_26DC28598;
  uint64_t v4 = *((void *)this + 1);
  uint64_t v2 = (void *)((char *)this + 8);
  uint64_t v3 = v4;
  void *v2 = 0;
  if (v4) {
    sub_227B8B690((uint64_t)v2, v3);
  }

  PB::Base::~Base(this);
}

void sub_227C7753C(PB::Base *a1)
{
  sub_227C774D8(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C77574(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC28598;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 24) = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  if (*(unsigned char *)(a2 + 24))
  {
    uint64_t v2 = *(void *)(a2 + 16);
    *(unsigned char *)(result + 24) |= 1u;
    *(void *)(result + 16) = v2;
  }
  return result;
}

uint64_t sub_227C77654(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(void *)(a1 + 8)) {
    PB::TextFormatter::format();
  }
  if (*(unsigned char *)(a1 + 24)) {
    PB::TextFormatter::format(this, "value", *(double *)(a1 + 16));
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C776CC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 24) |= 1u;
        unint64_t v20 = *((void *)this + 1);
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v20);
          *((void *)this + 1) += 8;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        if ((v11 >> 3) == 1) {
          operator new();
        }
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C778D4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  if (*(void *)(result + 8)) {
    uint64_t result = PB::Writer::write();
  }
  if (*(unsigned char *)(v3 + 24))
  {
    double v4 = *(double *)(v3 + 16);
    return PB::Writer::write(this, v4);
  }
  return result;
}

void *sub_227C7793C(void *result)
{
  *uint64_t result = &unk_26DC285D0;
  *(void *)((char *)result + 188) = 0;
  return result;
}

void sub_227C77964(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C7799C(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC285D0;
  *(void *)(result + 188) = 0;
  uint64_t v2 = *(void *)(a2 + 188);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    uint64_t v3 = 1;
    *(void *)(result + 188) = 1;
    *(void *)(result + 8) = v4;
    uint64_t v2 = *(void *)(a2 + 188);
    if ((v2 & 0x800000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v3 = 0;
  if ((v2 & 0x800000) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 104);
    v3 |= 0x800000uLL;
    *(void *)(result + 188) = v3;
    *(_DWORD *)(result + 104) = v5;
    uint64_t v2 = *(void *)(a2 + 188);
  }
LABEL_6:
  if ((v2 & 0x1000000) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 108);
    v3 |= 0x1000000uLL;
    *(void *)(result + 188) = v3;
    *(_DWORD *)(result + 108) = v6;
    uint64_t v2 = *(void *)(a2 + 188);
    if ((v2 & 0x2000000) == 0)
    {
LABEL_8:
      if ((v2 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_57;
    }
  }
  else if ((v2 & 0x2000000) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 112);
  v3 |= 0x2000000uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 112) = v7;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 8) == 0)
  {
LABEL_9:
    if ((v2 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_58;
  }
LABEL_57:
  int v8 = *(_DWORD *)(a2 + 24);
  v3 |= 8uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 24) = v8;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x10) == 0)
  {
LABEL_10:
    if ((v2 & 0x20) == 0) {
      goto LABEL_11;
    }
    goto LABEL_59;
  }
LABEL_58:
  int v9 = *(_DWORD *)(a2 + 28);
  v3 |= 0x10uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 28) = v9;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x20) == 0)
  {
LABEL_11:
    if ((v2 & 0x40000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_60;
  }
LABEL_59:
  int v10 = *(_DWORD *)(a2 + 32);
  v3 |= 0x20uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 32) = v10;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x40000000) == 0)
  {
LABEL_12:
    if ((v2 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_61;
  }
LABEL_60:
  int v11 = *(_DWORD *)(a2 + 132);
  v3 |= 0x40000000uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 132) = v11;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x200) == 0)
  {
LABEL_13:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_62;
  }
LABEL_61:
  int v12 = *(_DWORD *)(a2 + 48);
  v3 |= 0x200uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 48) = v12;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x200000) == 0)
  {
LABEL_14:
    if ((v2 & 2) == 0) {
      goto LABEL_15;
    }
    goto LABEL_63;
  }
LABEL_62:
  int v13 = *(_DWORD *)(a2 + 96);
  v3 |= 0x200000uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 96) = v13;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 2) == 0)
  {
LABEL_15:
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_64;
  }
LABEL_63:
  int v14 = *(_DWORD *)(a2 + 16);
  v3 |= 2uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 16) = v14;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_16:
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_65;
  }
LABEL_64:
  int v15 = *(_DWORD *)(a2 + 116);
  v3 |= 0x4000000uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 116) = v15;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x8000000) == 0)
  {
LABEL_17:
    if ((v2 & 0x10000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_66;
  }
LABEL_65:
  int v16 = *(_DWORD *)(a2 + 120);
  v3 |= 0x8000000uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 120) = v16;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_18:
    if ((v2 & 0x40) == 0) {
      goto LABEL_19;
    }
    goto LABEL_67;
  }
LABEL_66:
  int v17 = *(_DWORD *)(a2 + 124);
  v3 |= 0x10000000uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 124) = v17;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x40) == 0)
  {
LABEL_19:
    if ((v2 & 0x80) == 0) {
      goto LABEL_20;
    }
    goto LABEL_68;
  }
LABEL_67:
  int v18 = *(_DWORD *)(a2 + 36);
  v3 |= 0x40uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 36) = v18;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x80) == 0)
  {
LABEL_20:
    if ((v2 & 0x100) == 0) {
      goto LABEL_21;
    }
    goto LABEL_69;
  }
LABEL_68:
  int v19 = *(_DWORD *)(a2 + 40);
  v3 |= 0x80uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 40) = v19;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x100) == 0)
  {
LABEL_21:
    if ((v2 & 0x80000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_70;
  }
LABEL_69:
  int v20 = *(_DWORD *)(a2 + 44);
  v3 |= 0x100uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 44) = v20;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x80000000) == 0)
  {
LABEL_22:
    if ((v2 & 0x400) == 0) {
      goto LABEL_23;
    }
    goto LABEL_71;
  }
LABEL_70:
  int v21 = *(_DWORD *)(a2 + 136);
  v3 |= 0x80000000uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 136) = v21;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x400) == 0)
  {
LABEL_23:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_72;
  }
LABEL_71:
  int v22 = *(_DWORD *)(a2 + 52);
  v3 |= 0x400uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 52) = v22;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x400000) == 0)
  {
LABEL_24:
    if ((v2 & 4) == 0) {
      goto LABEL_25;
    }
    goto LABEL_73;
  }
LABEL_72:
  int v23 = *(_DWORD *)(a2 + 100);
  v3 |= 0x400000uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 100) = v23;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 4) == 0)
  {
LABEL_25:
    if ((v2 & 0x400000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_74;
  }
LABEL_73:
  int v24 = *(_DWORD *)(a2 + 20);
  v3 |= 4uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 20) = v24;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x400000000) == 0)
  {
LABEL_26:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_75;
  }
LABEL_74:
  int v25 = *(_DWORD *)(a2 + 148);
  v3 |= 0x400000000uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 148) = v25;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x4000) == 0)
  {
LABEL_27:
    if ((v2 & 0x2000000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_76;
  }
LABEL_75:
  int v26 = *(_DWORD *)(a2 + 68);
  v3 |= 0x4000uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 68) = v26;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x2000000000) == 0)
  {
LABEL_28:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_77;
  }
LABEL_76:
  int v27 = *(_DWORD *)(a2 + 160);
  v3 |= 0x2000000000uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 160) = v27;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x20000) == 0)
  {
LABEL_29:
    if ((v2 & 0x800000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_78;
  }
LABEL_77:
  int v28 = *(_DWORD *)(a2 + 80);
  v3 |= 0x20000uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 80) = v28;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x800000000) == 0)
  {
LABEL_30:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_79;
  }
LABEL_78:
  int v29 = *(_DWORD *)(a2 + 152);
  v3 |= 0x800000000uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 152) = v29;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x8000) == 0)
  {
LABEL_31:
    if ((v2 & 0x4000000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_80;
  }
LABEL_79:
  int v30 = *(_DWORD *)(a2 + 72);
  v3 |= 0x8000uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 72) = v30;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x4000000000) == 0)
  {
LABEL_32:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_81;
  }
LABEL_80:
  int v31 = *(_DWORD *)(a2 + 164);
  v3 |= 0x4000000000uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 164) = v31;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x40000) == 0)
  {
LABEL_33:
    if ((v2 & 0x1000000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_82;
  }
LABEL_81:
  int v32 = *(_DWORD *)(a2 + 84);
  v3 |= 0x40000uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 84) = v32;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x1000000000) == 0)
  {
LABEL_34:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_83;
  }
LABEL_82:
  int v33 = *(_DWORD *)(a2 + 156);
  v3 |= 0x1000000000uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 156) = v33;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x10000) == 0)
  {
LABEL_35:
    if ((v2 & 0x8000000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_84;
  }
LABEL_83:
  int v34 = *(_DWORD *)(a2 + 76);
  v3 |= 0x10000uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 76) = v34;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x8000000000) == 0)
  {
LABEL_36:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_85;
  }
LABEL_84:
  int v35 = *(_DWORD *)(a2 + 168);
  v3 |= 0x8000000000uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 168) = v35;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x80000) == 0)
  {
LABEL_37:
    if ((v2 & 0x200000000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_86;
  }
LABEL_85:
  int v36 = *(_DWORD *)(a2 + 88);
  v3 |= 0x80000uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 88) = v36;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x200000000000) == 0)
  {
LABEL_38:
    if ((v2 & 0x800) == 0) {
      goto LABEL_39;
    }
    goto LABEL_87;
  }
LABEL_86:
  char v37 = *(unsigned char *)(a2 + 183);
  v3 |= 0x200000000000uLL;
  *(void *)(result + 188) = v3;
  *(unsigned char *)(result + 183) = v37;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x800) == 0)
  {
LABEL_39:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_88;
  }
LABEL_87:
  int v38 = *(_DWORD *)(a2 + 56);
  v3 |= 0x800uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 56) = v38;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x1000) == 0)
  {
LABEL_40:
    if ((v2 & 0x100000000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_89;
  }
LABEL_88:
  int v39 = *(_DWORD *)(a2 + 60);
  v3 |= 0x1000uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 60) = v39;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x100000000000) == 0)
  {
LABEL_41:
    if ((v2 & 0x400000000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_90;
  }
LABEL_89:
  char v40 = *(unsigned char *)(a2 + 182);
  v3 |= 0x100000000000uLL;
  *(void *)(result + 188) = v3;
  *(unsigned char *)(result + 182) = v40;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x400000000000) == 0)
  {
LABEL_42:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_91;
  }
LABEL_90:
  char v41 = *(unsigned char *)(a2 + 184);
  v3 |= 0x400000000000uLL;
  *(void *)(result + 188) = v3;
  *(unsigned char *)(result + 184) = v41;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x2000) == 0)
  {
LABEL_43:
    if ((v2 & 0x100000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_92;
  }
LABEL_91:
  int v42 = *(_DWORD *)(a2 + 64);
  v3 |= 0x2000uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 64) = v42;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x100000000) == 0)
  {
LABEL_44:
    if ((v2 & 0x200000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_93;
  }
LABEL_92:
  int v43 = *(_DWORD *)(a2 + 140);
  v3 |= 0x100000000uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 140) = v43;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x200000000) == 0)
  {
LABEL_45:
    if ((v2 & 0x1000000000000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_94;
  }
LABEL_93:
  int v44 = *(_DWORD *)(a2 + 144);
  v3 |= 0x200000000uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 144) = v44;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x1000000000000) == 0)
  {
LABEL_46:
    if ((v2 & 0x80000000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_95;
  }
LABEL_94:
  char v45 = *(unsigned char *)(a2 + 186);
  v3 |= 0x1000000000000uLL;
  *(void *)(result + 188) = v3;
  *(unsigned char *)(result + 186) = v45;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x80000000000) == 0)
  {
LABEL_47:
    if ((v2 & 0x40000000000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_96;
  }
LABEL_95:
  char v46 = *(unsigned char *)(a2 + 181);
  v3 |= 0x80000000000uLL;
  *(void *)(result + 188) = v3;
  *(unsigned char *)(result + 181) = v46;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x40000000000) == 0)
  {
LABEL_48:
    if ((v2 & 0x20000000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_97;
  }
LABEL_96:
  char v47 = *(unsigned char *)(a2 + 180);
  v3 |= 0x40000000000uLL;
  *(void *)(result + 188) = v3;
  *(unsigned char *)(result + 180) = v47;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x20000000) == 0)
  {
LABEL_49:
    if ((v2 & 0x20000000000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_98;
  }
LABEL_97:
  int v48 = *(_DWORD *)(a2 + 128);
  v3 |= 0x20000000uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 128) = v48;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x20000000000) == 0)
  {
LABEL_50:
    if ((v2 & 0x10000000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_99;
  }
LABEL_98:
  int v49 = *(_DWORD *)(a2 + 176);
  v3 |= 0x20000000000uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 176) = v49;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x10000000000) == 0)
  {
LABEL_51:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_100;
  }
LABEL_99:
  int v50 = *(_DWORD *)(a2 + 172);
  v3 |= 0x10000000000uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 172) = v50;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x100000) == 0)
  {
LABEL_52:
    if ((v2 & 0x800000000000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_101;
  }
LABEL_100:
  int v51 = *(_DWORD *)(a2 + 92);
  v3 |= 0x100000uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 92) = v51;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x800000000000) == 0)
  {
LABEL_53:
    if ((v2 & 0x2000000000000) == 0) {
      return result;
    }
LABEL_102:
    char v53 = *(unsigned char *)(a2 + 187);
    *(void *)(result + 188) = v3 | 0x2000000000000;
    *(unsigned char *)(result + 187) = v53;
    return result;
  }
LABEL_101:
  char v52 = *(unsigned char *)(a2 + 185);
  v3 |= 0x800000000000uLL;
  *(void *)(result + 188) = v3;
  *(unsigned char *)(result + 185) = v52;
  if ((*(void *)(a2 + 188) & 0x2000000000000) != 0) {
    goto LABEL_102;
  }
  return result;
}

uint64_t sub_227C77F40(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "auxHorizontalRotation", *(float *)(a1 + 16));
    uint64_t v5 = *(void *)(a1 + 188);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_57;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "auxHorizontalTranslation", *(float *)(a1 + 20));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_58;
  }
LABEL_57:
  PB::TextFormatter::format(this, "auxOmegaInertial_X", *(float *)(a1 + 24));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_59;
  }
LABEL_58:
  PB::TextFormatter::format(this, "auxOmegaInertial_Y", *(float *)(a1 + 28));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x20) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_60;
  }
LABEL_59:
  PB::TextFormatter::format(this, "auxOmegaInertial_Z", *(float *)(a1 + 32));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_61;
  }
LABEL_60:
  PB::TextFormatter::format(this, "auxUserAccelInertial_X", *(float *)(a1 + 36));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x80) == 0)
  {
LABEL_8:
    if ((v5 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_62;
  }
LABEL_61:
  PB::TextFormatter::format(this, "auxUserAccelInertial_Y", *(float *)(a1 + 40));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x100) == 0)
  {
LABEL_9:
    if ((v5 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_63;
  }
LABEL_62:
  PB::TextFormatter::format(this, "auxUserAccelInertial_Z", *(float *)(a1 + 44));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x200) == 0)
  {
LABEL_10:
    if ((v5 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_64;
  }
LABEL_63:
  PB::TextFormatter::format(this, "auxVerticalRotation", *(float *)(a1 + 48));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x400) == 0)
  {
LABEL_11:
    if ((v5 & 0x40000000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_65;
  }
LABEL_64:
  PB::TextFormatter::format(this, "auxVerticalTranslation", *(float *)(a1 + 52));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x40000000000) == 0)
  {
LABEL_12:
    if ((v5 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_66;
  }
LABEL_65:
  PB::TextFormatter::format(this, "blockHeadTurnFalsePositive");
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x800) == 0)
  {
LABEL_13:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_67;
  }
LABEL_66:
  PB::TextFormatter::format(this, "bodyTurnDetectionVerticalRotationSrc", *(float *)(a1 + 56));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x1000) == 0)
  {
LABEL_14:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_68;
  }
LABEL_67:
  PB::TextFormatter::format(this, "bodyTurnMaximaBaseline", *(float *)(a1 + 60));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x2000) == 0)
  {
LABEL_15:
    if ((v5 & 0x80000000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_69;
  }
LABEL_68:
  PB::TextFormatter::format(this, "counterBodyTurnAboveBaseline");
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x80000000000) == 0)
  {
LABEL_16:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_70;
  }
LABEL_69:
  PB::TextFormatter::format(this, "hasRecentHeadTurn");
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x4000) == 0)
  {
LABEL_17:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_71;
  }
LABEL_70:
  PB::TextFormatter::format(this, "horizontalRotationSimilarity", *(float *)(a1 + 68));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x8000) == 0)
  {
LABEL_18:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_72;
  }
LABEL_71:
  PB::TextFormatter::format(this, "horizontalRotationSimilarityBaseline", *(float *)(a1 + 72));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x10000) == 0)
  {
LABEL_19:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_73;
  }
LABEL_72:
  PB::TextFormatter::format(this, "horizontalRotationSimilarityThreshold", *(float *)(a1 + 76));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x20000) == 0)
  {
LABEL_20:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_74;
  }
LABEL_73:
  PB::TextFormatter::format(this, "horizontalTranslationSimilarity", *(float *)(a1 + 80));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x40000) == 0)
  {
LABEL_21:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_75;
  }
LABEL_74:
  PB::TextFormatter::format(this, "horizontalTranslationSimilarityBaseline", *(float *)(a1 + 84));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x80000) == 0)
  {
LABEL_22:
    if ((v5 & 0x100000000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_76;
  }
LABEL_75:
  PB::TextFormatter::format(this, "horizontalTranslationSimilarityThreshold", *(float *)(a1 + 88));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x100000000000) == 0)
  {
LABEL_23:
    if ((v5 & 0x200000000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_77;
  }
LABEL_76:
  PB::TextFormatter::format(this, "inBodyTurn");
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x200000000000) == 0)
  {
LABEL_24:
    if ((v5 & 0x400000000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_78;
  }
LABEL_77:
  PB::TextFormatter::format(this, "inComplexTransitionState");
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x400000000000) == 0)
  {
LABEL_25:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_79;
  }
LABEL_78:
  PB::TextFormatter::format(this, "inStrongBodyTurn");
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x100000) == 0)
  {
LABEL_26:
    if ((v5 & 0x800000000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_80;
  }
LABEL_79:
  PB::TextFormatter::format(this, "longBodyTurnCounter");
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x800000000000) == 0)
  {
LABEL_27:
    if ((v5 & 0x1000000000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_81;
  }
LABEL_80:
  PB::TextFormatter::format(this, "longBodyTurnState");
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x1000000000000) == 0)
  {
LABEL_28:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_82;
  }
LABEL_81:
  PB::TextFormatter::format(this, "overrideHeadTurn");
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x200000) == 0)
  {
LABEL_29:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_83;
  }
LABEL_82:
  PB::TextFormatter::format(this, "srcHorizontalRotation", *(float *)(a1 + 96));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x400000) == 0)
  {
LABEL_30:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_84;
  }
LABEL_83:
  PB::TextFormatter::format(this, "srcHorizontalTranslation", *(float *)(a1 + 100));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x800000) == 0)
  {
LABEL_31:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_85;
  }
LABEL_84:
  PB::TextFormatter::format(this, "srcOmegaInertial_X", *(float *)(a1 + 104));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_32:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_86;
  }
LABEL_85:
  PB::TextFormatter::format(this, "srcOmegaInertial_Y", *(float *)(a1 + 108));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_33:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_87;
  }
LABEL_86:
  PB::TextFormatter::format(this, "srcOmegaInertial_Z", *(float *)(a1 + 112));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_34:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_88;
  }
LABEL_87:
  PB::TextFormatter::format(this, "srcUserAccelInertial_X", *(float *)(a1 + 116));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_35:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_89;
  }
LABEL_88:
  PB::TextFormatter::format(this, "srcUserAccelInertial_Y", *(float *)(a1 + 120));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_36:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_90;
  }
LABEL_89:
  PB::TextFormatter::format(this, "srcUserAccelInertial_Z", *(float *)(a1 + 124));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x20000000) == 0)
  {
LABEL_37:
    if ((v5 & 0x40000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_91;
  }
LABEL_90:
  PB::TextFormatter::format(this, "srcVertToHrzRotRatio", *(float *)(a1 + 128));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x40000000) == 0)
  {
LABEL_38:
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_92;
  }
LABEL_91:
  PB::TextFormatter::format(this, "srcVerticalRotation", *(float *)(a1 + 132));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x80000000) == 0)
  {
LABEL_39:
    if ((v5 & 0x100000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_93;
  }
LABEL_92:
  PB::TextFormatter::format(this, "srcVerticalTranslation", *(float *)(a1 + 136));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x100000000) == 0)
  {
LABEL_40:
    if ((v5 & 0x200000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_94;
  }
LABEL_93:
  PB::TextFormatter::format(this, "srcYawRotationExtremaBuffer", *(float *)(a1 + 140));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x200000000) == 0)
  {
LABEL_41:
    if ((v5 & 1) == 0) {
      goto LABEL_42;
    }
    goto LABEL_95;
  }
LABEL_94:
  PB::TextFormatter::format(this, "srcYawRotationMaximaBaseline", *(float *)(a1 + 144));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 1) == 0)
  {
LABEL_42:
    if ((v5 & 0x400000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_96;
  }
LABEL_95:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x400000000) == 0)
  {
LABEL_43:
    if ((v5 & 0x800000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_97;
  }
LABEL_96:
  PB::TextFormatter::format(this, "verticalRotationSimilarity", *(float *)(a1 + 148));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x800000000) == 0)
  {
LABEL_44:
    if ((v5 & 0x1000000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_98;
  }
LABEL_97:
  PB::TextFormatter::format(this, "verticalRotationSimilarityBaseline", *(float *)(a1 + 152));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x1000000000) == 0)
  {
LABEL_45:
    if ((v5 & 0x2000000000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_99;
  }
LABEL_98:
  PB::TextFormatter::format(this, "verticalRotationSimilarityThreshold", *(float *)(a1 + 156));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x2000000000) == 0)
  {
LABEL_46:
    if ((v5 & 0x4000000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_100;
  }
LABEL_99:
  PB::TextFormatter::format(this, "verticalTranslationSimilarity", *(float *)(a1 + 160));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x4000000000) == 0)
  {
LABEL_47:
    if ((v5 & 0x8000000000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_101;
  }
LABEL_100:
  PB::TextFormatter::format(this, "verticalTranslationSimilarityBaseline", *(float *)(a1 + 164));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x8000000000) == 0)
  {
LABEL_48:
    if ((v5 & 0x10000000000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_102;
  }
LABEL_101:
  PB::TextFormatter::format(this, "verticalTranslationSimilarityThreshold", *(float *)(a1 + 168));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x10000000000) == 0)
  {
LABEL_49:
    if ((v5 & 0x20000000000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_103;
  }
LABEL_102:
  PB::TextFormatter::format(this, "yawRateSimilarity1000ms", *(float *)(a1 + 172));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x20000000000) == 0)
  {
LABEL_50:
    if ((v5 & 0x2000000000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_51;
  }
LABEL_103:
  PB::TextFormatter::format(this, "yawRateSimilarity200ms", *(float *)(a1 + 176));
  if ((*(void *)(a1 + 188) & 0x2000000000000) != 0) {
LABEL_51:
  }
    PB::TextFormatter::format(this, "yawRateSimilarityState");
LABEL_52:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C785C4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(void *)(a1 + 188) |= 1uLL;
          unint64_t v20 = *((void *)this + 1);
          if (v20 > 0xFFFFFFFFFFFFFFF7 || v20 + 8 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v20);
          uint64_t v21 = *((void *)this + 1) + 8;
          goto LABEL_206;
        case 2u:
          *(void *)(a1 + 188) |= 0x800000uLL;
          unint64_t v23 = *((void *)this + 1);
          if (v23 > 0xFFFFFFFFFFFFFFFBLL || v23 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 104) = *(_DWORD *)(*(void *)this + v23);
          goto LABEL_205;
        case 3u:
          *(void *)(a1 + 188) |= 0x1000000uLL;
          unint64_t v24 = *((void *)this + 1);
          if (v24 > 0xFFFFFFFFFFFFFFFBLL || v24 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 108) = *(_DWORD *)(*(void *)this + v24);
          goto LABEL_205;
        case 4u:
          *(void *)(a1 + 188) |= 0x2000000uLL;
          unint64_t v25 = *((void *)this + 1);
          if (v25 > 0xFFFFFFFFFFFFFFFBLL || v25 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 112) = *(_DWORD *)(*(void *)this + v25);
          goto LABEL_205;
        case 5u:
          *(void *)(a1 + 188) |= 8uLL;
          unint64_t v26 = *((void *)this + 1);
          if (v26 > 0xFFFFFFFFFFFFFFFBLL || v26 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v26);
          goto LABEL_205;
        case 6u:
          *(void *)(a1 + 188) |= 0x10uLL;
          unint64_t v27 = *((void *)this + 1);
          if (v27 > 0xFFFFFFFFFFFFFFFBLL || v27 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v27);
          goto LABEL_205;
        case 7u:
          *(void *)(a1 + 188) |= 0x20uLL;
          unint64_t v28 = *((void *)this + 1);
          if (v28 > 0xFFFFFFFFFFFFFFFBLL || v28 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v28);
          goto LABEL_205;
        case 8u:
          *(void *)(a1 + 188) |= 0x40000000uLL;
          unint64_t v29 = *((void *)this + 1);
          if (v29 > 0xFFFFFFFFFFFFFFFBLL || v29 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 132) = *(_DWORD *)(*(void *)this + v29);
          goto LABEL_205;
        case 9u:
          *(void *)(a1 + 188) |= 0x200uLL;
          unint64_t v30 = *((void *)this + 1);
          if (v30 > 0xFFFFFFFFFFFFFFFBLL || v30 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v30);
          goto LABEL_205;
        case 0xAu:
          *(void *)(a1 + 188) |= 0x200000uLL;
          unint64_t v31 = *((void *)this + 1);
          if (v31 > 0xFFFFFFFFFFFFFFFBLL || v31 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v31);
          goto LABEL_205;
        case 0xBu:
          *(void *)(a1 + 188) |= 2uLL;
          unint64_t v32 = *((void *)this + 1);
          if (v32 > 0xFFFFFFFFFFFFFFFBLL || v32 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v32);
          goto LABEL_205;
        case 0xCu:
          *(void *)(a1 + 188) |= 0x4000000uLL;
          unint64_t v33 = *((void *)this + 1);
          if (v33 > 0xFFFFFFFFFFFFFFFBLL || v33 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 116) = *(_DWORD *)(*(void *)this + v33);
          goto LABEL_205;
        case 0xDu:
          *(void *)(a1 + 188) |= 0x8000000uLL;
          unint64_t v34 = *((void *)this + 1);
          if (v34 > 0xFFFFFFFFFFFFFFFBLL || v34 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 120) = *(_DWORD *)(*(void *)this + v34);
          goto LABEL_205;
        case 0xEu:
          *(void *)(a1 + 188) |= 0x10000000uLL;
          unint64_t v35 = *((void *)this + 1);
          if (v35 > 0xFFFFFFFFFFFFFFFBLL || v35 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 124) = *(_DWORD *)(*(void *)this + v35);
          goto LABEL_205;
        case 0xFu:
          *(void *)(a1 + 188) |= 0x40uLL;
          unint64_t v36 = *((void *)this + 1);
          if (v36 > 0xFFFFFFFFFFFFFFFBLL || v36 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v36);
          goto LABEL_205;
        case 0x10u:
          *(void *)(a1 + 188) |= 0x80uLL;
          unint64_t v37 = *((void *)this + 1);
          if (v37 > 0xFFFFFFFFFFFFFFFBLL || v37 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v37);
          goto LABEL_205;
        case 0x11u:
          *(void *)(a1 + 188) |= 0x100uLL;
          unint64_t v38 = *((void *)this + 1);
          if (v38 > 0xFFFFFFFFFFFFFFFBLL || v38 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v38);
          goto LABEL_205;
        case 0x12u:
          *(void *)(a1 + 188) |= 0x80000000uLL;
          unint64_t v39 = *((void *)this + 1);
          if (v39 > 0xFFFFFFFFFFFFFFFBLL || v39 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 136) = *(_DWORD *)(*(void *)this + v39);
          goto LABEL_205;
        case 0x13u:
          *(void *)(a1 + 188) |= 0x400uLL;
          unint64_t v40 = *((void *)this + 1);
          if (v40 > 0xFFFFFFFFFFFFFFFBLL || v40 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v40);
          goto LABEL_205;
        case 0x14u:
          *(void *)(a1 + 188) |= 0x400000uLL;
          unint64_t v41 = *((void *)this + 1);
          if (v41 > 0xFFFFFFFFFFFFFFFBLL || v41 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v41);
          goto LABEL_205;
        case 0x15u:
          *(void *)(a1 + 188) |= 4uLL;
          unint64_t v42 = *((void *)this + 1);
          if (v42 > 0xFFFFFFFFFFFFFFFBLL || v42 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v42);
          goto LABEL_205;
        case 0x16u:
          *(void *)(a1 + 188) |= 0x400000000uLL;
          unint64_t v43 = *((void *)this + 1);
          if (v43 > 0xFFFFFFFFFFFFFFFBLL || v43 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 148) = *(_DWORD *)(*(void *)this + v43);
          goto LABEL_205;
        case 0x17u:
          *(void *)(a1 + 188) |= 0x4000uLL;
          unint64_t v44 = *((void *)this + 1);
          if (v44 > 0xFFFFFFFFFFFFFFFBLL || v44 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 68) = *(_DWORD *)(*(void *)this + v44);
          goto LABEL_205;
        case 0x18u:
          *(void *)(a1 + 188) |= 0x2000000000uLL;
          unint64_t v45 = *((void *)this + 1);
          if (v45 > 0xFFFFFFFFFFFFFFFBLL || v45 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 160) = *(_DWORD *)(*(void *)this + v45);
          goto LABEL_205;
        case 0x19u:
          *(void *)(a1 + 188) |= 0x20000uLL;
          unint64_t v46 = *((void *)this + 1);
          if (v46 > 0xFFFFFFFFFFFFFFFBLL || v46 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v46);
          goto LABEL_205;
        case 0x1Au:
          *(void *)(a1 + 188) |= 0x800000000uLL;
          unint64_t v47 = *((void *)this + 1);
          if (v47 > 0xFFFFFFFFFFFFFFFBLL || v47 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 152) = *(_DWORD *)(*(void *)this + v47);
          goto LABEL_205;
        case 0x1Bu:
          *(void *)(a1 + 188) |= 0x8000uLL;
          unint64_t v48 = *((void *)this + 1);
          if (v48 > 0xFFFFFFFFFFFFFFFBLL || v48 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v48);
          goto LABEL_205;
        case 0x1Cu:
          *(void *)(a1 + 188) |= 0x4000000000uLL;
          unint64_t v49 = *((void *)this + 1);
          if (v49 > 0xFFFFFFFFFFFFFFFBLL || v49 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 164) = *(_DWORD *)(*(void *)this + v49);
          goto LABEL_205;
        case 0x1Du:
          *(void *)(a1 + 188) |= 0x40000uLL;
          unint64_t v50 = *((void *)this + 1);
          if (v50 > 0xFFFFFFFFFFFFFFFBLL || v50 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v50);
          goto LABEL_205;
        case 0x1Eu:
          *(void *)(a1 + 188) |= 0x1000000000uLL;
          unint64_t v51 = *((void *)this + 1);
          if (v51 > 0xFFFFFFFFFFFFFFFBLL || v51 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 156) = *(_DWORD *)(*(void *)this + v51);
          goto LABEL_205;
        case 0x1Fu:
          *(void *)(a1 + 188) |= 0x10000uLL;
          unint64_t v52 = *((void *)this + 1);
          if (v52 > 0xFFFFFFFFFFFFFFFBLL || v52 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v52);
          goto LABEL_205;
        case 0x20u:
          *(void *)(a1 + 188) |= 0x8000000000uLL;
          unint64_t v53 = *((void *)this + 1);
          if (v53 > 0xFFFFFFFFFFFFFFFBLL || v53 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 168) = *(_DWORD *)(*(void *)this + v53);
          goto LABEL_205;
        case 0x21u:
          *(void *)(a1 + 188) |= 0x80000uLL;
          unint64_t v54 = *((void *)this + 1);
          if (v54 > 0xFFFFFFFFFFFFFFFBLL || v54 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v54);
          goto LABEL_205;
        case 0x22u:
          *(void *)(a1 + 188) |= 0x200000000000uLL;
          unint64_t v55 = *((void *)this + 1);
          if (v55 >= *((void *)this + 2))
          {
            BOOL v58 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v56 = v55 + 1;
            int v57 = *(unsigned __int8 *)(*(void *)this + v55);
            *((void *)this + 1) = v56;
            BOOL v58 = v57 != 0;
          }
          *(unsigned char *)(a1 + 183) = v58;
          goto LABEL_207;
        case 0x23u:
          *(void *)(a1 + 188) |= 0x800uLL;
          unint64_t v59 = *((void *)this + 1);
          if (v59 > 0xFFFFFFFFFFFFFFFBLL || v59 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v59);
          goto LABEL_205;
        case 0x24u:
          *(void *)(a1 + 188) |= 0x1000uLL;
          unint64_t v60 = *((void *)this + 1);
          if (v60 > 0xFFFFFFFFFFFFFFFBLL || v60 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v60);
          goto LABEL_205;
        case 0x25u:
          *(void *)(a1 + 188) |= 0x100000000000uLL;
          unint64_t v61 = *((void *)this + 1);
          if (v61 >= *((void *)this + 2))
          {
            BOOL v64 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v62 = v61 + 1;
            int v63 = *(unsigned __int8 *)(*(void *)this + v61);
            *((void *)this + 1) = v62;
            BOOL v64 = v63 != 0;
          }
          *(unsigned char *)(a1 + 182) = v64;
          goto LABEL_207;
        case 0x26u:
          *(void *)(a1 + 188) |= 0x400000000000uLL;
          unint64_t v65 = *((void *)this + 1);
          if (v65 >= *((void *)this + 2))
          {
            BOOL v68 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v66 = v65 + 1;
            int v67 = *(unsigned __int8 *)(*(void *)this + v65);
            *((void *)this + 1) = v66;
            BOOL v68 = v67 != 0;
          }
          *(unsigned char *)(a1 + 184) = v68;
          goto LABEL_207;
        case 0x27u:
          *(void *)(a1 + 188) |= 0x2000uLL;
          unint64_t v69 = *((void *)this + 1);
          unint64_t v70 = *((void *)this + 2);
          uint64_t v71 = *(void *)this;
          if (v69 <= 0xFFFFFFFFFFFFFFF5 && v69 + 10 <= v70)
          {
            char v72 = 0;
            unsigned int v73 = 0;
            uint64_t v74 = 0;
            do
            {
              unint64_t v75 = v69 + 1;
              *((void *)this + 1) = v69 + 1;
              char v76 = *(unsigned char *)(v71 + v69);
              v74 |= (unint64_t)(v76 & 0x7F) << v72;
              if ((v76 & 0x80) == 0) {
                goto LABEL_219;
              }
              v72 += 7;
              unint64_t v69 = v75;
              BOOL v14 = v73++ > 8;
            }
            while (!v14);
LABEL_186:
            LODWORD(v74) = 0;
            goto LABEL_219;
          }
          char v110 = 0;
          unsigned int v111 = 0;
          uint64_t v74 = 0;
          if (v70 <= v69) {
            unint64_t v70 = *((void *)this + 1);
          }
          while (2)
          {
            if (v70 == v69)
            {
              LODWORD(v74) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v112 = v69 + 1;
              char v113 = *(unsigned char *)(v71 + v69);
              *((void *)this + 1) = v112;
              v74 |= (unint64_t)(v113 & 0x7F) << v110;
              if (v113 < 0)
              {
                v110 += 7;
                unint64_t v69 = v112;
                BOOL v14 = v111++ > 8;
                if (v14) {
                  goto LABEL_186;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v74) = 0;
              }
            }
            break;
          }
LABEL_219:
          *(_DWORD *)(a1 + 64) = v74;
          goto LABEL_207;
        case 0x28u:
          *(void *)(a1 + 188) |= 0x100000000uLL;
          unint64_t v77 = *((void *)this + 1);
          if (v77 > 0xFFFFFFFFFFFFFFFBLL || v77 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 140) = *(_DWORD *)(*(void *)this + v77);
          goto LABEL_205;
        case 0x29u:
          *(void *)(a1 + 188) |= 0x200000000uLL;
          unint64_t v78 = *((void *)this + 1);
          if (v78 > 0xFFFFFFFFFFFFFFFBLL || v78 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 144) = *(_DWORD *)(*(void *)this + v78);
          goto LABEL_205;
        case 0x2Au:
          *(void *)(a1 + 188) |= 0x1000000000000uLL;
          unint64_t v79 = *((void *)this + 1);
          if (v79 >= *((void *)this + 2))
          {
            BOOL v82 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v80 = v79 + 1;
            int v81 = *(unsigned __int8 *)(*(void *)this + v79);
            *((void *)this + 1) = v80;
            BOOL v82 = v81 != 0;
          }
          *(unsigned char *)(a1 + 186) = v82;
          goto LABEL_207;
        case 0x2Bu:
          *(void *)(a1 + 188) |= 0x80000000000uLL;
          unint64_t v83 = *((void *)this + 1);
          if (v83 >= *((void *)this + 2))
          {
            BOOL v86 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v84 = v83 + 1;
            int v85 = *(unsigned __int8 *)(*(void *)this + v83);
            *((void *)this + 1) = v84;
            BOOL v86 = v85 != 0;
          }
          *(unsigned char *)(a1 + 181) = v86;
          goto LABEL_207;
        case 0x2Cu:
          *(void *)(a1 + 188) |= 0x40000000000uLL;
          unint64_t v87 = *((void *)this + 1);
          if (v87 >= *((void *)this + 2))
          {
            BOOL v90 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v88 = v87 + 1;
            int v89 = *(unsigned __int8 *)(*(void *)this + v87);
            *((void *)this + 1) = v88;
            BOOL v90 = v89 != 0;
          }
          *(unsigned char *)(a1 + 180) = v90;
          goto LABEL_207;
        case 0x2Du:
          *(void *)(a1 + 188) |= 0x20000000uLL;
          unint64_t v91 = *((void *)this + 1);
          if (v91 > 0xFFFFFFFFFFFFFFFBLL || v91 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v91);
          goto LABEL_205;
        case 0x2Eu:
          *(void *)(a1 + 188) |= 0x20000000000uLL;
          unint64_t v92 = *((void *)this + 1);
          if (v92 > 0xFFFFFFFFFFFFFFFBLL || v92 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 176) = *(_DWORD *)(*(void *)this + v92);
          goto LABEL_205;
        case 0x2Fu:
          *(void *)(a1 + 188) |= 0x10000000000uLL;
          unint64_t v93 = *((void *)this + 1);
          if (v93 <= 0xFFFFFFFFFFFFFFFBLL && v93 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 172) = *(_DWORD *)(*(void *)this + v93);
LABEL_205:
            uint64_t v21 = *((void *)this + 1) + 4;
LABEL_206:
            *((void *)this + 1) = v21;
          }
          else
          {
LABEL_162:
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_207;
        case 0x30u:
          *(void *)(a1 + 188) |= 0x100000uLL;
          unint64_t v94 = *((void *)this + 1);
          unint64_t v95 = *((void *)this + 2);
          uint64_t v96 = *(void *)this;
          if (v94 <= 0xFFFFFFFFFFFFFFF5 && v94 + 10 <= v95)
          {
            char v97 = 0;
            unsigned int v98 = 0;
            uint64_t v99 = 0;
            do
            {
              unint64_t v100 = v94 + 1;
              *((void *)this + 1) = v94 + 1;
              char v101 = *(unsigned char *)(v96 + v94);
              v99 |= (unint64_t)(v101 & 0x7F) << v97;
              if ((v101 & 0x80) == 0) {
                goto LABEL_216;
              }
              v97 += 7;
              unint64_t v94 = v100;
              BOOL v14 = v98++ > 8;
            }
            while (!v14);
LABEL_199:
            LODWORD(v99) = 0;
            goto LABEL_216;
          }
          char v114 = 0;
          unsigned int v115 = 0;
          uint64_t v99 = 0;
          if (v95 <= v94) {
            unint64_t v95 = *((void *)this + 1);
          }
          break;
        case 0x31u:
          *(void *)(a1 + 188) |= 0x800000000000uLL;
          unint64_t v102 = *((void *)this + 1);
          if (v102 >= *((void *)this + 2))
          {
            BOOL v105 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v103 = v102 + 1;
            int v104 = *(unsigned __int8 *)(*(void *)this + v102);
            *((void *)this + 1) = v103;
            BOOL v105 = v104 != 0;
          }
          *(unsigned char *)(a1 + 185) = v105;
          goto LABEL_207;
        case 0x32u:
          *(void *)(a1 + 188) |= 0x2000000000000uLL;
          unint64_t v106 = *((void *)this + 1);
          if (v106 >= *((void *)this + 2))
          {
            BOOL v109 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v107 = v106 + 1;
            int v108 = *(unsigned __int8 *)(*(void *)this + v106);
            *((void *)this + 1) = v107;
            BOOL v109 = v108 != 0;
          }
          *(unsigned char *)(a1 + 187) = v109;
          goto LABEL_207;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          goto LABEL_207;
      }
      while (1)
      {
        if (v95 == v94)
        {
          LODWORD(v99) = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_216;
        }
        unint64_t v116 = v94 + 1;
        char v117 = *(unsigned char *)(v96 + v94);
        *((void *)this + 1) = v116;
        v99 |= (unint64_t)(v117 & 0x7F) << v114;
        if ((v117 & 0x80) == 0) {
          break;
        }
        v114 += 7;
        unint64_t v94 = v116;
        BOOL v14 = v115++ > 8;
        if (v14) {
          goto LABEL_199;
        }
      }
      if (*((unsigned char *)this + 24)) {
        LODWORD(v99) = 0;
      }
LABEL_216:
      *(_DWORD *)(a1 + 92) = v99;
LABEL_207:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C794E0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(result + 188);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    uint64_t v4 = *(void *)(v3 + 188);
    if ((v4 & 0x800000) == 0)
    {
LABEL_3:
      if ((v4 & 0x1000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_54;
    }
  }
  else if ((v4 & 0x800000) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 104));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_4:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 108));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 112));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x20) == 0)
  {
LABEL_8:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x40000000) == 0)
  {
LABEL_9:
    if ((v4 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_60;
  }
LABEL_59:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 132));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x200) == 0)
  {
LABEL_10:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x200000) == 0)
  {
LABEL_11:
    if ((v4 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 96));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 2) == 0)
  {
LABEL_12:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_13:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_64;
  }
LABEL_63:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 116));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_14:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_65;
  }
LABEL_64:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 120));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_15:
    if ((v4 & 0x40) == 0) {
      goto LABEL_16;
    }
    goto LABEL_66;
  }
LABEL_65:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 124));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x40) == 0)
  {
LABEL_16:
    if ((v4 & 0x80) == 0) {
      goto LABEL_17;
    }
    goto LABEL_67;
  }
LABEL_66:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x80) == 0)
  {
LABEL_17:
    if ((v4 & 0x100) == 0) {
      goto LABEL_18;
    }
    goto LABEL_68;
  }
LABEL_67:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x100) == 0)
  {
LABEL_18:
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_69;
  }
LABEL_68:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x80000000) == 0)
  {
LABEL_19:
    if ((v4 & 0x400) == 0) {
      goto LABEL_20;
    }
    goto LABEL_70;
  }
LABEL_69:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 136));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x400) == 0)
  {
LABEL_20:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_71;
  }
LABEL_70:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x400000) == 0)
  {
LABEL_21:
    if ((v4 & 4) == 0) {
      goto LABEL_22;
    }
    goto LABEL_72;
  }
LABEL_71:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 100));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 4) == 0)
  {
LABEL_22:
    if ((v4 & 0x400000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_73;
  }
LABEL_72:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x400000000) == 0)
  {
LABEL_23:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_74;
  }
LABEL_73:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 148));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x4000) == 0)
  {
LABEL_24:
    if ((v4 & 0x2000000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_75;
  }
LABEL_74:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 68));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x2000000000) == 0)
  {
LABEL_25:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_76;
  }
LABEL_75:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 160));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x20000) == 0)
  {
LABEL_26:
    if ((v4 & 0x800000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_77;
  }
LABEL_76:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x800000000) == 0)
  {
LABEL_27:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_78;
  }
LABEL_77:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 152));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x8000) == 0)
  {
LABEL_28:
    if ((v4 & 0x4000000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_79;
  }
LABEL_78:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x4000000000) == 0)
  {
LABEL_29:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_80;
  }
LABEL_79:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 164));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x40000) == 0)
  {
LABEL_30:
    if ((v4 & 0x1000000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_81;
  }
LABEL_80:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x1000000000) == 0)
  {
LABEL_31:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_82;
  }
LABEL_81:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 156));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x10000) == 0)
  {
LABEL_32:
    if ((v4 & 0x8000000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_83;
  }
LABEL_82:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x8000000000) == 0)
  {
LABEL_33:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_84;
  }
LABEL_83:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 168));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x80000) == 0)
  {
LABEL_34:
    if ((v4 & 0x200000000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_85;
  }
LABEL_84:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 88));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x200000000000) == 0)
  {
LABEL_35:
    if ((v4 & 0x800) == 0) {
      goto LABEL_36;
    }
    goto LABEL_86;
  }
LABEL_85:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x800) == 0)
  {
LABEL_36:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_87;
  }
LABEL_86:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x1000) == 0)
  {
LABEL_37:
    if ((v4 & 0x100000000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_88;
  }
LABEL_87:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 60));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x100000000000) == 0)
  {
LABEL_38:
    if ((v4 & 0x400000000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_89;
  }
LABEL_88:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x400000000000) == 0)
  {
LABEL_39:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_90;
  }
LABEL_89:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x2000) == 0)
  {
LABEL_40:
    if ((v4 & 0x100000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_91;
  }
LABEL_90:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x100000000) == 0)
  {
LABEL_41:
    if ((v4 & 0x200000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_92;
  }
LABEL_91:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 140));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x200000000) == 0)
  {
LABEL_42:
    if ((v4 & 0x1000000000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_93;
  }
LABEL_92:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 144));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x1000000000000) == 0)
  {
LABEL_43:
    if ((v4 & 0x80000000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_94;
  }
LABEL_93:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x80000000000) == 0)
  {
LABEL_44:
    if ((v4 & 0x40000000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_95;
  }
LABEL_94:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x40000000000) == 0)
  {
LABEL_45:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_96;
  }
LABEL_95:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_46:
    if ((v4 & 0x20000000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_97;
  }
LABEL_96:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 128));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x20000000000) == 0)
  {
LABEL_47:
    if ((v4 & 0x10000000000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_98;
  }
LABEL_97:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 176));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x10000000000) == 0)
  {
LABEL_48:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_99;
  }
LABEL_98:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 172));
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x100000) == 0)
  {
LABEL_49:
    if ((v4 & 0x800000000000) == 0) {
      goto LABEL_50;
    }
LABEL_100:
    uint64_t result = PB::Writer::write(this);
    if ((*(void *)(v3 + 188) & 0x2000000000000) == 0) {
      return result;
    }
    goto LABEL_101;
  }
LABEL_99:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x800000000000) != 0) {
    goto LABEL_100;
  }
LABEL_50:
  if ((v4 & 0x2000000000000) == 0) {
    return result;
  }
LABEL_101:

  return PB::Writer::write(this);
}

uint64_t sub_227C79A90(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC28608;
  *(_DWORD *)(result + 128) = 0;
  return result;
}

void sub_227C79AB8(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C79AF0(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC28608;
  *(_DWORD *)(result + 128) = 0;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 4) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 24);
    int v3 = 4;
    *(_DWORD *)(result + 128) = 4;
    *(void *)(result + 24) = v4;
    int v2 = *(_DWORD *)(a2 + 128);
    if ((v2 & 0x100000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 0x100000) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 100);
    v3 |= 0x100000u;
    *(_DWORD *)(result + 128) = v3;
    *(_DWORD *)(result + 100) = v5;
    int v2 = *(_DWORD *)(a2 + 128);
  }
LABEL_6:
  if ((v2 & 0x80) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 48);
    v3 |= 0x80u;
    *(_DWORD *)(result + 128) = v3;
    *(_DWORD *)(result + 48) = v6;
    int v2 = *(_DWORD *)(a2 + 128);
    if ((v2 & 0x80000) == 0)
    {
LABEL_8:
      if ((v2 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_39;
    }
  }
  else if ((v2 & 0x80000) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 96);
  v3 |= 0x80000u;
  *(_DWORD *)(result + 128) = v3;
  *(_DWORD *)(result + 96) = v7;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x40) == 0)
  {
LABEL_9:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_40;
  }
LABEL_39:
  int v8 = *(_DWORD *)(a2 + 44);
  v3 |= 0x40u;
  *(_DWORD *)(result + 128) = v3;
  *(_DWORD *)(result + 44) = v8;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x4000) == 0)
  {
LABEL_10:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_41;
  }
LABEL_40:
  int v9 = *(_DWORD *)(a2 + 76);
  v3 |= 0x4000u;
  *(_DWORD *)(result + 128) = v3;
  *(_DWORD *)(result + 76) = v9;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x2000) == 0)
  {
LABEL_11:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_42;
  }
LABEL_41:
  int v10 = *(_DWORD *)(a2 + 72);
  v3 |= 0x2000u;
  *(_DWORD *)(result + 128) = v3;
  *(_DWORD *)(result + 72) = v10;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x1000) == 0)
  {
LABEL_12:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_43;
  }
LABEL_42:
  int v11 = *(_DWORD *)(a2 + 68);
  v3 |= 0x1000u;
  *(_DWORD *)(result + 128) = v3;
  *(_DWORD *)(result + 68) = v11;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x800000) == 0)
  {
LABEL_13:
    if ((v2 & 0x20000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_44;
  }
LABEL_43:
  int v12 = *(_DWORD *)(a2 + 112);
  v3 |= 0x800000u;
  *(_DWORD *)(result + 128) = v3;
  *(_DWORD *)(result + 112) = v12;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x20000000) == 0)
  {
LABEL_14:
    if ((v2 & 0x2000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_45;
  }
LABEL_44:
  char v13 = *(unsigned char *)(a2 + 124);
  v3 |= 0x20000000u;
  *(_DWORD *)(result + 128) = v3;
  *(unsigned char *)(result + 124) = v13;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x2000000) == 0)
  {
LABEL_15:
    if ((v2 & 0x400) == 0) {
      goto LABEL_16;
    }
    goto LABEL_46;
  }
LABEL_45:
  char v14 = *(unsigned char *)(a2 + 120);
  v3 |= 0x2000000u;
  *(_DWORD *)(result + 128) = v3;
  *(unsigned char *)(result + 120) = v14;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x400) == 0)
  {
LABEL_16:
    if ((v2 & 0x10000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_47;
  }
LABEL_46:
  int v15 = *(_DWORD *)(a2 + 60);
  v3 |= 0x400u;
  *(_DWORD *)(result + 128) = v3;
  *(_DWORD *)(result + 60) = v15;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_17:
    if ((v2 & 0x40000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_48;
  }
LABEL_47:
  char v16 = *(unsigned char *)(a2 + 123);
  v3 |= 0x10000000u;
  *(_DWORD *)(result + 128) = v3;
  *(unsigned char *)(result + 123) = v16;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x40000000) == 0)
  {
LABEL_18:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_49;
  }
LABEL_48:
  char v17 = *(unsigned char *)(a2 + 125);
  v3 |= 0x40000000u;
  *(_DWORD *)(result + 128) = v3;
  *(unsigned char *)(result + 125) = v17;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x40000) == 0)
  {
LABEL_19:
    if ((v2 & 0x20) == 0) {
      goto LABEL_20;
    }
    goto LABEL_50;
  }
LABEL_49:
  int v18 = *(_DWORD *)(a2 + 92);
  v3 |= 0x40000u;
  *(_DWORD *)(result + 128) = v3;
  *(_DWORD *)(result + 92) = v18;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x20) == 0)
  {
LABEL_20:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_51;
  }
LABEL_50:
  int v19 = *(_DWORD *)(a2 + 40);
  v3 |= 0x20u;
  *(_DWORD *)(result + 128) = v3;
  *(_DWORD *)(result + 40) = v19;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x20000) == 0)
  {
LABEL_21:
    if ((v2 & 0x10) == 0) {
      goto LABEL_22;
    }
    goto LABEL_52;
  }
LABEL_51:
  int v20 = *(_DWORD *)(a2 + 88);
  v3 |= 0x20000u;
  *(_DWORD *)(result + 128) = v3;
  *(_DWORD *)(result + 88) = v20;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x10) == 0)
  {
LABEL_22:
    if ((v2 & 0x100) == 0) {
      goto LABEL_23;
    }
    goto LABEL_53;
  }
LABEL_52:
  int v21 = *(_DWORD *)(a2 + 36);
  v3 |= 0x10u;
  *(_DWORD *)(result + 128) = v3;
  *(_DWORD *)(result + 36) = v21;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x100) == 0)
  {
LABEL_23:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_54;
  }
LABEL_53:
  int v22 = *(_DWORD *)(a2 + 52);
  v3 |= 0x100u;
  *(_DWORD *)(result + 128) = v3;
  *(_DWORD *)(result + 52) = v22;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x400000) == 0)
  {
LABEL_24:
    if ((v2 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_55;
  }
LABEL_54:
  int v23 = *(_DWORD *)(a2 + 108);
  v3 |= 0x400000u;
  *(_DWORD *)(result + 128) = v3;
  *(_DWORD *)(result + 108) = v23;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x80000000) == 0)
  {
LABEL_25:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_56;
  }
LABEL_55:
  char v24 = *(unsigned char *)(a2 + 126);
  v3 |= 0x80000000;
  *(_DWORD *)(result + 128) = v3;
  *(unsigned char *)(result + 126) = v24;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x10000) == 0)
  {
LABEL_26:
    if ((v2 & 8) == 0) {
      goto LABEL_27;
    }
    goto LABEL_57;
  }
LABEL_56:
  int v25 = *(_DWORD *)(a2 + 84);
  v3 |= 0x10000u;
  *(_DWORD *)(result + 128) = v3;
  *(_DWORD *)(result + 84) = v25;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 8) == 0)
  {
LABEL_27:
    if ((v2 & 0x200) == 0) {
      goto LABEL_28;
    }
    goto LABEL_58;
  }
LABEL_57:
  int v26 = *(_DWORD *)(a2 + 32);
  v3 |= 8u;
  *(_DWORD *)(result + 128) = v3;
  *(_DWORD *)(result + 32) = v26;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x200) == 0)
  {
LABEL_28:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_59;
  }
LABEL_58:
  int v27 = *(_DWORD *)(a2 + 56);
  v3 |= 0x200u;
  *(_DWORD *)(result + 128) = v3;
  *(_DWORD *)(result + 56) = v27;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x200000) == 0)
  {
LABEL_29:
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_60;
  }
LABEL_59:
  int v28 = *(_DWORD *)(a2 + 104);
  v3 |= 0x200000u;
  *(_DWORD *)(result + 128) = v3;
  *(_DWORD *)(result + 104) = v28;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_30:
    if ((v2 & 0x800) == 0) {
      goto LABEL_31;
    }
    goto LABEL_61;
  }
LABEL_60:
  char v29 = *(unsigned char *)(a2 + 121);
  v3 |= 0x4000000u;
  *(_DWORD *)(result + 128) = v3;
  *(unsigned char *)(result + 121) = v29;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x800) == 0)
  {
LABEL_31:
    if ((v2 & 1) == 0) {
      goto LABEL_32;
    }
    goto LABEL_62;
  }
LABEL_61:
  int v30 = *(_DWORD *)(a2 + 64);
  v3 |= 0x800u;
  *(_DWORD *)(result + 128) = v3;
  *(_DWORD *)(result + 64) = v30;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 1) == 0)
  {
LABEL_32:
    if ((v2 & 2) == 0) {
      goto LABEL_33;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t v31 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_DWORD *)(result + 128) = v3;
  *(void *)(result + 8) = v31;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 2) == 0)
  {
LABEL_33:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_64;
  }
LABEL_63:
  uint64_t v32 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_DWORD *)(result + 128) = v3;
  *(void *)(result + 16) = v32;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_34:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_65;
  }
LABEL_64:
  int v33 = *(_DWORD *)(a2 + 116);
  v3 |= 0x1000000u;
  *(_DWORD *)(result + 128) = v3;
  *(_DWORD *)(result + 116) = v33;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x8000) == 0)
  {
LABEL_35:
    if ((v2 & 0x8000000) == 0) {
      return result;
    }
LABEL_66:
    char v35 = *(unsigned char *)(a2 + 122);
    *(_DWORD *)(result + 128) = v3 | 0x8000000;
    *(unsigned char *)(result + 122) = v35;
    return result;
  }
LABEL_65:
  int v34 = *(_DWORD *)(a2 + 80);
  v3 |= 0x8000u;
  *(_DWORD *)(result + 128) = v3;
  *(_DWORD *)(result + 80) = v34;
  if ((*(_DWORD *)(a2 + 128) & 0x8000000) != 0) {
    goto LABEL_66;
  }
  return result;
}

uint64_t sub_227C79E9C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 8) != 0)
  {
    PB::TextFormatter::format(this, "auxAvgOmegaAroundGrav2s", *(float *)(a1 + 32));
    int v5 = *(_DWORD *)(a1 + 128);
    if ((v5 & 0x10) == 0)
    {
LABEL_3:
      if ((v5 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_39;
    }
  }
  else if ((v5 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "auxAvgOmegaAroundGravLong", *(float *)(a1 + 36));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x20) == 0)
  {
LABEL_4:
    if ((v5 & 0x40) == 0) {
      goto LABEL_5;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "auxAvgOmegaAroundGravShort", *(float *)(a1 + 40));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x40) == 0)
  {
LABEL_5:
    if ((v5 & 0x80) == 0) {
      goto LABEL_6;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "auxAvgOmegaLong", *(float *)(a1 + 44));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x80) == 0)
  {
LABEL_6:
    if ((v5 & 0x100) == 0) {
      goto LABEL_7;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "auxAvgOmegaShort", *(float *)(a1 + 48));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x100) == 0)
  {
LABEL_7:
    if ((v5 & 0x200) == 0) {
      goto LABEL_8;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "auxHistoricalOmegaStdMax", *(float *)(a1 + 52));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x200) == 0)
  {
LABEL_8:
    if ((v5 & 0x400) == 0) {
      goto LABEL_9;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "auxOverSrcYawDiffSum", *(float *)(a1 + 56));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x400) == 0)
  {
LABEL_9:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "dotRotGrav", *(float *)(a1 + 60));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_10:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_46;
  }
LABEL_45:
  PB::TextFormatter::format(this, "hasUnCorrelatedSrcMotion");
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_11:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_47;
  }
LABEL_46:
  PB::TextFormatter::format(this, "inHeadTurnState");
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_12:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(this, "inLikelySlowBodyTurnPed");
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_13:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(this, "isInCorrelatedActivity");
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x20000000) == 0)
  {
LABEL_14:
    if ((v5 & 1) == 0) {
      goto LABEL_15;
    }
    goto LABEL_50;
  }
LABEL_49:
  PB::TextFormatter::format(this, "isInCorrelatedMotion");
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 1) == 0)
  {
LABEL_15:
    if ((v5 & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_51;
  }
LABEL_50:
  PB::TextFormatter::format(this, "lastHeadTurnStartTime", *(double *)(a1 + 8));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 2) == 0)
  {
LABEL_16:
    if ((v5 & 0x800) == 0) {
      goto LABEL_17;
    }
    goto LABEL_52;
  }
LABEL_51:
  PB::TextFormatter::format(this, "lastHeadTurnStopTime", *(double *)(a1 + 16));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x800) == 0)
  {
LABEL_17:
    if ((v5 & 0x40000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_53;
  }
LABEL_52:
  PB::TextFormatter::format(this, "lastHeadTurnYawRadians", *(float *)(a1 + 64));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x40000000) == 0)
  {
LABEL_18:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(this, "likelyOnGymMachine");
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x1000) == 0)
  {
LABEL_19:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(this, "relOmegaMeanLong", *(float *)(a1 + 68));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x2000) == 0)
  {
LABEL_20:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_56;
  }
LABEL_55:
  PB::TextFormatter::format(this, "relOmegaVarLong", *(float *)(a1 + 72));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x4000) == 0)
  {
LABEL_21:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_57;
  }
LABEL_56:
  PB::TextFormatter::format(this, "relOmegaVarShort", *(float *)(a1 + 76));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x8000) == 0)
  {
LABEL_22:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_58;
  }
LABEL_57:
  PB::TextFormatter::format(this, "srcAccumulatedYaw4s", *(float *)(a1 + 80));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x10000) == 0)
  {
LABEL_23:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_59;
  }
LABEL_58:
  PB::TextFormatter::format(this, "srcAvgOmegaAroundGrav2s", *(float *)(a1 + 84));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x20000) == 0)
  {
LABEL_24:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_60;
  }
LABEL_59:
  PB::TextFormatter::format(this, "srcAvgOmegaAroundGravLong", *(float *)(a1 + 88));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x40000) == 0)
  {
LABEL_25:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_61;
  }
LABEL_60:
  PB::TextFormatter::format(this, "srcAvgOmegaAroundGravShort", *(float *)(a1 + 92));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x80000) == 0)
  {
LABEL_26:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_62;
  }
LABEL_61:
  PB::TextFormatter::format(this, "srcAvgOmegaLong", *(float *)(a1 + 96));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x100000) == 0)
  {
LABEL_27:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_63;
  }
LABEL_62:
  PB::TextFormatter::format(this, "srcAvgOmegaShort", *(float *)(a1 + 100));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x200000) == 0)
  {
LABEL_28:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_64;
  }
LABEL_63:
  PB::TextFormatter::format(this, "srcAvgYawBufferSum", *(float *)(a1 + 104));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x400000) == 0)
  {
LABEL_29:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_65;
  }
LABEL_64:
  PB::TextFormatter::format(this, "srcHistoricalOmegaStdMax", *(float *)(a1 + 108));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x800000) == 0)
  {
LABEL_30:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_66;
  }
LABEL_65:
  PB::TextFormatter::format(this, "srcRotationAxisAlignment", *(float *)(a1 + 112));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_31:
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_67;
  }
LABEL_66:
  PB::TextFormatter::format(this, "srcYawBufferLongStd", *(float *)(a1 + 116));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x80000000) == 0)
  {
LABEL_32:
    if ((v5 & 4) == 0) {
      goto LABEL_34;
    }
    goto LABEL_33;
  }
LABEL_67:
  PB::TextFormatter::format(this, "steadyStatePedestrian");
  if ((*(_DWORD *)(a1 + 128) & 4) != 0) {
LABEL_33:
  }
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 24));
LABEL_34:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C7A2E0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(_DWORD *)(a1 + 128) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
          goto LABEL_102;
        case 2u:
          *(_DWORD *)(a1 + 128) |= 0x100000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_129;
        case 3u:
          *(_DWORD *)(a1 + 128) |= 0x80u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_129;
        case 4u:
          *(_DWORD *)(a1 + 128) |= 0x80000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_129;
        case 5u:
          *(_DWORD *)(a1 + 128) |= 0x40u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_129;
        case 6u:
          *(_DWORD *)(a1 + 128) |= 0x4000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_129;
        case 7u:
          *(_DWORD *)(a1 + 128) |= 0x2000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_129;
        case 8u:
          *(_DWORD *)(a1 + 128) |= 0x1000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(_DWORD *)(a1 + 68) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_129;
        case 9u:
          *(_DWORD *)(a1 + 128) |= 0x800000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(_DWORD *)(a1 + 112) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_129;
        case 0xAu:
          *(_DWORD *)(a1 + 128) |= 0x20000000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 >= *((void *)this + 2))
          {
            BOOL v22 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            int v21 = *(unsigned __int8 *)(*(void *)this + v2++);
            *((void *)this + 1) = v2;
            BOOL v22 = v21 != 0;
          }
          *(unsigned char *)(a1 + 124) = v22;
          break;
        case 0xBu:
          *(_DWORD *)(a1 + 128) |= 0x2000000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 >= *((void *)this + 2))
          {
            BOOL v24 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            int v23 = *(unsigned __int8 *)(*(void *)this + v2++);
            *((void *)this + 1) = v2;
            BOOL v24 = v23 != 0;
          }
          *(unsigned char *)(a1 + 120) = v24;
          break;
        case 0xCu:
          *(_DWORD *)(a1 + 128) |= 0x400u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_129;
        case 0xDu:
          *(_DWORD *)(a1 + 128) |= 0x10000000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 >= *((void *)this + 2))
          {
            BOOL v26 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            int v25 = *(unsigned __int8 *)(*(void *)this + v2++);
            *((void *)this + 1) = v2;
            BOOL v26 = v25 != 0;
          }
          *(unsigned char *)(a1 + 123) = v26;
          break;
        case 0xEu:
          *(_DWORD *)(a1 + 128) |= 0x40000000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 >= *((void *)this + 2))
          {
            BOOL v28 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            int v27 = *(unsigned __int8 *)(*(void *)this + v2++);
            *((void *)this + 1) = v2;
            BOOL v28 = v27 != 0;
          }
          *(unsigned char *)(a1 + 125) = v28;
          break;
        case 0xFu:
          *(_DWORD *)(a1 + 128) |= 0x40000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_129;
        case 0x10u:
          *(_DWORD *)(a1 + 128) |= 0x20u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_129;
        case 0x11u:
          *(_DWORD *)(a1 + 128) |= 0x20000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_129;
        case 0x12u:
          *(_DWORD *)(a1 + 128) |= 0x10u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_129;
        case 0x13u:
          *(_DWORD *)(a1 + 128) |= 0x100u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_129;
        case 0x14u:
          *(_DWORD *)(a1 + 128) |= 0x400000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(_DWORD *)(a1 + 108) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_129;
        case 0x15u:
          *(_DWORD *)(a1 + 128) |= 0x80000000;
          unint64_t v2 = *((void *)this + 1);
          if (v2 >= *((void *)this + 2))
          {
            BOOL v30 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            int v29 = *(unsigned __int8 *)(*(void *)this + v2++);
            *((void *)this + 1) = v2;
            BOOL v30 = v29 != 0;
          }
          *(unsigned char *)(a1 + 126) = v30;
          break;
        case 0x16u:
          *(_DWORD *)(a1 + 128) |= 0x10000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_129;
        case 0x17u:
          *(_DWORD *)(a1 + 128) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_129;
        case 0x18u:
          *(_DWORD *)(a1 + 128) |= 0x200u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_129;
        case 0x19u:
          *(_DWORD *)(a1 + 128) |= 0x200000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(_DWORD *)(a1 + 104) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_129;
        case 0x1Au:
          *(_DWORD *)(a1 + 128) |= 0x4000000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 >= *((void *)this + 2))
          {
            BOOL v32 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            int v31 = *(unsigned __int8 *)(*(void *)this + v2++);
            *((void *)this + 1) = v2;
            BOOL v32 = v31 != 0;
          }
          *(unsigned char *)(a1 + 121) = v32;
          break;
        case 0x1Bu:
          *(_DWORD *)(a1 + 128) |= 0x800u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_129;
        case 0x1Cu:
          *(_DWORD *)(a1 + 128) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          goto LABEL_102;
        case 0x1Du:
          *(_DWORD *)(a1 + 128) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
LABEL_102:
          unint64_t v2 = *((void *)this + 1) + 8;
          goto LABEL_130;
        case 0x1Eu:
          *(_DWORD *)(a1 + 128) |= 0x1000000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(_DWORD *)(a1 + 116) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_129;
        case 0x1Fu:
          *(_DWORD *)(a1 + 128) |= 0x8000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2))
          {
LABEL_113:
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v2);
LABEL_129:
            unint64_t v2 = *((void *)this + 1) + 4;
LABEL_130:
            *((void *)this + 1) = v2;
          }
          break;
        case 0x20u:
          *(_DWORD *)(a1 + 128) |= 0x8000000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 >= *((void *)this + 2))
          {
            BOOL v34 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            int v33 = *(unsigned __int8 *)(*(void *)this + v2++);
            *((void *)this + 1) = v2;
            BOOL v34 = v33 != 0;
          }
          *(unsigned char *)(a1 + 122) = v34;
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C7AC58(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 128);
  if ((v4 & 4) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 24));
    int v4 = *(_DWORD *)(v3 + 128);
    if ((v4 & 0x100000) == 0)
    {
LABEL_3:
      if ((v4 & 0x80) == 0) {
        goto LABEL_4;
      }
      goto LABEL_36;
    }
  }
  else if ((v4 & 0x100000) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 100));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x80) == 0)
  {
LABEL_4:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x80000) == 0)
  {
LABEL_5:
    if ((v4 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 96));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x40) == 0)
  {
LABEL_6:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x4000) == 0)
  {
LABEL_7:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x2000) == 0)
  {
LABEL_8:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x1000) == 0)
  {
LABEL_9:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 68));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x800000) == 0)
  {
LABEL_10:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 112));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_11:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_12:
    if ((v4 & 0x400) == 0) {
      goto LABEL_13;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x400) == 0)
  {
LABEL_13:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 60));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_14:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x40000000) == 0)
  {
LABEL_15:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x40000) == 0)
  {
LABEL_16:
    if ((v4 & 0x20) == 0) {
      goto LABEL_17;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 92));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x20) == 0)
  {
LABEL_17:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x20000) == 0)
  {
LABEL_18:
    if ((v4 & 0x10) == 0) {
      goto LABEL_19;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 88));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x10) == 0)
  {
LABEL_19:
    if ((v4 & 0x100) == 0) {
      goto LABEL_20;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x100) == 0)
  {
LABEL_20:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x400000) == 0)
  {
LABEL_21:
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 108));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x80000000) == 0)
  {
LABEL_22:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x10000) == 0)
  {
LABEL_23:
    if ((v4 & 8) == 0) {
      goto LABEL_24;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 8) == 0)
  {
LABEL_24:
    if ((v4 & 0x200) == 0) {
      goto LABEL_25;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x200) == 0)
  {
LABEL_25:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x200000) == 0)
  {
LABEL_26:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 104));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_27:
    if ((v4 & 0x800) == 0) {
      goto LABEL_28;
    }
    goto LABEL_60;
  }
LABEL_59:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x800) == 0)
  {
LABEL_28:
    if ((v4 & 1) == 0) {
      goto LABEL_29;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 1) == 0)
  {
LABEL_29:
    if ((v4 & 2) == 0) {
      goto LABEL_30;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 2) == 0)
  {
LABEL_30:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_31:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_32;
    }
LABEL_64:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80));
    if ((*(_DWORD *)(v3 + 128) & 0x8000000) == 0) {
      return result;
    }
    goto LABEL_65;
  }
LABEL_63:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 116));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x8000) != 0) {
    goto LABEL_64;
  }
LABEL_32:
  if ((v4 & 0x8000000) == 0) {
    return result;
  }
LABEL_65:

  return PB::Writer::write(this);
}

double sub_227C7B010(uint64_t a1)
{
  *(void *)a1 = &unk_26DC28640;
  *(_DWORD *)(a1 + 164) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return result;
}

void sub_227C7B044(PB::Base *this)
{
  *(void *)this = &unk_26DC28640;
  unint64_t v2 = (void *)*((void *)this + 4);
  if (v2)
  {
    *((void *)this + 5) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 2) = v3;
    operator delete(v3);
  }

  PB::Base::~Base(this);
}

void sub_227C7B0B8(PB::Base *a1)
{
  sub_227C7B044(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C7B0F0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC28640;
  *(_OWORD *)(a1 + 8) = 0u;
  int v4 = (char *)(a1 + 8);
  *(_DWORD *)(a1 + 164) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  int v5 = *(_DWORD *)(a2 + 164);
  if ((v5 & 2) != 0)
  {
    uint64_t v7 = *(void *)(a2 + 64);
    int v6 = 2;
    *(_DWORD *)(a1 + 164) = 2;
    *(void *)(a1 + 64) = v7;
    int v5 = *(_DWORD *)(a2 + 164);
    if ((v5 & 0x800) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v6 = 0;
  if ((v5 & 0x800) != 0)
  {
LABEL_5:
    int v8 = *(_DWORD *)(a2 + 108);
    v6 |= 0x800u;
    *(_DWORD *)(a1 + 164) = v6;
    *(_DWORD *)(a1 + 108) = v8;
    int v5 = *(_DWORD *)(a2 + 164);
  }
LABEL_6:
  if ((v5 & 0x1000) != 0)
  {
    int v13 = *(_DWORD *)(a2 + 112);
    v6 |= 0x1000u;
    *(_DWORD *)(a1 + 164) = v6;
    *(_DWORD *)(a1 + 112) = v13;
    int v5 = *(_DWORD *)(a2 + 164);
    if ((v5 & 0x2000) == 0)
    {
LABEL_8:
      if ((v5 & 0x4000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_43;
    }
  }
  else if ((v5 & 0x2000) == 0)
  {
    goto LABEL_8;
  }
  int v14 = *(_DWORD *)(a2 + 116);
  v6 |= 0x2000u;
  *(_DWORD *)(a1 + 164) = v6;
  *(_DWORD *)(a1 + 116) = v14;
  int v5 = *(_DWORD *)(a2 + 164);
  if ((v5 & 0x4000) == 0)
  {
LABEL_9:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_44;
  }
LABEL_43:
  int v15 = *(_DWORD *)(a2 + 120);
  v6 |= 0x4000u;
  *(_DWORD *)(a1 + 164) = v6;
  *(_DWORD *)(a1 + 120) = v15;
  int v5 = *(_DWORD *)(a2 + 164);
  if ((v5 & 0x8000) == 0)
  {
LABEL_10:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_45;
  }
LABEL_44:
  int v16 = *(_DWORD *)(a2 + 124);
  v6 |= 0x8000u;
  *(_DWORD *)(a1 + 164) = v6;
  *(_DWORD *)(a1 + 124) = v16;
  int v5 = *(_DWORD *)(a2 + 164);
  if ((v5 & 0x10000) == 0)
  {
LABEL_11:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_46;
  }
LABEL_45:
  int v17 = *(_DWORD *)(a2 + 128);
  v6 |= 0x10000u;
  *(_DWORD *)(a1 + 164) = v6;
  *(_DWORD *)(a1 + 128) = v17;
  int v5 = *(_DWORD *)(a2 + 164);
  if ((v5 & 0x80000) == 0)
  {
LABEL_12:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_47;
  }
LABEL_46:
  int v18 = *(_DWORD *)(a2 + 140);
  v6 |= 0x80000u;
  *(_DWORD *)(a1 + 164) = v6;
  *(_DWORD *)(a1 + 140) = v18;
  int v5 = *(_DWORD *)(a2 + 164);
  if ((v5 & 0x100000) == 0)
  {
LABEL_13:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_48;
  }
LABEL_47:
  int v19 = *(_DWORD *)(a2 + 144);
  v6 |= 0x100000u;
  *(_DWORD *)(a1 + 164) = v6;
  *(_DWORD *)(a1 + 144) = v19;
  int v5 = *(_DWORD *)(a2 + 164);
  if ((v5 & 0x200000) == 0)
  {
LABEL_14:
    if ((v5 & 0x100) == 0) {
      goto LABEL_15;
    }
    goto LABEL_49;
  }
LABEL_48:
  int v20 = *(_DWORD *)(a2 + 148);
  v6 |= 0x200000u;
  *(_DWORD *)(a1 + 164) = v6;
  *(_DWORD *)(a1 + 148) = v20;
  int v5 = *(_DWORD *)(a2 + 164);
  if ((v5 & 0x100) == 0)
  {
LABEL_15:
    if ((v5 & 0x200) == 0) {
      goto LABEL_16;
    }
    goto LABEL_50;
  }
LABEL_49:
  int v21 = *(_DWORD *)(a2 + 96);
  v6 |= 0x100u;
  *(_DWORD *)(a1 + 164) = v6;
  *(_DWORD *)(a1 + 96) = v21;
  int v5 = *(_DWORD *)(a2 + 164);
  if ((v5 & 0x200) == 0)
  {
LABEL_16:
    if ((v5 & 0x400) == 0) {
      goto LABEL_17;
    }
    goto LABEL_51;
  }
LABEL_50:
  int v22 = *(_DWORD *)(a2 + 100);
  v6 |= 0x200u;
  *(_DWORD *)(a1 + 164) = v6;
  *(_DWORD *)(a1 + 100) = v22;
  int v5 = *(_DWORD *)(a2 + 164);
  if ((v5 & 0x400) == 0)
  {
LABEL_17:
    if ((v5 & 0x80) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
LABEL_51:
  int v23 = *(_DWORD *)(a2 + 104);
  v6 |= 0x400u;
  *(_DWORD *)(a1 + 164) = v6;
  *(_DWORD *)(a1 + 104) = v23;
  if ((*(_DWORD *)(a2 + 164) & 0x80) != 0)
  {
LABEL_18:
    int v9 = *(_DWORD *)(a2 + 92);
    *(_DWORD *)(a1 + 164) = v6 | 0x80;
    *(_DWORD *)(a1 + 92) = v9;
  }
LABEL_19:
  if (a1 != a2)
  {
    sub_227B8BA68((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
    sub_227B8BA68(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  int v10 = *(_DWORD *)(a2 + 164);
  if ((v10 & 0x8000000) != 0)
  {
    char v24 = *(unsigned char *)(a2 + 157);
    *(_DWORD *)(a1 + 164) |= 0x8000000u;
    *(unsigned char *)(a1 + 157) = v24;
    int v10 = *(_DWORD *)(a2 + 164);
    if ((v10 & 0x400000) == 0)
    {
LABEL_23:
      if ((v10 & 0x1000000) == 0) {
        goto LABEL_24;
      }
      goto LABEL_55;
    }
  }
  else if ((v10 & 0x400000) == 0)
  {
    goto LABEL_23;
  }
  char v25 = *(unsigned char *)(a2 + 152);
  *(_DWORD *)(a1 + 164) |= 0x400000u;
  *(unsigned char *)(a1 + 152) = v25;
  int v10 = *(_DWORD *)(a2 + 164);
  if ((v10 & 0x1000000) == 0)
  {
LABEL_24:
    if ((v10 & 0x10) == 0) {
      goto LABEL_25;
    }
    goto LABEL_56;
  }
LABEL_55:
  char v26 = *(unsigned char *)(a2 + 154);
  *(_DWORD *)(a1 + 164) |= 0x1000000u;
  *(unsigned char *)(a1 + 154) = v26;
  int v10 = *(_DWORD *)(a2 + 164);
  if ((v10 & 0x10) == 0)
  {
LABEL_25:
    if ((v10 & 8) == 0) {
      goto LABEL_26;
    }
    goto LABEL_57;
  }
LABEL_56:
  int v27 = *(_DWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 164) |= 0x10u;
  *(_DWORD *)(a1 + 80) = v27;
  int v10 = *(_DWORD *)(a2 + 164);
  if ((v10 & 8) == 0)
  {
LABEL_26:
    if ((v10 & 4) == 0) {
      goto LABEL_27;
    }
    goto LABEL_58;
  }
LABEL_57:
  int v28 = *(_DWORD *)(a2 + 76);
  *(_DWORD *)(a1 + 164) |= 8u;
  *(_DWORD *)(a1 + 76) = v28;
  int v10 = *(_DWORD *)(a2 + 164);
  if ((v10 & 4) == 0)
  {
LABEL_27:
    if ((v10 & 0x20000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_59;
  }
LABEL_58:
  int v29 = *(_DWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 164) |= 4u;
  *(_DWORD *)(a1 + 72) = v29;
  int v10 = *(_DWORD *)(a2 + 164);
  if ((v10 & 0x20000000) == 0)
  {
LABEL_28:
    if ((v10 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_60;
  }
LABEL_59:
  char v30 = *(unsigned char *)(a2 + 159);
  *(_DWORD *)(a1 + 164) |= 0x20000000u;
  *(unsigned char *)(a1 + 159) = v30;
  int v10 = *(_DWORD *)(a2 + 164);
  if ((v10 & 0x80000000) == 0)
  {
LABEL_29:
    if ((v10 & 0x800000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_61;
  }
LABEL_60:
  char v31 = *(unsigned char *)(a2 + 161);
  *(_DWORD *)(a1 + 164) |= 0x80000000;
  *(unsigned char *)(a1 + 161) = v31;
  int v10 = *(_DWORD *)(a2 + 164);
  if ((v10 & 0x800000) == 0)
  {
LABEL_30:
    if ((v10 & 0x20) == 0) {
      goto LABEL_31;
    }
    goto LABEL_62;
  }
LABEL_61:
  char v32 = *(unsigned char *)(a2 + 153);
  *(_DWORD *)(a1 + 164) |= 0x800000u;
  *(unsigned char *)(a1 + 153) = v32;
  int v10 = *(_DWORD *)(a2 + 164);
  if ((v10 & 0x20) == 0)
  {
LABEL_31:
    if ((v10 & 0x40000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_63;
  }
LABEL_62:
  int v33 = *(_DWORD *)(a2 + 84);
  *(_DWORD *)(a1 + 164) |= 0x20u;
  *(_DWORD *)(a1 + 84) = v33;
  int v10 = *(_DWORD *)(a2 + 164);
  if ((v10 & 0x40000) == 0)
  {
LABEL_32:
    if ((v10 & 0x10000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_64;
  }
LABEL_63:
  int v34 = *(_DWORD *)(a2 + 136);
  *(_DWORD *)(a1 + 164) |= 0x40000u;
  *(_DWORD *)(a1 + 136) = v34;
  int v10 = *(_DWORD *)(a2 + 164);
  if ((v10 & 0x10000000) == 0)
  {
LABEL_33:
    if ((v10 & 0x4000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_65;
  }
LABEL_64:
  char v35 = *(unsigned char *)(a2 + 158);
  *(_DWORD *)(a1 + 164) |= 0x10000000u;
  *(unsigned char *)(a1 + 158) = v35;
  int v10 = *(_DWORD *)(a2 + 164);
  if ((v10 & 0x4000000) == 0)
  {
LABEL_34:
    if ((v10 & 0x40000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_66;
  }
LABEL_65:
  char v36 = *(unsigned char *)(a2 + 156);
  *(_DWORD *)(a1 + 164) |= 0x4000000u;
  *(unsigned char *)(a1 + 156) = v36;
  int v10 = *(_DWORD *)(a2 + 164);
  if ((v10 & 0x40000000) == 0)
  {
LABEL_35:
    if ((v10 & 1) == 0) {
      goto LABEL_36;
    }
    goto LABEL_67;
  }
LABEL_66:
  char v37 = *(unsigned char *)(a2 + 160);
  *(_DWORD *)(a1 + 164) |= 0x40000000u;
  *(unsigned char *)(a1 + 160) = v37;
  int v10 = *(_DWORD *)(a2 + 164);
  if ((v10 & 1) == 0)
  {
LABEL_36:
    if ((v10 & 0x40) == 0) {
      goto LABEL_37;
    }
    goto LABEL_68;
  }
LABEL_67:
  uint64_t v38 = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 164) |= 1u;
  *(void *)(a1 + 56) = v38;
  int v10 = *(_DWORD *)(a2 + 164);
  if ((v10 & 0x40) == 0)
  {
LABEL_37:
    if ((v10 & 0x2000000) == 0) {
      goto LABEL_38;
    }
LABEL_69:
    char v40 = *(unsigned char *)(a2 + 155);
    *(_DWORD *)(a1 + 164) |= 0x2000000u;
    *(unsigned char *)(a1 + 155) = v40;
    if ((*(_DWORD *)(a2 + 164) & 0x20000) == 0) {
      return a1;
    }
    goto LABEL_39;
  }
LABEL_68:
  int v39 = *(_DWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 164) |= 0x40u;
  *(_DWORD *)(a1 + 88) = v39;
  int v10 = *(_DWORD *)(a2 + 164);
  if ((v10 & 0x2000000) != 0) {
    goto LABEL_69;
  }
LABEL_38:
  if ((v10 & 0x20000) != 0)
  {
LABEL_39:
    int v11 = *(_DWORD *)(a2 + 132);
    *(_DWORD *)(a1 + 164) |= 0x20000u;
    *(_DWORD *)(a1 + 132) = v11;
  }
  return a1;
}

uint64_t sub_227C7B558(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 164);
  if ((v5 & 0x400000) != 0)
  {
    PB::TextFormatter::format(this, "btz");
    int v5 = *(_DWORD *)(a1 + 164);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 0x800000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_45;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "btzDisturbanceDuration", *(float *)(a1 + 72));
  int v5 = *(_DWORD *)(a1 + 164);
  if ((v5 & 0x800000) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_46;
  }
LABEL_45:
  PB::TextFormatter::format(this, "btzIsCurrentlyQuiescent");
  int v5 = *(_DWORD *)(a1 + 164);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_47;
  }
LABEL_46:
  PB::TextFormatter::format(this, "btzQuiescentDurationLoose", *(float *)(a1 + 76));
  int v5 = *(_DWORD *)(a1 + 164);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(this, "btzQuiescentDurationStrict", *(float *)(a1 + 80));
  int v5 = *(_DWORD *)(a1 + 164);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(this, "btzStaticPoseDuration", *(float *)(a1 + 84));
  int v5 = *(_DWORD *)(a1 + 164);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_8:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_50;
  }
LABEL_49:
  PB::TextFormatter::format(this, "centeredBoresight");
  int v5 = *(_DWORD *)(a1 + 164);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_9:
    if ((v5 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_51;
  }
LABEL_50:
  PB::TextFormatter::format(this, "centeredBoresightInHighDynamics");
  int v5 = *(_DWORD *)(a1 + 164);
  if ((v5 & 0x40) == 0)
  {
LABEL_10:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_51:
  PB::TextFormatter::format(this, "clientMode");
  if ((*(_DWORD *)(a1 + 164) & 0x4000000) != 0) {
LABEL_11:
  }
    PB::TextFormatter::format(this, "inComplexTransitionState");
LABEL_12:
  int v6 = *(float **)(a1 + 8);
  uint64_t v7 = *(float **)(a1 + 16);
  while (v6 != v7)
  {
    float v8 = *v6++;
    PB::TextFormatter::format(this, "noiseVariance", v8);
  }
  int v9 = *(_DWORD *)(a1 + 164);
  if ((v9 & 0x8000000) != 0)
  {
    PB::TextFormatter::format(this, "pinnedBoresight");
    int v9 = *(_DWORD *)(a1 + 164);
    if ((v9 & 0x80) == 0)
    {
LABEL_16:
      if ((v9 & 0x100) == 0) {
        goto LABEL_17;
      }
      goto LABEL_55;
    }
  }
  else if ((v9 & 0x80) == 0)
  {
    goto LABEL_16;
  }
  PB::TextFormatter::format(this, "qHat_W", *(float *)(a1 + 92));
  int v9 = *(_DWORD *)(a1 + 164);
  if ((v9 & 0x100) == 0)
  {
LABEL_17:
    if ((v9 & 0x200) == 0) {
      goto LABEL_18;
    }
    goto LABEL_56;
  }
LABEL_55:
  PB::TextFormatter::format(this, "qHat_X", *(float *)(a1 + 96));
  int v9 = *(_DWORD *)(a1 + 164);
  if ((v9 & 0x200) == 0)
  {
LABEL_18:
    if ((v9 & 0x400) == 0) {
      goto LABEL_19;
    }
    goto LABEL_57;
  }
LABEL_56:
  PB::TextFormatter::format(this, "qHat_Y", *(float *)(a1 + 100));
  int v9 = *(_DWORD *)(a1 + 164);
  if ((v9 & 0x400) == 0)
  {
LABEL_19:
    if ((v9 & 0x800) == 0) {
      goto LABEL_20;
    }
    goto LABEL_58;
  }
LABEL_57:
  PB::TextFormatter::format(this, "qHat_Z", *(float *)(a1 + 104));
  int v9 = *(_DWORD *)(a1 + 164);
  if ((v9 & 0x800) == 0)
  {
LABEL_20:
    if ((v9 & 0x1000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_59;
  }
LABEL_58:
  PB::TextFormatter::format(this, "rBoresight_X", *(float *)(a1 + 108));
  int v9 = *(_DWORD *)(a1 + 164);
  if ((v9 & 0x1000) == 0)
  {
LABEL_21:
    if ((v9 & 0x2000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_60;
  }
LABEL_59:
  PB::TextFormatter::format(this, "rBoresight_Y", *(float *)(a1 + 112));
  int v9 = *(_DWORD *)(a1 + 164);
  if ((v9 & 0x2000) == 0)
  {
LABEL_22:
    if ((v9 & 0x4000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_61;
  }
LABEL_60:
  PB::TextFormatter::format(this, "rBoresight_Z", *(float *)(a1 + 116));
  int v9 = *(_DWORD *)(a1 + 164);
  if ((v9 & 0x4000) == 0)
  {
LABEL_23:
    if ((v9 & 0x8000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_62;
  }
LABEL_61:
  PB::TextFormatter::format(this, "rHat_X", *(float *)(a1 + 120));
  int v9 = *(_DWORD *)(a1 + 164);
  if ((v9 & 0x8000) == 0)
  {
LABEL_24:
    if ((v9 & 0x10000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_63;
  }
LABEL_62:
  PB::TextFormatter::format(this, "rHat_Y", *(float *)(a1 + 124));
  int v9 = *(_DWORD *)(a1 + 164);
  if ((v9 & 0x10000) == 0)
  {
LABEL_25:
    if ((v9 & 0x10000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_64;
  }
LABEL_63:
  PB::TextFormatter::format(this, "rHat_Z", *(float *)(a1 + 128));
  int v9 = *(_DWORD *)(a1 + 164);
  if ((v9 & 0x10000000) == 0)
  {
LABEL_26:
    if ((v9 & 1) == 0) {
      goto LABEL_28;
    }
    goto LABEL_27;
  }
LABEL_64:
  PB::TextFormatter::format(this, "requestingCamera");
  if (*(_DWORD *)(a1 + 164)) {
LABEL_27:
  }
    PB::TextFormatter::format(this, "srcTimestamp", *(double *)(a1 + 56));
LABEL_28:
  int v10 = *(float **)(a1 + 32);
  int v11 = *(float **)(a1 + 40);
  while (v10 != v11)
  {
    float v12 = *v10++;
    PB::TextFormatter::format(this, "stateVariance", v12);
  }
  int v13 = *(_DWORD *)(a1 + 164);
  if ((v13 & 2) != 0)
  {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 64));
    int v13 = *(_DWORD *)(a1 + 164);
    if ((v13 & 0x20000000) == 0)
    {
LABEL_32:
      if ((v13 & 0x20000) == 0) {
        goto LABEL_33;
      }
      goto LABEL_68;
    }
  }
  else if ((v13 & 0x20000000) == 0)
  {
    goto LABEL_32;
  }
  PB::TextFormatter::format(this, "tracking1IMU");
  int v13 = *(_DWORD *)(a1 + 164);
  if ((v13 & 0x20000) == 0)
  {
LABEL_33:
    if ((v13 & 0x40000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_69;
  }
LABEL_68:
  PB::TextFormatter::format(this, "trackingBehavior");
  int v13 = *(_DWORD *)(a1 + 164);
  if ((v13 & 0x40000000) == 0)
  {
LABEL_34:
    if ((v13 & 0x40000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_70;
  }
LABEL_69:
  PB::TextFormatter::format(this, "trackingDisabled");
  int v13 = *(_DWORD *)(a1 + 164);
  if ((v13 & 0x40000) == 0)
  {
LABEL_35:
    if ((v13 & 0x80000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_71;
  }
LABEL_70:
  PB::TextFormatter::format(this, "trackingScheme");
  int v13 = *(_DWORD *)(a1 + 164);
  if ((v13 & 0x80000000) == 0)
  {
LABEL_36:
    if ((v13 & 0x80000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_72;
  }
LABEL_71:
  PB::TextFormatter::format(this, "useRelaxedQuiescenceBounds");
  int v13 = *(_DWORD *)(a1 + 164);
  if ((v13 & 0x80000) == 0)
  {
LABEL_37:
    if ((v13 & 0x100000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_73;
  }
LABEL_72:
  PB::TextFormatter::format(this, "vHat_X", *(float *)(a1 + 140));
  int v13 = *(_DWORD *)(a1 + 164);
  if ((v13 & 0x100000) == 0)
  {
LABEL_38:
    if ((v13 & 0x200000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_39;
  }
LABEL_73:
  PB::TextFormatter::format(this, "vHat_Y", *(float *)(a1 + 144));
  if ((*(_DWORD *)(a1 + 164) & 0x200000) != 0) {
LABEL_39:
  }
    PB::TextFormatter::format(this, "vHat_Z", *(float *)(a1 + 148));
LABEL_40:

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227C7BA04(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    float v8 = (void **)(a1 + 8);
    uint64_t v9 = a1 + 24;
    int v10 = (void **)(a1 + 32);
    uint64_t v11 = a1 + 48;
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        BOOL v18 = v14++ > 8;
        if (v18) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v24 = v15 & 7;
      if (v24 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v15 >> 3))
      {
        case 1u:
          *(_DWORD *)(a1 + 164) |= 2u;
          unint64_t v25 = *((void *)this + 1);
          if (v25 > 0xFFFFFFFFFFFFFFF7 || v25 + 8 > *((void *)this + 2)) {
            goto LABEL_263;
          }
          *(void *)(a1 + 64) = *(void *)(*(void *)this + v25);
          goto LABEL_153;
        case 2u:
          *(_DWORD *)(a1 + 164) |= 0x800u;
          unint64_t v26 = *((void *)this + 1);
          if (v26 > 0xFFFFFFFFFFFFFFFBLL || v26 + 4 > *((void *)this + 2)) {
            goto LABEL_263;
          }
          *(_DWORD *)(a1 + 108) = *(_DWORD *)(*(void *)this + v26);
          goto LABEL_265;
        case 3u:
          *(_DWORD *)(a1 + 164) |= 0x1000u;
          unint64_t v27 = *((void *)this + 1);
          if (v27 > 0xFFFFFFFFFFFFFFFBLL || v27 + 4 > *((void *)this + 2)) {
            goto LABEL_263;
          }
          *(_DWORD *)(a1 + 112) = *(_DWORD *)(*(void *)this + v27);
          goto LABEL_265;
        case 4u:
          *(_DWORD *)(a1 + 164) |= 0x2000u;
          unint64_t v28 = *((void *)this + 1);
          if (v28 > 0xFFFFFFFFFFFFFFFBLL || v28 + 4 > *((void *)this + 2)) {
            goto LABEL_263;
          }
          *(_DWORD *)(a1 + 116) = *(_DWORD *)(*(void *)this + v28);
          goto LABEL_265;
        case 5u:
          *(_DWORD *)(a1 + 164) |= 0x4000u;
          unint64_t v29 = *((void *)this + 1);
          if (v29 > 0xFFFFFFFFFFFFFFFBLL || v29 + 4 > *((void *)this + 2)) {
            goto LABEL_263;
          }
          *(_DWORD *)(a1 + 120) = *(_DWORD *)(*(void *)this + v29);
          goto LABEL_265;
        case 6u:
          *(_DWORD *)(a1 + 164) |= 0x8000u;
          unint64_t v30 = *((void *)this + 1);
          if (v30 > 0xFFFFFFFFFFFFFFFBLL || v30 + 4 > *((void *)this + 2)) {
            goto LABEL_263;
          }
          *(_DWORD *)(a1 + 124) = *(_DWORD *)(*(void *)this + v30);
          goto LABEL_265;
        case 7u:
          *(_DWORD *)(a1 + 164) |= 0x10000u;
          unint64_t v31 = *((void *)this + 1);
          if (v31 > 0xFFFFFFFFFFFFFFFBLL || v31 + 4 > *((void *)this + 2)) {
            goto LABEL_263;
          }
          *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v31);
          goto LABEL_265;
        case 8u:
          *(_DWORD *)(a1 + 164) |= 0x80000u;
          unint64_t v32 = *((void *)this + 1);
          if (v32 > 0xFFFFFFFFFFFFFFFBLL || v32 + 4 > *((void *)this + 2)) {
            goto LABEL_263;
          }
          *(_DWORD *)(a1 + 140) = *(_DWORD *)(*(void *)this + v32);
          goto LABEL_265;
        case 9u:
          *(_DWORD *)(a1 + 164) |= 0x100000u;
          unint64_t v33 = *((void *)this + 1);
          if (v33 > 0xFFFFFFFFFFFFFFFBLL || v33 + 4 > *((void *)this + 2)) {
            goto LABEL_263;
          }
          *(_DWORD *)(a1 + 144) = *(_DWORD *)(*(void *)this + v33);
          goto LABEL_265;
        case 0xAu:
          *(_DWORD *)(a1 + 164) |= 0x200000u;
          unint64_t v34 = *((void *)this + 1);
          if (v34 > 0xFFFFFFFFFFFFFFFBLL || v34 + 4 > *((void *)this + 2)) {
            goto LABEL_263;
          }
          *(_DWORD *)(a1 + 148) = *(_DWORD *)(*(void *)this + v34);
          goto LABEL_265;
        case 0xBu:
          *(_DWORD *)(a1 + 164) |= 0x100u;
          unint64_t v35 = *((void *)this + 1);
          if (v35 > 0xFFFFFFFFFFFFFFFBLL || v35 + 4 > *((void *)this + 2)) {
            goto LABEL_263;
          }
          *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v35);
          goto LABEL_265;
        case 0xCu:
          *(_DWORD *)(a1 + 164) |= 0x200u;
          unint64_t v36 = *((void *)this + 1);
          if (v36 > 0xFFFFFFFFFFFFFFFBLL || v36 + 4 > *((void *)this + 2)) {
            goto LABEL_263;
          }
          *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v36);
          goto LABEL_265;
        case 0xDu:
          *(_DWORD *)(a1 + 164) |= 0x400u;
          unint64_t v37 = *((void *)this + 1);
          if (v37 > 0xFFFFFFFFFFFFFFFBLL || v37 + 4 > *((void *)this + 2)) {
            goto LABEL_263;
          }
          *(_DWORD *)(a1 + 104) = *(_DWORD *)(*(void *)this + v37);
          goto LABEL_265;
        case 0xEu:
          *(_DWORD *)(a1 + 164) |= 0x80u;
          unint64_t v38 = *((void *)this + 1);
          if (v38 > 0xFFFFFFFFFFFFFFFBLL || v38 + 4 > *((void *)this + 2)) {
            goto LABEL_263;
          }
          *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v38);
          goto LABEL_265;
        case 0xFu:
          if (v24 != 2)
          {
            uint64_t v138 = *(char **)(a1 + 40);
            unint64_t v137 = *(void *)(a1 + 48);
            if ((unint64_t)v138 >= v137)
            {
              unint64_t v154 = (char *)*v10;
              uint64_t v155 = (v138 - (unsigned char *)*v10) >> 2;
              unint64_t v156 = v155 + 1;
              if ((unint64_t)(v155 + 1) >> 62) {
LABEL_277:
              }
                sub_227B8B89C();
              uint64_t v157 = v137 - (void)v154;
              if (v157 >> 1 > v156) {
                unint64_t v156 = v157 >> 1;
              }
              if ((unint64_t)v157 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v158 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v158 = v156;
              }
              if (v158)
              {
                unint64_t v159 = (char *)sub_227B8BBB8(v11, v158);
                unint64_t v154 = *(char **)(a1 + 32);
                uint64_t v138 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v159 = 0;
              }
              unint64_t v166 = &v159[4 * v155];
              *(_DWORD *)unint64_t v166 = 0;
              uint64_t v139 = v166 + 4;
              while (v138 != v154)
              {
                int v167 = *((_DWORD *)v138 - 1);
                v138 -= 4;
                *((_DWORD *)v166 - 1) = v167;
                v166 -= 4;
              }
              *(void *)(a1 + 32) = v166;
              *(void *)(a1 + 40) = v139;
              *(void *)(a1 + 48) = &v159[4 * v158];
              if (v154) {
                operator delete(v154);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v138 = 0;
              uint64_t v139 = v138 + 4;
            }
            *(void *)(a1 + 40) = v139;
            goto LABEL_261;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v39 = *((void *)this + 1);
          unint64_t v40 = *((void *)this + 2);
          while (v39 < v40 && !*((unsigned char *)this + 24))
          {
            unint64_t v42 = *(char **)(a1 + 40);
            unint64_t v41 = *(void *)(a1 + 48);
            if ((unint64_t)v42 >= v41)
            {
              unint64_t v44 = (char *)*v10;
              uint64_t v45 = (v42 - (unsigned char *)*v10) >> 2;
              unint64_t v46 = v45 + 1;
              if ((unint64_t)(v45 + 1) >> 62) {
                goto LABEL_277;
              }
              uint64_t v47 = v41 - (void)v44;
              if (v47 >> 1 > v46) {
                unint64_t v46 = v47 >> 1;
              }
              if ((unint64_t)v47 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v48 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v48 = v46;
              }
              if (v48)
              {
                unint64_t v49 = (char *)sub_227B8BBB8(v11, v48);
                unint64_t v44 = *(char **)(a1 + 32);
                unint64_t v42 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v49 = 0;
              }
              unint64_t v50 = &v49[4 * v45];
              *(_DWORD *)unint64_t v50 = 0;
              unint64_t v43 = v50 + 4;
              while (v42 != v44)
              {
                int v51 = *((_DWORD *)v42 - 1);
                v42 -= 4;
                *((_DWORD *)v50 - 1) = v51;
                v50 -= 4;
              }
              *(void *)(a1 + 32) = v50;
              *(void *)(a1 + 40) = v43;
              *(void *)(a1 + 48) = &v49[4 * v48];
              if (v44) {
                operator delete(v44);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v42 = 0;
              unint64_t v43 = v42 + 4;
            }
            *(void *)(a1 + 40) = v43;
            unint64_t v52 = *((void *)this + 1);
            if (v52 > 0xFFFFFFFFFFFFFFFBLL || v52 + 4 > *((void *)this + 2)) {
              goto LABEL_217;
            }
            *(v43 - 1) = *(_DWORD *)(*(void *)this + v52);
            unint64_t v40 = *((void *)this + 2);
            unint64_t v39 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v39;
          }
          goto LABEL_218;
        case 0x10u:
          if (v24 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v53 = *((void *)this + 1);
            unint64_t v54 = *((void *)this + 2);
            while (v53 < v54 && !*((unsigned char *)this + 24))
            {
              unint64_t v56 = *(char **)(a1 + 16);
              unint64_t v55 = *(void *)(a1 + 24);
              if ((unint64_t)v56 >= v55)
              {
                BOOL v58 = (char *)*v8;
                uint64_t v59 = (v56 - (unsigned char *)*v8) >> 2;
                unint64_t v60 = v59 + 1;
                if ((unint64_t)(v59 + 1) >> 62) {
                  goto LABEL_278;
                }
                uint64_t v61 = v55 - (void)v58;
                if (v61 >> 1 > v60) {
                  unint64_t v60 = v61 >> 1;
                }
                if ((unint64_t)v61 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v62 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v62 = v60;
                }
                if (v62)
                {
                  int v63 = (char *)sub_227B8BBB8(v9, v62);
                  BOOL v58 = *(char **)(a1 + 8);
                  unint64_t v56 = *(char **)(a1 + 16);
                }
                else
                {
                  int v63 = 0;
                }
                BOOL v64 = &v63[4 * v59];
                *(_DWORD *)BOOL v64 = 0;
                int v57 = v64 + 4;
                while (v56 != v58)
                {
                  int v65 = *((_DWORD *)v56 - 1);
                  v56 -= 4;
                  *((_DWORD *)v64 - 1) = v65;
                  v64 -= 4;
                }
                *(void *)(a1 + 8) = v64;
                *(void *)(a1 + 16) = v57;
                *(void *)(a1 + 24) = &v63[4 * v62];
                if (v58) {
                  operator delete(v58);
                }
              }
              else
              {
                *(_DWORD *)unint64_t v56 = 0;
                int v57 = v56 + 4;
              }
              *(void *)(a1 + 16) = v57;
              unint64_t v66 = *((void *)this + 1);
              if (v66 > 0xFFFFFFFFFFFFFFFBLL || v66 + 4 > *((void *)this + 2))
              {
LABEL_217:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v57 - 1) = *(_DWORD *)(*(void *)this + v66);
              unint64_t v54 = *((void *)this + 2);
              unint64_t v53 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v53;
            }
LABEL_218:
            PB::Reader::recallMark();
          }
          else
          {
            uint64_t v141 = *(char **)(a1 + 16);
            unint64_t v140 = *(void *)(a1 + 24);
            if ((unint64_t)v141 >= v140)
            {
              char v160 = (char *)*v8;
              uint64_t v161 = (v141 - (unsigned char *)*v8) >> 2;
              unint64_t v162 = v161 + 1;
              if ((unint64_t)(v161 + 1) >> 62) {
LABEL_278:
              }
                sub_227B8B89C();
              uint64_t v163 = v140 - (void)v160;
              if (v163 >> 1 > v162) {
                unint64_t v162 = v163 >> 1;
              }
              if ((unint64_t)v163 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v164 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v164 = v162;
              }
              if (v164)
              {
                unint64_t v165 = (char *)sub_227B8BBB8(v9, v164);
                char v160 = *(char **)(a1 + 8);
                uint64_t v141 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v165 = 0;
              }
              unint64_t v168 = &v165[4 * v161];
              *(_DWORD *)unint64_t v168 = 0;
              uint64_t v139 = v168 + 4;
              while (v141 != v160)
              {
                int v169 = *((_DWORD *)v141 - 1);
                v141 -= 4;
                *((_DWORD *)v168 - 1) = v169;
                v168 -= 4;
              }
              *(void *)(a1 + 8) = v168;
              *(void *)(a1 + 16) = v139;
              *(void *)(a1 + 24) = &v165[4 * v164];
              if (v160) {
                operator delete(v160);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v141 = 0;
              uint64_t v139 = v141 + 4;
            }
            *(void *)(a1 + 16) = v139;
LABEL_261:
            unint64_t v170 = *((void *)this + 1);
            if (v170 <= 0xFFFFFFFFFFFFFFFBLL && v170 + 4 <= *((void *)this + 2))
            {
              *(v139 - 1) = *(_DWORD *)(*(void *)this + v170);
LABEL_265:
              uint64_t v116 = *((void *)this + 1) + 4;
LABEL_266:
              *((void *)this + 1) = v116;
            }
            else
            {
LABEL_263:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_267:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        case 0x11u:
          *(_DWORD *)(a1 + 164) |= 0x8000000u;
          unint64_t v67 = *((void *)this + 1);
          if (v67 >= *((void *)this + 2))
          {
            BOOL v70 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v68 = v67 + 1;
            int v69 = *(unsigned __int8 *)(*(void *)this + v67);
            *((void *)this + 1) = v68;
            BOOL v70 = v69 != 0;
          }
          *(unsigned char *)(a1 + 157) = v70;
          goto LABEL_267;
        case 0x12u:
          *(_DWORD *)(a1 + 164) |= 0x400000u;
          unint64_t v71 = *((void *)this + 1);
          if (v71 >= *((void *)this + 2))
          {
            BOOL v74 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v72 = v71 + 1;
            int v73 = *(unsigned __int8 *)(*(void *)this + v71);
            *((void *)this + 1) = v72;
            BOOL v74 = v73 != 0;
          }
          *(unsigned char *)(a1 + 152) = v74;
          goto LABEL_267;
        case 0x13u:
          *(_DWORD *)(a1 + 164) |= 0x1000000u;
          unint64_t v75 = *((void *)this + 1);
          if (v75 >= *((void *)this + 2))
          {
            BOOL v78 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v76 = v75 + 1;
            int v77 = *(unsigned __int8 *)(*(void *)this + v75);
            *((void *)this + 1) = v76;
            BOOL v78 = v77 != 0;
          }
          *(unsigned char *)(a1 + 154) = v78;
          goto LABEL_267;
        case 0x14u:
          *(_DWORD *)(a1 + 164) |= 0x10u;
          unint64_t v79 = *((void *)this + 1);
          if (v79 > 0xFFFFFFFFFFFFFFFBLL || v79 + 4 > *((void *)this + 2)) {
            goto LABEL_263;
          }
          *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v79);
          goto LABEL_265;
        case 0x15u:
          *(_DWORD *)(a1 + 164) |= 8u;
          unint64_t v80 = *((void *)this + 1);
          if (v80 > 0xFFFFFFFFFFFFFFFBLL || v80 + 4 > *((void *)this + 2)) {
            goto LABEL_263;
          }
          *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v80);
          goto LABEL_265;
        case 0x16u:
          *(_DWORD *)(a1 + 164) |= 4u;
          unint64_t v81 = *((void *)this + 1);
          if (v81 > 0xFFFFFFFFFFFFFFFBLL || v81 + 4 > *((void *)this + 2)) {
            goto LABEL_263;
          }
          *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v81);
          goto LABEL_265;
        case 0x17u:
          *(_DWORD *)(a1 + 164) |= 0x20000000u;
          unint64_t v82 = *((void *)this + 1);
          if (v82 >= *((void *)this + 2))
          {
            BOOL v85 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v83 = v82 + 1;
            int v84 = *(unsigned __int8 *)(*(void *)this + v82);
            *((void *)this + 1) = v83;
            BOOL v85 = v84 != 0;
          }
          *(unsigned char *)(a1 + 159) = v85;
          goto LABEL_267;
        case 0x18u:
          *(_DWORD *)(a1 + 164) |= 0x80000000;
          unint64_t v86 = *((void *)this + 1);
          if (v86 >= *((void *)this + 2))
          {
            BOOL v89 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v87 = v86 + 1;
            int v88 = *(unsigned __int8 *)(*(void *)this + v86);
            *((void *)this + 1) = v87;
            BOOL v89 = v88 != 0;
          }
          *(unsigned char *)(a1 + 161) = v89;
          goto LABEL_267;
        case 0x19u:
          *(_DWORD *)(a1 + 164) |= 0x800000u;
          unint64_t v90 = *((void *)this + 1);
          if (v90 >= *((void *)this + 2))
          {
            BOOL v93 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v91 = v90 + 1;
            int v92 = *(unsigned __int8 *)(*(void *)this + v90);
            *((void *)this + 1) = v91;
            BOOL v93 = v92 != 0;
          }
          *(unsigned char *)(a1 + 153) = v93;
          goto LABEL_267;
        case 0x1Au:
          *(_DWORD *)(a1 + 164) |= 0x20u;
          unint64_t v94 = *((void *)this + 1);
          if (v94 > 0xFFFFFFFFFFFFFFFBLL || v94 + 4 > *((void *)this + 2)) {
            goto LABEL_263;
          }
          *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v94);
          goto LABEL_265;
        case 0x1Bu:
          *(_DWORD *)(a1 + 164) |= 0x40000u;
          unint64_t v95 = *((void *)this + 1);
          unint64_t v96 = *((void *)this + 2);
          uint64_t v97 = *(void *)this;
          if (v95 <= 0xFFFFFFFFFFFFFFF5 && v95 + 10 <= v96)
          {
            char v98 = 0;
            unsigned int v99 = 0;
            uint64_t v100 = 0;
            do
            {
              unint64_t v101 = v95 + 1;
              *((void *)this + 1) = v95 + 1;
              char v102 = *(unsigned char *)(v97 + v95);
              v100 |= (unint64_t)(v102 & 0x7F) << v98;
              if ((v102 & 0x80) == 0) {
                goto LABEL_240;
              }
              v98 += 7;
              unint64_t v95 = v101;
              BOOL v18 = v99++ > 8;
            }
            while (!v18);
LABEL_194:
            LODWORD(v100) = 0;
            goto LABEL_240;
          }
          char v142 = 0;
          unsigned int v143 = 0;
          uint64_t v100 = 0;
          if (v96 <= v95) {
            unint64_t v96 = *((void *)this + 1);
          }
          while (2)
          {
            if (v96 == v95)
            {
              LODWORD(v100) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v144 = v95 + 1;
              char v145 = *(unsigned char *)(v97 + v95);
              *((void *)this + 1) = v144;
              v100 |= (unint64_t)(v145 & 0x7F) << v142;
              if (v145 < 0)
              {
                v142 += 7;
                unint64_t v95 = v144;
                BOOL v18 = v143++ > 8;
                if (v18) {
                  goto LABEL_194;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v100) = 0;
              }
            }
            break;
          }
LABEL_240:
          *(_DWORD *)(a1 + 136) = v100;
          goto LABEL_267;
        case 0x1Cu:
          *(_DWORD *)(a1 + 164) |= 0x10000000u;
          unint64_t v103 = *((void *)this + 1);
          if (v103 >= *((void *)this + 2))
          {
            BOOL v106 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v104 = v103 + 1;
            int v105 = *(unsigned __int8 *)(*(void *)this + v103);
            *((void *)this + 1) = v104;
            BOOL v106 = v105 != 0;
          }
          *(unsigned char *)(a1 + 158) = v106;
          goto LABEL_267;
        case 0x1Du:
          *(_DWORD *)(a1 + 164) |= 0x4000000u;
          unint64_t v107 = *((void *)this + 1);
          if (v107 >= *((void *)this + 2))
          {
            BOOL v110 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v108 = v107 + 1;
            int v109 = *(unsigned __int8 *)(*(void *)this + v107);
            *((void *)this + 1) = v108;
            BOOL v110 = v109 != 0;
          }
          *(unsigned char *)(a1 + 156) = v110;
          goto LABEL_267;
        case 0x1Eu:
          *(_DWORD *)(a1 + 164) |= 0x40000000u;
          unint64_t v111 = *((void *)this + 1);
          if (v111 >= *((void *)this + 2))
          {
            BOOL v114 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v112 = v111 + 1;
            int v113 = *(unsigned __int8 *)(*(void *)this + v111);
            *((void *)this + 1) = v112;
            BOOL v114 = v113 != 0;
          }
          *(unsigned char *)(a1 + 160) = v114;
          goto LABEL_267;
        case 0x1Fu:
          *(_DWORD *)(a1 + 164) |= 1u;
          unint64_t v115 = *((void *)this + 1);
          if (v115 > 0xFFFFFFFFFFFFFFF7 || v115 + 8 > *((void *)this + 2)) {
            goto LABEL_263;
          }
          *(void *)(a1 + 56) = *(void *)(*(void *)this + v115);
LABEL_153:
          uint64_t v116 = *((void *)this + 1) + 8;
          goto LABEL_266;
        case 0x20u:
          *(_DWORD *)(a1 + 164) |= 0x40u;
          unint64_t v117 = *((void *)this + 1);
          unint64_t v118 = *((void *)this + 2);
          uint64_t v119 = *(void *)this;
          if (v117 <= 0xFFFFFFFFFFFFFFF5 && v117 + 10 <= v118)
          {
            char v120 = 0;
            unsigned int v121 = 0;
            uint64_t v122 = 0;
            do
            {
              unint64_t v123 = v117 + 1;
              *((void *)this + 1) = v117 + 1;
              char v124 = *(unsigned char *)(v119 + v117);
              v122 |= (unint64_t)(v124 & 0x7F) << v120;
              if ((v124 & 0x80) == 0) {
                goto LABEL_243;
              }
              v120 += 7;
              unint64_t v117 = v123;
              BOOL v18 = v121++ > 8;
            }
            while (!v18);
LABEL_207:
            LODWORD(v122) = 0;
            goto LABEL_243;
          }
          char v146 = 0;
          unsigned int v147 = 0;
          uint64_t v122 = 0;
          if (v118 <= v117) {
            unint64_t v118 = *((void *)this + 1);
          }
          while (2)
          {
            if (v118 == v117)
            {
              LODWORD(v122) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v148 = v117 + 1;
              char v149 = *(unsigned char *)(v119 + v117);
              *((void *)this + 1) = v148;
              v122 |= (unint64_t)(v149 & 0x7F) << v146;
              if (v149 < 0)
              {
                v146 += 7;
                unint64_t v117 = v148;
                BOOL v18 = v147++ > 8;
                if (v18) {
                  goto LABEL_207;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v122) = 0;
              }
            }
            break;
          }
LABEL_243:
          *(_DWORD *)(a1 + 88) = v122;
          goto LABEL_267;
        case 0x21u:
          *(_DWORD *)(a1 + 164) |= 0x2000000u;
          unint64_t v125 = *((void *)this + 1);
          if (v125 >= *((void *)this + 2))
          {
            BOOL v128 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v126 = v125 + 1;
            int v127 = *(unsigned __int8 *)(*(void *)this + v125);
            *((void *)this + 1) = v126;
            BOOL v128 = v127 != 0;
          }
          *(unsigned char *)(a1 + 155) = v128;
          goto LABEL_267;
        case 0x22u:
          *(_DWORD *)(a1 + 164) |= 0x20000u;
          unint64_t v129 = *((void *)this + 1);
          unint64_t v130 = *((void *)this + 2);
          uint64_t v131 = *(void *)this;
          if (v129 <= 0xFFFFFFFFFFFFFFF5 && v129 + 10 <= v130)
          {
            char v132 = 0;
            unsigned int v133 = 0;
            uint64_t v134 = 0;
            do
            {
              unint64_t v135 = v129 + 1;
              *((void *)this + 1) = v129 + 1;
              char v136 = *(unsigned char *)(v131 + v129);
              v134 |= (unint64_t)(v136 & 0x7F) << v132;
              if ((v136 & 0x80) == 0) {
                goto LABEL_246;
              }
              v132 += 7;
              unint64_t v129 = v135;
              BOOL v18 = v133++ > 8;
            }
            while (!v18);
LABEL_216:
            LODWORD(v134) = 0;
            goto LABEL_246;
          }
          char v150 = 0;
          unsigned int v151 = 0;
          uint64_t v134 = 0;
          if (v130 <= v129) {
            unint64_t v130 = *((void *)this + 1);
          }
          while (2)
          {
            if (v130 == v129)
            {
              LODWORD(v134) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v152 = v129 + 1;
              char v153 = *(unsigned char *)(v131 + v129);
              *((void *)this + 1) = v152;
              v134 |= (unint64_t)(v153 & 0x7F) << v150;
              if (v153 < 0)
              {
                v150 += 7;
                unint64_t v129 = v152;
                BOOL v18 = v151++ > 8;
                if (v18) {
                  goto LABEL_216;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v134) = 0;
              }
            }
            break;
          }
LABEL_246:
          *(_DWORD *)(a1 + 132) = v134;
          goto LABEL_267;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_267;
      }
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v15 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v21 = v2 + 1;
      char v22 = *(unsigned char *)(v12 + v2);
      *((void *)this + 1) = v21;
      v15 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0) {
        goto LABEL_21;
      }
      v19 += 7;
      unint64_t v2 = v21;
      if (v20++ >= 9)
      {
LABEL_20:
        unint64_t v15 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C7C9A8(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 164);
  if ((v4 & 2) != 0)
  {
    double result = PB::Writer::write(this, *(double *)(result + 64));
    int v4 = *(_DWORD *)(v3 + 164);
    if ((v4 & 0x800) == 0)
    {
LABEL_3:
      if ((v4 & 0x1000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_43;
    }
  }
  else if ((v4 & 0x800) == 0)
  {
    goto LABEL_3;
  }
  double result = PB::Writer::write(this, *(float *)(v3 + 108));
  int v4 = *(_DWORD *)(v3 + 164);
  if ((v4 & 0x1000) == 0)
  {
LABEL_4:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_44;
  }
LABEL_43:
  double result = PB::Writer::write(this, *(float *)(v3 + 112));
  int v4 = *(_DWORD *)(v3 + 164);
  if ((v4 & 0x2000) == 0)
  {
LABEL_5:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_45;
  }
LABEL_44:
  double result = PB::Writer::write(this, *(float *)(v3 + 116));
  int v4 = *(_DWORD *)(v3 + 164);
  if ((v4 & 0x4000) == 0)
  {
LABEL_6:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_46;
  }
LABEL_45:
  double result = PB::Writer::write(this, *(float *)(v3 + 120));
  int v4 = *(_DWORD *)(v3 + 164);
  if ((v4 & 0x8000) == 0)
  {
LABEL_7:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_47;
  }
LABEL_46:
  double result = PB::Writer::write(this, *(float *)(v3 + 124));
  int v4 = *(_DWORD *)(v3 + 164);
  if ((v4 & 0x10000) == 0)
  {
LABEL_8:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_48;
  }
LABEL_47:
  double result = PB::Writer::write(this, *(float *)(v3 + 128));
  int v4 = *(_DWORD *)(v3 + 164);
  if ((v4 & 0x80000) == 0)
  {
LABEL_9:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_49;
  }
LABEL_48:
  double result = PB::Writer::write(this, *(float *)(v3 + 140));
  int v4 = *(_DWORD *)(v3 + 164);
  if ((v4 & 0x100000) == 0)
  {
LABEL_10:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_50;
  }
LABEL_49:
  double result = PB::Writer::write(this, *(float *)(v3 + 144));
  int v4 = *(_DWORD *)(v3 + 164);
  if ((v4 & 0x200000) == 0)
  {
LABEL_11:
    if ((v4 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_51;
  }
LABEL_50:
  double result = PB::Writer::write(this, *(float *)(v3 + 148));
  int v4 = *(_DWORD *)(v3 + 164);
  if ((v4 & 0x100) == 0)
  {
LABEL_12:
    if ((v4 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_52;
  }
LABEL_51:
  double result = PB::Writer::write(this, *(float *)(v3 + 96));
  int v4 = *(_DWORD *)(v3 + 164);
  if ((v4 & 0x200) == 0)
  {
LABEL_13:
    if ((v4 & 0x400) == 0) {
      goto LABEL_14;
    }
LABEL_53:
    double result = PB::Writer::write(this, *(float *)(v3 + 104));
    if ((*(_DWORD *)(v3 + 164) & 0x80) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_52:
  double result = PB::Writer::write(this, *(float *)(v3 + 100));
  int v4 = *(_DWORD *)(v3 + 164);
  if ((v4 & 0x400) != 0) {
    goto LABEL_53;
  }
LABEL_14:
  if ((v4 & 0x80) != 0) {
LABEL_15:
  }
    double result = PB::Writer::write(this, *(float *)(v3 + 92));
LABEL_16:
  int v5 = *(float **)(v3 + 32);
  int v6 = *(float **)(v3 + 40);
  while (v5 != v6)
  {
    float v7 = *v5++;
    double result = PB::Writer::write(this, v7);
  }
  float v8 = *(float **)(v3 + 8);
  uint64_t v9 = *(float **)(v3 + 16);
  while (v8 != v9)
  {
    float v10 = *v8++;
    double result = PB::Writer::write(this, v10);
  }
  int v11 = *(_DWORD *)(v3 + 164);
  if ((v11 & 0x8000000) != 0)
  {
    double result = PB::Writer::write(this);
    int v11 = *(_DWORD *)(v3 + 164);
    if ((v11 & 0x400000) == 0)
    {
LABEL_24:
      if ((v11 & 0x1000000) == 0) {
        goto LABEL_25;
      }
      goto LABEL_57;
    }
  }
  else if ((v11 & 0x400000) == 0)
  {
    goto LABEL_24;
  }
  double result = PB::Writer::write(this);
  int v11 = *(_DWORD *)(v3 + 164);
  if ((v11 & 0x1000000) == 0)
  {
LABEL_25:
    if ((v11 & 0x10) == 0) {
      goto LABEL_26;
    }
    goto LABEL_58;
  }
LABEL_57:
  double result = PB::Writer::write(this);
  int v11 = *(_DWORD *)(v3 + 164);
  if ((v11 & 0x10) == 0)
  {
LABEL_26:
    if ((v11 & 8) == 0) {
      goto LABEL_27;
    }
    goto LABEL_59;
  }
LABEL_58:
  double result = PB::Writer::write(this, *(float *)(v3 + 80));
  int v11 = *(_DWORD *)(v3 + 164);
  if ((v11 & 8) == 0)
  {
LABEL_27:
    if ((v11 & 4) == 0) {
      goto LABEL_28;
    }
    goto LABEL_60;
  }
LABEL_59:
  double result = PB::Writer::write(this, *(float *)(v3 + 76));
  int v11 = *(_DWORD *)(v3 + 164);
  if ((v11 & 4) == 0)
  {
LABEL_28:
    if ((v11 & 0x20000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_61;
  }
LABEL_60:
  double result = PB::Writer::write(this, *(float *)(v3 + 72));
  int v11 = *(_DWORD *)(v3 + 164);
  if ((v11 & 0x20000000) == 0)
  {
LABEL_29:
    if ((v11 & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_62;
  }
LABEL_61:
  double result = PB::Writer::write(this);
  int v11 = *(_DWORD *)(v3 + 164);
  if ((v11 & 0x80000000) == 0)
  {
LABEL_30:
    if ((v11 & 0x800000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_63;
  }
LABEL_62:
  double result = PB::Writer::write(this);
  int v11 = *(_DWORD *)(v3 + 164);
  if ((v11 & 0x800000) == 0)
  {
LABEL_31:
    if ((v11 & 0x20) == 0) {
      goto LABEL_32;
    }
    goto LABEL_64;
  }
LABEL_63:
  double result = PB::Writer::write(this);
  int v11 = *(_DWORD *)(v3 + 164);
  if ((v11 & 0x20) == 0)
  {
LABEL_32:
    if ((v11 & 0x40000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_65;
  }
LABEL_64:
  double result = PB::Writer::write(this, *(float *)(v3 + 84));
  int v11 = *(_DWORD *)(v3 + 164);
  if ((v11 & 0x40000) == 0)
  {
LABEL_33:
    if ((v11 & 0x10000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_66;
  }
LABEL_65:
  double result = PB::Writer::writeVarInt(this);
  int v11 = *(_DWORD *)(v3 + 164);
  if ((v11 & 0x10000000) == 0)
  {
LABEL_34:
    if ((v11 & 0x4000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_67;
  }
LABEL_66:
  double result = PB::Writer::write(this);
  int v11 = *(_DWORD *)(v3 + 164);
  if ((v11 & 0x4000000) == 0)
  {
LABEL_35:
    if ((v11 & 0x40000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_68;
  }
LABEL_67:
  double result = PB::Writer::write(this);
  int v11 = *(_DWORD *)(v3 + 164);
  if ((v11 & 0x40000000) == 0)
  {
LABEL_36:
    if ((v11 & 1) == 0) {
      goto LABEL_37;
    }
    goto LABEL_69;
  }
LABEL_68:
  double result = PB::Writer::write(this);
  int v11 = *(_DWORD *)(v3 + 164);
  if ((v11 & 1) == 0)
  {
LABEL_37:
    if ((v11 & 0x40) == 0) {
      goto LABEL_38;
    }
    goto LABEL_70;
  }
LABEL_69:
  double result = PB::Writer::write(this, *(double *)(v3 + 56));
  int v11 = *(_DWORD *)(v3 + 164);
  if ((v11 & 0x40) == 0)
  {
LABEL_38:
    if ((v11 & 0x2000000) == 0) {
      goto LABEL_39;
    }
LABEL_71:
    double result = PB::Writer::write(this);
    if ((*(_DWORD *)(v3 + 164) & 0x20000) == 0) {
      return result;
    }
    goto LABEL_72;
  }
LABEL_70:
  double result = PB::Writer::writeVarInt(this);
  int v11 = *(_DWORD *)(v3 + 164);
  if ((v11 & 0x2000000) != 0) {
    goto LABEL_71;
  }
LABEL_39:
  if ((v11 & 0x20000) == 0) {
    return result;
  }
LABEL_72:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227C7CDAC(uint64_t result)
{
  *(void *)double result = &unk_26DC28678;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

void sub_227C7CDD4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227C7CE0C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC28678;
  *(_DWORD *)(a1 + 48) = 0;
  __int16 v2 = *(_WORD *)(a2 + 48);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    __int16 v3 = 1;
    *(_WORD *)(a1 + 48) = 1;
    *(void *)(a1 + 8) = v4;
    __int16 v2 = *(_WORD *)(a2 + 48);
    if ((v2 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 0x20) != 0)
  {
LABEL_5:
    LODWORD(v4) = *(_DWORD *)(a2 + 32);
    v3 |= 0x20u;
    *(_WORD *)(a1 + 48) = v3;
    *(_DWORD *)(a1 + 32) = v4;
    __int16 v2 = *(_WORD *)(a2 + 48);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    LODWORD(v4) = *(_DWORD *)(a2 + 16);
    v3 |= 2u;
    *(_WORD *)(a1 + 48) = v3;
    *(_DWORD *)(a1 + 16) = v4;
    __int16 v2 = *(_WORD *)(a2 + 48);
    if ((v2 & 0x10) == 0)
    {
LABEL_8:
      if ((v2 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_16;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_8;
  }
  LODWORD(v4) = *(_DWORD *)(a2 + 28);
  v3 |= 0x10u;
  *(_WORD *)(a1 + 48) = v3;
  *(_DWORD *)(a1 + 28) = v4;
  __int16 v2 = *(_WORD *)(a2 + 48);
  if ((v2 & 0x40) == 0)
  {
LABEL_9:
    if ((v2 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_17;
  }
LABEL_16:
  LODWORD(v4) = *(_DWORD *)(a2 + 36);
  v3 |= 0x40u;
  *(_WORD *)(a1 + 48) = v3;
  *(_DWORD *)(a1 + 36) = v4;
  __int16 v2 = *(_WORD *)(a2 + 48);
  if ((v2 & 0x80) == 0)
  {
LABEL_10:
    if ((v2 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_18;
  }
LABEL_17:
  LODWORD(v4) = *(_DWORD *)(a2 + 40);
  v3 |= 0x80u;
  *(_WORD *)(a1 + 48) = v3;
  *(_DWORD *)(a1 + 40) = v4;
  __int16 v2 = *(_WORD *)(a2 + 48);
  if ((v2 & 0x100) == 0)
  {
LABEL_11:
    if ((v2 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_19;
  }
LABEL_18:
  char v5 = *(unsigned char *)(a2 + 44);
  v3 |= 0x100u;
  *(_WORD *)(a1 + 48) = v3;
  *(unsigned char *)(a1 + 44) = v5;
  __int16 v2 = *(_WORD *)(a2 + 48);
  if ((v2 & 8) == 0)
  {
LABEL_12:
    if ((v2 & 4) == 0) {
      return *(float *)&v4;
    }
    goto LABEL_20;
  }
LABEL_19:
  LODWORD(v4) = *(_DWORD *)(a2 + 24);
  v3 |= 8u;
  *(_WORD *)(a1 + 48) = v3;
  *(_DWORD *)(a1 + 24) = v4;
  if ((*(_WORD *)(a2 + 48) & 4) == 0) {
    return *(float *)&v4;
  }
LABEL_20:
  LODWORD(v4) = *(_DWORD *)(a2 + 20);
  *(_WORD *)(a1 + 48) = v3 | 4;
  *(_DWORD *)(a1 + 20) = v4;
  return *(float *)&v4;
}

uint64_t sub_227C7CF34(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 48);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "avgRotationMax", *(float *)(a1 + 16));
    __int16 v5 = *(_WORD *)(a1 + 48);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "historicalDisturbanceDuration", *(float *)(a1 + 20));
  __int16 v5 = *(_WORD *)(a1 + 48);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "historicalQuiescenceDuration", *(float *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 48);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  PB::TextFormatter::format(this, "instAccelMagDiff", *(float *)(a1 + 28));
  __int16 v5 = *(_WORD *)(a1 + 48);
  if ((v5 & 0x20) == 0)
  {
LABEL_6:
    if ((v5 & 0x100) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "instRotationMax", *(float *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 48);
  if ((v5 & 0x100) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "isAvgGrav");
  __int16 v5 = *(_WORD *)(a1 + 48);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "lpfAccelMagDiff", *(float *)(a1 + 36));
  __int16 v5 = *(_WORD *)(a1 + 48);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 1) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_21:
  PB::TextFormatter::format(this, "measNoiseVar", *(float *)(a1 + 40));
  if (*(_WORD *)(a1 + 48)) {
LABEL_10:
  }
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
LABEL_11:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C7D098(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(_WORD *)(a1 + 48) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_47;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          goto LABEL_54;
        case 2u:
          *(_WORD *)(a1 + 48) |= 0x20u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_47;
          }
          *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_53;
        case 3u:
          *(_WORD *)(a1 + 48) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_47;
          }
          *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_53;
        case 4u:
          *(_WORD *)(a1 + 48) |= 0x10u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_47;
          }
          *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_53;
        case 5u:
          *(_WORD *)(a1 + 48) |= 0x40u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_47;
          }
          *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_53;
        case 6u:
          *(_WORD *)(a1 + 48) |= 0x80u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_47;
          }
          *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_53;
        case 7u:
          *(_WORD *)(a1 + 48) |= 0x100u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 >= *((void *)this + 2))
          {
            BOOL v21 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            int v20 = *(unsigned __int8 *)(*(void *)this + v2++);
            *((void *)this + 1) = v2;
            BOOL v21 = v20 != 0;
          }
          *(unsigned char *)(a1 + 44) = v21;
          break;
        case 8u:
          *(_WORD *)(a1 + 48) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_47;
          }
          *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_53;
        case 9u:
          *(_WORD *)(a1 + 48) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
LABEL_53:
            unint64_t v2 = *((void *)this + 1) + 4;
LABEL_54:
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_47:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C7D450(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 48);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    __int16 v4 = *(_WORD *)(v3 + 48);
    if ((v4 & 0x20) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v4 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
  __int16 v4 = *(_WORD *)(v3 + 48);
  if ((v4 & 2) == 0)
  {
LABEL_4:
    if ((v4 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16));
  __int16 v4 = *(_WORD *)(v3 + 48);
  if ((v4 & 0x10) == 0)
  {
LABEL_5:
    if ((v4 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
  __int16 v4 = *(_WORD *)(v3 + 48);
  if ((v4 & 0x40) == 0)
  {
LABEL_6:
    if ((v4 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36));
  __int16 v4 = *(_WORD *)(v3 + 48);
  if ((v4 & 0x80) == 0)
  {
LABEL_7:
    if ((v4 & 0x100) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
  __int16 v4 = *(_WORD *)(v3 + 48);
  if ((v4 & 0x100) == 0)
  {
LABEL_8:
    if ((v4 & 8) == 0) {
      goto LABEL_9;
    }
LABEL_18:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
    if ((*(_WORD *)(v3 + 48) & 4) == 0) {
      return result;
    }
    goto LABEL_19;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 48);
  if ((v4 & 8) != 0) {
    goto LABEL_18;
  }
LABEL_9:
  if ((v4 & 4) == 0) {
    return result;
  }
LABEL_19:
  float v5 = *(float *)(v3 + 20);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227C7D584(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC286B0;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_227C7D5A8(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC286B0;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227C7D628(PB::Base *a1)
{
  sub_227C7D5A8(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C7D660(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC286B0;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 20) = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  if (*(unsigned char *)(a2 + 20))
  {
    char v2 = *(unsigned char *)(a2 + 16);
    *(unsigned char *)(result + 20) |= 1u;
    *(unsigned char *)(result + 16) = v2;
  }
  return result;
}

uint64_t sub_227C7D728(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "correction");
  }
  if (*(unsigned char *)(a1 + 20)) {
    PB::TextFormatter::format(this, "isAvgGrav");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C7D7C0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v20 = *((void *)this + 1);
        if (v20 >= *((void *)this + 2))
        {
          BOOL v23 = 0;
          *((unsigned char *)this + 24) = 1;
        }
        else
        {
          unint64_t v21 = v20 + 1;
          int v22 = *(unsigned __int8 *)(*(void *)this + v20);
          *((void *)this + 1) = v21;
          BOOL v23 = v22 != 0;
        }
        *(unsigned char *)(a1 + 16) = v23;
      }
      else
      {
        if ((v11 >> 3) == 1) {
          operator new();
        }
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C7DA0C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(const PB::Base **)(result + 8);
  if (v4) {
    uint64_t result = PB::Writer::writeSubmessage(this, v4);
  }
  if (*(unsigned char *)(v3 + 20))
  {
    return PB::Writer::write(this);
  }
  return result;
}

uint64_t sub_227C7DA74(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC286E8;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void sub_227C7DA9C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227C7DAD4(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC286E8;
  *(_DWORD *)(result + 24) = 0;
  char v2 = *(unsigned char *)(a2 + 24);
  if ((v2 & 2) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 12);
    char v3 = 2;
    *(unsigned char *)(result + 24) = 2;
    *(_DWORD *)(result + 12) = v4;
    char v2 = *(unsigned char *)(a2 + 24);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 24) & 8) != 0)
  {
LABEL_5:
    char v5 = *(unsigned char *)(a2 + 20);
    v3 |= 8u;
    *(unsigned char *)(result + 24) = v3;
    *(unsigned char *)(result + 20) = v5;
    char v2 = *(unsigned char *)(a2 + 24);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 16);
    v3 |= 4u;
    *(unsigned char *)(result + 24) = v3;
    *(_DWORD *)(result + 16) = v6;
    char v2 = *(unsigned char *)(a2 + 24);
    if ((v2 & 1) == 0)
    {
LABEL_8:
      if ((v2 & 0x10) == 0) {
        return result;
      }
LABEL_12:
      char v8 = *(unsigned char *)(a2 + 21);
      *(unsigned char *)(result + 24) = v3 | 0x10;
      *(unsigned char *)(result + 21) = v8;
      return result;
    }
  }
  else if ((v2 & 1) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 8);
  v3 |= 1u;
  *(unsigned char *)(result + 24) = v3;
  *(_DWORD *)(result + 8) = v7;
  if ((*(unsigned char *)(a2 + 24) & 0x10) != 0) {
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_227C7DB8C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 24);
  if ((v5 & 8) != 0)
  {
    PB::TextFormatter::format(this, "activeGnssSession");
    char v5 = *(unsigned char *)(a1 + 24);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 24) & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "currentModesOfOperation");
  char v5 = *(unsigned char *)(a1 + 24);
  if ((v5 & 2) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(this, "gnssModeOfOperation");
  char v5 = *(unsigned char *)(a1 + 24);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 4) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(this, "hasSubscribedRhythmicClient");
  if ((*(unsigned char *)(a1 + 24) & 4) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "rhythmicMode");
LABEL_7:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C7DC70(uint64_t a1, PB::Reader *this)
{
  unint64_t v3 = *((void *)this + 1);
  unint64_t v2 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v3 < v2 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v3 > 0xFFFFFFFFFFFFFFF5 || v3 + 10 > v2)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v3 > v2) {
          unint64_t v2 = v3;
        }
        while (v2 != v3)
        {
          unint64_t v17 = v3 + 1;
          char v18 = *(unsigned char *)(v8 + v3);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v3 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v3 + 1;
          *((void *)this + 1) = v3 + 1;
          char v13 = *(unsigned char *)(v8 + v3);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v3 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 24) |= 2u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v43 = 0;
                unsigned int v44 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v3 = *((void *)this + 1);
                }
                else {
                  unint64_t v3 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v3 == v20)
                  {
                    LODWORD(v24) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_81;
                  }
                  unint64_t v45 = v20++;
                  char v46 = *(unsigned char *)(v21 + v45);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v46 & 0x7F) << v43;
                  if ((v46 & 0x80) == 0) {
                    break;
                  }
                  v43 += 7;
                  BOOL v14 = v44++ > 8;
                  if (v14)
                  {
                    LODWORD(v24) = 0;
                    goto LABEL_80;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v24) = 0;
                }
LABEL_80:
                unint64_t v3 = v45 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v3 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_81;
                  }
                  v22 += 7;
                  unint64_t v20 = v3;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                LODWORD(v24) = 0;
              }
LABEL_81:
              *(_DWORD *)(a1 + 12) = v24;
              goto LABEL_92;
            case 2u:
              *(unsigned char *)(a1 + 24) |= 8u;
              unint64_t v3 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              if (v3 >= v2)
              {
                BOOL v28 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v27 = *(unsigned __int8 *)(*(void *)this + v3++);
                *((void *)this + 1) = v3;
                BOOL v28 = v27 != 0;
              }
              *(unsigned char *)(a1 + 20) = v28;
              goto LABEL_92;
            case 3u:
              *(unsigned char *)(a1 + 24) |= 4u;
              unint64_t v29 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v30 = *(void *)this;
              if (v29 > 0xFFFFFFFFFFFFFFF5 || v29 + 10 > v2)
              {
                char v47 = 0;
                unsigned int v48 = 0;
                uint64_t v33 = 0;
                if (v2 <= v29) {
                  unint64_t v3 = *((void *)this + 1);
                }
                else {
                  unint64_t v3 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v3 == v29)
                  {
                    LODWORD(v33) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_86;
                  }
                  unint64_t v49 = v29++;
                  char v50 = *(unsigned char *)(v30 + v49);
                  *((void *)this + 1) = v29;
                  v33 |= (unint64_t)(v50 & 0x7F) << v47;
                  if ((v50 & 0x80) == 0) {
                    break;
                  }
                  v47 += 7;
                  BOOL v14 = v48++ > 8;
                  if (v14)
                  {
                    LODWORD(v33) = 0;
LABEL_85:
                    unint64_t v3 = v49 + 1;
                    goto LABEL_86;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v33) = 0;
                }
                goto LABEL_85;
              }
              char v31 = 0;
              unsigned int v32 = 0;
              uint64_t v33 = 0;
              do
              {
                unint64_t v3 = v29 + 1;
                *((void *)this + 1) = v29 + 1;
                char v34 = *(unsigned char *)(v30 + v29);
                v33 |= (unint64_t)(v34 & 0x7F) << v31;
                if ((v34 & 0x80) == 0) {
                  goto LABEL_86;
                }
                v31 += 7;
                unint64_t v29 = v3;
                BOOL v14 = v32++ > 8;
              }
              while (!v14);
              LODWORD(v33) = 0;
LABEL_86:
              *(_DWORD *)(a1 + 16) = v33;
              goto LABEL_92;
            case 4u:
              *(unsigned char *)(a1 + 24) |= 1u;
              unint64_t v35 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v36 = *(void *)this;
              if (v35 > 0xFFFFFFFFFFFFFFF5 || v35 + 10 > v2)
              {
                char v51 = 0;
                unsigned int v52 = 0;
                uint64_t v39 = 0;
                if (v2 <= v35) {
                  unint64_t v3 = *((void *)this + 1);
                }
                else {
                  unint64_t v3 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v3 == v35)
                  {
                    LODWORD(v39) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_91;
                  }
                  unint64_t v53 = v35++;
                  char v54 = *(unsigned char *)(v36 + v53);
                  *((void *)this + 1) = v35;
                  v39 |= (unint64_t)(v54 & 0x7F) << v51;
                  if ((v54 & 0x80) == 0) {
                    break;
                  }
                  v51 += 7;
                  BOOL v14 = v52++ > 8;
                  if (v14)
                  {
                    LODWORD(v39) = 0;
LABEL_90:
                    unint64_t v3 = v53 + 1;
                    goto LABEL_91;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v39) = 0;
                }
                goto LABEL_90;
              }
              char v37 = 0;
              unsigned int v38 = 0;
              uint64_t v39 = 0;
              do
              {
                unint64_t v3 = v35 + 1;
                *((void *)this + 1) = v35 + 1;
                char v40 = *(unsigned char *)(v36 + v35);
                v39 |= (unint64_t)(v40 & 0x7F) << v37;
                if ((v40 & 0x80) == 0) {
                  goto LABEL_91;
                }
                v37 += 7;
                unint64_t v35 = v3;
                BOOL v14 = v38++ > 8;
              }
              while (!v14);
              LODWORD(v39) = 0;
LABEL_91:
              *(_DWORD *)(a1 + 8) = v39;
LABEL_92:
              int v4 = *((unsigned __int8 *)this + 24);
              if (v3 >= v2 || *((unsigned char *)this + 24)) {
                return v4 == 0;
              }
              continue;
            case 5u:
              *(unsigned char *)(a1 + 24) |= 0x10u;
              unint64_t v3 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              if (v3 >= v2)
              {
                BOOL v42 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v41 = *(unsigned __int8 *)(*(void *)this + v3++);
                *((void *)this + 1) = v3;
                BOOL v42 = v41 != 0;
              }
              *(unsigned char *)(a1 + 21) = v42;
              goto LABEL_92;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v3 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              goto LABEL_92;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C7E140(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 24);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 24);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 24) & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this);
  char v4 = *(unsigned char *)(v3 + 24);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 1) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(unsigned char *)(v3 + 24) & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 24);
  if (v4) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 0x10) == 0) {
    return result;
  }
LABEL_11:

  return PB::Writer::write(this);
}

uint64_t sub_227C7E204(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC28720;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

void sub_227C7E22C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227C7E264(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC28720;
  *(_DWORD *)(a1 + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 28);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 28) = 1;
    *(void *)(a1 + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 28) & 2) != 0)
  {
LABEL_5:
    LODWORD(v4) = *(_DWORD *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(a1 + 28) = v3;
    *(_DWORD *)(a1 + 16) = v4;
    char v2 = *(unsigned char *)(a2 + 28);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    LODWORD(v4) = *(_DWORD *)(a2 + 20);
    v3 |= 4u;
    *(unsigned char *)(a1 + 28) = v3;
    *(_DWORD *)(a1 + 20) = v4;
    if ((*(unsigned char *)(a2 + 28) & 8) == 0) {
      return *(float *)&v4;
    }
  }
  else if ((v2 & 8) == 0)
  {
    return *(float *)&v4;
  }
  LODWORD(v4) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = v3 | 8;
  *(_DWORD *)(a1 + 24) = v4;
  return *(float *)&v4;
}

uint64_t sub_227C7E300(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 28);
  if (v5)
  {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 28);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 28) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "x", *(float *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "y", *(float *)(a1 + 20));
  if ((*(unsigned char *)(a1 + 28) & 8) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "z", *(float *)(a1 + 24));
LABEL_6:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C7E3C4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 28) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          goto LABEL_38;
        case 2u:
          *(unsigned char *)(a1 + 28) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_37;
        case 3u:
          *(unsigned char *)(a1 + 28) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_37;
        case 4u:
          *(unsigned char *)(a1 + 28) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
LABEL_37:
            unint64_t v2 = *((void *)this + 1) + 4;
LABEL_38:
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_35:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C7E644(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 28);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
      if ((*(unsigned char *)(v3 + 28) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 28) & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16));
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 8) == 0) {
    return result;
  }
LABEL_9:
  float v5 = *(float *)(v3 + 24);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227C7E6EC(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC28758;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

void sub_227C7E714(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227C7E74C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC28758;
  *(_DWORD *)(a1 + 64) = 0;
  char v2 = *(unsigned char *)(a2 + 64);
  if ((v2 & 2) != 0)
  {
    double result = *(double *)(a2 + 16);
    char v3 = 2;
    *(unsigned char *)(a1 + 64) = 2;
    *(double *)(a1 + 16) = result;
    char v2 = *(unsigned char *)(a2 + 64);
    if ((v2 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 64) & 0x40) != 0)
  {
LABEL_5:
    double result = *(double *)(a2 + 56);
    v3 |= 0x40u;
    *(unsigned char *)(a1 + 64) = v3;
    *(double *)(a1 + 56) = result;
    char v2 = *(unsigned char *)(a2 + 64);
  }
LABEL_6:
  if (v2)
  {
    double result = *(double *)(a2 + 8);
    v3 |= 1u;
    *(unsigned char *)(a1 + 64) = v3;
    *(double *)(a1 + 8) = result;
    char v2 = *(unsigned char *)(a2 + 64);
    if ((v2 & 4) == 0)
    {
LABEL_8:
      if ((v2 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_14;
    }
  }
  else if ((v2 & 4) == 0)
  {
    goto LABEL_8;
  }
  double result = *(double *)(a2 + 24);
  v3 |= 4u;
  *(unsigned char *)(a1 + 64) = v3;
  *(double *)(a1 + 24) = result;
  char v2 = *(unsigned char *)(a2 + 64);
  if ((v2 & 0x10) == 0)
  {
LABEL_9:
    if ((v2 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_15;
  }
LABEL_14:
  double result = *(double *)(a2 + 40);
  v3 |= 0x10u;
  *(unsigned char *)(a1 + 64) = v3;
  *(double *)(a1 + 40) = result;
  char v2 = *(unsigned char *)(a2 + 64);
  if ((v2 & 0x20) == 0)
  {
LABEL_10:
    if ((v2 & 8) == 0) {
      return result;
    }
LABEL_16:
    double result = *(double *)(a2 + 32);
    *(unsigned char *)(a1 + 64) = v3 | 8;
    *(double *)(a1 + 32) = result;
    return result;
  }
LABEL_15:
  double result = *(double *)(a2 + 48);
  v3 |= 0x20u;
  *(unsigned char *)(a1 + 64) = v3;
  *(double *)(a1 + 48) = result;
  if ((*(unsigned char *)(a2 + 64) & 8) != 0) {
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_227C7E83C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 64);
  if (v5)
  {
    PB::TextFormatter::format(this, "cadence", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 64);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(a1 + 64) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "startTime", *(double *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 64);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(this, "swingAccelX", *(double *)(a1 + 24));
  char v5 = *(unsigned char *)(a1 + 64);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  PB::TextFormatter::format(this, "swingAccelXStandardized", *(double *)(a1 + 32));
  char v5 = *(unsigned char *)(a1 + 64);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "swingAccelY", *(double *)(a1 + 40));
  char v5 = *(unsigned char *)(a1 + 64);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_17:
  PB::TextFormatter::format(this, "swingAccelZ", *(double *)(a1 + 48));
  if ((*(unsigned char *)(a1 + 64) & 0x40) != 0) {
LABEL_8:
  }
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 56));
LABEL_9:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C7E960(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 64) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
          goto LABEL_46;
        case 2u:
          *(unsigned char *)(a1 + 64) |= 0x40u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(void *)(a1 + 56) = *(void *)(*(void *)this + v2);
          goto LABEL_46;
        case 3u:
          *(unsigned char *)(a1 + 64) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          goto LABEL_46;
        case 5u:
          *(unsigned char *)(a1 + 64) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
          goto LABEL_46;
        case 6u:
          *(unsigned char *)(a1 + 64) |= 0x10u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
          goto LABEL_46;
        case 7u:
          *(unsigned char *)(a1 + 64) |= 0x20u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
          goto LABEL_46;
        case 8u:
          *(unsigned char *)(a1 + 64) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2))
          {
LABEL_44:
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
LABEL_46:
            unint64_t v2 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v2;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C7EC90(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 64);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 16));
    char v4 = *(unsigned char *)(v3 + 64);
    if ((v4 & 0x40) == 0)
    {
LABEL_3:
      if ((v4 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(result + 64) & 0x40) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 56));
  char v4 = *(unsigned char *)(v3 + 64);
  if ((v4 & 1) == 0)
  {
LABEL_4:
    if ((v4 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
  char v4 = *(unsigned char *)(v3 + 64);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24));
  char v4 = *(unsigned char *)(v3 + 64);
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_14:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48));
    if ((*(unsigned char *)(v3 + 64) & 8) == 0) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_13:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40));
  char v4 = *(unsigned char *)(v3 + 64);
  if ((v4 & 0x20) != 0) {
    goto LABEL_14;
  }
LABEL_7:
  if ((v4 & 8) == 0) {
    return result;
  }
LABEL_15:
  double v5 = *(double *)(v3 + 32);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227C7ED8C(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC28790;
  *(_DWORD *)(result + 120) = 0;
  return result;
}

void sub_227C7EDB4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227C7EDEC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC28790;
  *(_DWORD *)(a1 + 120) = 0;
  __int16 v2 = *(_WORD *)(a2 + 120);
  if ((v2 & 0x200) != 0)
  {
    double result = *(double *)(a2 + 80);
    __int16 v3 = 512;
    *(_WORD *)(a1 + 120) = 512;
    *(double *)(a1 + 80) = result;
    __int16 v2 = *(_WORD *)(a2 + 120);
    if ((v2 & 0x2000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((*(_WORD *)(a2 + 120) & 0x2000) != 0)
  {
LABEL_5:
    double result = *(double *)(a2 + 112);
    v3 |= 0x2000u;
    *(_WORD *)(a1 + 120) = v3;
    *(double *)(a1 + 112) = result;
    __int16 v2 = *(_WORD *)(a2 + 120);
  }
LABEL_6:
  if ((v2 & 0x400) != 0)
  {
    double result = *(double *)(a2 + 88);
    v3 |= 0x400u;
    *(_WORD *)(a1 + 120) = v3;
    *(double *)(a1 + 88) = result;
    __int16 v2 = *(_WORD *)(a2 + 120);
    if ((v2 & 0x800) == 0)
    {
LABEL_8:
      if ((v2 & 0x1000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_21;
    }
  }
  else if ((v2 & 0x800) == 0)
  {
    goto LABEL_8;
  }
  double result = *(double *)(a2 + 96);
  v3 |= 0x800u;
  *(_WORD *)(a1 + 120) = v3;
  *(double *)(a1 + 96) = result;
  __int16 v2 = *(_WORD *)(a2 + 120);
  if ((v2 & 0x1000) == 0)
  {
LABEL_9:
    if ((v2 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  double result = *(double *)(a2 + 104);
  v3 |= 0x1000u;
  *(_WORD *)(a1 + 120) = v3;
  *(double *)(a1 + 104) = result;
  __int16 v2 = *(_WORD *)(a2 + 120);
  if ((v2 & 0x40) == 0)
  {
LABEL_10:
    if ((v2 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  double result = *(double *)(a2 + 56);
  v3 |= 0x40u;
  *(_WORD *)(a1 + 120) = v3;
  *(double *)(a1 + 56) = result;
  __int16 v2 = *(_WORD *)(a2 + 120);
  if ((v2 & 0x80) == 0)
  {
LABEL_11:
    if ((v2 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_24;
  }
LABEL_23:
  double result = *(double *)(a2 + 64);
  v3 |= 0x80u;
  *(_WORD *)(a1 + 120) = v3;
  *(double *)(a1 + 64) = result;
  __int16 v2 = *(_WORD *)(a2 + 120);
  if ((v2 & 0x100) == 0)
  {
LABEL_12:
    if ((v2 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_25;
  }
LABEL_24:
  double result = *(double *)(a2 + 72);
  v3 |= 0x100u;
  *(_WORD *)(a1 + 120) = v3;
  *(double *)(a1 + 72) = result;
  __int16 v2 = *(_WORD *)(a2 + 120);
  if ((v2 & 8) == 0)
  {
LABEL_13:
    if ((v2 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_26;
  }
LABEL_25:
  double result = *(double *)(a2 + 32);
  v3 |= 8u;
  *(_WORD *)(a1 + 120) = v3;
  *(double *)(a1 + 32) = result;
  __int16 v2 = *(_WORD *)(a2 + 120);
  if ((v2 & 0x10) == 0)
  {
LABEL_14:
    if ((v2 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_27;
  }
LABEL_26:
  double result = *(double *)(a2 + 40);
  v3 |= 0x10u;
  *(_WORD *)(a1 + 120) = v3;
  *(double *)(a1 + 40) = result;
  __int16 v2 = *(_WORD *)(a2 + 120);
  if ((v2 & 0x20) == 0)
  {
LABEL_15:
    if ((v2 & 1) == 0) {
      goto LABEL_16;
    }
    goto LABEL_28;
  }
LABEL_27:
  double result = *(double *)(a2 + 48);
  v3 |= 0x20u;
  *(_WORD *)(a1 + 120) = v3;
  *(double *)(a1 + 48) = result;
  __int16 v2 = *(_WORD *)(a2 + 120);
  if ((v2 & 1) == 0)
  {
LABEL_16:
    if ((v2 & 2) == 0) {
      goto LABEL_17;
    }
    goto LABEL_29;
  }
LABEL_28:
  double result = *(double *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(a1 + 120) = v3;
  *(double *)(a1 + 8) = result;
  __int16 v2 = *(_WORD *)(a2 + 120);
  if ((v2 & 2) == 0)
  {
LABEL_17:
    if ((v2 & 4) == 0) {
      return result;
    }
LABEL_30:
    double result = *(double *)(a2 + 24);
    *(_WORD *)(a1 + 120) = v3 | 4;
    *(double *)(a1 + 24) = result;
    return result;
  }
LABEL_29:
  double result = *(double *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(a1 + 120) = v3;
  *(double *)(a1 + 16) = result;
  if ((*(_WORD *)(a2 + 120) & 4) != 0) {
    goto LABEL_30;
  }
  return result;
}

uint64_t sub_227C7EFA0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 120);
  if (v5)
  {
    PB::TextFormatter::format(this, "centerOfMassPrefiltAccelX", *(double *)(a1 + 8));
    __int16 v5 = *(_WORD *)(a1 + 120);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_21;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "centerOfMassPrefiltAccelY", *(double *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 120);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "centerOfMassPrefiltAccelZ", *(double *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 120);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "centripetalAccelX", *(double *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 120);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "centripetalAccelY", *(double *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 120);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "centripetalAccelZ", *(double *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 120);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "centripetalRotationRateX", *(double *)(a1 + 56));
  __int16 v5 = *(_WORD *)(a1 + 120);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "centripetalRotationRateY", *(double *)(a1 + 64));
  __int16 v5 = *(_WORD *)(a1 + 120);
  if ((v5 & 0x100) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "centripetalRotationRateZ", *(double *)(a1 + 72));
  __int16 v5 = *(_WORD *)(a1 + 120);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "startTime", *(double *)(a1 + 80));
  __int16 v5 = *(_WORD *)(a1 + 120);
  if ((v5 & 0x400) == 0)
  {
LABEL_12:
    if ((v5 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(this, "swingVelocityX", *(double *)(a1 + 88));
  __int16 v5 = *(_WORD *)(a1 + 120);
  if ((v5 & 0x800) == 0)
  {
LABEL_13:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "swingVelocityY", *(double *)(a1 + 96));
  __int16 v5 = *(_WORD *)(a1 + 120);
  if ((v5 & 0x1000) == 0)
  {
LABEL_14:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_31:
  PB::TextFormatter::format(this, "swingVelocityZ", *(double *)(a1 + 104));
  if ((*(_WORD *)(a1 + 120) & 0x2000) != 0) {
LABEL_15:
  }
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 112));
LABEL_16:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C7F1A4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(_WORD *)(a1 + 120) |= 0x200u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_65;
          }
          *(void *)(a1 + 80) = *(void *)(*(void *)this + v2);
          goto LABEL_67;
        case 2u:
          *(_WORD *)(a1 + 120) |= 0x2000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_65;
          }
          *(void *)(a1 + 112) = *(void *)(*(void *)this + v2);
          goto LABEL_67;
        case 3u:
          *(_WORD *)(a1 + 120) |= 0x400u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_65;
          }
          *(void *)(a1 + 88) = *(void *)(*(void *)this + v2);
          goto LABEL_67;
        case 4u:
          *(_WORD *)(a1 + 120) |= 0x800u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_65;
          }
          *(void *)(a1 + 96) = *(void *)(*(void *)this + v2);
          goto LABEL_67;
        case 5u:
          *(_WORD *)(a1 + 120) |= 0x1000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_65;
          }
          *(void *)(a1 + 104) = *(void *)(*(void *)this + v2);
          goto LABEL_67;
        case 6u:
          *(_WORD *)(a1 + 120) |= 0x40u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_65;
          }
          *(void *)(a1 + 56) = *(void *)(*(void *)this + v2);
          goto LABEL_67;
        case 7u:
          *(_WORD *)(a1 + 120) |= 0x80u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_65;
          }
          *(void *)(a1 + 64) = *(void *)(*(void *)this + v2);
          goto LABEL_67;
        case 8u:
          *(_WORD *)(a1 + 120) |= 0x100u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_65;
          }
          *(void *)(a1 + 72) = *(void *)(*(void *)this + v2);
          goto LABEL_67;
        case 9u:
          *(_WORD *)(a1 + 120) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_65;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
          goto LABEL_67;
        case 0xAu:
          *(_WORD *)(a1 + 120) |= 0x10u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_65;
          }
          *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
          goto LABEL_67;
        case 0xBu:
          *(_WORD *)(a1 + 120) |= 0x20u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_65;
          }
          *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
          goto LABEL_67;
        case 0xCu:
          *(_WORD *)(a1 + 120) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_65;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          goto LABEL_67;
        case 0xDu:
          *(_WORD *)(a1 + 120) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_65;
          }
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
          goto LABEL_67;
        case 0xEu:
          *(_WORD *)(a1 + 120) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2))
          {
LABEL_65:
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
LABEL_67:
            unint64_t v2 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v2;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227C7F674(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 120);
  if ((v4 & 0x200) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 80));
    __int16 v4 = *(_WORD *)(v3 + 120);
    if ((v4 & 0x2000) == 0)
    {
LABEL_3:
      if ((v4 & 0x400) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((*(_WORD *)(result + 120) & 0x2000) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 112));
  __int16 v4 = *(_WORD *)(v3 + 120);
  if ((v4 & 0x400) == 0)
  {
LABEL_4:
    if ((v4 & 0x800) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 88));
  __int16 v4 = *(_WORD *)(v3 + 120);
  if ((v4 & 0x800) == 0)
  {
LABEL_5:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 96));
  __int16 v4 = *(_WORD *)(v3 + 120);
  if ((v4 & 0x1000) == 0)
  {
LABEL_6:
    if ((v4 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 104));
  __int16 v4 = *(_WORD *)(v3 + 120);
  if ((v4 & 0x40) == 0)
  {
LABEL_7:
    if ((v4 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 56));
  __int16 v4 = *(_WORD *)(v3 + 120);
  if ((v4 & 0x80) == 0)
  {
LABEL_8:
    if ((v4 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 64));
  __int16 v4 = *(_WORD *)(v3 + 120);
  if ((v4 & 0x100) == 0)
  {
LABEL_9:
    if ((v4 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 72));
  __int16 v4 = *(_WORD *)(v3 + 120);
  if ((v4 & 8) == 0)
  {
LABEL_10:
    if ((v4 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32));
  __int16 v4 = *(_WORD *)(v3 + 120);
  if ((v4 & 0x10) == 0)
  {
LABEL_11:
    if ((v4 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40));
  __int16 v4 = *(_WORD *)(v3 + 120);
  if ((v4 & 0x20) == 0)
  {
LABEL_12:
    if ((v4 & 1) == 0) {
      goto LABEL_13;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48));
  __int16 v4 = *(_WORD *)(v3 + 120);
  if ((v4 & 1) == 0)
  {
LABEL_13:
    if ((v4 & 2) == 0) {
      goto LABEL_14;
    }
LABEL_28:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
    if ((*(_WORD *)(v3 + 120) & 4) == 0) {
      return result;
    }
    goto LABEL_29;
  }
LABEL_27:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
  __int16 v4 = *(_WORD *)(v3 + 120);
  if ((v4 & 2) != 0) {
    goto LABEL_28;
  }
LABEL_14:
  if ((v4 & 4) == 0) {
    return result;
  }
LABEL_29:
  double v5 = *(double *)(v3 + 24);

  return PB::Writer::write(this, v5);
}

void *sub_227C7F834(void *result)
{
  *uint64_t result = &unk_26DC287C8;
  result[28] = 0;
  return result;
}

void sub_227C7F85C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227C7F894(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC287C8;
  *(void *)(a1 + 224) = 0;
  uint64_t v2 = *(void *)(a2 + 224);
  if ((v2 & 0x40) != 0)
  {
    double result = *(double *)(a2 + 56);
    uint64_t v3 = 64;
    *(void *)(a1 + 224) = 64;
    *(double *)(a1 + 56) = result;
    uint64_t v2 = *(void *)(a2 + 224);
    if ((v2 & 0x80) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v3 = 0;
  if ((v2 & 0x80) != 0)
  {
LABEL_5:
    double result = *(double *)(a2 + 64);
    v3 |= 0x80uLL;
    *(void *)(a1 + 224) = v3;
    *(double *)(a1 + 64) = result;
    uint64_t v2 = *(void *)(a2 + 224);
  }
LABEL_6:
  if ((v2 & 0x200000000) != 0)
  {
    char v5 = *(unsigned char *)(a2 + 220);
    v3 |= 0x200000000uLL;
    *(void *)(a1 + 224) = v3;
    *(unsigned char *)(a1 + 220) = v5;
    uint64_t v2 = *(void *)(a2 + 224);
    if ((v2 & 2) == 0)
    {
LABEL_8:
      if ((v2 & 0x40000000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_42;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_8;
  }
  double result = *(double *)(a2 + 16);
  v3 |= 2uLL;
  *(void *)(a1 + 224) = v3;
  *(double *)(a1 + 16) = result;
  uint64_t v2 = *(void *)(a2 + 224);
  if ((v2 & 0x40000000) == 0)
  {
LABEL_9:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_43;
  }
LABEL_42:
  char v6 = *(unsigned char *)(a2 + 217);
  v3 |= 0x40000000uLL;
  *(void *)(a1 + 224) = v3;
  *(unsigned char *)(a1 + 217) = v6;
  uint64_t v2 = *(void *)(a2 + 224);
  if ((v2 & 0x80000) == 0)
  {
LABEL_10:
    if ((v2 & 0x400000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_44;
  }
LABEL_43:
  double result = *(double *)(a2 + 160);
  v3 |= 0x80000uLL;
  *(void *)(a1 + 224) = v3;
  *(double *)(a1 + 160) = result;
  uint64_t v2 = *(void *)(a2 + 224);
  if ((v2 & 0x400000000) == 0)
  {
LABEL_11:
    if ((v2 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_45;
  }
LABEL_44:
  char v7 = *(unsigned char *)(a2 + 221);
  v3 |= 0x400000000uLL;
  *(void *)(a1 + 224) = v3;
  *(unsigned char *)(a1 + 221) = v7;
  uint64_t v2 = *(void *)(a2 + 224);
  if ((v2 & 1) == 0)
  {
LABEL_12:
    if ((v2 & 0x20000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_46;
  }
LABEL_45:
  double result = *(double *)(a2 + 8);
  v3 |= 1uLL;
  *(void *)(a1 + 224) = v3;
  *(double *)(a1 + 8) = result;
  uint64_t v2 = *(void *)(a2 + 224);
  if ((v2 & 0x20000000) == 0)
  {
LABEL_13:
    if ((v2 & 0x80000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_47;
  }
LABEL_46:
  char v8 = *(unsigned char *)(a2 + 216);
  v3 |= 0x20000000uLL;
  *(void *)(a1 + 224) = v3;
  *(unsigned char *)(a1 + 216) = v8;
  uint64_t v2 = *(void *)(a2 + 224);
  if ((v2 & 0x80000000) == 0)
  {
LABEL_14:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_48;
  }
LABEL_47:
  char v9 = *(unsigned char *)(a2 + 218);
  v3 |= 0x80000000uLL;
  *(void *)(a1 + 224) = v3;
  *(unsigned char *)(a1 + 218) = v9;
  uint64_t v2 = *(void *)(a2 + 224);
  if ((v2 & 0x8000) == 0)
  {
LABEL_15:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_49;
  }
LABEL_48:
  double result = *(double *)(a2 + 128);
  v3 |= 0x8000uLL;
  *(void *)(a1 + 224) = v3;
  *(double *)(a1 + 128) = result;
  uint64_t v2 = *(void *)(a2 + 224);
  if ((v2 & 0x40000) == 0)
  {
LABEL_16:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_50;
  }
LABEL_49:
  double result = *(double *)(a2 + 152);
  v3 |= 0x40000uLL;
  *(void *)(a1 + 224) = v3;
  *(double *)(a1 + 152) = result;
  uint64_t v2 = *(void *)(a2 + 224);
  if ((v2 & 0x4000) == 0)
  {
LABEL_17:
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_51;
  }
LABEL_50:
  double result = *(double *)(a2 + 120);
  v3 |= 0x4000uLL;
  *(void *)(a1 + 224) = v3;
  *(double *)(a1 + 120) = result;
  uint64_t v2 = *(void *)(a2 + 224);
  if ((v2 & 0x8000000) == 0)
  {
LABEL_18:
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_52;
  }
LABEL_51:
  int v10 = *(_DWORD *)(a2 + 208);
  v3 |= 0x8000000uLL;
  *(void *)(a1 + 224) = v3;
  *(_DWORD *)(a1 + 208) = v10;
  uint64_t v2 = *(void *)(a2 + 224);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_19:
    if ((v2 & 0x10000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_53;
  }
LABEL_52:
  int v11 = *(_DWORD *)(a2 + 204);
  v3 |= 0x4000000uLL;
  *(void *)(a1 + 224) = v3;
  *(_DWORD *)(a1 + 204) = v11;
  uint64_t v2 = *(void *)(a2 + 224);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_20:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_54;
  }
LABEL_53:
  int v12 = *(_DWORD *)(a2 + 212);
  v3 |= 0x10000000uLL;
  *(void *)(a1 + 224) = v3;
  *(_DWORD *)(a1 + 212) = v12;
  uint64_t v2 = *(void *)(a2 + 224);
  if ((v2 & 0x800000) == 0)
  {
LABEL_21:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_55;
  }
LABEL_54:
  int v13 = *(_DWORD *)(a2 + 192);
  v3 |= 0x800000uLL;
  *(void *)(a1 + 224) = v3;
  *(_DWORD *)(a1 + 192) = v13;
  uint64_t v2 = *(void *)(a2 + 224);
  if ((v2 & 0x1000) == 0)
  {
LABEL_22:
    if ((v2 & 0x2000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_56;
  }
LABEL_55:
  double result = *(double *)(a2 + 104);
  v3 |= 0x1000uLL;
  *(void *)(a1 + 224) = v3;
  *(double *)(a1 + 104) = result;
  uint64_t v2 = *(void *)(a2 + 224);
  if ((v2 & 0x2000000) == 0)
  {
LABEL_23:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_57;
  }
LABEL_56:
  int v14 = *(_DWORD *)(a2 + 200);
  v3 |= 0x2000000uLL;
  *(void *)(a1 + 224) = v3;
  *(_DWORD *)(a1 + 200) = v14;
  uint64_t v2 = *(void *)(a2 + 224);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_24:
    if ((v2 & 8) == 0) {
      goto LABEL_25;
    }
    goto LABEL_58;
  }
LABEL_57:
  int v15 = *(_DWORD *)(a2 + 196);
  v3 |= 0x1000000uLL;
  *(void *)(a1 + 224) = v3;
  *(_DWORD *)(a1 + 196) = v15;
  uint64_t v2 = *(void *)(a2 + 224);
  if ((v2 & 8) == 0)
  {
LABEL_25:
    if ((v2 & 4) == 0) {
      goto LABEL_26;
    }
    goto LABEL_59;
  }
LABEL_58:
  double result = *(double *)(a2 + 32);
  v3 |= 8uLL;
  *(void *)(a1 + 224) = v3;
  *(double *)(a1 + 32) = result;
  uint64_t v2 = *(void *)(a2 + 224);
  if ((v2 & 4) == 0)
  {
LABEL_26:
    if ((v2 & 0x10) == 0) {
      goto LABEL_27;
    }
    goto LABEL_60;
  }
LABEL_59:
  double result = *(double *)(a2 + 24);
  v3 |= 4uLL;
  *(void *)(a1 + 224) = v3;
  *(double *)(a1 + 24) = result;
  uint64_t v2 = *(void *)(a2 + 224);
  if ((v2 & 0x10) == 0)
  {
LABEL_27:
    if ((v2 & 0x100000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_61;
  }
LABEL_60:
  double result = *(double *)(a2 + 40);
  v3 |= 0x10uLL;
  *(void *)(a1 + 224) = v3;
  *(double *)(a1 + 40) = result;
  uint64_t v2 = *(void *)(a2 + 224);
  if ((v2 & 0x100000000) == 0)
  {
LABEL_28:
    if ((v2 & 0x100) == 0) {
      goto LABEL_29;
    }
    goto LABEL_62;
  }
LABEL_61:
  char v16 = *(unsigned char *)(a2 + 219);
  v3 |= 0x100000000uLL;
  *(void *)(a1 + 224) = v3;
  *(unsigned char *)(a1 + 219) = v16;
  uint64_t v2 = *(void *)(a2 + 224);
  if ((v2 & 0x100) == 0)
  {
LABEL_29:
    if ((v2 & 0x800) == 0) {
      goto LABEL_30;
    }
    goto LABEL_63;
  }
LABEL_62:
  double result = *(double *)(a2 + 72);
  v3 |= 0x100uLL;
  *(void *)(a1 + 224) = v3;
  *(double *)(a1 + 72) = result;
  uint64_t v2 = *(void *)(a2 + 224);
  if ((v2 & 0x800) == 0)
  {
LABEL_30:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_64;
  }
LABEL_63:
  double result = *(double *)(a2 + 96);
  v3 |= 0x800uLL;
  *(void *)(a1 + 224) = v3;
  *(double *)(a1 + 96) = result;
  uint64_t v2 = *(void *)(a2 + 224);
  if ((v2 & 0x10000) == 0)
  {
LABEL_31:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_65;
  }
LABEL_64:
  double result = *(double *)(a2 + 136);
  v3 |= 0x10000uLL;
  *(void *)(a1 + 224) = v3;
  *(double *)(a1 + 136) = result;
  uint64_t v2 = *(void *)(a2 + 224);
  if ((v2 & 0x20000) == 0)
  {
LABEL_32:
    if ((v2 & 0x20) == 0) {
      goto LABEL_33;
    }
    goto LABEL_66;
  }
LABEL_65:
  double result = *(double *)(a2 + 144);
  v3 |= 0x20000uLL;
  *(void *)(a1 + 224) = v3;
  *(double *)(a1 + 144) = result;
  uint64_t v2 = *(void *)(a2 + 224);
  if ((v2 & 0x20) == 0)
  {
LABEL_33:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_67;
  }
LABEL_66:
  double result = *(double *)(a2 + 48);
  v3 |= 0x20uLL;
  *(void *)(a1 + 224) = v3;
  *(double *)(a1 + 48) = result;
  uint64_t v2 = *(void *)(a2 + 224);
  if ((v2 & 0x400000) == 0)
  {
LABEL_34:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_68;
  }
LABEL_67:
  double result = *(double *)(a2 + 184);
  v3 |= 0x400000uLL;
  *(void *)(a1 + 224) = v3;
  *(double *)(a1 + 184) = result;
  uint64_t v2 = *(void *)(a2 + 224);
  if ((v2 & 0x2000) == 0)
  {
LABEL_35:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_69;
  }
LABEL_68:
  double result = *(double *)(a2 + 112);
  v3 |= 0x2000uLL;
  *(void *)(a1 + 224) = v3;
  *(double *)(a1 + 112) = result;
  uint64_t v2 = *(void *)(a2 + 224);
  if ((v2 & 0x100000) == 0)
  {
LABEL_36:
    if ((v2 & 0x200) == 0) {
      goto LABEL_37;
    }
    goto LABEL_70;
  }
LABEL_69:
  double result = *(double *)(a2 + 168);
  v3 |= 0x100000uLL;
  *(void *)(a1 + 224) = v3;
  *(double *)(a1 + 168) = result;
  uint64_t v2 = *(void *)(a2 + 224);
  if ((v2 & 0x200) == 0)
  {
LABEL_37:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_71;
  }
LABEL_70:
  double result = *(double *)(a2 + 80);
  v3 |= 0x200uLL;
  *(void *)(a1 + 224) = v3;
  *(double *)(a1 + 80) = result;
  uint64_t v2 = *(void *)(a2 + 224);
  if ((v2 & 0x200000) == 0)
  {
LABEL_38:
    if ((v2 & 0x400) == 0) {
      return result;
    }
LABEL_72:
    double result = *(double *)(a2 + 88);
    *(void *)(a1 + 224) = v3 | 0x400;
    *(double *)(a1 + 88) = result;
    return result;
  }
LABEL_71:
  double result = *(double *)(a2 + 176);
  v3 |= 0x200000uLL;
  *(void *)(a1 + 224) = v3;
  *(double *)(a1 + 176) = result;
  if ((*(void *)(a2 + 224) & 0x400) != 0) {
    goto LABEL_72;
  }
  return result;
}

uint64_t sub_227C7FC94(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 224);
  if (v5)
  {
    PB::TextFormatter::format(this, "emptyField0", *(double *)(a1 + 8));
    uint64_t v5 = *(void *)(a1 + 224);
    if ((v5 & 0x20000000) == 0)
    {
LABEL_3:
      if ((v5 & 0x800000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_42;
    }
  }
  else if ((v5 & 0x20000000) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "emptyField1");
  uint64_t v5 = *(void *)(a1 + 224);
  if ((v5 & 0x800000) == 0)
  {
LABEL_4:
    if ((v5 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "emptyField2");
  uint64_t v5 = *(void *)(a1 + 224);
  if ((v5 & 2) == 0)
  {
LABEL_5:
    if ((v5 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "groundContactTime", *(double *)(a1 + 16));
  uint64_t v5 = *(void *)(a1 + 224);
  if ((v5 & 4) == 0)
  {
LABEL_6:
    if ((v5 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "groundContactTimeCadence", *(double *)(a1 + 24));
  uint64_t v5 = *(void *)(a1 + 224);
  if ((v5 & 8) == 0)
  {
LABEL_7:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_46;
  }
LABEL_45:
  PB::TextFormatter::format(this, "groundContactTimeGrade", *(double *)(a1 + 32));
  uint64_t v5 = *(void *)(a1 + 224);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_8:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_47;
  }
LABEL_46:
  PB::TextFormatter::format(this, "groundContactTimeGradeSource");
  uint64_t v5 = *(void *)(a1 + 224);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_9:
    if ((v5 & 0x40000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(this, "groundContactTimeGradeType");
  uint64_t v5 = *(void *)(a1 + 224);
  if ((v5 & 0x40000000) == 0)
  {
LABEL_10:
    if ((v5 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(this, "groundContactTimeIsValid");
  uint64_t v5 = *(void *)(a1 + 224);
  if ((v5 & 0x10) == 0)
  {
LABEL_11:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_50;
  }
LABEL_49:
  PB::TextFormatter::format(this, "groundContactTimePace", *(double *)(a1 + 40));
  uint64_t v5 = *(void *)(a1 + 224);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_12:
    if ((v5 & 0x20) == 0) {
      goto LABEL_13;
    }
    goto LABEL_51;
  }
LABEL_50:
  PB::TextFormatter::format(this, "groundContactTimeReportingStatus");
  uint64_t v5 = *(void *)(a1 + 224);
  if ((v5 & 0x20) == 0)
  {
LABEL_13:
    if ((v5 & 0x40) == 0) {
      goto LABEL_14;
    }
    goto LABEL_52;
  }
LABEL_51:
  PB::TextFormatter::format(this, "groundContactTimeUnsmoothed", *(double *)(a1 + 48));
  uint64_t v5 = *(void *)(a1 + 224);
  if ((v5 & 0x40) == 0)
  {
LABEL_14:
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_53;
  }
LABEL_52:
  PB::TextFormatter::format(this, "groundContactTimeWindowEndTime", *(double *)(a1 + 56));
  uint64_t v5 = *(void *)(a1 + 224);
  if ((v5 & 0x80000000) == 0)
  {
LABEL_15:
    if ((v5 & 0x100000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(this, "isFlat");
  uint64_t v5 = *(void *)(a1 + 224);
  if ((v5 & 0x100000000) == 0)
  {
LABEL_16:
    if ((v5 & 0x80) == 0) {
      goto LABEL_17;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(this, "isFormBasedStrideLength");
  uint64_t v5 = *(void *)(a1 + 224);
  if ((v5 & 0x80) == 0)
  {
LABEL_17:
    if ((v5 & 0x100) == 0) {
      goto LABEL_18;
    }
    goto LABEL_56;
  }
LABEL_55:
  PB::TextFormatter::format(this, "strideLength", *(double *)(a1 + 64));
  uint64_t v5 = *(void *)(a1 + 224);
  if ((v5 & 0x100) == 0)
  {
LABEL_18:
    if ((v5 & 0x200) == 0) {
      goto LABEL_19;
    }
    goto LABEL_57;
  }
LABEL_56:
  PB::TextFormatter::format(this, "strideLengthCadence", *(double *)(a1 + 72));
  uint64_t v5 = *(void *)(a1 + 224);
  if ((v5 & 0x200) == 0)
  {
LABEL_19:
    if ((v5 & 0x400) == 0) {
      goto LABEL_20;
    }
    goto LABEL_58;
  }
LABEL_57:
  PB::TextFormatter::format(this, "strideLengthGrade", *(double *)(a1 + 80));
  uint64_t v5 = *(void *)(a1 + 224);
  if ((v5 & 0x400) == 0)
  {
LABEL_20:
    if ((v5 & 0x200000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_59;
  }
LABEL_58:
  PB::TextFormatter::format(this, "strideLengthGradeType", *(double *)(a1 + 88));
  uint64_t v5 = *(void *)(a1 + 224);
  if ((v5 & 0x200000000) == 0)
  {
LABEL_21:
    if ((v5 & 0x800) == 0) {
      goto LABEL_22;
    }
    goto LABEL_60;
  }
LABEL_59:
  PB::TextFormatter::format(this, "strideLengthIsValid");
  uint64_t v5 = *(void *)(a1 + 224);
  if ((v5 & 0x800) == 0)
  {
LABEL_22:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_61;
  }
LABEL_60:
  PB::TextFormatter::format(this, "strideLengthPace", *(double *)(a1 + 96));
  uint64_t v5 = *(void *)(a1 + 224);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_23:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_62;
  }
LABEL_61:
  PB::TextFormatter::format(this, "strideLengthReportingStatus");
  uint64_t v5 = *(void *)(a1 + 224);
  if ((v5 & 0x1000) == 0)
  {
LABEL_24:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_63;
  }
LABEL_62:
  PB::TextFormatter::format(this, "strideLengthUncalibrated", *(double *)(a1 + 104));
  uint64_t v5 = *(void *)(a1 + 224);
  if ((v5 & 0x2000) == 0)
  {
LABEL_25:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_64;
  }
LABEL_63:
  PB::TextFormatter::format(this, "strideLengthUnsmoothed", *(double *)(a1 + 112));
  uint64_t v5 = *(void *)(a1 + 224);
  if ((v5 & 0x4000) == 0)
  {
LABEL_26:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_65;
  }
LABEL_64:
  PB::TextFormatter::format(this, "strideLengthWindowEndTime", *(double *)(a1 + 120));
  uint64_t v5 = *(void *)(a1 + 224);
  if ((v5 & 0x8000) == 0)
  {
LABEL_27:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_66;
  }
LABEL_65:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 128));
  uint64_t v5 = *(void *)(a1 + 224);
  if ((v5 & 0x10000) == 0)
  {
LABEL_28:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_67;
  }
LABEL_66:
  PB::TextFormatter::format(this, "verticalOscCadence", *(double *)(a1 + 136));
  uint64_t v5 = *(void *)(a1 + 224);
  if ((v5 & 0x20000) == 0)
  {
LABEL_29:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_68;
  }
LABEL_67:
  PB::TextFormatter::format(this, "verticalOscPace", *(double *)(a1 + 144));
  uint64_t v5 = *(void *)(a1 + 224);
  if ((v5 & 0x40000) == 0)
  {
LABEL_30:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_69;
  }
LABEL_68:
  PB::TextFormatter::format(this, "verticalOscWindowEndTime", *(double *)(a1 + 152));
  uint64_t v5 = *(void *)(a1 + 224);
  if ((v5 & 0x80000) == 0)
  {
LABEL_31:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_70;
  }
LABEL_69:
  PB::TextFormatter::format(this, "verticalOscillation", *(double *)(a1 + 160));
  uint64_t v5 = *(void *)(a1 + 224);
  if ((v5 & 0x100000) == 0)
  {
LABEL_32:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_71;
  }
LABEL_70:
  PB::TextFormatter::format(this, "verticalOscillationGrade", *(double *)(a1 + 168));
  uint64_t v5 = *(void *)(a1 + 224);
  if ((v5 & 0x200000) == 0)
  {
LABEL_33:
    if ((v5 & 0x400000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_72;
  }
LABEL_71:
  PB::TextFormatter::format(this, "verticalOscillationGradeType", *(double *)(a1 + 176));
  uint64_t v5 = *(void *)(a1 + 224);
  if ((v5 & 0x400000000) == 0)
  {
LABEL_34:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_73;
  }
LABEL_72:
  PB::TextFormatter::format(this, "verticalOscillationIsValid");
  uint64_t v5 = *(void *)(a1 + 224);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_35:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_36;
  }
LABEL_73:
  PB::TextFormatter::format(this, "verticalOscillationReportingStatus");
  if ((*(void *)(a1 + 224) & 0x400000) != 0) {
LABEL_36:
  }
    PB::TextFormatter::format(this, "verticalOscillationUnsmoothed", *(double *)(a1 + 184));
LABEL_37:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227C80138(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(void *)(a1 + 224) |= 0x40uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_146;
              }
              *(void *)(a1 + 56) = *(void *)(*(void *)this + v2);
              goto LABEL_202;
            case 2u:
              *(void *)(a1 + 224) |= 0x80uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_146;
              }
              *(void *)(a1 + 64) = *(void *)(*(void *)this + v2);
              goto LABEL_202;
            case 3u:
              *(void *)(a1 + 224) |= 0x200000000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v22 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v21 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v22 = v21 != 0;
              }
              *(unsigned char *)(a1 + 220) = v22;
              goto LABEL_203;
            case 4u:
              *(void *)(a1 + 224) |= 2uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_146;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_202;
            case 5u:
              *(void *)(a1 + 224) |= 0x40000000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v24 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v23 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v24 = v23 != 0;
              }
              *(unsigned char *)(a1 + 217) = v24;
              goto LABEL_203;
            case 6u:
              *(void *)(a1 + 224) |= 0x80000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_146;
              }
              *(void *)(a1 + 160) = *(void *)(*(void *)this + v2);
              goto LABEL_202;
            case 7u:
              *(void *)(a1 + 224) |= 0x400000000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v26 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v25 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v26 = v25 != 0;
              }
              *(unsigned char *)(a1 + 221) = v26;
              goto LABEL_203;
            case 8u:
              *(void *)(a1 + 224) |= 1uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_146;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_202;
            case 9u:
              *(void *)(a1 + 224) |= 0x20000000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v28 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v27 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v28 = v27 != 0;
              }
              *(unsigned char *)(a1 + 216) = v28;
              goto LABEL_203;
            case 0xAu:
              *(void *)(a1 + 224) |= 0x80000000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v30 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v29 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v30 = v29 != 0;
              }
              *(unsigned char *)(a1 + 218) = v30;
              goto LABEL_203;
            case 0xBu:
              *(void *)(a1 + 224) |= 0x8000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_146;
              }
              *(void *)(a1 + 128) = *(void *)(*(void *)this + v2);
              goto LABEL_202;
            case 0xCu:
              *(void *)(a1 + 224) |= 0x40000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_146;
              }
              *(void *)(a1 + 152) = *(void *)(*(void *)this + v2);
              goto LABEL_202;
            case 0xDu:
              *(void *)(a1 + 224) |= 0x4000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_146;
              }
              *(void *)(a1 + 120) = *(void *)(*(void *)this + v2);
              goto LABEL_202;
            case 0xEu:
              *(void *)(a1 + 224) |= 0x8000000uLL;
              unint64_t v31 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v32 = *(void *)this;
              if (v31 > 0xFFFFFFFFFFFFFFF5 || v31 + 10 > v2)
              {
                char v69 = 0;
                unsigned int v70 = 0;
                uint64_t v35 = 0;
                if (v2 <= v31) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v31)
                  {
                    LODWORD(v35) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_212;
                  }
                  unint64_t v71 = v31++;
                  char v72 = *(unsigned char *)(v32 + v71);
                  *((void *)this + 1) = v31;
                  v35 |= (unint64_t)(v72 & 0x7F) << v69;
                  if ((v72 & 0x80) == 0) {
                    break;
                  }
                  v69 += 7;
                  BOOL v14 = v70++ > 8;
                  if (v14)
                  {
                    LODWORD(v35) = 0;
LABEL_211:
                    unint64_t v2 = v71 + 1;
                    goto LABEL_212;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v35) = 0;
                }
                goto LABEL_211;
              }
              char v33 = 0;
              unsigned int v34 = 0;
              uint64_t v35 = 0;
              do
              {
                unint64_t v2 = v31 + 1;
                *((void *)this + 1) = v31 + 1;
                char v36 = *(unsigned char *)(v32 + v31);
                v35 |= (unint64_t)(v36 & 0x7F) << v33;
                if ((v36 & 0x80) == 0) {
                  goto LABEL_212;
                }
                v33 += 7;
                unint64_t v31 = v2;
                BOOL v14 = v34++ > 8;
              }
              while (!v14);
              LODWORD(v35) = 0;
LABEL_212:
              *(_DWORD *)(a1 + 208) = v35;
              goto LABEL_203;
            case 0xFu:
              *(void *)(a1 + 224) |= 0x4000000uLL;
              unint64_t v37 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v38 = *(void *)this;
              if (v37 > 0xFFFFFFFFFFFFFFF5 || v37 + 10 > v2)
              {
                char v73 = 0;
                unsigned int v74 = 0;
                uint64_t v41 = 0;
                if (v2 <= v37) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v37)
                  {
                    LODWORD(v41) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_217;
                  }
                  unint64_t v75 = v37++;
                  char v76 = *(unsigned char *)(v38 + v75);
                  *((void *)this + 1) = v37;
                  v41 |= (unint64_t)(v76 & 0x7F) << v73;
                  if ((v76 & 0x80) == 0) {
                    break;
                  }
                  v73 += 7;
                  BOOL v14 = v74++ > 8;
                  if (v14)
                  {
                    LODWORD(v41) = 0;
LABEL_216:
                    unint64_t v2 = v75 + 1;
                    goto LABEL_217;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v41) = 0;
                }
                goto LABEL_216;
              }
              char v39 = 0;
              unsigned int v40 = 0;
              uint64_t v41 = 0;
              do
              {
                unint64_t v2 = v37 + 1;
                *((void *)this + 1) = v37 + 1;
                char v42 = *(unsigned char *)(v38 + v37);
                v41 |= (unint64_t)(v42 & 0x7F) << v39;
                if ((v42 & 0x80) == 0) {
                  goto LABEL_217;
                }
                v39 += 7;
                unint64_t v37 = v2;
                BOOL v14 = v40++ > 8;
              }
              while (!v14);
              LODWORD(v41) = 0;
LABEL_217:
              *(_DWORD *)(a1 + 204) = v41;
              goto LABEL_203;
            case 0x10u:
              *(void *)(a1 + 224) |= 0x10000000uLL;
              unint64_t v43 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v44 = *(void *)this;
              if (v43 > 0xFFFFFFFFFFFFFFF5 || v43 + 10 > v2)
              {
                char v77 = 0;
                unsigned int v78 = 0;
                uint64_t v47 = 0;
                if (v2 <= v43) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v43)
                  {
                    LODWORD(v47) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_222;
                  }
                  unint64_t v79 = v43++;
                  char v80 = *(unsigned char *)(v44 + v79);
                  *((void *)this + 1) = v43;
                  v47 |= (unint64_t)(v80 & 0x7F) << v77;
                  if ((v80 & 0x80) == 0) {
                    break;
                  }
                  v77 += 7;
                  BOOL v14 = v78++ > 8;
                  if (v14)
                  {
                    LODWORD(v47) = 0;
LABEL_221:
                    unint64_t v2 = v79 + 1;
                    goto LABEL_222;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v47) = 0;
                }
                goto LABEL_221;
              }
              char v45 = 0;
              unsigned int v46 = 0;
              uint64_t v47 = 0;
              do
              {
                unint64_t v2 = v43 + 1;
                *((void *)this + 1) = v43 + 1;
                char v48 = *(unsigned char *)(v44 + v43);
                v47 |= (unint64_t)(v48 & 0x7F) << v45;
                if ((v48 & 0x80) == 0) {
                  goto LABEL_222;
                }
                v45 += 7;
                unint64_t v43 = v2;
                BOOL v14 = v46++ > 8;
              }
              while (!v14);
              LODWORD(v47) = 0;
LABEL_222:
              *(_DWORD *)(a1 + 212) = v47;
              goto LABEL_203;
            case 0x11u:
              *(void *)(a1 + 224) |= 0x800000uLL;
              unint64_t v49 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v50 = *(void *)this;
              if (v49 > 0xFFFFFFFFFFFFFFF5 || v49 + 10 > v2)
              {
                char v81 = 0;
                unsigned int v82 = 0;
                uint64_t v53 = 0;
                if (v2 <= v49) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v49)
                  {
                    LODWORD(v53) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_227;
                  }
                  unint64_t v83 = v49++;
                  char v84 = *(unsigned char *)(v50 + v83);
                  *((void *)this + 1) = v49;
                  v53 |= (unint64_t)(v84 & 0x7F) << v81;
                  if ((v84 & 0x80) == 0) {
                    break;
                  }
                  v81 += 7;
                  BOOL v14 = v82++ > 8;
                  if (v14)
                  {
                    LODWORD(v53) = 0;
LABEL_226:
                    unint64_t v2 = v83 + 1;
                    goto LABEL_227;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v53) = 0;
                }
                goto LABEL_226;
              }
              char v51 = 0;
              unsigned int v52 = 0;
              uint64_t v53 = 0;
              do
              {
                unint64_t v2 = v49 + 1;
                *((void *)this + 1) = v49 + 1;
                char v54 = *(unsigned char *)(v50 + v49);
                v53 |= (unint64_t)(v54 & 0x7F) << v51;
                if ((v54 & 0x80) == 0) {
                  goto LABEL_227;
                }
                v51 += 7;
                unint64_t v49 = v2;
                BOOL v14 = v52++ > 8;
              }
              while (!v14);
              LODWORD(v53) = 0;
LABEL_227:
              *(_DWORD *)(a1 + 192) = v53;
              goto LABEL_203;
            case 0x12u:
              *(void *)(a1 + 224) |= 0x1000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_146;
              }
              *(void *)(a1 + 104) = *(void *)(*(void *)this + v2);
              goto LABEL_202;
            case 0x13u:
              *(void *)(a1 + 224) |= 0x2000000uLL;
              unint64_t v55 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v56 = *(void *)this;
              if (v55 > 0xFFFFFFFFFFFFFFF5 || v55 + 10 > v2)
              {
                char v85 = 0;
                unsigned int v86 = 0;
                uint64_t v59 = 0;
                if (v2 <= v55) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v55)
                  {
                    LODWORD(v59) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_232;
                  }
                  unint64_t v87 = v55++;
                  char v88 = *(unsigned char *)(v56 + v87);
                  *((void *)this + 1) = v55;
                  v59 |= (unint64_t)(v88 & 0x7F) << v85;
                  if ((v88 & 0x80) == 0) {
                    break;
                  }
                  v85 += 7;
                  BOOL v14 = v86++ > 8;
                  if (v14)
                  {
                    LODWORD(v59) = 0;
LABEL_231:
                    unint64_t v2 = v87 + 1;
                    goto LABEL_232;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v59) = 0;
                }
                goto LABEL_231;
              }
              char v57 = 0;
              unsigned int v58 = 0;
              uint64_t v59 = 0;
              do
              {
                unint64_t v2 = v55 + 1;
                *((void *)this + 1) = v55 + 1;
                char v60 = *(unsigned char *)(v56 + v55);
                v59 |= (unint64_t)(v60 & 0x7F) << v57;
                if ((v60 & 0x80) == 0) {
                  goto LABEL_232;
                }
                v57 += 7;
                unint64_t v55 = v2;
                BOOL v14 = v58++ > 8;
              }
              while (!v14);
              LODWORD(v59) = 0;
LABEL_232:
              *(_DWORD *)(a1 + 200) = v59;
              goto LABEL_203;
            case 0x14u:
              *(void *)(a1 + 224) |= 0x1000000uLL;
              unint64_t v61 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v62 = *(void *)this;
              if (v61 > 0xFFFFFFFFFFFFFFF5 || v61 + 10 > v2)
              {
                char v89 = 0;
                unsigned int v90 = 0;
                uint64_t v65 = 0;
                if (v2 <= v61) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v61)
                  {
                    LODWORD(v65) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_237;
                  }
                  unint64_t v91 = v61++;
                  char v92 = *(unsigned char *)(v62 + v91);
                  *((void *)this + 1) = v61;
                  v65 |= (unint64_t)(v92 & 0x7F) << v89;
                  if ((v92 & 0x80) == 0) {
                    break;
                  }
                  v89 += 7;
                  BOOL v14 = v90++ > 8;
                  if (v14)
                  {
                    LODWORD(v65) = 0;
LABEL_236:
                    unint64_t v2 = v91 + 1;
                    goto LABEL_237;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v65) = 0;
                }
                goto LABEL_236;
              }
              char v63 = 0;
              unsigned int v64 = 0;
              uint64_t v65 = 0;
              do
              {
                unint64_t v2 = v61 + 1;
                *((void *)this + 1) = v61 + 1;
                char v66 = *(unsigned char *)(v62 + v61);
                v65 |= (unint64_t)(v66 & 0x7F) << v63;
                if ((v66 & 0x80) == 0) {
                  goto LABEL_237;
                }
                v63 += 7;
                unint64_t v61 = v2;
                BOOL v14 = v64++ > 8;
              }
              while (!v14);
              LODWORD(v65) = 0;
LABEL_237:
              *(_DWORD *)(a1 + 196) = v65;
LABEL_203:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 0x15u:
              *(void *)(a1 + 224) |= 8uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_146;
              }
              *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
              goto LABEL_202;
            case 0x16u:
              *(void *)(a1 + 224) |= 4uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_146;
              }
              *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
              goto LABEL_202;
            case 0x17u:
              *(void *)(a1 + 224) |= 0x10uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_146;
              }
              *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
              goto LABEL_202;
            case 0x18u:
              *(void *)(a1 + 224) |= 0x100000000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v68 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v67 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v68 = v67 != 0;
              }
              *(unsigned char *)(a1 + 219) = v68;
              goto LABEL_203;
            case 0x19u:
              *(void *)(a1 + 224) |= 0x100uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_146;
              }
              *(void *)(a1 + 72) = *(void *)(*(void *)this + v2);
              goto LABEL_202;
            case 0x1Au:
              *(void *)(a1 + 224) |= 0x800uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_146;
              }
              *(void *)(a1 + 96) = *(void *)(*(void *)this + v2);
              goto LABEL_202;
            case 0x1Bu:
              *(void *)(a1 + 224) |= 0x10000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_146;
              }
              *(void *)(a1 + 136) = *(void *)(*(void *)this + v2);
              goto LABEL_202;
            case 0x1Cu:
              *(void *)(a1 + 224) |= 0x20000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_146;
              }
              *(void *)(a1 + 144) = *(void *)(*(void *)this + v2);
              goto LABEL_202;
            case 0x1Du:
              *(void *)(a1 + 224) |= 0x20uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_146;
              }
              *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
              goto LABEL_202;
            case 0x1Eu:
              *(void *)(a1 + 224) |= 0x400000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_146;
              }
              *(void *)(a1 + 184) = *(void *)(*(void *)this + v2);
              goto LABEL_202;
            case 0x1Fu:
              *(void *)(a1 + 224) |= 0x2000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_146;
              }
              *(void *)(a1 + 112) = *(void *)(*(void *)this + v2);
              goto LABEL_202;
            case 0x20u:
              *(void *)(a1 + 224) |= 0x100000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_146;
              }
              *(void *)(a1 + 168) = *(void *)(*(void *)this + v2);
              goto LABEL_202;
            case 0x21u:
              *(void *)(a1 + 224) |= 0x200uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_146;
              }
              *(void *)(a1 + 80) = *(void *)(*(void *)this + v2);
              goto LABEL_202;
            case 0x22u:
              *(void *)(a1 + 224) |= 0x200000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_146;
              }
              *(void *)(a1 + 176) = *(void *)(*(void *)this + v2);
              goto LABEL_202;
            case 0x23u:
              *(void *)(a1 + 224) |= 0x400uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 88) = *(void *)(*(void *)this + v2);
LABEL_202:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_146:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_203;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_203;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227C80F9C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(result + 224);
  if ((v4 & 0x40) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 56));
    uint64_t v4 = *(void *)(v3 + 224);
    if ((v4 & 0x80) == 0)
    {
LABEL_3:
      if ((v4 & 0x200000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_39;
    }
  }
  else if ((v4 & 0x80) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 64));
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 0x200000000) == 0)
  {
LABEL_4:
    if ((v4 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 2) == 0)
  {
LABEL_5:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 0x40000000) == 0)
  {
LABEL_6:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 0x80000) == 0)
  {
LABEL_7:
    if ((v4 & 0x400000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 160));
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 0x400000000) == 0)
  {
LABEL_8:
    if ((v4 & 1) == 0) {
      goto LABEL_9;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 1) == 0)
  {
LABEL_9:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_10:
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 0x80000000) == 0)
  {
LABEL_11:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 0x8000) == 0)
  {
LABEL_12:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 128));
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 0x40000) == 0)
  {
LABEL_13:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 152));
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 0x4000) == 0)
  {
LABEL_14:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 120));
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_15:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_16:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_17:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 0x800000) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 104));
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_20:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_21:
    if ((v4 & 8) == 0) {
      goto LABEL_22;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 8) == 0)
  {
LABEL_22:
    if ((v4 & 4) == 0) {
      goto LABEL_23;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32));
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 4) == 0)
  {
LABEL_23:
    if ((v4 & 0x10) == 0) {
      goto LABEL_24;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24));
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 0x10) == 0)
  {
LABEL_24:
    if ((v4 & 0x100000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_60;
  }
LABEL_59:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40));
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 0x100000000) == 0)
  {
LABEL_25:
    if ((v4 & 0x100) == 0) {
      goto LABEL_26;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 0x100) == 0)
  {
LABEL_26:
    if ((v4 & 0x800) == 0) {
      goto LABEL_27;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 72));
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 0x800) == 0)
  {
LABEL_27:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 96));
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 0x10000) == 0)
  {
LABEL_28:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_64;
  }
LABEL_63:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 136));
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 0x20000) == 0)
  {
LABEL_29:
    if ((v4 & 0x20) == 0) {
      goto LABEL_30;
    }
    goto LABEL_65;
  }
LABEL_64:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 144));
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 0x20) == 0)
  {
LABEL_30:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_66;
  }
LABEL_65:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48));
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 0x400000) == 0)
  {
LABEL_31:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_67;
  }
LABEL_66:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 184));
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 0x2000) == 0)
  {
LABEL_32:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_68;
  }
LABEL_67:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 112));
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 0x100000) == 0)
  {
LABEL_33:
    if ((v4 & 0x200) == 0) {
      goto LABEL_34;
    }
    goto LABEL_69;
  }
LABEL_68:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 168));
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 0x200) == 0)
  {
LABEL_34:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_35;
    }
LABEL_70:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 176));
    if ((*(void *)(v3 + 224) & 0x400) == 0) {
      return result;
    }
    goto LABEL_71;
  }
LABEL_69:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 80));
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 0x200000) != 0) {
    goto LABEL_70;
  }
LABEL_35:
  if ((v4 & 0x400) == 0) {
    return result;
  }
LABEL_71:
  double v5 = *(double *)(v3 + 88);

  return PB::Writer::write(this, v5);
}