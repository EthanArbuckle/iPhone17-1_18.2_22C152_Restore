uint64_t sub_227B6A108(uint64_t a1, PB::Reader *this)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  char v16;
  unsigned int v17;
  unint64_t v18;
  char v19;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  BOOL v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  char v118;
  unsigned int v119;
  uint64_t v120;
  unint64_t v121;
  char v122;
  unint64_t v123;
  unint64_t v124;
  uint64_t v125;
  char v126;
  unsigned int v127;
  uint64_t v128;
  unint64_t v129;
  char v130;
  unint64_t v131;
  unint64_t v132;
  unint64_t v133;
  unint64_t v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  uint64_t v142;
  char v143;
  unsigned int v144;
  uint64_t v145;
  unint64_t v146;
  char v147;
  unint64_t v148;
  unint64_t v149;
  uint64_t v150;
  char v151;
  unsigned int v152;
  uint64_t v153;
  unint64_t v154;
  char v155;
  uint64_t result;
  char v157;
  unsigned int v158;
  unint64_t v159;
  char v160;
  char v161;
  unsigned int v162;
  unint64_t v163;
  char v164;
  char v165;
  unsigned int v166;
  unint64_t v167;
  char v168;
  char v169;
  unsigned int v170;
  unint64_t v171;
  char v172;
  char v173;
  unsigned int v174;
  unint64_t v175;
  char v176;
  char v177;
  unsigned int v178;
  unint64_t v179;
  char v180;
  char v181;
  unsigned int v182;
  unint64_t v183;
  char v184;
  char v185;
  unsigned int v186;
  unint64_t v187;
  char v188;
  char v189;
  unsigned int v190;
  unint64_t v191;
  char v192;

  v2 = *((void *)this + 1);
  v3 = *((void *)this + 2);
  v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    v8 = a1 + 316;
    while (1)
    {
      v9 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      v10 = 0;
      v11 = 0;
      v12 = 0;
      while (1)
      {
        v13 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        v14 = *(unsigned char *)(v9 + v2);
        v12 |= (unint64_t)(v14 & 0x7F) << v10;
        if ((v14 & 0x80) == 0) {
          break;
        }
        v10 += 7;
        v2 = v13;
        v15 = v11++ > 8;
        if (v15) {
          goto LABEL_20;
        }
      }
LABEL_21:
      if ((v12 & 7) == 4)
      {
        v4 = 0;
        return v4 == 0;
      }
      v21 = v12 >> 3;
      if ((int)(v12 >> 3) > 200)
      {
        switch(v21)
        {
          case 0xC9:
            *(void *)v8 |= 2uLL;
            v140 = *((void *)this + 1);
            v141 = *((void *)this + 2);
            v142 = *(void *)this;
            if (v140 > 0xFFFFFFFFFFFFFFF5 || v140 + 10 > v141)
            {
              v185 = 0;
              v186 = 0;
              v145 = 0;
              if (v141 <= v140) {
                v141 = *((void *)this + 1);
              }
              while (1)
              {
                if (v141 == v140)
                {
                  v145 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_372;
                }
                v187 = v140 + 1;
                v188 = *(unsigned char *)(v142 + v140);
                *((void *)this + 1) = v187;
                v145 |= (unint64_t)(v188 & 0x7F) << v185;
                if ((v188 & 0x80) == 0) {
                  break;
                }
                v185 += 7;
                v140 = v187;
                v15 = v186++ > 8;
                if (v15)
                {
LABEL_325:
                  v145 = 0;
                  goto LABEL_372;
                }
              }
              if (*((unsigned char *)this + 24)) {
                v145 = 0;
              }
            }
            else
            {
              v143 = 0;
              v144 = 0;
              v145 = 0;
              while (1)
              {
                v146 = v140 + 1;
                *((void *)this + 1) = v140 + 1;
                v147 = *(unsigned char *)(v142 + v140);
                v145 |= (unint64_t)(v147 & 0x7F) << v143;
                if ((v147 & 0x80) == 0) {
                  break;
                }
                v143 += 7;
                v140 = v146;
                v15 = v144++ > 8;
                if (v15) {
                  goto LABEL_325;
                }
              }
            }
LABEL_372:
            *(void *)(a1 + 16) = v145;
            break;
          case 0xCA:
            *(void *)v8 |= 4uLL;
            v148 = *((void *)this + 1);
            v149 = *((void *)this + 2);
            v150 = *(void *)this;
            if (v148 > 0xFFFFFFFFFFFFFFF5 || v148 + 10 > v149)
            {
              v189 = 0;
              v190 = 0;
              v153 = 0;
              if (v149 <= v148) {
                v149 = *((void *)this + 1);
              }
              while (1)
              {
                if (v149 == v148)
                {
                  v153 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_376;
                }
                v191 = v148 + 1;
                v192 = *(unsigned char *)(v150 + v148);
                *((void *)this + 1) = v191;
                v153 |= (unint64_t)(v192 & 0x7F) << v189;
                if ((v192 & 0x80) == 0) {
                  break;
                }
                v189 += 7;
                v148 = v191;
                v15 = v190++ > 8;
                if (v15)
                {
LABEL_332:
                  v153 = 0;
                  goto LABEL_376;
                }
              }
              if (*((unsigned char *)this + 24)) {
                v153 = 0;
              }
            }
            else
            {
              v151 = 0;
              v152 = 0;
              v153 = 0;
              while (1)
              {
                v154 = v148 + 1;
                *((void *)this + 1) = v148 + 1;
                v155 = *(unsigned char *)(v150 + v148);
                v153 |= (unint64_t)(v155 & 0x7F) << v151;
                if ((v155 & 0x80) == 0) {
                  break;
                }
                v151 += 7;
                v148 = v154;
                v15 = v152++ > 8;
                if (v15) {
                  goto LABEL_332;
                }
              }
            }
LABEL_376:
            *(void *)(a1 + 24) = v153;
            break;
          case 0x12D:
            *(void *)v8 |= 0x400000000000uLL;
            v26 = *((void *)this + 1);
            if (v26 <= 0xFFFFFFFFFFFFFFFBLL && v26 + 4 <= *((void *)this + 2))
            {
              *(_DWORD *)(a1 + 228) = *(_DWORD *)(*(void *)this + v26);
LABEL_335:
              *((void *)this + 1) += 4;
            }
            else
            {
              *((unsigned char *)this + 24) = 1;
            }
            break;
          default:
LABEL_266:
            result = PB::Reader::skip(this);
            if (!result) {
              return result;
            }
            break;
        }
      }
      else
      {
        switch((int)v21)
        {
          case 1:
            *(unsigned char *)(v8 + 8) |= 8u;
            v22 = *((void *)this + 1);
            if (v22 >= *((void *)this + 2))
            {
              v25 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              v23 = v22 + 1;
              v24 = *(unsigned __int8 *)(*(void *)this + v22);
              *((void *)this + 1) = v23;
              v25 = v24 != 0;
            }
            *(unsigned char *)(a1 + 312) = v25;
            goto LABEL_336;
          case 2:
            *(unsigned char *)(v8 + 8) |= 2u;
            v27 = *((void *)this + 1);
            if (v27 > 0xFFFFFFFFFFFFFFFBLL || v27 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 304) = *(_DWORD *)(*(void *)this + v27);
            goto LABEL_335;
          case 3:
            *(unsigned char *)(v8 + 8) |= 4u;
            v28 = *((void *)this + 1);
            if (v28 > 0xFFFFFFFFFFFFFFFBLL || v28 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 308) = *(_DWORD *)(*(void *)this + v28);
            goto LABEL_335;
          case 4:
            *(void *)v8 |= 0x20uLL;
            v29 = *((void *)this + 1);
            v30 = *((void *)this + 2);
            v31 = *(void *)this;
            if (v29 <= 0xFFFFFFFFFFFFFFF5 && v29 + 10 <= v30)
            {
              v32 = 0;
              v33 = 0;
              v34 = 0;
              do
              {
                v35 = v29 + 1;
                *((void *)this + 1) = v29 + 1;
                v36 = *(unsigned char *)(v31 + v29);
                v34 |= (unint64_t)(v36 & 0x7F) << v32;
                if ((v36 & 0x80) == 0) {
                  goto LABEL_344;
                }
                v32 += 7;
                v29 = v35;
                v15 = v33++ > 8;
              }
              while (!v15);
LABEL_276:
              v34 = 0;
              goto LABEL_344;
            }
            v157 = 0;
            v158 = 0;
            v34 = 0;
            if (v30 <= v29) {
              v30 = *((void *)this + 1);
            }
            while (2)
            {
              if (v30 == v29)
              {
                v34 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                v159 = v29 + 1;
                v160 = *(unsigned char *)(v31 + v29);
                *((void *)this + 1) = v159;
                v34 |= (unint64_t)(v160 & 0x7F) << v157;
                if (v160 < 0)
                {
                  v157 += 7;
                  v29 = v159;
                  v15 = v158++ > 8;
                  if (v15) {
                    goto LABEL_276;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  v34 = 0;
                }
              }
              break;
            }
LABEL_344:
            *(void *)(a1 + 48) = v34;
            goto LABEL_336;
          case 5:
            *(void *)v8 |= 0x40uLL;
            v37 = *((void *)this + 1);
            v38 = *((void *)this + 2);
            v39 = *(void *)this;
            if (v37 <= 0xFFFFFFFFFFFFFFF5 && v37 + 10 <= v38)
            {
              v40 = 0;
              v41 = 0;
              v42 = 0;
              do
              {
                v43 = v37 + 1;
                *((void *)this + 1) = v37 + 1;
                v44 = *(unsigned char *)(v39 + v37);
                v42 |= (unint64_t)(v44 & 0x7F) << v40;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_348;
                }
                v40 += 7;
                v37 = v43;
                v15 = v41++ > 8;
              }
              while (!v15);
LABEL_283:
              v42 = 0;
              goto LABEL_348;
            }
            v161 = 0;
            v162 = 0;
            v42 = 0;
            if (v38 <= v37) {
              v38 = *((void *)this + 1);
            }
            while (2)
            {
              if (v38 == v37)
              {
                v42 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                v163 = v37 + 1;
                v164 = *(unsigned char *)(v39 + v37);
                *((void *)this + 1) = v163;
                v42 |= (unint64_t)(v164 & 0x7F) << v161;
                if (v164 < 0)
                {
                  v161 += 7;
                  v37 = v163;
                  v15 = v162++ > 8;
                  if (v15) {
                    goto LABEL_283;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  v42 = 0;
                }
              }
              break;
            }
LABEL_348:
            *(void *)(a1 + 56) = v42;
            goto LABEL_336;
          case 6:
            *(void *)v8 |= 1uLL;
            v45 = *((void *)this + 1);
            v46 = *((void *)this + 2);
            v47 = *(void *)this;
            if (v45 <= 0xFFFFFFFFFFFFFFF5 && v45 + 10 <= v46)
            {
              v48 = 0;
              v49 = 0;
              v50 = 0;
              do
              {
                v51 = v45 + 1;
                *((void *)this + 1) = v45 + 1;
                v52 = *(unsigned char *)(v47 + v45);
                v50 |= (unint64_t)(v52 & 0x7F) << v48;
                if ((v52 & 0x80) == 0) {
                  goto LABEL_352;
                }
                v48 += 7;
                v45 = v51;
                v15 = v49++ > 8;
              }
              while (!v15);
LABEL_290:
              v50 = 0;
              goto LABEL_352;
            }
            v165 = 0;
            v166 = 0;
            v50 = 0;
            if (v46 <= v45) {
              v46 = *((void *)this + 1);
            }
            while (2)
            {
              if (v46 == v45)
              {
                v50 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                v167 = v45 + 1;
                v168 = *(unsigned char *)(v47 + v45);
                *((void *)this + 1) = v167;
                v50 |= (unint64_t)(v168 & 0x7F) << v165;
                if (v168 < 0)
                {
                  v165 += 7;
                  v45 = v167;
                  v15 = v166++ > 8;
                  if (v15) {
                    goto LABEL_290;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  v50 = 0;
                }
              }
              break;
            }
LABEL_352:
            *(void *)(a1 + 8) = v50;
            goto LABEL_336;
          case 7:
            *(void *)v8 |= 0x8000uLL;
            v53 = *((void *)this + 1);
            if (v53 > 0xFFFFFFFFFFFFFFFBLL || v53 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 104) = *(_DWORD *)(*(void *)this + v53);
            goto LABEL_335;
          case 8:
            *(void *)v8 |= 0x80uLL;
            v54 = *((void *)this + 1);
            v55 = *((void *)this + 2);
            v56 = *(void *)this;
            if (v54 <= 0xFFFFFFFFFFFFFFF5 && v54 + 10 <= v55)
            {
              v57 = 0;
              v58 = 0;
              v59 = 0;
              do
              {
                v60 = v54 + 1;
                *((void *)this + 1) = v54 + 1;
                v61 = *(unsigned char *)(v56 + v54);
                v59 |= (unint64_t)(v61 & 0x7F) << v57;
                if ((v61 & 0x80) == 0) {
                  goto LABEL_356;
                }
                v57 += 7;
                v54 = v60;
                v15 = v58++ > 8;
              }
              while (!v15);
LABEL_297:
              v59 = 0;
              goto LABEL_356;
            }
            v169 = 0;
            v170 = 0;
            v59 = 0;
            if (v55 <= v54) {
              v55 = *((void *)this + 1);
            }
            while (2)
            {
              if (v55 == v54)
              {
                v59 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                v171 = v54 + 1;
                v172 = *(unsigned char *)(v56 + v54);
                *((void *)this + 1) = v171;
                v59 |= (unint64_t)(v172 & 0x7F) << v169;
                if (v172 < 0)
                {
                  v169 += 7;
                  v54 = v171;
                  v15 = v170++ > 8;
                  if (v15) {
                    goto LABEL_297;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  v59 = 0;
                }
              }
              break;
            }
LABEL_356:
            *(void *)(a1 + 64) = v59;
            goto LABEL_336;
          case 9:
            *(void *)v8 |= 0x100uLL;
            v62 = *((void *)this + 1);
            v63 = *((void *)this + 2);
            v64 = *(void *)this;
            if (v62 <= 0xFFFFFFFFFFFFFFF5 && v62 + 10 <= v63)
            {
              v65 = 0;
              v66 = 0;
              v67 = 0;
              do
              {
                v68 = v62 + 1;
                *((void *)this + 1) = v62 + 1;
                v69 = *(unsigned char *)(v64 + v62);
                v67 |= (unint64_t)(v69 & 0x7F) << v65;
                if ((v69 & 0x80) == 0) {
                  goto LABEL_360;
                }
                v65 += 7;
                v62 = v68;
                v15 = v66++ > 8;
              }
              while (!v15);
LABEL_304:
              v67 = 0;
              goto LABEL_360;
            }
            v173 = 0;
            v174 = 0;
            v67 = 0;
            if (v63 <= v62) {
              v63 = *((void *)this + 1);
            }
            while (2)
            {
              if (v63 == v62)
              {
                v67 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                v175 = v62 + 1;
                v176 = *(unsigned char *)(v64 + v62);
                *((void *)this + 1) = v175;
                v67 |= (unint64_t)(v176 & 0x7F) << v173;
                if (v176 < 0)
                {
                  v173 += 7;
                  v62 = v175;
                  v15 = v174++ > 8;
                  if (v15) {
                    goto LABEL_304;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  v67 = 0;
                }
              }
              break;
            }
LABEL_360:
            *(void *)(a1 + 72) = v67;
            goto LABEL_336;
          case 10:
            *(void *)v8 |= 0x20000uLL;
            v70 = *((void *)this + 1);
            if (v70 > 0xFFFFFFFFFFFFFFFBLL || v70 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 112) = *(_DWORD *)(*(void *)this + v70);
            goto LABEL_335;
          case 11:
            *(void *)v8 |= 0x10000uLL;
            v71 = *((void *)this + 1);
            if (v71 > 0xFFFFFFFFFFFFFFFBLL || v71 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 108) = *(_DWORD *)(*(void *)this + v71);
            goto LABEL_335;
          case 12:
            *(void *)v8 |= 0x2000000uLL;
            v72 = *((void *)this + 1);
            if (v72 > 0xFFFFFFFFFFFFFFFBLL || v72 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 144) = *(_DWORD *)(*(void *)this + v72);
            goto LABEL_335;
          case 13:
            *(void *)v8 |= 0x200uLL;
            v73 = *((void *)this + 1);
            if (v73 > 0xFFFFFFFFFFFFFFFBLL || v73 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v73);
            goto LABEL_335;
          case 14:
            *(void *)v8 |= 0x400uLL;
            v74 = *((void *)this + 1);
            if (v74 > 0xFFFFFFFFFFFFFFFBLL || v74 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v74);
            goto LABEL_335;
          case 15:
            *(void *)v8 |= 0x800000uLL;
            v75 = *((void *)this + 1);
            if (v75 > 0xFFFFFFFFFFFFFFFBLL || v75 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 136) = *(_DWORD *)(*(void *)this + v75);
            goto LABEL_335;
          case 16:
            *(void *)v8 |= 0x4000uLL;
            v76 = *((void *)this + 1);
            if (v76 > 0xFFFFFFFFFFFFFFFBLL || v76 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v76);
            goto LABEL_335;
          case 17:
            *(void *)v8 |= 0x400000uLL;
            v77 = *((void *)this + 1);
            if (v77 > 0xFFFFFFFFFFFFFFFBLL || v77 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 132) = *(_DWORD *)(*(void *)this + v77);
            goto LABEL_335;
          case 18:
            *(void *)v8 |= 0x2000uLL;
            v78 = *((void *)this + 1);
            if (v78 > 0xFFFFFFFFFFFFFFFBLL || v78 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v78);
            goto LABEL_335;
          case 19:
            *(void *)v8 |= 0x8000000uLL;
            v79 = *((void *)this + 1);
            if (v79 > 0xFFFFFFFFFFFFFFFBLL || v79 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 152) = *(_DWORD *)(*(void *)this + v79);
            goto LABEL_335;
          case 20:
            *(void *)v8 |= 0x100000uLL;
            v80 = *((void *)this + 1);
            if (v80 > 0xFFFFFFFFFFFFFFFBLL || v80 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 124) = *(_DWORD *)(*(void *)this + v80);
            goto LABEL_335;
          case 21:
            *(void *)v8 |= 0x1000uLL;
            v81 = *((void *)this + 1);
            if (v81 > 0xFFFFFFFFFFFFFFFBLL || v81 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v81);
            goto LABEL_335;
          case 22:
            *(void *)v8 |= 0x80000uLL;
            v82 = *((void *)this + 1);
            if (v82 > 0xFFFFFFFFFFFFFFFBLL || v82 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 120) = *(_DWORD *)(*(void *)this + v82);
            goto LABEL_335;
          case 23:
            *(void *)v8 |= 0x800uLL;
            v83 = *((void *)this + 1);
            if (v83 > 0xFFFFFFFFFFFFFFFBLL || v83 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v83);
            goto LABEL_335;
          case 24:
            *(void *)v8 |= 0x4000000uLL;
            v84 = *((void *)this + 1);
            if (v84 > 0xFFFFFFFFFFFFFFFBLL || v84 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 148) = *(_DWORD *)(*(void *)this + v84);
            goto LABEL_335;
          case 25:
            *(void *)v8 |= 0x40000000000000uLL;
            v85 = *((void *)this + 1);
            if (v85 > 0xFFFFFFFFFFFFFFFBLL || v85 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 260) = *(_DWORD *)(*(void *)this + v85);
            goto LABEL_335;
          case 26:
            *(void *)v8 |= 0x20000000000000uLL;
            v86 = *((void *)this + 1);
            if (v86 > 0xFFFFFFFFFFFFFFFBLL || v86 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 256) = *(_DWORD *)(*(void *)this + v86);
            goto LABEL_335;
          case 27:
            *(void *)v8 |= 0x4000000000000000uLL;
            v87 = *((void *)this + 1);
            if (v87 > 0xFFFFFFFFFFFFFFFBLL || v87 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 292) = *(_DWORD *)(*(void *)this + v87);
            goto LABEL_335;
          case 28:
            *(void *)v8 |= 0x800000000000uLL;
            v88 = *((void *)this + 1);
            if (v88 > 0xFFFFFFFFFFFFFFFBLL || v88 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 232) = *(_DWORD *)(*(void *)this + v88);
            goto LABEL_335;
          case 29:
            *(void *)v8 |= 0x1000000000000uLL;
            v89 = *((void *)this + 1);
            if (v89 > 0xFFFFFFFFFFFFFFFBLL || v89 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 236) = *(_DWORD *)(*(void *)this + v89);
            goto LABEL_335;
          case 30:
            *(void *)v8 |= 0x1000000000000000uLL;
            v90 = *((void *)this + 1);
            if (v90 > 0xFFFFFFFFFFFFFFFBLL || v90 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 284) = *(_DWORD *)(*(void *)this + v90);
            goto LABEL_335;
          case 31:
            *(void *)v8 |= 0x10000000000000uLL;
            v91 = *((void *)this + 1);
            if (v91 > 0xFFFFFFFFFFFFFFFBLL || v91 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 252) = *(_DWORD *)(*(void *)this + v91);
            goto LABEL_335;
          case 32:
            *(void *)v8 |= 0x800000000000000uLL;
            v92 = *((void *)this + 1);
            if (v92 > 0xFFFFFFFFFFFFFFFBLL || v92 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 280) = *(_DWORD *)(*(void *)this + v92);
            goto LABEL_335;
          case 33:
            *(void *)v8 |= 0x8000000000000uLL;
            v93 = *((void *)this + 1);
            if (v93 > 0xFFFFFFFFFFFFFFFBLL || v93 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 248) = *(_DWORD *)(*(void *)this + v93);
            goto LABEL_335;
          case 34:
            *(unsigned char *)(v8 + 8) |= 1u;
            v94 = *((void *)this + 1);
            if (v94 > 0xFFFFFFFFFFFFFFFBLL || v94 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 300) = *(_DWORD *)(*(void *)this + v94);
            goto LABEL_335;
          case 35:
            *(void *)v8 |= 0x200000000000000uLL;
            v95 = *((void *)this + 1);
            if (v95 > 0xFFFFFFFFFFFFFFFBLL || v95 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 272) = *(_DWORD *)(*(void *)this + v95);
            goto LABEL_335;
          case 36:
            *(void *)v8 |= 0x4000000000000uLL;
            v96 = *((void *)this + 1);
            if (v96 > 0xFFFFFFFFFFFFFFFBLL || v96 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 244) = *(_DWORD *)(*(void *)this + v96);
            goto LABEL_335;
          case 37:
            *(void *)v8 |= 0x100000000000000uLL;
            v97 = *((void *)this + 1);
            if (v97 > 0xFFFFFFFFFFFFFFFBLL || v97 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 268) = *(_DWORD *)(*(void *)this + v97);
            goto LABEL_335;
          case 38:
            *(void *)v8 |= 0x2000000000000uLL;
            v98 = *((void *)this + 1);
            if (v98 > 0xFFFFFFFFFFFFFFFBLL || v98 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 240) = *(_DWORD *)(*(void *)this + v98);
            goto LABEL_335;
          case 39:
            *(void *)v8 |= 0x8000000000000000;
            v99 = *((void *)this + 1);
            if (v99 > 0xFFFFFFFFFFFFFFFBLL || v99 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 296) = *(_DWORD *)(*(void *)this + v99);
            goto LABEL_335;
          case 40:
            *(void *)v8 |= 0x800000000uLL;
            v100 = *((void *)this + 1);
            if (v100 > 0xFFFFFFFFFFFFFFFBLL || v100 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 184) = *(_DWORD *)(*(void *)this + v100);
            goto LABEL_335;
          case 41:
            *(void *)v8 |= 0x400000000uLL;
            v101 = *((void *)this + 1);
            if (v101 > 0xFFFFFFFFFFFFFFFBLL || v101 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 180) = *(_DWORD *)(*(void *)this + v101);
            goto LABEL_335;
          case 42:
            *(void *)v8 |= 0x80000000000uLL;
            v102 = *((void *)this + 1);
            if (v102 > 0xFFFFFFFFFFFFFFFBLL || v102 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 216) = *(_DWORD *)(*(void *)this + v102);
            goto LABEL_335;
          case 43:
            *(void *)v8 |= 0x10000000uLL;
            v103 = *((void *)this + 1);
            if (v103 > 0xFFFFFFFFFFFFFFFBLL || v103 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 156) = *(_DWORD *)(*(void *)this + v103);
            goto LABEL_335;
          case 44:
            *(void *)v8 |= 0x20000000uLL;
            v104 = *((void *)this + 1);
            if (v104 > 0xFFFFFFFFFFFFFFFBLL || v104 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 160) = *(_DWORD *)(*(void *)this + v104);
            goto LABEL_335;
          case 45:
            *(void *)v8 |= 0x20000000000uLL;
            v105 = *((void *)this + 1);
            if (v105 > 0xFFFFFFFFFFFFFFFBLL || v105 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 208) = *(_DWORD *)(*(void *)this + v105);
            goto LABEL_335;
          case 46:
            *(void *)v8 |= 0x200000000uLL;
            v106 = *((void *)this + 1);
            if (v106 > 0xFFFFFFFFFFFFFFFBLL || v106 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 176) = *(_DWORD *)(*(void *)this + v106);
            goto LABEL_335;
          case 47:
            *(void *)v8 |= 0x10000000000uLL;
            v107 = *((void *)this + 1);
            if (v107 > 0xFFFFFFFFFFFFFFFBLL || v107 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 204) = *(_DWORD *)(*(void *)this + v107);
            goto LABEL_335;
          case 48:
            *(void *)v8 |= 0x100000000uLL;
            v108 = *((void *)this + 1);
            if (v108 > 0xFFFFFFFFFFFFFFFBLL || v108 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 172) = *(_DWORD *)(*(void *)this + v108);
            goto LABEL_335;
          case 49:
            *(void *)v8 |= 0x200000000000uLL;
            v109 = *((void *)this + 1);
            if (v109 > 0xFFFFFFFFFFFFFFFBLL || v109 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 224) = *(_DWORD *)(*(void *)this + v109);
            goto LABEL_335;
          case 50:
            *(void *)v8 |= 0x4000000000uLL;
            v110 = *((void *)this + 1);
            if (v110 > 0xFFFFFFFFFFFFFFFBLL || v110 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 196) = *(_DWORD *)(*(void *)this + v110);
            goto LABEL_335;
          case 51:
            *(void *)v8 |= 0x80000000uLL;
            v111 = *((void *)this + 1);
            if (v111 > 0xFFFFFFFFFFFFFFFBLL || v111 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 168) = *(_DWORD *)(*(void *)this + v111);
            goto LABEL_335;
          case 52:
            *(void *)v8 |= 0x2000000000uLL;
            v112 = *((void *)this + 1);
            if (v112 > 0xFFFFFFFFFFFFFFFBLL || v112 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 192) = *(_DWORD *)(*(void *)this + v112);
            goto LABEL_335;
          case 53:
            *(void *)v8 |= 0x40000000uLL;
            v113 = *((void *)this + 1);
            if (v113 > 0xFFFFFFFFFFFFFFFBLL || v113 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 164) = *(_DWORD *)(*(void *)this + v113);
            goto LABEL_335;
          case 54:
            *(void *)v8 |= 0x100000000000uLL;
            v114 = *((void *)this + 1);
            if (v114 > 0xFFFFFFFFFFFFFFFBLL || v114 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 220) = *(_DWORD *)(*(void *)this + v114);
            goto LABEL_335;
          case 55:
            *(void *)v8 |= 8uLL;
            v115 = *((void *)this + 1);
            v116 = *((void *)this + 2);
            v117 = *(void *)this;
            if (v115 <= 0xFFFFFFFFFFFFFFF5 && v115 + 10 <= v116)
            {
              v118 = 0;
              v119 = 0;
              v120 = 0;
              do
              {
                v121 = v115 + 1;
                *((void *)this + 1) = v115 + 1;
                v122 = *(unsigned char *)(v117 + v115);
                v120 |= (unint64_t)(v122 & 0x7F) << v118;
                if ((v122 & 0x80) == 0) {
                  goto LABEL_364;
                }
                v118 += 7;
                v115 = v121;
                v15 = v119++ > 8;
              }
              while (!v15);
LABEL_311:
              v120 = 0;
              goto LABEL_364;
            }
            v177 = 0;
            v178 = 0;
            v120 = 0;
            if (v116 <= v115) {
              v116 = *((void *)this + 1);
            }
            while (2)
            {
              if (v116 == v115)
              {
                v120 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                v179 = v115 + 1;
                v180 = *(unsigned char *)(v117 + v115);
                *((void *)this + 1) = v179;
                v120 |= (unint64_t)(v180 & 0x7F) << v177;
                if (v180 < 0)
                {
                  v177 += 7;
                  v115 = v179;
                  v15 = v178++ > 8;
                  if (v15) {
                    goto LABEL_311;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  v120 = 0;
                }
              }
              break;
            }
LABEL_364:
            *(void *)(a1 + 32) = v120;
            goto LABEL_336;
          case 56:
            *(void *)v8 |= 0x10uLL;
            v123 = *((void *)this + 1);
            v124 = *((void *)this + 2);
            v125 = *(void *)this;
            if (v123 <= 0xFFFFFFFFFFFFFFF5 && v123 + 10 <= v124)
            {
              v126 = 0;
              v127 = 0;
              v128 = 0;
              do
              {
                v129 = v123 + 1;
                *((void *)this + 1) = v123 + 1;
                v130 = *(unsigned char *)(v125 + v123);
                v128 |= (unint64_t)(v130 & 0x7F) << v126;
                if ((v130 & 0x80) == 0) {
                  goto LABEL_368;
                }
                v126 += 7;
                v123 = v129;
                v15 = v127++ > 8;
              }
              while (!v15);
LABEL_318:
              v128 = 0;
              goto LABEL_368;
            }
            v181 = 0;
            v182 = 0;
            v128 = 0;
            if (v124 <= v123) {
              v124 = *((void *)this + 1);
            }
            break;
          case 57:
            *(void *)v8 |= 0x1000000uLL;
            v131 = *((void *)this + 1);
            if (v131 > 0xFFFFFFFFFFFFFFFBLL || v131 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 140) = *(_DWORD *)(*(void *)this + v131);
            goto LABEL_335;
          case 58:
            *(void *)v8 |= 0x2000000000000000uLL;
            v132 = *((void *)this + 1);
            if (v132 > 0xFFFFFFFFFFFFFFFBLL || v132 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 288) = *(_DWORD *)(*(void *)this + v132);
            goto LABEL_335;
          case 59:
            *(void *)v8 |= 0x40000000000uLL;
            v133 = *((void *)this + 1);
            if (v133 > 0xFFFFFFFFFFFFFFFBLL || v133 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 212) = *(_DWORD *)(*(void *)this + v133);
            goto LABEL_335;
          case 60:
            *(void *)v8 |= 0x40000uLL;
            v134 = *((void *)this + 1);
            if (v134 > 0xFFFFFFFFFFFFFFFBLL || v134 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 116) = *(_DWORD *)(*(void *)this + v134);
            goto LABEL_335;
          case 61:
            *(void *)v8 |= 0x80000000000000uLL;
            v135 = *((void *)this + 1);
            if (v135 > 0xFFFFFFFFFFFFFFFBLL || v135 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 264) = *(_DWORD *)(*(void *)this + v135);
            goto LABEL_335;
          case 62:
            *(void *)v8 |= 0x1000000000uLL;
            v136 = *((void *)this + 1);
            if (v136 > 0xFFFFFFFFFFFFFFFBLL || v136 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 188) = *(_DWORD *)(*(void *)this + v136);
            goto LABEL_335;
          case 63:
            *(void *)v8 |= 0x200000uLL;
            v137 = *((void *)this + 1);
            if (v137 > 0xFFFFFFFFFFFFFFFBLL || v137 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v137);
            goto LABEL_335;
          case 64:
            *(void *)v8 |= 0x400000000000000uLL;
            v138 = *((void *)this + 1);
            if (v138 > 0xFFFFFFFFFFFFFFFBLL || v138 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 276) = *(_DWORD *)(*(void *)this + v138);
            goto LABEL_335;
          case 65:
            *(void *)v8 |= 0x8000000000uLL;
            v139 = *((void *)this + 1);
            if (v139 > 0xFFFFFFFFFFFFFFFBLL || v139 + 4 > *((void *)this + 2))
            {
LABEL_251:
              *((unsigned char *)this + 24) = 1;
              goto LABEL_336;
            }
            *(_DWORD *)(a1 + 200) = *(_DWORD *)(*(void *)this + v139);
            goto LABEL_335;
          default:
            goto LABEL_266;
        }
        while (1)
        {
          if (v124 == v123)
          {
            v128 = 0;
            *((unsigned char *)this + 24) = 1;
            goto LABEL_368;
          }
          v183 = v123 + 1;
          v184 = *(unsigned char *)(v125 + v123);
          *((void *)this + 1) = v183;
          v128 |= (unint64_t)(v184 & 0x7F) << v181;
          if ((v184 & 0x80) == 0) {
            break;
          }
          v181 += 7;
          v123 = v183;
          v15 = v182++ > 8;
          if (v15) {
            goto LABEL_318;
          }
        }
        if (*((unsigned char *)this + 24)) {
          v128 = 0;
        }
LABEL_368:
        *(void *)(a1 + 40) = v128;
      }
LABEL_336:
      v2 = *((void *)this + 1);
      v3 = *((void *)this + 2);
      v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    v16 = 0;
    v17 = 0;
    v12 = 0;
    if (v2 > v3) {
      v3 = v2;
    }
    while (v3 != v2)
    {
      v18 = v2 + 1;
      v19 = *(unsigned char *)(v9 + v2);
      *((void *)this + 1) = v18;
      v12 |= (unint64_t)(v19 & 0x7F) << v16;
      if ((v19 & 0x80) == 0) {
        goto LABEL_21;
      }
      v16 += 7;
      v2 = v18;
      if (v17++ >= 9)
      {
LABEL_20:
        v12 = 0;
        goto LABEL_21;
      }
    }
    v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B6B8D8(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  v4 = (uint64_t *)(result + 316);
  char v5 = *(unsigned char *)(result + 324);
  if ((v5 & 8) != 0)
  {
    result = PB::Writer::write(this);
    uint64_t v6 = *v4;
    char v5 = *((unsigned char *)v4 + 8);
    if ((v5 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v6 = *v4;
  if ((*(unsigned char *)(result + 324) & 2) != 0)
  {
LABEL_5:
    result = PB::Writer::write(this, *(float *)(v3 + 304));
    uint64_t v6 = *v4;
    char v5 = *((unsigned char *)v4 + 8);
  }
LABEL_6:
  if ((v5 & 4) != 0)
  {
    result = PB::Writer::write(this, *(float *)(v3 + 308));
    uint64_t v6 = *v4;
    char v5 = *((unsigned char *)v4 + 8);
    if ((*v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v6 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_75;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_8;
  }
  result = PB::Writer::writeVarInt(this);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x40) == 0)
  {
LABEL_9:
    if ((v6 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_76;
  }
LABEL_75:
  result = PB::Writer::writeVarInt(this);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 1) == 0)
  {
LABEL_10:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_77;
  }
LABEL_76:
  result = PB::Writer::writeVarInt(this);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x8000) == 0)
  {
LABEL_11:
    if ((v6 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_78;
  }
LABEL_77:
  result = PB::Writer::write(this, *(float *)(v3 + 104));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x80) == 0)
  {
LABEL_12:
    if ((v6 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_79;
  }
LABEL_78:
  result = PB::Writer::writeVarInt(this);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x100) == 0)
  {
LABEL_13:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_80;
  }
LABEL_79:
  result = PB::Writer::writeVarInt(this);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x20000) == 0)
  {
LABEL_14:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_81;
  }
LABEL_80:
  result = PB::Writer::write(this, *(float *)(v3 + 112));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x10000) == 0)
  {
LABEL_15:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_82;
  }
LABEL_81:
  result = PB::Writer::write(this, *(float *)(v3 + 108));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x2000000) == 0)
  {
LABEL_16:
    if ((v6 & 0x200) == 0) {
      goto LABEL_17;
    }
    goto LABEL_83;
  }
LABEL_82:
  result = PB::Writer::write(this, *(float *)(v3 + 144));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x200) == 0)
  {
LABEL_17:
    if ((v6 & 0x400) == 0) {
      goto LABEL_18;
    }
    goto LABEL_84;
  }
LABEL_83:
  result = PB::Writer::write(this, *(float *)(v3 + 80));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x400) == 0)
  {
LABEL_18:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_85;
  }
LABEL_84:
  result = PB::Writer::write(this, *(float *)(v3 + 84));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x800000) == 0)
  {
LABEL_19:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_86;
  }
LABEL_85:
  result = PB::Writer::write(this, *(float *)(v3 + 136));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x4000) == 0)
  {
LABEL_20:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_87;
  }
LABEL_86:
  result = PB::Writer::write(this, *(float *)(v3 + 100));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x400000) == 0)
  {
LABEL_21:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_88;
  }
LABEL_87:
  result = PB::Writer::write(this, *(float *)(v3 + 132));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x2000) == 0)
  {
LABEL_22:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_89;
  }
LABEL_88:
  result = PB::Writer::write(this, *(float *)(v3 + 96));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x8000000) == 0)
  {
LABEL_23:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_90;
  }
LABEL_89:
  result = PB::Writer::write(this, *(float *)(v3 + 152));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x100000) == 0)
  {
LABEL_24:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_91;
  }
LABEL_90:
  result = PB::Writer::write(this, *(float *)(v3 + 124));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x1000) == 0)
  {
LABEL_25:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_92;
  }
LABEL_91:
  result = PB::Writer::write(this, *(float *)(v3 + 92));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x80000) == 0)
  {
LABEL_26:
    if ((v6 & 0x800) == 0) {
      goto LABEL_27;
    }
    goto LABEL_93;
  }
LABEL_92:
  result = PB::Writer::write(this, *(float *)(v3 + 120));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x800) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_94;
  }
LABEL_93:
  result = PB::Writer::write(this, *(float *)(v3 + 88));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x40000000000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_95;
  }
LABEL_94:
  result = PB::Writer::write(this, *(float *)(v3 + 148));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x40000000000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x20000000000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_96;
  }
LABEL_95:
  result = PB::Writer::write(this, *(float *)(v3 + 260));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x20000000000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x4000000000000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_97;
  }
LABEL_96:
  result = PB::Writer::write(this, *(float *)(v3 + 256));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x4000000000000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x800000000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_98;
  }
LABEL_97:
  result = PB::Writer::write(this, *(float *)(v3 + 292));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x800000000000) == 0)
  {
LABEL_32:
    if ((v6 & 0x1000000000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_99;
  }
LABEL_98:
  result = PB::Writer::write(this, *(float *)(v3 + 232));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x1000000000000) == 0)
  {
LABEL_33:
    if ((v6 & 0x1000000000000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_100;
  }
LABEL_99:
  result = PB::Writer::write(this, *(float *)(v3 + 236));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x1000000000000000) == 0)
  {
LABEL_34:
    if ((v6 & 0x10000000000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_101;
  }
LABEL_100:
  result = PB::Writer::write(this, *(float *)(v3 + 284));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x10000000000000) == 0)
  {
LABEL_35:
    if ((v6 & 0x800000000000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_102;
  }
LABEL_101:
  result = PB::Writer::write(this, *(float *)(v3 + 252));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x800000000000000) == 0)
  {
LABEL_36:
    if ((v6 & 0x8000000000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_103;
  }
LABEL_102:
  result = PB::Writer::write(this, *(float *)(v3 + 280));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x8000000000000) == 0)
  {
LABEL_37:
    if ((v5 & 1) == 0) {
      goto LABEL_38;
    }
    goto LABEL_104;
  }
LABEL_103:
  result = PB::Writer::write(this, *(float *)(v3 + 248));
  uint64_t v6 = *v4;
  if ((v4[1] & 1) == 0)
  {
LABEL_38:
    if ((v6 & 0x200000000000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_105;
  }
LABEL_104:
  result = PB::Writer::write(this, *(float *)(v3 + 300));
  uint64_t v6 = *v4;
  if ((*v4 & 0x200000000000000) == 0)
  {
LABEL_39:
    if ((v6 & 0x4000000000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_106;
  }
LABEL_105:
  result = PB::Writer::write(this, *(float *)(v3 + 272));
  uint64_t v6 = *v4;
  if ((*v4 & 0x4000000000000) == 0)
  {
LABEL_40:
    if ((v6 & 0x100000000000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_107;
  }
LABEL_106:
  result = PB::Writer::write(this, *(float *)(v3 + 244));
  uint64_t v6 = *v4;
  if ((*v4 & 0x100000000000000) == 0)
  {
LABEL_41:
    if ((v6 & 0x2000000000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_108;
  }
LABEL_107:
  result = PB::Writer::write(this, *(float *)(v3 + 268));
  uint64_t v6 = *v4;
  if ((*v4 & 0x2000000000000) == 0)
  {
LABEL_42:
    if ((v6 & 0x8000000000000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_109;
  }
LABEL_108:
  result = PB::Writer::write(this, *(float *)(v3 + 240));
  uint64_t v6 = *v4;
  if ((*v4 & 0x8000000000000000) == 0)
  {
LABEL_43:
    if ((v6 & 0x800000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_110;
  }
LABEL_109:
  result = PB::Writer::write(this, *(float *)(v3 + 296));
  uint64_t v6 = *v4;
  if ((*v4 & 0x800000000) == 0)
  {
LABEL_44:
    if ((v6 & 0x400000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_111;
  }
LABEL_110:
  result = PB::Writer::write(this, *(float *)(v3 + 184));
  uint64_t v6 = *v4;
  if ((*v4 & 0x400000000) == 0)
  {
LABEL_45:
    if ((v6 & 0x80000000000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_112;
  }
LABEL_111:
  result = PB::Writer::write(this, *(float *)(v3 + 180));
  uint64_t v6 = *v4;
  if ((*v4 & 0x80000000000) == 0)
  {
LABEL_46:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_113;
  }
LABEL_112:
  result = PB::Writer::write(this, *(float *)(v3 + 216));
  uint64_t v6 = *v4;
  if ((*v4 & 0x10000000) == 0)
  {
LABEL_47:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_114;
  }
LABEL_113:
  result = PB::Writer::write(this, *(float *)(v3 + 156));
  uint64_t v6 = *v4;
  if ((*v4 & 0x20000000) == 0)
  {
LABEL_48:
    if ((v6 & 0x20000000000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_115;
  }
LABEL_114:
  result = PB::Writer::write(this, *(float *)(v3 + 160));
  uint64_t v6 = *v4;
  if ((*v4 & 0x20000000000) == 0)
  {
LABEL_49:
    if ((v6 & 0x200000000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_116;
  }
LABEL_115:
  result = PB::Writer::write(this, *(float *)(v3 + 208));
  uint64_t v6 = *v4;
  if ((*v4 & 0x200000000) == 0)
  {
LABEL_50:
    if ((v6 & 0x10000000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_117;
  }
LABEL_116:
  result = PB::Writer::write(this, *(float *)(v3 + 176));
  uint64_t v6 = *v4;
  if ((*v4 & 0x10000000000) == 0)
  {
LABEL_51:
    if ((v6 & 0x100000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_118;
  }
LABEL_117:
  result = PB::Writer::write(this, *(float *)(v3 + 204));
  uint64_t v6 = *v4;
  if ((*v4 & 0x100000000) == 0)
  {
LABEL_52:
    if ((v6 & 0x200000000000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_119;
  }
LABEL_118:
  result = PB::Writer::write(this, *(float *)(v3 + 172));
  uint64_t v6 = *v4;
  if ((*v4 & 0x200000000000) == 0)
  {
LABEL_53:
    if ((v6 & 0x4000000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_120;
  }
LABEL_119:
  result = PB::Writer::write(this, *(float *)(v3 + 224));
  uint64_t v6 = *v4;
  if ((*v4 & 0x4000000000) == 0)
  {
LABEL_54:
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_121;
  }
LABEL_120:
  result = PB::Writer::write(this, *(float *)(v3 + 196));
  uint64_t v6 = *v4;
  if ((*v4 & 0x80000000) == 0)
  {
LABEL_55:
    if ((v6 & 0x2000000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_122;
  }
LABEL_121:
  result = PB::Writer::write(this, *(float *)(v3 + 168));
  uint64_t v6 = *v4;
  if ((*v4 & 0x2000000000) == 0)
  {
LABEL_56:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_123;
  }
LABEL_122:
  result = PB::Writer::write(this, *(float *)(v3 + 192));
  uint64_t v6 = *v4;
  if ((*v4 & 0x40000000) == 0)
  {
LABEL_57:
    if ((v6 & 0x100000000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_124;
  }
LABEL_123:
  result = PB::Writer::write(this, *(float *)(v3 + 164));
  uint64_t v6 = *v4;
  if ((*v4 & 0x100000000000) == 0)
  {
LABEL_58:
    if ((v6 & 8) == 0) {
      goto LABEL_59;
    }
    goto LABEL_125;
  }
LABEL_124:
  result = PB::Writer::write(this, *(float *)(v3 + 220));
  uint64_t v6 = *v4;
  if ((*v4 & 8) == 0)
  {
LABEL_59:
    if ((v6 & 0x10) == 0) {
      goto LABEL_60;
    }
    goto LABEL_126;
  }
LABEL_125:
  result = PB::Writer::writeVarInt(this);
  uint64_t v6 = *v4;
  if ((*v4 & 0x10) == 0)
  {
LABEL_60:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_127;
  }
LABEL_126:
  result = PB::Writer::writeVarInt(this);
  uint64_t v6 = *v4;
  if ((*v4 & 0x1000000) == 0)
  {
LABEL_61:
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_128;
  }
LABEL_127:
  result = PB::Writer::write(this, *(float *)(v3 + 140));
  uint64_t v6 = *v4;
  if ((*v4 & 0x2000000000000000) == 0)
  {
LABEL_62:
    if ((v6 & 0x40000000000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_129;
  }
LABEL_128:
  result = PB::Writer::write(this, *(float *)(v3 + 288));
  uint64_t v6 = *v4;
  if ((*v4 & 0x40000000000) == 0)
  {
LABEL_63:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_130;
  }
LABEL_129:
  result = PB::Writer::write(this, *(float *)(v3 + 212));
  uint64_t v6 = *v4;
  if ((*v4 & 0x40000) == 0)
  {
LABEL_64:
    if ((v6 & 0x80000000000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_131;
  }
LABEL_130:
  result = PB::Writer::write(this, *(float *)(v3 + 116));
  uint64_t v6 = *v4;
  if ((*v4 & 0x80000000000000) == 0)
  {
LABEL_65:
    if ((v6 & 0x1000000000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_132;
  }
LABEL_131:
  result = PB::Writer::write(this, *(float *)(v3 + 264));
  uint64_t v6 = *v4;
  if ((*v4 & 0x1000000000) == 0)
  {
LABEL_66:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_133;
  }
LABEL_132:
  result = PB::Writer::write(this, *(float *)(v3 + 188));
  uint64_t v6 = *v4;
  if ((*v4 & 0x200000) == 0)
  {
LABEL_67:
    if ((v6 & 0x400000000000000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_134;
  }
LABEL_133:
  result = PB::Writer::write(this, *(float *)(v3 + 128));
  uint64_t v6 = *v4;
  if ((*v4 & 0x400000000000000) == 0)
  {
LABEL_68:
    if ((v6 & 0x8000000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_135;
  }
LABEL_134:
  result = PB::Writer::write(this, *(float *)(v3 + 276));
  uint64_t v6 = *v4;
  if ((*v4 & 0x8000000000) == 0)
  {
LABEL_69:
    if ((v6 & 2) == 0) {
      goto LABEL_70;
    }
    goto LABEL_136;
  }
LABEL_135:
  result = PB::Writer::write(this, *(float *)(v3 + 200));
  uint64_t v6 = *v4;
  if ((*v4 & 2) == 0)
  {
LABEL_70:
    if ((v6 & 4) == 0) {
      goto LABEL_71;
    }
LABEL_137:
    result = PB::Writer::writeVarInt(this);
    if ((*v4 & 0x400000000000) == 0) {
      return result;
    }
    goto LABEL_138;
  }
LABEL_136:
  result = PB::Writer::writeVarInt(this);
  uint64_t v6 = *v4;
  if ((*v4 & 4) != 0) {
    goto LABEL_137;
  }
LABEL_71:
  if ((v6 & 0x400000000000) == 0) {
    return result;
  }
LABEL_138:
  float v7 = *(float *)(v3 + 228);

  return PB::Writer::write(this, v7);
}

uint64_t sub_227B6C118(uint64_t result)
{
  *(void *)result = &unk_26DC20E70;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

void sub_227B6C140(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B6C178(uint64_t result, uint64_t a2)
{
  *(void *)result = &unk_26DC20E70;
  *(_DWORD *)(result + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 28);
  if (v2)
  {
    int v4 = *(_DWORD *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 28) = 1;
    *(_DWORD *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 28) & 8) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 20);
    v3 |= 8u;
    *(unsigned char *)(result + 28) = v3;
    *(_DWORD *)(result + 20) = v5;
    char v2 = *(unsigned char *)(a2 + 28);
  }
LABEL_6:
  if ((v2 & 0x10) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 24);
    v3 |= 0x10u;
    *(unsigned char *)(result + 28) = v3;
    *(_DWORD *)(result + 24) = v6;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 2) == 0)
    {
LABEL_8:
      if ((v2 & 4) == 0) {
        return result;
      }
LABEL_12:
      int v8 = *(_DWORD *)(a2 + 16);
      *(unsigned char *)(result + 28) = v3 | 4;
      *(_DWORD *)(result + 16) = v8;
      return result;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 12);
  v3 |= 2u;
  *(unsigned char *)(result + 28) = v3;
  *(_DWORD *)(result + 12) = v7;
  if ((*(unsigned char *)(a2 + 28) & 4) != 0) {
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_227B6C230(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 28);
  if (v5)
  {
    PB::TextFormatter::format(this, "configThreshold1", *(float *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 28);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 28) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "debugX", *(float *)(a1 + 12));
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(this, "debugY");
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(this, "outputA", *(float *)(a1 + 20));
  if ((*(unsigned char *)(a1 + 28) & 0x10) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "outputB");
LABEL_7:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B6C314(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 0x186A0u:
              *(unsigned char *)(a1 + 28) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_39;
              }
              *(_DWORD *)(a1 + 8) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_62;
            case 0x186A1u:
              *(unsigned char *)(a1 + 28) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_39;
              }
              *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_62;
            case 0x186A2u:
              *(unsigned char *)(a1 + 28) |= 0x10u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v33 = 0;
                unsigned int v34 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_67;
                  }
                  unint64_t v35 = v21++;
                  char v36 = *(unsigned char *)(v22 + v35);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v36 & 0x7F) << v33;
                  if ((v36 & 0x80) == 0) {
                    break;
                  }
                  v33 += 7;
                  BOOL v14 = v34++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_66:
                    unint64_t v2 = v35 + 1;
                    goto LABEL_67;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_66;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_67;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_67:
              *(_DWORD *)(a1 + 24) = v25;
              goto LABEL_73;
            case 0x186A3u:
              *(unsigned char *)(a1 + 28) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 12) = *(_DWORD *)(*(void *)this + v2);
LABEL_62:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_39:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_73;
            case 0x186A4u:
              *(unsigned char *)(a1 + 28) |= 4u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v37 = 0;
                unsigned int v38 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_72;
                  }
                  unint64_t v39 = v27++;
                  char v40 = *(unsigned char *)(v28 + v39);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v40 & 0x7F) << v37;
                  if ((v40 & 0x80) == 0) {
                    break;
                  }
                  v37 += 7;
                  BOOL v14 = v38++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_71:
                    unint64_t v2 = v39 + 1;
                    goto LABEL_72;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_71;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_72;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_72:
              *(_DWORD *)(a1 + 16) = v31;
LABEL_73:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_73;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B6C738(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 28);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 28) & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 0x10) == 0)
  {
LABEL_4:
    if ((v4 & 2) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 12));
    if ((*(unsigned char *)(v3 + 28) & 4) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 4) == 0) {
    return result;
  }
LABEL_11:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227B6C814(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC20EA8;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

void sub_227B6C83C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B6C874(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC20EA8;
  *(_DWORD *)(result + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 28);
  if (v2)
  {
    int v4 = *(_DWORD *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 28) = 1;
    *(_DWORD *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 28) & 8) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 20);
    v3 |= 8u;
    *(unsigned char *)(result + 28) = v3;
    *(_DWORD *)(result + 20) = v5;
    char v2 = *(unsigned char *)(a2 + 28);
  }
LABEL_6:
  if ((v2 & 0x10) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 24);
    v3 |= 0x10u;
    *(unsigned char *)(result + 28) = v3;
    *(_DWORD *)(result + 24) = v6;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 2) == 0)
    {
LABEL_8:
      if ((v2 & 4) == 0) {
        return result;
      }
LABEL_12:
      int v8 = *(_DWORD *)(a2 + 16);
      *(unsigned char *)(result + 28) = v3 | 4;
      *(_DWORD *)(result + 16) = v8;
      return result;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 12);
  v3 |= 2u;
  *(unsigned char *)(result + 28) = v3;
  *(_DWORD *)(result + 12) = v7;
  if ((*(unsigned char *)(a2 + 28) & 4) != 0) {
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_227B6C92C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 28);
  if (v5)
  {
    PB::TextFormatter::format(this, "configThreshold1", *(float *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 28);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 28) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "debugX", *(float *)(a1 + 12));
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(this, "debugY");
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(this, "outputA", *(float *)(a1 + 20));
  if ((*(unsigned char *)(a1 + 28) & 0x10) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "outputB");
LABEL_7:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B6CA10(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 0x186A0u:
              *(unsigned char *)(a1 + 28) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_39;
              }
              *(_DWORD *)(a1 + 8) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_62;
            case 0x186A1u:
              *(unsigned char *)(a1 + 28) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_39;
              }
              *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_62;
            case 0x186A2u:
              *(unsigned char *)(a1 + 28) |= 0x10u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v33 = 0;
                unsigned int v34 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_67;
                  }
                  unint64_t v35 = v21++;
                  char v36 = *(unsigned char *)(v22 + v35);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v36 & 0x7F) << v33;
                  if ((v36 & 0x80) == 0) {
                    break;
                  }
                  v33 += 7;
                  BOOL v14 = v34++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_66:
                    unint64_t v2 = v35 + 1;
                    goto LABEL_67;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_66;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_67;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_67:
              *(_DWORD *)(a1 + 24) = v25;
              goto LABEL_73;
            case 0x186A3u:
              *(unsigned char *)(a1 + 28) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 12) = *(_DWORD *)(*(void *)this + v2);
LABEL_62:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_39:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_73;
            case 0x186A4u:
              *(unsigned char *)(a1 + 28) |= 4u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v37 = 0;
                unsigned int v38 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_72;
                  }
                  unint64_t v39 = v27++;
                  char v40 = *(unsigned char *)(v28 + v39);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v40 & 0x7F) << v37;
                  if ((v40 & 0x80) == 0) {
                    break;
                  }
                  v37 += 7;
                  BOOL v14 = v38++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_71:
                    unint64_t v2 = v39 + 1;
                    goto LABEL_72;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_71;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_72;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_72:
              *(_DWORD *)(a1 + 16) = v31;
LABEL_73:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_73;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B6CE34(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 28);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 28) & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 0x10) == 0)
  {
LABEL_4:
    if ((v4 & 2) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 12));
    if ((*(unsigned char *)(v3 + 28) & 4) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 4) == 0) {
    return result;
  }
LABEL_11:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227B6CF10(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC20EE0;
  *(void *)(result + 204) = 0;
  *(_DWORD *)(result + 212) = 0;
  return result;
}

void sub_227B6CF3C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B6CF74(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC20EE0;
  *(void *)(result + 204) = 0;
  *(_DWORD *)(result + 212) = 0;
  uint64_t v2 = *(void *)(a2 + 204);
  if (v2)
  {
    unint64_t v4 = 0;
    uint64_t v6 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 214) = 0;
    *(_WORD *)(result + 212) = 0;
    uint64_t v3 = 1;
    *(void *)(result + 204) = 1;
    *(void *)(result + 8) = v6;
    int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
    uint64_t v2 = *(void *)(a2 + 204);
    if ((v2 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v3 = 0;
  unint64_t v4 = 0;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  if ((v2 & 0x10) != 0)
  {
LABEL_5:
    int v7 = *(_DWORD *)(a2 + 40);
    v3 |= 0x10uLL;
    *(void *)(result + 204) = v3;
    *(_WORD *)(result + 212) = 0;
    *(unsigned char *)(result + 214) = 0;
    *(_DWORD *)(result + 40) = v7;
    int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
    uint64_t v2 = *(void *)(a2 + 204);
  }
LABEL_6:
  if ((v5 & 2) != 0)
  {
    char v8 = *(unsigned char *)(a2 + 188);
    unint64_t v4 = 2;
    *(void *)(result + 204) = v3;
    *(unsigned char *)(result + 214) = 0;
    *(_WORD *)(result + 212) = 2;
    *(unsigned char *)(result + 188) = v8;
    int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
    uint64_t v2 = *(void *)(a2 + 204);
    if ((v2 & 0x200000) == 0)
    {
LABEL_8:
      if ((v5 & 4) == 0) {
        goto LABEL_9;
      }
      goto LABEL_88;
    }
  }
  else if ((v2 & 0x200000) == 0)
  {
    goto LABEL_8;
  }
  int v9 = *(_DWORD *)(a2 + 108);
  v3 |= 0x200000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 108) = v9;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((*(_WORD *)(a2 + 212) & 4) == 0)
  {
LABEL_9:
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_89;
  }
LABEL_88:
  char v10 = *(unsigned char *)(a2 + 189);
  unint64_t v11 = v4 >> 16;
  v4 |= 4uLL;
  *(void *)(result + 204) = v3;
  *(unsigned char *)(result + 214) = v11;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 189) = v10;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 2) == 0)
  {
LABEL_10:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_90;
  }
LABEL_89:
  uint64_t v12 = *(void *)(a2 + 16);
  v3 |= 2uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(void *)(result + 16) = v12;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x400000) == 0)
  {
LABEL_11:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_91;
  }
LABEL_90:
  int v13 = *(_DWORD *)(a2 + 112);
  v3 |= 0x400000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 112) = v13;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x4000) == 0)
  {
LABEL_12:
    if ((v2 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_92;
  }
LABEL_91:
  int v14 = *(_DWORD *)(a2 + 80);
  v3 |= 0x4000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 80) = v14;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x40) == 0)
  {
LABEL_13:
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_93;
  }
LABEL_92:
  int v15 = *(_DWORD *)(a2 + 48);
  v3 |= 0x40uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 48) = v15;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_14:
    if ((v2 & 0x400000000000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_94;
  }
LABEL_93:
  int v16 = *(_DWORD *)(a2 + 128);
  v3 |= 0x4000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 128) = v16;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x400000000000000) == 0)
  {
LABEL_15:
    if ((v2 & 0x400000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_95;
  }
LABEL_94:
  char v17 = *(unsigned char *)(a2 + 181);
  v3 |= 0x400000000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 181) = v17;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x400000000) == 0)
  {
LABEL_16:
    if ((v5 & 0x400) == 0) {
      goto LABEL_17;
    }
    goto LABEL_96;
  }
LABEL_95:
  char v18 = *(unsigned char *)(a2 + 157);
  v3 |= 0x400000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 157) = v18;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((*(_WORD *)(a2 + 212) & 0x400) == 0)
  {
LABEL_17:
    if ((v2 & 0x40000000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_97;
  }
LABEL_96:
  char v19 = *(unsigned char *)(a2 + 197);
  unint64_t v20 = v4 >> 16;
  v4 |= 0x400uLL;
  *(void *)(result + 204) = v3;
  *(unsigned char *)(result + 214) = v20;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 197) = v19;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x40000000000) == 0)
  {
LABEL_18:
    if ((v2 & 0x4000000000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_98;
  }
LABEL_97:
  char v21 = *(unsigned char *)(a2 + 165);
  v3 |= 0x40000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 165) = v21;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x4000000000000) == 0)
  {
LABEL_19:
    if ((v5 & 8) == 0) {
      goto LABEL_20;
    }
    goto LABEL_99;
  }
LABEL_98:
  char v22 = *(unsigned char *)(a2 + 173);
  v3 |= 0x4000000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 173) = v22;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((*(_WORD *)(a2 + 212) & 8) == 0)
  {
LABEL_20:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_100;
  }
LABEL_99:
  char v23 = *(unsigned char *)(a2 + 190);
  unint64_t v24 = v4 >> 16;
  v4 |= 8uLL;
  *(void *)(result + 204) = v3;
  *(unsigned char *)(result + 214) = v24;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 190) = v23;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x40000) == 0)
  {
LABEL_21:
    if ((v2 & 0x400) == 0) {
      goto LABEL_22;
    }
    goto LABEL_101;
  }
LABEL_100:
  int v25 = *(_DWORD *)(a2 + 96);
  v3 |= 0x40000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 96) = v25;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x400) == 0)
  {
LABEL_22:
    if ((v2 & 0x40000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_102;
  }
LABEL_101:
  int v26 = *(_DWORD *)(a2 + 64);
  v3 |= 0x400uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 64) = v26;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x40000000) == 0)
  {
LABEL_23:
    if ((v2 & 0x4000000000000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_103;
  }
LABEL_102:
  int v27 = *(_DWORD *)(a2 + 144);
  v3 |= 0x40000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 144) = v27;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x4000000000000000) == 0)
  {
LABEL_24:
    if ((v2 & 0x4000000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_104;
  }
LABEL_103:
  char v28 = *(unsigned char *)(a2 + 185);
  v3 |= 0x4000000000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 185) = v28;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x4000000000) == 0)
  {
LABEL_25:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_105;
  }
LABEL_104:
  char v29 = *(unsigned char *)(a2 + 161);
  v3 |= 0x4000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 161) = v29;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((*(_WORD *)(a2 + 212) & 0x4000) == 0)
  {
LABEL_26:
    if ((v2 & 0x400000000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_106;
  }
LABEL_105:
  char v30 = *(unsigned char *)(a2 + 201);
  unint64_t v31 = v4 >> 16;
  v4 |= 0x4000uLL;
  *(void *)(result + 204) = v3;
  *(unsigned char *)(result + 214) = v31;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 201) = v30;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x400000000000) == 0)
  {
LABEL_27:
    if ((v2 & 0x40000000000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_107;
  }
LABEL_106:
  char v32 = *(unsigned char *)(a2 + 169);
  v3 |= 0x400000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 169) = v32;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x40000000000000) == 0)
  {
LABEL_28:
    if ((v5 & 0x40) == 0) {
      goto LABEL_29;
    }
    goto LABEL_108;
  }
LABEL_107:
  char v33 = *(unsigned char *)(a2 + 177);
  v3 |= 0x40000000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 177) = v33;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((*(_WORD *)(a2 + 212) & 0x40) == 0)
  {
LABEL_29:
    if ((v2 & 4) == 0) {
      goto LABEL_30;
    }
    goto LABEL_109;
  }
LABEL_108:
  char v34 = *(unsigned char *)(a2 + 193);
  unint64_t v35 = v4 >> 16;
  v4 |= 0x40uLL;
  *(void *)(result + 204) = v3;
  *(unsigned char *)(result + 214) = v35;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 193) = v34;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 4) == 0)
  {
LABEL_30:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_110;
  }
LABEL_109:
  uint64_t v36 = *(void *)(a2 + 24);
  v3 |= 4uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(void *)(result + 24) = v36;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x800000) == 0)
  {
LABEL_31:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_111;
  }
LABEL_110:
  int v37 = *(_DWORD *)(a2 + 116);
  v3 |= 0x800000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 116) = v37;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x8000) == 0)
  {
LABEL_32:
    if ((v2 & 0x80) == 0) {
      goto LABEL_33;
    }
    goto LABEL_112;
  }
LABEL_111:
  int v38 = *(_DWORD *)(a2 + 84);
  v3 |= 0x8000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 84) = v38;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x80) == 0)
  {
LABEL_33:
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_113;
  }
LABEL_112:
  int v39 = *(_DWORD *)(a2 + 52);
  v3 |= 0x80uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 52) = v39;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x8000000) == 0)
  {
LABEL_34:
    if ((v2 & 0x800000000000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_114;
  }
LABEL_113:
  int v40 = *(_DWORD *)(a2 + 132);
  v3 |= 0x8000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 132) = v40;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x800000000000000) == 0)
  {
LABEL_35:
    if ((v2 & 0x800000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_115;
  }
LABEL_114:
  char v41 = *(unsigned char *)(a2 + 182);
  v3 |= 0x800000000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 182) = v41;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x800000000) == 0)
  {
LABEL_36:
    if ((v5 & 0x800) == 0) {
      goto LABEL_37;
    }
    goto LABEL_116;
  }
LABEL_115:
  char v42 = *(unsigned char *)(a2 + 158);
  v3 |= 0x800000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 158) = v42;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((*(_WORD *)(a2 + 212) & 0x800) == 0)
  {
LABEL_37:
    if ((v2 & 0x80000000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_117;
  }
LABEL_116:
  char v43 = *(unsigned char *)(a2 + 198);
  unint64_t v44 = v4 >> 16;
  v4 |= 0x800uLL;
  *(void *)(result + 204) = v3;
  *(unsigned char *)(result + 214) = v44;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 198) = v43;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x80000000000) == 0)
  {
LABEL_38:
    if ((v2 & 0x8000000000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_118;
  }
LABEL_117:
  char v45 = *(unsigned char *)(a2 + 166);
  v3 |= 0x80000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 166) = v45;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x8000000000000) == 0)
  {
LABEL_39:
    if ((v5 & 0x10) == 0) {
      goto LABEL_40;
    }
    goto LABEL_119;
  }
LABEL_118:
  char v46 = *(unsigned char *)(a2 + 174);
  v3 |= 0x8000000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 174) = v46;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((*(_WORD *)(a2 + 212) & 0x10) == 0)
  {
LABEL_40:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_120;
  }
LABEL_119:
  char v47 = *(unsigned char *)(a2 + 191);
  unint64_t v48 = v4 >> 16;
  v4 |= 0x10uLL;
  *(void *)(result + 204) = v3;
  *(unsigned char *)(result + 214) = v48;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 191) = v47;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x80000) == 0)
  {
LABEL_41:
    if ((v2 & 0x800) == 0) {
      goto LABEL_42;
    }
    goto LABEL_121;
  }
LABEL_120:
  int v49 = *(_DWORD *)(a2 + 100);
  v3 |= 0x80000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 100) = v49;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x800) == 0)
  {
LABEL_42:
    if ((v2 & 0x80000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_122;
  }
LABEL_121:
  int v50 = *(_DWORD *)(a2 + 68);
  v3 |= 0x800uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 68) = v50;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x80000000) == 0)
  {
LABEL_43:
    if ((v2 & 0x8000000000000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_123;
  }
LABEL_122:
  int v51 = *(_DWORD *)(a2 + 148);
  v3 |= 0x80000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 148) = v51;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x8000000000000000) == 0)
  {
LABEL_44:
    if ((v2 & 0x8000000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_124;
  }
LABEL_123:
  char v52 = *(unsigned char *)(a2 + 186);
  v3 |= 0x8000000000000000;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 186) = v52;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x8000000000) == 0)
  {
LABEL_45:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_125;
  }
LABEL_124:
  char v53 = *(unsigned char *)(a2 + 162);
  v3 |= 0x8000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 162) = v53;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((*(_WORD *)(a2 + 212) & 0x8000) == 0)
  {
LABEL_46:
    if ((v2 & 0x800000000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_126;
  }
LABEL_125:
  char v54 = *(unsigned char *)(a2 + 202);
  unint64_t v55 = v4 >> 16;
  v4 |= 0x8000uLL;
  *(void *)(result + 204) = v3;
  *(unsigned char *)(result + 214) = v55;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 202) = v54;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x800000000000) == 0)
  {
LABEL_47:
    if ((v2 & 0x80000000000000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_127;
  }
LABEL_126:
  char v56 = *(unsigned char *)(a2 + 170);
  v3 |= 0x800000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 170) = v56;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x80000000000000) == 0)
  {
LABEL_48:
    if ((v5 & 0x80) == 0) {
      goto LABEL_49;
    }
    goto LABEL_128;
  }
LABEL_127:
  char v57 = *(unsigned char *)(a2 + 178);
  v3 |= 0x80000000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 178) = v57;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((*(_WORD *)(a2 + 212) & 0x80) == 0)
  {
LABEL_49:
    if ((v2 & 8) == 0) {
      goto LABEL_50;
    }
    goto LABEL_129;
  }
LABEL_128:
  char v58 = *(unsigned char *)(a2 + 194);
  unint64_t v59 = v4 >> 16;
  v4 |= 0x80uLL;
  *(void *)(result + 204) = v3;
  *(unsigned char *)(result + 214) = v59;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 194) = v58;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 8) == 0)
  {
LABEL_50:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_130;
  }
LABEL_129:
  uint64_t v60 = *(void *)(a2 + 32);
  v3 |= 8uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(void *)(result + 32) = v60;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_51:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_131;
  }
LABEL_130:
  int v61 = *(_DWORD *)(a2 + 120);
  v3 |= 0x1000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 120) = v61;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x10000) == 0)
  {
LABEL_52:
    if ((v2 & 0x100) == 0) {
      goto LABEL_53;
    }
    goto LABEL_132;
  }
LABEL_131:
  int v62 = *(_DWORD *)(a2 + 88);
  v3 |= 0x10000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 88) = v62;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x100) == 0)
  {
LABEL_53:
    if ((v2 & 0x10000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_133;
  }
LABEL_132:
  int v63 = *(_DWORD *)(a2 + 56);
  v3 |= 0x100uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 56) = v63;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_54:
    if ((v2 & 0x1000000000000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_134;
  }
LABEL_133:
  int v64 = *(_DWORD *)(a2 + 136);
  v3 |= 0x10000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 136) = v64;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x1000000000000000) == 0)
  {
LABEL_55:
    if ((v2 & 0x1000000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_135;
  }
LABEL_134:
  char v65 = *(unsigned char *)(a2 + 183);
  v3 |= 0x1000000000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 183) = v65;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x1000000000) == 0)
  {
LABEL_56:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_136;
  }
LABEL_135:
  char v66 = *(unsigned char *)(a2 + 159);
  v3 |= 0x1000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 159) = v66;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((*(_WORD *)(a2 + 212) & 0x1000) == 0)
  {
LABEL_57:
    if ((v2 & 0x100000000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_137;
  }
LABEL_136:
  char v67 = *(unsigned char *)(a2 + 199);
  unint64_t v68 = v4 >> 16;
  v4 |= 0x1000uLL;
  *(void *)(result + 204) = v3;
  *(unsigned char *)(result + 214) = v68;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 199) = v67;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x100000000000) == 0)
  {
LABEL_58:
    if ((v2 & 0x10000000000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_138;
  }
LABEL_137:
  char v69 = *(unsigned char *)(a2 + 167);
  v3 |= 0x100000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 167) = v69;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x10000000000000) == 0)
  {
LABEL_59:
    if ((v5 & 0x20) == 0) {
      goto LABEL_60;
    }
    goto LABEL_139;
  }
LABEL_138:
  char v70 = *(unsigned char *)(a2 + 175);
  v3 |= 0x10000000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 175) = v70;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((*(_WORD *)(a2 + 212) & 0x20) == 0)
  {
LABEL_60:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_140;
  }
LABEL_139:
  char v71 = *(unsigned char *)(a2 + 192);
  unint64_t v72 = v4 >> 16;
  v4 |= 0x20uLL;
  *(void *)(result + 204) = v3;
  *(unsigned char *)(result + 214) = v72;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 192) = v71;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x100000) == 0)
  {
LABEL_61:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_141;
  }
LABEL_140:
  int v73 = *(_DWORD *)(a2 + 104);
  v3 |= 0x100000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 104) = v73;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x1000) == 0)
  {
LABEL_62:
    if ((v2 & 0x100000000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_142;
  }
LABEL_141:
  int v74 = *(_DWORD *)(a2 + 72);
  v3 |= 0x1000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 72) = v74;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x100000000) == 0)
  {
LABEL_63:
    if ((v5 & 1) == 0) {
      goto LABEL_64;
    }
    goto LABEL_143;
  }
LABEL_142:
  int v75 = *(_DWORD *)(a2 + 152);
  v3 |= 0x100000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 152) = v75;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((*(_WORD *)(a2 + 212) & 1) == 0)
  {
LABEL_64:
    if ((v2 & 0x10000000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_144;
  }
LABEL_143:
  char v76 = *(unsigned char *)(a2 + 187);
  unint64_t v77 = v4 >> 16;
  v4 |= 1uLL;
  *(void *)(result + 204) = v3;
  *(unsigned char *)(result + 214) = v77;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 187) = v76;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x10000000000) == 0)
  {
LABEL_65:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_145;
  }
LABEL_144:
  char v78 = *(unsigned char *)(a2 + 163);
  v3 |= 0x10000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 163) = v78;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v5 & 0x10000) == 0)
  {
LABEL_66:
    if ((v2 & 0x1000000000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_146;
  }
LABEL_145:
  char v79 = *(unsigned char *)(a2 + 203);
  *(_WORD *)(result + 212) = v4;
  v4 |= 0x10000uLL;
  *(void *)(result + 204) = v3;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 203) = v79;
  LOWORD(v5) = *(_WORD *)(a2 + 212);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x1000000000000) == 0)
  {
LABEL_67:
    if ((v2 & 0x100000000000000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_147;
  }
LABEL_146:
  char v80 = *(unsigned char *)(a2 + 171);
  v3 |= 0x1000000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 171) = v80;
  LOWORD(v5) = *(_WORD *)(a2 + 212);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x100000000000000) == 0)
  {
LABEL_68:
    if ((v5 & 0x100) == 0) {
      goto LABEL_69;
    }
    goto LABEL_148;
  }
LABEL_147:
  char v81 = *(unsigned char *)(a2 + 179);
  v3 |= 0x100000000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 179) = v81;
  LOWORD(v5) = *(_WORD *)(a2 + 212);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v5 & 0x100) == 0)
  {
LABEL_69:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_149;
  }
LABEL_148:
  char v82 = *(unsigned char *)(a2 + 195);
  unint64_t v83 = v4 >> 16;
  v4 |= 0x100uLL;
  *(void *)(result + 204) = v3;
  *(unsigned char *)(result + 214) = v83;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 195) = v82;
  LOWORD(v5) = *(_WORD *)(a2 + 212);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x2000) == 0)
  {
LABEL_70:
    if ((v2 & 0x20) == 0) {
      goto LABEL_71;
    }
    goto LABEL_150;
  }
LABEL_149:
  int v84 = *(_DWORD *)(a2 + 76);
  v3 |= 0x2000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 76) = v84;
  LOWORD(v5) = *(_WORD *)(a2 + 212);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x20) == 0)
  {
LABEL_71:
    if ((v2 & 0x2000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_151;
  }
LABEL_150:
  int v85 = *(_DWORD *)(a2 + 44);
  v3 |= 0x20uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 44) = v85;
  LOWORD(v5) = *(_WORD *)(a2 + 212);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x2000000) == 0)
  {
LABEL_72:
    if ((v2 & 0x200000000000000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_152;
  }
LABEL_151:
  int v86 = *(_DWORD *)(a2 + 124);
  v3 |= 0x2000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 124) = v86;
  LOWORD(v5) = *(_WORD *)(a2 + 212);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x200000000000000) == 0)
  {
LABEL_73:
    if ((v2 & 0x200000000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_153;
  }
LABEL_152:
  char v87 = *(unsigned char *)(a2 + 180);
  v3 |= 0x200000000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 180) = v87;
  LOWORD(v5) = *(_WORD *)(a2 + 212);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x200000000) == 0)
  {
LABEL_74:
    if ((v5 & 0x200) == 0) {
      goto LABEL_75;
    }
    goto LABEL_154;
  }
LABEL_153:
  char v88 = *(unsigned char *)(a2 + 156);
  v3 |= 0x200000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 156) = v88;
  LOWORD(v5) = *(_WORD *)(a2 + 212);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v5 & 0x200) == 0)
  {
LABEL_75:
    if ((v2 & 0x20000000000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_155;
  }
LABEL_154:
  char v89 = *(unsigned char *)(a2 + 196);
  unint64_t v90 = v4 >> 16;
  v4 |= 0x200uLL;
  *(void *)(result + 204) = v3;
  *(unsigned char *)(result + 214) = v90;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 196) = v89;
  LOWORD(v5) = *(_WORD *)(a2 + 212);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x20000000000) == 0)
  {
LABEL_76:
    if ((v2 & 0x2000000000000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_156;
  }
LABEL_155:
  char v91 = *(unsigned char *)(a2 + 164);
  v3 |= 0x20000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 164) = v91;
  LOWORD(v5) = *(_WORD *)(a2 + 212);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x2000000000000) == 0)
  {
LABEL_77:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_157;
  }
LABEL_156:
  char v92 = *(unsigned char *)(a2 + 172);
  v3 |= 0x2000000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 172) = v92;
  LOWORD(v5) = *(_WORD *)(a2 + 212);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x20000) == 0)
  {
LABEL_78:
    if ((v2 & 0x200) == 0) {
      goto LABEL_79;
    }
    goto LABEL_158;
  }
LABEL_157:
  int v93 = *(_DWORD *)(a2 + 92);
  v3 |= 0x20000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 92) = v93;
  LOWORD(v5) = *(_WORD *)(a2 + 212);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x200) == 0)
  {
LABEL_79:
    if ((v2 & 0x20000000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_159;
  }
LABEL_158:
  int v94 = *(_DWORD *)(a2 + 60);
  v3 |= 0x200uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 60) = v94;
  LOWORD(v5) = *(_WORD *)(a2 + 212);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x20000000) == 0)
  {
LABEL_80:
    if ((v2 & 0x2000000000000000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_160;
  }
LABEL_159:
  int v95 = *(_DWORD *)(a2 + 140);
  v3 |= 0x20000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 140) = v95;
  LOWORD(v5) = *(_WORD *)(a2 + 212);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x2000000000000000) == 0)
  {
LABEL_81:
    if ((v2 & 0x2000000000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_161;
  }
LABEL_160:
  char v96 = *(unsigned char *)(a2 + 184);
  v3 |= 0x2000000000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 184) = v96;
  LOWORD(v5) = *(_WORD *)(a2 + 212);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x2000000000) == 0)
  {
LABEL_82:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_162;
  }
LABEL_161:
  char v97 = *(unsigned char *)(a2 + 160);
  v3 |= 0x2000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 160) = v97;
  uint64_t v2 = *(void *)(a2 + 204);
  if ((*(_WORD *)(a2 + 212) & 0x2000) == 0)
  {
LABEL_83:
    if ((v2 & 0x200000000000) == 0) {
      goto LABEL_84;
    }
    goto LABEL_163;
  }
LABEL_162:
  char v98 = *(unsigned char *)(a2 + 200);
  unint64_t v99 = v4 >> 16;
  LODWORD(v4) = v4 | 0x2000;
  *(void *)(result + 204) = v3;
  *(unsigned char *)(result + 214) = v99;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 200) = v98;
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x200000000000) == 0)
  {
LABEL_84:
    if ((v2 & 0x20000000000000) == 0) {
      return result;
    }
LABEL_164:
    char v101 = *(unsigned char *)(a2 + 176);
    *(void *)(result + 204) = v3 | 0x20000000000000;
    *(_WORD *)(result + 212) = v4;
    *(unsigned char *)(result + 214) = BYTE2(v4);
    *(unsigned char *)(result + 176) = v101;
    return result;
  }
LABEL_163:
  char v100 = *(unsigned char *)(a2 + 168);
  v3 |= 0x200000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 168) = v100;
  if ((*(void *)(a2 + 204) & 0x20000000000000) != 0) {
    goto LABEL_164;
  }
  return result;
}

uint64_t sub_227B6E004(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x200000000) != 0)
  {
    PB::TextFormatter::format(this, "chaosMet");
    int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
    uint64_t v5 = *(void *)(a1 + 204);
    if ((v5 & 0x400000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  if ((v5 & 0x400000000) != 0)
  {
LABEL_5:
    PB::TextFormatter::format(this, "chaosMet0");
    int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
    uint64_t v5 = *(void *)(a1 + 204);
  }
LABEL_6:
  if ((v5 & 0x800000000) != 0)
  {
    PB::TextFormatter::format(this, "chaosMet1");
    int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
    uint64_t v5 = *(void *)(a1 + 204);
    if ((v5 & 0x1000000000) == 0)
    {
LABEL_8:
      if ((v5 & 0x2000000000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_91;
    }
  }
  else if ((v5 & 0x1000000000) == 0)
  {
    goto LABEL_8;
  }
  PB::TextFormatter::format(this, "chaosMet2");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x2000000000) == 0)
  {
LABEL_9:
    if ((v5 & 0x4000000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_92;
  }
LABEL_91:
  PB::TextFormatter::format(this, "chaosMetRollover");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x4000000000) == 0)
  {
LABEL_10:
    if ((v5 & 0x8000000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_93;
  }
LABEL_92:
  PB::TextFormatter::format(this, "chaosMetRollover0");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x8000000000) == 0)
  {
LABEL_11:
    if ((v5 & 0x10000000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_94;
  }
LABEL_93:
  PB::TextFormatter::format(this, "chaosMetRollover1");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x10000000000) == 0)
  {
LABEL_12:
    if ((v5 & 0x20000000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_95;
  }
LABEL_94:
  PB::TextFormatter::format(this, "chaosMetRollover2");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x20000000000) == 0)
  {
LABEL_13:
    if ((v5 & 0x40000000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_96;
  }
LABEL_95:
  PB::TextFormatter::format(this, "chaosOrSaturationMet");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x40000000000) == 0)
  {
LABEL_14:
    if ((v5 & 0x80000000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_97;
  }
LABEL_96:
  PB::TextFormatter::format(this, "chaosOrSaturationMet0");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x80000000000) == 0)
  {
LABEL_15:
    if ((v5 & 0x100000000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_98;
  }
LABEL_97:
  PB::TextFormatter::format(this, "chaosOrSaturationMet1");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x100000000000) == 0)
  {
LABEL_16:
    if ((v5 & 0x200000000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_99;
  }
LABEL_98:
  PB::TextFormatter::format(this, "chaosOrSaturationMet2");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x200000000000) == 0)
  {
LABEL_17:
    if ((v5 & 0x400000000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_100;
  }
LABEL_99:
  PB::TextFormatter::format(this, "chaosOrSaturationMetRollover");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x400000000000) == 0)
  {
LABEL_18:
    if ((v5 & 0x800000000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_101;
  }
LABEL_100:
  PB::TextFormatter::format(this, "chaosOrSaturationMetRollover0");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x800000000000) == 0)
  {
LABEL_19:
    if ((v5 & 0x1000000000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_102;
  }
LABEL_101:
  PB::TextFormatter::format(this, "chaosOrSaturationMetRollover1");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x1000000000000) == 0)
  {
LABEL_20:
    if ((v5 & 0x2000000000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_103;
  }
LABEL_102:
  PB::TextFormatter::format(this, "chaosOrSaturationMetRollover2");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x2000000000000) == 0)
  {
LABEL_21:
    if ((v5 & 0x4000000000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_104;
  }
LABEL_103:
  PB::TextFormatter::format(this, "energyAndChaosOrSaturationMet");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x4000000000000) == 0)
  {
LABEL_22:
    if ((v5 & 0x8000000000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_105;
  }
LABEL_104:
  PB::TextFormatter::format(this, "energyAndChaosOrSaturationMet0");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x8000000000000) == 0)
  {
LABEL_23:
    if ((v5 & 0x10000000000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_106;
  }
LABEL_105:
  PB::TextFormatter::format(this, "energyAndChaosOrSaturationMet1");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x10000000000000) == 0)
  {
LABEL_24:
    if ((v5 & 0x20000000000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_107;
  }
LABEL_106:
  PB::TextFormatter::format(this, "energyAndChaosOrSaturationMet2");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x20000000000000) == 0)
  {
LABEL_25:
    if ((v5 & 0x40000000000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_108;
  }
LABEL_107:
  PB::TextFormatter::format(this, "energyAndChaosOrSaturationMetRollover");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x40000000000000) == 0)
  {
LABEL_26:
    if ((v5 & 0x80000000000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_109;
  }
LABEL_108:
  PB::TextFormatter::format(this, "energyAndChaosOrSaturationMetRollover0");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x80000000000000) == 0)
  {
LABEL_27:
    if ((v5 & 0x100000000000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_110;
  }
LABEL_109:
  PB::TextFormatter::format(this, "energyAndChaosOrSaturationMetRollover1");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x100000000000000) == 0)
  {
LABEL_28:
    if ((v5 & 0x200000000000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_111;
  }
LABEL_110:
  PB::TextFormatter::format(this, "energyAndChaosOrSaturationMetRollover2");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x200000000000000) == 0)
  {
LABEL_29:
    if ((v5 & 0x400000000000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_112;
  }
LABEL_111:
  PB::TextFormatter::format(this, "energyMet");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x400000000000000) == 0)
  {
LABEL_30:
    if ((v5 & 0x800000000000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_113;
  }
LABEL_112:
  PB::TextFormatter::format(this, "energyMet0");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x800000000000000) == 0)
  {
LABEL_31:
    if ((v5 & 0x1000000000000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_114;
  }
LABEL_113:
  PB::TextFormatter::format(this, "energyMet1");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x1000000000000000) == 0)
  {
LABEL_32:
    if ((v5 & 0x2000000000000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_115;
  }
LABEL_114:
  PB::TextFormatter::format(this, "energyMet2");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x2000000000000000) == 0)
  {
LABEL_33:
    if ((v5 & 0x4000000000000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_116;
  }
LABEL_115:
  PB::TextFormatter::format(this, "energyMetRollover");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x4000000000000000) == 0)
  {
LABEL_34:
    if ((v5 & 0x8000000000000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_117;
  }
LABEL_116:
  PB::TextFormatter::format(this, "energyMetRollover0");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x8000000000000000) == 0)
  {
LABEL_35:
    if ((v6 & 1) == 0) {
      goto LABEL_36;
    }
    goto LABEL_118;
  }
LABEL_117:
  PB::TextFormatter::format(this, "energyMetRollover1");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 1) == 0)
  {
LABEL_36:
    if ((v5 & 0x10) == 0) {
      goto LABEL_37;
    }
    goto LABEL_119;
  }
LABEL_118:
  PB::TextFormatter::format(this, "energyMetRollover2");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x10) == 0)
  {
LABEL_37:
    if ((v5 & 0x20) == 0) {
      goto LABEL_38;
    }
    goto LABEL_120;
  }
LABEL_119:
  PB::TextFormatter::format(this, "epochNumber");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x20) == 0)
  {
LABEL_38:
    if ((v5 & 0x40) == 0) {
      goto LABEL_39;
    }
    goto LABEL_121;
  }
LABEL_120:
  PB::TextFormatter::format(this, "maxChaos", *(float *)(a1 + 44));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x40) == 0)
  {
LABEL_39:
    if ((v5 & 0x80) == 0) {
      goto LABEL_40;
    }
    goto LABEL_122;
  }
LABEL_121:
  PB::TextFormatter::format(this, "maxChaos0", *(float *)(a1 + 48));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x80) == 0)
  {
LABEL_40:
    if ((v5 & 0x100) == 0) {
      goto LABEL_41;
    }
    goto LABEL_123;
  }
LABEL_122:
  PB::TextFormatter::format(this, "maxChaos1", *(float *)(a1 + 52));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x100) == 0)
  {
LABEL_41:
    if ((v5 & 0x200) == 0) {
      goto LABEL_42;
    }
    goto LABEL_124;
  }
LABEL_123:
  PB::TextFormatter::format(this, "maxChaos2", *(float *)(a1 + 56));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x200) == 0)
  {
LABEL_42:
    if ((v5 & 0x400) == 0) {
      goto LABEL_43;
    }
    goto LABEL_125;
  }
LABEL_124:
  PB::TextFormatter::format(this, "maxChaosRollover", *(float *)(a1 + 60));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x400) == 0)
  {
LABEL_43:
    if ((v5 & 0x800) == 0) {
      goto LABEL_44;
    }
    goto LABEL_126;
  }
LABEL_125:
  PB::TextFormatter::format(this, "maxChaosRollover0", *(float *)(a1 + 64));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x800) == 0)
  {
LABEL_44:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_127;
  }
LABEL_126:
  PB::TextFormatter::format(this, "maxChaosRollover1", *(float *)(a1 + 68));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x1000) == 0)
  {
LABEL_45:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_128;
  }
LABEL_127:
  PB::TextFormatter::format(this, "maxChaosRollover2", *(float *)(a1 + 72));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x2000) == 0)
  {
LABEL_46:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_129;
  }
LABEL_128:
  PB::TextFormatter::format(this, "maxEnergy", *(float *)(a1 + 76));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x4000) == 0)
  {
LABEL_47:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_130;
  }
LABEL_129:
  PB::TextFormatter::format(this, "maxEnergy0", *(float *)(a1 + 80));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x8000) == 0)
  {
LABEL_48:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_131;
  }
LABEL_130:
  PB::TextFormatter::format(this, "maxEnergy1", *(float *)(a1 + 84));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x10000) == 0)
  {
LABEL_49:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_132;
  }
LABEL_131:
  PB::TextFormatter::format(this, "maxEnergy2", *(float *)(a1 + 88));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x20000) == 0)
  {
LABEL_50:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_133;
  }
LABEL_132:
  PB::TextFormatter::format(this, "maxEnergyRollover", *(float *)(a1 + 92));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x40000) == 0)
  {
LABEL_51:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_134;
  }
LABEL_133:
  PB::TextFormatter::format(this, "maxEnergyRollover0", *(float *)(a1 + 96));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x80000) == 0)
  {
LABEL_52:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_135;
  }
LABEL_134:
  PB::TextFormatter::format(this, "maxEnergyRollover1", *(float *)(a1 + 100));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x100000) == 0)
  {
LABEL_53:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_136;
  }
LABEL_135:
  PB::TextFormatter::format(this, "maxEnergyRollover2", *(float *)(a1 + 104));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x200000) == 0)
  {
LABEL_54:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_137;
  }
LABEL_136:
  PB::TextFormatter::format(this, "maxRMS", *(float *)(a1 + 108));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x400000) == 0)
  {
LABEL_55:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_138;
  }
LABEL_137:
  PB::TextFormatter::format(this, "maxRMS0", *(float *)(a1 + 112));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x800000) == 0)
  {
LABEL_56:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_139;
  }
LABEL_138:
  PB::TextFormatter::format(this, "maxRMS1", *(float *)(a1 + 116));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_57:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_140;
  }
LABEL_139:
  PB::TextFormatter::format(this, "maxRMS2", *(float *)(a1 + 120));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_58:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_141;
  }
LABEL_140:
  PB::TextFormatter::format(this, "maxSaturation", *(float *)(a1 + 124));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_59:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_142;
  }
LABEL_141:
  PB::TextFormatter::format(this, "maxSaturation0", *(float *)(a1 + 128));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_60:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_143;
  }
LABEL_142:
  PB::TextFormatter::format(this, "maxSaturation1", *(float *)(a1 + 132));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_61:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_144;
  }
LABEL_143:
  PB::TextFormatter::format(this, "maxSaturation2", *(float *)(a1 + 136));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x20000000) == 0)
  {
LABEL_62:
    if ((v5 & 0x40000000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_145;
  }
LABEL_144:
  PB::TextFormatter::format(this, "maxSaturationRollover", *(float *)(a1 + 140));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x40000000) == 0)
  {
LABEL_63:
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_146;
  }
LABEL_145:
  PB::TextFormatter::format(this, "maxSaturationRollover0", *(float *)(a1 + 144));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x80000000) == 0)
  {
LABEL_64:
    if ((v5 & 0x100000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_147;
  }
LABEL_146:
  PB::TextFormatter::format(this, "maxSaturationRollover1", *(float *)(a1 + 148));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x100000000) == 0)
  {
LABEL_65:
    if ((v6 & 2) == 0) {
      goto LABEL_66;
    }
    goto LABEL_148;
  }
LABEL_147:
  PB::TextFormatter::format(this, "maxSaturationRollover2", *(float *)(a1 + 152));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 2) == 0)
  {
LABEL_66:
    if ((v6 & 4) == 0) {
      goto LABEL_67;
    }
    goto LABEL_149;
  }
LABEL_148:
  PB::TextFormatter::format(this, "passThru");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 4) == 0)
  {
LABEL_67:
    if ((v6 & 8) == 0) {
      goto LABEL_68;
    }
    goto LABEL_150;
  }
LABEL_149:
  PB::TextFormatter::format(this, "passThruRollover");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 8) == 0)
  {
LABEL_68:
    if ((v6 & 0x10) == 0) {
      goto LABEL_69;
    }
    goto LABEL_151;
  }
LABEL_150:
  PB::TextFormatter::format(this, "passthru0");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 0x10) == 0)
  {
LABEL_69:
    if ((v6 & 0x20) == 0) {
      goto LABEL_70;
    }
    goto LABEL_152;
  }
LABEL_151:
  PB::TextFormatter::format(this, "passthru1");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 0x20) == 0)
  {
LABEL_70:
    if ((v6 & 0x40) == 0) {
      goto LABEL_71;
    }
    goto LABEL_153;
  }
LABEL_152:
  PB::TextFormatter::format(this, "passthru2");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 0x40) == 0)
  {
LABEL_71:
    if ((v6 & 0x80) == 0) {
      goto LABEL_72;
    }
    goto LABEL_154;
  }
LABEL_153:
  PB::TextFormatter::format(this, "passthruRollover0");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 0x80) == 0)
  {
LABEL_72:
    if ((v6 & 0x100) == 0) {
      goto LABEL_73;
    }
    goto LABEL_155;
  }
LABEL_154:
  PB::TextFormatter::format(this, "passthruRollover1");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 0x100) == 0)
  {
LABEL_73:
    if ((v6 & 0x200) == 0) {
      goto LABEL_74;
    }
    goto LABEL_156;
  }
LABEL_155:
  PB::TextFormatter::format(this, "passthruRollover2");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 0x200) == 0)
  {
LABEL_74:
    if ((v6 & 0x400) == 0) {
      goto LABEL_75;
    }
    goto LABEL_157;
  }
LABEL_156:
  PB::TextFormatter::format(this, "saturationMet");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 0x400) == 0)
  {
LABEL_75:
    if ((v6 & 0x800) == 0) {
      goto LABEL_76;
    }
    goto LABEL_158;
  }
LABEL_157:
  PB::TextFormatter::format(this, "saturationMet0");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 0x800) == 0)
  {
LABEL_76:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_159;
  }
LABEL_158:
  PB::TextFormatter::format(this, "saturationMet1");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 0x1000) == 0)
  {
LABEL_77:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_160;
  }
LABEL_159:
  PB::TextFormatter::format(this, "saturationMet2");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 0x2000) == 0)
  {
LABEL_78:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_161;
  }
LABEL_160:
  PB::TextFormatter::format(this, "saturationMetRollover");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 0x4000) == 0)
  {
LABEL_79:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_162;
  }
LABEL_161:
  PB::TextFormatter::format(this, "saturationMetRollover0");
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 0x8000) == 0)
  {
LABEL_80:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_163;
  }
LABEL_162:
  PB::TextFormatter::format(this, "saturationMetRollover1");
  uint64_t v5 = *(void *)(a1 + 204);
  if (((*(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16)) & 0x10000) == 0)
  {
LABEL_81:
    if ((v5 & 1) == 0) {
      goto LABEL_82;
    }
    goto LABEL_164;
  }
LABEL_163:
  PB::TextFormatter::format(this, "saturationMetRollover2");
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 1) == 0)
  {
LABEL_82:
    if ((v5 & 2) == 0) {
      goto LABEL_83;
    }
    goto LABEL_165;
  }
LABEL_164:
  PB::TextFormatter::format(this, "timestamp");
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 2) == 0)
  {
LABEL_83:
    if ((v5 & 4) == 0) {
      goto LABEL_84;
    }
    goto LABEL_166;
  }
LABEL_165:
  PB::TextFormatter::format(this, "timestamp0");
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 4) == 0)
  {
LABEL_84:
    if ((v5 & 8) == 0) {
      goto LABEL_86;
    }
    goto LABEL_85;
  }
LABEL_166:
  PB::TextFormatter::format(this, "timestamp1");
  if ((*(void *)(a1 + 204) & 8) != 0) {
LABEL_85:
  }
    PB::TextFormatter::format(this, "timestamp2");
LABEL_86:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B6EE04(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = a1 + 204;
    while (1)
    {
      uint64_t v9 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v10 = 0;
      unsigned int v11 = 0;
      unint64_t v12 = 0;
      while (1)
      {
        unint64_t v13 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v14 = *(unsigned char *)(v9 + v2);
        v12 |= (unint64_t)(v14 & 0x7F) << v10;
        if ((v14 & 0x80) == 0) {
          break;
        }
        v10 += 7;
        unint64_t v2 = v13;
        BOOL v15 = v11++ > 8;
        if (v15) {
          goto LABEL_20;
        }
      }
LABEL_21:
      if ((v12 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v21 = v12 >> 3;
      if ((int)(v12 >> 3) > 1102)
      {
        if ((v12 >> 3) <= 0x44E)
        {
          switch((int)v21)
          {
            case 1103:
              *(void *)v8 |= 4uLL;
              unint64_t v46 = *((void *)this + 1);
              unint64_t v47 = *((void *)this + 2);
              uint64_t v48 = *(void *)this;
              if (v46 <= 0xFFFFFFFFFFFFFFF5 && v46 + 10 <= v47)
              {
                char v49 = 0;
                unsigned int v50 = 0;
                uint64_t v51 = 0;
                do
                {
                  unint64_t v52 = v46 + 1;
                  *((void *)this + 1) = v46 + 1;
                  char v53 = *(unsigned char *)(v48 + v46);
                  v51 |= (unint64_t)(v53 & 0x7F) << v49;
                  if ((v53 & 0x80) == 0) {
                    goto LABEL_398;
                  }
                  v49 += 7;
                  unint64_t v46 = v52;
                  BOOL v15 = v50++ > 8;
                }
                while (!v15);
LABEL_272:
                uint64_t v51 = 0;
                goto LABEL_398;
              }
              char v313 = 0;
              unsigned int v314 = 0;
              uint64_t v51 = 0;
              if (v47 <= v46) {
                unint64_t v47 = *((void *)this + 1);
              }
              break;
            case 1104:
              *(void *)v8 |= 0x800000uLL;
              unint64_t v242 = *((void *)this + 1);
              if (v242 > 0xFFFFFFFFFFFFFFFBLL || v242 + 4 > *((void *)this + 2)) {
                goto LABEL_232;
              }
              *(_DWORD *)(a1 + 116) = *(_DWORD *)(*(void *)this + v242);
              goto LABEL_377;
            case 1105:
              *(void *)v8 |= 0x8000uLL;
              unint64_t v243 = *((void *)this + 1);
              if (v243 > 0xFFFFFFFFFFFFFFFBLL || v243 + 4 > *((void *)this + 2)) {
                goto LABEL_232;
              }
              *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v243);
              goto LABEL_377;
            case 1106:
              *(void *)v8 |= 0x80uLL;
              unint64_t v244 = *((void *)this + 1);
              if (v244 > 0xFFFFFFFFFFFFFFFBLL || v244 + 4 > *((void *)this + 2)) {
                goto LABEL_232;
              }
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v244);
              goto LABEL_377;
            case 1107:
              *(void *)v8 |= 0x8000000uLL;
              unint64_t v245 = *((void *)this + 1);
              if (v245 > 0xFFFFFFFFFFFFFFFBLL || v245 + 4 > *((void *)this + 2)) {
                goto LABEL_232;
              }
              *(_DWORD *)(a1 + 132) = *(_DWORD *)(*(void *)this + v245);
              goto LABEL_377;
            case 1108:
              *(void *)v8 |= 0x800000000000000uLL;
              unint64_t v246 = *((void *)this + 1);
              if (v246 >= *((void *)this + 2))
              {
                BOOL v249 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v247 = v246 + 1;
                int v248 = *(unsigned __int8 *)(*(void *)this + v246);
                *((void *)this + 1) = v247;
                BOOL v249 = v248 != 0;
              }
              *(unsigned char *)(a1 + 182) = v249;
              goto LABEL_378;
            case 1109:
              *(void *)v8 |= 0x800000000uLL;
              unint64_t v250 = *((void *)this + 1);
              if (v250 >= *((void *)this + 2))
              {
                BOOL v253 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v251 = v250 + 1;
                int v252 = *(unsigned __int8 *)(*(void *)this + v250);
                *((void *)this + 1) = v251;
                BOOL v253 = v252 != 0;
              }
              *(unsigned char *)(a1 + 158) = v253;
              goto LABEL_378;
            case 1110:
              char v254 = *(unsigned char *)(v8 + 10);
              *(_WORD *)(v8 + 8) |= 0x800u;
              *(unsigned char *)(v8 + 10) = v254;
              unint64_t v255 = *((void *)this + 1);
              if (v255 >= *((void *)this + 2))
              {
                BOOL v258 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v256 = v255 + 1;
                int v257 = *(unsigned __int8 *)(*(void *)this + v255);
                *((void *)this + 1) = v256;
                BOOL v258 = v257 != 0;
              }
              *(unsigned char *)(a1 + 198) = v258;
              goto LABEL_378;
            case 1111:
              *(void *)v8 |= 0x80000000000uLL;
              unint64_t v259 = *((void *)this + 1);
              if (v259 >= *((void *)this + 2))
              {
                BOOL v262 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v260 = v259 + 1;
                int v261 = *(unsigned __int8 *)(*(void *)this + v259);
                *((void *)this + 1) = v260;
                BOOL v262 = v261 != 0;
              }
              *(unsigned char *)(a1 + 166) = v262;
              goto LABEL_378;
            case 1112:
              *(void *)v8 |= 0x8000000000000uLL;
              unint64_t v263 = *((void *)this + 1);
              if (v263 >= *((void *)this + 2))
              {
                BOOL v266 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v264 = v263 + 1;
                int v265 = *(unsigned __int8 *)(*(void *)this + v263);
                *((void *)this + 1) = v264;
                BOOL v266 = v265 != 0;
              }
              *(unsigned char *)(a1 + 174) = v266;
              goto LABEL_378;
            case 1113:
              char v267 = *(unsigned char *)(v8 + 10);
              *(_WORD *)(v8 + 8) |= 0x10u;
              *(unsigned char *)(v8 + 10) = v267;
              unint64_t v268 = *((void *)this + 1);
              if (v268 >= *((void *)this + 2))
              {
                BOOL v271 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v269 = v268 + 1;
                int v270 = *(unsigned __int8 *)(*(void *)this + v268);
                *((void *)this + 1) = v269;
                BOOL v271 = v270 != 0;
              }
              *(unsigned char *)(a1 + 191) = v271;
              goto LABEL_378;
            case 1114:
              *(void *)v8 |= 0x80000uLL;
              unint64_t v272 = *((void *)this + 1);
              if (v272 > 0xFFFFFFFFFFFFFFFBLL || v272 + 4 > *((void *)this + 2)) {
                goto LABEL_232;
              }
              *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v272);
              goto LABEL_377;
            case 1115:
              *(void *)v8 |= 0x800uLL;
              unint64_t v273 = *((void *)this + 1);
              if (v273 > 0xFFFFFFFFFFFFFFFBLL || v273 + 4 > *((void *)this + 2)) {
                goto LABEL_232;
              }
              *(_DWORD *)(a1 + 68) = *(_DWORD *)(*(void *)this + v273);
              goto LABEL_377;
            case 1116:
              *(void *)v8 |= 0x80000000uLL;
              unint64_t v274 = *((void *)this + 1);
              if (v274 <= 0xFFFFFFFFFFFFFFFBLL && v274 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 148) = *(_DWORD *)(*(void *)this + v274);
LABEL_377:
                *((void *)this + 1) += 4;
              }
              else
              {
LABEL_232:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_378;
            case 1117:
              *(void *)v8 |= 0x8000000000000000;
              unint64_t v275 = *((void *)this + 1);
              if (v275 >= *((void *)this + 2))
              {
                BOOL v278 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v276 = v275 + 1;
                int v277 = *(unsigned __int8 *)(*(void *)this + v275);
                *((void *)this + 1) = v276;
                BOOL v278 = v277 != 0;
              }
              *(unsigned char *)(a1 + 186) = v278;
              goto LABEL_378;
            case 1118:
              *(void *)v8 |= 0x8000000000uLL;
              unint64_t v279 = *((void *)this + 1);
              if (v279 >= *((void *)this + 2))
              {
                BOOL v282 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v280 = v279 + 1;
                int v281 = *(unsigned __int8 *)(*(void *)this + v279);
                *((void *)this + 1) = v280;
                BOOL v282 = v281 != 0;
              }
              *(unsigned char *)(a1 + 162) = v282;
              goto LABEL_378;
            case 1119:
              char v283 = *(unsigned char *)(v8 + 10);
              *(_WORD *)(v8 + 8) |= 0x8000u;
              *(unsigned char *)(v8 + 10) = v283;
              unint64_t v284 = *((void *)this + 1);
              if (v284 >= *((void *)this + 2))
              {
                BOOL v287 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v285 = v284 + 1;
                int v286 = *(unsigned __int8 *)(*(void *)this + v284);
                *((void *)this + 1) = v285;
                BOOL v287 = v286 != 0;
              }
              *(unsigned char *)(a1 + 202) = v287;
              goto LABEL_378;
            case 1120:
              *(void *)v8 |= 0x800000000000uLL;
              unint64_t v288 = *((void *)this + 1);
              if (v288 >= *((void *)this + 2))
              {
                BOOL v291 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v289 = v288 + 1;
                int v290 = *(unsigned __int8 *)(*(void *)this + v288);
                *((void *)this + 1) = v289;
                BOOL v291 = v290 != 0;
              }
              *(unsigned char *)(a1 + 170) = v291;
              goto LABEL_378;
            case 1121:
              *(void *)v8 |= 0x80000000000000uLL;
              unint64_t v292 = *((void *)this + 1);
              if (v292 >= *((void *)this + 2))
              {
                BOOL v295 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v293 = v292 + 1;
                int v294 = *(unsigned __int8 *)(*(void *)this + v292);
                *((void *)this + 1) = v293;
                BOOL v295 = v294 != 0;
              }
              *(unsigned char *)(a1 + 178) = v295;
              goto LABEL_378;
            case 1122:
              char v296 = *(unsigned char *)(v8 + 10);
              *(_WORD *)(v8 + 8) |= 0x80u;
              *(unsigned char *)(v8 + 10) = v296;
              unint64_t v297 = *((void *)this + 1);
              if (v297 >= *((void *)this + 2))
              {
                BOOL v300 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v298 = v297 + 1;
                int v299 = *(unsigned __int8 *)(*(void *)this + v297);
                *((void *)this + 1) = v298;
                BOOL v300 = v299 != 0;
              }
              *(unsigned char *)(a1 + 194) = v300;
              goto LABEL_378;
            default:
              JUMPOUT(0);
          }
          while (1)
          {
            if (v47 == v46)
            {
              uint64_t v51 = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_398;
            }
            unint64_t v315 = v46 + 1;
            char v316 = *(unsigned char *)(v48 + v46);
            *((void *)this + 1) = v315;
            v51 |= (unint64_t)(v316 & 0x7F) << v313;
            if ((v316 & 0x80) == 0) {
              break;
            }
            v313 += 7;
            unint64_t v46 = v315;
            BOOL v15 = v314++ > 8;
            if (v15) {
              goto LABEL_272;
            }
          }
          if (*((unsigned char *)this + 24)) {
            uint64_t v51 = 0;
          }
LABEL_398:
          *(void *)(a1 + 24) = v51;
        }
        else
        {
          switch((int)v21)
          {
            case 1203:
              *(void *)v8 |= 8uLL;
              unint64_t v30 = *((void *)this + 1);
              unint64_t v31 = *((void *)this + 2);
              uint64_t v32 = *(void *)this;
              if (v30 <= 0xFFFFFFFFFFFFFFF5 && v30 + 10 <= v31)
              {
                char v33 = 0;
                unsigned int v34 = 0;
                uint64_t v35 = 0;
                do
                {
                  unint64_t v36 = v30 + 1;
                  *((void *)this + 1) = v30 + 1;
                  char v37 = *(unsigned char *)(v32 + v30);
                  v35 |= (unint64_t)(v37 & 0x7F) << v33;
                  if ((v37 & 0x80) == 0) {
                    goto LABEL_390;
                  }
                  v33 += 7;
                  unint64_t v30 = v36;
                  BOOL v15 = v34++ > 8;
                }
                while (!v15);
LABEL_258:
                uint64_t v35 = 0;
                goto LABEL_390;
              }
              char v305 = 0;
              unsigned int v306 = 0;
              uint64_t v35 = 0;
              if (v31 <= v30) {
                unint64_t v31 = *((void *)this + 1);
              }
              break;
            case 1204:
              *(void *)v8 |= 0x1000000uLL;
              unint64_t v121 = *((void *)this + 1);
              if (v121 > 0xFFFFFFFFFFFFFFFBLL || v121 + 4 > *((void *)this + 2)) {
                goto LABEL_232;
              }
              *(_DWORD *)(a1 + 120) = *(_DWORD *)(*(void *)this + v121);
              goto LABEL_377;
            case 1205:
              *(void *)v8 |= 0x10000uLL;
              unint64_t v122 = *((void *)this + 1);
              if (v122 > 0xFFFFFFFFFFFFFFFBLL || v122 + 4 > *((void *)this + 2)) {
                goto LABEL_232;
              }
              *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v122);
              goto LABEL_377;
            case 1206:
              *(void *)v8 |= 0x100uLL;
              unint64_t v123 = *((void *)this + 1);
              if (v123 > 0xFFFFFFFFFFFFFFFBLL || v123 + 4 > *((void *)this + 2)) {
                goto LABEL_232;
              }
              *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v123);
              goto LABEL_377;
            case 1207:
              *(void *)v8 |= 0x10000000uLL;
              unint64_t v124 = *((void *)this + 1);
              if (v124 > 0xFFFFFFFFFFFFFFFBLL || v124 + 4 > *((void *)this + 2)) {
                goto LABEL_232;
              }
              *(_DWORD *)(a1 + 136) = *(_DWORD *)(*(void *)this + v124);
              goto LABEL_377;
            case 1208:
              *(void *)v8 |= 0x1000000000000000uLL;
              unint64_t v125 = *((void *)this + 1);
              if (v125 >= *((void *)this + 2))
              {
                BOOL v128 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v126 = v125 + 1;
                int v127 = *(unsigned __int8 *)(*(void *)this + v125);
                *((void *)this + 1) = v126;
                BOOL v128 = v127 != 0;
              }
              *(unsigned char *)(a1 + 183) = v128;
              goto LABEL_378;
            case 1209:
              *(void *)v8 |= 0x1000000000uLL;
              unint64_t v129 = *((void *)this + 1);
              if (v129 >= *((void *)this + 2))
              {
                BOOL v132 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v130 = v129 + 1;
                int v131 = *(unsigned __int8 *)(*(void *)this + v129);
                *((void *)this + 1) = v130;
                BOOL v132 = v131 != 0;
              }
              *(unsigned char *)(a1 + 159) = v132;
              goto LABEL_378;
            case 1210:
              char v133 = *(unsigned char *)(v8 + 10);
              *(_WORD *)(v8 + 8) |= 0x1000u;
              *(unsigned char *)(v8 + 10) = v133;
              unint64_t v134 = *((void *)this + 1);
              if (v134 >= *((void *)this + 2))
              {
                BOOL v137 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v135 = v134 + 1;
                int v136 = *(unsigned __int8 *)(*(void *)this + v134);
                *((void *)this + 1) = v135;
                BOOL v137 = v136 != 0;
              }
              *(unsigned char *)(a1 + 199) = v137;
              goto LABEL_378;
            case 1211:
              *(void *)v8 |= 0x100000000000uLL;
              unint64_t v138 = *((void *)this + 1);
              if (v138 >= *((void *)this + 2))
              {
                BOOL v141 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v139 = v138 + 1;
                int v140 = *(unsigned __int8 *)(*(void *)this + v138);
                *((void *)this + 1) = v139;
                BOOL v141 = v140 != 0;
              }
              *(unsigned char *)(a1 + 167) = v141;
              goto LABEL_378;
            case 1212:
              *(void *)v8 |= 0x10000000000000uLL;
              unint64_t v142 = *((void *)this + 1);
              if (v142 >= *((void *)this + 2))
              {
                BOOL v145 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v143 = v142 + 1;
                int v144 = *(unsigned __int8 *)(*(void *)this + v142);
                *((void *)this + 1) = v143;
                BOOL v145 = v144 != 0;
              }
              *(unsigned char *)(a1 + 175) = v145;
              goto LABEL_378;
            case 1213:
              char v146 = *(unsigned char *)(v8 + 10);
              *(_WORD *)(v8 + 8) |= 0x20u;
              *(unsigned char *)(v8 + 10) = v146;
              unint64_t v147 = *((void *)this + 1);
              if (v147 >= *((void *)this + 2))
              {
                BOOL v150 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v148 = v147 + 1;
                int v149 = *(unsigned __int8 *)(*(void *)this + v147);
                *((void *)this + 1) = v148;
                BOOL v150 = v149 != 0;
              }
              *(unsigned char *)(a1 + 192) = v150;
              goto LABEL_378;
            case 1214:
              *(void *)v8 |= 0x100000uLL;
              unint64_t v151 = *((void *)this + 1);
              if (v151 > 0xFFFFFFFFFFFFFFFBLL || v151 + 4 > *((void *)this + 2)) {
                goto LABEL_232;
              }
              *(_DWORD *)(a1 + 104) = *(_DWORD *)(*(void *)this + v151);
              goto LABEL_377;
            case 1215:
              *(void *)v8 |= 0x1000uLL;
              unint64_t v152 = *((void *)this + 1);
              if (v152 > 0xFFFFFFFFFFFFFFFBLL || v152 + 4 > *((void *)this + 2)) {
                goto LABEL_232;
              }
              *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v152);
              goto LABEL_377;
            case 1216:
              *(void *)v8 |= 0x100000000uLL;
              unint64_t v153 = *((void *)this + 1);
              if (v153 > 0xFFFFFFFFFFFFFFFBLL || v153 + 4 > *((void *)this + 2)) {
                goto LABEL_232;
              }
              *(_DWORD *)(a1 + 152) = *(_DWORD *)(*(void *)this + v153);
              goto LABEL_377;
            case 1217:
              char v154 = *(unsigned char *)(v8 + 10);
              *(_WORD *)(v8 + 8) |= 1u;
              *(unsigned char *)(v8 + 10) = v154;
              unint64_t v155 = *((void *)this + 1);
              if (v155 >= *((void *)this + 2))
              {
                BOOL v158 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v156 = v155 + 1;
                int v157 = *(unsigned __int8 *)(*(void *)this + v155);
                *((void *)this + 1) = v156;
                BOOL v158 = v157 != 0;
              }
              *(unsigned char *)(a1 + 187) = v158;
              goto LABEL_378;
            case 1218:
              *(void *)v8 |= 0x10000000000uLL;
              unint64_t v159 = *((void *)this + 1);
              if (v159 >= *((void *)this + 2))
              {
                BOOL v162 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v160 = v159 + 1;
                int v161 = *(unsigned __int8 *)(*(void *)this + v159);
                *((void *)this + 1) = v160;
                BOOL v162 = v161 != 0;
              }
              *(unsigned char *)(a1 + 163) = v162;
              goto LABEL_378;
            case 1219:
              int v163 = *(unsigned __int16 *)(v8 + 8);
              unsigned int v164 = (v163 | (*(unsigned __int8 *)(v8 + 10) << 16) | 0x10000u) >> 16;
              *(_WORD *)(v8 + 8) = v163;
              *(unsigned char *)(v8 + 10) = v164;
              unint64_t v165 = *((void *)this + 1);
              if (v165 >= *((void *)this + 2))
              {
                BOOL v168 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v166 = v165 + 1;
                int v167 = *(unsigned __int8 *)(*(void *)this + v165);
                *((void *)this + 1) = v166;
                BOOL v168 = v167 != 0;
              }
              *(unsigned char *)(a1 + 203) = v168;
              goto LABEL_378;
            case 1220:
              *(void *)v8 |= 0x1000000000000uLL;
              unint64_t v169 = *((void *)this + 1);
              if (v169 >= *((void *)this + 2))
              {
                BOOL v172 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v170 = v169 + 1;
                int v171 = *(unsigned __int8 *)(*(void *)this + v169);
                *((void *)this + 1) = v170;
                BOOL v172 = v171 != 0;
              }
              *(unsigned char *)(a1 + 171) = v172;
              goto LABEL_378;
            case 1221:
              *(void *)v8 |= 0x100000000000000uLL;
              unint64_t v173 = *((void *)this + 1);
              if (v173 >= *((void *)this + 2))
              {
                BOOL v176 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v174 = v173 + 1;
                int v175 = *(unsigned __int8 *)(*(void *)this + v173);
                *((void *)this + 1) = v174;
                BOOL v176 = v175 != 0;
              }
              *(unsigned char *)(a1 + 179) = v176;
              goto LABEL_378;
            case 1222:
              char v177 = *(unsigned char *)(v8 + 10);
              *(_WORD *)(v8 + 8) |= 0x100u;
              *(unsigned char *)(v8 + 10) = v177;
              unint64_t v178 = *((void *)this + 1);
              if (v178 >= *((void *)this + 2))
              {
                BOOL v181 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v179 = v178 + 1;
                int v180 = *(unsigned __int8 *)(*(void *)this + v178);
                *((void *)this + 1) = v179;
                BOOL v181 = v180 != 0;
              }
              *(unsigned char *)(a1 + 195) = v181;
              goto LABEL_378;
            default:
LABEL_153:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              goto LABEL_378;
          }
          while (1)
          {
            if (v31 == v30)
            {
              uint64_t v35 = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_390;
            }
            unint64_t v307 = v30 + 1;
            char v308 = *(unsigned char *)(v32 + v30);
            *((void *)this + 1) = v307;
            v35 |= (unint64_t)(v308 & 0x7F) << v305;
            if ((v308 & 0x80) == 0) {
              break;
            }
            v305 += 7;
            unint64_t v30 = v307;
            BOOL v15 = v306++ > 8;
            if (v15) {
              goto LABEL_258;
            }
          }
          if (*((unsigned char *)this + 24)) {
            uint64_t v35 = 0;
          }
LABEL_390:
          *(void *)(a1 + 32) = v35;
        }
      }
      else
      {
        switch((int)v21)
        {
          case 'e':
            *(void *)v8 |= 1uLL;
            unint64_t v22 = *((void *)this + 1);
            unint64_t v23 = *((void *)this + 2);
            uint64_t v24 = *(void *)this;
            if (v22 <= 0xFFFFFFFFFFFFFFF5 && v22 + 10 <= v23)
            {
              char v25 = 0;
              unsigned int v26 = 0;
              uint64_t v27 = 0;
              do
              {
                unint64_t v28 = v22 + 1;
                *((void *)this + 1) = v22 + 1;
                char v29 = *(unsigned char *)(v24 + v22);
                v27 |= (unint64_t)(v29 & 0x7F) << v25;
                if ((v29 & 0x80) == 0) {
                  goto LABEL_386;
                }
                v25 += 7;
                unint64_t v22 = v28;
                BOOL v15 = v26++ > 8;
              }
              while (!v15);
LABEL_251:
              uint64_t v27 = 0;
              goto LABEL_386;
            }
            char v301 = 0;
            unsigned int v302 = 0;
            uint64_t v27 = 0;
            if (v23 <= v22) {
              unint64_t v23 = *((void *)this + 1);
            }
            while (2)
            {
              if (v23 == v22)
              {
                uint64_t v27 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v303 = v22 + 1;
                char v304 = *(unsigned char *)(v24 + v22);
                *((void *)this + 1) = v303;
                v27 |= (unint64_t)(v304 & 0x7F) << v301;
                if (v304 < 0)
                {
                  v301 += 7;
                  unint64_t v22 = v303;
                  BOOL v15 = v302++ > 8;
                  if (v15) {
                    goto LABEL_251;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v27 = 0;
                }
              }
              break;
            }
LABEL_386:
            *(void *)(a1 + 8) = v27;
            goto LABEL_378;
          case 'f':
            *(void *)v8 |= 0x10uLL;
            unint64_t v54 = *((void *)this + 1);
            unint64_t v55 = *((void *)this + 2);
            uint64_t v56 = *(void *)this;
            if (v54 <= 0xFFFFFFFFFFFFFFF5 && v54 + 10 <= v55)
            {
              char v57 = 0;
              unsigned int v58 = 0;
              uint64_t v59 = 0;
              do
              {
                unint64_t v60 = v54 + 1;
                *((void *)this + 1) = v54 + 1;
                char v61 = *(unsigned char *)(v56 + v54);
                v59 |= (unint64_t)(v61 & 0x7F) << v57;
                if ((v61 & 0x80) == 0) {
                  goto LABEL_402;
                }
                v57 += 7;
                unint64_t v54 = v60;
                BOOL v15 = v58++ > 8;
              }
              while (!v15);
LABEL_279:
              LODWORD(v59) = 0;
              goto LABEL_402;
            }
            char v317 = 0;
            unsigned int v318 = 0;
            uint64_t v59 = 0;
            if (v55 <= v54) {
              unint64_t v55 = *((void *)this + 1);
            }
            while (2)
            {
              if (v55 == v54)
              {
                LODWORD(v59) = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v319 = v54 + 1;
                char v320 = *(unsigned char *)(v56 + v54);
                *((void *)this + 1) = v319;
                v59 |= (unint64_t)(v320 & 0x7F) << v317;
                if (v320 < 0)
                {
                  v317 += 7;
                  unint64_t v54 = v319;
                  BOOL v15 = v318++ > 8;
                  if (v15) {
                    goto LABEL_279;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v59) = 0;
                }
              }
              break;
            }
LABEL_402:
            *(_DWORD *)(a1 + 40) = v59;
            goto LABEL_378;
          case 'g':
            char v62 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 2u;
            *(unsigned char *)(v8 + 10) = v62;
            unint64_t v63 = *((void *)this + 1);
            if (v63 >= *((void *)this + 2))
            {
              BOOL v66 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v64 = v63 + 1;
              int v65 = *(unsigned __int8 *)(*(void *)this + v63);
              *((void *)this + 1) = v64;
              BOOL v66 = v65 != 0;
            }
            *(unsigned char *)(a1 + 188) = v66;
            goto LABEL_378;
          case 'h':
            *(void *)v8 |= 0x200000uLL;
            unint64_t v67 = *((void *)this + 1);
            if (v67 > 0xFFFFFFFFFFFFFFFBLL || v67 + 4 > *((void *)this + 2)) {
              goto LABEL_232;
            }
            *(_DWORD *)(a1 + 108) = *(_DWORD *)(*(void *)this + v67);
            goto LABEL_377;
          case 'i':
            *(void *)v8 |= 0x2000uLL;
            unint64_t v68 = *((void *)this + 1);
            if (v68 > 0xFFFFFFFFFFFFFFFBLL || v68 + 4 > *((void *)this + 2)) {
              goto LABEL_232;
            }
            *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v68);
            goto LABEL_377;
          case 'j':
            *(void *)v8 |= 0x20uLL;
            unint64_t v69 = *((void *)this + 1);
            if (v69 > 0xFFFFFFFFFFFFFFFBLL || v69 + 4 > *((void *)this + 2)) {
              goto LABEL_232;
            }
            *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v69);
            goto LABEL_377;
          case 'k':
            *(void *)v8 |= 0x2000000uLL;
            unint64_t v70 = *((void *)this + 1);
            if (v70 > 0xFFFFFFFFFFFFFFFBLL || v70 + 4 > *((void *)this + 2)) {
              goto LABEL_232;
            }
            *(_DWORD *)(a1 + 124) = *(_DWORD *)(*(void *)this + v70);
            goto LABEL_377;
          case 'l':
            *(void *)v8 |= 0x200000000000000uLL;
            unint64_t v71 = *((void *)this + 1);
            if (v71 >= *((void *)this + 2))
            {
              BOOL v74 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v72 = v71 + 1;
              int v73 = *(unsigned __int8 *)(*(void *)this + v71);
              *((void *)this + 1) = v72;
              BOOL v74 = v73 != 0;
            }
            *(unsigned char *)(a1 + 180) = v74;
            goto LABEL_378;
          case 'm':
            *(void *)v8 |= 0x200000000uLL;
            unint64_t v75 = *((void *)this + 1);
            if (v75 >= *((void *)this + 2))
            {
              BOOL v78 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v76 = v75 + 1;
              int v77 = *(unsigned __int8 *)(*(void *)this + v75);
              *((void *)this + 1) = v76;
              BOOL v78 = v77 != 0;
            }
            *(unsigned char *)(a1 + 156) = v78;
            goto LABEL_378;
          case 'n':
            char v79 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 0x200u;
            *(unsigned char *)(v8 + 10) = v79;
            unint64_t v80 = *((void *)this + 1);
            if (v80 >= *((void *)this + 2))
            {
              BOOL v83 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v81 = v80 + 1;
              int v82 = *(unsigned __int8 *)(*(void *)this + v80);
              *((void *)this + 1) = v81;
              BOOL v83 = v82 != 0;
            }
            *(unsigned char *)(a1 + 196) = v83;
            goto LABEL_378;
          case 'o':
            *(void *)v8 |= 0x20000000000uLL;
            unint64_t v84 = *((void *)this + 1);
            if (v84 >= *((void *)this + 2))
            {
              BOOL v87 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v85 = v84 + 1;
              int v86 = *(unsigned __int8 *)(*(void *)this + v84);
              *((void *)this + 1) = v85;
              BOOL v87 = v86 != 0;
            }
            *(unsigned char *)(a1 + 164) = v87;
            goto LABEL_378;
          case 'p':
            *(void *)v8 |= 0x2000000000000uLL;
            unint64_t v88 = *((void *)this + 1);
            if (v88 >= *((void *)this + 2))
            {
              BOOL v91 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v89 = v88 + 1;
              int v90 = *(unsigned __int8 *)(*(void *)this + v88);
              *((void *)this + 1) = v89;
              BOOL v91 = v90 != 0;
            }
            *(unsigned char *)(a1 + 172) = v91;
            goto LABEL_378;
          case 'q':
            char v92 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 4u;
            *(unsigned char *)(v8 + 10) = v92;
            unint64_t v93 = *((void *)this + 1);
            if (v93 >= *((void *)this + 2))
            {
              BOOL v96 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v94 = v93 + 1;
              int v95 = *(unsigned __int8 *)(*(void *)this + v93);
              *((void *)this + 1) = v94;
              BOOL v96 = v95 != 0;
            }
            *(unsigned char *)(a1 + 189) = v96;
            goto LABEL_378;
          case 'r':
            *(void *)v8 |= 0x20000uLL;
            unint64_t v97 = *((void *)this + 1);
            if (v97 > 0xFFFFFFFFFFFFFFFBLL || v97 + 4 > *((void *)this + 2)) {
              goto LABEL_232;
            }
            *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v97);
            goto LABEL_377;
          case 's':
            *(void *)v8 |= 0x200uLL;
            unint64_t v98 = *((void *)this + 1);
            if (v98 > 0xFFFFFFFFFFFFFFFBLL || v98 + 4 > *((void *)this + 2)) {
              goto LABEL_232;
            }
            *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v98);
            goto LABEL_377;
          case 't':
            *(void *)v8 |= 0x20000000uLL;
            unint64_t v99 = *((void *)this + 1);
            if (v99 > 0xFFFFFFFFFFFFFFFBLL || v99 + 4 > *((void *)this + 2)) {
              goto LABEL_232;
            }
            *(_DWORD *)(a1 + 140) = *(_DWORD *)(*(void *)this + v99);
            goto LABEL_377;
          case 'u':
            *(void *)v8 |= 0x2000000000000000uLL;
            unint64_t v100 = *((void *)this + 1);
            if (v100 >= *((void *)this + 2))
            {
              BOOL v103 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v101 = v100 + 1;
              int v102 = *(unsigned __int8 *)(*(void *)this + v100);
              *((void *)this + 1) = v101;
              BOOL v103 = v102 != 0;
            }
            *(unsigned char *)(a1 + 184) = v103;
            goto LABEL_378;
          case 'v':
            *(void *)v8 |= 0x2000000000uLL;
            unint64_t v104 = *((void *)this + 1);
            if (v104 >= *((void *)this + 2))
            {
              BOOL v107 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v105 = v104 + 1;
              int v106 = *(unsigned __int8 *)(*(void *)this + v104);
              *((void *)this + 1) = v105;
              BOOL v107 = v106 != 0;
            }
            *(unsigned char *)(a1 + 160) = v107;
            goto LABEL_378;
          case 'w':
            char v108 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 0x2000u;
            *(unsigned char *)(v8 + 10) = v108;
            unint64_t v109 = *((void *)this + 1);
            if (v109 >= *((void *)this + 2))
            {
              BOOL v112 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v110 = v109 + 1;
              int v111 = *(unsigned __int8 *)(*(void *)this + v109);
              *((void *)this + 1) = v110;
              BOOL v112 = v111 != 0;
            }
            *(unsigned char *)(a1 + 200) = v112;
            goto LABEL_378;
          case 'x':
            *(void *)v8 |= 0x200000000000uLL;
            unint64_t v113 = *((void *)this + 1);
            if (v113 >= *((void *)this + 2))
            {
              BOOL v116 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v114 = v113 + 1;
              int v115 = *(unsigned __int8 *)(*(void *)this + v113);
              *((void *)this + 1) = v114;
              BOOL v116 = v115 != 0;
            }
            *(unsigned char *)(a1 + 168) = v116;
            goto LABEL_378;
          case 'y':
            *(void *)v8 |= 0x20000000000000uLL;
            unint64_t v117 = *((void *)this + 1);
            if (v117 >= *((void *)this + 2))
            {
              BOOL v120 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v118 = v117 + 1;
              int v119 = *(unsigned __int8 *)(*(void *)this + v117);
              *((void *)this + 1) = v118;
              BOOL v120 = v119 != 0;
            }
            *(unsigned char *)(a1 + 176) = v120;
            goto LABEL_378;
          default:
            switch((int)v21)
            {
              case 1003:
                *(void *)v8 |= 2uLL;
                unint64_t v38 = *((void *)this + 1);
                unint64_t v39 = *((void *)this + 2);
                uint64_t v40 = *(void *)this;
                if (v38 <= 0xFFFFFFFFFFFFFFF5 && v38 + 10 <= v39)
                {
                  char v41 = 0;
                  unsigned int v42 = 0;
                  uint64_t v43 = 0;
                  do
                  {
                    unint64_t v44 = v38 + 1;
                    *((void *)this + 1) = v38 + 1;
                    char v45 = *(unsigned char *)(v40 + v38);
                    v43 |= (unint64_t)(v45 & 0x7F) << v41;
                    if ((v45 & 0x80) == 0) {
                      goto LABEL_394;
                    }
                    v41 += 7;
                    unint64_t v38 = v44;
                    BOOL v15 = v42++ > 8;
                  }
                  while (!v15);
LABEL_265:
                  uint64_t v43 = 0;
                  goto LABEL_394;
                }
                char v309 = 0;
                unsigned int v310 = 0;
                uint64_t v43 = 0;
                if (v39 <= v38) {
                  unint64_t v39 = *((void *)this + 1);
                }
                break;
              case 1004:
                *(void *)v8 |= 0x400000uLL;
                unint64_t v183 = *((void *)this + 1);
                if (v183 > 0xFFFFFFFFFFFFFFFBLL || v183 + 4 > *((void *)this + 2)) {
                  goto LABEL_232;
                }
                *(_DWORD *)(a1 + 112) = *(_DWORD *)(*(void *)this + v183);
                goto LABEL_377;
              case 1005:
                *(void *)v8 |= 0x4000uLL;
                unint64_t v184 = *((void *)this + 1);
                if (v184 > 0xFFFFFFFFFFFFFFFBLL || v184 + 4 > *((void *)this + 2)) {
                  goto LABEL_232;
                }
                *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v184);
                goto LABEL_377;
              case 1006:
                *(void *)v8 |= 0x40uLL;
                unint64_t v185 = *((void *)this + 1);
                if (v185 > 0xFFFFFFFFFFFFFFFBLL || v185 + 4 > *((void *)this + 2)) {
                  goto LABEL_232;
                }
                *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v185);
                goto LABEL_377;
              case 1007:
                *(void *)v8 |= 0x4000000uLL;
                unint64_t v186 = *((void *)this + 1);
                if (v186 > 0xFFFFFFFFFFFFFFFBLL || v186 + 4 > *((void *)this + 2)) {
                  goto LABEL_232;
                }
                *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v186);
                goto LABEL_377;
              case 1008:
                *(void *)v8 |= 0x400000000000000uLL;
                unint64_t v187 = *((void *)this + 1);
                if (v187 >= *((void *)this + 2))
                {
                  BOOL v190 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v188 = v187 + 1;
                  int v189 = *(unsigned __int8 *)(*(void *)this + v187);
                  *((void *)this + 1) = v188;
                  BOOL v190 = v189 != 0;
                }
                *(unsigned char *)(a1 + 181) = v190;
                goto LABEL_378;
              case 1009:
                *(void *)v8 |= 0x400000000uLL;
                unint64_t v191 = *((void *)this + 1);
                if (v191 >= *((void *)this + 2))
                {
                  BOOL v194 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v192 = v191 + 1;
                  int v193 = *(unsigned __int8 *)(*(void *)this + v191);
                  *((void *)this + 1) = v192;
                  BOOL v194 = v193 != 0;
                }
                *(unsigned char *)(a1 + 157) = v194;
                goto LABEL_378;
              case 1010:
                char v195 = *(unsigned char *)(v8 + 10);
                *(_WORD *)(v8 + 8) |= 0x400u;
                *(unsigned char *)(v8 + 10) = v195;
                unint64_t v196 = *((void *)this + 1);
                if (v196 >= *((void *)this + 2))
                {
                  BOOL v199 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v197 = v196 + 1;
                  int v198 = *(unsigned __int8 *)(*(void *)this + v196);
                  *((void *)this + 1) = v197;
                  BOOL v199 = v198 != 0;
                }
                *(unsigned char *)(a1 + 197) = v199;
                goto LABEL_378;
              case 1011:
                *(void *)v8 |= 0x40000000000uLL;
                unint64_t v200 = *((void *)this + 1);
                if (v200 >= *((void *)this + 2))
                {
                  BOOL v203 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v201 = v200 + 1;
                  int v202 = *(unsigned __int8 *)(*(void *)this + v200);
                  *((void *)this + 1) = v201;
                  BOOL v203 = v202 != 0;
                }
                *(unsigned char *)(a1 + 165) = v203;
                goto LABEL_378;
              case 1012:
                *(void *)v8 |= 0x4000000000000uLL;
                unint64_t v204 = *((void *)this + 1);
                if (v204 >= *((void *)this + 2))
                {
                  BOOL v207 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v205 = v204 + 1;
                  int v206 = *(unsigned __int8 *)(*(void *)this + v204);
                  *((void *)this + 1) = v205;
                  BOOL v207 = v206 != 0;
                }
                *(unsigned char *)(a1 + 173) = v207;
                goto LABEL_378;
              case 1013:
                char v208 = *(unsigned char *)(v8 + 10);
                *(_WORD *)(v8 + 8) |= 8u;
                *(unsigned char *)(v8 + 10) = v208;
                unint64_t v209 = *((void *)this + 1);
                if (v209 >= *((void *)this + 2))
                {
                  BOOL v212 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v210 = v209 + 1;
                  int v211 = *(unsigned __int8 *)(*(void *)this + v209);
                  *((void *)this + 1) = v210;
                  BOOL v212 = v211 != 0;
                }
                *(unsigned char *)(a1 + 190) = v212;
                goto LABEL_378;
              case 1014:
                *(void *)v8 |= 0x40000uLL;
                unint64_t v213 = *((void *)this + 1);
                if (v213 > 0xFFFFFFFFFFFFFFFBLL || v213 + 4 > *((void *)this + 2)) {
                  goto LABEL_232;
                }
                *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v213);
                goto LABEL_377;
              case 1015:
                *(void *)v8 |= 0x400uLL;
                unint64_t v214 = *((void *)this + 1);
                if (v214 > 0xFFFFFFFFFFFFFFFBLL || v214 + 4 > *((void *)this + 2)) {
                  goto LABEL_232;
                }
                *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v214);
                goto LABEL_377;
              case 1016:
                *(void *)v8 |= 0x40000000uLL;
                unint64_t v215 = *((void *)this + 1);
                if (v215 > 0xFFFFFFFFFFFFFFFBLL || v215 + 4 > *((void *)this + 2)) {
                  goto LABEL_232;
                }
                *(_DWORD *)(a1 + 144) = *(_DWORD *)(*(void *)this + v215);
                goto LABEL_377;
              case 1017:
                *(void *)v8 |= 0x4000000000000000uLL;
                unint64_t v216 = *((void *)this + 1);
                if (v216 >= *((void *)this + 2))
                {
                  BOOL v219 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v217 = v216 + 1;
                  int v218 = *(unsigned __int8 *)(*(void *)this + v216);
                  *((void *)this + 1) = v217;
                  BOOL v219 = v218 != 0;
                }
                *(unsigned char *)(a1 + 185) = v219;
                goto LABEL_378;
              case 1018:
                *(void *)v8 |= 0x4000000000uLL;
                unint64_t v220 = *((void *)this + 1);
                if (v220 >= *((void *)this + 2))
                {
                  BOOL v223 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v221 = v220 + 1;
                  int v222 = *(unsigned __int8 *)(*(void *)this + v220);
                  *((void *)this + 1) = v221;
                  BOOL v223 = v222 != 0;
                }
                *(unsigned char *)(a1 + 161) = v223;
                goto LABEL_378;
              case 1019:
                char v224 = *(unsigned char *)(v8 + 10);
                *(_WORD *)(v8 + 8) |= 0x4000u;
                *(unsigned char *)(v8 + 10) = v224;
                unint64_t v225 = *((void *)this + 1);
                if (v225 >= *((void *)this + 2))
                {
                  BOOL v228 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v226 = v225 + 1;
                  int v227 = *(unsigned __int8 *)(*(void *)this + v225);
                  *((void *)this + 1) = v226;
                  BOOL v228 = v227 != 0;
                }
                *(unsigned char *)(a1 + 201) = v228;
                goto LABEL_378;
              case 1020:
                *(void *)v8 |= 0x400000000000uLL;
                unint64_t v229 = *((void *)this + 1);
                if (v229 >= *((void *)this + 2))
                {
                  BOOL v232 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v230 = v229 + 1;
                  int v231 = *(unsigned __int8 *)(*(void *)this + v229);
                  *((void *)this + 1) = v230;
                  BOOL v232 = v231 != 0;
                }
                *(unsigned char *)(a1 + 169) = v232;
                goto LABEL_378;
              case 1021:
                *(void *)v8 |= 0x40000000000000uLL;
                unint64_t v233 = *((void *)this + 1);
                if (v233 >= *((void *)this + 2))
                {
                  BOOL v236 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v234 = v233 + 1;
                  int v235 = *(unsigned __int8 *)(*(void *)this + v233);
                  *((void *)this + 1) = v234;
                  BOOL v236 = v235 != 0;
                }
                *(unsigned char *)(a1 + 177) = v236;
                goto LABEL_378;
              case 1022:
                char v237 = *(unsigned char *)(v8 + 10);
                *(_WORD *)(v8 + 8) |= 0x40u;
                *(unsigned char *)(v8 + 10) = v237;
                unint64_t v238 = *((void *)this + 1);
                if (v238 >= *((void *)this + 2))
                {
                  BOOL v241 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v239 = v238 + 1;
                  int v240 = *(unsigned __int8 *)(*(void *)this + v238);
                  *((void *)this + 1) = v239;
                  BOOL v241 = v240 != 0;
                }
                *(unsigned char *)(a1 + 193) = v241;
                goto LABEL_378;
              default:
                goto LABEL_153;
            }
            break;
        }
        while (1)
        {
          if (v39 == v38)
          {
            uint64_t v43 = 0;
            *((unsigned char *)this + 24) = 1;
            goto LABEL_394;
          }
          unint64_t v311 = v38 + 1;
          char v312 = *(unsigned char *)(v40 + v38);
          *((void *)this + 1) = v311;
          v43 |= (unint64_t)(v312 & 0x7F) << v309;
          if ((v312 & 0x80) == 0) {
            break;
          }
          v309 += 7;
          unint64_t v38 = v311;
          BOOL v15 = v310++ > 8;
          if (v15) {
            goto LABEL_265;
          }
        }
        if (*((unsigned char *)this + 24)) {
          uint64_t v43 = 0;
        }
LABEL_394:
        *(void *)(a1 + 16) = v43;
      }
LABEL_378:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v16 = 0;
    unsigned int v17 = 0;
    unint64_t v12 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v18 = v2 + 1;
      char v19 = *(unsigned char *)(v9 + v2);
      *((void *)this + 1) = v18;
      v12 |= (unint64_t)(v19 & 0x7F) << v16;
      if ((v19 & 0x80) == 0) {
        goto LABEL_21;
      }
      v16 += 7;
      unint64_t v2 = v18;
      if (v17++ >= 9)
      {
LABEL_20:
        unint64_t v12 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B70984(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(result + 204);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
    uint64_t v4 = *(void *)(v3 + 204);
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v5 = *(unsigned __int16 *)(result + 212) | (*(unsigned __int8 *)(result + 214) << 16);
  if ((v4 & 0x10) != 0)
  {
LABEL_5:
    uint64_t result = PB::Writer::writeVarInt(this);
    int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
    uint64_t v4 = *(void *)(v3 + 204);
  }
LABEL_6:
  if ((v5 & 2) != 0)
  {
    uint64_t result = PB::Writer::write(this);
    int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
    uint64_t v4 = *(void *)(v3 + 204);
    if ((v4 & 0x200000) == 0)
    {
LABEL_8:
      if ((v4 & 0x2000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_88;
    }
  }
  else if ((v4 & 0x200000) == 0)
  {
    goto LABEL_8;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 108));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x2000) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_89;
  }
LABEL_88:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x20) == 0)
  {
LABEL_10:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_90;
  }
LABEL_89:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_11:
    if ((v4 & 0x200000000000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_91;
  }
LABEL_90:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 124));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x200000000000000) == 0)
  {
LABEL_12:
    if ((v4 & 0x200000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_92;
  }
LABEL_91:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x200000000) == 0)
  {
LABEL_13:
    if ((v5 & 0x200) == 0) {
      goto LABEL_14;
    }
    goto LABEL_93;
  }
LABEL_92:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x200) == 0)
  {
LABEL_14:
    if ((v4 & 0x20000000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_94;
  }
LABEL_93:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x20000000000) == 0)
  {
LABEL_15:
    if ((v4 & 0x2000000000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_95;
  }
LABEL_94:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x2000000000000) == 0)
  {
LABEL_16:
    if ((v5 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_96;
  }
LABEL_95:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 4) == 0)
  {
LABEL_17:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_97;
  }
LABEL_96:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x20000) == 0)
  {
LABEL_18:
    if ((v4 & 0x200) == 0) {
      goto LABEL_19;
    }
    goto LABEL_98;
  }
LABEL_97:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 92));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x200) == 0)
  {
LABEL_19:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_99;
  }
LABEL_98:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 60));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_20:
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_100;
  }
LABEL_99:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 140));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x2000000000000000) == 0)
  {
LABEL_21:
    if ((v4 & 0x2000000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_101;
  }
LABEL_100:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x2000000000) == 0)
  {
LABEL_22:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_102;
  }
LABEL_101:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x2000) == 0)
  {
LABEL_23:
    if ((v4 & 0x200000000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_103;
  }
LABEL_102:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x200000000000) == 0)
  {
LABEL_24:
    if ((v4 & 0x20000000000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_104;
  }
LABEL_103:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x20000000000000) == 0)
  {
LABEL_25:
    if ((v4 & 2) == 0) {
      goto LABEL_26;
    }
    goto LABEL_105;
  }
LABEL_104:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 2) == 0)
  {
LABEL_26:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_106;
  }
LABEL_105:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x400000) == 0)
  {
LABEL_27:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_107;
  }
LABEL_106:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 112));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x4000) == 0)
  {
LABEL_28:
    if ((v4 & 0x40) == 0) {
      goto LABEL_29;
    }
    goto LABEL_108;
  }
LABEL_107:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x40) == 0)
  {
LABEL_29:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_109;
  }
LABEL_108:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_30:
    if ((v4 & 0x400000000000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_110;
  }
LABEL_109:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 128));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x400000000000000) == 0)
  {
LABEL_31:
    if ((v4 & 0x400000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_111;
  }
LABEL_110:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x400000000) == 0)
  {
LABEL_32:
    if ((v5 & 0x400) == 0) {
      goto LABEL_33;
    }
    goto LABEL_112;
  }
LABEL_111:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x400) == 0)
  {
LABEL_33:
    if ((v4 & 0x40000000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_113;
  }
LABEL_112:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x40000000000) == 0)
  {
LABEL_34:
    if ((v4 & 0x4000000000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_114;
  }
LABEL_113:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x4000000000000) == 0)
  {
LABEL_35:
    if ((v5 & 8) == 0) {
      goto LABEL_36;
    }
    goto LABEL_115;
  }
LABEL_114:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 8) == 0)
  {
LABEL_36:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_116;
  }
LABEL_115:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x40000) == 0)
  {
LABEL_37:
    if ((v4 & 0x400) == 0) {
      goto LABEL_38;
    }
    goto LABEL_117;
  }
LABEL_116:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 96));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x400) == 0)
  {
LABEL_38:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_118;
  }
LABEL_117:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x40000000) == 0)
  {
LABEL_39:
    if ((v4 & 0x4000000000000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_119;
  }
LABEL_118:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 144));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x4000000000000000) == 0)
  {
LABEL_40:
    if ((v4 & 0x4000000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_120;
  }
LABEL_119:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x4000000000) == 0)
  {
LABEL_41:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_121;
  }
LABEL_120:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x4000) == 0)
  {
LABEL_42:
    if ((v4 & 0x400000000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_122;
  }
LABEL_121:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x400000000000) == 0)
  {
LABEL_43:
    if ((v4 & 0x40000000000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_123;
  }
LABEL_122:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x40000000000000) == 0)
  {
LABEL_44:
    if ((v5 & 0x40) == 0) {
      goto LABEL_45;
    }
    goto LABEL_124;
  }
LABEL_123:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x40) == 0)
  {
LABEL_45:
    if ((v4 & 4) == 0) {
      goto LABEL_46;
    }
    goto LABEL_125;
  }
LABEL_124:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 4) == 0)
  {
LABEL_46:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_126;
  }
LABEL_125:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x800000) == 0)
  {
LABEL_47:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_127;
  }
LABEL_126:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 116));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x8000) == 0)
  {
LABEL_48:
    if ((v4 & 0x80) == 0) {
      goto LABEL_49;
    }
    goto LABEL_128;
  }
LABEL_127:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x80) == 0)
  {
LABEL_49:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_129;
  }
LABEL_128:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_50:
    if ((v4 & 0x800000000000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_130;
  }
LABEL_129:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 132));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x800000000000000) == 0)
  {
LABEL_51:
    if ((v4 & 0x800000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_131;
  }
LABEL_130:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x800000000) == 0)
  {
LABEL_52:
    if ((v5 & 0x800) == 0) {
      goto LABEL_53;
    }
    goto LABEL_132;
  }
LABEL_131:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x800) == 0)
  {
LABEL_53:
    if ((v4 & 0x80000000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_133;
  }
LABEL_132:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x80000000000) == 0)
  {
LABEL_54:
    if ((v4 & 0x8000000000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_134;
  }
LABEL_133:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x8000000000000) == 0)
  {
LABEL_55:
    if ((v5 & 0x10) == 0) {
      goto LABEL_56;
    }
    goto LABEL_135;
  }
LABEL_134:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x10) == 0)
  {
LABEL_56:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_136;
  }
LABEL_135:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x80000) == 0)
  {
LABEL_57:
    if ((v4 & 0x800) == 0) {
      goto LABEL_58;
    }
    goto LABEL_137;
  }
LABEL_136:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 100));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x800) == 0)
  {
LABEL_58:
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_138;
  }
LABEL_137:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 68));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x80000000) == 0)
  {
LABEL_59:
    if ((v4 & 0x8000000000000000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_139;
  }
LABEL_138:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 148));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x8000000000000000) == 0)
  {
LABEL_60:
    if ((v4 & 0x8000000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_140;
  }
LABEL_139:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x8000000000) == 0)
  {
LABEL_61:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_141;
  }
LABEL_140:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x8000) == 0)
  {
LABEL_62:
    if ((v4 & 0x800000000000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_142;
  }
LABEL_141:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x800000000000) == 0)
  {
LABEL_63:
    if ((v4 & 0x80000000000000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_143;
  }
LABEL_142:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x80000000000000) == 0)
  {
LABEL_64:
    if ((v5 & 0x80) == 0) {
      goto LABEL_65;
    }
    goto LABEL_144;
  }
LABEL_143:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x80) == 0)
  {
LABEL_65:
    if ((v4 & 8) == 0) {
      goto LABEL_66;
    }
    goto LABEL_145;
  }
LABEL_144:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 8) == 0)
  {
LABEL_66:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_146;
  }
LABEL_145:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_67:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_147;
  }
LABEL_146:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 120));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x10000) == 0)
  {
LABEL_68:
    if ((v4 & 0x100) == 0) {
      goto LABEL_69;
    }
    goto LABEL_148;
  }
LABEL_147:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 88));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x100) == 0)
  {
LABEL_69:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_149;
  }
LABEL_148:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_70:
    if ((v4 & 0x1000000000000000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_150;
  }
LABEL_149:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 136));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x1000000000000000) == 0)
  {
LABEL_71:
    if ((v4 & 0x1000000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_151;
  }
LABEL_150:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x1000000000) == 0)
  {
LABEL_72:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_152;
  }
LABEL_151:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x1000) == 0)
  {
LABEL_73:
    if ((v4 & 0x100000000000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_153;
  }
LABEL_152:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x100000000000) == 0)
  {
LABEL_74:
    if ((v4 & 0x10000000000000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_154;
  }
LABEL_153:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x10000000000000) == 0)
  {
LABEL_75:
    if ((v5 & 0x20) == 0) {
      goto LABEL_76;
    }
    goto LABEL_155;
  }
LABEL_154:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x20) == 0)
  {
LABEL_76:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_156;
  }
LABEL_155:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x100000) == 0)
  {
LABEL_77:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_157;
  }
LABEL_156:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 104));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x1000) == 0)
  {
LABEL_78:
    if ((v4 & 0x100000000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_158;
  }
LABEL_157:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x100000000) == 0)
  {
LABEL_79:
    if ((v5 & 1) == 0) {
      goto LABEL_80;
    }
    goto LABEL_159;
  }
LABEL_158:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 152));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 1) == 0)
  {
LABEL_80:
    if ((v4 & 0x10000000000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_160;
  }
LABEL_159:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x10000000000) == 0)
  {
LABEL_81:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_161;
  }
LABEL_160:
  uint64_t result = PB::Writer::write(this);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v5 & 0x10000) == 0)
  {
LABEL_82:
    if ((v4 & 0x1000000000000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_162;
  }
LABEL_161:
  uint64_t result = PB::Writer::write(this);
  LOWORD(v5) = *(_WORD *)(v3 + 212);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x1000000000000) == 0)
  {
LABEL_83:
    if ((v4 & 0x100000000000000) == 0) {
      goto LABEL_84;
    }
LABEL_163:
    uint64_t result = PB::Writer::write(this);
    if ((*(_WORD *)(v3 + 212) & 0x100) == 0) {
      return result;
    }
    goto LABEL_164;
  }
LABEL_162:
  uint64_t result = PB::Writer::write(this);
  LOWORD(v5) = *(_WORD *)(v3 + 212);
  if ((*(void *)(v3 + 204) & 0x100000000000000) != 0) {
    goto LABEL_163;
  }
LABEL_84:
  if ((v5 & 0x100) == 0) {
    return result;
  }
LABEL_164:

  return PB::Writer::write(this);
}

uint64_t sub_227B71660(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC20F18;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void sub_227B71688(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B716C0(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC20F18;
  *(_DWORD *)(result + 32) = 0;
  char v2 = *(unsigned char *)(a2 + 32);
  if ((v2 & 2) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 16);
    char v3 = 2;
    *(unsigned char *)(result + 32) = 2;
    *(void *)(result + 16) = v4;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if (*(unsigned char *)(a2 + 32))
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 8);
    v3 |= 1u;
    *(unsigned char *)(result + 32) = v3;
    *(void *)(result + 8) = v5;
    char v2 = *(unsigned char *)(a2 + 32);
  }
LABEL_6:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      return result;
    }
LABEL_10:
    int v7 = *(_DWORD *)(a2 + 28);
    *(unsigned char *)(result + 32) = v3 | 8;
    *(_DWORD *)(result + 28) = v7;
    return result;
  }
  int v6 = *(_DWORD *)(a2 + 24);
  v3 |= 4u;
  *(unsigned char *)(result + 32) = v3;
  *(_DWORD *)(result + 24) = v6;
  if ((*(unsigned char *)(a2 + 32) & 8) != 0) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_227B7175C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "distanceToNearestRoad", *(float *)(a1 + 24));
    char v5 = *(unsigned char *)(a1 + 32);
    if ((v5 & 8) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 32) & 8) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "roadClass");
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 1) == 0)
  {
LABEL_4:
    if ((v5 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "searchTimestamp");
  if ((*(unsigned char *)(a1 + 32) & 2) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "timestamp");
LABEL_6:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B71820(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 32) |= 2u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v39 = 0;
                unsigned int v40 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_74;
                  }
                  unint64_t v41 = v20++;
                  char v42 = *(unsigned char *)(v21 + v41);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v42 & 0x7F) << v39;
                  if ((v42 & 0x80) == 0) {
                    break;
                  }
                  v39 += 7;
                  BOOL v14 = v40++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_73;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_73:
                unint64_t v2 = v41 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_74;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_74:
              *(void *)(a1 + 16) = v24;
              goto LABEL_85;
            case 2u:
              *(unsigned char *)(a1 + 32) |= 1u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v43 = 0;
                unsigned int v44 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    uint64_t v31 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_79;
                  }
                  unint64_t v45 = v27++;
                  char v46 = *(unsigned char *)(v28 + v45);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v46 & 0x7F) << v43;
                  if ((v46 & 0x80) == 0) {
                    break;
                  }
                  v43 += 7;
                  BOOL v14 = v44++ > 8;
                  if (v14)
                  {
                    uint64_t v31 = 0;
LABEL_78:
                    unint64_t v2 = v45 + 1;
                    goto LABEL_79;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v31 = 0;
                }
                goto LABEL_78;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_79;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              uint64_t v31 = 0;
LABEL_79:
              *(void *)(a1 + 8) = v31;
              goto LABEL_85;
            case 3u:
              *(unsigned char *)(a1 + 32) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_85;
            case 4u:
              *(unsigned char *)(a1 + 32) |= 8u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v47 = 0;
                unsigned int v48 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_84;
                  }
                  unint64_t v49 = v33++;
                  char v50 = *(unsigned char *)(v34 + v49);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v50 & 0x7F) << v47;
                  if ((v50 & 0x80) == 0) {
                    break;
                  }
                  v47 += 7;
                  BOOL v14 = v48++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_83:
                    unint64_t v2 = v49 + 1;
                    goto LABEL_84;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_83;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_84;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_84:
              *(_DWORD *)(a1 + 28) = v37;
LABEL_85:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_85;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B71CB4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 32);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
      if ((*(unsigned char *)(v3 + 32) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 32) & 1) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 8) == 0) {
    return result;
  }
LABEL_9:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227B71D5C(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC20F50;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void sub_227B71D84(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B71DBC(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC20F50;
  *(_DWORD *)(result + 40) = 0;
  char v2 = *(unsigned char *)(a2 + 40);
  if ((v2 & 4) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 24);
    char v3 = 4;
    *(unsigned char *)(result + 40) = 4;
    *(void *)(result + 24) = v4;
    char v2 = *(unsigned char *)(a2 + 40);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 40) & 8) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 32);
    v3 |= 8u;
    *(unsigned char *)(result + 40) = v3;
    *(_DWORD *)(result + 32) = v5;
    char v2 = *(unsigned char *)(a2 + 40);
  }
LABEL_6:
  if ((v2 & 0x10) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 36);
    v3 |= 0x10u;
    *(unsigned char *)(result + 40) = v3;
    *(_DWORD *)(result + 36) = v6;
    char v2 = *(unsigned char *)(a2 + 40);
    if ((v2 & 1) == 0)
    {
LABEL_8:
      if ((v2 & 2) == 0) {
        return result;
      }
LABEL_12:
      uint64_t v8 = *(void *)(a2 + 16);
      *(unsigned char *)(result + 40) = v3 | 2;
      *(void *)(result + 16) = v8;
      return result;
    }
  }
  else if ((v2 & 1) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(unsigned char *)(result + 40) = v3;
  *(void *)(result + 8) = v7;
  if ((*(unsigned char *)(a2 + 40) & 2) != 0) {
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_227B71E74(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 8) != 0)
  {
    PB::TextFormatter::format(this, "distanceToNearestRoad", *(float *)(a1 + 32));
    char v5 = *(unsigned char *)(a1 + 40);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 40) & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "epochFirstTimestamp");
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 2) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(this, "epochLastTimestamp");
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 4) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(this, "roadClass");
  if ((*(unsigned char *)(a1 + 40) & 4) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "timestamp");
LABEL_7:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B71F58(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  for (int i = *((unsigned __int8 *)this + 24); v2 < v3 && i == 0; int i = *((unsigned __int8 *)this + 24))
  {
    uint64_t v8 = *(void *)this;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      while (v3 != v2)
      {
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)this + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_20;
        }
        v15 += 7;
        unint64_t v2 = v17;
        if (v16++ >= 9)
        {
LABEL_19:
          unint64_t v11 = 0;
          goto LABEL_20;
        }
      }
      int i = 1;
      *((unsigned char *)this + 24) = 1;
      return i == 0;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)this + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_20:
    if ((v11 & 7) == 4)
    {
      int i = 0;
      return i == 0;
    }
    unint64_t v20 = v11 >> 3;
    if ((int)(v11 >> 3) <= 103)
    {
      if (v20 == 101)
      {
        *(unsigned char *)(a1 + 40) |= 4u;
        unint64_t v39 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v40 = *(void *)this;
        if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
        {
          char v58 = 0;
          unsigned int v59 = 0;
          uint64_t v43 = 0;
          if (v2 <= v39) {
            unint64_t v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v39)
            {
              uint64_t v43 = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_108;
            }
            unint64_t v60 = v39++;
            char v61 = *(unsigned char *)(v40 + v60);
            *((void *)this + 1) = v39;
            v43 |= (unint64_t)(v61 & 0x7F) << v58;
            if ((v61 & 0x80) == 0) {
              break;
            }
            v58 += 7;
            BOOL v14 = v59++ > 8;
            if (v14)
            {
              uint64_t v43 = 0;
              goto LABEL_107;
            }
          }
          if (*((unsigned char *)this + 24)) {
            uint64_t v43 = 0;
          }
LABEL_107:
          unint64_t v2 = v60 + 1;
        }
        else
        {
          char v41 = 0;
          unsigned int v42 = 0;
          uint64_t v43 = 0;
          while (1)
          {
            unint64_t v2 = v39 + 1;
            *((void *)this + 1) = v39 + 1;
            char v44 = *(unsigned char *)(v40 + v39);
            v43 |= (unint64_t)(v44 & 0x7F) << v41;
            if ((v44 & 0x80) == 0) {
              break;
            }
            v41 += 7;
            unint64_t v39 = v2;
            BOOL v14 = v42++ > 8;
            if (v14)
            {
              uint64_t v43 = 0;
              break;
            }
          }
        }
LABEL_108:
        *(void *)(a1 + 24) = v43;
      }
      else
      {
        if (v20 != 103)
        {
LABEL_58:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          goto LABEL_109;
        }
        *(unsigned char *)(a1 + 40) |= 8u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
        {
          *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 4;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
    }
    else
    {
      switch(v20)
      {
        case 0x68:
          *(unsigned char *)(a1 + 40) |= 0x10u;
          unint64_t v27 = *((void *)this + 1);
          unint64_t v2 = *((void *)this + 2);
          uint64_t v28 = *(void *)this;
          if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
          {
            char v50 = 0;
            unsigned int v51 = 0;
            uint64_t v31 = 0;
            if (v2 <= v27) {
              unint64_t v2 = *((void *)this + 1);
            }
            while (1)
            {
              if (v2 == v27)
              {
                LODWORD(v31) = 0;
                *((unsigned char *)this + 24) = 1;
                goto LABEL_98;
              }
              unint64_t v52 = v27++;
              char v53 = *(unsigned char *)(v28 + v52);
              *((void *)this + 1) = v27;
              v31 |= (unint64_t)(v53 & 0x7F) << v50;
              if ((v53 & 0x80) == 0) {
                break;
              }
              v50 += 7;
              BOOL v14 = v51++ > 8;
              if (v14)
              {
                LODWORD(v31) = 0;
                goto LABEL_97;
              }
            }
            if (*((unsigned char *)this + 24)) {
              LODWORD(v31) = 0;
            }
LABEL_97:
            unint64_t v2 = v52 + 1;
          }
          else
          {
            char v29 = 0;
            unsigned int v30 = 0;
            uint64_t v31 = 0;
            while (1)
            {
              unint64_t v2 = v27 + 1;
              *((void *)this + 1) = v27 + 1;
              char v32 = *(unsigned char *)(v28 + v27);
              v31 |= (unint64_t)(v32 & 0x7F) << v29;
              if ((v32 & 0x80) == 0) {
                break;
              }
              v29 += 7;
              unint64_t v27 = v2;
              BOOL v14 = v30++ > 8;
              if (v14)
              {
                LODWORD(v31) = 0;
                break;
              }
            }
          }
LABEL_98:
          *(_DWORD *)(a1 + 36) = v31;
          break;
        case 0xC9:
          *(unsigned char *)(a1 + 40) |= 1u;
          unint64_t v33 = *((void *)this + 1);
          unint64_t v2 = *((void *)this + 2);
          uint64_t v34 = *(void *)this;
          if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
          {
            char v54 = 0;
            unsigned int v55 = 0;
            uint64_t v37 = 0;
            if (v2 <= v33) {
              unint64_t v2 = *((void *)this + 1);
            }
            while (1)
            {
              if (v2 == v33)
              {
                uint64_t v37 = 0;
                *((unsigned char *)this + 24) = 1;
                goto LABEL_103;
              }
              unint64_t v56 = v33++;
              char v57 = *(unsigned char *)(v34 + v56);
              *((void *)this + 1) = v33;
              v37 |= (unint64_t)(v57 & 0x7F) << v54;
              if ((v57 & 0x80) == 0) {
                break;
              }
              v54 += 7;
              BOOL v14 = v55++ > 8;
              if (v14)
              {
                uint64_t v37 = 0;
                goto LABEL_102;
              }
            }
            if (*((unsigned char *)this + 24)) {
              uint64_t v37 = 0;
            }
LABEL_102:
            unint64_t v2 = v56 + 1;
          }
          else
          {
            char v35 = 0;
            unsigned int v36 = 0;
            uint64_t v37 = 0;
            while (1)
            {
              unint64_t v2 = v33 + 1;
              *((void *)this + 1) = v33 + 1;
              char v38 = *(unsigned char *)(v34 + v33);
              v37 |= (unint64_t)(v38 & 0x7F) << v35;
              if ((v38 & 0x80) == 0) {
                break;
              }
              v35 += 7;
              unint64_t v33 = v2;
              BOOL v14 = v36++ > 8;
              if (v14)
              {
                uint64_t v37 = 0;
                break;
              }
            }
          }
LABEL_103:
          *(void *)(a1 + 8) = v37;
          break;
        case 0xCA:
          *(unsigned char *)(a1 + 40) |= 2u;
          unint64_t v21 = *((void *)this + 1);
          unint64_t v2 = *((void *)this + 2);
          uint64_t v22 = *(void *)this;
          if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
          {
            char v46 = 0;
            unsigned int v47 = 0;
            uint64_t v25 = 0;
            if (v2 <= v21) {
              unint64_t v2 = *((void *)this + 1);
            }
            while (1)
            {
              if (v2 == v21)
              {
                uint64_t v25 = 0;
                *((unsigned char *)this + 24) = 1;
                goto LABEL_93;
              }
              unint64_t v48 = v21++;
              char v49 = *(unsigned char *)(v22 + v48);
              *((void *)this + 1) = v21;
              v25 |= (unint64_t)(v49 & 0x7F) << v46;
              if ((v49 & 0x80) == 0) {
                break;
              }
              v46 += 7;
              BOOL v14 = v47++ > 8;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_92;
              }
            }
            if (*((unsigned char *)this + 24)) {
              uint64_t v25 = 0;
            }
LABEL_92:
            unint64_t v2 = v48 + 1;
          }
          else
          {
            char v23 = 0;
            unsigned int v24 = 0;
            uint64_t v25 = 0;
            while (1)
            {
              unint64_t v2 = v21 + 1;
              *((void *)this + 1) = v21 + 1;
              char v26 = *(unsigned char *)(v22 + v21);
              v25 |= (unint64_t)(v26 & 0x7F) << v23;
              if ((v26 & 0x80) == 0) {
                break;
              }
              v23 += 7;
              unint64_t v21 = v2;
              BOOL v14 = v24++ > 8;
              if (v14)
              {
                uint64_t v25 = 0;
                break;
              }
            }
          }
LABEL_93:
          *(void *)(a1 + 16) = v25;
          break;
        default:
          goto LABEL_58;
      }
    }
LABEL_109:
    unint64_t v3 = *((void *)this + 2);
  }
  return i == 0;
}

uint64_t sub_227B724CC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 40);
  if ((v4 & 4) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 40) & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 0x10) == 0)
  {
LABEL_4:
    if ((v4 & 1) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(unsigned char *)(v3 + 40) & 2) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 40);
  if (v4) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_11:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227B72590(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC20F88;
  *(_DWORD *)(result + 324) = 0;
  *(void *)(result + 316) = 0;
  return result;
}

void sub_227B725C0(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227B725F8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC20F88;
  unint64_t v2 = (uint64_t *)(a1 + 316);
  *(_DWORD *)(a1 + 324) = 0;
  *(void *)(a1 + 316) = 0;
  uint64_t v3 = (uint64_t *)(a2 + 316);
  uint64_t v4 = *(void *)(a2 + 316);
  if (v4)
  {
    unint64_t v6 = 0;
    unint64_t v8 = *(void *)(a2 + 8);
    *(unsigned char *)(a1 + 326) = 0;
    *(_WORD *)(a1 + 324) = 0;
    uint64_t v5 = 1;
    *unint64_t v2 = 1;
    *(void *)(a1 + 8) = v8;
    LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
    uint64_t v4 = *v3;
    if ((*(_WORD *)(a2 + 324) & 0x8000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v5 = 0;
  unint64_t v6 = 0;
  int v7 = *(unsigned __int16 *)(a2 + 324);
  LODWORD(v8) = v7 | (*(unsigned __int8 *)(a2 + 326) << 16);
  if ((v7 & 0x8000) != 0)
  {
LABEL_5:
    char v9 = *(unsigned char *)(a2 + 310);
    unint64_t v6 = 0x8000;
    *unint64_t v2 = v5;
    *(unsigned char *)(a1 + 326) = 0;
    *(_WORD *)(a1 + 324) = 0x8000;
    *(unsigned char *)(a1 + 310) = v9;
    LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
    uint64_t v4 = *v3;
  }
LABEL_6:
  if ((v8 & 0x10000) != 0)
  {
    char v10 = *(unsigned char *)(a2 + 311);
    *(_WORD *)(a1 + 324) = v6;
    v6 |= 0x10000uLL;
    *unint64_t v2 = v5;
    *(unsigned char *)(a1 + 326) = BYTE2(v6);
    *(unsigned char *)(a1 + 311) = v10;
    LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
    uint64_t v4 = *v3;
    if ((*v3 & 0x40000000000) == 0)
    {
LABEL_8:
      if ((v4 & 0x40000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_90;
    }
  }
  else if ((v4 & 0x40000000000) == 0)
  {
    goto LABEL_8;
  }
  float result = *(float *)(a2 + 180);
  v5 |= 0x40000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 180) = result;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 0x40000) == 0)
  {
LABEL_9:
    if ((v8 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_91;
  }
LABEL_90:
  float result = *(float *)(a2 + 84);
  v5 |= 0x40000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 84) = result;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*(_WORD *)(a2 + 324) & 8) == 0)
  {
LABEL_10:
    if ((v8 & 0x2000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_92;
  }
LABEL_91:
  float result = *(float *)(a2 + 280);
  unint64_t v8 = v6 >> 16;
  v6 |= 8uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 326) = v8;
  *(_WORD *)(a1 + 324) = v6;
  *(float *)(a1 + 280) = result;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*(_WORD *)(a2 + 324) & 0x2000) == 0)
  {
LABEL_11:
    if ((v8 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_93;
  }
LABEL_92:
  char v12 = *(unsigned char *)(a2 + 308);
  unint64_t v13 = v6 >> 16;
  v6 |= 0x2000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 326) = v13;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 308) = v12;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*(_WORD *)(a2 + 324) & 0x400) == 0)
  {
LABEL_12:
    if ((v8 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_94;
  }
LABEL_93:
  char v14 = *(unsigned char *)(a2 + 305);
  unint64_t v15 = v6 >> 16;
  v6 |= 0x400uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 326) = v15;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 305) = v14;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*(_WORD *)(a2 + 324) & 0x200) == 0)
  {
LABEL_13:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_95;
  }
LABEL_94:
  char v16 = *(unsigned char *)(a2 + 304);
  unint64_t v17 = v6 >> 16;
  v6 |= 0x200uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 326) = v17;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 304) = v16;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 0x2000000) == 0)
  {
LABEL_14:
    if ((v8 & 0x1000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_96;
  }
LABEL_95:
  int v18 = *(_DWORD *)(a2 + 112);
  v5 |= 0x2000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(_DWORD *)(a1 + 112) = v18;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*(_WORD *)(a2 + 324) & 0x1000) == 0)
  {
LABEL_15:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_97;
  }
LABEL_96:
  char v19 = *(unsigned char *)(a2 + 307);
  unint64_t v20 = v6 >> 16;
  v6 |= 0x1000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 326) = v20;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 307) = v19;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 0x1000000) == 0)
  {
LABEL_16:
    if ((v4 & 0x2000000000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_98;
  }
LABEL_97:
  float result = *(float *)(a2 + 108);
  v5 |= 0x1000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 108) = result;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 0x2000000000000) == 0)
  {
LABEL_17:
    if ((v4 & 0x1000000000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_99;
  }
LABEL_98:
  float result = *(float *)(a2 + 208);
  v5 |= 0x2000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 208) = result;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 0x1000000000000) == 0)
  {
LABEL_18:
    if ((v4 & 0x4000000000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_100;
  }
LABEL_99:
  float result = *(float *)(a2 + 204);
  v5 |= 0x1000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 204) = result;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 0x4000000000000) == 0)
  {
LABEL_19:
    if ((v4 & 0x40) == 0) {
      goto LABEL_20;
    }
    goto LABEL_101;
  }
LABEL_100:
  float result = *(float *)(a2 + 212);
  v5 |= 0x4000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 212) = result;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 0x40) == 0)
  {
LABEL_20:
    if ((v4 & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_102;
  }
LABEL_101:
  float result = *(float *)(a2 + 36);
  v5 |= 0x40uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 36) = result;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 2) == 0)
  {
LABEL_21:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_103;
  }
LABEL_102:
  float result = *(float *)(a2 + 16);
  v5 |= 2uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 16) = result;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 0x8000) == 0)
  {
LABEL_22:
    if ((v8 & 0x40000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_104;
  }
LABEL_103:
  float result = *(float *)(a2 + 72);
  v5 |= 0x8000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 72) = result;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((v8 & 0x40000) == 0)
  {
LABEL_23:
    if ((v8 & 0x800) == 0) {
      goto LABEL_24;
    }
    goto LABEL_105;
  }
LABEL_104:
  char v21 = *(unsigned char *)(a2 + 313);
  *(_WORD *)(a1 + 324) = v6;
  v6 |= 0x40000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(unsigned char *)(a1 + 313) = v21;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*(_WORD *)(a2 + 324) & 0x800) == 0)
  {
LABEL_24:
    if ((v8 & 0x4000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_106;
  }
LABEL_105:
  char v22 = *(unsigned char *)(a2 + 306);
  unint64_t v23 = v6 >> 16;
  v6 |= 0x800uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 326) = v23;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 306) = v22;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*(_WORD *)(a2 + 324) & 0x4000) == 0)
  {
LABEL_25:
    if ((v4 & 0x20000000000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_107;
  }
LABEL_106:
  char v24 = *(unsigned char *)(a2 + 309);
  unint64_t v25 = v6 >> 16;
  v6 |= 0x4000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 326) = v25;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 309) = v24;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 0x20000000000000) == 0)
  {
LABEL_26:
    if ((v4 & 0x8000000000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_108;
  }
LABEL_107:
  float result = *(float *)(a2 + 224);
  v5 |= 0x20000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 224) = result;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 0x8000000000000) == 0)
  {
LABEL_27:
    if ((v4 & 0x10000000000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_109;
  }
LABEL_108:
  float result = *(float *)(a2 + 216);
  v5 |= 0x8000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 216) = result;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 0x10000000000000) == 0)
  {
LABEL_28:
    if ((v8 & 0x20000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_110;
  }
LABEL_109:
  int v26 = *(_DWORD *)(a2 + 220);
  v5 |= 0x10000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(_DWORD *)(a1 + 220) = v26;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((v8 & 0x20000) == 0)
  {
LABEL_29:
    if ((v4 & 0x40000000000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_111;
  }
LABEL_110:
  char v27 = *(unsigned char *)(a2 + 312);
  *(_WORD *)(a1 + 324) = v6;
  v6 |= 0x20000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(unsigned char *)(a1 + 312) = v27;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x40000000000000) == 0)
  {
LABEL_30:
    if ((v4 & 0x800000000000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_112;
  }
LABEL_111:
  float result = *(float *)(a2 + 228);
  v5 |= 0x40000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 228) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x800000000000000) == 0)
  {
LABEL_31:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_113;
  }
LABEL_112:
  float result = *(float *)(a2 + 248);
  v5 |= 0x800000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 248) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x80000) == 0)
  {
LABEL_32:
    if ((v4 & 0x80000000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_114;
  }
LABEL_113:
  float result = *(float *)(a2 + 88);
  v5 |= 0x80000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 88) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x80000000000) == 0)
  {
LABEL_33:
    if ((v8 & 0x10) == 0) {
      goto LABEL_34;
    }
    goto LABEL_115;
  }
LABEL_114:
  float result = *(float *)(a2 + 184);
  v5 |= 0x80000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 184) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((v8 & 0x10) == 0)
  {
LABEL_34:
    if ((v4 & 0x80000000000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_116;
  }
LABEL_115:
  float result = *(float *)(a2 + 284);
  unint64_t v8 = v6 >> 16;
  v6 |= 0x10uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 326) = v8;
  *(_WORD *)(a1 + 324) = v6;
  *(float *)(a1 + 284) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x80000000000000) == 0)
  {
LABEL_35:
    if ((v4 & 0x1000000000000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_117;
  }
LABEL_116:
  float result = *(float *)(a2 + 232);
  v5 |= 0x80000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 232) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x1000000000000000) == 0)
  {
LABEL_36:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_118;
  }
LABEL_117:
  float result = *(float *)(a2 + 252);
  v5 |= 0x1000000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 252) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x100000) == 0)
  {
LABEL_37:
    if ((v4 & 0x100000000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_119;
  }
LABEL_118:
  float result = *(float *)(a2 + 92);
  v5 |= 0x100000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 92) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x100000000000) == 0)
  {
LABEL_38:
    if ((v8 & 0x20) == 0) {
      goto LABEL_39;
    }
    goto LABEL_120;
  }
LABEL_119:
  float result = *(float *)(a2 + 188);
  v5 |= 0x100000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 188) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((v8 & 0x20) == 0)
  {
LABEL_39:
    if ((v4 & 0x100000000000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_121;
  }
LABEL_120:
  float result = *(float *)(a2 + 288);
  unint64_t v8 = v6 >> 16;
  v6 |= 0x20uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 326) = v8;
  *(_WORD *)(a1 + 324) = v6;
  *(float *)(a1 + 288) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x100000000000000) == 0)
  {
LABEL_40:
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_122;
  }
LABEL_121:
  float result = *(float *)(a2 + 236);
  v5 |= 0x100000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 236) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x2000000000000000) == 0)
  {
LABEL_41:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_123;
  }
LABEL_122:
  float result = *(float *)(a2 + 256);
  v5 |= 0x2000000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 256) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x200000) == 0)
  {
LABEL_42:
    if ((v4 & 0x200000000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_124;
  }
LABEL_123:
  float result = *(float *)(a2 + 96);
  v5 |= 0x200000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 96) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x200000000000) == 0)
  {
LABEL_43:
    if ((v8 & 0x40) == 0) {
      goto LABEL_44;
    }
    goto LABEL_125;
  }
LABEL_124:
  float result = *(float *)(a2 + 192);
  v5 |= 0x200000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 192) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((v8 & 0x40) == 0)
  {
LABEL_44:
    if ((v4 & 0x80) == 0) {
      goto LABEL_45;
    }
    goto LABEL_126;
  }
LABEL_125:
  float result = *(float *)(a2 + 292);
  unint64_t v8 = v6 >> 16;
  v6 |= 0x40uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 326) = v8;
  *(_WORD *)(a1 + 324) = v6;
  *(float *)(a1 + 292) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x80) == 0)
  {
LABEL_45:
    if ((v4 & 0x400) == 0) {
      goto LABEL_46;
    }
    goto LABEL_127;
  }
LABEL_126:
  float result = *(float *)(a2 + 40);
  v5 |= 0x80uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 40) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x400) == 0)
  {
LABEL_46:
    if ((v4 & 0x200) == 0) {
      goto LABEL_47;
    }
    goto LABEL_128;
  }
LABEL_127:
  float result = *(float *)(a2 + 52);
  v5 |= 0x400uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 52) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x200) == 0)
  {
LABEL_47:
    if ((v4 & 0x100) == 0) {
      goto LABEL_48;
    }
    goto LABEL_129;
  }
LABEL_128:
  float result = *(float *)(a2 + 48);
  v5 |= 0x200uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 48) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x100) == 0)
  {
LABEL_48:
    if ((v4 & 4) == 0) {
      goto LABEL_49;
    }
    goto LABEL_130;
  }
LABEL_129:
  float result = *(float *)(a2 + 44);
  v5 |= 0x100uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 44) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 4) == 0)
  {
LABEL_49:
    if ((v4 & 0x20) == 0) {
      goto LABEL_50;
    }
    goto LABEL_131;
  }
LABEL_130:
  float result = *(float *)(a2 + 20);
  v5 |= 4uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 20) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x20) == 0)
  {
LABEL_50:
    if ((v4 & 0x10) == 0) {
      goto LABEL_51;
    }
    goto LABEL_132;
  }
LABEL_131:
  float result = *(float *)(a2 + 32);
  v5 |= 0x20uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 32) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x10) == 0)
  {
LABEL_51:
    if ((v4 & 8) == 0) {
      goto LABEL_52;
    }
    goto LABEL_133;
  }
LABEL_132:
  float result = *(float *)(a2 + 28);
  v5 |= 0x10uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 28) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 8) == 0)
  {
LABEL_52:
    if ((v4 & 0x800) == 0) {
      goto LABEL_53;
    }
    goto LABEL_134;
  }
LABEL_133:
  float result = *(float *)(a2 + 24);
  v5 |= 8uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 24) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x800) == 0)
  {
LABEL_53:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_135;
  }
LABEL_134:
  float result = *(float *)(a2 + 56);
  v5 |= 0x800uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 56) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x4000) == 0)
  {
LABEL_54:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_136;
  }
LABEL_135:
  float result = *(float *)(a2 + 68);
  v5 |= 0x4000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 68) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x2000) == 0)
  {
LABEL_55:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_137;
  }
LABEL_136:
  float result = *(float *)(a2 + 64);
  v5 |= 0x2000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 64) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x1000) == 0)
  {
LABEL_56:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_138;
  }
LABEL_137:
  float result = *(float *)(a2 + 60);
  v5 |= 0x1000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 60) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x10000) == 0)
  {
LABEL_57:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_139;
  }
LABEL_138:
  float result = *(float *)(a2 + 76);
  v5 |= 0x10000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 76) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x20000) == 0)
  {
LABEL_58:
    if ((v4 & 0x200000000000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_140;
  }
LABEL_139:
  float result = *(float *)(a2 + 80);
  v5 |= 0x20000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 80) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x200000000000000) == 0)
  {
LABEL_59:
    if ((v4 & 0x4000000000000000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_141;
  }
LABEL_140:
  float result = *(float *)(a2 + 240);
  v5 |= 0x200000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 240) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x4000000000000000) == 0)
  {
LABEL_60:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_142;
  }
LABEL_141:
  float result = *(float *)(a2 + 260);
  v5 |= 0x4000000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 260) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x400000) == 0)
  {
LABEL_61:
    if ((v4 & 0x400000000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_143;
  }
LABEL_142:
  float result = *(float *)(a2 + 100);
  v5 |= 0x400000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 100) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x400000000000) == 0)
  {
LABEL_62:
    if ((v8 & 0x80) == 0) {
      goto LABEL_63;
    }
    goto LABEL_144;
  }
LABEL_143:
  float result = *(float *)(a2 + 196);
  v5 |= 0x400000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 196) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((v8 & 0x80) == 0)
  {
LABEL_63:
    if ((v4 & 0x400000000000000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_145;
  }
LABEL_144:
  float result = *(float *)(a2 + 296);
  unint64_t v8 = v6 >> 16;
  v6 |= 0x80uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 326) = v8;
  *(_WORD *)(a1 + 324) = v6;
  *(float *)(a1 + 296) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x400000000000000) == 0)
  {
LABEL_64:
    if ((v4 & 0x8000000000000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_146;
  }
LABEL_145:
  float result = *(float *)(a2 + 244);
  v5 |= 0x400000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 244) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x8000000000000000) == 0)
  {
LABEL_65:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_147;
  }
LABEL_146:
  float result = *(float *)(a2 + 264);
  v5 |= 0x8000000000000000;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 264) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x800000) == 0)
  {
LABEL_66:
    if ((v4 & 0x800000000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_148;
  }
LABEL_147:
  float result = *(float *)(a2 + 104);
  v5 |= 0x800000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 104) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x800000000000) == 0)
  {
LABEL_67:
    if ((v8 & 0x100) == 0) {
      goto LABEL_68;
    }
    goto LABEL_149;
  }
LABEL_148:
  float result = *(float *)(a2 + 200);
  v5 |= 0x800000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 200) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((v8 & 0x100) == 0)
  {
LABEL_68:
    if ((v4 & 0x100000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_150;
  }
LABEL_149:
  float result = *(float *)(a2 + 300);
  unint64_t v8 = v6 >> 16;
  v6 |= 0x100uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 326) = v8;
  *(_WORD *)(a1 + 324) = v6;
  *(float *)(a1 + 300) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x100000000) == 0)
  {
LABEL_69:
    if ((v4 & 0x200000000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_151;
  }
LABEL_150:
  float result = *(float *)(a2 + 140);
  v5 |= 0x100000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 140) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x200000000) == 0)
  {
LABEL_70:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_152;
  }
LABEL_151:
  float result = *(float *)(a2 + 144);
  v5 |= 0x200000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 144) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x8000000) == 0)
  {
LABEL_71:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_153;
  }
LABEL_152:
  float result = *(float *)(a2 + 120);
  v5 |= 0x8000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 120) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x4000000) == 0)
  {
LABEL_72:
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_154;
  }
LABEL_153:
  float result = *(float *)(a2 + 116);
  v5 |= 0x4000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 116) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x80000000) == 0)
  {
LABEL_73:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_155;
  }
LABEL_154:
  float result = *(float *)(a2 + 136);
  v5 |= 0x80000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 136) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x40000000) == 0)
  {
LABEL_74:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_156;
  }
LABEL_155:
  float result = *(float *)(a2 + 132);
  v5 |= 0x40000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 132) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x20000000) == 0)
  {
LABEL_75:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_157;
  }
LABEL_156:
  float result = *(float *)(a2 + 128);
  v5 |= 0x20000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 128) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x10000000) == 0)
  {
LABEL_76:
    if ((v4 & 0x10000000000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_158;
  }
LABEL_157:
  float result = *(float *)(a2 + 124);
  v5 |= 0x10000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 124) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x10000000000) == 0)
  {
LABEL_77:
    if ((v4 & 0x20000000000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_159;
  }
LABEL_158:
  float result = *(float *)(a2 + 172);
  v5 |= 0x10000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 172) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x20000000000) == 0)
  {
LABEL_78:
    if ((v4 & 0x800000000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_160;
  }
LABEL_159:
  float result = *(float *)(a2 + 176);
  v5 |= 0x20000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 176) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x800000000) == 0)
  {
LABEL_79:
    if ((v4 & 0x400000000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_161;
  }
LABEL_160:
  float result = *(float *)(a2 + 152);
  v5 |= 0x800000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 152) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x400000000) == 0)
  {
LABEL_80:
    if ((v4 & 0x8000000000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_162;
  }
LABEL_161:
  float result = *(float *)(a2 + 148);
  v5 |= 0x400000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 148) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x8000000000) == 0)
  {
LABEL_81:
    if ((v4 & 0x4000000000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_163;
  }
LABEL_162:
  float result = *(float *)(a2 + 168);
  v5 |= 0x8000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 168) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x4000000000) == 0)
  {
LABEL_82:
    if ((v4 & 0x2000000000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_164;
  }
LABEL_163:
  float result = *(float *)(a2 + 164);
  v5 |= 0x4000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 164) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x2000000000) == 0)
  {
LABEL_83:
    if ((v4 & 0x1000000000) == 0) {
      goto LABEL_84;
    }
    goto LABEL_165;
  }
LABEL_164:
  float result = *(float *)(a2 + 160);
  v5 |= 0x2000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 160) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  if ((*v3 & 0x1000000000) == 0)
  {
LABEL_84:
    if ((v8 & 2) == 0) {
      goto LABEL_85;
    }
    goto LABEL_166;
  }
LABEL_165:
  float result = *(float *)(a2 + 156);
  v5 |= 0x1000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 156) = result;
  LOBYTE(v8) = *(_WORD *)(a2 + 324);
  if ((*(_WORD *)(a2 + 324) & 2) == 0)
  {
LABEL_85:
    if ((v8 & 4) == 0) {
      goto LABEL_86;
    }
    goto LABEL_167;
  }
LABEL_166:
  float result = *(float *)(a2 + 272);
  unint64_t v8 = v6 >> 16;
  v6 |= 2uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 326) = v8;
  *(_WORD *)(a1 + 324) = v6;
  *(float *)(a1 + 272) = result;
  LOBYTE(v8) = *(_WORD *)(a2 + 324);
  if ((*(_WORD *)(a2 + 324) & 4) == 0)
  {
LABEL_86:
    if ((v8 & 1) == 0) {
      return result;
    }
LABEL_168:
    float result = *(float *)(a2 + 268);
    *unint64_t v2 = v5;
    *(unsigned char *)(a1 + 326) = BYTE2(v6);
    *(_WORD *)(a1 + 324) = v6 | 1;
    *(float *)(a1 + 268) = result;
    return result;
  }
LABEL_167:
  float result = *(float *)(a2 + 276);
  unint64_t v28 = v6 >> 16;
  LODWORD(v6) = v6 | 4;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 326) = v28;
  *(_WORD *)(a1 + 324) = v6;
  *(float *)(a1 + 276) = result;
  if (*(_WORD *)(a2 + 324)) {
    goto LABEL_168;
  }
  return result;
}

uint64_t sub_227B73704(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = (uint64_t *)(a1 + 316);
  uint64_t v6 = *(void *)(a1 + 316);
  if ((v6 & 2) != 0)
  {
    PB::TextFormatter::format(this, "audioRolloverDvChaosThreshold", *(float *)(a1 + 16));
    int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
    uint64_t v6 = *v5;
    if ((*v5 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  if ((v6 & 4) != 0)
  {
LABEL_5:
    PB::TextFormatter::format(this, "audioRolloverDvChaosThresholdCenter", *(float *)(a1 + 20));
    int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
    uint64_t v6 = *v5;
  }
LABEL_6:
  if ((v6 & 8) != 0)
  {
    PB::TextFormatter::format(this, "audioRolloverDvChaosThresholdMax", *(float *)(a1 + 24));
    int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
    uint64_t v6 = *v5;
    if ((*v5 & 0x10) == 0)
    {
LABEL_8:
      if ((v6 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_93;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_8;
  }
  PB::TextFormatter::format(this, "audioRolloverDvChaosThresholdMin", *(float *)(a1 + 28));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x20) == 0)
  {
LABEL_9:
    if ((v6 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_94;
  }
LABEL_93:
  PB::TextFormatter::format(this, "audioRolloverDvChaosThresholdStretch", *(float *)(a1 + 32));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x40) == 0)
  {
LABEL_10:
    if ((v6 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_95;
  }
LABEL_94:
  PB::TextFormatter::format(this, "audioRolloverDvEnergyThreshold", *(float *)(a1 + 36));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x80) == 0)
  {
LABEL_11:
    if ((v6 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_96;
  }
LABEL_95:
  PB::TextFormatter::format(this, "audioRolloverDvEnergyThresholdCenter", *(float *)(a1 + 40));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x100) == 0)
  {
LABEL_12:
    if ((v6 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_97;
  }
LABEL_96:
  PB::TextFormatter::format(this, "audioRolloverDvEnergyThresholdMax", *(float *)(a1 + 44));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x200) == 0)
  {
LABEL_13:
    if ((v6 & 0x400) == 0) {
      goto LABEL_14;
    }
    goto LABEL_98;
  }
LABEL_97:
  PB::TextFormatter::format(this, "audioRolloverDvEnergyThresholdMin", *(float *)(a1 + 48));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x400) == 0)
  {
LABEL_14:
    if ((v6 & 0x800) == 0) {
      goto LABEL_15;
    }
    goto LABEL_99;
  }
LABEL_98:
  PB::TextFormatter::format(this, "audioRolloverDvEnergyThresholdStretch", *(float *)(a1 + 52));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x800) == 0)
  {
LABEL_15:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_100;
  }
LABEL_99:
  PB::TextFormatter::format(this, "audioRolloverDvMaxRmsThresholdCenter", *(float *)(a1 + 56));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x1000) == 0)
  {
LABEL_16:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_101;
  }
LABEL_100:
  PB::TextFormatter::format(this, "audioRolloverDvMaxRmsThresholdMax", *(float *)(a1 + 60));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x2000) == 0)
  {
LABEL_17:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_102;
  }
LABEL_101:
  PB::TextFormatter::format(this, "audioRolloverDvMaxRmsThresholdMin", *(float *)(a1 + 64));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x4000) == 0)
  {
LABEL_18:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_103;
  }
LABEL_102:
  PB::TextFormatter::format(this, "audioRolloverDvMaxRmsThresholdStretch", *(float *)(a1 + 68));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x8000) == 0)
  {
LABEL_19:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_104;
  }
LABEL_103:
  PB::TextFormatter::format(this, "audioRolloverDvRmsThreshold", *(float *)(a1 + 72));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x10000) == 0)
  {
LABEL_20:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_105;
  }
LABEL_104:
  PB::TextFormatter::format(this, "baroEscalateMaxAccelNormThreshold", *(float *)(a1 + 76));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x20000) == 0)
  {
LABEL_21:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_106;
  }
LABEL_105:
  PB::TextFormatter::format(this, "baroEscalateSpinNormThreshold", *(float *)(a1 + 80));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x40000) == 0)
  {
LABEL_22:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_107;
  }
LABEL_106:
  PB::TextFormatter::format(this, "cumulativeRotation", *(float *)(a1 + 84));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x80000) == 0)
  {
LABEL_23:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_108;
  }
LABEL_107:
  PB::TextFormatter::format(this, "cumulativeRotationThreshold", *(float *)(a1 + 88));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x100000) == 0)
  {
LABEL_24:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_109;
  }
LABEL_108:
  PB::TextFormatter::format(this, "cumulativeRotationThresholdWithAudio", *(float *)(a1 + 92));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x200000) == 0)
  {
LABEL_25:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_110;
  }
LABEL_109:
  PB::TextFormatter::format(this, "cumulativeRotationThresholdWithoutAudio", *(float *)(a1 + 96));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x400000) == 0)
  {
LABEL_26:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_111;
  }
LABEL_110:
  PB::TextFormatter::format(this, "cumulativeRotationThresholdWithoutAudioStandaloneBaroNeeded", *(float *)(a1 + 100));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x800000) == 0)
  {
LABEL_27:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_112;
  }
LABEL_111:
  PB::TextFormatter::format(this, "cumulativeRotationThresholdWithoutAudioStandaloneFull", *(float *)(a1 + 104));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x1000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_113;
  }
LABEL_112:
  PB::TextFormatter::format(this, "deltaVXYOverEpoch", *(float *)(a1 + 108));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x2000000) == 0)
  {
LABEL_29:
    if ((v7 & 0x200) == 0) {
      goto LABEL_30;
    }
    goto LABEL_114;
  }
LABEL_113:
  PB::TextFormatter::format(this, "detectorRegime");
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*(_WORD *)(a1 + 324) & 0x200) == 0)
  {
LABEL_30:
    if ((v7 & 0x400) == 0) {
      goto LABEL_31;
    }
    goto LABEL_115;
  }
LABEL_114:
  PB::TextFormatter::format(this, "hasAudioInEpoch");
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*(_WORD *)(a1 + 324) & 0x400) == 0)
  {
LABEL_31:
    if ((v7 & 0x800) == 0) {
      goto LABEL_32;
    }
    goto LABEL_116;
  }
LABEL_115:
  PB::TextFormatter::format(this, "isAudioRollover");
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*(_WORD *)(a1 + 324) & 0x800) == 0)
  {
LABEL_32:
    if ((v7 & 0x1000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_117;
  }
LABEL_116:
  PB::TextFormatter::format(this, "isAudioRolloverDv");
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*(_WORD *)(a1 + 324) & 0x1000) == 0)
  {
LABEL_33:
    if ((v7 & 0x2000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_118;
  }
LABEL_117:
  PB::TextFormatter::format(this, "isAudioSupported");
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*(_WORD *)(a1 + 324) & 0x2000) == 0)
  {
LABEL_34:
    if ((v7 & 0x4000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_119;
  }
LABEL_118:
  PB::TextFormatter::format(this, "isBaro");
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*(_WORD *)(a1 + 324) & 0x4000) == 0)
  {
LABEL_35:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_120;
  }
LABEL_119:
  PB::TextFormatter::format(this, "isCompanionConnected");
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x4000000) == 0)
  {
LABEL_36:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_121;
  }
LABEL_120:
  PB::TextFormatter::format(this, "lowSenseWithAudioCumulativeRotationThreshold", *(float *)(a1 + 116));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x8000000) == 0)
  {
LABEL_37:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_122;
  }
LABEL_121:
  PB::TextFormatter::format(this, "lowSenseWithAudioMaxAccelNormThreshold", *(float *)(a1 + 120));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x10000000) == 0)
  {
LABEL_38:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_123;
  }
LABEL_122:
  PB::TextFormatter::format(this, "lowSenseWithAudioParBaroCumulativeRotationThreshold", *(float *)(a1 + 124));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x20000000) == 0)
  {
LABEL_39:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_124;
  }
LABEL_123:
  PB::TextFormatter::format(this, "lowSenseWithAudioParBaroNormThreshold", *(float *)(a1 + 128));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x40000000) == 0)
  {
LABEL_40:
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_125;
  }
LABEL_124:
  PB::TextFormatter::format(this, "lowSenseWithAudioPeakPressureThreshold", *(float *)(a1 + 132));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x80000000) == 0)
  {
LABEL_41:
    if ((v6 & 0x100000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_126;
  }
LABEL_125:
  PB::TextFormatter::format(this, "lowSenseWithAudioZgtimeThreshold", *(float *)(a1 + 136));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x100000000) == 0)
  {
LABEL_42:
    if ((v6 & 0x200000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_127;
  }
LABEL_126:
  PB::TextFormatter::format(this, "lowSenseWithAudiodvThreshold1", *(float *)(a1 + 140));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x200000000) == 0)
  {
LABEL_43:
    if ((v6 & 0x400000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_128;
  }
LABEL_127:
  PB::TextFormatter::format(this, "lowSenseWithAudiodvThreshold2", *(float *)(a1 + 144));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x400000000) == 0)
  {
LABEL_44:
    if ((v6 & 0x800000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_129;
  }
LABEL_128:
  PB::TextFormatter::format(this, "lowSenseWithoutAudioCumulativeRotationThreshold", *(float *)(a1 + 148));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x800000000) == 0)
  {
LABEL_45:
    if ((v6 & 0x1000000000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_130;
  }
LABEL_129:
  PB::TextFormatter::format(this, "lowSenseWithoutAudioMaxAccelNormThreshold", *(float *)(a1 + 152));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x1000000000) == 0)
  {
LABEL_46:
    if ((v6 & 0x2000000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_131;
  }
LABEL_130:
  PB::TextFormatter::format(this, "lowSenseWithoutAudioParBaroCumulativeRotationThreshold", *(float *)(a1 + 156));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x2000000000) == 0)
  {
LABEL_47:
    if ((v6 & 0x4000000000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_132;
  }
LABEL_131:
  PB::TextFormatter::format(this, "lowSenseWithoutAudioParBaroNormThreshold", *(float *)(a1 + 160));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x4000000000) == 0)
  {
LABEL_48:
    if ((v6 & 0x8000000000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_133;
  }
LABEL_132:
  PB::TextFormatter::format(this, "lowSenseWithoutAudioPeakPressureThreshold", *(float *)(a1 + 164));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x8000000000) == 0)
  {
LABEL_49:
    if ((v6 & 0x10000000000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_134;
  }
LABEL_133:
  PB::TextFormatter::format(this, "lowSenseWithoutAudioZgtimeThreshold", *(float *)(a1 + 168));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x10000000000) == 0)
  {
LABEL_50:
    if ((v6 & 0x20000000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_135;
  }
LABEL_134:
  PB::TextFormatter::format(this, "lowSenseWithoutAudiodvThreshold1", *(float *)(a1 + 172));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x20000000000) == 0)
  {
LABEL_51:
    if ((v6 & 0x40000000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_136;
  }
LABEL_135:
  PB::TextFormatter::format(this, "lowSenseWithoutAudiodvThreshold2", *(float *)(a1 + 176));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x40000000000) == 0)
  {
LABEL_52:
    if ((v6 & 0x80000000000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_137;
  }
LABEL_136:
  PB::TextFormatter::format(this, "maxAccelNorm", *(float *)(a1 + 180));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x80000000000) == 0)
  {
LABEL_53:
    if ((v6 & 0x100000000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_138;
  }
LABEL_137:
  PB::TextFormatter::format(this, "maxAccelNormThreshold", *(float *)(a1 + 184));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x100000000000) == 0)
  {
LABEL_54:
    if ((v6 & 0x200000000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_139;
  }
LABEL_138:
  PB::TextFormatter::format(this, "maxAccelNormThresholdWithAudio", *(float *)(a1 + 188));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x200000000000) == 0)
  {
LABEL_55:
    if ((v6 & 0x400000000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_140;
  }
LABEL_139:
  PB::TextFormatter::format(this, "maxAccelNormThresholdWithoutAudio", *(float *)(a1 + 192));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x400000000000) == 0)
  {
LABEL_56:
    if ((v6 & 0x800000000000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_141;
  }
LABEL_140:
  PB::TextFormatter::format(this, "maxAccelNormThresholdWithoutAudioStandaloneBaroNeeded", *(float *)(a1 + 196));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x800000000000) == 0)
  {
LABEL_57:
    if ((v6 & 0x1000000000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_142;
  }
LABEL_141:
  PB::TextFormatter::format(this, "maxAccelNormThresholdWithoutAudioStandaloneFull", *(float *)(a1 + 200));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x1000000000000) == 0)
  {
LABEL_58:
    if ((v6 & 0x2000000000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_143;
  }
LABEL_142:
  PB::TextFormatter::format(this, "maxAudioRolloverChaos", *(float *)(a1 + 204));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x2000000000000) == 0)
  {
LABEL_59:
    if ((v6 & 0x4000000000000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_144;
  }
LABEL_143:
  PB::TextFormatter::format(this, "maxAudioRolloverEnergy", *(float *)(a1 + 208));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x4000000000000) == 0)
  {
LABEL_60:
    if ((v6 & 0x8000000000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_145;
  }
LABEL_144:
  PB::TextFormatter::format(this, "maxAudioRolloverRms", *(float *)(a1 + 212));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x8000000000000) == 0)
  {
LABEL_61:
    if ((v6 & 0x10000000000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_146;
  }
LABEL_145:
  PB::TextFormatter::format(this, "maxPulse", *(float *)(a1 + 216));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x10000000000000) == 0)
  {
LABEL_62:
    if ((v6 & 0x20000000000000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_147;
  }
LABEL_146:
  PB::TextFormatter::format(this, "numShortAudio");
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x20000000000000) == 0)
  {
LABEL_63:
    if ((v7 & 0x8000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_148;
  }
LABEL_147:
  PB::TextFormatter::format(this, "peakPressure", *(float *)(a1 + 224));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*(_WORD *)(a1 + 324) & 0x8000) == 0)
  {
LABEL_64:
    if ((v7 & 0x10000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_149;
  }
LABEL_148:
  PB::TextFormatter::format(this, "rolloverCrashDetectorDecision");
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((v7 & 0x10000) == 0)
  {
LABEL_65:
    if ((v6 & 0x40000000000000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_150;
  }
LABEL_149:
  PB::TextFormatter::format(this, "rolloverCrashDetectorDecisionLowSense");
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x40000000000000) == 0)
  {
LABEL_66:
    if ((v6 & 0x80000000000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_151;
  }
LABEL_150:
  PB::TextFormatter::format(this, "rolloverDetectorRegimeDeltaVThreshold1", *(float *)(a1 + 228));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x80000000000000) == 0)
  {
LABEL_67:
    if ((v6 & 0x100000000000000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_152;
  }
LABEL_151:
  PB::TextFormatter::format(this, "rolloverDetectorRegimeDeltaVThreshold1WithAudio", *(float *)(a1 + 232));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x100000000000000) == 0)
  {
LABEL_68:
    if ((v6 & 0x200000000000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_153;
  }
LABEL_152:
  PB::TextFormatter::format(this, "rolloverDetectorRegimeDeltaVThreshold1WithoutAudio", *(float *)(a1 + 236));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x200000000000000) == 0)
  {
LABEL_69:
    if ((v6 & 0x400000000000000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_154;
  }
LABEL_153:
  PB::TextFormatter::format(this, "rolloverDetectorRegimeDeltaVThreshold1WithoutAudioStandaloneBaroNeeded", *(float *)(a1 + 240));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x400000000000000) == 0)
  {
LABEL_70:
    if ((v6 & 0x800000000000000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_155;
  }
LABEL_154:
  PB::TextFormatter::format(this, "rolloverDetectorRegimeDeltaVThreshold1WithoutAudioStandaloneFull", *(float *)(a1 + 244));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x800000000000000) == 0)
  {
LABEL_71:
    if ((v6 & 0x1000000000000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_156;
  }
LABEL_155:
  PB::TextFormatter::format(this, "rolloverDetectorRegimeDeltaVThreshold2", *(float *)(a1 + 248));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x1000000000000000) == 0)
  {
LABEL_72:
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_157;
  }
LABEL_156:
  PB::TextFormatter::format(this, "rolloverDetectorRegimeDeltaVThreshold2WithAudio", *(float *)(a1 + 252));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x2000000000000000) == 0)
  {
LABEL_73:
    if ((v6 & 0x4000000000000000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_158;
  }
LABEL_157:
  PB::TextFormatter::format(this, "rolloverDetectorRegimeDeltaVThreshold2WithoutAudio", *(float *)(a1 + 256));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x4000000000000000) == 0)
  {
LABEL_74:
    if ((v6 & 0x8000000000000000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_159;
  }
LABEL_158:
  PB::TextFormatter::format(this, "rolloverDetectorRegimeDeltaVThreshold2WithoutAudioStandaloneBaroNeeded", *(float *)(a1 + 260));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x8000000000000000) == 0)
  {
LABEL_75:
    if ((v7 & 1) == 0) {
      goto LABEL_76;
    }
    goto LABEL_160;
  }
LABEL_159:
  PB::TextFormatter::format(this, "rolloverDetectorRegimeDeltaVThreshold2WithoutAudioStandaloneFull", *(float *)(a1 + 264));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*(_WORD *)(a1 + 324) & 1) == 0)
  {
LABEL_76:
    if ((v7 & 0x20000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_161;
  }
LABEL_160:
  PB::TextFormatter::format(this, "shortAudioMaxPulseThreshold", *(float *)(a1 + 268));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((v7 & 0x20000) == 0)
  {
LABEL_77:
    if ((v7 & 2) == 0) {
      goto LABEL_78;
    }
    goto LABEL_162;
  }
LABEL_161:
  PB::TextFormatter::format(this, "shortAudioMet");
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*(_WORD *)(a1 + 324) & 2) == 0)
  {
LABEL_78:
    if ((v7 & 4) == 0) {
      goto LABEL_79;
    }
    goto LABEL_163;
  }
LABEL_162:
  PB::TextFormatter::format(this, "shortAudioNumThreshold", *(float *)(a1 + 272));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*(_WORD *)(a1 + 324) & 4) == 0)
  {
LABEL_79:
    if ((v7 & 0x40000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_164;
  }
LABEL_163:
  PB::TextFormatter::format(this, "shortAudioPeakPressureThreshold", *(float *)(a1 + 276));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((v7 & 0x40000) == 0)
  {
LABEL_80:
    if ((v6 & 1) == 0) {
      goto LABEL_81;
    }
    goto LABEL_165;
  }
LABEL_164:
  PB::TextFormatter::format(this, "strongerAudioRollover");
  LOWORD(v7) = *(_WORD *)(a1 + 324);
  if ((*v5 & 1) == 0)
  {
LABEL_81:
    if ((v7 & 8) == 0) {
      goto LABEL_82;
    }
    goto LABEL_166;
  }
LABEL_165:
  PB::TextFormatter::format(this, "timestamp");
  LOWORD(v7) = *(_WORD *)(a1 + 324);
  if ((v7 & 8) == 0)
  {
LABEL_82:
    if ((v7 & 0x10) == 0) {
      goto LABEL_83;
    }
    goto LABEL_167;
  }
LABEL_166:
  PB::TextFormatter::format(this, "zgTime", *(float *)(a1 + 280));
  LOWORD(v7) = *(_WORD *)(a1 + 324);
  if ((v7 & 0x10) == 0)
  {
LABEL_83:
    if ((v7 & 0x20) == 0) {
      goto LABEL_84;
    }
    goto LABEL_168;
  }
LABEL_167:
  PB::TextFormatter::format(this, "zgTimeThreshold", *(float *)(a1 + 284));
  LOWORD(v7) = *(_WORD *)(a1 + 324);
  if ((v7 & 0x20) == 0)
  {
LABEL_84:
    if ((v7 & 0x40) == 0) {
      goto LABEL_85;
    }
    goto LABEL_169;
  }
LABEL_168:
  PB::TextFormatter::format(this, "zgTimeThresholdWithAudio", *(float *)(a1 + 288));
  LOWORD(v7) = *(_WORD *)(a1 + 324);
  if ((v7 & 0x40) == 0)
  {
LABEL_85:
    if ((v7 & 0x80) == 0) {
      goto LABEL_86;
    }
    goto LABEL_170;
  }
LABEL_169:
  PB::TextFormatter::format(this, "zgTimeThresholdWithoutAudio", *(float *)(a1 + 292));
  LOWORD(v7) = *(_WORD *)(a1 + 324);
  if ((v7 & 0x80) == 0)
  {
LABEL_86:
    if ((v7 & 0x100) == 0) {
      goto LABEL_88;
    }
    goto LABEL_87;
  }
LABEL_170:
  PB::TextFormatter::format(this, "zgTimeThresholdWithoutAudioStandaloneBaroNeeded", *(float *)(a1 + 296));
  if ((*(_WORD *)(a1 + 324) & 0x100) != 0) {
LABEL_87:
  }
    PB::TextFormatter::format(this, "zgTimeThresholdWithoutAudioStandaloneFull", *(float *)(a1 + 300));
LABEL_88:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B74580(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = a1 + 316;
    while (1)
    {
      uint64_t v9 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v10 = 0;
      unsigned int v11 = 0;
      unint64_t v12 = 0;
      while (1)
      {
        unint64_t v13 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v14 = *(unsigned char *)(v9 + v2);
        v12 |= (unint64_t)(v14 & 0x7F) << v10;
        if ((v14 & 0x80) == 0) {
          break;
        }
        v10 += 7;
        unint64_t v2 = v13;
        BOOL v15 = v11++ > 8;
        if (v15) {
          goto LABEL_20;
        }
      }
LABEL_21:
      if ((v12 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v21 = v12 >> 3;
      if ((int)(v12 >> 3) <= 100)
      {
        switch(v21)
        {
          case 1:
            *(void *)v8 |= 1uLL;
            unint64_t v165 = *((void *)this + 1);
            unint64_t v166 = *((void *)this + 2);
            uint64_t v167 = *(void *)this;
            if (v165 > 0xFFFFFFFFFFFFFFF5 || v165 + 10 > v166)
            {
              char v187 = 0;
              unsigned int v188 = 0;
              uint64_t v170 = 0;
              if (v166 <= v165) {
                unint64_t v166 = *((void *)this + 1);
              }
              while (1)
              {
                if (v166 == v165)
                {
                  uint64_t v170 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_339;
                }
                unint64_t v189 = v165 + 1;
                char v190 = *(unsigned char *)(v167 + v165);
                *((void *)this + 1) = v189;
                v170 |= (unint64_t)(v190 & 0x7F) << v187;
                if ((v190 & 0x80) == 0) {
                  break;
                }
                v187 += 7;
                unint64_t v165 = v189;
                BOOL v15 = v188++ > 8;
                if (v15)
                {
LABEL_318:
                  uint64_t v170 = 0;
                  goto LABEL_339;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v170 = 0;
              }
            }
            else
            {
              char v168 = 0;
              unsigned int v169 = 0;
              uint64_t v170 = 0;
              while (1)
              {
                unint64_t v171 = v165 + 1;
                *((void *)this + 1) = v165 + 1;
                char v172 = *(unsigned char *)(v167 + v165);
                v170 |= (unint64_t)(v172 & 0x7F) << v168;
                if ((v172 & 0x80) == 0) {
                  break;
                }
                v168 += 7;
                unint64_t v165 = v171;
                BOOL v15 = v169++ > 8;
                if (v15) {
                  goto LABEL_318;
                }
              }
            }
LABEL_339:
            *(void *)(a1 + 8) = v170;
            break;
          case 2:
            char v173 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 0x8000u;
            *(unsigned char *)(v8 + 10) = v173;
            unint64_t v174 = *((void *)this + 1);
            if (v174 >= *((void *)this + 2))
            {
              BOOL v177 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v175 = v174 + 1;
              int v176 = *(unsigned __int8 *)(*(void *)this + v174);
              *((void *)this + 1) = v175;
              BOOL v177 = v176 != 0;
            }
            *(unsigned char *)(a1 + 310) = v177;
            break;
          case 3:
            int v23 = *(unsigned __int16 *)(v8 + 8);
            unsigned int v24 = (v23 | (*(unsigned __int8 *)(v8 + 10) << 16) | 0x10000u) >> 16;
            *(_WORD *)(v8 + 8) = v23;
            *(unsigned char *)(v8 + 10) = v24;
            unint64_t v25 = *((void *)this + 1);
            if (v25 >= *((void *)this + 2))
            {
              BOOL v28 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v26 = v25 + 1;
              int v27 = *(unsigned __int8 *)(*(void *)this + v25);
              *((void *)this + 1) = v26;
              BOOL v28 = v27 != 0;
            }
            *(unsigned char *)(a1 + 311) = v28;
            break;
          default:
LABEL_278:
            uint64_t result = PB::Reader::skip(this);
            if (!result) {
              return result;
            }
            break;
        }
      }
      else
      {
        switch((int)v21)
        {
          case 101:
            *(void *)v8 |= 0x40000000000uLL;
            unint64_t v22 = *((void *)this + 1);
            if (v22 > 0xFFFFFFFFFFFFFFFBLL || v22 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 180) = *(_DWORD *)(*(void *)this + v22);
            goto LABEL_322;
          case 102:
            *(void *)v8 |= 0x40000uLL;
            unint64_t v29 = *((void *)this + 1);
            if (v29 > 0xFFFFFFFFFFFFFFFBLL || v29 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v29);
            goto LABEL_322;
          case 103:
            char v30 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 8u;
            *(unsigned char *)(v8 + 10) = v30;
            unint64_t v31 = *((void *)this + 1);
            if (v31 > 0xFFFFFFFFFFFFFFFBLL || v31 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 280) = *(_DWORD *)(*(void *)this + v31);
            goto LABEL_322;
          case 104:
            char v32 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 0x2000u;
            *(unsigned char *)(v8 + 10) = v32;
            unint64_t v33 = *((void *)this + 1);
            if (v33 >= *((void *)this + 2))
            {
              BOOL v36 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v34 = v33 + 1;
              int v35 = *(unsigned __int8 *)(*(void *)this + v33);
              *((void *)this + 1) = v34;
              BOOL v36 = v35 != 0;
            }
            *(unsigned char *)(a1 + 308) = v36;
            goto LABEL_323;
          case 105:
            char v37 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 0x400u;
            *(unsigned char *)(v8 + 10) = v37;
            unint64_t v38 = *((void *)this + 1);
            if (v38 >= *((void *)this + 2))
            {
              BOOL v41 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v39 = v38 + 1;
              int v40 = *(unsigned __int8 *)(*(void *)this + v38);
              *((void *)this + 1) = v39;
              BOOL v41 = v40 != 0;
            }
            *(unsigned char *)(a1 + 305) = v41;
            goto LABEL_323;
          case 106:
            char v42 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 0x200u;
            *(unsigned char *)(v8 + 10) = v42;
            unint64_t v43 = *((void *)this + 1);
            if (v43 >= *((void *)this + 2))
            {
              BOOL v46 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v44 = v43 + 1;
              int v45 = *(unsigned __int8 *)(*(void *)this + v43);
              *((void *)this + 1) = v44;
              BOOL v46 = v45 != 0;
            }
            *(unsigned char *)(a1 + 304) = v46;
            goto LABEL_323;
          case 107:
            *(void *)v8 |= 0x2000000uLL;
            unint64_t v47 = *((void *)this + 1);
            unint64_t v48 = *((void *)this + 2);
            uint64_t v49 = *(void *)this;
            if (v47 <= 0xFFFFFFFFFFFFFFF5 && v47 + 10 <= v48)
            {
              char v50 = 0;
              unsigned int v51 = 0;
              uint64_t v52 = 0;
              do
              {
                unint64_t v53 = v47 + 1;
                *((void *)this + 1) = v47 + 1;
                char v54 = *(unsigned char *)(v49 + v47);
                v52 |= (unint64_t)(v54 & 0x7F) << v50;
                if ((v54 & 0x80) == 0) {
                  goto LABEL_331;
                }
                v50 += 7;
                unint64_t v47 = v53;
                BOOL v15 = v51++ > 8;
              }
              while (!v15);
LABEL_294:
              LODWORD(v52) = 0;
              goto LABEL_331;
            }
            char v179 = 0;
            unsigned int v180 = 0;
            uint64_t v52 = 0;
            if (v48 <= v47) {
              unint64_t v48 = *((void *)this + 1);
            }
            while (2)
            {
              if (v48 == v47)
              {
                LODWORD(v52) = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v181 = v47 + 1;
                char v182 = *(unsigned char *)(v49 + v47);
                *((void *)this + 1) = v181;
                v52 |= (unint64_t)(v182 & 0x7F) << v179;
                if (v182 < 0)
                {
                  v179 += 7;
                  unint64_t v47 = v181;
                  BOOL v15 = v180++ > 8;
                  if (v15) {
                    goto LABEL_294;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v52) = 0;
                }
              }
              break;
            }
LABEL_331:
            *(_DWORD *)(a1 + 112) = v52;
            goto LABEL_323;
          case 108:
            char v55 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 0x1000u;
            *(unsigned char *)(v8 + 10) = v55;
            unint64_t v56 = *((void *)this + 1);
            if (v56 >= *((void *)this + 2))
            {
              BOOL v59 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v57 = v56 + 1;
              int v58 = *(unsigned __int8 *)(*(void *)this + v56);
              *((void *)this + 1) = v57;
              BOOL v59 = v58 != 0;
            }
            *(unsigned char *)(a1 + 307) = v59;
            goto LABEL_323;
          case 109:
            *(void *)v8 |= 0x1000000uLL;
            unint64_t v60 = *((void *)this + 1);
            if (v60 > 0xFFFFFFFFFFFFFFFBLL || v60 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 108) = *(_DWORD *)(*(void *)this + v60);
            goto LABEL_322;
          case 110:
            *(void *)v8 |= 0x2000000000000uLL;
            unint64_t v61 = *((void *)this + 1);
            if (v61 > 0xFFFFFFFFFFFFFFFBLL || v61 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 208) = *(_DWORD *)(*(void *)this + v61);
            goto LABEL_322;
          case 111:
            *(void *)v8 |= 0x1000000000000uLL;
            unint64_t v62 = *((void *)this + 1);
            if (v62 > 0xFFFFFFFFFFFFFFFBLL || v62 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 204) = *(_DWORD *)(*(void *)this + v62);
            goto LABEL_322;
          case 112:
            *(void *)v8 |= 0x4000000000000uLL;
            unint64_t v63 = *((void *)this + 1);
            if (v63 > 0xFFFFFFFFFFFFFFFBLL || v63 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 212) = *(_DWORD *)(*(void *)this + v63);
            goto LABEL_322;
          case 113:
            *(void *)v8 |= 0x40uLL;
            unint64_t v64 = *((void *)this + 1);
            if (v64 > 0xFFFFFFFFFFFFFFFBLL || v64 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v64);
            goto LABEL_322;
          case 114:
            *(void *)v8 |= 2uLL;
            unint64_t v65 = *((void *)this + 1);
            if (v65 > 0xFFFFFFFFFFFFFFFBLL || v65 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v65);
            goto LABEL_322;
          case 115:
            *(void *)v8 |= 0x8000uLL;
            unint64_t v66 = *((void *)this + 1);
            if (v66 > 0xFFFFFFFFFFFFFFFBLL || v66 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v66);
            goto LABEL_322;
          case 116:
            int v67 = *(unsigned __int16 *)(v8 + 8);
            unsigned int v68 = (v67 | (*(unsigned __int8 *)(v8 + 10) << 16) | 0x40000u) >> 16;
            *(_WORD *)(v8 + 8) = v67;
            *(unsigned char *)(v8 + 10) = v68;
            unint64_t v69 = *((void *)this + 1);
            if (v69 >= *((void *)this + 2))
            {
              BOOL v72 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v70 = v69 + 1;
              int v71 = *(unsigned __int8 *)(*(void *)this + v69);
              *((void *)this + 1) = v70;
              BOOL v72 = v71 != 0;
            }
            *(unsigned char *)(a1 + 313) = v72;
            goto LABEL_323;
          case 117:
            char v73 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 0x800u;
            *(unsigned char *)(v8 + 10) = v73;
            unint64_t v74 = *((void *)this + 1);
            if (v74 >= *((void *)this + 2))
            {
              BOOL v77 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v75 = v74 + 1;
              int v76 = *(unsigned __int8 *)(*(void *)this + v74);
              *((void *)this + 1) = v75;
              BOOL v77 = v76 != 0;
            }
            *(unsigned char *)(a1 + 306) = v77;
            goto LABEL_323;
          case 118:
            char v78 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 0x4000u;
            *(unsigned char *)(v8 + 10) = v78;
            unint64_t v79 = *((void *)this + 1);
            if (v79 >= *((void *)this + 2))
            {
              BOOL v82 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v80 = v79 + 1;
              int v81 = *(unsigned __int8 *)(*(void *)this + v79);
              *((void *)this + 1) = v80;
              BOOL v82 = v81 != 0;
            }
            *(unsigned char *)(a1 + 309) = v82;
            goto LABEL_323;
          case 119:
            *(void *)v8 |= 0x20000000000000uLL;
            unint64_t v83 = *((void *)this + 1);
            if (v83 > 0xFFFFFFFFFFFFFFFBLL || v83 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 224) = *(_DWORD *)(*(void *)this + v83);
            goto LABEL_322;
          case 120:
            *(void *)v8 |= 0x8000000000000uLL;
            unint64_t v84 = *((void *)this + 1);
            if (v84 > 0xFFFFFFFFFFFFFFFBLL || v84 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 216) = *(_DWORD *)(*(void *)this + v84);
            goto LABEL_322;
          case 121:
            *(void *)v8 |= 0x10000000000000uLL;
            unint64_t v85 = *((void *)this + 1);
            unint64_t v86 = *((void *)this + 2);
            uint64_t v87 = *(void *)this;
            if (v85 <= 0xFFFFFFFFFFFFFFF5 && v85 + 10 <= v86)
            {
              char v88 = 0;
              unsigned int v89 = 0;
              uint64_t v90 = 0;
              do
              {
                unint64_t v91 = v85 + 1;
                *((void *)this + 1) = v85 + 1;
                char v92 = *(unsigned char *)(v87 + v85);
                v90 |= (unint64_t)(v92 & 0x7F) << v88;
                if ((v92 & 0x80) == 0) {
                  goto LABEL_335;
                }
                v88 += 7;
                unint64_t v85 = v91;
                BOOL v15 = v89++ > 8;
              }
              while (!v15);
LABEL_309:
              LODWORD(v90) = 0;
              goto LABEL_335;
            }
            char v183 = 0;
            unsigned int v184 = 0;
            uint64_t v90 = 0;
            if (v86 <= v85) {
              unint64_t v86 = *((void *)this + 1);
            }
            break;
          case 122:
            int v93 = *(unsigned __int16 *)(v8 + 8);
            unsigned int v94 = (v93 | (*(unsigned __int8 *)(v8 + 10) << 16) | 0x20000u) >> 16;
            *(_WORD *)(v8 + 8) = v93;
            *(unsigned char *)(v8 + 10) = v94;
            unint64_t v95 = *((void *)this + 1);
            if (v95 >= *((void *)this + 2))
            {
              BOOL v98 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v96 = v95 + 1;
              int v97 = *(unsigned __int8 *)(*(void *)this + v95);
              *((void *)this + 1) = v96;
              BOOL v98 = v97 != 0;
            }
            *(unsigned char *)(a1 + 312) = v98;
            goto LABEL_323;
          case 201:
            *(void *)v8 |= 0x40000000000000uLL;
            unint64_t v99 = *((void *)this + 1);
            if (v99 > 0xFFFFFFFFFFFFFFFBLL || v99 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 228) = *(_DWORD *)(*(void *)this + v99);
            goto LABEL_322;
          case 202:
            *(void *)v8 |= 0x800000000000000uLL;
            unint64_t v100 = *((void *)this + 1);
            if (v100 > 0xFFFFFFFFFFFFFFFBLL || v100 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 248) = *(_DWORD *)(*(void *)this + v100);
            goto LABEL_322;
          case 203:
            *(void *)v8 |= 0x80000uLL;
            unint64_t v101 = *((void *)this + 1);
            if (v101 > 0xFFFFFFFFFFFFFFFBLL || v101 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v101);
            goto LABEL_322;
          case 204:
            *(void *)v8 |= 0x80000000000uLL;
            unint64_t v102 = *((void *)this + 1);
            if (v102 > 0xFFFFFFFFFFFFFFFBLL || v102 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 184) = *(_DWORD *)(*(void *)this + v102);
            goto LABEL_322;
          case 205:
            char v103 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 0x10u;
            *(unsigned char *)(v8 + 10) = v103;
            unint64_t v104 = *((void *)this + 1);
            if (v104 > 0xFFFFFFFFFFFFFFFBLL || v104 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 284) = *(_DWORD *)(*(void *)this + v104);
            goto LABEL_322;
          case 206:
            *(void *)v8 |= 0x80000000000000uLL;
            unint64_t v105 = *((void *)this + 1);
            if (v105 > 0xFFFFFFFFFFFFFFFBLL || v105 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 232) = *(_DWORD *)(*(void *)this + v105);
            goto LABEL_322;
          case 207:
            *(void *)v8 |= 0x1000000000000000uLL;
            unint64_t v106 = *((void *)this + 1);
            if (v106 > 0xFFFFFFFFFFFFFFFBLL || v106 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 252) = *(_DWORD *)(*(void *)this + v106);
            goto LABEL_322;
          case 208:
            *(void *)v8 |= 0x100000uLL;
            unint64_t v107 = *((void *)this + 1);
            if (v107 > 0xFFFFFFFFFFFFFFFBLL || v107 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v107);
            goto LABEL_322;
          case 209:
            *(void *)v8 |= 0x100000000000uLL;
            unint64_t v108 = *((void *)this + 1);
            if (v108 > 0xFFFFFFFFFFFFFFFBLL || v108 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 188) = *(_DWORD *)(*(void *)this + v108);
            goto LABEL_322;
          case 210:
            char v109 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 0x20u;
            *(unsigned char *)(v8 + 10) = v109;
            unint64_t v110 = *((void *)this + 1);
            if (v110 > 0xFFFFFFFFFFFFFFFBLL || v110 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 288) = *(_DWORD *)(*(void *)this + v110);
            goto LABEL_322;
          case 231:
            *(void *)v8 |= 0x100000000000000uLL;
            unint64_t v111 = *((void *)this + 1);
            if (v111 > 0xFFFFFFFFFFFFFFFBLL || v111 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 236) = *(_DWORD *)(*(void *)this + v111);
            goto LABEL_322;
          case 232:
            *(void *)v8 |= 0x2000000000000000uLL;
            unint64_t v112 = *((void *)this + 1);
            if (v112 > 0xFFFFFFFFFFFFFFFBLL || v112 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 256) = *(_DWORD *)(*(void *)this + v112);
            goto LABEL_322;
          case 233:
            *(void *)v8 |= 0x200000uLL;
            unint64_t v113 = *((void *)this + 1);
            if (v113 > 0xFFFFFFFFFFFFFFFBLL || v113 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v113);
            goto LABEL_322;
          case 234:
            *(void *)v8 |= 0x200000000000uLL;
            unint64_t v114 = *((void *)this + 1);
            if (v114 > 0xFFFFFFFFFFFFFFFBLL || v114 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 192) = *(_DWORD *)(*(void *)this + v114);
            goto LABEL_322;
          case 235:
            char v115 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 0x40u;
            *(unsigned char *)(v8 + 10) = v115;
            unint64_t v116 = *((void *)this + 1);
            if (v116 > 0xFFFFFFFFFFFFFFFBLL || v116 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 292) = *(_DWORD *)(*(void *)this + v116);
            goto LABEL_322;
          case 236:
            *(void *)v8 |= 0x80uLL;
            unint64_t v117 = *((void *)this + 1);
            if (v117 > 0xFFFFFFFFFFFFFFFBLL || v117 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v117);
            goto LABEL_322;
          case 237:
            *(void *)v8 |= 0x400uLL;
            unint64_t v118 = *((void *)this + 1);
            if (v118 > 0xFFFFFFFFFFFFFFFBLL || v118 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v118);
            goto LABEL_322;
          case 238:
            *(void *)v8 |= 0x200uLL;
            unint64_t v119 = *((void *)this + 1);
            if (v119 > 0xFFFFFFFFFFFFFFFBLL || v119 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v119);
            goto LABEL_322;
          case 239:
            *(void *)v8 |= 0x100uLL;
            unint64_t v120 = *((void *)this + 1);
            if (v120 > 0xFFFFFFFFFFFFFFFBLL || v120 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v120);
            goto LABEL_322;
          case 240:
            *(void *)v8 |= 4uLL;
            unint64_t v121 = *((void *)this + 1);
            if (v121 > 0xFFFFFFFFFFFFFFFBLL || v121 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v121);
            goto LABEL_322;
          case 241:
            *(void *)v8 |= 0x20uLL;
            unint64_t v122 = *((void *)this + 1);
            if (v122 > 0xFFFFFFFFFFFFFFFBLL || v122 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v122);
            goto LABEL_322;
          case 242:
            *(void *)v8 |= 0x10uLL;
            unint64_t v123 = *((void *)this + 1);
            if (v123 > 0xFFFFFFFFFFFFFFFBLL || v123 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v123);
            goto LABEL_322;
          case 243:
            *(void *)v8 |= 8uLL;
            unint64_t v124 = *((void *)this + 1);
            if (v124 > 0xFFFFFFFFFFFFFFFBLL || v124 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v124);
            goto LABEL_322;
          case 244:
            *(void *)v8 |= 0x800uLL;
            unint64_t v125 = *((void *)this + 1);
            if (v125 > 0xFFFFFFFFFFFFFFFBLL || v125 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v125);
            goto LABEL_322;
          case 245:
            *(void *)v8 |= 0x4000uLL;
            unint64_t v126 = *((void *)this + 1);
            if (v126 > 0xFFFFFFFFFFFFFFFBLL || v126 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 68) = *(_DWORD *)(*(void *)this + v126);
            goto LABEL_322;
          case 246:
            *(void *)v8 |= 0x2000uLL;
            unint64_t v127 = *((void *)this + 1);
            if (v127 > 0xFFFFFFFFFFFFFFFBLL || v127 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v127);
            goto LABEL_322;
          case 247:
            *(void *)v8 |= 0x1000uLL;
            unint64_t v128 = *((void *)this + 1);
            if (v128 > 0xFFFFFFFFFFFFFFFBLL || v128 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v128);
            goto LABEL_322;
          case 248:
            *(void *)v8 |= 0x10000uLL;
            unint64_t v129 = *((void *)this + 1);
            if (v129 > 0xFFFFFFFFFFFFFFFBLL || v129 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v129);
            goto LABEL_322;
          case 249:
            *(void *)v8 |= 0x20000uLL;
            unint64_t v130 = *((void *)this + 1);
            if (v130 > 0xFFFFFFFFFFFFFFFBLL || v130 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v130);
            goto LABEL_322;
          case 250:
            *(void *)v8 |= 0x200000000000000uLL;
            unint64_t v131 = *((void *)this + 1);
            if (v131 > 0xFFFFFFFFFFFFFFFBLL || v131 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 240) = *(_DWORD *)(*(void *)this + v131);
            goto LABEL_322;
          case 251:
            *(void *)v8 |= 0x4000000000000000uLL;
            unint64_t v132 = *((void *)this + 1);
            if (v132 > 0xFFFFFFFFFFFFFFFBLL || v132 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 260) = *(_DWORD *)(*(void *)this + v132);
            goto LABEL_322;
          case 252:
            *(void *)v8 |= 0x400000uLL;
            unint64_t v133 = *((void *)this + 1);
            if (v133 > 0xFFFFFFFFFFFFFFFBLL || v133 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v133);
            goto LABEL_322;
          case 253:
            *(void *)v8 |= 0x400000000000uLL;
            unint64_t v134 = *((void *)this + 1);
            if (v134 > 0xFFFFFFFFFFFFFFFBLL || v134 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 196) = *(_DWORD *)(*(void *)this + v134);
            goto LABEL_322;
          case 254:
            char v135 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 0x80u;
            *(unsigned char *)(v8 + 10) = v135;
            unint64_t v136 = *((void *)this + 1);
            if (v136 > 0xFFFFFFFFFFFFFFFBLL || v136 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 296) = *(_DWORD *)(*(void *)this + v136);
            goto LABEL_322;
          case 255:
            *(void *)v8 |= 0x400000000000000uLL;
            unint64_t v137 = *((void *)this + 1);
            if (v137 > 0xFFFFFFFFFFFFFFFBLL || v137 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 244) = *(_DWORD *)(*(void *)this + v137);
            goto LABEL_322;
          case 256:
            *(void *)v8 |= 0x8000000000000000;
            unint64_t v138 = *((void *)this + 1);
            if (v138 > 0xFFFFFFFFFFFFFFFBLL || v138 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 264) = *(_DWORD *)(*(void *)this + v138);
            goto LABEL_322;
          case 257:
            *(void *)v8 |= 0x800000uLL;
            unint64_t v139 = *((void *)this + 1);
            if (v139 > 0xFFFFFFFFFFFFFFFBLL || v139 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 104) = *(_DWORD *)(*(void *)this + v139);
            goto LABEL_322;
          case 258:
            *(void *)v8 |= 0x800000000000uLL;
            unint64_t v140 = *((void *)this + 1);
            if (v140 > 0xFFFFFFFFFFFFFFFBLL || v140 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 200) = *(_DWORD *)(*(void *)this + v140);
            goto LABEL_322;
          case 259:
            char v141 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 0x100u;
            *(unsigned char *)(v8 + 10) = v141;
            unint64_t v142 = *((void *)this + 1);
            if (v142 > 0xFFFFFFFFFFFFFFFBLL || v142 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 300) = *(_DWORD *)(*(void *)this + v142);
            goto LABEL_322;
          case 260:
            *(void *)v8 |= 0x100000000uLL;
            unint64_t v143 = *((void *)this + 1);
            if (v143 > 0xFFFFFFFFFFFFFFFBLL || v143 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 140) = *(_DWORD *)(*(void *)this + v143);
            goto LABEL_322;
          case 261:
            *(void *)v8 |= 0x200000000uLL;
            unint64_t v144 = *((void *)this + 1);
            if (v144 > 0xFFFFFFFFFFFFFFFBLL || v144 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 144) = *(_DWORD *)(*(void *)this + v144);
            goto LABEL_322;
          case 262:
            *(void *)v8 |= 0x8000000uLL;
            unint64_t v145 = *((void *)this + 1);
            if (v145 > 0xFFFFFFFFFFFFFFFBLL || v145 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 120) = *(_DWORD *)(*(void *)this + v145);
            goto LABEL_322;
          case 263:
            *(void *)v8 |= 0x4000000uLL;
            unint64_t v146 = *((void *)this + 1);
            if (v146 > 0xFFFFFFFFFFFFFFFBLL || v146 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 116) = *(_DWORD *)(*(void *)this + v146);
            goto LABEL_322;
          case 264:
            *(void *)v8 |= 0x80000000uLL;
            unint64_t v147 = *((void *)this + 1);
            if (v147 > 0xFFFFFFFFFFFFFFFBLL || v147 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 136) = *(_DWORD *)(*(void *)this + v147);
            goto LABEL_322;
          case 265:
            *(void *)v8 |= 0x40000000uLL;
            unint64_t v148 = *((void *)this + 1);
            if (v148 > 0xFFFFFFFFFFFFFFFBLL || v148 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 132) = *(_DWORD *)(*(void *)this + v148);
            goto LABEL_322;
          case 266:
            *(void *)v8 |= 0x20000000uLL;
            unint64_t v149 = *((void *)this + 1);
            if (v149 > 0xFFFFFFFFFFFFFFFBLL || v149 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v149);
            goto LABEL_322;
          case 267:
            *(void *)v8 |= 0x10000000uLL;
            unint64_t v150 = *((void *)this + 1);
            if (v150 > 0xFFFFFFFFFFFFFFFBLL || v150 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 124) = *(_DWORD *)(*(void *)this + v150);
            goto LABEL_322;
          case 268:
            *(void *)v8 |= 0x10000000000uLL;
            unint64_t v151 = *((void *)this + 1);
            if (v151 > 0xFFFFFFFFFFFFFFFBLL || v151 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 172) = *(_DWORD *)(*(void *)this + v151);
            goto LABEL_322;
          case 269:
            *(void *)v8 |= 0x20000000000uLL;
            unint64_t v152 = *((void *)this + 1);
            if (v152 > 0xFFFFFFFFFFFFFFFBLL || v152 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 176) = *(_DWORD *)(*(void *)this + v152);
            goto LABEL_322;
          case 270:
            *(void *)v8 |= 0x800000000uLL;
            unint64_t v153 = *((void *)this + 1);
            if (v153 > 0xFFFFFFFFFFFFFFFBLL || v153 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 152) = *(_DWORD *)(*(void *)this + v153);
            goto LABEL_322;
          case 271:
            *(void *)v8 |= 0x400000000uLL;
            unint64_t v154 = *((void *)this + 1);
            if (v154 > 0xFFFFFFFFFFFFFFFBLL || v154 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 148) = *(_DWORD *)(*(void *)this + v154);
            goto LABEL_322;
          case 272:
            *(void *)v8 |= 0x8000000000uLL;
            unint64_t v155 = *((void *)this + 1);
            if (v155 > 0xFFFFFFFFFFFFFFFBLL || v155 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 168) = *(_DWORD *)(*(void *)this + v155);
            goto LABEL_322;
          case 273:
            *(void *)v8 |= 0x4000000000uLL;
            unint64_t v156 = *((void *)this + 1);
            if (v156 > 0xFFFFFFFFFFFFFFFBLL || v156 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 164) = *(_DWORD *)(*(void *)this + v156);
            goto LABEL_322;
          case 274:
            *(void *)v8 |= 0x2000000000uLL;
            unint64_t v157 = *((void *)this + 1);
            if (v157 > 0xFFFFFFFFFFFFFFFBLL || v157 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 160) = *(_DWORD *)(*(void *)this + v157);
            goto LABEL_322;
          case 275:
            *(void *)v8 |= 0x1000000000uLL;
            unint64_t v158 = *((void *)this + 1);
            if (v158 > 0xFFFFFFFFFFFFFFFBLL || v158 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 156) = *(_DWORD *)(*(void *)this + v158);
            goto LABEL_322;
          case 276:
            char v159 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 2u;
            *(unsigned char *)(v8 + 10) = v159;
            unint64_t v160 = *((void *)this + 1);
            if (v160 > 0xFFFFFFFFFFFFFFFBLL || v160 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 272) = *(_DWORD *)(*(void *)this + v160);
            goto LABEL_322;
          case 277:
            char v161 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 4u;
            *(unsigned char *)(v8 + 10) = v161;
            unint64_t v162 = *((void *)this + 1);
            if (v162 > 0xFFFFFFFFFFFFFFFBLL || v162 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 276) = *(_DWORD *)(*(void *)this + v162);
            goto LABEL_322;
          case 278:
            char v163 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 1u;
            *(unsigned char *)(v8 + 10) = v163;
            unint64_t v164 = *((void *)this + 1);
            if (v164 <= 0xFFFFFFFFFFFFFFFBLL && v164 + 4 <= *((void *)this + 2))
            {
              *(_DWORD *)(a1 + 268) = *(_DWORD *)(*(void *)this + v164);
LABEL_322:
              *((void *)this + 1) += 4;
            }
            else
            {
LABEL_268:
              *((unsigned char *)this + 24) = 1;
            }
            goto LABEL_323;
          default:
            goto LABEL_278;
        }
        while (1)
        {
          if (v86 == v85)
          {
            LODWORD(v90) = 0;
            *((unsigned char *)this + 24) = 1;
            goto LABEL_335;
          }
          unint64_t v185 = v85 + 1;
          char v186 = *(unsigned char *)(v87 + v85);
          *((void *)this + 1) = v185;
          v90 |= (unint64_t)(v186 & 0x7F) << v183;
          if ((v186 & 0x80) == 0) {
            break;
          }
          v183 += 7;
          unint64_t v85 = v185;
          BOOL v15 = v184++ > 8;
          if (v15) {
            goto LABEL_309;
          }
        }
        if (*((unsigned char *)this + 24)) {
          LODWORD(v90) = 0;
        }
LABEL_335:
        *(_DWORD *)(a1 + 220) = v90;
      }
LABEL_323:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v16 = 0;
    unsigned int v17 = 0;
    unint64_t v12 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v18 = v2 + 1;
      char v19 = *(unsigned char *)(v9 + v2);
      *((void *)this + 1) = v18;
      v12 |= (unint64_t)(v19 & 0x7F) << v16;
      if ((v19 & 0x80) == 0) {
        goto LABEL_21;
      }
      v16 += 7;
      unint64_t v2 = v18;
      if (v17++ >= 9)
      {
LABEL_20:
        unint64_t v12 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B75FBC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = (uint64_t *)(result + 316);
  uint64_t v5 = *(void *)(result + 316);
  if (v5)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
    uint64_t v5 = *v4;
    if ((v4[1] & 0x8000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v6 = *(unsigned __int16 *)(result + 324);
  int v7 = v6 | (*(unsigned __int8 *)(result + 326) << 16);
  if ((v6 & 0x8000) != 0)
  {
LABEL_5:
    uint64_t result = PB::Writer::write(this);
    int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
    uint64_t v5 = *v4;
  }
LABEL_6:
  if ((v7 & 0x10000) != 0)
  {
    uint64_t result = PB::Writer::write(this);
    int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
    uint64_t v5 = *v4;
    if ((*v4 & 0x40000000000) == 0)
    {
LABEL_8:
      if ((v5 & 0x40000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_90;
    }
  }
  else if ((v5 & 0x40000000000) == 0)
  {
    goto LABEL_8;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 180));
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 0x40000) == 0)
  {
LABEL_9:
    if ((v7 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_91;
  }
LABEL_90:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84));
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((v4[1] & 8) == 0)
  {
LABEL_10:
    if ((v7 & 0x2000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_92;
  }
LABEL_91:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 280));
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((v4[1] & 0x2000) == 0)
  {
LABEL_11:
    if ((v7 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_93;
  }
LABEL_92:
  uint64_t result = PB::Writer::write(this);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((v4[1] & 0x400) == 0)
  {
LABEL_12:
    if ((v7 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_94;
  }
LABEL_93:
  uint64_t result = PB::Writer::write(this);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((v4[1] & 0x200) == 0)
  {
LABEL_13:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_95;
  }
LABEL_94:
  uint64_t result = PB::Writer::write(this);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 0x2000000) == 0)
  {
LABEL_14:
    if ((v7 & 0x1000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_96;
  }
LABEL_95:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((v4[1] & 0x1000) == 0)
  {
LABEL_15:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_97;
  }
LABEL_96:
  uint64_t result = PB::Writer::write(this);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 0x1000000) == 0)
  {
LABEL_16:
    if ((v5 & 0x2000000000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_98;
  }
LABEL_97:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 108));
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 0x2000000000000) == 0)
  {
LABEL_17:
    if ((v5 & 0x1000000000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_99;
  }
LABEL_98:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 208));
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 0x1000000000000) == 0)
  {
LABEL_18:
    if ((v5 & 0x4000000000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_100;
  }
LABEL_99:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 204));
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 0x4000000000000) == 0)
  {
LABEL_19:
    if ((v5 & 0x40) == 0) {
      goto LABEL_20;
    }
    goto LABEL_101;
  }
LABEL_100:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 212));
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 0x40) == 0)
  {
LABEL_20:
    if ((v5 & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_102;
  }
LABEL_101:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36));
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 2) == 0)
  {
LABEL_21:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_103;
  }
LABEL_102:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16));
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 0x8000) == 0)
  {
LABEL_22:
    if ((v7 & 0x40000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_104;
  }
LABEL_103:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72));
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((v7 & 0x40000) == 0)
  {
LABEL_23:
    if ((v7 & 0x800) == 0) {
      goto LABEL_24;
    }
    goto LABEL_105;
  }
LABEL_104:
  uint64_t result = PB::Writer::write(this);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((v4[1] & 0x800) == 0)
  {
LABEL_24:
    if ((v7 & 0x4000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_106;
  }
LABEL_105:
  uint64_t result = PB::Writer::write(this);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((v4[1] & 0x4000) == 0)
  {
LABEL_25:
    if ((v5 & 0x20000000000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_107;
  }
LABEL_106:
  uint64_t result = PB::Writer::write(this);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 0x20000000000000) == 0)
  {
LABEL_26:
    if ((v5 & 0x8000000000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_108;
  }
LABEL_107:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 224));
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 0x8000000000000) == 0)
  {
LABEL_27:
    if ((v5 & 0x10000000000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_109;
  }
LABEL_108:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 216));
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 0x10000000000000) == 0)
  {
LABEL_28:
    if ((v7 & 0x20000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_110;
  }
LABEL_109:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((v7 & 0x20000) == 0)
  {
LABEL_29:
    if ((v5 & 0x40000000000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_111;
  }
LABEL_110:
  uint64_t result = PB::Writer::write(this);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x40000000000000) == 0)
  {
LABEL_30:
    if ((v5 & 0x800000000000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_112;
  }
LABEL_111:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 228));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x800000000000000) == 0)
  {
LABEL_31:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_113;
  }
LABEL_112:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 248));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x80000) == 0)
  {
LABEL_32:
    if ((v5 & 0x80000000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_114;
  }
LABEL_113:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 88));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x80000000000) == 0)
  {
LABEL_33:
    if ((v7 & 0x10) == 0) {
      goto LABEL_34;
    }
    goto LABEL_115;
  }
LABEL_114:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 184));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((v7 & 0x10) == 0)
  {
LABEL_34:
    if ((v5 & 0x80000000000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_116;
  }
LABEL_115:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 284));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x80000000000000) == 0)
  {
LABEL_35:
    if ((v5 & 0x1000000000000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_117;
  }
LABEL_116:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 232));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x1000000000000000) == 0)
  {
LABEL_36:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_118;
  }
LABEL_117:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 252));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x100000) == 0)
  {
LABEL_37:
    if ((v5 & 0x100000000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_119;
  }
LABEL_118:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 92));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x100000000000) == 0)
  {
LABEL_38:
    if ((v7 & 0x20) == 0) {
      goto LABEL_39;
    }
    goto LABEL_120;
  }
LABEL_119:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 188));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((v7 & 0x20) == 0)
  {
LABEL_39:
    if ((v5 & 0x100000000000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_121;
  }
LABEL_120:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 288));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x100000000000000) == 0)
  {
LABEL_40:
    if ((v5 & 0x2000000000000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_122;
  }
LABEL_121:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 236));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x2000000000000000) == 0)
  {
LABEL_41:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_123;
  }
LABEL_122:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 256));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x200000) == 0)
  {
LABEL_42:
    if ((v5 & 0x200000000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_124;
  }
LABEL_123:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 96));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x200000000000) == 0)
  {
LABEL_43:
    if ((v7 & 0x40) == 0) {
      goto LABEL_44;
    }
    goto LABEL_125;
  }
LABEL_124:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 192));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((v7 & 0x40) == 0)
  {
LABEL_44:
    if ((v5 & 0x80) == 0) {
      goto LABEL_45;
    }
    goto LABEL_126;
  }
LABEL_125:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 292));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x80) == 0)
  {
LABEL_45:
    if ((v5 & 0x400) == 0) {
      goto LABEL_46;
    }
    goto LABEL_127;
  }
LABEL_126:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x400) == 0)
  {
LABEL_46:
    if ((v5 & 0x200) == 0) {
      goto LABEL_47;
    }
    goto LABEL_128;
  }
LABEL_127:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x200) == 0)
  {
LABEL_47:
    if ((v5 & 0x100) == 0) {
      goto LABEL_48;
    }
    goto LABEL_129;
  }
LABEL_128:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x100) == 0)
  {
LABEL_48:
    if ((v5 & 4) == 0) {
      goto LABEL_49;
    }
    goto LABEL_130;
  }
LABEL_129:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 4) == 0)
  {
LABEL_49:
    if ((v5 & 0x20) == 0) {
      goto LABEL_50;
    }
    goto LABEL_131;
  }
LABEL_130:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x20) == 0)
  {
LABEL_50:
    if ((v5 & 0x10) == 0) {
      goto LABEL_51;
    }
    goto LABEL_132;
  }
LABEL_131:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x10) == 0)
  {
LABEL_51:
    if ((v5 & 8) == 0) {
      goto LABEL_52;
    }
    goto LABEL_133;
  }
LABEL_132:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 8) == 0)
  {
LABEL_52:
    if ((v5 & 0x800) == 0) {
      goto LABEL_53;
    }
    goto LABEL_134;
  }
LABEL_133:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x800) == 0)
  {
LABEL_53:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_135;
  }
LABEL_134:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x4000) == 0)
  {
LABEL_54:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_136;
  }
LABEL_135:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 68));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x2000) == 0)
  {
LABEL_55:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_137;
  }
LABEL_136:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x1000) == 0)
  {
LABEL_56:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_138;
  }
LABEL_137:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 60));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x10000) == 0)
  {
LABEL_57:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_139;
  }
LABEL_138:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x20000) == 0)
  {
LABEL_58:
    if ((v5 & 0x200000000000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_140;
  }
LABEL_139:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x200000000000000) == 0)
  {
LABEL_59:
    if ((v5 & 0x4000000000000000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_141;
  }
LABEL_140:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 240));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x4000000000000000) == 0)
  {
LABEL_60:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_142;
  }
LABEL_141:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 260));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x400000) == 0)
  {
LABEL_61:
    if ((v5 & 0x400000000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_143;
  }
LABEL_142:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 100));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x400000000000) == 0)
  {
LABEL_62:
    if ((v7 & 0x80) == 0) {
      goto LABEL_63;
    }
    goto LABEL_144;
  }
LABEL_143:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 196));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((v7 & 0x80) == 0)
  {
LABEL_63:
    if ((v5 & 0x400000000000000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_145;
  }
LABEL_144:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 296));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x400000000000000) == 0)
  {
LABEL_64:
    if ((v5 & 0x8000000000000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_146;
  }
LABEL_145:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 244));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x8000000000000000) == 0)
  {
LABEL_65:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_147;
  }
LABEL_146:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 264));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x800000) == 0)
  {
LABEL_66:
    if ((v5 & 0x800000000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_148;
  }
LABEL_147:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 104));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x800000000000) == 0)
  {
LABEL_67:
    if ((v7 & 0x100) == 0) {
      goto LABEL_68;
    }
    goto LABEL_149;
  }
LABEL_148:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 200));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((v7 & 0x100) == 0)
  {
LABEL_68:
    if ((v5 & 0x100000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_150;
  }
LABEL_149:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 300));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x100000000) == 0)
  {
LABEL_69:
    if ((v5 & 0x200000000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_151;
  }
LABEL_150:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 140));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x200000000) == 0)
  {
LABEL_70:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_152;
  }
LABEL_151:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 144));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x8000000) == 0)
  {
LABEL_71:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_153;
  }
LABEL_152:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 120));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x4000000) == 0)
  {
LABEL_72:
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_154;
  }
LABEL_153:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 116));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x80000000) == 0)
  {
LABEL_73:
    if ((v5 & 0x40000000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_155;
  }
LABEL_154:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 136));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x40000000) == 0)
  {
LABEL_74:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_156;
  }
LABEL_155:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 132));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x20000000) == 0)
  {
LABEL_75:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_157;
  }
LABEL_156:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 128));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x10000000) == 0)
  {
LABEL_76:
    if ((v5 & 0x10000000000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_158;
  }
LABEL_157:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 124));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x10000000000) == 0)
  {
LABEL_77:
    if ((v5 & 0x20000000000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_159;
  }
LABEL_158:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 172));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x20000000000) == 0)
  {
LABEL_78:
    if ((v5 & 0x800000000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_160;
  }
LABEL_159:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 176));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x800000000) == 0)
  {
LABEL_79:
    if ((v5 & 0x400000000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_161;
  }
LABEL_160:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 152));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x400000000) == 0)
  {
LABEL_80:
    if ((v5 & 0x8000000000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_162;
  }
LABEL_161:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 148));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x8000000000) == 0)
  {
LABEL_81:
    if ((v5 & 0x4000000000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_163;
  }
LABEL_162:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 168));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x4000000000) == 0)
  {
LABEL_82:
    if ((v5 & 0x2000000000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_164;
  }
LABEL_163:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 164));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x2000000000) == 0)
  {
LABEL_83:
    if ((v5 & 0x1000000000) == 0) {
      goto LABEL_84;
    }
    goto LABEL_165;
  }
LABEL_164:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 160));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  if ((*v4 & 0x1000000000) == 0)
  {
LABEL_84:
    if ((v7 & 2) == 0) {
      goto LABEL_85;
    }
    goto LABEL_166;
  }
LABEL_165:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 156));
  LOBYTE(v7) = *((_WORD *)v4 + 4);
  if ((v4[1] & 2) == 0)
  {
LABEL_85:
    if ((v7 & 4) == 0) {
      goto LABEL_86;
    }
LABEL_167:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 276));
    if ((v4[1] & 1) == 0) {
      return result;
    }
    goto LABEL_168;
  }
LABEL_166:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 272));
  LOBYTE(v7) = *((_WORD *)v4 + 4);
  if ((v4[1] & 4) != 0) {
    goto LABEL_167;
  }
LABEL_86:
  if ((v7 & 1) == 0) {
    return result;
  }
LABEL_168:
  float v8 = *(float *)(v3 + 268);

  return PB::Writer::write(this, v8);
}

void *sub_227B76CF0(void *result)
{
  *uint64_t result = &unk_26DC20FC0;
  *(void *)((char *)result + 364) = 0;
  *(void *)((char *)result + 356) = 0;
  return result;
}

void sub_227B76D24(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227B76D5C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC20FC0;
  unint64_t v2 = (uint64_t *)(a1 + 356);
  *(void *)(a1 + 364) = 0;
  *(void *)(a1 + 356) = 0;
  uint64_t v3 = (uint64_t *)(a2 + 356);
  uint64_t v4 = *(void *)(a2 + 356);
  if ((v4 & 0x800000) != 0)
  {
    uint64_t v6 = 0;
    float result = *(float *)(a2 + 132);
    uint64_t v5 = 0x800000;
    *unint64_t v2 = 0x800000;
    *(void *)(a1 + 364) = 0;
    *(float *)(a1 + 132) = result;
    uint64_t v4 = *v3;
    uint64_t v7 = *(void *)(a2 + 364);
    if ((*v3 & 0x400000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v4 & 0x400000) != 0)
  {
LABEL_5:
    float result = *(float *)(a2 + 128);
    v5 |= 0x400000uLL;
    *unint64_t v2 = v5;
    *(void *)(a1 + 364) = 0;
    *(float *)(a1 + 128) = result;
    uint64_t v4 = *v3;
    uint64_t v7 = *(void *)(a2 + 364);
  }
LABEL_6:
  if ((v4 & 0x1000000) != 0)
  {
    int v11 = *(_DWORD *)(a2 + 136);
    v5 |= 0x1000000uLL;
    *unint64_t v2 = v5;
    *(void *)(a1 + 364) = 0;
    *(_DWORD *)(a1 + 136) = v11;
    uint64_t v4 = *v3;
    uint64_t v7 = *(void *)(a2 + 364);
    if ((*v3 & 0x10000000000000) == 0)
    {
LABEL_8:
      if ((v7 & 1) == 0) {
        goto LABEL_9;
      }
      goto LABEL_115;
    }
  }
  else if ((v4 & 0x10000000000000) == 0)
  {
    goto LABEL_8;
  }
  int v12 = *(_DWORD *)(a2 + 248);
  v5 |= 0x10000000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = 0;
  *(_DWORD *)(a1 + 248) = v12;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 1) == 0)
  {
LABEL_9:
    if ((v4 & 0x400000000000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_116;
  }
LABEL_115:
  float result = *(float *)(a2 + 296);
  uint64_t v6 = 1;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = 1;
  *(float *)(a1 + 296) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x400000000000000) == 0)
  {
LABEL_10:
    if ((v4 & 0x400000000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_117;
  }
LABEL_116:
  float result = *(float *)(a2 + 272);
  v5 |= 0x400000000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 272) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x400000000000) == 0)
  {
LABEL_11:
    if ((v4 & 0x200000000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_118;
  }
LABEL_117:
  float result = *(float *)(a2 + 224);
  v5 |= 0x400000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 224) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x200000000000) == 0)
  {
LABEL_12:
    if ((v4 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_119;
  }
LABEL_118:
  float result = *(float *)(a2 + 220);
  v5 |= 0x200000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 220) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x200) == 0)
  {
LABEL_13:
    if ((v4 & 0x80000000000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_120;
  }
LABEL_119:
  float result = *(float *)(a2 + 76);
  v5 |= 0x200uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 76) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x80000000000000) == 0)
  {
LABEL_14:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_121;
  }
LABEL_120:
  int v13 = *(_DWORD *)(a2 + 260);
  v5 |= 0x80000000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 260) = v13;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x2000000) == 0)
  {
LABEL_15:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_122;
  }
LABEL_121:
  int v14 = *(_DWORD *)(a2 + 140);
  v5 |= 0x2000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 140) = v14;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x10000) == 0)
  {
LABEL_16:
    if ((v7 & 8) == 0) {
      goto LABEL_17;
    }
    goto LABEL_123;
  }
LABEL_122:
  float result = *(float *)(a2 + 104);
  v5 |= 0x10000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 104) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 8) == 0)
  {
LABEL_17:
    if ((v7 & 0x10) == 0) {
      goto LABEL_18;
    }
    goto LABEL_124;
  }
LABEL_123:
  float result = *(float *)(a2 + 308);
  v6 |= 8uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 308) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x10) == 0)
  {
LABEL_18:
    if ((v4 & 0x80000000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_125;
  }
LABEL_124:
  float result = *(float *)(a2 + 312);
  v6 |= 0x10uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 312) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x80000000000) == 0)
  {
LABEL_19:
    if ((v4 & 0x20000000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_126;
  }
LABEL_125:
  int v15 = *(_DWORD *)(a2 + 212);
  v5 |= 0x80000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 212) = v15;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x20000000000) == 0)
  {
LABEL_20:
    if ((v4 & 0x4000000000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_127;
  }
LABEL_126:
  int v16 = *(_DWORD *)(a2 + 204);
  v5 |= 0x20000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 204) = v16;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x4000000000000) == 0)
  {
LABEL_21:
    if ((v4 & 0x1000000000000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_128;
  }
LABEL_127:
  float result = *(float *)(a2 + 240);
  v5 |= 0x4000000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 240) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x1000000000000000) == 0)
  {
LABEL_22:
    if ((v7 & 2) == 0) {
      goto LABEL_23;
    }
    goto LABEL_129;
  }
LABEL_128:
  int v17 = *(_DWORD *)(a2 + 280);
  v5 |= 0x1000000000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 280) = v17;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 2) == 0)
  {
LABEL_23:
    if ((v4 & 0x80) == 0) {
      goto LABEL_24;
    }
    goto LABEL_130;
  }
LABEL_129:
  int v18 = *(_DWORD *)(a2 + 300);
  v6 |= 2uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 300) = v18;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x80) == 0)
  {
LABEL_24:
    if ((v4 & 1) == 0) {
      goto LABEL_25;
    }
    goto LABEL_131;
  }
LABEL_130:
  uint64_t v19 = *(void *)(a2 + 64);
  v5 |= 0x80uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(void *)(a1 + 64) = v19;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 1) == 0)
  {
LABEL_25:
    if ((v7 & 0x40) == 0) {
      goto LABEL_26;
    }
    goto LABEL_132;
  }
LABEL_131:
  uint64_t v20 = *(void *)(a2 + 8);
  v5 |= 1uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(void *)(a1 + 8) = v20;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x40) == 0)
  {
LABEL_26:
    if ((v7 & 0x80) == 0) {
      goto LABEL_27;
    }
    goto LABEL_133;
  }
LABEL_132:
  char v21 = *(unsigned char *)(a2 + 317);
  v6 |= 0x40uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 317) = v21;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x80) == 0)
  {
LABEL_27:
    if ((v7 & 0x8000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_134;
  }
LABEL_133:
  char v22 = *(unsigned char *)(a2 + 318);
  v6 |= 0x80uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 318) = v22;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x8000) == 0)
  {
LABEL_28:
    if ((v7 & 0x10000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_135;
  }
LABEL_134:
  char v23 = *(unsigned char *)(a2 + 326);
  v6 |= 0x8000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 326) = v23;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x10000) == 0)
  {
LABEL_29:
    if ((v7 & 0x8000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_136;
  }
LABEL_135:
  char v24 = *(unsigned char *)(a2 + 327);
  v6 |= 0x10000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 327) = v24;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x8000000) == 0)
  {
LABEL_30:
    if ((v7 & 0x2000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_137;
  }
LABEL_136:
  char v25 = *(unsigned char *)(a2 + 338);
  v6 |= 0x8000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 338) = v25;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x2000000) == 0)
  {
LABEL_31:
    if ((v7 & 0x1000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_138;
  }
LABEL_137:
  char v26 = *(unsigned char *)(a2 + 336);
  v6 |= 0x2000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 336) = v26;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x1000) == 0)
  {
LABEL_32:
    if ((v7 & 0x10000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_139;
  }
LABEL_138:
  char v27 = *(unsigned char *)(a2 + 323);
  v6 |= 0x1000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 323) = v27;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x10000000) == 0)
  {
LABEL_33:
    if ((v7 & 0x20000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_140;
  }
LABEL_139:
  char v28 = *(unsigned char *)(a2 + 339);
  v6 |= 0x10000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 339) = v28;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x20000000) == 0)
  {
LABEL_34:
    if ((v7 & 0x200) == 0) {
      goto LABEL_35;
    }
    goto LABEL_141;
  }
LABEL_140:
  char v29 = *(unsigned char *)(a2 + 340);
  v6 |= 0x20000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 340) = v29;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x200) == 0)
  {
LABEL_35:
    if ((v7 & 0x1000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_142;
  }
LABEL_141:
  char v30 = *(unsigned char *)(a2 + 320);
  v6 |= 0x200uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 320) = v30;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x1000000) == 0)
  {
LABEL_36:
    if ((v7 & 0x2000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_143;
  }
LABEL_142:
  char v31 = *(unsigned char *)(a2 + 335);
  v6 |= 0x1000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 335) = v31;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x2000) == 0)
  {
LABEL_37:
    if ((v7 & 0x4000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_144;
  }
LABEL_143:
  char v32 = *(unsigned char *)(a2 + 324);
  v6 |= 0x2000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 324) = v32;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x4000000) == 0)
  {
LABEL_38:
    if ((v7 & 0x80000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_145;
  }
LABEL_144:
  char v33 = *(unsigned char *)(a2 + 337);
  v6 |= 0x4000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 337) = v33;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x80000) == 0)
  {
LABEL_39:
    if ((v7 & 0x2000000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_146;
  }
LABEL_145:
  char v34 = *(unsigned char *)(a2 + 330);
  v6 |= 0x80000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 330) = v34;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x2000000000) == 0)
  {
LABEL_40:
    if ((v7 & 0x200000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_147;
  }
LABEL_146:
  char v35 = *(unsigned char *)(a2 + 348);
  v6 |= 0x2000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 348) = v35;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x200000000) == 0)
  {
LABEL_41:
    if ((v7 & 0x4000000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_148;
  }
LABEL_147:
  char v36 = *(unsigned char *)(a2 + 344);
  v6 |= 0x200000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 344) = v36;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x4000000000) == 0)
  {
LABEL_42:
    if ((v7 & 0x400000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_149;
  }
LABEL_148:
  char v37 = *(unsigned char *)(a2 + 349);
  v6 |= 0x4000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 349) = v37;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x400000000) == 0)
  {
LABEL_43:
    if ((v7 & 0x40000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_150;
  }
LABEL_149:
  char v38 = *(unsigned char *)(a2 + 345);
  v6 |= 0x400000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 345) = v38;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x40000000) == 0)
  {
LABEL_44:
    if ((v7 & 0x800) == 0) {
      goto LABEL_45;
    }
    goto LABEL_151;
  }
LABEL_150:
  char v39 = *(unsigned char *)(a2 + 341);
  v6 |= 0x40000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 341) = v39;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x800) == 0)
  {
LABEL_45:
    if ((v7 & 0x100000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_152;
  }
LABEL_151:
  char v40 = *(unsigned char *)(a2 + 322);
  v6 |= 0x800uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 322) = v40;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x100000) == 0)
  {
LABEL_46:
    if ((v7 & 0x8000000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_153;
  }
LABEL_152:
  char v41 = *(unsigned char *)(a2 + 331);
  v6 |= 0x100000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 331) = v41;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x8000000000) == 0)
  {
LABEL_47:
    if ((v7 & 0x800000000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_154;
  }
LABEL_153:
  char v42 = *(unsigned char *)(a2 + 350);
  v6 |= 0x8000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 350) = v42;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x800000000) == 0)
  {
LABEL_48:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_155;
  }
LABEL_154:
  char v43 = *(unsigned char *)(a2 + 346);
  v6 |= 0x800000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 346) = v43;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x20000) == 0)
  {
LABEL_49:
    if ((v7 & 0x400000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_156;
  }
LABEL_155:
  int v44 = *(_DWORD *)(a2 + 108);
  v5 |= 0x20000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 108) = v44;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x400000) == 0)
  {
LABEL_50:
    if ((v7 & 0x800000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_157;
  }
LABEL_156:
  char v45 = *(unsigned char *)(a2 + 333);
  v6 |= 0x400000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 333) = v45;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x800000) == 0)
  {
LABEL_51:
    if ((v7 & 0x20) == 0) {
      goto LABEL_52;
    }
    goto LABEL_158;
  }
LABEL_157:
  char v46 = *(unsigned char *)(a2 + 334);
  v6 |= 0x800000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 334) = v46;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x20) == 0)
  {
LABEL_52:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_159;
  }
LABEL_158:
  char v47 = *(unsigned char *)(a2 + 316);
  v6 |= 0x20uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 316) = v47;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x40000) == 0)
  {
LABEL_53:
    if ((v7 & 0x40000000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_160;
  }
LABEL_159:
  int v48 = *(_DWORD *)(a2 + 112);
  v5 |= 0x40000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 112) = v48;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x40000000000) == 0)
  {
LABEL_54:
    if ((v7 & 0x10000000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_161;
  }
LABEL_160:
  char v49 = *(unsigned char *)(a2 + 353);
  v6 |= 0x40000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 353) = v49;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x10000000000) == 0)
  {
LABEL_55:
    if ((v7 & 0x20000000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_162;
  }
LABEL_161:
  char v50 = *(unsigned char *)(a2 + 351);
  v6 |= 0x10000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 351) = v50;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x20000000000) == 0)
  {
LABEL_56:
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_163;
  }
LABEL_162:
  char v51 = *(unsigned char *)(a2 + 352);
  v6 |= 0x20000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 352) = v51;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x100000000) == 0)
  {
LABEL_57:
    if ((v7 & 0x80000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_164;
  }
LABEL_163:
  char v52 = *(unsigned char *)(a2 + 343);
  v6 |= 0x100000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 343) = v52;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x80000000) == 0)
  {
LABEL_58:
    if ((v4 & 0x20000000000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_165;
  }
LABEL_164:
  char v53 = *(unsigned char *)(a2 + 342);
  v6 |= 0x80000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 342) = v53;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x20000000000000) == 0)
  {
LABEL_59:
    if ((v4 & 0x40000000000000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_166;
  }
LABEL_165:
  int v54 = *(_DWORD *)(a2 + 252);
  v5 |= 0x20000000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 252) = v54;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x40000000000000) == 0)
  {
LABEL_60:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_167;
  }
LABEL_166:
  int v55 = *(_DWORD *)(a2 + 256);
  v5 |= 0x40000000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 256) = v55;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x4000000) == 0)
  {
LABEL_61:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_168;
  }
LABEL_167:
  int v56 = *(_DWORD *)(a2 + 144);
  v5 |= 0x4000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 144) = v56;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x8000000) == 0)
  {
LABEL_62:
    if ((v7 & 0x20000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_169;
  }
LABEL_168:
  int v57 = *(_DWORD *)(a2 + 148);
  v5 |= 0x8000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 148) = v57;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x20000) == 0)
  {
LABEL_63:
    if ((v7 & 0x4000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_170;
  }
LABEL_169:
  char v58 = *(unsigned char *)(a2 + 328);
  v6 |= 0x20000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 328) = v58;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x4000) == 0)
  {
LABEL_64:
    if ((v4 & 0x2000000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_171;
  }
LABEL_170:
  char v59 = *(unsigned char *)(a2 + 325);
  v6 |= 0x4000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 325) = v59;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x2000000000) == 0)
  {
LABEL_65:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_172;
  }
LABEL_171:
  int v60 = *(_DWORD *)(a2 + 188);
  v5 |= 0x2000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 188) = v60;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x80000) == 0)
  {
LABEL_66:
    if ((v4 & 0x1000000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_173;
  }
LABEL_172:
  int v61 = *(_DWORD *)(a2 + 116);
  v5 |= 0x80000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 116) = v61;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x1000000000) == 0)
  {
LABEL_67:
    if ((v4 & 0x4000000000000000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_174;
  }
LABEL_173:
  int v62 = *(_DWORD *)(a2 + 184);
  v5 |= 0x1000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 184) = v62;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x4000000000000000) == 0)
  {
LABEL_68:
    if ((v4 & 0x8000000000000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_175;
  }
LABEL_174:
  float result = *(float *)(a2 + 288);
  v5 |= 0x4000000000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 288) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x8000000000000000) == 0)
  {
LABEL_69:
    if ((v4 & 0x200000000000000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_176;
  }
LABEL_175:
  float result = *(float *)(a2 + 292);
  v5 |= 0x8000000000000000;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 292) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x200000000000000) == 0)
  {
LABEL_70:
    if ((v4 & 0x800000000000000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_177;
  }
LABEL_176:
  float result = *(float *)(a2 + 268);
  v5 |= 0x200000000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 268) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x800000000000000) == 0)
  {
LABEL_71:
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_178;
  }
LABEL_177:
  int v63 = *(_DWORD *)(a2 + 276);
  v5 |= 0x800000000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 276) = v63;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x2000000000000000) == 0)
  {
LABEL_72:
    if ((v7 & 0x400) == 0) {
      goto LABEL_73;
    }
    goto LABEL_179;
  }
LABEL_178:
  int v64 = *(_DWORD *)(a2 + 284);
  v5 |= 0x2000000000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 284) = v64;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x400) == 0)
  {
LABEL_73:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_180;
  }
LABEL_179:
  char v65 = *(unsigned char *)(a2 + 321);
  v6 |= 0x400uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 321) = v65;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x4000) == 0)
  {
LABEL_74:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_181;
  }
LABEL_180:
  int v66 = *(_DWORD *)(a2 + 96);
  v5 |= 0x4000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 96) = v66;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x1000) == 0)
  {
LABEL_75:
    if ((v4 & 0x100000000000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_182;
  }
LABEL_181:
  float result = *(float *)(a2 + 88);
  v5 |= 0x1000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 88) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x100000000000) == 0)
  {
LABEL_76:
    if ((v4 & 0x100000000000000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_183;
  }
LABEL_182:
  int v67 = *(_DWORD *)(a2 + 216);
  v5 |= 0x100000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 216) = v67;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x100000000000000) == 0)
  {
LABEL_77:
    if ((v4 & 0x40) == 0) {
      goto LABEL_78;
    }
    goto LABEL_184;
  }
LABEL_183:
  int v68 = *(_DWORD *)(a2 + 264);
  v5 |= 0x100000000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 264) = v68;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x40) == 0)
  {
LABEL_78:
    if ((v4 & 0x800000000000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_185;
  }
LABEL_184:
  uint64_t v69 = *(void *)(a2 + 56);
  v5 |= 0x40uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(void *)(a1 + 56) = v69;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x800000000000) == 0)
  {
LABEL_79:
    if ((v4 & 0x1000000000000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_186;
  }
LABEL_185:
  int v70 = *(_DWORD *)(a2 + 228);
  v5 |= 0x800000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 228) = v70;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x1000000000000) == 0)
  {
LABEL_80:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_187;
  }
LABEL_186:
  int v71 = *(_DWORD *)(a2 + 232);
  v5 |= 0x1000000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 232) = v71;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x100000) == 0)
  {
LABEL_81:
    if ((v4 & 0x400) == 0) {
      goto LABEL_82;
    }
    goto LABEL_188;
  }
LABEL_187:
  float result = *(float *)(a2 + 120);
  v5 |= 0x100000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 120) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x400) == 0)
  {
LABEL_82:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_189;
  }
LABEL_188:
  float result = *(float *)(a2 + 80);
  v5 |= 0x400uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 80) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x200000) == 0)
  {
LABEL_83:
    if ((v4 & 0x800) == 0) {
      goto LABEL_84;
    }
    goto LABEL_190;
  }
LABEL_189:
  float result = *(float *)(a2 + 124);
  v5 |= 0x200000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 124) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x800) == 0)
  {
LABEL_84:
    if ((v4 & 0x100) == 0) {
      goto LABEL_85;
    }
    goto LABEL_191;
  }
LABEL_190:
  float result = *(float *)(a2 + 84);
  v5 |= 0x800uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 84) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x100) == 0)
  {
LABEL_85:
    if ((v7 & 0x200000) == 0) {
      goto LABEL_86;
    }
    goto LABEL_192;
  }
LABEL_191:
  float result = *(float *)(a2 + 72);
  v5 |= 0x100uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 72) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x200000) == 0)
  {
LABEL_86:
    if ((v7 & 4) == 0) {
      goto LABEL_87;
    }
    goto LABEL_193;
  }
LABEL_192:
  char v72 = *(unsigned char *)(a2 + 332);
  v6 |= 0x200000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 332) = v72;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 4) == 0)
  {
LABEL_87:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_88;
    }
    goto LABEL_194;
  }
LABEL_193:
  int v73 = *(_DWORD *)(a2 + 304);
  v6 |= 4uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 304) = v73;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x10000000) == 0)
  {
LABEL_88:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_89;
    }
    goto LABEL_195;
  }
LABEL_194:
  int v74 = *(_DWORD *)(a2 + 152);
  v5 |= 0x10000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 152) = v74;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x40000000) == 0)
  {
LABEL_89:
    if ((v7 & 0x1000000000) == 0) {
      goto LABEL_90;
    }
    goto LABEL_196;
  }
LABEL_195:
  int v75 = *(_DWORD *)(a2 + 160);
  v5 |= 0x40000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 160) = v75;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x1000000000) == 0)
  {
LABEL_90:
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_91;
    }
    goto LABEL_197;
  }
LABEL_196:
  char v76 = *(unsigned char *)(a2 + 347);
  v6 |= 0x1000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 347) = v76;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x80000000) == 0)
  {
LABEL_91:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_92;
    }
    goto LABEL_198;
  }
LABEL_197:
  int v77 = *(_DWORD *)(a2 + 164);
  v5 |= 0x80000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 164) = v77;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x20000000) == 0)
  {
LABEL_92:
    if ((v4 & 0x8000000000000) == 0) {
      goto LABEL_93;
    }
    goto LABEL_199;
  }
LABEL_198:
  int v78 = *(_DWORD *)(a2 + 156);
  v5 |= 0x20000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 156) = v78;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x8000000000000) == 0)
  {
LABEL_93:
    if ((v4 & 0x4000000000) == 0) {
      goto LABEL_94;
    }
    goto LABEL_200;
  }
LABEL_199:
  float result = *(float *)(a2 + 244);
  v5 |= 0x8000000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 244) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x4000000000) == 0)
  {
LABEL_94:
    if ((v4 & 0x8000000000) == 0) {
      goto LABEL_95;
    }
    goto LABEL_201;
  }
LABEL_200:
  int v79 = *(_DWORD *)(a2 + 192);
  v5 |= 0x4000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 192) = v79;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x8000000000) == 0)
  {
LABEL_95:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_96;
    }
    goto LABEL_202;
  }
LABEL_201:
  int v80 = *(_DWORD *)(a2 + 196);
  v5 |= 0x8000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 196) = v80;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x8000) == 0)
  {
LABEL_96:
    if ((v4 & 0x40000000000) == 0) {
      goto LABEL_97;
    }
    goto LABEL_203;
  }
LABEL_202:
  float result = *(float *)(a2 + 100);
  v5 |= 0x8000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 100) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x40000000000) == 0)
  {
LABEL_97:
    if ((v4 & 0x10000000000) == 0) {
      goto LABEL_98;
    }
    goto LABEL_204;
  }
LABEL_203:
  int v81 = *(_DWORD *)(a2 + 208);
  v5 |= 0x40000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 208) = v81;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x10000000000) == 0)
  {
LABEL_98:
    if ((v4 & 0x800000000) == 0) {
      goto LABEL_99;
    }
    goto LABEL_205;
  }
LABEL_204:
  int v82 = *(_DWORD *)(a2 + 200);
  v5 |= 0x10000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 200) = v82;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x800000000) == 0)
  {
LABEL_99:
    if ((v4 & 0x100000000) == 0) {
      goto LABEL_100;
    }
    goto LABEL_206;
  }
LABEL_205:
  int v83 = *(_DWORD *)(a2 + 180);
  v5 |= 0x800000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 180) = v83;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x100000000) == 0)
  {
LABEL_100:
    if ((v4 & 0x400000000) == 0) {
      goto LABEL_101;
    }
    goto LABEL_207;
  }
LABEL_206:
  int v84 = *(_DWORD *)(a2 + 168);
  v5 |= 0x100000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 168) = v84;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x400000000) == 0)
  {
LABEL_101:
    if ((v7 & 0x100) == 0) {
      goto LABEL_102;
    }
    goto LABEL_208;
  }
LABEL_207:
  int v85 = *(_DWORD *)(a2 + 176);
  v5 |= 0x400000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 176) = v85;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x100) == 0)
  {
LABEL_102:
    if ((v7 & 0x40000) == 0) {
      goto LABEL_103;
    }
    goto LABEL_209;
  }
LABEL_208:
  char v86 = *(unsigned char *)(a2 + 319);
  v6 |= 0x100uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 319) = v86;
  uint64_t v4 = *v3;
  if ((*(void *)(a2 + 364) & 0x40000) == 0)
  {
LABEL_103:
    if ((v4 & 0x200000000) == 0) {
      goto LABEL_105;
    }
    goto LABEL_104;
  }
LABEL_209:
  char v87 = *(unsigned char *)(a2 + 329);
  v6 |= 0x40000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 329) = v87;
  if ((*v3 & 0x200000000) != 0)
  {
LABEL_104:
    int v9 = *(_DWORD *)(a2 + 172);
    *unint64_t v2 = v5 | 0x200000000;
    *(void *)(a1 + 364) = v6;
    *(_DWORD *)(a1 + 172) = v9;
  }
LABEL_105:
  uint64_t v10 = *v3;
  if ((*v3 & 2) != 0)
  {
    uint64_t v88 = *(void *)(a2 + 16);
    *v2 |= 2uLL;
    *(void *)(a1 + 16) = v88;
    uint64_t v10 = *v3;
    if ((*v3 & 0x20) == 0)
    {
LABEL_107:
      if ((v10 & 4) == 0) {
        goto LABEL_108;
      }
      goto LABEL_213;
    }
  }
  else if ((v10 & 0x20) == 0)
  {
    goto LABEL_107;
  }
  uint64_t v89 = *(void *)(a2 + 48);
  *v2 |= 0x20uLL;
  *(void *)(a1 + 48) = v89;
  uint64_t v10 = *v3;
  if ((*v3 & 4) == 0)
  {
LABEL_108:
    if ((v10 & 8) == 0) {
      goto LABEL_109;
    }
    goto LABEL_214;
  }
LABEL_213:
  uint64_t v90 = *(void *)(a2 + 24);
  *v2 |= 4uLL;
  *(void *)(a1 + 24) = v90;
  uint64_t v10 = *v3;
  if ((*v3 & 8) == 0)
  {
LABEL_109:
    if ((v10 & 0x10) == 0) {
      goto LABEL_110;
    }
    goto LABEL_215;
  }
LABEL_214:
  uint64_t v91 = *(void *)(a2 + 32);
  *v2 |= 8uLL;
  *(void *)(a1 + 32) = v91;
  uint64_t v10 = *v3;
  if ((*v3 & 0x10) == 0)
  {
LABEL_110:
    if ((v10 & 0x2000000000000) == 0) {
      goto LABEL_111;
    }
    goto LABEL_216;
  }
LABEL_215:
  uint64_t v92 = *(void *)(a2 + 40);
  *v2 |= 0x10uLL;
  *(void *)(a1 + 40) = v92;
  uint64_t v10 = *v3;
  if ((*v3 & 0x2000000000000) == 0)
  {
LABEL_111:
    if ((v10 & 0x2000) == 0) {
      return result;
    }
LABEL_217:
    float result = *(float *)(a2 + 92);
    *v2 |= 0x2000uLL;
    *(float *)(a1 + 92) = result;
    return result;
  }
LABEL_216:
  int v93 = *(_DWORD *)(a2 + 236);
  *v2 |= 0x2000000000000uLL;
  *(_DWORD *)(a1 + 236) = v93;
  if ((*v3 & 0x2000) != 0) {
    goto LABEL_217;
  }
  return result;
}

uint64_t sub_227B77974(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = (uint64_t *)(a1 + 356);
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x20) != 0)
  {
    PB::TextFormatter::format(this, "anyLowSense");
    uint64_t v6 = *(void *)(a1 + 364);
  }
  uint64_t v7 = *v5;
  if ((*v5 & 0x100) != 0)
  {
    PB::TextFormatter::format(this, "autocorrelationPeriodicCount", *(float *)(a1 + 72));
    uint64_t v7 = *v5;
    uint64_t v6 = *(void *)(a1 + 364);
    if ((*v5 & 0x200) == 0)
    {
LABEL_5:
      if ((v6 & 0x40) == 0) {
        goto LABEL_6;
      }
      goto LABEL_108;
    }
  }
  else if ((v7 & 0x200) == 0)
  {
    goto LABEL_5;
  }
  PB::TextFormatter::format(this, "autocorrelationPeriodicCountThreshold", *(float *)(a1 + 76));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x40) == 0)
  {
LABEL_6:
    if ((v7 & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_109;
  }
LABEL_108:
  PB::TextFormatter::format(this, "crashDetectorDecision");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 1) == 0)
  {
LABEL_7:
    if ((v7 & 0x400) == 0) {
      goto LABEL_8;
    }
    goto LABEL_110;
  }
LABEL_109:
  PB::TextFormatter::format(this, "crashTimestamp");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x400) == 0)
  {
LABEL_8:
    if ((v7 & 0x800) == 0) {
      goto LABEL_9;
    }
    goto LABEL_111;
  }
LABEL_110:
  PB::TextFormatter::format(this, "cumulativeRotation", *(float *)(a1 + 80));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x800) == 0)
  {
LABEL_9:
    if ((v7 & 0x1000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_112;
  }
LABEL_111:
  PB::TextFormatter::format(this, "cumulativeRotationHarmonicMean", *(float *)(a1 + 84));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x1000) == 0)
  {
LABEL_10:
    if ((v7 & 0x2000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_113;
  }
LABEL_112:
  PB::TextFormatter::format(this, "currentCadence", *(float *)(a1 + 88));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x2000) == 0)
  {
LABEL_11:
    if ((v7 & 0x4000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_114;
  }
LABEL_113:
  PB::TextFormatter::format(this, "deltaRealTrigger", *(float *)(a1 + 92));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x4000) == 0)
  {
LABEL_12:
    if ((v7 & 0x8000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_115;
  }
LABEL_114:
  PB::TextFormatter::format(this, "deltaSteps");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x8000) == 0)
  {
LABEL_13:
    if ((v7 & 0x10000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_116;
  }
LABEL_115:
  PB::TextFormatter::format(this, "distanceToNearestRoad", *(float *)(a1 + 100));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x10000) == 0)
  {
LABEL_14:
    if ((v6 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_117;
  }
LABEL_116:
  PB::TextFormatter::format(this, "distanceToNearestRoadThreshold", *(float *)(a1 + 104));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x80) == 0)
  {
LABEL_15:
    if ((v6 & 0x100) == 0) {
      goto LABEL_16;
    }
    goto LABEL_118;
  }
LABEL_117:
  PB::TextFormatter::format(this, "earlyCrashDetectorDecision");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x100) == 0)
  {
LABEL_16:
    if ((v6 & 0x200) == 0) {
      goto LABEL_17;
    }
    goto LABEL_119;
  }
LABEL_118:
  PB::TextFormatter::format(this, "escalationCandidate");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x200) == 0)
  {
LABEL_17:
    if ((v7 & 0x20000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_120;
  }
LABEL_119:
  PB::TextFormatter::format(this, "escalationCandidateSuppressed");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x20000) == 0)
  {
LABEL_18:
    if ((v7 & 2) == 0) {
      goto LABEL_19;
    }
    goto LABEL_121;
  }
LABEL_120:
  PB::TextFormatter::format(this, "faultCounter");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 2) == 0)
  {
LABEL_19:
    if ((v6 & 0x400) == 0) {
      goto LABEL_20;
    }
    goto LABEL_122;
  }
LABEL_121:
  PB::TextFormatter::format(this, "firstTimestampMAPDecision");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x400) == 0)
  {
LABEL_20:
    if ((v7 & 0x40000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_123;
  }
LABEL_122:
  PB::TextFormatter::format(this, "hasSteps");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x40000) == 0)
  {
LABEL_21:
    if ((v6 & 0x800) == 0) {
      goto LABEL_22;
    }
    goto LABEL_124;
  }
LABEL_123:
  PB::TextFormatter::format(this, "highSensitivityBitmap");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x800) == 0)
  {
LABEL_22:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_125;
  }
LABEL_124:
  PB::TextFormatter::format(this, "isAirbagDetectedOverWindow");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x1000) == 0)
  {
LABEL_23:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_126;
  }
LABEL_125:
  PB::TextFormatter::format(this, "isAutocorrelationDecided");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x2000) == 0)
  {
LABEL_24:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_127;
  }
LABEL_126:
  PB::TextFormatter::format(this, "isCrashDetected");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x4000) == 0)
  {
LABEL_25:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_128;
  }
LABEL_127:
  PB::TextFormatter::format(this, "isDecisionMadeAtBoundary");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x8000) == 0)
  {
LABEL_26:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_129;
  }
LABEL_128:
  PB::TextFormatter::format(this, "isDescalationDecided");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x10000) == 0)
  {
LABEL_27:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_130;
  }
LABEL_129:
  PB::TextFormatter::format(this, "isDescalationRequired");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x20000) == 0)
  {
LABEL_28:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_131;
  }
LABEL_130:
  PB::TextFormatter::format(this, "isEvaluatingMovingGps");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x40000) == 0)
  {
LABEL_29:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_132;
  }
LABEL_131:
  PB::TextFormatter::format(this, "isFreeFallDetectedEpoch");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x80000) == 0)
  {
LABEL_30:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_133;
  }
LABEL_132:
  PB::TextFormatter::format(this, "isHighSpeedCrashDetected");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x100000) == 0)
  {
LABEL_31:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_134;
  }
LABEL_133:
  PB::TextFormatter::format(this, "isHighSpeedCrashDetectedOverWindow");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x200000) == 0)
  {
LABEL_32:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_135;
  }
LABEL_134:
  PB::TextFormatter::format(this, "isHighSpeedDetectedOverWindow");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x400000) == 0)
  {
LABEL_33:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_136;
  }
LABEL_135:
  PB::TextFormatter::format(this, "isLowSensCrashDetected");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x800000) == 0)
  {
LABEL_34:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_137;
  }
LABEL_136:
  PB::TextFormatter::format(this, "isLowSensRolloverCrashDetected");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_35:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_138;
  }
LABEL_137:
  PB::TextFormatter::format(this, "isMAPFPDecided");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_36:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_139;
  }
LABEL_138:
  PB::TextFormatter::format(this, "isQuiescenceDecided");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_37:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_140;
  }
LABEL_139:
  PB::TextFormatter::format(this, "isRolloverCrashDetected");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_38:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_141;
  }
LABEL_140:
  PB::TextFormatter::format(this, "isStepsDecided");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x10000000) == 0)
  {
LABEL_39:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_142;
  }
LABEL_141:
  PB::TextFormatter::format(this, "isTriggerClustersDecided");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x20000000) == 0)
  {
LABEL_40:
    if ((v7 & 4) == 0) {
      goto LABEL_41;
    }
    goto LABEL_143;
  }
LABEL_142:
  PB::TextFormatter::format(this, "isUshaFPDecided");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 4) == 0)
  {
LABEL_41:
    if ((v7 & 8) == 0) {
      goto LABEL_42;
    }
    goto LABEL_144;
  }
LABEL_143:
  PB::TextFormatter::format(this, "lastLocalRealTriggerTimestamp");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 8) == 0)
  {
LABEL_42:
    if ((v7 & 0x10) == 0) {
      goto LABEL_43;
    }
    goto LABEL_145;
  }
LABEL_144:
  PB::TextFormatter::format(this, "lastRemoteRealTriggerTimestamp");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x10) == 0)
  {
LABEL_43:
    if ((v7 & 0x20) == 0) {
      goto LABEL_44;
    }
    goto LABEL_146;
  }
LABEL_145:
  PB::TextFormatter::format(this, "lastRemoteSampleTimestamp");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x20) == 0)
  {
LABEL_44:
    if ((v7 & 0x80000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_147;
  }
LABEL_146:
  PB::TextFormatter::format(this, "lastTimestampMAPDecision");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x80000) == 0)
  {
LABEL_45:
    if ((v7 & 0x100000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_148;
  }
LABEL_147:
  PB::TextFormatter::format(this, "lowSpeedOrFakeCountAtBoundaryThreshold");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x100000) == 0)
  {
LABEL_46:
    if ((v7 & 0x200000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_149;
  }
LABEL_148:
  PB::TextFormatter::format(this, "maxPulse", *(float *)(a1 + 120));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x200000) == 0)
  {
LABEL_47:
    if ((v7 & 0x400000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_150;
  }
LABEL_149:
  PB::TextFormatter::format(this, "maxPulseHarmonicMean", *(float *)(a1 + 124));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x400000) == 0)
  {
LABEL_48:
    if ((v7 & 0x800000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_151;
  }
LABEL_150:
  PB::TextFormatter::format(this, "maximumHoldDuration", *(float *)(a1 + 128));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x800000) == 0)
  {
LABEL_49:
    if ((v7 & 0x1000000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_152;
  }
LABEL_151:
  PB::TextFormatter::format(this, "minimumHoldDuration", *(float *)(a1 + 132));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x1000000) == 0)
  {
LABEL_50:
    if ((v7 & 0x2000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_153;
  }
LABEL_152:
  PB::TextFormatter::format(this, "movingCountThreshold");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x2000000) == 0)
  {
LABEL_51:
    if ((v7 & 0x4000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_154;
  }
LABEL_153:
  PB::TextFormatter::format(this, "movingCountThresholdFromSydneyB");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x4000000) == 0)
  {
LABEL_52:
    if ((v7 & 0x8000000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_155;
  }
LABEL_154:
  PB::TextFormatter::format(this, "movingGpsCount");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x8000000) == 0)
  {
LABEL_53:
    if ((v7 & 0x10000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_156;
  }
LABEL_155:
  PB::TextFormatter::format(this, "movingGpsCountTotal");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x10000000) == 0)
  {
LABEL_54:
    if ((v7 & 0x20000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_157;
  }
LABEL_156:
  PB::TextFormatter::format(this, "numAudioSkiing");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x20000000) == 0)
  {
LABEL_55:
    if ((v7 & 0x40000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_158;
  }
LABEL_157:
  PB::TextFormatter::format(this, "numAudioSkiingThreshold");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x40000000) == 0)
  {
LABEL_56:
    if ((v7 & 0x80000000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_159;
  }
LABEL_158:
  PB::TextFormatter::format(this, "numBaroIncreasesSkiing");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x80000000) == 0)
  {
LABEL_57:
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_160;
  }
LABEL_159:
  PB::TextFormatter::format(this, "numBaroIncreasesSkiingThreshold");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x100000000) == 0)
  {
LABEL_58:
    if ((v7 & 0x200000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_161;
  }
LABEL_160:
  PB::TextFormatter::format(this, "numDeescalationAOI");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x200000000) == 0)
  {
LABEL_59:
    if ((v7 & 0x400000000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_162;
  }
LABEL_161:
  PB::TextFormatter::format(this, "numDeescalationMAP");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x400000000) == 0)
  {
LABEL_60:
    if ((v7 & 0x800000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_163;
  }
LABEL_162:
  PB::TextFormatter::format(this, "numDeescalationTwoLevel");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x800000000) == 0)
  {
LABEL_61:
    if ((v7 & 0x1000000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_164;
  }
LABEL_163:
  PB::TextFormatter::format(this, "numDeescalationUsha");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x1000000000) == 0)
  {
LABEL_62:
    if ((v7 & 0x2000000000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_165;
  }
LABEL_164:
  PB::TextFormatter::format(this, "numGpsSamplesInHistory");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x2000000000) == 0)
  {
LABEL_63:
    if ((v7 & 0x4000000000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_166;
  }
LABEL_165:
  PB::TextFormatter::format(this, "numLowOrFakeGpsSamplesInHistory");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x4000000000) == 0)
  {
LABEL_64:
    if ((v7 & 0x8000000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_167;
  }
LABEL_166:
  PB::TextFormatter::format(this, "numTriggersWithRecentSkiLiftDetected");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x8000000000) == 0)
  {
LABEL_65:
    if ((v7 & 0x10000000000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_168;
  }
LABEL_167:
  PB::TextFormatter::format(this, "numTriggersWithTrueBtHint");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x10000000000) == 0)
  {
LABEL_66:
    if ((v7 & 0x20000000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_169;
  }
LABEL_168:
  PB::TextFormatter::format(this, "numUshaCPEpoch");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x20000000000) == 0)
  {
LABEL_67:
    if ((v7 & 0x40000000000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_170;
  }
LABEL_169:
  PB::TextFormatter::format(this, "numUshaCPEpochThreshold");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x40000000000) == 0)
  {
LABEL_68:
    if ((v7 & 0x80000000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_171;
  }
LABEL_170:
  PB::TextFormatter::format(this, "numUshaFPEpoch");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x80000000000) == 0)
  {
LABEL_69:
    if ((v7 & 0x100000000000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_172;
  }
LABEL_171:
  PB::TextFormatter::format(this, "numUshaFPEpochThreshold");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x100000000000) == 0)
  {
LABEL_70:
    if ((v7 & 0x200000000000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_173;
  }
LABEL_172:
  PB::TextFormatter::format(this, "pedometerArmConstrainedState");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x200000000000) == 0)
  {
LABEL_71:
    if ((v7 & 0x400000000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_174;
  }
LABEL_173:
  PB::TextFormatter::format(this, "quiescenceCumulativeRotationHarmonicMeanThreshold", *(float *)(a1 + 220));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x400000000000) == 0)
  {
LABEL_72:
    if ((v7 & 0x800000000000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_175;
  }
LABEL_174:
  PB::TextFormatter::format(this, "quiescenceMaxPulseHarmonicMeanThreshold", *(float *)(a1 + 224));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x800000000000) == 0)
  {
LABEL_73:
    if ((v7 & 0x1000000000000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_176;
  }
LABEL_175:
  PB::TextFormatter::format(this, "quiescencePulseEpochCount");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x1000000000000) == 0)
  {
LABEL_74:
    if ((v7 & 0x2000000000000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_177;
  }
LABEL_176:
  PB::TextFormatter::format(this, "quiescenceSpinEpochCount");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x2000000000000) == 0)
  {
LABEL_75:
    if ((v7 & 0x4000000000000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_178;
  }
LABEL_177:
  PB::TextFormatter::format(this, "sameEventState");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x4000000000000) == 0)
  {
LABEL_76:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_179;
  }
LABEL_178:
  PB::TextFormatter::format(this, "secondDeescalationHoldDuration", *(float *)(a1 + 240));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x40000000) == 0)
  {
LABEL_77:
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_180;
  }
LABEL_179:
  PB::TextFormatter::format(this, "shouldDeescalateBecauseOfAutocorrelationCondition");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x80000000) == 0)
  {
LABEL_78:
    if ((v6 & 0x100000000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_181;
  }
LABEL_180:
  PB::TextFormatter::format(this, "shouldDeescalateBecauseOfJointDetectionCondition");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x100000000) == 0)
  {
LABEL_79:
    if ((v6 & 0x200000000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_182;
  }
LABEL_181:
  PB::TextFormatter::format(this, "shouldDeescalateBecauseOfMAPFPCondition");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x200000000) == 0)
  {
LABEL_80:
    if ((v6 & 0x400000000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_183;
  }
LABEL_182:
  PB::TextFormatter::format(this, "shouldDeescalateBecauseOfMovingCondition");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x400000000) == 0)
  {
LABEL_81:
    if ((v6 & 0x800000000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_184;
  }
LABEL_183:
  PB::TextFormatter::format(this, "shouldDeescalateBecauseOfQuiescenceCondition");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x800000000) == 0)
  {
LABEL_82:
    if ((v6 & 0x1000000000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_185;
  }
LABEL_184:
  PB::TextFormatter::format(this, "shouldDeescalateBecauseOfSkiLiftCondition");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x1000000000) == 0)
  {
LABEL_83:
    if ((v6 & 0x2000000000) == 0) {
      goto LABEL_84;
    }
    goto LABEL_186;
  }
LABEL_185:
  PB::TextFormatter::format(this, "shouldDeescalateBecauseOfSkiingCondition");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x2000000000) == 0)
  {
LABEL_84:
    if ((v6 & 0x4000000000) == 0) {
      goto LABEL_85;
    }
    goto LABEL_187;
  }
LABEL_186:
  PB::TextFormatter::format(this, "shouldDeescalateBecauseOfStaticCondition");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x4000000000) == 0)
  {
LABEL_85:
    if ((v6 & 0x8000000000) == 0) {
      goto LABEL_86;
    }
    goto LABEL_188;
  }
LABEL_187:
  PB::TextFormatter::format(this, "shouldDeescalateBecauseOfStepsCondition");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x8000000000) == 0)
  {
LABEL_86:
    if ((v6 & 0x10000000000) == 0) {
      goto LABEL_87;
    }
    goto LABEL_189;
  }
LABEL_188:
  PB::TextFormatter::format(this, "shouldDeescalateBecauseOfTriggerClustersCondition");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x10000000000) == 0)
  {
LABEL_87:
    if ((v6 & 0x20000000000) == 0) {
      goto LABEL_88;
    }
    goto LABEL_190;
  }
LABEL_189:
  PB::TextFormatter::format(this, "shouldDeescalateBecauseOfTwoLevelSensitivityCondition");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x20000000000) == 0)
  {
LABEL_88:
    if ((v6 & 0x40000000000) == 0) {
      goto LABEL_89;
    }
    goto LABEL_191;
  }
LABEL_190:
  PB::TextFormatter::format(this, "shouldDeescalateBecauseOfUshaFPCondition");
  uint64_t v7 = *v5;
  if ((*(void *)(a1 + 364) & 0x40000000000) == 0)
  {
LABEL_89:
    if ((v7 & 0x8000000000000) == 0) {
      goto LABEL_90;
    }
    goto LABEL_192;
  }
LABEL_191:
  PB::TextFormatter::format(this, "shouldEnableHighSensBecauseOfDistanceToRoadCondition");
  uint64_t v7 = *v5;
  if ((*v5 & 0x8000000000000) == 0)
  {
LABEL_90:
    if ((v7 & 0x10000000000000) == 0) {
      goto LABEL_91;
    }
    goto LABEL_193;
  }
LABEL_192:
  PB::TextFormatter::format(this, "skiingPressureChangeOverEpochThreshold", *(float *)(a1 + 244));
  uint64_t v7 = *v5;
  if ((*v5 & 0x10000000000000) == 0)
  {
LABEL_91:
    if ((v7 & 0x20000000000000) == 0) {
      goto LABEL_92;
    }
    goto LABEL_194;
  }
LABEL_193:
  PB::TextFormatter::format(this, "staticCountThreshold");
  uint64_t v7 = *v5;
  if ((*v5 & 0x20000000000000) == 0)
  {
LABEL_92:
    if ((v7 & 0x40000000000000) == 0) {
      goto LABEL_93;
    }
    goto LABEL_195;
  }
LABEL_194:
  PB::TextFormatter::format(this, "staticGpsCount");
  uint64_t v7 = *v5;
  if ((*v5 & 0x40000000000000) == 0)
  {
LABEL_93:
    if ((v7 & 0x80000000000000) == 0) {
      goto LABEL_94;
    }
    goto LABEL_196;
  }
LABEL_195:
  PB::TextFormatter::format(this, "staticGpsCountTotal");
  uint64_t v7 = *v5;
  if ((*v5 & 0x80000000000000) == 0)
  {
LABEL_94:
    if ((v7 & 0x100000000000000) == 0) {
      goto LABEL_95;
    }
    goto LABEL_197;
  }
LABEL_196:
  PB::TextFormatter::format(this, "stationaryCountMissingAsNoOpThreshold");
  uint64_t v7 = *v5;
  if ((*v5 & 0x100000000000000) == 0)
  {
LABEL_95:
    if ((v7 & 0x40) == 0) {
      goto LABEL_96;
    }
    goto LABEL_198;
  }
LABEL_197:
  PB::TextFormatter::format(this, "stepCountEventTimestamp");
  uint64_t v7 = *v5;
  if ((*v5 & 0x40) == 0)
  {
LABEL_96:
    if ((v7 & 0x200000000000000) == 0) {
      goto LABEL_97;
    }
    goto LABEL_199;
  }
LABEL_198:
  PB::TextFormatter::format(this, "stepCountEventTimestamp64");
  uint64_t v7 = *v5;
  if ((*v5 & 0x200000000000000) == 0)
  {
LABEL_97:
    if ((v7 & 0x400000000000000) == 0) {
      goto LABEL_98;
    }
    goto LABEL_200;
  }
LABEL_199:
  PB::TextFormatter::format(this, "stepsCadence", *(float *)(a1 + 268));
  uint64_t v7 = *v5;
  if ((*v5 & 0x400000000000000) == 0)
  {
LABEL_98:
    if ((v7 & 0x800000000000000) == 0) {
      goto LABEL_99;
    }
    goto LABEL_201;
  }
LABEL_200:
  PB::TextFormatter::format(this, "stepsCadenceThreshold", *(float *)(a1 + 272));
  uint64_t v7 = *v5;
  if ((*v5 & 0x800000000000000) == 0)
  {
LABEL_99:
    if ((v7 & 0x1000000000000000) == 0) {
      goto LABEL_100;
    }
    goto LABEL_202;
  }
LABEL_201:
  PB::TextFormatter::format(this, "stepsCount");
  uint64_t v7 = *v5;
  if ((*v5 & 0x1000000000000000) == 0)
  {
LABEL_100:
    if ((v7 & 0x2000000000000000) == 0) {
      goto LABEL_101;
    }
    goto LABEL_203;
  }
LABEL_202:
  PB::TextFormatter::format(this, "stepsCountThreshold");
  uint64_t v7 = *v5;
  if ((*v5 & 0x2000000000000000) == 0)
  {
LABEL_101:
    if ((v7 & 0x4000000000000000) == 0) {
      goto LABEL_103;
    }
    goto LABEL_102;
  }
LABEL_203:
  PB::TextFormatter::format(this, "stepsDeescalatedAtOpp");
  if ((*v5 & 0x4000000000000000) != 0) {
LABEL_102:
  }
    PB::TextFormatter::format(this, "stepsEpochCount", *(float *)(a1 + 288));
LABEL_103:
  uint64_t v8 = *v5;
  if (*v5 < 0)
  {
    PB::TextFormatter::format(this, "stepsPerMinute", *(float *)(a1 + 292));
    uint64_t v8 = *v5;
    uint64_t v9 = *(void *)(a1 + 364);
    if ((v9 & 1) == 0) {
      goto LABEL_207;
    }
    goto LABEL_206;
  }
  uint64_t v9 = *(void *)(a1 + 364);
  if (v9)
  {
LABEL_206:
    PB::TextFormatter::format(this, "stepsPerMinuteThreshold", *(float *)(a1 + 296));
    uint64_t v8 = *v5;
    uint64_t v9 = *(void *)(a1 + 364);
  }
LABEL_207:
  if ((v9 & 2) != 0)
  {
    PB::TextFormatter::format(this, "stepsSecondOpportunityLookbackLength");
    uint64_t v9 = *(void *)(a1 + 364);
    if ((*v5 & 0x80) == 0)
    {
LABEL_209:
      if ((v9 & 4) == 0) {
        goto LABEL_210;
      }
      goto LABEL_218;
    }
  }
  else if ((v8 & 0x80) == 0)
  {
    goto LABEL_209;
  }
  PB::TextFormatter::format(this, "timestamp");
  uint64_t v9 = *(void *)(a1 + 364);
  if ((v9 & 4) == 0)
  {
LABEL_210:
    if ((v9 & 8) == 0) {
      goto LABEL_211;
    }
    goto LABEL_219;
  }
LABEL_218:
  PB::TextFormatter::format(this, "triggerClusterDeescalationWindowBoundary");
  uint64_t v9 = *(void *)(a1 + 364);
  if ((v9 & 8) == 0)
  {
LABEL_211:
    if ((v9 & 0x10) == 0) {
      goto LABEL_213;
    }
    goto LABEL_212;
  }
LABEL_219:
  PB::TextFormatter::format(this, "ushaCumulativeRotationThreshold", *(float *)(a1 + 308));
  if ((*(void *)(a1 + 364) & 0x10) != 0) {
LABEL_212:
  }
    PB::TextFormatter::format(this, "ushaPeakPressureThreshold", *(float *)(a1 + 312));
LABEL_213:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B78728(uint64_t a1, PB::Reader *this)
{
  uint64_t v3 = (unint64_t *)((char *)this + 8);
  unint64_t v2 = *((void *)this + 1);
  uint64_t v5 = (char *)this + 24;
  int v4 = *((unsigned __int8 *)this + 24);
  unint64_t v6 = *((void *)this + 2);
  if (v2 < v6 && v4 == 0)
  {
    int v11 = (void *)(a1 + 356);
    do
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v6)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        unint64_t v15 = 0;
        if (v2 > v6) {
          unint64_t v6 = v2;
        }
        while (1)
        {
          if (v6 == v2)
          {
            unint64_t v15 = 0;
            *uint64_t v5 = 1;
            goto LABEL_24;
          }
          unint64_t v21 = v2 + 1;
          char v22 = *(unsigned char *)(v12 + v2);
          *uint64_t v3 = v21;
          v15 |= (unint64_t)(v22 & 0x7F) << v19;
          if ((v22 & 0x80) == 0) {
            break;
          }
          v19 += 7;
          unint64_t v2 = v21;
          BOOL v18 = v20++ > 8;
          if (v18)
          {
LABEL_20:
            unint64_t v15 = 0;
            goto LABEL_24;
          }
        }
        if (*v5) {
          unint64_t v15 = 0;
        }
      }
      else
      {
        char v13 = 0;
        unsigned int v14 = 0;
        unint64_t v15 = 0;
        while (1)
        {
          unint64_t v16 = v2 + 1;
          *uint64_t v3 = v2 + 1;
          char v17 = *(unsigned char *)(v12 + v2);
          v15 |= (unint64_t)(v17 & 0x7F) << v13;
          if ((v17 & 0x80) == 0) {
            break;
          }
          v13 += 7;
          unint64_t v2 = v16;
          BOOL v18 = v14++ > 8;
          if (v18) {
            goto LABEL_20;
          }
        }
      }
LABEL_24:
      int v4 = *v5;
      if (*v5) {
        BOOL v23 = 1;
      }
      else {
        BOOL v23 = (v15 & 7) == 4;
      }
      if (v23) {
        break;
      }
      unint64_t v24 = v15 >> 3;
      if ((int)(v15 >> 3) > 400)
      {
        if ((int)v24 <= 900)
        {
          if ((int)v24 > 600)
          {
            if ((int)v24 > 700)
            {
              switch((int)v24)
              {
                case 801:
                  *v11 |= 0x100000uLL;
                  unint64_t v59 = *v3;
                  if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v59 + 4 > *((void *)this + 2)) {
                    goto LABEL_512;
                  }
                  *(_DWORD *)(a1 + 120) = *(_DWORD *)(*(void *)this + v59);
                  goto LABEL_919;
                case 802:
                  *v11 |= 0x400uLL;
                  unint64_t v426 = *v3;
                  if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v426 + 4 > *((void *)this + 2)) {
                    goto LABEL_512;
                  }
                  *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v426);
                  goto LABEL_919;
                case 803:
                  *v11 |= 0x200000uLL;
                  unint64_t v427 = *v3;
                  if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v427 + 4 > *((void *)this + 2)) {
                    goto LABEL_512;
                  }
                  *(_DWORD *)(a1 + 124) = *(_DWORD *)(*(void *)this + v427);
                  goto LABEL_919;
                case 804:
                  *v11 |= 0x800uLL;
                  unint64_t v428 = *v3;
                  if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v428 + 4 > *((void *)this + 2)) {
                    goto LABEL_512;
                  }
                  *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v428);
                  goto LABEL_919;
                default:
                  if (v24 == 701)
                  {
                    *v11 |= 0x800000000000uLL;
                    unint64_t v447 = *((void *)this + 1);
                    unint64_t v448 = *((void *)this + 2);
                    uint64_t v449 = *(void *)this;
                    if (v447 > 0xFFFFFFFFFFFFFFF5 || v447 + 10 > v448)
                    {
                      char v692 = 0;
                      unsigned int v693 = 0;
                      uint64_t v452 = 0;
                      if (v448 <= v447) {
                        unint64_t v448 = *((void *)this + 1);
                      }
                      while (1)
                      {
                        if (v448 == v447)
                        {
                          LODWORD(v452) = 0;
                          *uint64_t v5 = 1;
                          goto LABEL_1052;
                        }
                        unint64_t v694 = v447 + 1;
                        char v695 = *(unsigned char *)(v449 + v447);
                        *uint64_t v3 = v694;
                        v452 |= (unint64_t)(v695 & 0x7F) << v692;
                        if ((v695 & 0x80) == 0) {
                          break;
                        }
                        v692 += 7;
                        unint64_t v447 = v694;
                        BOOL v18 = v693++ > 8;
                        if (v18)
                        {
LABEL_815:
                          LODWORD(v452) = 0;
                          goto LABEL_1052;
                        }
                      }
                      if (*v5) {
                        LODWORD(v452) = 0;
                      }
                    }
                    else
                    {
                      char v450 = 0;
                      unsigned int v451 = 0;
                      uint64_t v452 = 0;
                      while (1)
                      {
                        unint64_t v453 = v447 + 1;
                        *uint64_t v3 = v447 + 1;
                        char v454 = *(unsigned char *)(v449 + v447);
                        v452 |= (unint64_t)(v454 & 0x7F) << v450;
                        if ((v454 & 0x80) == 0) {
                          break;
                        }
                        v450 += 7;
                        unint64_t v447 = v453;
                        BOOL v18 = v451++ > 8;
                        if (v18) {
                          goto LABEL_815;
                        }
                      }
                    }
LABEL_1052:
                    *(_DWORD *)(a1 + 228) = v452;
                  }
                  else
                  {
                    if (v24 != 702) {
                      goto LABEL_140;
                    }
                    *v11 |= 0x1000000000000uLL;
                    unint64_t v69 = *((void *)this + 1);
                    unint64_t v70 = *((void *)this + 2);
                    uint64_t v71 = *(void *)this;
                    if (v69 > 0xFFFFFFFFFFFFFFF5 || v69 + 10 > v70)
                    {
                      char v596 = 0;
                      unsigned int v597 = 0;
                      uint64_t v74 = 0;
                      if (v70 <= v69) {
                        unint64_t v70 = *((void *)this + 1);
                      }
                      while (1)
                      {
                        if (v70 == v69)
                        {
                          LODWORD(v74) = 0;
                          *uint64_t v5 = 1;
                          goto LABEL_980;
                        }
                        unint64_t v598 = v69 + 1;
                        char v599 = *(unsigned char *)(v71 + v69);
                        *uint64_t v3 = v598;
                        v74 |= (unint64_t)(v599 & 0x7F) << v596;
                        if ((v599 & 0x80) == 0) {
                          break;
                        }
                        v596 += 7;
                        unint64_t v69 = v598;
                        BOOL v18 = v597++ > 8;
                        if (v18)
                        {
LABEL_583:
                          LODWORD(v74) = 0;
                          goto LABEL_980;
                        }
                      }
                      if (*v5) {
                        LODWORD(v74) = 0;
                      }
                    }
                    else
                    {
                      char v72 = 0;
                      unsigned int v73 = 0;
                      uint64_t v74 = 0;
                      while (1)
                      {
                        unint64_t v75 = v69 + 1;
                        *uint64_t v3 = v69 + 1;
                        char v76 = *(unsigned char *)(v71 + v69);
                        v74 |= (unint64_t)(v76 & 0x7F) << v72;
                        if ((v76 & 0x80) == 0) {
                          break;
                        }
                        v72 += 7;
                        unint64_t v69 = v75;
                        BOOL v18 = v73++ > 8;
                        if (v18) {
                          goto LABEL_583;
                        }
                      }
                    }
LABEL_980:
                    *(_DWORD *)(a1 + 232) = v74;
                  }
                  break;
              }
            }
            else
            {
              switch((int)v24)
              {
                case 601:
                  v11[1] |= 0x400uLL;
                  unint64_t v47 = *((void *)this + 1);
                  if (v47 >= *((void *)this + 2))
                  {
                    BOOL v50 = 0;
                    *uint64_t v5 = 1;
                  }
                  else
                  {
                    unint64_t v48 = v47 + 1;
                    int v49 = *(unsigned __int8 *)(*(void *)this + v47);
                    *((void *)this + 1) = v48;
                    BOOL v50 = v49 != 0;
                  }
                  *(unsigned char *)(a1 + 321) = v50;
                  goto LABEL_920;
                case 602:
                  *v11 |= 0x4000uLL;
                  unint64_t v393 = *((void *)this + 1);
                  unint64_t v394 = *((void *)this + 2);
                  uint64_t v395 = *(void *)this;
                  if (v393 <= 0xFFFFFFFFFFFFFFF5 && v393 + 10 <= v394)
                  {
                    char v396 = 0;
                    unsigned int v397 = 0;
                    uint64_t v398 = 0;
                    do
                    {
                      unint64_t v399 = v393 + 1;
                      *uint64_t v3 = v393 + 1;
                      char v400 = *(unsigned char *)(v395 + v393);
                      v398 |= (unint64_t)(v400 & 0x7F) << v396;
                      if ((v400 & 0x80) == 0) {
                        goto LABEL_1034;
                      }
                      v396 += 7;
                      unint64_t v393 = v399;
                      BOOL v18 = v397++ > 8;
                    }
                    while (!v18);
LABEL_773:
                    LODWORD(v398) = 0;
                    goto LABEL_1034;
                  }
                  char v668 = 0;
                  unsigned int v669 = 0;
                  uint64_t v398 = 0;
                  if (v394 <= v393) {
                    unint64_t v394 = *((void *)this + 1);
                  }
                  while (2)
                  {
                    if (v394 == v393)
                    {
                      LODWORD(v398) = 0;
                      *uint64_t v5 = 1;
                    }
                    else
                    {
                      unint64_t v670 = v393 + 1;
                      char v671 = *(unsigned char *)(v395 + v393);
                      *uint64_t v3 = v670;
                      v398 |= (unint64_t)(v671 & 0x7F) << v668;
                      if (v671 < 0)
                      {
                        v668 += 7;
                        unint64_t v393 = v670;
                        BOOL v18 = v669++ > 8;
                        if (v18) {
                          goto LABEL_773;
                        }
                        continue;
                      }
                      if (*v5) {
                        LODWORD(v398) = 0;
                      }
                    }
                    break;
                  }
LABEL_1034:
                  *(_DWORD *)(a1 + 96) = v398;
                  goto LABEL_920;
                case 603:
                  *v11 |= 0x1000uLL;
                  unint64_t v401 = *v3;
                  if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v401 + 4 > *((void *)this + 2)) {
                    goto LABEL_512;
                  }
                  *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v401);
                  goto LABEL_919;
                case 604:
                  *v11 |= 0x100000000000uLL;
                  unint64_t v402 = *((void *)this + 1);
                  unint64_t v403 = *((void *)this + 2);
                  uint64_t v404 = *(void *)this;
                  if (v402 <= 0xFFFFFFFFFFFFFFF5 && v402 + 10 <= v403)
                  {
                    char v405 = 0;
                    unsigned int v406 = 0;
                    uint64_t v407 = 0;
                    do
                    {
                      unint64_t v408 = v402 + 1;
                      *uint64_t v3 = v402 + 1;
                      char v409 = *(unsigned char *)(v404 + v402);
                      v407 |= (unint64_t)(v409 & 0x7F) << v405;
                      if ((v409 & 0x80) == 0) {
                        goto LABEL_1037;
                      }
                      v405 += 7;
                      unint64_t v402 = v408;
                      BOOL v18 = v406++ > 8;
                    }
                    while (!v18);
LABEL_780:
                    LODWORD(v407) = 0;
                    goto LABEL_1037;
                  }
                  char v672 = 0;
                  unsigned int v673 = 0;
                  uint64_t v407 = 0;
                  if (v403 <= v402) {
                    unint64_t v403 = *((void *)this + 1);
                  }
                  while (2)
                  {
                    if (v403 == v402)
                    {
                      LODWORD(v407) = 0;
                      *uint64_t v5 = 1;
                    }
                    else
                    {
                      unint64_t v674 = v402 + 1;
                      char v675 = *(unsigned char *)(v404 + v402);
                      *uint64_t v3 = v674;
                      v407 |= (unint64_t)(v675 & 0x7F) << v672;
                      if (v675 < 0)
                      {
                        v672 += 7;
                        unint64_t v402 = v674;
                        BOOL v18 = v673++ > 8;
                        if (v18) {
                          goto LABEL_780;
                        }
                        continue;
                      }
                      if (*v5) {
                        LODWORD(v407) = 0;
                      }
                    }
                    break;
                  }
LABEL_1037:
                  *(_DWORD *)(a1 + 216) = v407;
                  goto LABEL_920;
                case 605:
                  *v11 |= 0x100000000000000uLL;
                  unint64_t v410 = *((void *)this + 1);
                  unint64_t v411 = *((void *)this + 2);
                  uint64_t v412 = *(void *)this;
                  if (v410 <= 0xFFFFFFFFFFFFFFF5 && v410 + 10 <= v411)
                  {
                    char v413 = 0;
                    unsigned int v414 = 0;
                    uint64_t v415 = 0;
                    do
                    {
                      unint64_t v416 = v410 + 1;
                      *uint64_t v3 = v410 + 1;
                      char v417 = *(unsigned char *)(v412 + v410);
                      v415 |= (unint64_t)(v417 & 0x7F) << v413;
                      if ((v417 & 0x80) == 0) {
                        goto LABEL_1040;
                      }
                      v413 += 7;
                      unint64_t v410 = v416;
                      BOOL v18 = v414++ > 8;
                    }
                    while (!v18);
LABEL_787:
                    LODWORD(v415) = 0;
                    goto LABEL_1040;
                  }
                  char v676 = 0;
                  unsigned int v677 = 0;
                  uint64_t v415 = 0;
                  if (v411 <= v410) {
                    unint64_t v411 = *((void *)this + 1);
                  }
                  while (2)
                  {
                    if (v411 == v410)
                    {
                      LODWORD(v415) = 0;
                      *uint64_t v5 = 1;
                    }
                    else
                    {
                      unint64_t v678 = v410 + 1;
                      char v679 = *(unsigned char *)(v412 + v410);
                      *uint64_t v3 = v678;
                      v415 |= (unint64_t)(v679 & 0x7F) << v676;
                      if (v679 < 0)
                      {
                        v676 += 7;
                        unint64_t v410 = v678;
                        BOOL v18 = v677++ > 8;
                        if (v18) {
                          goto LABEL_787;
                        }
                        continue;
                      }
                      if (*v5) {
                        LODWORD(v415) = 0;
                      }
                    }
                    break;
                  }
LABEL_1040:
                  *(_DWORD *)(a1 + 264) = v415;
                  goto LABEL_920;
                case 606:
                  *v11 |= 0x40uLL;
                  unint64_t v418 = *((void *)this + 1);
                  unint64_t v419 = *((void *)this + 2);
                  uint64_t v420 = *(void *)this;
                  if (v418 <= 0xFFFFFFFFFFFFFFF5 && v418 + 10 <= v419)
                  {
                    char v421 = 0;
                    unsigned int v422 = 0;
                    uint64_t v423 = 0;
                    do
                    {
                      unint64_t v424 = v418 + 1;
                      *uint64_t v3 = v418 + 1;
                      char v425 = *(unsigned char *)(v420 + v418);
                      v423 |= (unint64_t)(v425 & 0x7F) << v421;
                      if ((v425 & 0x80) == 0) {
                        goto LABEL_1043;
                      }
                      v421 += 7;
                      unint64_t v418 = v424;
                      BOOL v18 = v422++ > 8;
                    }
                    while (!v18);
LABEL_794:
                    uint64_t v423 = 0;
                    goto LABEL_1043;
                  }
                  char v680 = 0;
                  unsigned int v681 = 0;
                  uint64_t v423 = 0;
                  if (v419 <= v418) {
                    unint64_t v419 = *((void *)this + 1);
                  }
                  break;
                default:
                  goto LABEL_140;
              }
              while (1)
              {
                if (v419 == v418)
                {
                  uint64_t v423 = 0;
                  *uint64_t v5 = 1;
                  goto LABEL_1043;
                }
                unint64_t v682 = v418 + 1;
                char v683 = *(unsigned char *)(v420 + v418);
                *uint64_t v3 = v682;
                v423 |= (unint64_t)(v683 & 0x7F) << v680;
                if ((v683 & 0x80) == 0) {
                  break;
                }
                v680 += 7;
                unint64_t v418 = v682;
                BOOL v18 = v681++ > 8;
                if (v18) {
                  goto LABEL_794;
                }
              }
              if (*v5) {
                uint64_t v423 = 0;
              }
LABEL_1043:
              *(void *)(a1 + 56) = v423;
            }
          }
          else
          {
            switch((int)v24)
            {
              case 401:
                *v11 |= 0x20000000000000uLL;
                unint64_t v27 = *((void *)this + 1);
                unint64_t v28 = *((void *)this + 2);
                uint64_t v29 = *(void *)this;
                if (v27 <= 0xFFFFFFFFFFFFFFF5 && v27 + 10 <= v28)
                {
                  char v30 = 0;
                  unsigned int v31 = 0;
                  uint64_t v32 = 0;
                  do
                  {
                    unint64_t v33 = v27 + 1;
                    *uint64_t v3 = v27 + 1;
                    char v34 = *(unsigned char *)(v29 + v27);
                    v32 |= (unint64_t)(v34 & 0x7F) << v30;
                    if ((v34 & 0x80) == 0) {
                      goto LABEL_974;
                    }
                    v30 += 7;
                    unint64_t v27 = v33;
                    BOOL v18 = v31++ > 8;
                  }
                  while (!v18);
LABEL_565:
                  LODWORD(v32) = 0;
                  goto LABEL_974;
                }
                char v588 = 0;
                unsigned int v589 = 0;
                uint64_t v32 = 0;
                if (v28 <= v27) {
                  unint64_t v28 = *((void *)this + 1);
                }
                while (2)
                {
                  if (v28 == v27)
                  {
                    LODWORD(v32) = 0;
                    *uint64_t v5 = 1;
                  }
                  else
                  {
                    unint64_t v590 = v27 + 1;
                    char v591 = *(unsigned char *)(v29 + v27);
                    *uint64_t v3 = v590;
                    v32 |= (unint64_t)(v591 & 0x7F) << v588;
                    if (v591 < 0)
                    {
                      v588 += 7;
                      unint64_t v27 = v590;
                      BOOL v18 = v589++ > 8;
                      if (v18) {
                        goto LABEL_565;
                      }
                      continue;
                    }
                    if (*v5) {
                      LODWORD(v32) = 0;
                    }
                  }
                  break;
                }
LABEL_974:
                *(_DWORD *)(a1 + 252) = v32;
                goto LABEL_920;
              case 402:
                *v11 |= 0x40000000000000uLL;
                unint64_t v193 = *((void *)this + 1);
                unint64_t v194 = *((void *)this + 2);
                uint64_t v195 = *(void *)this;
                if (v193 <= 0xFFFFFFFFFFFFFFF5 && v193 + 10 <= v194)
                {
                  char v196 = 0;
                  unsigned int v197 = 0;
                  uint64_t v198 = 0;
                  do
                  {
                    unint64_t v199 = v193 + 1;
                    *uint64_t v3 = v193 + 1;
                    char v200 = *(unsigned char *)(v195 + v193);
                    v198 |= (unint64_t)(v200 & 0x7F) << v196;
                    if ((v200 & 0x80) == 0) {
                      goto LABEL_1007;
                    }
                    v196 += 7;
                    unint64_t v193 = v199;
                    BOOL v18 = v197++ > 8;
                  }
                  while (!v18);
LABEL_646:
                  LODWORD(v198) = 0;
                  goto LABEL_1007;
                }
                char v632 = 0;
                unsigned int v633 = 0;
                uint64_t v198 = 0;
                if (v194 <= v193) {
                  unint64_t v194 = *((void *)this + 1);
                }
                while (2)
                {
                  if (v194 == v193)
                  {
                    LODWORD(v198) = 0;
                    *uint64_t v5 = 1;
                  }
                  else
                  {
                    unint64_t v634 = v193 + 1;
                    char v635 = *(unsigned char *)(v195 + v193);
                    *uint64_t v3 = v634;
                    v198 |= (unint64_t)(v635 & 0x7F) << v632;
                    if (v635 < 0)
                    {
                      v632 += 7;
                      unint64_t v193 = v634;
                      BOOL v18 = v633++ > 8;
                      if (v18) {
                        goto LABEL_646;
                      }
                      continue;
                    }
                    if (*v5) {
                      LODWORD(v198) = 0;
                    }
                  }
                  break;
                }
LABEL_1007:
                *(_DWORD *)(a1 + 256) = v198;
                goto LABEL_920;
              case 403:
                *v11 |= 0x4000000uLL;
                unint64_t v201 = *((void *)this + 1);
                unint64_t v202 = *((void *)this + 2);
                uint64_t v203 = *(void *)this;
                if (v201 <= 0xFFFFFFFFFFFFFFF5 && v201 + 10 <= v202)
                {
                  char v204 = 0;
                  unsigned int v205 = 0;
                  uint64_t v206 = 0;
                  do
                  {
                    unint64_t v207 = v201 + 1;
                    *uint64_t v3 = v201 + 1;
                    char v208 = *(unsigned char *)(v203 + v201);
                    v206 |= (unint64_t)(v208 & 0x7F) << v204;
                    if ((v208 & 0x80) == 0) {
                      goto LABEL_1010;
                    }
                    v204 += 7;
                    unint64_t v201 = v207;
                    BOOL v18 = v205++ > 8;
                  }
                  while (!v18);
LABEL_653:
                  LODWORD(v206) = 0;
                  goto LABEL_1010;
                }
                char v636 = 0;
                unsigned int v637 = 0;
                uint64_t v206 = 0;
                if (v202 <= v201) {
                  unint64_t v202 = *((void *)this + 1);
                }
                while (2)
                {
                  if (v202 == v201)
                  {
                    LODWORD(v206) = 0;
                    *uint64_t v5 = 1;
                  }
                  else
                  {
                    unint64_t v638 = v201 + 1;
                    char v639 = *(unsigned char *)(v203 + v201);
                    *uint64_t v3 = v638;
                    v206 |= (unint64_t)(v639 & 0x7F) << v636;
                    if (v639 < 0)
                    {
                      v636 += 7;
                      unint64_t v201 = v638;
                      BOOL v18 = v637++ > 8;
                      if (v18) {
                        goto LABEL_653;
                      }
                      continue;
                    }
                    if (*v5) {
                      LODWORD(v206) = 0;
                    }
                  }
                  break;
                }
LABEL_1010:
                *(_DWORD *)(a1 + 144) = v206;
                goto LABEL_920;
              case 404:
                *v11 |= 0x8000000uLL;
                unint64_t v209 = *((void *)this + 1);
                unint64_t v210 = *((void *)this + 2);
                uint64_t v211 = *(void *)this;
                if (v209 <= 0xFFFFFFFFFFFFFFF5 && v209 + 10 <= v210)
                {
                  char v212 = 0;
                  unsigned int v213 = 0;
                  uint64_t v214 = 0;
                  do
                  {
                    unint64_t v215 = v209 + 1;
                    *uint64_t v3 = v209 + 1;
                    char v216 = *(unsigned char *)(v211 + v209);
                    v214 |= (unint64_t)(v216 & 0x7F) << v212;
                    if ((v216 & 0x80) == 0) {
                      goto LABEL_1013;
                    }
                    v212 += 7;
                    unint64_t v209 = v215;
                    BOOL v18 = v213++ > 8;
                  }
                  while (!v18);
LABEL_660:
                  LODWORD(v214) = 0;
                  goto LABEL_1013;
                }
                char v640 = 0;
                unsigned int v641 = 0;
                uint64_t v214 = 0;
                if (v210 <= v209) {
                  unint64_t v210 = *((void *)this + 1);
                }
                while (2)
                {
                  if (v210 == v209)
                  {
                    LODWORD(v214) = 0;
                    *uint64_t v5 = 1;
                  }
                  else
                  {
                    unint64_t v642 = v209 + 1;
                    char v643 = *(unsigned char *)(v211 + v209);
                    *uint64_t v3 = v642;
                    v214 |= (unint64_t)(v643 & 0x7F) << v640;
                    if (v643 < 0)
                    {
                      v640 += 7;
                      unint64_t v209 = v642;
                      BOOL v18 = v641++ > 8;
                      if (v18) {
                        goto LABEL_660;
                      }
                      continue;
                    }
                    if (*v5) {
                      LODWORD(v214) = 0;
                    }
                  }
                  break;
                }
LABEL_1013:
                *(_DWORD *)(a1 + 148) = v214;
                goto LABEL_920;
              case 405:
                v11[1] |= 0x20000uLL;
                unint64_t v217 = *((void *)this + 1);
                if (v217 >= *((void *)this + 2))
                {
                  BOOL v220 = 0;
                  *uint64_t v5 = 1;
                }
                else
                {
                  unint64_t v218 = v217 + 1;
                  int v219 = *(unsigned __int8 *)(*(void *)this + v217);
                  *((void *)this + 1) = v218;
                  BOOL v220 = v219 != 0;
                }
                *(unsigned char *)(a1 + 328) = v220;
                goto LABEL_920;
              case 406:
                v11[1] |= 0x4000uLL;
                unint64_t v221 = *((void *)this + 1);
                if (v221 >= *((void *)this + 2))
                {
                  BOOL v224 = 0;
                  *uint64_t v5 = 1;
                }
                else
                {
                  unint64_t v222 = v221 + 1;
                  int v223 = *(unsigned __int8 *)(*(void *)this + v221);
                  *((void *)this + 1) = v222;
                  BOOL v224 = v223 != 0;
                }
                *(unsigned char *)(a1 + 325) = v224;
                goto LABEL_920;
              case 407:
                *v11 |= 0x2000000000uLL;
                unint64_t v225 = *((void *)this + 1);
                unint64_t v226 = *((void *)this + 2);
                uint64_t v227 = *(void *)this;
                if (v225 <= 0xFFFFFFFFFFFFFFF5 && v225 + 10 <= v226)
                {
                  char v228 = 0;
                  unsigned int v229 = 0;
                  uint64_t v230 = 0;
                  do
                  {
                    unint64_t v231 = v225 + 1;
                    *uint64_t v3 = v225 + 1;
                    char v232 = *(unsigned char *)(v227 + v225);
                    v230 |= (unint64_t)(v232 & 0x7F) << v228;
                    if ((v232 & 0x80) == 0) {
                      goto LABEL_1016;
                    }
                    v228 += 7;
                    unint64_t v225 = v231;
                    BOOL v18 = v229++ > 8;
                  }
                  while (!v18);
LABEL_671:
                  LODWORD(v230) = 0;
                  goto LABEL_1016;
                }
                char v644 = 0;
                unsigned int v645 = 0;
                uint64_t v230 = 0;
                if (v226 <= v225) {
                  unint64_t v226 = *((void *)this + 1);
                }
                while (2)
                {
                  if (v226 == v225)
                  {
                    LODWORD(v230) = 0;
                    *uint64_t v5 = 1;
                  }
                  else
                  {
                    unint64_t v646 = v225 + 1;
                    char v647 = *(unsigned char *)(v227 + v225);
                    *uint64_t v3 = v646;
                    v230 |= (unint64_t)(v647 & 0x7F) << v644;
                    if (v647 < 0)
                    {
                      v644 += 7;
                      unint64_t v225 = v646;
                      BOOL v18 = v645++ > 8;
                      if (v18) {
                        goto LABEL_671;
                      }
                      continue;
                    }
                    if (*v5) {
                      LODWORD(v230) = 0;
                    }
                  }
                  break;
                }
LABEL_1016:
                *(_DWORD *)(a1 + 188) = v230;
                goto LABEL_920;
              case 408:
                *v11 |= 0x80000uLL;
                unint64_t v233 = *((void *)this + 1);
                unint64_t v234 = *((void *)this + 2);
                uint64_t v235 = *(void *)this;
                if (v233 <= 0xFFFFFFFFFFFFFFF5 && v233 + 10 <= v234)
                {
                  char v236 = 0;
                  unsigned int v237 = 0;
                  uint64_t v238 = 0;
                  do
                  {
                    unint64_t v239 = v233 + 1;
                    *uint64_t v3 = v233 + 1;
                    char v240 = *(unsigned char *)(v235 + v233);
                    v238 |= (unint64_t)(v240 & 0x7F) << v236;
                    if ((v240 & 0x80) == 0) {
                      goto LABEL_1019;
                    }
                    v236 += 7;
                    unint64_t v233 = v239;
                    BOOL v18 = v237++ > 8;
                  }
                  while (!v18);
LABEL_678:
                  LODWORD(v238) = 0;
                  goto LABEL_1019;
                }
                char v648 = 0;
                unsigned int v649 = 0;
                uint64_t v238 = 0;
                if (v234 <= v233) {
                  unint64_t v234 = *((void *)this + 1);
                }
                while (2)
                {
                  if (v234 == v233)
                  {
                    LODWORD(v238) = 0;
                    *uint64_t v5 = 1;
                  }
                  else
                  {
                    unint64_t v650 = v233 + 1;
                    char v651 = *(unsigned char *)(v235 + v233);
                    *uint64_t v3 = v650;
                    v238 |= (unint64_t)(v651 & 0x7F) << v648;
                    if (v651 < 0)
                    {
                      v648 += 7;
                      unint64_t v233 = v650;
                      BOOL v18 = v649++ > 8;
                      if (v18) {
                        goto LABEL_678;
                      }
                      continue;
                    }
                    if (*v5) {
                      LODWORD(v238) = 0;
                    }
                  }
                  break;
                }
LABEL_1019:
                *(_DWORD *)(a1 + 116) = v238;
                goto LABEL_920;
              case 409:
                *v11 |= 0x1000000000uLL;
                unint64_t v241 = *((void *)this + 1);
                unint64_t v242 = *((void *)this + 2);
                uint64_t v243 = *(void *)this;
                if (v241 <= 0xFFFFFFFFFFFFFFF5 && v241 + 10 <= v242)
                {
                  char v244 = 0;
                  unsigned int v245 = 0;
                  uint64_t v246 = 0;
                  do
                  {
                    unint64_t v247 = v241 + 1;
                    *uint64_t v3 = v241 + 1;
                    char v248 = *(unsigned char *)(v243 + v241);
                    v246 |= (unint64_t)(v248 & 0x7F) << v244;
                    if ((v248 & 0x80) == 0) {
                      goto LABEL_1022;
                    }
                    v244 += 7;
                    unint64_t v241 = v247;
                    BOOL v18 = v245++ > 8;
                  }
                  while (!v18);
LABEL_685:
                  LODWORD(v246) = 0;
                  goto LABEL_1022;
                }
                char v652 = 0;
                unsigned int v653 = 0;
                uint64_t v246 = 0;
                if (v242 <= v241) {
                  unint64_t v242 = *((void *)this + 1);
                }
                while (2)
                {
                  if (v242 == v241)
                  {
                    LODWORD(v246) = 0;
                    *uint64_t v5 = 1;
                  }
                  else
                  {
                    unint64_t v654 = v241 + 1;
                    char v655 = *(unsigned char *)(v243 + v241);
                    *uint64_t v3 = v654;
                    v246 |= (unint64_t)(v655 & 0x7F) << v652;
                    if (v655 < 0)
                    {
                      v652 += 7;
                      unint64_t v241 = v654;
                      BOOL v18 = v653++ > 8;
                      if (v18) {
                        goto LABEL_685;
                      }
                      continue;
                    }
                    if (*v5) {
                      LODWORD(v246) = 0;
                    }
                  }
                  break;
                }
LABEL_1022:
                *(_DWORD *)(a1 + 184) = v246;
                goto LABEL_920;
              default:
                switch((int)v24)
                {
                  case 501:
                    *v11 |= 0x4000000000000000uLL;
                    unint64_t v60 = *v3;
                    if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v60 + 4 > *((void *)this + 2)) {
                      goto LABEL_512;
                    }
                    *(_DWORD *)(a1 + 288) = *(_DWORD *)(*(void *)this + v60);
                    goto LABEL_919;
                  case 502:
                    *v11 |= 0x8000000000000000;
                    unint64_t v429 = *v3;
                    if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v429 + 4 > *((void *)this + 2)) {
                      goto LABEL_512;
                    }
                    *(_DWORD *)(a1 + 292) = *(_DWORD *)(*(void *)this + v429);
                    goto LABEL_919;
                  case 503:
                    *v11 |= 0x200000000000000uLL;
                    unint64_t v430 = *v3;
                    if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v430 + 4 > *((void *)this + 2)) {
                      goto LABEL_512;
                    }
                    *(_DWORD *)(a1 + 268) = *(_DWORD *)(*(void *)this + v430);
                    goto LABEL_919;
                  case 504:
                    *v11 |= 0x800000000000000uLL;
                    unint64_t v431 = *((void *)this + 1);
                    unint64_t v432 = *((void *)this + 2);
                    uint64_t v433 = *(void *)this;
                    if (v431 <= 0xFFFFFFFFFFFFFFF5 && v431 + 10 <= v432)
                    {
                      char v434 = 0;
                      unsigned int v435 = 0;
                      uint64_t v436 = 0;
                      do
                      {
                        unint64_t v437 = v431 + 1;
                        *uint64_t v3 = v431 + 1;
                        char v438 = *(unsigned char *)(v433 + v431);
                        v436 |= (unint64_t)(v438 & 0x7F) << v434;
                        if ((v438 & 0x80) == 0) {
                          goto LABEL_1046;
                        }
                        v434 += 7;
                        unint64_t v431 = v437;
                        BOOL v18 = v435++ > 8;
                      }
                      while (!v18);
LABEL_801:
                      LODWORD(v436) = 0;
                      goto LABEL_1046;
                    }
                    char v684 = 0;
                    unsigned int v685 = 0;
                    uint64_t v436 = 0;
                    if (v432 <= v431) {
                      unint64_t v432 = *((void *)this + 1);
                    }
                    while (2)
                    {
                      if (v432 == v431)
                      {
                        LODWORD(v436) = 0;
                        *uint64_t v5 = 1;
                      }
                      else
                      {
                        unint64_t v686 = v431 + 1;
                        char v687 = *(unsigned char *)(v433 + v431);
                        *uint64_t v3 = v686;
                        v436 |= (unint64_t)(v687 & 0x7F) << v684;
                        if (v687 < 0)
                        {
                          v684 += 7;
                          unint64_t v431 = v686;
                          BOOL v18 = v685++ > 8;
                          if (v18) {
                            goto LABEL_801;
                          }
                          continue;
                        }
                        if (*v5) {
                          LODWORD(v436) = 0;
                        }
                      }
                      break;
                    }
LABEL_1046:
                    *(_DWORD *)(a1 + 276) = v436;
                    goto LABEL_920;
                  case 505:
                    *v11 |= 0x2000000000000000uLL;
                    unint64_t v439 = *((void *)this + 1);
                    unint64_t v440 = *((void *)this + 2);
                    uint64_t v441 = *(void *)this;
                    if (v439 <= 0xFFFFFFFFFFFFFFF5 && v439 + 10 <= v440)
                    {
                      char v442 = 0;
                      unsigned int v443 = 0;
                      uint64_t v444 = 0;
                      do
                      {
                        unint64_t v445 = v439 + 1;
                        *uint64_t v3 = v439 + 1;
                        char v446 = *(unsigned char *)(v441 + v439);
                        v444 |= (unint64_t)(v446 & 0x7F) << v442;
                        if ((v446 & 0x80) == 0) {
                          goto LABEL_1049;
                        }
                        v442 += 7;
                        unint64_t v439 = v445;
                        BOOL v18 = v443++ > 8;
                      }
                      while (!v18);
LABEL_808:
                      LODWORD(v444) = 0;
                      goto LABEL_1049;
                    }
                    char v688 = 0;
                    unsigned int v689 = 0;
                    uint64_t v444 = 0;
                    if (v440 <= v439) {
                      unint64_t v440 = *((void *)this + 1);
                    }
                    break;
                  default:
                    goto LABEL_140;
                }
                break;
            }
            while (1)
            {
              if (v440 == v439)
              {
                LODWORD(v444) = 0;
                *uint64_t v5 = 1;
                goto LABEL_1049;
              }
              unint64_t v690 = v439 + 1;
              char v691 = *(unsigned char *)(v441 + v439);
              *uint64_t v3 = v690;
              v444 |= (unint64_t)(v691 & 0x7F) << v688;
              if ((v691 & 0x80) == 0) {
                break;
              }
              v688 += 7;
              unint64_t v439 = v690;
              BOOL v18 = v689++ > 8;
              if (v18) {
                goto LABEL_808;
              }
            }
            if (*v5) {
              LODWORD(v444) = 0;
            }
LABEL_1049:
            *(_DWORD *)(a1 + 284) = v444;
          }
        }
        else if ((int)v24 <= 1200)
        {
          if ((int)v24 <= 1100)
          {
            switch(v24)
            {
              case 0x385:
                *v11 |= 0x100uLL;
                unint64_t v114 = *v3;
                if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v114 + 4 > *((void *)this + 2))
                {
LABEL_512:
                  *uint64_t v5 = 1;
                }
                else
                {
                  *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v114);
LABEL_919:
                  *((void *)this + 1) += 4;
                }
                break;
              case 0x386:
                v11[1] |= 0x200000uLL;
                unint64_t v115 = *((void *)this + 1);
                if (v115 >= *((void *)this + 2))
                {
                  BOOL v118 = 0;
                  *uint64_t v5 = 1;
                }
                else
                {
                  unint64_t v116 = v115 + 1;
                  int v117 = *(unsigned __int8 *)(*(void *)this + v115);
                  *((void *)this + 1) = v116;
                  BOOL v118 = v117 != 0;
                }
                *(unsigned char *)(a1 + 332) = v118;
                break;
              case 0x3E9:
                v11[1] |= 4uLL;
                unint64_t v61 = *((void *)this + 1);
                unint64_t v62 = *((void *)this + 2);
                uint64_t v63 = *(void *)this;
                if (v61 > 0xFFFFFFFFFFFFFFF5 || v61 + 10 > v62)
                {
                  char v572 = 0;
                  unsigned int v573 = 0;
                  uint64_t v66 = 0;
                  if (v62 <= v61) {
                    unint64_t v62 = *((void *)this + 1);
                  }
                  while (1)
                  {
                    if (v62 == v61)
                    {
                      LODWORD(v66) = 0;
                      *uint64_t v5 = 1;
                      goto LABEL_935;
                    }
                    unint64_t v574 = v61 + 1;
                    char v575 = *(unsigned char *)(v63 + v61);
                    *uint64_t v3 = v574;
                    v66 |= (unint64_t)(v575 & 0x7F) << v572;
                    if ((v575 & 0x80) == 0) {
                      break;
                    }
                    v572 += 7;
                    unint64_t v61 = v574;
                    BOOL v18 = v573++ > 8;
                    if (v18)
                    {
LABEL_533:
                      LODWORD(v66) = 0;
                      goto LABEL_935;
                    }
                  }
                  if (*v5) {
                    LODWORD(v66) = 0;
                  }
                }
                else
                {
                  char v64 = 0;
                  unsigned int v65 = 0;
                  uint64_t v66 = 0;
                  while (1)
                  {
                    unint64_t v67 = v61 + 1;
                    *uint64_t v3 = v61 + 1;
                    char v68 = *(unsigned char *)(v63 + v61);
                    v66 |= (unint64_t)(v68 & 0x7F) << v64;
                    if ((v68 & 0x80) == 0) {
                      break;
                    }
                    v64 += 7;
                    unint64_t v61 = v67;
                    BOOL v18 = v65++ > 8;
                    if (v18) {
                      goto LABEL_533;
                    }
                  }
                }
LABEL_935:
                *(_DWORD *)(a1 + 304) = v66;
                break;
              default:
LABEL_140:
                uint64_t result = PB::Reader::skip(this);
                if (!result) {
                  return result;
                }
                break;
            }
          }
          else
          {
            switch((int)v24)
            {
              case 1101:
                *v11 |= 0x10000000uLL;
                unint64_t v51 = *((void *)this + 1);
                unint64_t v52 = *((void *)this + 2);
                uint64_t v53 = *(void *)this;
                if (v51 <= 0xFFFFFFFFFFFFFFF5 && v51 + 10 <= v52)
                {
                  char v54 = 0;
                  unsigned int v55 = 0;
                  uint64_t v56 = 0;
                  do
                  {
                    unint64_t v57 = v51 + 1;
                    *uint64_t v3 = v51 + 1;
                    char v58 = *(unsigned char *)(v53 + v51);
                    v56 |= (unint64_t)(v58 & 0x7F) << v54;
                    if ((v58 & 0x80) == 0) {
                      goto LABEL_932;
                    }
                    v54 += 7;
                    unint64_t v51 = v57;
                    BOOL v18 = v55++ > 8;
                  }
                  while (!v18);
LABEL_526:
                  LODWORD(v56) = 0;
                  goto LABEL_932;
                }
                char v568 = 0;
                unsigned int v569 = 0;
                uint64_t v56 = 0;
                if (v52 <= v51) {
                  unint64_t v52 = *((void *)this + 1);
                }
                while (2)
                {
                  if (v52 == v51)
                  {
                    LODWORD(v56) = 0;
                    *uint64_t v5 = 1;
                  }
                  else
                  {
                    unint64_t v570 = v51 + 1;
                    char v571 = *(unsigned char *)(v53 + v51);
                    *uint64_t v3 = v570;
                    v56 |= (unint64_t)(v571 & 0x7F) << v568;
                    if (v571 < 0)
                    {
                      v568 += 7;
                      unint64_t v51 = v570;
                      BOOL v18 = v569++ > 8;
                      if (v18) {
                        goto LABEL_526;
                      }
                      continue;
                    }
                    if (*v5) {
                      LODWORD(v56) = 0;
                    }
                  }
                  break;
                }
LABEL_932:
                *(_DWORD *)(a1 + 152) = v56;
                goto LABEL_920;
              case 1102:
                *v11 |= 0x40000000uLL;
                unint64_t v85 = *((void *)this + 1);
                unint64_t v86 = *((void *)this + 2);
                uint64_t v87 = *(void *)this;
                if (v85 <= 0xFFFFFFFFFFFFFFF5 && v85 + 10 <= v86)
                {
                  char v88 = 0;
                  unsigned int v89 = 0;
                  uint64_t v90 = 0;
                  do
                  {
                    unint64_t v91 = v85 + 1;
                    *uint64_t v3 = v85 + 1;
                    char v92 = *(unsigned char *)(v87 + v85);
                    v90 |= (unint64_t)(v92 & 0x7F) << v88;
                    if ((v92 & 0x80) == 0) {
                      goto LABEL_938;
                    }
                    v88 += 7;
                    unint64_t v85 = v91;
                    BOOL v18 = v89++ > 8;
                  }
                  while (!v18);
LABEL_540:
                  LODWORD(v90) = 0;
                  goto LABEL_938;
                }
                char v576 = 0;
                unsigned int v577 = 0;
                uint64_t v90 = 0;
                if (v86 <= v85) {
                  unint64_t v86 = *((void *)this + 1);
                }
                while (2)
                {
                  if (v86 == v85)
                  {
                    LODWORD(v90) = 0;
                    *uint64_t v5 = 1;
                  }
                  else
                  {
                    unint64_t v578 = v85 + 1;
                    char v579 = *(unsigned char *)(v87 + v85);
                    *uint64_t v3 = v578;
                    v90 |= (unint64_t)(v579 & 0x7F) << v576;
                    if (v579 < 0)
                    {
                      v576 += 7;
                      unint64_t v85 = v578;
                      BOOL v18 = v577++ > 8;
                      if (v18) {
                        goto LABEL_540;
                      }
                      continue;
                    }
                    if (*v5) {
                      LODWORD(v90) = 0;
                    }
                  }
                  break;
                }
LABEL_938:
                *(_DWORD *)(a1 + 160) = v90;
                goto LABEL_920;
              case 1103:
                v11[1] |= 0x1000000000uLL;
                unint64_t v93 = *((void *)this + 1);
                if (v93 >= *((void *)this + 2))
                {
                  BOOL v96 = 0;
                  *uint64_t v5 = 1;
                }
                else
                {
                  unint64_t v94 = v93 + 1;
                  int v95 = *(unsigned __int8 *)(*(void *)this + v93);
                  *((void *)this + 1) = v94;
                  BOOL v96 = v95 != 0;
                }
                *(unsigned char *)(a1 + 347) = v96;
                goto LABEL_920;
              case 1104:
                *v11 |= 0x80000000uLL;
                unint64_t v97 = *((void *)this + 1);
                unint64_t v98 = *((void *)this + 2);
                uint64_t v99 = *(void *)this;
                if (v97 <= 0xFFFFFFFFFFFFFFF5 && v97 + 10 <= v98)
                {
                  char v100 = 0;
                  unsigned int v101 = 0;
                  uint64_t v102 = 0;
                  do
                  {
                    unint64_t v103 = v97 + 1;
                    *uint64_t v3 = v97 + 1;
                    char v104 = *(unsigned char *)(v99 + v97);
                    v102 |= (unint64_t)(v104 & 0x7F) << v100;
                    if ((v104 & 0x80) == 0) {
                      goto LABEL_941;
                    }
                    v100 += 7;
                    unint64_t v97 = v103;
                    BOOL v18 = v101++ > 8;
                  }
                  while (!v18);
LABEL_549:
                  LODWORD(v102) = 0;
                  goto LABEL_941;
                }
                char v580 = 0;
                unsigned int v581 = 0;
                uint64_t v102 = 0;
                if (v98 <= v97) {
                  unint64_t v98 = *((void *)this + 1);
                }
                while (2)
                {
                  if (v98 == v97)
                  {
                    LODWORD(v102) = 0;
                    *uint64_t v5 = 1;
                  }
                  else
                  {
                    unint64_t v582 = v97 + 1;
                    char v583 = *(unsigned char *)(v99 + v97);
                    *uint64_t v3 = v582;
                    v102 |= (unint64_t)(v583 & 0x7F) << v580;
                    if (v583 < 0)
                    {
                      v580 += 7;
                      unint64_t v97 = v582;
                      BOOL v18 = v581++ > 8;
                      if (v18) {
                        goto LABEL_549;
                      }
                      continue;
                    }
                    if (*v5) {
                      LODWORD(v102) = 0;
                    }
                  }
                  break;
                }
LABEL_941:
                *(_DWORD *)(a1 + 164) = v102;
                goto LABEL_920;
              case 1105:
                *v11 |= 0x20000000uLL;
                unint64_t v105 = *((void *)this + 1);
                unint64_t v106 = *((void *)this + 2);
                uint64_t v107 = *(void *)this;
                if (v105 <= 0xFFFFFFFFFFFFFFF5 && v105 + 10 <= v106)
                {
                  char v108 = 0;
                  unsigned int v109 = 0;
                  uint64_t v110 = 0;
                  do
                  {
                    unint64_t v111 = v105 + 1;
                    *uint64_t v3 = v105 + 1;
                    char v112 = *(unsigned char *)(v107 + v105);
                    v110 |= (unint64_t)(v112 & 0x7F) << v108;
                    if ((v112 & 0x80) == 0) {
                      goto LABEL_944;
                    }
                    v108 += 7;
                    unint64_t v105 = v111;
                    BOOL v18 = v109++ > 8;
                  }
                  while (!v18);
LABEL_556:
                  LODWORD(v110) = 0;
                  goto LABEL_944;
                }
                char v584 = 0;
                unsigned int v585 = 0;
                uint64_t v110 = 0;
                if (v106 <= v105) {
                  unint64_t v106 = *((void *)this + 1);
                }
                break;
              case 1106:
                *v11 |= 0x8000000000000uLL;
                unint64_t v113 = *v3;
                if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v113 + 4 > *((void *)this + 2)) {
                  goto LABEL_512;
                }
                *(_DWORD *)(a1 + 244) = *(_DWORD *)(*(void *)this + v113);
                goto LABEL_919;
              default:
                goto LABEL_140;
            }
            while (1)
            {
              if (v106 == v105)
              {
                LODWORD(v110) = 0;
                *uint64_t v5 = 1;
                goto LABEL_944;
              }
              unint64_t v586 = v105 + 1;
              char v587 = *(unsigned char *)(v107 + v105);
              *uint64_t v3 = v586;
              v110 |= (unint64_t)(v587 & 0x7F) << v584;
              if ((v587 & 0x80) == 0) {
                break;
              }
              v584 += 7;
              unint64_t v105 = v586;
              BOOL v18 = v585++ > 8;
              if (v18) {
                goto LABEL_556;
              }
            }
            if (*v5) {
              LODWORD(v110) = 0;
            }
LABEL_944:
            *(_DWORD *)(a1 + 156) = v110;
          }
        }
        else
        {
          switch((int)v24)
          {
            case 1301:
              *v11 |= 0x8000uLL;
              unint64_t v26 = *v3;
              if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v26 + 4 > *((void *)this + 2)) {
                goto LABEL_512;
              }
              *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v26);
              goto LABEL_919;
            case 1302:
              *v11 |= 0x40000000000uLL;
              unint64_t v455 = *((void *)this + 1);
              unint64_t v456 = *((void *)this + 2);
              uint64_t v457 = *(void *)this;
              if (v455 <= 0xFFFFFFFFFFFFFFF5 && v455 + 10 <= v456)
              {
                char v458 = 0;
                unsigned int v459 = 0;
                uint64_t v460 = 0;
                do
                {
                  unint64_t v461 = v455 + 1;
                  *uint64_t v3 = v455 + 1;
                  char v462 = *(unsigned char *)(v457 + v455);
                  v460 |= (unint64_t)(v462 & 0x7F) << v458;
                  if ((v462 & 0x80) == 0) {
                    goto LABEL_1060;
                  }
                  v458 += 7;
                  unint64_t v455 = v461;
                  BOOL v18 = v459++ > 8;
                }
                while (!v18);
LABEL_829:
                LODWORD(v460) = 0;
                goto LABEL_1060;
              }
              char v700 = 0;
              unsigned int v701 = 0;
              uint64_t v460 = 0;
              if (v456 <= v455) {
                unint64_t v456 = *((void *)this + 1);
              }
              while (2)
              {
                if (v456 == v455)
                {
                  LODWORD(v460) = 0;
                  *uint64_t v5 = 1;
                }
                else
                {
                  unint64_t v702 = v455 + 1;
                  char v703 = *(unsigned char *)(v457 + v455);
                  *uint64_t v3 = v702;
                  v460 |= (unint64_t)(v703 & 0x7F) << v700;
                  if (v703 < 0)
                  {
                    v700 += 7;
                    unint64_t v455 = v702;
                    BOOL v18 = v701++ > 8;
                    if (v18) {
                      goto LABEL_829;
                    }
                    continue;
                  }
                  if (*v5) {
                    LODWORD(v460) = 0;
                  }
                }
                break;
              }
LABEL_1060:
              *(_DWORD *)(a1 + 208) = v460;
              break;
            case 1303:
              *v11 |= 0x10000000000uLL;
              unint64_t v463 = *((void *)this + 1);
              unint64_t v464 = *((void *)this + 2);
              uint64_t v465 = *(void *)this;
              if (v463 <= 0xFFFFFFFFFFFFFFF5 && v463 + 10 <= v464)
              {
                char v466 = 0;
                unsigned int v467 = 0;
                uint64_t v468 = 0;
                do
                {
                  unint64_t v469 = v463 + 1;
                  *uint64_t v3 = v463 + 1;
                  char v470 = *(unsigned char *)(v465 + v463);
                  v468 |= (unint64_t)(v470 & 0x7F) << v466;
                  if ((v470 & 0x80) == 0) {
                    goto LABEL_1064;
                  }
                  v466 += 7;
                  unint64_t v463 = v469;
                  BOOL v18 = v467++ > 8;
                }
                while (!v18);
LABEL_836:
                LODWORD(v468) = 0;
                goto LABEL_1064;
              }
              char v704 = 0;
              unsigned int v705 = 0;
              uint64_t v468 = 0;
              if (v464 <= v463) {
                unint64_t v464 = *((void *)this + 1);
              }
              while (2)
              {
                if (v464 == v463)
                {
                  LODWORD(v468) = 0;
                  *uint64_t v5 = 1;
                }
                else
                {
                  unint64_t v706 = v463 + 1;
                  char v707 = *(unsigned char *)(v465 + v463);
                  *uint64_t v3 = v706;
                  v468 |= (unint64_t)(v707 & 0x7F) << v704;
                  if (v707 < 0)
                  {
                    v704 += 7;
                    unint64_t v463 = v706;
                    BOOL v18 = v705++ > 8;
                    if (v18) {
                      goto LABEL_836;
                    }
                    continue;
                  }
                  if (*v5) {
                    LODWORD(v468) = 0;
                  }
                }
                break;
              }
LABEL_1064:
              *(_DWORD *)(a1 + 200) = v468;
              break;
            case 1304:
              *v11 |= 0x800000000uLL;
              unint64_t v471 = *((void *)this + 1);
              unint64_t v472 = *((void *)this + 2);
              uint64_t v473 = *(void *)this;
              if (v471 <= 0xFFFFFFFFFFFFFFF5 && v471 + 10 <= v472)
              {
                char v474 = 0;
                unsigned int v475 = 0;
                uint64_t v476 = 0;
                do
                {
                  unint64_t v477 = v471 + 1;
                  *uint64_t v3 = v471 + 1;
                  char v478 = *(unsigned char *)(v473 + v471);
                  v476 |= (unint64_t)(v478 & 0x7F) << v474;
                  if ((v478 & 0x80) == 0) {
                    goto LABEL_1068;
                  }
                  v474 += 7;
                  unint64_t v471 = v477;
                  BOOL v18 = v475++ > 8;
                }
                while (!v18);
LABEL_843:
                LODWORD(v476) = 0;
                goto LABEL_1068;
              }
              char v708 = 0;
              unsigned int v709 = 0;
              uint64_t v476 = 0;
              if (v472 <= v471) {
                unint64_t v472 = *((void *)this + 1);
              }
              while (2)
              {
                if (v472 == v471)
                {
                  LODWORD(v476) = 0;
                  *uint64_t v5 = 1;
                }
                else
                {
                  unint64_t v710 = v471 + 1;
                  char v711 = *(unsigned char *)(v473 + v471);
                  *uint64_t v3 = v710;
                  v476 |= (unint64_t)(v711 & 0x7F) << v708;
                  if (v711 < 0)
                  {
                    v708 += 7;
                    unint64_t v471 = v710;
                    BOOL v18 = v709++ > 8;
                    if (v18) {
                      goto LABEL_843;
                    }
                    continue;
                  }
                  if (*v5) {
                    LODWORD(v476) = 0;
                  }
                }
                break;
              }
LABEL_1068:
              *(_DWORD *)(a1 + 180) = v476;
              break;
            case 1305:
              *v11 |= 0x100000000uLL;
              unint64_t v479 = *((void *)this + 1);
              unint64_t v480 = *((void *)this + 2);
              uint64_t v481 = *(void *)this;
              if (v479 <= 0xFFFFFFFFFFFFFFF5 && v479 + 10 <= v480)
              {
                char v482 = 0;
                unsigned int v483 = 0;
                uint64_t v484 = 0;
                do
                {
                  unint64_t v485 = v479 + 1;
                  *uint64_t v3 = v479 + 1;
                  char v486 = *(unsigned char *)(v481 + v479);
                  v484 |= (unint64_t)(v486 & 0x7F) << v482;
                  if ((v486 & 0x80) == 0) {
                    goto LABEL_1072;
                  }
                  v482 += 7;
                  unint64_t v479 = v485;
                  BOOL v18 = v483++ > 8;
                }
                while (!v18);
LABEL_850:
                LODWORD(v484) = 0;
                goto LABEL_1072;
              }
              char v712 = 0;
              unsigned int v713 = 0;
              uint64_t v484 = 0;
              if (v480 <= v479) {
                unint64_t v480 = *((void *)this + 1);
              }
              while (2)
              {
                if (v480 == v479)
                {
                  LODWORD(v484) = 0;
                  *uint64_t v5 = 1;
                }
                else
                {
                  unint64_t v714 = v479 + 1;
                  char v715 = *(unsigned char *)(v481 + v479);
                  *uint64_t v3 = v714;
                  v484 |= (unint64_t)(v715 & 0x7F) << v712;
                  if (v715 < 0)
                  {
                    v712 += 7;
                    unint64_t v479 = v714;
                    BOOL v18 = v713++ > 8;
                    if (v18) {
                      goto LABEL_850;
                    }
                    continue;
                  }
                  if (*v5) {
                    LODWORD(v484) = 0;
                  }
                }
                break;
              }
LABEL_1072:
              *(_DWORD *)(a1 + 168) = v484;
              break;
            case 1306:
              *v11 |= 0x400000000uLL;
              unint64_t v487 = *((void *)this + 1);
              unint64_t v488 = *((void *)this + 2);
              uint64_t v489 = *(void *)this;
              if (v487 <= 0xFFFFFFFFFFFFFFF5 && v487 + 10 <= v488)
              {
                char v490 = 0;
                unsigned int v491 = 0;
                uint64_t v492 = 0;
                do
                {
                  unint64_t v493 = v487 + 1;
                  *uint64_t v3 = v487 + 1;
                  char v494 = *(unsigned char *)(v489 + v487);
                  v492 |= (unint64_t)(v494 & 0x7F) << v490;
                  if ((v494 & 0x80) == 0) {
                    goto LABEL_1076;
                  }
                  v490 += 7;
                  unint64_t v487 = v493;
                  BOOL v18 = v491++ > 8;
                }
                while (!v18);
LABEL_857:
                LODWORD(v492) = 0;
                goto LABEL_1076;
              }
              char v716 = 0;
              unsigned int v717 = 0;
              uint64_t v492 = 0;
              if (v488 <= v487) {
                unint64_t v488 = *((void *)this + 1);
              }
              while (2)
              {
                if (v488 == v487)
                {
                  LODWORD(v492) = 0;
                  *uint64_t v5 = 1;
                }
                else
                {
                  unint64_t v718 = v487 + 1;
                  char v719 = *(unsigned char *)(v489 + v487);
                  *uint64_t v3 = v718;
                  v492 |= (unint64_t)(v719 & 0x7F) << v716;
                  if (v719 < 0)
                  {
                    v716 += 7;
                    unint64_t v487 = v718;
                    BOOL v18 = v717++ > 8;
                    if (v18) {
                      goto LABEL_857;
                    }
                    continue;
                  }
                  if (*v5) {
                    LODWORD(v492) = 0;
                  }
                }
                break;
              }
LABEL_1076:
              *(_DWORD *)(a1 + 176) = v492;
              break;
            case 1307:
              v11[1] |= 0x100uLL;
              unint64_t v495 = *((void *)this + 1);
              if (v495 >= *((void *)this + 2))
              {
                BOOL v498 = 0;
                *uint64_t v5 = 1;
              }
              else
              {
                unint64_t v496 = v495 + 1;
                int v497 = *(unsigned __int8 *)(*(void *)this + v495);
                *((void *)this + 1) = v496;
                BOOL v498 = v497 != 0;
              }
              *(unsigned char *)(a1 + 319) = v498;
              break;
            case 1308:
              v11[1] |= 0x40000uLL;
              unint64_t v499 = *((void *)this + 1);
              if (v499 >= *((void *)this + 2))
              {
                BOOL v502 = 0;
                *uint64_t v5 = 1;
              }
              else
              {
                unint64_t v500 = v499 + 1;
                int v501 = *(unsigned __int8 *)(*(void *)this + v499);
                *((void *)this + 1) = v500;
                BOOL v502 = v501 != 0;
              }
              *(unsigned char *)(a1 + 329) = v502;
              break;
            case 1309:
              *v11 |= 0x200000000uLL;
              unint64_t v503 = *((void *)this + 1);
              unint64_t v504 = *((void *)this + 2);
              uint64_t v505 = *(void *)this;
              if (v503 <= 0xFFFFFFFFFFFFFFF5 && v503 + 10 <= v504)
              {
                char v506 = 0;
                unsigned int v507 = 0;
                uint64_t v508 = 0;
                do
                {
                  unint64_t v509 = v503 + 1;
                  *uint64_t v3 = v503 + 1;
                  char v510 = *(unsigned char *)(v505 + v503);
                  v508 |= (unint64_t)(v510 & 0x7F) << v506;
                  if ((v510 & 0x80) == 0) {
                    goto LABEL_1080;
                  }
                  v506 += 7;
                  unint64_t v503 = v509;
                  BOOL v18 = v507++ > 8;
                }
                while (!v18);
LABEL_868:
                LODWORD(v508) = 0;
                goto LABEL_1080;
              }
              char v720 = 0;
              unsigned int v721 = 0;
              uint64_t v508 = 0;
              if (v504 <= v503) {
                unint64_t v504 = *((void *)this + 1);
              }
              while (2)
              {
                if (v504 == v503)
                {
                  LODWORD(v508) = 0;
                  *uint64_t v5 = 1;
                }
                else
                {
                  unint64_t v722 = v503 + 1;
                  char v723 = *(unsigned char *)(v505 + v503);
                  *uint64_t v3 = v722;
                  v508 |= (unint64_t)(v723 & 0x7F) << v720;
                  if (v723 < 0)
                  {
                    v720 += 7;
                    unint64_t v503 = v722;
                    BOOL v18 = v721++ > 8;
                    if (v18) {
                      goto LABEL_868;
                    }
                    continue;
                  }
                  if (*v5) {
                    LODWORD(v508) = 0;
                  }
                }
                break;
              }
LABEL_1080:
              *(_DWORD *)(a1 + 172) = v508;
              break;
            case 1310:
              *v11 |= 2uLL;
              unint64_t v511 = *((void *)this + 1);
              unint64_t v512 = *((void *)this + 2);
              uint64_t v513 = *(void *)this;
              if (v511 <= 0xFFFFFFFFFFFFFFF5 && v511 + 10 <= v512)
              {
                char v514 = 0;
                unsigned int v515 = 0;
                uint64_t v516 = 0;
                do
                {
                  unint64_t v517 = v511 + 1;
                  *uint64_t v3 = v511 + 1;
                  char v518 = *(unsigned char *)(v513 + v511);
                  v516 |= (unint64_t)(v518 & 0x7F) << v514;
                  if ((v518 & 0x80) == 0) {
                    goto LABEL_1084;
                  }
                  v514 += 7;
                  unint64_t v511 = v517;
                  BOOL v18 = v515++ > 8;
                }
                while (!v18);
LABEL_875:
                uint64_t v516 = 0;
                goto LABEL_1084;
              }
              char v724 = 0;
              unsigned int v725 = 0;
              uint64_t v516 = 0;
              if (v512 <= v511) {
                unint64_t v512 = *((void *)this + 1);
              }
              while (2)
              {
                if (v512 == v511)
                {
                  uint64_t v516 = 0;
                  *uint64_t v5 = 1;
                }
                else
                {
                  unint64_t v726 = v511 + 1;
                  char v727 = *(unsigned char *)(v513 + v511);
                  *uint64_t v3 = v726;
                  v516 |= (unint64_t)(v727 & 0x7F) << v724;
                  if (v727 < 0)
                  {
                    v724 += 7;
                    unint64_t v511 = v726;
                    BOOL v18 = v725++ > 8;
                    if (v18) {
                      goto LABEL_875;
                    }
                    continue;
                  }
                  if (*v5) {
                    uint64_t v516 = 0;
                  }
                }
                break;
              }
LABEL_1084:
              *(void *)(a1 + 16) = v516;
              break;
            case 1311:
              *v11 |= 0x20uLL;
              unint64_t v519 = *((void *)this + 1);
              unint64_t v520 = *((void *)this + 2);
              uint64_t v521 = *(void *)this;
              if (v519 <= 0xFFFFFFFFFFFFFFF5 && v519 + 10 <= v520)
              {
                char v522 = 0;
                unsigned int v523 = 0;
                uint64_t v524 = 0;
                do
                {
                  unint64_t v525 = v519 + 1;
                  *uint64_t v3 = v519 + 1;
                  char v526 = *(unsigned char *)(v521 + v519);
                  v524 |= (unint64_t)(v526 & 0x7F) << v522;
                  if ((v526 & 0x80) == 0) {
                    goto LABEL_1088;
                  }
                  v522 += 7;
                  unint64_t v519 = v525;
                  BOOL v18 = v523++ > 8;
                }
                while (!v18);
LABEL_882:
                uint64_t v524 = 0;
                goto LABEL_1088;
              }
              char v728 = 0;
              unsigned int v729 = 0;
              uint64_t v524 = 0;
              if (v520 <= v519) {
                unint64_t v520 = *((void *)this + 1);
              }
              while (2)
              {
                if (v520 == v519)
                {
                  uint64_t v524 = 0;
                  *uint64_t v5 = 1;
                }
                else
                {
                  unint64_t v730 = v519 + 1;
                  char v731 = *(unsigned char *)(v521 + v519);
                  *uint64_t v3 = v730;
                  v524 |= (unint64_t)(v731 & 0x7F) << v728;
                  if (v731 < 0)
                  {
                    v728 += 7;
                    unint64_t v519 = v730;
                    BOOL v18 = v729++ > 8;
                    if (v18) {
                      goto LABEL_882;
                    }
                    continue;
                  }
                  if (*v5) {
                    uint64_t v524 = 0;
                  }
                }
                break;
              }
LABEL_1088:
              *(void *)(a1 + 48) = v524;
              break;
            case 1312:
              *v11 |= 4uLL;
              unint64_t v527 = *((void *)this + 1);
              unint64_t v528 = *((void *)this + 2);
              uint64_t v529 = *(void *)this;
              if (v527 <= 0xFFFFFFFFFFFFFFF5 && v527 + 10 <= v528)
              {
                char v530 = 0;
                unsigned int v531 = 0;
                uint64_t v532 = 0;
                do
                {
                  unint64_t v533 = v527 + 1;
                  *uint64_t v3 = v527 + 1;
                  char v534 = *(unsigned char *)(v529 + v527);
                  v532 |= (unint64_t)(v534 & 0x7F) << v530;
                  if ((v534 & 0x80) == 0) {
                    goto LABEL_1092;
                  }
                  v530 += 7;
                  unint64_t v527 = v533;
                  BOOL v18 = v531++ > 8;
                }
                while (!v18);
LABEL_889:
                uint64_t v532 = 0;
                goto LABEL_1092;
              }
              char v732 = 0;
              unsigned int v733 = 0;
              uint64_t v532 = 0;
              if (v528 <= v527) {
                unint64_t v528 = *((void *)this + 1);
              }
              while (2)
              {
                if (v528 == v527)
                {
                  uint64_t v532 = 0;
                  *uint64_t v5 = 1;
                }
                else
                {
                  unint64_t v734 = v527 + 1;
                  char v735 = *(unsigned char *)(v529 + v527);
                  *uint64_t v3 = v734;
                  v532 |= (unint64_t)(v735 & 0x7F) << v732;
                  if (v735 < 0)
                  {
                    v732 += 7;
                    unint64_t v527 = v734;
                    BOOL v18 = v733++ > 8;
                    if (v18) {
                      goto LABEL_889;
                    }
                    continue;
                  }
                  if (*v5) {
                    uint64_t v532 = 0;
                  }
                }
                break;
              }
LABEL_1092:
              *(void *)(a1 + 24) = v532;
              break;
            case 1313:
              *v11 |= 8uLL;
              unint64_t v535 = *((void *)this + 1);
              unint64_t v536 = *((void *)this + 2);
              uint64_t v537 = *(void *)this;
              if (v535 <= 0xFFFFFFFFFFFFFFF5 && v535 + 10 <= v536)
              {
                char v538 = 0;
                unsigned int v539 = 0;
                uint64_t v540 = 0;
                do
                {
                  unint64_t v541 = v535 + 1;
                  *uint64_t v3 = v535 + 1;
                  char v542 = *(unsigned char *)(v537 + v535);
                  v540 |= (unint64_t)(v542 & 0x7F) << v538;
                  if ((v542 & 0x80) == 0) {
                    goto LABEL_1096;
                  }
                  v538 += 7;
                  unint64_t v535 = v541;
                  BOOL v18 = v539++ > 8;
                }
                while (!v18);
LABEL_896:
                uint64_t v540 = 0;
                goto LABEL_1096;
              }
              char v736 = 0;
              unsigned int v737 = 0;
              uint64_t v540 = 0;
              if (v536 <= v535) {
                unint64_t v536 = *((void *)this + 1);
              }
              while (2)
              {
                if (v536 == v535)
                {
                  uint64_t v540 = 0;
                  *uint64_t v5 = 1;
                }
                else
                {
                  unint64_t v738 = v535 + 1;
                  char v739 = *(unsigned char *)(v537 + v535);
                  *uint64_t v3 = v738;
                  v540 |= (unint64_t)(v739 & 0x7F) << v736;
                  if (v739 < 0)
                  {
                    v736 += 7;
                    unint64_t v535 = v738;
                    BOOL v18 = v737++ > 8;
                    if (v18) {
                      goto LABEL_896;
                    }
                    continue;
                  }
                  if (*v5) {
                    uint64_t v540 = 0;
                  }
                }
                break;
              }
LABEL_1096:
              *(void *)(a1 + 32) = v540;
              break;
            case 1314:
              *v11 |= 0x10uLL;
              unint64_t v543 = *((void *)this + 1);
              unint64_t v544 = *((void *)this + 2);
              uint64_t v545 = *(void *)this;
              if (v543 <= 0xFFFFFFFFFFFFFFF5 && v543 + 10 <= v544)
              {
                char v546 = 0;
                unsigned int v547 = 0;
                uint64_t v548 = 0;
                do
                {
                  unint64_t v549 = v543 + 1;
                  *uint64_t v3 = v543 + 1;
                  char v550 = *(unsigned char *)(v545 + v543);
                  v548 |= (unint64_t)(v550 & 0x7F) << v546;
                  if ((v550 & 0x80) == 0) {
                    goto LABEL_1100;
                  }
                  v546 += 7;
                  unint64_t v543 = v549;
                  BOOL v18 = v547++ > 8;
                }
                while (!v18);
LABEL_903:
                uint64_t v548 = 0;
                goto LABEL_1100;
              }
              char v740 = 0;
              unsigned int v741 = 0;
              uint64_t v548 = 0;
              if (v544 <= v543) {
                unint64_t v544 = *((void *)this + 1);
              }
              while (2)
              {
                if (v544 == v543)
                {
                  uint64_t v548 = 0;
                  *uint64_t v5 = 1;
                }
                else
                {
                  unint64_t v742 = v543 + 1;
                  char v743 = *(unsigned char *)(v545 + v543);
                  *uint64_t v3 = v742;
                  v548 |= (unint64_t)(v743 & 0x7F) << v740;
                  if (v743 < 0)
                  {
                    v740 += 7;
                    unint64_t v543 = v742;
                    BOOL v18 = v741++ > 8;
                    if (v18) {
                      goto LABEL_903;
                    }
                    continue;
                  }
                  if (*v5) {
                    uint64_t v548 = 0;
                  }
                }
                break;
              }
LABEL_1100:
              *(void *)(a1 + 40) = v548;
              break;
            case 1315:
              *v11 |= 0x2000000000000uLL;
              unint64_t v551 = *((void *)this + 1);
              unint64_t v552 = *((void *)this + 2);
              uint64_t v553 = *(void *)this;
              if (v551 <= 0xFFFFFFFFFFFFFFF5 && v551 + 10 <= v552)
              {
                char v554 = 0;
                unsigned int v555 = 0;
                uint64_t v556 = 0;
                do
                {
                  unint64_t v557 = v551 + 1;
                  *uint64_t v3 = v551 + 1;
                  char v558 = *(unsigned char *)(v553 + v551);
                  v556 |= (unint64_t)(v558 & 0x7F) << v554;
                  if ((v558 & 0x80) == 0) {
                    goto LABEL_1104;
                  }
                  v554 += 7;
                  unint64_t v551 = v557;
                  BOOL v18 = v555++ > 8;
                }
                while (!v18);
LABEL_910:
                LODWORD(v556) = 0;
                goto LABEL_1104;
              }
              char v744 = 0;
              unsigned int v745 = 0;
              uint64_t v556 = 0;
              if (v552 <= v551) {
                unint64_t v552 = *((void *)this + 1);
              }
              while (2)
              {
                if (v552 == v551)
                {
                  LODWORD(v556) = 0;
                  *uint64_t v5 = 1;
                }
                else
                {
                  unint64_t v746 = v551 + 1;
                  char v747 = *(unsigned char *)(v553 + v551);
                  *uint64_t v3 = v746;
                  v556 |= (unint64_t)(v747 & 0x7F) << v744;
                  if (v747 < 0)
                  {
                    v744 += 7;
                    unint64_t v551 = v746;
                    BOOL v18 = v745++ > 8;
                    if (v18) {
                      goto LABEL_910;
                    }
                    continue;
                  }
                  if (*v5) {
                    LODWORD(v556) = 0;
                  }
                }
                break;
              }
LABEL_1104:
              *(_DWORD *)(a1 + 236) = v556;
              break;
            case 1316:
              *v11 |= 0x2000uLL;
              unint64_t v559 = *v3;
              if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v559 + 4 > *((void *)this + 2)) {
                goto LABEL_512;
              }
              *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v559);
              goto LABEL_919;
            default:
              if (v24 == 1201)
              {
                *v11 |= 0x4000000000uLL;
                unint64_t v560 = *((void *)this + 1);
                unint64_t v561 = *((void *)this + 2);
                uint64_t v562 = *(void *)this;
                if (v560 > 0xFFFFFFFFFFFFFFF5 || v560 + 10 > v561)
                {
                  char v748 = 0;
                  unsigned int v749 = 0;
                  uint64_t v565 = 0;
                  if (v561 <= v560) {
                    unint64_t v561 = *((void *)this + 1);
                  }
                  while (1)
                  {
                    if (v561 == v560)
                    {
                      LODWORD(v565) = 0;
                      *uint64_t v5 = 1;
                      goto LABEL_1108;
                    }
                    unint64_t v750 = v560 + 1;
                    char v751 = *(unsigned char *)(v562 + v560);
                    *uint64_t v3 = v750;
                    v565 |= (unint64_t)(v751 & 0x7F) << v748;
                    if ((v751 & 0x80) == 0) {
                      break;
                    }
                    v748 += 7;
                    unint64_t v560 = v750;
                    BOOL v18 = v749++ > 8;
                    if (v18)
                    {
LABEL_917:
                      LODWORD(v565) = 0;
                      goto LABEL_1108;
                    }
                  }
                  if (*v5) {
                    LODWORD(v565) = 0;
                  }
                }
                else
                {
                  char v563 = 0;
                  unsigned int v564 = 0;
                  uint64_t v565 = 0;
                  while (1)
                  {
                    unint64_t v566 = v560 + 1;
                    *uint64_t v3 = v560 + 1;
                    char v567 = *(unsigned char *)(v562 + v560);
                    v565 |= (unint64_t)(v567 & 0x7F) << v563;
                    if ((v567 & 0x80) == 0) {
                      break;
                    }
                    v563 += 7;
                    unint64_t v560 = v566;
                    BOOL v18 = v564++ > 8;
                    if (v18) {
                      goto LABEL_917;
                    }
                  }
                }
LABEL_1108:
                *(_DWORD *)(a1 + 192) = v565;
              }
              else
              {
                if (v24 != 1202) {
                  goto LABEL_140;
                }
                *v11 |= 0x8000000000uLL;
                unint64_t v77 = *((void *)this + 1);
                unint64_t v78 = *((void *)this + 2);
                uint64_t v79 = *(void *)this;
                if (v77 > 0xFFFFFFFFFFFFFFF5 || v77 + 10 > v78)
                {
                  char v696 = 0;
                  unsigned int v697 = 0;
                  uint64_t v82 = 0;
                  if (v78 <= v77) {
                    unint64_t v78 = *((void *)this + 1);
                  }
                  while (1)
                  {
                    if (v78 == v77)
                    {
                      LODWORD(v82) = 0;
                      *uint64_t v5 = 1;
                      goto LABEL_1056;
                    }
                    unint64_t v698 = v77 + 1;
                    char v699 = *(unsigned char *)(v79 + v77);
                    *uint64_t v3 = v698;
                    v82 |= (unint64_t)(v699 & 0x7F) << v696;
                    if ((v699 & 0x80) == 0) {
                      break;
                    }
                    v696 += 7;
                    unint64_t v77 = v698;
                    BOOL v18 = v697++ > 8;
                    if (v18)
                    {
LABEL_822:
                      LODWORD(v82) = 0;
                      goto LABEL_1056;
                    }
                  }
                  if (*v5) {
                    LODWORD(v82) = 0;
                  }
                }
                else
                {
                  char v80 = 0;
                  unsigned int v81 = 0;
                  uint64_t v82 = 0;
                  while (1)
                  {
                    unint64_t v83 = v77 + 1;
                    *uint64_t v3 = v77 + 1;
                    char v84 = *(unsigned char *)(v79 + v77);
                    v82 |= (unint64_t)(v84 & 0x7F) << v80;
                    if ((v84 & 0x80) == 0) {
                      break;
                    }
                    v80 += 7;
                    unint64_t v77 = v83;
                    BOOL v18 = v81++ > 8;
                    if (v18) {
                      goto LABEL_822;
                    }
                  }
                }
LABEL_1056:
                *(_DWORD *)(a1 + 196) = v82;
              }
              break;
          }
        }
      }
      else if ((v15 >> 3) <= 0x190)
      {
        switch((int)v24)
        {
          case 301:
            v11[1] |= 0x2000uLL;
            unint64_t v35 = *((void *)this + 1);
            if (v35 >= *((void *)this + 2))
            {
              BOOL v38 = 0;
              *uint64_t v5 = 1;
            }
            else
            {
              unint64_t v36 = v35 + 1;
              int v37 = *(unsigned __int8 *)(*(void *)this + v35);
              *((void *)this + 1) = v36;
              BOOL v38 = v37 != 0;
            }
            *(unsigned char *)(a1 + 324) = v38;
            goto LABEL_920;
          case 302:
            v11[1] |= 0x4000000uLL;
            unint64_t v249 = *((void *)this + 1);
            if (v249 >= *((void *)this + 2))
            {
              BOOL v252 = 0;
              *uint64_t v5 = 1;
            }
            else
            {
              unint64_t v250 = v249 + 1;
              int v251 = *(unsigned __int8 *)(*(void *)this + v249);
              *((void *)this + 1) = v250;
              BOOL v252 = v251 != 0;
            }
            *(unsigned char *)(a1 + 337) = v252;
            goto LABEL_920;
          case 303:
            v11[1] |= 0x80000uLL;
            unint64_t v253 = *((void *)this + 1);
            if (v253 >= *((void *)this + 2))
            {
              BOOL v256 = 0;
              *uint64_t v5 = 1;
            }
            else
            {
              unint64_t v254 = v253 + 1;
              int v255 = *(unsigned __int8 *)(*(void *)this + v253);
              *((void *)this + 1) = v254;
              BOOL v256 = v255 != 0;
            }
            *(unsigned char *)(a1 + 330) = v256;
            goto LABEL_920;
          case 304:
            v11[1] |= 0x2000000000uLL;
            unint64_t v257 = *((void *)this + 1);
            if (v257 >= *((void *)this + 2))
            {
              BOOL v260 = 0;
              *uint64_t v5 = 1;
            }
            else
            {
              unint64_t v258 = v257 + 1;
              int v259 = *(unsigned __int8 *)(*(void *)this + v257);
              *((void *)this + 1) = v258;
              BOOL v260 = v259 != 0;
            }
            *(unsigned char *)(a1 + 348) = v260;
            goto LABEL_920;
          case 305:
            v11[1] |= 0x200000000uLL;
            unint64_t v261 = *((void *)this + 1);
            if (v261 >= *((void *)this + 2))
            {
              BOOL v264 = 0;
              *uint64_t v5 = 1;
            }
            else
            {
              unint64_t v262 = v261 + 1;
              int v263 = *(unsigned __int8 *)(*(void *)this + v261);
              *((void *)this + 1) = v262;
              BOOL v264 = v263 != 0;
            }
            *(unsigned char *)(a1 + 344) = v264;
            goto LABEL_920;
          case 306:
            v11[1] |= 0x4000000000uLL;
            unint64_t v265 = *((void *)this + 1);
            if (v265 >= *((void *)this + 2))
            {
              BOOL v268 = 0;
              *uint64_t v5 = 1;
            }
            else
            {
              unint64_t v266 = v265 + 1;
              int v267 = *(unsigned __int8 *)(*(void *)this + v265);
              *((void *)this + 1) = v266;
              BOOL v268 = v267 != 0;
            }
            *(unsigned char *)(a1 + 349) = v268;
            goto LABEL_920;
          case 307:
            v11[1] |= 0x400000000uLL;
            unint64_t v269 = *((void *)this + 1);
            if (v269 >= *((void *)this + 2))
            {
              BOOL v272 = 0;
              *uint64_t v5 = 1;
            }
            else
            {
              unint64_t v270 = v269 + 1;
              int v271 = *(unsigned __int8 *)(*(void *)this + v269);
              *((void *)this + 1) = v270;
              BOOL v272 = v271 != 0;
            }
            *(unsigned char *)(a1 + 345) = v272;
            goto LABEL_920;
          case 308:
            v11[1] |= 0x40000000uLL;
            unint64_t v273 = *((void *)this + 1);
            if (v273 >= *((void *)this + 2))
            {
              BOOL v276 = 0;
              *uint64_t v5 = 1;
            }
            else
            {
              unint64_t v274 = v273 + 1;
              int v275 = *(unsigned __int8 *)(*(void *)this + v273);
              *((void *)this + 1) = v274;
              BOOL v276 = v275 != 0;
            }
            *(unsigned char *)(a1 + 341) = v276;
            goto LABEL_920;
          case 309:
            v11[1] |= 0x800uLL;
            unint64_t v277 = *((void *)this + 1);
            if (v277 >= *((void *)this + 2))
            {
              BOOL v280 = 0;
              *uint64_t v5 = 1;
            }
            else
            {
              unint64_t v278 = v277 + 1;
              int v279 = *(unsigned __int8 *)(*(void *)this + v277);
              *((void *)this + 1) = v278;
              BOOL v280 = v279 != 0;
            }
            *(unsigned char *)(a1 + 322) = v280;
            goto LABEL_920;
          case 310:
            v11[1] |= 0x100000uLL;
            unint64_t v281 = *((void *)this + 1);
            if (v281 >= *((void *)this + 2))
            {
              BOOL v284 = 0;
              *uint64_t v5 = 1;
            }
            else
            {
              unint64_t v282 = v281 + 1;
              int v283 = *(unsigned __int8 *)(*(void *)this + v281);
              *((void *)this + 1) = v282;
              BOOL v284 = v283 != 0;
            }
            *(unsigned char *)(a1 + 331) = v284;
            goto LABEL_920;
          case 311:
            v11[1] |= 0x8000000000uLL;
            unint64_t v285 = *((void *)this + 1);
            if (v285 >= *((void *)this + 2))
            {
              BOOL v288 = 0;
              *uint64_t v5 = 1;
            }
            else
            {
              unint64_t v286 = v285 + 1;
              int v287 = *(unsigned __int8 *)(*(void *)this + v285);
              *((void *)this + 1) = v286;
              BOOL v288 = v287 != 0;
            }
            *(unsigned char *)(a1 + 350) = v288;
            goto LABEL_920;
          case 312:
            v11[1] |= 0x800000000uLL;
            unint64_t v289 = *((void *)this + 1);
            if (v289 >= *((void *)this + 2))
            {
              BOOL v292 = 0;
              *uint64_t v5 = 1;
            }
            else
            {
              unint64_t v290 = v289 + 1;
              int v291 = *(unsigned __int8 *)(*(void *)this + v289);
              *((void *)this + 1) = v290;
              BOOL v292 = v291 != 0;
            }
            *(unsigned char *)(a1 + 346) = v292;
            goto LABEL_920;
          case 313:
            *v11 |= 0x20000uLL;
            unint64_t v293 = *((void *)this + 1);
            unint64_t v294 = *((void *)this + 2);
            uint64_t v295 = *(void *)this;
            if (v293 <= 0xFFFFFFFFFFFFFFF5 && v293 + 10 <= v294)
            {
              char v296 = 0;
              unsigned int v297 = 0;
              uint64_t v298 = 0;
              do
              {
                unint64_t v299 = v293 + 1;
                *uint64_t v3 = v293 + 1;
                char v300 = *(unsigned char *)(v295 + v293);
                v298 |= (unint64_t)(v300 & 0x7F) << v296;
                if ((v300 & 0x80) == 0) {
                  goto LABEL_1025;
                }
                v296 += 7;
                unint64_t v293 = v299;
                BOOL v18 = v297++ > 8;
              }
              while (!v18);
LABEL_714:
              LODWORD(v298) = 0;
              goto LABEL_1025;
            }
            char v656 = 0;
            unsigned int v657 = 0;
            uint64_t v298 = 0;
            if (v294 <= v293) {
              unint64_t v294 = *((void *)this + 1);
            }
            while (2)
            {
              if (v294 == v293)
              {
                LODWORD(v298) = 0;
                *uint64_t v5 = 1;
              }
              else
              {
                unint64_t v658 = v293 + 1;
                char v659 = *(unsigned char *)(v295 + v293);
                *uint64_t v3 = v658;
                v298 |= (unint64_t)(v659 & 0x7F) << v656;
                if (v659 < 0)
                {
                  v656 += 7;
                  unint64_t v293 = v658;
                  BOOL v18 = v657++ > 8;
                  if (v18) {
                    goto LABEL_714;
                  }
                  continue;
                }
                if (*v5) {
                  LODWORD(v298) = 0;
                }
              }
              break;
            }
LABEL_1025:
            *(_DWORD *)(a1 + 108) = v298;
            goto LABEL_920;
          case 314:
            v11[1] |= 0x400000uLL;
            unint64_t v301 = *((void *)this + 1);
            if (v301 >= *((void *)this + 2))
            {
              BOOL v304 = 0;
              *uint64_t v5 = 1;
            }
            else
            {
              unint64_t v302 = v301 + 1;
              int v303 = *(unsigned __int8 *)(*(void *)this + v301);
              *((void *)this + 1) = v302;
              BOOL v304 = v303 != 0;
            }
            *(unsigned char *)(a1 + 333) = v304;
            goto LABEL_920;
          case 315:
            v11[1] |= 0x800000uLL;
            unint64_t v305 = *((void *)this + 1);
            if (v305 >= *((void *)this + 2))
            {
              BOOL v308 = 0;
              *uint64_t v5 = 1;
            }
            else
            {
              unint64_t v306 = v305 + 1;
              int v307 = *(unsigned __int8 *)(*(void *)this + v305);
              *((void *)this + 1) = v306;
              BOOL v308 = v307 != 0;
            }
            *(unsigned char *)(a1 + 334) = v308;
            goto LABEL_920;
          case 316:
            v11[1] |= 0x20uLL;
            unint64_t v309 = *((void *)this + 1);
            if (v309 >= *((void *)this + 2))
            {
              BOOL v312 = 0;
              *uint64_t v5 = 1;
            }
            else
            {
              unint64_t v310 = v309 + 1;
              int v311 = *(unsigned __int8 *)(*(void *)this + v309);
              *((void *)this + 1) = v310;
              BOOL v312 = v311 != 0;
            }
            *(unsigned char *)(a1 + 316) = v312;
            goto LABEL_920;
          case 317:
            *v11 |= 0x40000uLL;
            unint64_t v313 = *((void *)this + 1);
            unint64_t v314 = *((void *)this + 2);
            uint64_t v315 = *(void *)this;
            if (v313 <= 0xFFFFFFFFFFFFFFF5 && v313 + 10 <= v314)
            {
              char v316 = 0;
              unsigned int v317 = 0;
              uint64_t v318 = 0;
              do
              {
                unint64_t v319 = v313 + 1;
                *uint64_t v3 = v313 + 1;
                char v320 = *(unsigned char *)(v315 + v313);
                v318 |= (unint64_t)(v320 & 0x7F) << v316;
                if ((v320 & 0x80) == 0) {
                  goto LABEL_1028;
                }
                v316 += 7;
                unint64_t v313 = v319;
                BOOL v18 = v317++ > 8;
              }
              while (!v18);
LABEL_727:
              LODWORD(v318) = 0;
              goto LABEL_1028;
            }
            char v660 = 0;
            unsigned int v661 = 0;
            uint64_t v318 = 0;
            if (v314 <= v313) {
              unint64_t v314 = *((void *)this + 1);
            }
            break;
          case 318:
            v11[1] |= 0x40000000000uLL;
            unint64_t v321 = *((void *)this + 1);
            if (v321 >= *((void *)this + 2))
            {
              BOOL v324 = 0;
              *uint64_t v5 = 1;
            }
            else
            {
              unint64_t v322 = v321 + 1;
              int v323 = *(unsigned __int8 *)(*(void *)this + v321);
              *((void *)this + 1) = v322;
              BOOL v324 = v323 != 0;
            }
            *(unsigned char *)(a1 + 353) = v324;
            goto LABEL_920;
          case 319:
            v11[1] |= 0x10000000000uLL;
            unint64_t v325 = *((void *)this + 1);
            if (v325 >= *((void *)this + 2))
            {
              BOOL v328 = 0;
              *uint64_t v5 = 1;
            }
            else
            {
              unint64_t v326 = v325 + 1;
              int v327 = *(unsigned __int8 *)(*(void *)this + v325);
              *((void *)this + 1) = v326;
              BOOL v328 = v327 != 0;
            }
            *(unsigned char *)(a1 + 351) = v328;
            goto LABEL_920;
          case 320:
            v11[1] |= 0x20000000000uLL;
            unint64_t v329 = *((void *)this + 1);
            if (v329 >= *((void *)this + 2))
            {
              BOOL v332 = 0;
              *uint64_t v5 = 1;
            }
            else
            {
              unint64_t v330 = v329 + 1;
              int v331 = *(unsigned __int8 *)(*(void *)this + v329);
              *((void *)this + 1) = v330;
              BOOL v332 = v331 != 0;
            }
            *(unsigned char *)(a1 + 352) = v332;
            goto LABEL_920;
          case 321:
            v11[1] |= 0x100000000uLL;
            unint64_t v333 = *((void *)this + 1);
            if (v333 >= *((void *)this + 2))
            {
              BOOL v336 = 0;
              *uint64_t v5 = 1;
            }
            else
            {
              unint64_t v334 = v333 + 1;
              int v335 = *(unsigned __int8 *)(*(void *)this + v333);
              *((void *)this + 1) = v334;
              BOOL v336 = v335 != 0;
            }
            *(unsigned char *)(a1 + 343) = v336;
            goto LABEL_920;
          case 322:
            v11[1] |= 0x80000000uLL;
            unint64_t v337 = *((void *)this + 1);
            if (v337 >= *((void *)this + 2))
            {
              BOOL v340 = 0;
              *uint64_t v5 = 1;
            }
            else
            {
              unint64_t v338 = v337 + 1;
              int v339 = *(unsigned __int8 *)(*(void *)this + v337);
              *((void *)this + 1) = v338;
              BOOL v340 = v339 != 0;
            }
            *(unsigned char *)(a1 + 342) = v340;
            goto LABEL_920;
          default:
            JUMPOUT(0);
        }
        while (1)
        {
          if (v314 == v313)
          {
            LODWORD(v318) = 0;
            *uint64_t v5 = 1;
            goto LABEL_1028;
          }
          unint64_t v662 = v313 + 1;
          char v663 = *(unsigned char *)(v315 + v313);
          *uint64_t v3 = v662;
          v318 |= (unint64_t)(v663 & 0x7F) << v660;
          if ((v663 & 0x80) == 0) {
            break;
          }
          v660 += 7;
          unint64_t v313 = v662;
          BOOL v18 = v661++ > 8;
          if (v18) {
            goto LABEL_727;
          }
        }
        if (*v5) {
          LODWORD(v318) = 0;
        }
LABEL_1028:
        *(_DWORD *)(a1 + 112) = v318;
      }
      else
      {
        switch((int)v24)
        {
          case 1:
            *v11 |= 0x800000uLL;
            unint64_t v25 = *v3;
            if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v25 + 4 > *((void *)this + 2)) {
              goto LABEL_512;
            }
            *(_DWORD *)(a1 + 132) = *(_DWORD *)(*(void *)this + v25);
            goto LABEL_919;
          case 2:
            *v11 |= 0x400000uLL;
            unint64_t v119 = *v3;
            if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v119 + 4 > *((void *)this + 2)) {
              goto LABEL_512;
            }
            *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v119);
            goto LABEL_919;
          case 3:
            *v11 |= 0x1000000uLL;
            unint64_t v120 = *((void *)this + 1);
            unint64_t v121 = *((void *)this + 2);
            uint64_t v122 = *(void *)this;
            if (v120 <= 0xFFFFFFFFFFFFFFF5 && v120 + 10 <= v121)
            {
              char v123 = 0;
              unsigned int v124 = 0;
              uint64_t v125 = 0;
              do
              {
                unint64_t v126 = v120 + 1;
                *uint64_t v3 = v120 + 1;
                char v127 = *(unsigned char *)(v122 + v120);
                v125 |= (unint64_t)(v127 & 0x7F) << v123;
                if ((v127 & 0x80) == 0) {
                  goto LABEL_983;
                }
                v123 += 7;
                unint64_t v120 = v126;
                BOOL v18 = v124++ > 8;
              }
              while (!v18);
LABEL_590:
              LODWORD(v125) = 0;
              goto LABEL_983;
            }
            char v600 = 0;
            unsigned int v601 = 0;
            uint64_t v125 = 0;
            if (v121 <= v120) {
              unint64_t v121 = *((void *)this + 1);
            }
            while (2)
            {
              if (v121 == v120)
              {
                LODWORD(v125) = 0;
                *uint64_t v5 = 1;
              }
              else
              {
                unint64_t v602 = v120 + 1;
                char v603 = *(unsigned char *)(v122 + v120);
                *uint64_t v3 = v602;
                v125 |= (unint64_t)(v603 & 0x7F) << v600;
                if (v603 < 0)
                {
                  v600 += 7;
                  unint64_t v120 = v602;
                  BOOL v18 = v601++ > 8;
                  if (v18) {
                    goto LABEL_590;
                  }
                  continue;
                }
                if (*v5) {
                  LODWORD(v125) = 0;
                }
              }
              break;
            }
LABEL_983:
            *(_DWORD *)(a1 + 136) = v125;
            goto LABEL_920;
          case 4:
            *v11 |= 0x10000000000000uLL;
            unint64_t v128 = *((void *)this + 1);
            unint64_t v129 = *((void *)this + 2);
            uint64_t v130 = *(void *)this;
            if (v128 <= 0xFFFFFFFFFFFFFFF5 && v128 + 10 <= v129)
            {
              char v131 = 0;
              unsigned int v132 = 0;
              uint64_t v133 = 0;
              do
              {
                unint64_t v134 = v128 + 1;
                *uint64_t v3 = v128 + 1;
                char v135 = *(unsigned char *)(v130 + v128);
                v133 |= (unint64_t)(v135 & 0x7F) << v131;
                if ((v135 & 0x80) == 0) {
                  goto LABEL_986;
                }
                v131 += 7;
                unint64_t v128 = v134;
                BOOL v18 = v132++ > 8;
              }
              while (!v18);
LABEL_597:
              LODWORD(v133) = 0;
              goto LABEL_986;
            }
            char v604 = 0;
            unsigned int v605 = 0;
            uint64_t v133 = 0;
            if (v129 <= v128) {
              unint64_t v129 = *((void *)this + 1);
            }
            while (2)
            {
              if (v129 == v128)
              {
                LODWORD(v133) = 0;
                *uint64_t v5 = 1;
              }
              else
              {
                unint64_t v606 = v128 + 1;
                char v607 = *(unsigned char *)(v130 + v128);
                *uint64_t v3 = v606;
                v133 |= (unint64_t)(v607 & 0x7F) << v604;
                if (v607 < 0)
                {
                  v604 += 7;
                  unint64_t v128 = v606;
                  BOOL v18 = v605++ > 8;
                  if (v18) {
                    goto LABEL_597;
                  }
                  continue;
                }
                if (*v5) {
                  LODWORD(v133) = 0;
                }
              }
              break;
            }
LABEL_986:
            *(_DWORD *)(a1 + 248) = v133;
            goto LABEL_920;
          case 5:
            v11[1] |= 1uLL;
            unint64_t v136 = *v3;
            if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v136 + 4 > *((void *)this + 2)) {
              goto LABEL_512;
            }
            *(_DWORD *)(a1 + 296) = *(_DWORD *)(*(void *)this + v136);
            goto LABEL_919;
          case 6:
            *v11 |= 0x400000000000000uLL;
            unint64_t v137 = *v3;
            if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v137 + 4 > *((void *)this + 2)) {
              goto LABEL_512;
            }
            *(_DWORD *)(a1 + 272) = *(_DWORD *)(*(void *)this + v137);
            goto LABEL_919;
          case 7:
            *v11 |= 0x400000000000uLL;
            unint64_t v138 = *v3;
            if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v138 + 4 > *((void *)this + 2)) {
              goto LABEL_512;
            }
            *(_DWORD *)(a1 + 224) = *(_DWORD *)(*(void *)this + v138);
            goto LABEL_919;
          case 8:
            *v11 |= 0x200000000000uLL;
            unint64_t v139 = *v3;
            if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v139 + 4 > *((void *)this + 2)) {
              goto LABEL_512;
            }
            *(_DWORD *)(a1 + 220) = *(_DWORD *)(*(void *)this + v139);
            goto LABEL_919;
          case 9:
            *v11 |= 0x200uLL;
            unint64_t v140 = *v3;
            if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v140 + 4 > *((void *)this + 2)) {
              goto LABEL_512;
            }
            *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v140);
            goto LABEL_919;
          case 10:
            *v11 |= 0x80000000000000uLL;
            unint64_t v141 = *((void *)this + 1);
            unint64_t v142 = *((void *)this + 2);
            uint64_t v143 = *(void *)this;
            if (v141 <= 0xFFFFFFFFFFFFFFF5 && v141 + 10 <= v142)
            {
              char v144 = 0;
              unsigned int v145 = 0;
              uint64_t v146 = 0;
              do
              {
                unint64_t v147 = v141 + 1;
                *uint64_t v3 = v141 + 1;
                char v148 = *(unsigned char *)(v143 + v141);
                v146 |= (unint64_t)(v148 & 0x7F) << v144;
                if ((v148 & 0x80) == 0) {
                  goto LABEL_989;
                }
                v144 += 7;
                unint64_t v141 = v147;
                BOOL v18 = v145++ > 8;
              }
              while (!v18);
LABEL_604:
              LODWORD(v146) = 0;
              goto LABEL_989;
            }
            char v608 = 0;
            unsigned int v609 = 0;
            uint64_t v146 = 0;
            if (v142 <= v141) {
              unint64_t v142 = *((void *)this + 1);
            }
            while (2)
            {
              if (v142 == v141)
              {
                LODWORD(v146) = 0;
                *uint64_t v5 = 1;
              }
              else
              {
                unint64_t v610 = v141 + 1;
                char v611 = *(unsigned char *)(v143 + v141);
                *uint64_t v3 = v610;
                v146 |= (unint64_t)(v611 & 0x7F) << v608;
                if (v611 < 0)
                {
                  v608 += 7;
                  unint64_t v141 = v610;
                  BOOL v18 = v609++ > 8;
                  if (v18) {
                    goto LABEL_604;
                  }
                  continue;
                }
                if (*v5) {
                  LODWORD(v146) = 0;
                }
              }
              break;
            }
LABEL_989:
            *(_DWORD *)(a1 + 260) = v146;
            goto LABEL_920;
          case 11:
            *v11 |= 0x2000000uLL;
            unint64_t v149 = *((void *)this + 1);
            unint64_t v150 = *((void *)this + 2);
            uint64_t v151 = *(void *)this;
            if (v149 <= 0xFFFFFFFFFFFFFFF5 && v149 + 10 <= v150)
            {
              char v152 = 0;
              unsigned int v153 = 0;
              uint64_t v154 = 0;
              do
              {
                unint64_t v155 = v149 + 1;
                *uint64_t v3 = v149 + 1;
                char v156 = *(unsigned char *)(v151 + v149);
                v154 |= (unint64_t)(v156 & 0x7F) << v152;
                if ((v156 & 0x80) == 0) {
                  goto LABEL_992;
                }
                v152 += 7;
                unint64_t v149 = v155;
                BOOL v18 = v153++ > 8;
              }
              while (!v18);
LABEL_611:
              LODWORD(v154) = 0;
              goto LABEL_992;
            }
            char v612 = 0;
            unsigned int v613 = 0;
            uint64_t v154 = 0;
            if (v150 <= v149) {
              unint64_t v150 = *((void *)this + 1);
            }
            while (2)
            {
              if (v150 == v149)
              {
                LODWORD(v154) = 0;
                *uint64_t v5 = 1;
              }
              else
              {
                unint64_t v614 = v149 + 1;
                char v615 = *(unsigned char *)(v151 + v149);
                *uint64_t v3 = v614;
                v154 |= (unint64_t)(v615 & 0x7F) << v612;
                if (v615 < 0)
                {
                  v612 += 7;
                  unint64_t v149 = v614;
                  BOOL v18 = v613++ > 8;
                  if (v18) {
                    goto LABEL_611;
                  }
                  continue;
                }
                if (*v5) {
                  LODWORD(v154) = 0;
                }
              }
              break;
            }
LABEL_992:
            *(_DWORD *)(a1 + 140) = v154;
            goto LABEL_920;
          case 12:
            *v11 |= 0x10000uLL;
            unint64_t v157 = *v3;
            if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v157 + 4 > *((void *)this + 2)) {
              goto LABEL_512;
            }
            *(_DWORD *)(a1 + 104) = *(_DWORD *)(*(void *)this + v157);
            goto LABEL_919;
          case 13:
            v11[1] |= 8uLL;
            unint64_t v158 = *v3;
            if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v158 + 4 > *((void *)this + 2)) {
              goto LABEL_512;
            }
            *(_DWORD *)(a1 + 308) = *(_DWORD *)(*(void *)this + v158);
            goto LABEL_919;
          case 14:
            v11[1] |= 0x10uLL;
            unint64_t v159 = *v3;
            if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v159 + 4 > *((void *)this + 2)) {
              goto LABEL_512;
            }
            *(_DWORD *)(a1 + 312) = *(_DWORD *)(*(void *)this + v159);
            goto LABEL_919;
          case 15:
            *v11 |= 0x80000000000uLL;
            unint64_t v160 = *((void *)this + 1);
            unint64_t v161 = *((void *)this + 2);
            uint64_t v162 = *(void *)this;
            if (v160 <= 0xFFFFFFFFFFFFFFF5 && v160 + 10 <= v161)
            {
              char v163 = 0;
              unsigned int v164 = 0;
              uint64_t v165 = 0;
              do
              {
                unint64_t v166 = v160 + 1;
                *uint64_t v3 = v160 + 1;
                char v167 = *(unsigned char *)(v162 + v160);
                v165 |= (unint64_t)(v167 & 0x7F) << v163;
                if ((v167 & 0x80) == 0) {
                  goto LABEL_995;
                }
                v163 += 7;
                unint64_t v160 = v166;
                BOOL v18 = v164++ > 8;
              }
              while (!v18);
LABEL_618:
              LODWORD(v165) = 0;
              goto LABEL_995;
            }
            char v616 = 0;
            unsigned int v617 = 0;
            uint64_t v165 = 0;
            if (v161 <= v160) {
              unint64_t v161 = *((void *)this + 1);
            }
            while (2)
            {
              if (v161 == v160)
              {
                LODWORD(v165) = 0;
                *uint64_t v5 = 1;
              }
              else
              {
                unint64_t v618 = v160 + 1;
                char v619 = *(unsigned char *)(v162 + v160);
                *uint64_t v3 = v618;
                v165 |= (unint64_t)(v619 & 0x7F) << v616;
                if (v619 < 0)
                {
                  v616 += 7;
                  unint64_t v160 = v618;
                  BOOL v18 = v617++ > 8;
                  if (v18) {
                    goto LABEL_618;
                  }
                  continue;
                }
                if (*v5) {
                  LODWORD(v165) = 0;
                }
              }
              break;
            }
LABEL_995:
            *(_DWORD *)(a1 + 212) = v165;
            goto LABEL_920;
          case 16:
            *v11 |= 0x20000000000uLL;
            unint64_t v168 = *((void *)this + 1);
            unint64_t v169 = *((void *)this + 2);
            uint64_t v170 = *(void *)this;
            if (v168 <= 0xFFFFFFFFFFFFFFF5 && v168 + 10 <= v169)
            {
              char v171 = 0;
              unsigned int v172 = 0;
              uint64_t v173 = 0;
              do
              {
                unint64_t v174 = v168 + 1;
                *uint64_t v3 = v168 + 1;
                char v175 = *(unsigned char *)(v170 + v168);
                v173 |= (unint64_t)(v175 & 0x7F) << v171;
                if ((v175 & 0x80) == 0) {
                  goto LABEL_998;
                }
                v171 += 7;
                unint64_t v168 = v174;
                BOOL v18 = v172++ > 8;
              }
              while (!v18);
LABEL_625:
              LODWORD(v173) = 0;
              goto LABEL_998;
            }
            char v620 = 0;
            unsigned int v621 = 0;
            uint64_t v173 = 0;
            if (v169 <= v168) {
              unint64_t v169 = *((void *)this + 1);
            }
            while (2)
            {
              if (v169 == v168)
              {
                LODWORD(v173) = 0;
                *uint64_t v5 = 1;
              }
              else
              {
                unint64_t v622 = v168 + 1;
                char v623 = *(unsigned char *)(v170 + v168);
                *uint64_t v3 = v622;
                v173 |= (unint64_t)(v623 & 0x7F) << v620;
                if (v623 < 0)
                {
                  v620 += 7;
                  unint64_t v168 = v622;
                  BOOL v18 = v621++ > 8;
                  if (v18) {
                    goto LABEL_625;
                  }
                  continue;
                }
                if (*v5) {
                  LODWORD(v173) = 0;
                }
              }
              break;
            }
LABEL_998:
            *(_DWORD *)(a1 + 204) = v173;
            goto LABEL_920;
          case 17:
            *v11 |= 0x4000000000000uLL;
            unint64_t v176 = *v3;
            if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v176 + 4 > *((void *)this + 2)) {
              goto LABEL_512;
            }
            *(_DWORD *)(a1 + 240) = *(_DWORD *)(*(void *)this + v176);
            goto LABEL_919;
          case 18:
            *v11 |= 0x1000000000000000uLL;
            unint64_t v177 = *((void *)this + 1);
            unint64_t v178 = *((void *)this + 2);
            uint64_t v179 = *(void *)this;
            if (v177 <= 0xFFFFFFFFFFFFFFF5 && v177 + 10 <= v178)
            {
              char v180 = 0;
              unsigned int v181 = 0;
              uint64_t v182 = 0;
              do
              {
                unint64_t v183 = v177 + 1;
                *uint64_t v3 = v177 + 1;
                char v184 = *(unsigned char *)(v179 + v177);
                v182 |= (unint64_t)(v184 & 0x7F) << v180;
                if ((v184 & 0x80) == 0) {
                  goto LABEL_1001;
                }
                v180 += 7;
                unint64_t v177 = v183;
                BOOL v18 = v181++ > 8;
              }
              while (!v18);
LABEL_632:
              LODWORD(v182) = 0;
              goto LABEL_1001;
            }
            char v624 = 0;
            unsigned int v625 = 0;
            uint64_t v182 = 0;
            if (v178 <= v177) {
              unint64_t v178 = *((void *)this + 1);
            }
            while (2)
            {
              if (v178 == v177)
              {
                LODWORD(v182) = 0;
                *uint64_t v5 = 1;
              }
              else
              {
                unint64_t v626 = v177 + 1;
                char v627 = *(unsigned char *)(v179 + v177);
                *uint64_t v3 = v626;
                v182 |= (unint64_t)(v627 & 0x7F) << v624;
                if (v627 < 0)
                {
                  v624 += 7;
                  unint64_t v177 = v626;
                  BOOL v18 = v625++ > 8;
                  if (v18) {
                    goto LABEL_632;
                  }
                  continue;
                }
                if (*v5) {
                  LODWORD(v182) = 0;
                }
              }
              break;
            }
LABEL_1001:
            *(_DWORD *)(a1 + 280) = v182;
            goto LABEL_920;
          case 19:
            v11[1] |= 2uLL;
            unint64_t v185 = *((void *)this + 1);
            unint64_t v186 = *((void *)this + 2);
            uint64_t v187 = *(void *)this;
            if (v185 <= 0xFFFFFFFFFFFFFFF5 && v185 + 10 <= v186)
            {
              char v188 = 0;
              unsigned int v189 = 0;
              uint64_t v190 = 0;
              do
              {
                unint64_t v191 = v185 + 1;
                *uint64_t v3 = v185 + 1;
                char v192 = *(unsigned char *)(v187 + v185);
                v190 |= (unint64_t)(v192 & 0x7F) << v188;
                if ((v192 & 0x80) == 0) {
                  goto LABEL_1004;
                }
                v188 += 7;
                unint64_t v185 = v191;
                BOOL v18 = v189++ > 8;
              }
              while (!v18);
LABEL_639:
              LODWORD(v190) = 0;
              goto LABEL_1004;
            }
            char v628 = 0;
            unsigned int v629 = 0;
            uint64_t v190 = 0;
            if (v186 <= v185) {
              unint64_t v186 = *((void *)this + 1);
            }
            while (2)
            {
              if (v186 == v185)
              {
                LODWORD(v190) = 0;
                *uint64_t v5 = 1;
              }
              else
              {
                unint64_t v630 = v185 + 1;
                char v631 = *(unsigned char *)(v187 + v185);
                *uint64_t v3 = v630;
                v190 |= (unint64_t)(v631 & 0x7F) << v628;
                if (v631 < 0)
                {
                  v628 += 7;
                  unint64_t v185 = v630;
                  BOOL v18 = v629++ > 8;
                  if (v18) {
                    goto LABEL_639;
                  }
                  continue;
                }
                if (*v5) {
                  LODWORD(v190) = 0;
                }
              }
              break;
            }
LABEL_1004:
            *(_DWORD *)(a1 + 300) = v190;
            goto LABEL_920;
          default:
            switch((int)v24)
            {
              case 'e':
                *v11 |= 0x80uLL;
                unint64_t v39 = *((void *)this + 1);
                unint64_t v40 = *((void *)this + 2);
                uint64_t v41 = *(void *)this;
                if (v39 <= 0xFFFFFFFFFFFFFFF5 && v39 + 10 <= v40)
                {
                  char v42 = 0;
                  unsigned int v43 = 0;
                  uint64_t v44 = 0;
                  do
                  {
                    unint64_t v45 = v39 + 1;
                    *uint64_t v3 = v39 + 1;
                    char v46 = *(unsigned char *)(v41 + v39);
                    v44 |= (unint64_t)(v46 & 0x7F) << v42;
                    if ((v46 & 0x80) == 0) {
                      goto LABEL_977;
                    }
                    v42 += 7;
                    unint64_t v39 = v45;
                    BOOL v18 = v43++ > 8;
                  }
                  while (!v18);
LABEL_574:
                  uint64_t v44 = 0;
                  goto LABEL_977;
                }
                char v592 = 0;
                unsigned int v593 = 0;
                uint64_t v44 = 0;
                if (v40 <= v39) {
                  unint64_t v40 = *((void *)this + 1);
                }
                while (2)
                {
                  if (v40 == v39)
                  {
                    uint64_t v44 = 0;
                    *uint64_t v5 = 1;
                  }
                  else
                  {
                    unint64_t v594 = v39 + 1;
                    char v595 = *(unsigned char *)(v41 + v39);
                    *uint64_t v3 = v594;
                    v44 |= (unint64_t)(v595 & 0x7F) << v592;
                    if (v595 < 0)
                    {
                      v592 += 7;
                      unint64_t v39 = v594;
                      BOOL v18 = v593++ > 8;
                      if (v18) {
                        goto LABEL_574;
                      }
                      continue;
                    }
                    if (*v5) {
                      uint64_t v44 = 0;
                    }
                  }
                  break;
                }
LABEL_977:
                *(void *)(a1 + 64) = v44;
                goto LABEL_920;
              case 'f':
                *v11 |= 1uLL;
                unint64_t v341 = *((void *)this + 1);
                unint64_t v342 = *((void *)this + 2);
                uint64_t v343 = *(void *)this;
                if (v341 <= 0xFFFFFFFFFFFFFFF5 && v341 + 10 <= v342)
                {
                  char v344 = 0;
                  unsigned int v345 = 0;
                  uint64_t v346 = 0;
                  do
                  {
                    unint64_t v347 = v341 + 1;
                    *uint64_t v3 = v341 + 1;
                    char v348 = *(unsigned char *)(v343 + v341);
                    v346 |= (unint64_t)(v348 & 0x7F) << v344;
                    if ((v348 & 0x80) == 0) {
                      goto LABEL_1031;
                    }
                    v344 += 7;
                    unint64_t v341 = v347;
                    BOOL v18 = v345++ > 8;
                  }
                  while (!v18);
LABEL_744:
                  uint64_t v346 = 0;
                  goto LABEL_1031;
                }
                char v664 = 0;
                unsigned int v665 = 0;
                uint64_t v346 = 0;
                if (v342 <= v341) {
                  unint64_t v342 = *((void *)this + 1);
                }
                break;
              case 'g':
                v11[1] |= 0x40uLL;
                unint64_t v349 = *((void *)this + 1);
                if (v349 >= *((void *)this + 2))
                {
                  BOOL v352 = 0;
                  *uint64_t v5 = 1;
                }
                else
                {
                  unint64_t v350 = v349 + 1;
                  int v351 = *(unsigned __int8 *)(*(void *)this + v349);
                  *((void *)this + 1) = v350;
                  BOOL v352 = v351 != 0;
                }
                *(unsigned char *)(a1 + 317) = v352;
                goto LABEL_920;
              case 'h':
                v11[1] |= 0x80uLL;
                unint64_t v353 = *((void *)this + 1);
                if (v353 >= *((void *)this + 2))
                {
                  BOOL v356 = 0;
                  *uint64_t v5 = 1;
                }
                else
                {
                  unint64_t v354 = v353 + 1;
                  int v355 = *(unsigned __int8 *)(*(void *)this + v353);
                  *((void *)this + 1) = v354;
                  BOOL v356 = v355 != 0;
                }
                *(unsigned char *)(a1 + 318) = v356;
                goto LABEL_920;
              case 'i':
                v11[1] |= 0x8000uLL;
                unint64_t v357 = *((void *)this + 1);
                if (v357 >= *((void *)this + 2))
                {
                  BOOL v360 = 0;
                  *uint64_t v5 = 1;
                }
                else
                {
                  unint64_t v358 = v357 + 1;
                  int v359 = *(unsigned __int8 *)(*(void *)this + v357);
                  *((void *)this + 1) = v358;
                  BOOL v360 = v359 != 0;
                }
                *(unsigned char *)(a1 + 326) = v360;
                goto LABEL_920;
              case 'j':
                v11[1] |= 0x10000uLL;
                unint64_t v361 = *((void *)this + 1);
                if (v361 >= *((void *)this + 2))
                {
                  BOOL v364 = 0;
                  *uint64_t v5 = 1;
                }
                else
                {
                  unint64_t v362 = v361 + 1;
                  int v363 = *(unsigned __int8 *)(*(void *)this + v361);
                  *((void *)this + 1) = v362;
                  BOOL v364 = v363 != 0;
                }
                *(unsigned char *)(a1 + 327) = v364;
                goto LABEL_920;
              case 'k':
                v11[1] |= 0x8000000uLL;
                unint64_t v365 = *((void *)this + 1);
                if (v365 >= *((void *)this + 2))
                {
                  BOOL v368 = 0;
                  *uint64_t v5 = 1;
                }
                else
                {
                  unint64_t v366 = v365 + 1;
                  int v367 = *(unsigned __int8 *)(*(void *)this + v365);
                  *((void *)this + 1) = v366;
                  BOOL v368 = v367 != 0;
                }
                *(unsigned char *)(a1 + 338) = v368;
                goto LABEL_920;
              case 'l':
                v11[1] |= 0x2000000uLL;
                unint64_t v369 = *((void *)this + 1);
                if (v369 >= *((void *)this + 2))
                {
                  BOOL v372 = 0;
                  *uint64_t v5 = 1;
                }
                else
                {
                  unint64_t v370 = v369 + 1;
                  int v371 = *(unsigned __int8 *)(*(void *)this + v369);
                  *((void *)this + 1) = v370;
                  BOOL v372 = v371 != 0;
                }
                *(unsigned char *)(a1 + 336) = v372;
                goto LABEL_920;
              case 'm':
                v11[1] |= 0x1000uLL;
                unint64_t v373 = *((void *)this + 1);
                if (v373 >= *((void *)this + 2))
                {
                  BOOL v376 = 0;
                  *uint64_t v5 = 1;
                }
                else
                {
                  unint64_t v374 = v373 + 1;
                  int v375 = *(unsigned __int8 *)(*(void *)this + v373);
                  *((void *)this + 1) = v374;
                  BOOL v376 = v375 != 0;
                }
                *(unsigned char *)(a1 + 323) = v376;
                goto LABEL_920;
              case 'n':
                v11[1] |= 0x10000000uLL;
                unint64_t v377 = *((void *)this + 1);
                if (v377 >= *((void *)this + 2))
                {
                  BOOL v380 = 0;
                  *uint64_t v5 = 1;
                }
                else
                {
                  unint64_t v378 = v377 + 1;
                  int v379 = *(unsigned __int8 *)(*(void *)this + v377);
                  *((void *)this + 1) = v378;
                  BOOL v380 = v379 != 0;
                }
                *(unsigned char *)(a1 + 339) = v380;
                goto LABEL_920;
              case 'o':
                v11[1] |= 0x20000000uLL;
                unint64_t v381 = *((void *)this + 1);
                if (v381 >= *((void *)this + 2))
                {
                  BOOL v384 = 0;
                  *uint64_t v5 = 1;
                }
                else
                {
                  unint64_t v382 = v381 + 1;
                  int v383 = *(unsigned __int8 *)(*(void *)this + v381);
                  *((void *)this + 1) = v382;
                  BOOL v384 = v383 != 0;
                }
                *(unsigned char *)(a1 + 340) = v384;
                goto LABEL_920;
              case 'p':
                v11[1] |= 0x200uLL;
                unint64_t v385 = *((void *)this + 1);
                if (v385 >= *((void *)this + 2))
                {
                  BOOL v388 = 0;
                  *uint64_t v5 = 1;
                }
                else
                {
                  unint64_t v386 = v385 + 1;
                  int v387 = *(unsigned __int8 *)(*(void *)this + v385);
                  *((void *)this + 1) = v386;
                  BOOL v388 = v387 != 0;
                }
                *(unsigned char *)(a1 + 320) = v388;
                goto LABEL_920;
              case 'q':
                v11[1] |= 0x1000000uLL;
                unint64_t v389 = *((void *)this + 1);
                if (v389 >= *((void *)this + 2))
                {
                  BOOL v392 = 0;
                  *uint64_t v5 = 1;
                }
                else
                {
                  unint64_t v390 = v389 + 1;
                  int v391 = *(unsigned __int8 *)(*(void *)this + v389);
                  *((void *)this + 1) = v390;
                  BOOL v392 = v391 != 0;
                }
                *(unsigned char *)(a1 + 335) = v392;
                goto LABEL_920;
              default:
                goto LABEL_140;
            }
            break;
        }
        while (1)
        {
          if (v342 == v341)
          {
            uint64_t v346 = 0;
            *uint64_t v5 = 1;
            goto LABEL_1031;
          }
          unint64_t v666 = v341 + 1;
          char v667 = *(unsigned char *)(v343 + v341);
          *uint64_t v3 = v666;
          v346 |= (unint64_t)(v667 & 0x7F) << v664;
          if ((v667 & 0x80) == 0) {
            break;
          }
          v664 += 7;
          unint64_t v341 = v666;
          BOOL v18 = v665++ > 8;
          if (v18) {
            goto LABEL_744;
          }
        }
        if (*v5) {
          uint64_t v346 = 0;
        }
LABEL_1031:
        *(void *)(a1 + 8) = v346;
      }
LABEL_920:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v6 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
    }
    while (v2 < v6 && v4 == 0);
  }
  return v4 == 0;
}

uint64_t sub_227B7C448(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = (uint64_t *)(result + 356);
  uint64_t v5 = *(void *)(result + 356);
  if ((v5 & 0x800000) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(result + 132));
    uint64_t v5 = *v4;
    uint64_t v6 = v4[1];
    if ((*v4 & 0x400000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v6 = *(void *)(result + 364);
  if ((v5 & 0x400000) != 0)
  {
LABEL_5:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 128));
    uint64_t v5 = *v4;
    uint64_t v6 = v4[1];
  }
LABEL_6:
  if ((v5 & 0x1000000) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    uint64_t v5 = *v4;
    uint64_t v6 = v4[1];
    if ((*v4 & 0x10000000000000) == 0)
    {
LABEL_8:
      if ((v6 & 1) == 0) {
        goto LABEL_9;
      }
      goto LABEL_115;
    }
  }
  else if ((v5 & 0x10000000000000) == 0)
  {
    goto LABEL_8;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 1) == 0)
  {
LABEL_9:
    if ((v5 & 0x400000000000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_116;
  }
LABEL_115:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 296));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x400000000000000) == 0)
  {
LABEL_10:
    if ((v5 & 0x400000000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_117;
  }
LABEL_116:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 272));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x400000000000) == 0)
  {
LABEL_11:
    if ((v5 & 0x200000000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_118;
  }
LABEL_117:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 224));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x200000000000) == 0)
  {
LABEL_12:
    if ((v5 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_119;
  }
LABEL_118:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 220));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x200) == 0)
  {
LABEL_13:
    if ((v5 & 0x80000000000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_120;
  }
LABEL_119:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x80000000000000) == 0)
  {
LABEL_14:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_121;
  }
LABEL_120:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x2000000) == 0)
  {
LABEL_15:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_122;
  }
LABEL_121:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x10000) == 0)
  {
LABEL_16:
    if ((v6 & 8) == 0) {
      goto LABEL_17;
    }
    goto LABEL_123;
  }
LABEL_122:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 104));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 8) == 0)
  {
LABEL_17:
    if ((v6 & 0x10) == 0) {
      goto LABEL_18;
    }
    goto LABEL_124;
  }
LABEL_123:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 308));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x10) == 0)
  {
LABEL_18:
    if ((v5 & 0x80000000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_125;
  }
LABEL_124:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 312));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x80000000000) == 0)
  {
LABEL_19:
    if ((v5 & 0x20000000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_126;
  }
LABEL_125:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x20000000000) == 0)
  {
LABEL_20:
    if ((v5 & 0x4000000000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_127;
  }
LABEL_126:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x4000000000000) == 0)
  {
LABEL_21:
    if ((v5 & 0x1000000000000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_128;
  }
LABEL_127:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 240));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x1000000000000000) == 0)
  {
LABEL_22:
    if ((v6 & 2) == 0) {
      goto LABEL_23;
    }
    goto LABEL_129;
  }
LABEL_128:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 2) == 0)
  {
LABEL_23:
    if ((v5 & 0x80) == 0) {
      goto LABEL_24;
    }
    goto LABEL_130;
  }
LABEL_129:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x80) == 0)
  {
LABEL_24:
    if ((v5 & 1) == 0) {
      goto LABEL_25;
    }
    goto LABEL_131;
  }
LABEL_130:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 1) == 0)
  {
LABEL_25:
    if ((v6 & 0x40) == 0) {
      goto LABEL_26;
    }
    goto LABEL_132;
  }
LABEL_131:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x40) == 0)
  {
LABEL_26:
    if ((v6 & 0x80) == 0) {
      goto LABEL_27;
    }
    goto LABEL_133;
  }
LABEL_132:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x80) == 0)
  {
LABEL_27:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_134;
  }
LABEL_133:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x8000) == 0)
  {
LABEL_28:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_135;
  }
LABEL_134:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x10000) == 0)
  {
LABEL_29:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_136;
  }
LABEL_135:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x8000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_137;
  }
LABEL_136:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x2000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_138;
  }
LABEL_137:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x1000) == 0)
  {
LABEL_32:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_139;
  }
LABEL_138:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x10000000) == 0)
  {
LABEL_33:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_140;
  }
LABEL_139:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x20000000) == 0)
  {
LABEL_34:
    if ((v6 & 0x200) == 0) {
      goto LABEL_35;
    }
    goto LABEL_141;
  }
LABEL_140:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x200) == 0)
  {
LABEL_35:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_142;
  }
LABEL_141:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x1000000) == 0)
  {
LABEL_36:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_143;
  }
LABEL_142:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x2000) == 0)
  {
LABEL_37:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_144;
  }
LABEL_143:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x4000000) == 0)
  {
LABEL_38:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_145;
  }
LABEL_144:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x80000) == 0)
  {
LABEL_39:
    if ((v6 & 0x2000000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_146;
  }
LABEL_145:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x2000000000) == 0)
  {
LABEL_40:
    if ((v6 & 0x200000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_147;
  }
LABEL_146:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x200000000) == 0)
  {
LABEL_41:
    if ((v6 & 0x4000000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_148;
  }
LABEL_147:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x4000000000) == 0)
  {
LABEL_42:
    if ((v6 & 0x400000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_149;
  }
LABEL_148:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x400000000) == 0)
  {
LABEL_43:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_150;
  }
LABEL_149:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x40000000) == 0)
  {
LABEL_44:
    if ((v6 & 0x800) == 0) {
      goto LABEL_45;
    }
    goto LABEL_151;
  }
LABEL_150:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x800) == 0)
  {
LABEL_45:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_152;
  }
LABEL_151:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x100000) == 0)
  {
LABEL_46:
    if ((v6 & 0x8000000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_153;
  }
LABEL_152:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x8000000000) == 0)
  {
LABEL_47:
    if ((v6 & 0x800000000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_154;
  }
LABEL_153:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x800000000) == 0)
  {
LABEL_48:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_155;
  }
LABEL_154:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x20000) == 0)
  {
LABEL_49:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_156;
  }
LABEL_155:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x400000) == 0)
  {
LABEL_50:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_157;
  }
LABEL_156:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x800000) == 0)
  {
LABEL_51:
    if ((v6 & 0x20) == 0) {
      goto LABEL_52;
    }
    goto LABEL_158;
  }
LABEL_157:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x20) == 0)
  {
LABEL_52:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_159;
  }
LABEL_158:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x40000) == 0)
  {
LABEL_53:
    if ((v6 & 0x40000000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_160;
  }
LABEL_159:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x40000000000) == 0)
  {
LABEL_54:
    if ((v6 & 0x10000000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_161;
  }
LABEL_160:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x10000000000) == 0)
  {
LABEL_55:
    if ((v6 & 0x20000000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_162;
  }
LABEL_161:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x20000000000) == 0)
  {
LABEL_56:
    if ((v6 & 0x100000000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_163;
  }
LABEL_162:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x100000000) == 0)
  {
LABEL_57:
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_164;
  }
LABEL_163:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x80000000) == 0)
  {
LABEL_58:
    if ((v5 & 0x20000000000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_165;
  }
LABEL_164:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x20000000000000) == 0)
  {
LABEL_59:
    if ((v5 & 0x40000000000000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_166;
  }
LABEL_165:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x40000000000000) == 0)
  {
LABEL_60:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_167;
  }
LABEL_166:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x4000000) == 0)
  {
LABEL_61:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_168;
  }
LABEL_167:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x8000000) == 0)
  {
LABEL_62:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_169;
  }
LABEL_168:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x20000) == 0)
  {
LABEL_63:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_170;
  }
LABEL_169:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x4000) == 0)
  {
LABEL_64:
    if ((v5 & 0x2000000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_171;
  }
LABEL_170:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x2000000000) == 0)
  {
LABEL_65:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_172;
  }
LABEL_171:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x80000) == 0)
  {
LABEL_66:
    if ((v5 & 0x1000000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_173;
  }
LABEL_172:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x1000000000) == 0)
  {
LABEL_67:
    if ((v5 & 0x4000000000000000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_174;
  }
LABEL_173:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x4000000000000000) == 0)
  {
LABEL_68:
    if ((v5 & 0x8000000000000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_175;
  }
LABEL_174:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 288));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x8000000000000000) == 0)
  {
LABEL_69:
    if ((v5 & 0x200000000000000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_176;
  }
LABEL_175:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 292));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x200000000000000) == 0)
  {
LABEL_70:
    if ((v5 & 0x800000000000000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_177;
  }
LABEL_176:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 268));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x800000000000000) == 0)
  {
LABEL_71:
    if ((v5 & 0x2000000000000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_178;
  }
LABEL_177:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x2000000000000000) == 0)
  {
LABEL_72:
    if ((v6 & 0x400) == 0) {
      goto LABEL_73;
    }
    goto LABEL_179;
  }
LABEL_178:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x400) == 0)
  {
LABEL_73:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_180;
  }
LABEL_179:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x4000) == 0)
  {
LABEL_74:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_181;
  }
LABEL_180:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x1000) == 0)
  {
LABEL_75:
    if ((v5 & 0x100000000000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_182;
  }
LABEL_181:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 88));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x100000000000) == 0)
  {
LABEL_76:
    if ((v5 & 0x100000000000000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_183;
  }
LABEL_182:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x100000000000000) == 0)
  {
LABEL_77:
    if ((v5 & 0x40) == 0) {
      goto LABEL_78;
    }
    goto LABEL_184;
  }
LABEL_183:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x40) == 0)
  {
LABEL_78:
    if ((v5 & 0x800000000000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_185;
  }
LABEL_184:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x800000000000) == 0)
  {
LABEL_79:
    if ((v5 & 0x1000000000000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_186;
  }
LABEL_185:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x1000000000000) == 0)
  {
LABEL_80:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_187;
  }
LABEL_186:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x100000) == 0)
  {
LABEL_81:
    if ((v5 & 0x400) == 0) {
      goto LABEL_82;
    }
    goto LABEL_188;
  }
LABEL_187:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 120));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x400) == 0)
  {
LABEL_82:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_189;
  }
LABEL_188:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x200000) == 0)
  {
LABEL_83:
    if ((v5 & 0x800) == 0) {
      goto LABEL_84;
    }
    goto LABEL_190;
  }
LABEL_189:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 124));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x800) == 0)
  {
LABEL_84:
    if ((v5 & 0x100) == 0) {
      goto LABEL_85;
    }
    goto LABEL_191;
  }
LABEL_190:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x100) == 0)
  {
LABEL_85:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_86;
    }
    goto LABEL_192;
  }
LABEL_191:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x200000) == 0)
  {
LABEL_86:
    if ((v6 & 4) == 0) {
      goto LABEL_87;
    }
    goto LABEL_193;
  }
LABEL_192:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 4) == 0)
  {
LABEL_87:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_88;
    }
    goto LABEL_194;
  }
LABEL_193:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x10000000) == 0)
  {
LABEL_88:
    if ((v5 & 0x40000000) == 0) {
      goto LABEL_89;
    }
    goto LABEL_195;
  }
LABEL_194:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x40000000) == 0)
  {
LABEL_89:
    if ((v6 & 0x1000000000) == 0) {
      goto LABEL_90;
    }
    goto LABEL_196;
  }
LABEL_195:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x1000000000) == 0)
  {
LABEL_90:
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_91;
    }
    goto LABEL_197;
  }
LABEL_196:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x80000000) == 0)
  {
LABEL_91:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_92;
    }
    goto LABEL_198;
  }
LABEL_197:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x20000000) == 0)
  {
LABEL_92:
    if ((v5 & 0x8000000000000) == 0) {
      goto LABEL_93;
    }
    goto LABEL_199;
  }
LABEL_198:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x8000000000000) == 0)
  {
LABEL_93:
    if ((v5 & 0x4000000000) == 0) {
      goto LABEL_94;
    }
    goto LABEL_200;
  }
LABEL_199:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 244));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x4000000000) == 0)
  {
LABEL_94:
    if ((v5 & 0x8000000000) == 0) {
      goto LABEL_95;
    }
    goto LABEL_201;
  }
LABEL_200:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x8000000000) == 0)
  {
LABEL_95:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_96;
    }
    goto LABEL_202;
  }
LABEL_201:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x8000) == 0)
  {
LABEL_96:
    if ((v5 & 0x40000000000) == 0) {
      goto LABEL_97;
    }
    goto LABEL_203;
  }
LABEL_202:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 100));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x40000000000) == 0)
  {
LABEL_97:
    if ((v5 & 0x10000000000) == 0) {
      goto LABEL_98;
    }
    goto LABEL_204;
  }
LABEL_203:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x10000000000) == 0)
  {
LABEL_98:
    if ((v5 & 0x800000000) == 0) {
      goto LABEL_99;
    }
    goto LABEL_205;
  }
LABEL_204:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x800000000) == 0)
  {
LABEL_99:
    if ((v5 & 0x100000000) == 0) {
      goto LABEL_100;
    }
    goto LABEL_206;
  }
LABEL_205:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x100000000) == 0)
  {
LABEL_100:
    if ((v5 & 0x400000000) == 0) {
      goto LABEL_101;
    }
    goto LABEL_207;
  }
LABEL_206:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x400000000) == 0)
  {
LABEL_101:
    if ((v6 & 0x100) == 0) {
      goto LABEL_102;
    }
    goto LABEL_208;
  }
LABEL_207:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x100) == 0)
  {
LABEL_102:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_103;
    }
    goto LABEL_209;
  }
LABEL_208:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  if ((v4[1] & 0x40000) == 0)
  {
LABEL_103:
    if ((v5 & 0x200000000) == 0) {
      goto LABEL_105;
    }
    goto LABEL_104;
  }
LABEL_209:
  uint64_t result = PB::Writer::write(this);
  if ((*v4 & 0x200000000) != 0) {
LABEL_104:
  }
    uint64_t result = PB::Writer::writeVarInt(this);
LABEL_105:
  uint64_t v7 = *v4;
  if ((*v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    uint64_t v7 = *v4;
    if ((*v4 & 0x20) == 0)
    {
LABEL_107:
      if ((v7 & 4) == 0) {
        goto LABEL_108;
      }
      goto LABEL_213;
    }
  }
  else if ((v7 & 0x20) == 0)
  {
    goto LABEL_107;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v7 = *v4;
  if ((*v4 & 4) == 0)
  {
LABEL_108:
    if ((v7 & 8) == 0) {
      goto LABEL_109;
    }
    goto LABEL_214;
  }
LABEL_213:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v7 = *v4;
  if ((*v4 & 8) == 0)
  {
LABEL_109:
    if ((v7 & 0x10) == 0) {
      goto LABEL_110;
    }
    goto LABEL_215;
  }
LABEL_214:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v7 = *v4;
  if ((*v4 & 0x10) == 0)
  {
LABEL_110:
    if ((v7 & 0x2000000000000) == 0) {
      goto LABEL_111;
    }
LABEL_216:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*v4 & 0x2000) == 0) {
      return result;
    }
    goto LABEL_217;
  }
LABEL_215:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v7 = *v4;
  if ((*v4 & 0x2000000000000) != 0) {
    goto LABEL_216;
  }
LABEL_111:
  if ((v7 & 0x2000) == 0) {
    return result;
  }
LABEL_217:
  float v8 = *(float *)(v3 + 92);

  return PB::Writer::write(this, v8);
}

double sub_227B7D048(uint64_t a1)
{
  *(void *)a1 = &unk_26DC20FF8;
  *(_DWORD *)(a1 + 204) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(void *)(a1 + 120) = 0;
  return result;
}

void sub_227B7D090(PB::Base *this)
{
  *(void *)this = &unk_26DC20FF8;
  unint64_t v2 = (void *)*((void *)this + 13);
  if (v2)
  {
    *((void *)this + 14) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 10);
  if (v3)
  {
    *((void *)this + 11) = v3;
    operator delete(v3);
  }
  int v4 = (void *)*((void *)this + 7);
  if (v4)
  {
    *((void *)this + 8) = v4;
    operator delete(v4);
  }
  uint64_t v5 = (void *)*((void *)this + 4);
  if (v5)
  {
    *((void *)this + 5) = v5;
    operator delete(v5);
  }
  uint64_t v6 = (void *)*((void *)this + 1);
  if (v6)
  {
    *((void *)this + 2) = v6;
    operator delete(v6);
  }

  PB::Base::~Base(this);
}

void sub_227B7D134(PB::Base *a1)
{
  sub_227B7D090(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B7D16C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC20FF8;
  *(_OWORD *)(a1 + 8) = 0u;
  int v4 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 56) = 0u;
  uint64_t v5 = (char *)(a1 + 56);
  *(_OWORD *)(a1 + 104) = 0u;
  uint64_t v6 = (char *)(a1 + 104);
  *(_DWORD *)(a1 + 204) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(void *)(a1 + 120) = 0;
  __int16 v7 = *(_WORD *)(a2 + 204);
  if ((v7 & 0x1000) != 0)
  {
    int v9 = *(_DWORD *)(a2 + 196);
    __int16 v8 = 4096;
    *(_WORD *)(a1 + 204) = 4096;
    *(_DWORD *)(a1 + 196) = v9;
    __int16 v7 = *(_WORD *)(a2 + 204);
    if ((v7 & 0x800) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v8 = 0;
  if ((*(_WORD *)(a2 + 204) & 0x800) != 0)
  {
LABEL_5:
    int v10 = *(_DWORD *)(a2 + 192);
    v8 |= 0x800u;
    *(_WORD *)(a1 + 204) = v8;
    *(_DWORD *)(a1 + 192) = v10;
    __int16 v7 = *(_WORD *)(a2 + 204);
  }
LABEL_6:
  if ((v7 & 0x10) != 0)
  {
    uint64_t v13 = *(void *)(a2 + 160);
    v8 |= 0x10u;
    *(_WORD *)(a1 + 204) = v8;
    *(void *)(a1 + 160) = v13;
    __int16 v7 = *(_WORD *)(a2 + 204);
    if ((v7 & 0x4000) == 0)
    {
LABEL_8:
      if ((v7 & 0x400) == 0) {
        goto LABEL_9;
      }
      goto LABEL_25;
    }
  }
  else if ((v7 & 0x4000) == 0)
  {
    goto LABEL_8;
  }
  char v14 = *(unsigned char *)(a2 + 201);
  v8 |= 0x4000u;
  *(_WORD *)(a1 + 204) = v8;
  *(unsigned char *)(a1 + 201) = v14;
  __int16 v7 = *(_WORD *)(a2 + 204);
  if ((v7 & 0x400) == 0)
  {
LABEL_9:
    if ((v7 & 0x2000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_25:
  int v15 = *(_DWORD *)(a2 + 188);
  v8 |= 0x400u;
  *(_WORD *)(a1 + 204) = v8;
  *(_DWORD *)(a1 + 188) = v15;
  __int16 v7 = *(_WORD *)(a2 + 204);
  if ((v7 & 0x2000) == 0)
  {
LABEL_10:
    if ((v7 & 4) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  char v16 = *(unsigned char *)(a2 + 200);
  v8 |= 0x2000u;
  *(_WORD *)(a1 + 204) = v8;
  *(unsigned char *)(a1 + 200) = v16;
  __int16 v7 = *(_WORD *)(a2 + 204);
  if ((v7 & 4) == 0)
  {
LABEL_11:
    if ((v7 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t v17 = *(void *)(a2 + 144);
  v8 |= 4u;
  *(_WORD *)(a1 + 204) = v8;
  *(void *)(a1 + 144) = v17;
  __int16 v7 = *(_WORD *)(a2 + 204);
  if ((v7 & 8) == 0)
  {
LABEL_12:
    if ((v7 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t v18 = *(void *)(a2 + 152);
  v8 |= 8u;
  *(_WORD *)(a1 + 204) = v8;
  *(void *)(a1 + 152) = v18;
  __int16 v7 = *(_WORD *)(a2 + 204);
  if ((v7 & 0x100) == 0)
  {
LABEL_13:
    if ((v7 & 0x80) == 0) {
      goto LABEL_14;
    }
    goto LABEL_30;
  }
LABEL_29:
  int v19 = *(_DWORD *)(a2 + 180);
  v8 |= 0x100u;
  *(_WORD *)(a1 + 204) = v8;
  *(_DWORD *)(a1 + 180) = v19;
  __int16 v7 = *(_WORD *)(a2 + 204);
  if ((v7 & 0x80) == 0)
  {
LABEL_14:
    if ((v7 & 0x40) == 0) {
      goto LABEL_15;
    }
    goto LABEL_31;
  }
LABEL_30:
  int v20 = *(_DWORD *)(a2 + 176);
  v8 |= 0x80u;
  *(_WORD *)(a1 + 204) = v8;
  *(_DWORD *)(a1 + 176) = v20;
  __int16 v7 = *(_WORD *)(a2 + 204);
  if ((v7 & 0x40) == 0)
  {
LABEL_15:
    if ((v7 & 1) == 0) {
      goto LABEL_16;
    }
    goto LABEL_32;
  }
LABEL_31:
  int v21 = *(_DWORD *)(a2 + 172);
  v8 |= 0x40u;
  *(_WORD *)(a1 + 204) = v8;
  *(_DWORD *)(a1 + 172) = v21;
  __int16 v7 = *(_WORD *)(a2 + 204);
  if ((v7 & 1) == 0)
  {
LABEL_16:
    if ((v7 & 2) == 0) {
      goto LABEL_17;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t v22 = *(void *)(a2 + 128);
  v8 |= 1u;
  *(_WORD *)(a1 + 204) = v8;
  *(void *)(a1 + 128) = v22;
  __int16 v7 = *(_WORD *)(a2 + 204);
  if ((v7 & 2) == 0)
  {
LABEL_17:
    if ((v7 & 0x200) == 0) {
      goto LABEL_18;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t v23 = *(void *)(a2 + 136);
  v8 |= 2u;
  *(_WORD *)(a1 + 204) = v8;
  *(void *)(a1 + 136) = v23;
  __int16 v7 = *(_WORD *)(a2 + 204);
  if ((v7 & 0x200) == 0)
  {
LABEL_18:
    if ((v7 & 0x20) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_34:
  int v24 = *(_DWORD *)(a2 + 184);
  v8 |= 0x200u;
  *(_WORD *)(a1 + 204) = v8;
  *(_DWORD *)(a1 + 184) = v24;
  if ((*(_WORD *)(a2 + 204) & 0x20) != 0)
  {
LABEL_19:
    int v11 = *(_DWORD *)(a2 + 168);
    *(_WORD *)(a1 + 204) = v8 | 0x20;
    *(_DWORD *)(a1 + 168) = v11;
  }
LABEL_20:
  if (a1 != a2)
  {
    sub_227B8B74C((char *)(a1 + 80), *(char **)(a2 + 80), *(void *)(a2 + 88), (uint64_t)(*(void *)(a2 + 88) - *(void *)(a2 + 80)) >> 3);
    sub_227B8B74C(v6, *(char **)(a2 + 104), *(void *)(a2 + 112), (uint64_t)(*(void *)(a2 + 112) - *(void *)(a2 + 104)) >> 3);
    sub_227B8BA68(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
    sub_227B8BA68(v5, *(char **)(a2 + 56), *(void *)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 2);
    sub_227B8BA68((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
  }
  return a1;
}

uint64_t sub_227B7D410(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 204);
  if ((v5 & 0x20) != 0)
  {
    PB::TextFormatter::format(this, "deltaGravity", *(float *)(a1 + 168));
    __int16 v5 = *(_WORD *)(a1 + 204);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_33;
    }
  }
  else if ((v5 & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "epochFirstTimestamp");
  __int16 v5 = *(_WORD *)(a1 + 204);
  if ((v5 & 2) == 0)
  {
LABEL_4:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(this, "epochLastTimestamp");
  __int16 v5 = *(_WORD *)(a1 + 204);
  if ((v5 & 0x2000) == 0)
  {
LABEL_5:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "isSlowRollDetected");
  __int16 v5 = *(_WORD *)(a1 + 204);
  if ((v5 & 0x4000) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "isSpinDetected");
  __int16 v5 = *(_WORD *)(a1 + 204);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "maxDeltaAngleLong", *(float *)(a1 + 172));
  __int16 v5 = *(_WORD *)(a1 + 204);
  if ((v5 & 0x80) == 0)
  {
LABEL_8:
    if ((v5 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_37:
  PB::TextFormatter::format(this, "maxDeltaAngleShort", *(float *)(a1 + 176));
  if ((*(_WORD *)(a1 + 204) & 0x100) != 0) {
LABEL_9:
  }
    PB::TextFormatter::format(this, "slowRollCumCoherentAngle", *(float *)(a1 + 180));
LABEL_10:
  uint64_t v6 = *(float **)(a1 + 8);
  __int16 v7 = *(float **)(a1 + 16);
  while (v6 != v7)
  {
    float v8 = *v6++;
    PB::TextFormatter::format(this, "slowRollSegmentMaxAxisVariance", v8);
  }
  int v9 = *(float **)(a1 + 32);
  int v10 = *(float **)(a1 + 40);
  while (v9 != v10)
  {
    float v11 = *v9++;
    PB::TextFormatter::format(this, "slowRollSegmentMaxFiltRotRate", v11);
  }
  uint64_t v12 = *(float **)(a1 + 56);
  uint64_t v13 = *(float **)(a1 + 64);
  while (v12 != v13)
  {
    float v14 = *v12++;
    PB::TextFormatter::format(this, "slowRollSegmentMinFiltRotRate", v14);
  }
  uint64_t v15 = *(void *)(a1 + 80);
  uint64_t v16 = *(void *)(a1 + 88);
  while (v15 != v16)
  {
    v15 += 8;
    PB::TextFormatter::format(this, "slowRollSegmentStartTimes");
  }
  uint64_t v17 = *(void *)(a1 + 104);
  uint64_t v18 = *(void *)(a1 + 112);
  while (v17 != v18)
  {
    v17 += 8;
    PB::TextFormatter::format(this, "slowRollSegmentStopTimes");
  }
  __int16 v19 = *(_WORD *)(a1 + 204);
  if ((v19 & 4) != 0)
  {
    PB::TextFormatter::format(this, "slowRollStartTime");
    __int16 v19 = *(_WORD *)(a1 + 204);
    if ((v19 & 8) == 0)
    {
LABEL_22:
      if ((v19 & 0x200) == 0) {
        goto LABEL_23;
      }
      goto LABEL_41;
    }
  }
  else if ((v19 & 8) == 0)
  {
    goto LABEL_22;
  }
  PB::TextFormatter::format(this, "slowRollStopTime");
  __int16 v19 = *(_WORD *)(a1 + 204);
  if ((v19 & 0x200) == 0)
  {
LABEL_23:
    if ((v19 & 0x400) == 0) {
      goto LABEL_24;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "spatialSamplingCount");
  __int16 v19 = *(_WORD *)(a1 + 204);
  if ((v19 & 0x400) == 0)
  {
LABEL_24:
    if ((v19 & 0x800) == 0) {
      goto LABEL_25;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "spinCumulativeRotation", *(float *)(a1 + 188));
  __int16 v19 = *(_WORD *)(a1 + 204);
  if ((v19 & 0x800) == 0)
  {
LABEL_25:
    if ((v19 & 0x1000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "spinCumulativeRotationThresholdDegrees", *(float *)(a1 + 192));
  __int16 v19 = *(_WORD *)(a1 + 204);
  if ((v19 & 0x1000) == 0)
  {
LABEL_26:
    if ((v19 & 0x10) == 0) {
      goto LABEL_28;
    }
    goto LABEL_27;
  }
LABEL_44:
  PB::TextFormatter::format(this, "spinGravityAngleThresholdDegrees", *(float *)(a1 + 196));
  if ((*(_WORD *)(a1 + 204) & 0x10) != 0) {
LABEL_27:
  }
    PB::TextFormatter::format(this, "timestamp");
LABEL_28:

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227B7D720(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    float v8 = (void **)(a1 + 32);
    int v9 = (void **)(a1 + 56);
    uint64_t v281 = a1 + 72;
    uint64_t v282 = a1 + 48;
    int v10 = (void **)(a1 + 8);
    uint64_t v11 = a1 + 24;
    uint64_t v12 = (void *)(a1 + 120);
    int v279 = (void **)(a1 + 80);
    BOOL v280 = (void **)(a1 + 104);
    uint64_t v13 = (void *)(a1 + 96);
    while (1)
    {
      uint64_t v14 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v17 = 0;
      while (1)
      {
        unint64_t v18 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v19 = *(unsigned char *)(v14 + v2);
        v17 |= (unint64_t)(v19 & 0x7F) << v15;
        if ((v19 & 0x80) == 0) {
          break;
        }
        v15 += 7;
        unint64_t v2 = v18;
        BOOL v102 = v16++ > 8;
        if (v102) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v25 = v17 & 7;
      if (v25 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v26 = v17 >> 3;
      if ((int)(v17 >> 3) > 200)
      {
        switch((int)v26)
        {
          case 201:
            *(_WORD *)(a1 + 204) |= 1u;
            unint64_t v35 = *((void *)this + 1);
            unint64_t v36 = *((void *)this + 2);
            uint64_t v37 = *(void *)this;
            if (v35 <= 0xFFFFFFFFFFFFFFF5 && v35 + 10 <= v36)
            {
              char v38 = 0;
              unsigned int v39 = 0;
              uint64_t v40 = 0;
              do
              {
                unint64_t v41 = v35 + 1;
                *((void *)this + 1) = v35 + 1;
                char v42 = *(unsigned char *)(v37 + v35);
                v40 |= (unint64_t)(v42 & 0x7F) << v38;
                if ((v42 & 0x80) == 0) {
                  goto LABEL_368;
                }
                v38 += 7;
                unint64_t v35 = v41;
                BOOL v102 = v39++ > 8;
              }
              while (!v102);
LABEL_271:
              uint64_t v40 = 0;
              goto LABEL_368;
            }
            char v183 = 0;
            unsigned int v184 = 0;
            uint64_t v40 = 0;
            if (v36 <= v35) {
              unint64_t v36 = *((void *)this + 1);
            }
            while (2)
            {
              if (v36 == v35)
              {
                uint64_t v40 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v185 = v35 + 1;
                char v186 = *(unsigned char *)(v37 + v35);
                *((void *)this + 1) = v185;
                v40 |= (unint64_t)(v186 & 0x7F) << v183;
                if (v186 < 0)
                {
                  v183 += 7;
                  unint64_t v35 = v185;
                  BOOL v102 = v184++ > 8;
                  if (v102) {
                    goto LABEL_271;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v40 = 0;
                }
              }
              break;
            }
LABEL_368:
            *(void *)(a1 + 128) = v40;
            goto LABEL_455;
          case 202:
            *(_WORD *)(a1 + 204) |= 2u;
            unint64_t v72 = *((void *)this + 1);
            unint64_t v73 = *((void *)this + 2);
            uint64_t v74 = *(void *)this;
            if (v72 <= 0xFFFFFFFFFFFFFFF5 && v72 + 10 <= v73)
            {
              char v75 = 0;
              unsigned int v76 = 0;
              uint64_t v77 = 0;
              do
              {
                unint64_t v78 = v72 + 1;
                *((void *)this + 1) = v72 + 1;
                char v79 = *(unsigned char *)(v74 + v72);
                v77 |= (unint64_t)(v79 & 0x7F) << v75;
                if ((v79 & 0x80) == 0) {
                  goto LABEL_377;
                }
                v75 += 7;
                unint64_t v72 = v78;
                BOOL v102 = v76++ > 8;
              }
              while (!v102);
LABEL_296:
              uint64_t v77 = 0;
              goto LABEL_377;
            }
            char v195 = 0;
            unsigned int v196 = 0;
            uint64_t v77 = 0;
            if (v73 <= v72) {
              unint64_t v73 = *((void *)this + 1);
            }
            while (2)
            {
              if (v73 == v72)
              {
                uint64_t v77 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v197 = v72 + 1;
                char v198 = *(unsigned char *)(v74 + v72);
                *((void *)this + 1) = v197;
                v77 |= (unint64_t)(v198 & 0x7F) << v195;
                if (v198 < 0)
                {
                  v195 += 7;
                  unint64_t v72 = v197;
                  BOOL v102 = v196++ > 8;
                  if (v102) {
                    goto LABEL_296;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v77 = 0;
                }
              }
              break;
            }
LABEL_377:
            *(void *)(a1 + 136) = v77;
            goto LABEL_455;
          case 203:
            *(_WORD *)(a1 + 204) |= 0x200u;
            unint64_t v80 = *((void *)this + 1);
            unint64_t v81 = *((void *)this + 2);
            uint64_t v82 = *(void *)this;
            if (v80 <= 0xFFFFFFFFFFFFFFF5 && v80 + 10 <= v81)
            {
              char v83 = 0;
              unsigned int v84 = 0;
              uint64_t v85 = 0;
              do
              {
                unint64_t v86 = v80 + 1;
                *((void *)this + 1) = v80 + 1;
                char v87 = *(unsigned char *)(v82 + v80);
                v85 |= (unint64_t)(v87 & 0x7F) << v83;
                if ((v87 & 0x80) == 0) {
                  goto LABEL_380;
                }
                v83 += 7;
                unint64_t v80 = v86;
                BOOL v102 = v84++ > 8;
              }
              while (!v102);
LABEL_303:
              LODWORD(v85) = 0;
              goto LABEL_380;
            }
            char v199 = 0;
            unsigned int v200 = 0;
            uint64_t v85 = 0;
            if (v81 <= v80) {
              unint64_t v81 = *((void *)this + 1);
            }
            while (2)
            {
              if (v81 == v80)
              {
                LODWORD(v85) = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v201 = v80 + 1;
                char v202 = *(unsigned char *)(v82 + v80);
                *((void *)this + 1) = v201;
                v85 |= (unint64_t)(v202 & 0x7F) << v199;
                if (v202 < 0)
                {
                  v199 += 7;
                  unint64_t v80 = v201;
                  BOOL v102 = v200++ > 8;
                  if (v102) {
                    goto LABEL_303;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v85) = 0;
                }
              }
              break;
            }
LABEL_380:
            *(_DWORD *)(a1 + 184) = v85;
            goto LABEL_455;
          case 204:
            *(_WORD *)(a1 + 204) |= 0x20u;
            unint64_t v88 = *((void *)this + 1);
            if (v88 > 0xFFFFFFFFFFFFFFFBLL || v88 + 4 > *((void *)this + 2)) {
              break;
            }
            *(_DWORD *)(a1 + 168) = *(_DWORD *)(*(void *)this + v88);
            goto LABEL_454;
          case 205:
            if (v25 == 2)
            {
              if (PB::Reader::placeMark()) {
                return 0;
              }
              if (*((void *)this + 1) < *((void *)this + 2) && !*((unsigned char *)this + 24))
              {
                unsigned int v89 = *(char **)(a1 + 88);
                do
                {
                  if ((unint64_t)v89 >= *v13)
                  {
                    uint64_t v90 = (char *)*v279;
                    uint64_t v91 = (v89 - (unsigned char *)*v279) >> 3;
                    unint64_t v92 = v91 + 1;
                    if ((unint64_t)(v91 + 1) >> 61) {
                      goto LABEL_468;
                    }
                    uint64_t v93 = *v13 - (void)v90;
                    if (v93 >> 2 > v92) {
                      unint64_t v92 = v93 >> 2;
                    }
                    if ((unint64_t)v93 >= 0x7FFFFFFFFFFFFFF8) {
                      unint64_t v94 = 0x1FFFFFFFFFFFFFFFLL;
                    }
                    else {
                      unint64_t v94 = v92;
                    }
                    if (v94)
                    {
                      int v95 = (char *)sub_227B8B8B4((uint64_t)v13, v94);
                      uint64_t v90 = *(char **)(a1 + 80);
                      unsigned int v89 = *(char **)(a1 + 88);
                    }
                    else
                    {
                      int v95 = 0;
                    }
                    BOOL v96 = &v95[8 * v91];
                    *(void *)BOOL v96 = 0;
                    unint64_t v97 = v96 + 8;
                    while (v89 != v90)
                    {
                      uint64_t v98 = *((void *)v89 - 1);
                      v89 -= 8;
                      *((void *)v96 - 1) = v98;
                      v96 -= 8;
                    }
                    *(void *)(a1 + 80) = v96;
                    *(void *)(a1 + 88) = v97;
                    *(void *)(a1 + 96) = &v95[8 * v94];
                    if (v90) {
                      operator delete(v90);
                    }
                    unsigned int v89 = v97;
                  }
                  else
                  {
                    *(void *)unsigned int v89 = 0;
                    v89 += 8;
                  }
                  *(void *)(a1 + 88) = v89;
                  unint64_t v100 = *((void *)this + 1);
                  unint64_t v99 = *((void *)this + 2);
                  uint64_t v101 = *(void *)this;
                  BOOL v102 = v100 > 0xFFFFFFFFFFFFFFF5 || v100 + 10 > v99;
                  if (v102)
                  {
                    char v103 = 0;
                    unsigned int v104 = 0;
                    uint64_t v110 = 0;
                    if (v99 <= v100) {
                      uint64_t v105 = *((void *)this + 1);
                    }
                    else {
                      uint64_t v105 = *((void *)this + 2);
                    }
                    while (1)
                    {
                      if (v105 == v100) {
                        goto LABEL_315;
                      }
                      unint64_t v106 = v100++;
                      char v107 = *(unsigned char *)(v101 + v106);
                      *((void *)this + 1) = v100;
                      v110 |= (unint64_t)(v107 & 0x7F) << v103;
                      if ((v107 & 0x80) == 0) {
                        break;
                      }
                      v103 += 7;
                      BOOL v102 = v104++ > 8;
                      if (v102)
                      {
                        uint64_t v110 = 0;
                        goto LABEL_132;
                      }
                    }
                    if (*((unsigned char *)this + 24)) {
                      uint64_t v110 = 0;
                    }
LABEL_132:
                    unint64_t v111 = v106 + 1;
                  }
                  else
                  {
                    char v108 = 0;
                    unsigned int v109 = 0;
                    uint64_t v110 = 0;
                    while (1)
                    {
                      unint64_t v111 = v100 + 1;
                      *((void *)this + 1) = v100 + 1;
                      char v112 = *(unsigned char *)(v101 + v100);
                      v110 |= (unint64_t)(v112 & 0x7F) << v108;
                      if ((v112 & 0x80) == 0) {
                        break;
                      }
                      v108 += 7;
                      unint64_t v100 = v111;
                      BOOL v102 = v109++ > 8;
                      if (v102)
                      {
                        uint64_t v110 = 0;
                        break;
                      }
                    }
                  }
                  *((void *)v89 - 1) = v110;
                }
                while (v111 < v99 && !*((unsigned char *)this + 24));
              }
              goto LABEL_316;
            }
            char v204 = *(char **)(a1 + 88);
            unint64_t v203 = *(void *)(a1 + 96);
            if ((unint64_t)v204 >= v203)
            {
              unint64_t v215 = (char *)*v279;
              uint64_t v216 = (v204 - (unsigned char *)*v279) >> 3;
              unint64_t v217 = v216 + 1;
              if ((unint64_t)(v216 + 1) >> 61) {
LABEL_468:
              }
                sub_227B8B89C();
              uint64_t v218 = v203 - (void)v215;
              if (v218 >> 2 > v217) {
                unint64_t v217 = v218 >> 2;
              }
              if ((unint64_t)v218 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v219 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v219 = v217;
              }
              if (v219)
              {
                BOOL v220 = (char *)sub_227B8B8B4((uint64_t)v13, v219);
                unint64_t v215 = *(char **)(a1 + 80);
                char v204 = *(char **)(a1 + 88);
              }
              else
              {
                BOOL v220 = 0;
              }
              unsigned int v245 = &v220[8 * v216];
              *(void *)unsigned int v245 = 0;
              unsigned int v205 = v245 + 8;
              while (v204 != v215)
              {
                uint64_t v246 = *((void *)v204 - 1);
                v204 -= 8;
                *((void *)v245 - 1) = v246;
                v245 -= 8;
              }
              *(void *)(a1 + 80) = v245;
              *(void *)(a1 + 88) = v205;
              *(void *)(a1 + 96) = &v220[8 * v219];
              if (v215) {
                operator delete(v215);
              }
            }
            else
            {
              *(void *)char v204 = 0;
              unsigned int v205 = v204 + 8;
            }
            *(void *)(a1 + 88) = v205;
            unint64_t v247 = *((void *)this + 1);
            unint64_t v248 = *((void *)this + 2);
            uint64_t v249 = *(void *)this;
            char v250 = 0;
            unsigned int v251 = 0;
            if (v247 <= 0xFFFFFFFFFFFFFFF5 && v247 + 10 <= v248)
            {
              uint64_t v255 = 0;
              while (1)
              {
                unint64_t v256 = v247 + 1;
                *((void *)this + 1) = v247 + 1;
                char v257 = *(unsigned char *)(v249 + v247);
                v255 |= (unint64_t)(v257 & 0x7F) << v250;
                if ((v257 & 0x80) == 0) {
                  goto LABEL_428;
                }
                v250 += 7;
                unint64_t v247 = v256;
                BOOL v102 = v251++ > 8;
                if (v102) {
                  goto LABEL_424;
                }
              }
            }
            uint64_t v255 = 0;
            if (v248 <= v247) {
              unint64_t v248 = *((void *)this + 1);
            }
            while (v248 != v247)
            {
              unint64_t v253 = v247 + 1;
              char v254 = *(unsigned char *)(v249 + v247);
              *((void *)this + 1) = v253;
              v255 |= (unint64_t)(v254 & 0x7F) << v250;
              if ((v254 & 0x80) == 0) {
                goto LABEL_426;
              }
              v250 += 7;
              unint64_t v247 = v253;
              BOOL v102 = v251++ > 8;
              if (v102) {
                goto LABEL_424;
              }
            }
            goto LABEL_425;
          case 206:
            if (v25 != 2)
            {
              unint64_t v207 = *(char **)(a1 + 112);
              unint64_t v206 = *(void *)(a1 + 120);
              if ((unint64_t)v207 >= v206)
              {
                unint64_t v221 = (char *)*v280;
                uint64_t v222 = (v207 - (unsigned char *)*v280) >> 3;
                unint64_t v223 = v222 + 1;
                if ((unint64_t)(v222 + 1) >> 61) {
LABEL_469:
                }
                  sub_227B8B89C();
                uint64_t v224 = v206 - (void)v221;
                if (v224 >> 2 > v223) {
                  unint64_t v223 = v224 >> 2;
                }
                if ((unint64_t)v224 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v225 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v225 = v223;
                }
                if (v225)
                {
                  unint64_t v226 = (char *)sub_227B8B8B4((uint64_t)v12, v225);
                  unint64_t v221 = *(char **)(a1 + 104);
                  unint64_t v207 = *(char **)(a1 + 112);
                }
                else
                {
                  unint64_t v226 = 0;
                }
                unint64_t v258 = &v226[8 * v222];
                *(void *)unint64_t v258 = 0;
                unsigned int v205 = v258 + 8;
                while (v207 != v221)
                {
                  uint64_t v259 = *((void *)v207 - 1);
                  v207 -= 8;
                  *((void *)v258 - 1) = v259;
                  v258 -= 8;
                }
                *(void *)(a1 + 104) = v258;
                *(void *)(a1 + 112) = v205;
                *(void *)(a1 + 120) = &v226[8 * v225];
                if (v221) {
                  operator delete(v221);
                }
              }
              else
              {
                *(void *)unint64_t v207 = 0;
                unsigned int v205 = v207 + 8;
              }
              *(void *)(a1 + 112) = v205;
              unint64_t v260 = *((void *)this + 1);
              unint64_t v261 = *((void *)this + 2);
              uint64_t v262 = *(void *)this;
              char v263 = 0;
              unsigned int v264 = 0;
              if (v260 > 0xFFFFFFFFFFFFFFF5 || v260 + 10 > v261)
              {
                uint64_t v255 = 0;
                if (v261 <= v260) {
                  unint64_t v261 = *((void *)this + 1);
                }
                while (v261 != v260)
                {
                  unint64_t v266 = v260 + 1;
                  char v267 = *(unsigned char *)(v262 + v260);
                  *((void *)this + 1) = v266;
                  v255 |= (unint64_t)(v267 & 0x7F) << v263;
                  if ((v267 & 0x80) == 0)
                  {
LABEL_426:
                    if (*((unsigned char *)this + 24)) {
                      uint64_t v255 = 0;
                    }
                    goto LABEL_428;
                  }
                  v263 += 7;
                  unint64_t v260 = v266;
                  BOOL v102 = v264++ > 8;
                  if (v102)
                  {
LABEL_424:
                    uint64_t v255 = 0;
                    goto LABEL_428;
                  }
                }
LABEL_425:
                uint64_t v255 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                uint64_t v255 = 0;
                while (1)
                {
                  unint64_t v268 = v260 + 1;
                  *((void *)this + 1) = v260 + 1;
                  char v269 = *(unsigned char *)(v262 + v260);
                  v255 |= (unint64_t)(v269 & 0x7F) << v263;
                  if ((v269 & 0x80) == 0) {
                    break;
                  }
                  v263 += 7;
                  unint64_t v260 = v268;
                  BOOL v102 = v264++ > 8;
                  if (v102) {
                    goto LABEL_424;
                  }
                }
              }
LABEL_428:
              *(v205 - 1) = v255;
              goto LABEL_455;
            }
            if (PB::Reader::placeMark()) {
              return 0;
            }
            if (*((void *)this + 1) < *((void *)this + 2) && !*((unsigned char *)this + 24))
            {
              unsigned int v89 = *(char **)(a1 + 112);
              do
              {
                if ((unint64_t)v89 >= *v12)
                {
                  unint64_t v113 = (char *)*v280;
                  uint64_t v114 = (v89 - (unsigned char *)*v280) >> 3;
                  unint64_t v115 = v114 + 1;
                  if ((unint64_t)(v114 + 1) >> 61) {
                    goto LABEL_469;
                  }
                  uint64_t v116 = *v12 - (void)v113;
                  if (v116 >> 2 > v115) {
                    unint64_t v115 = v116 >> 2;
                  }
                  if ((unint64_t)v116 >= 0x7FFFFFFFFFFFFFF8) {
                    unint64_t v117 = 0x1FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v117 = v115;
                  }
                  if (v117)
                  {
                    BOOL v118 = (char *)sub_227B8B8B4((uint64_t)v12, v117);
                    unint64_t v113 = *(char **)(a1 + 104);
                    unsigned int v89 = *(char **)(a1 + 112);
                  }
                  else
                  {
                    BOOL v118 = 0;
                  }
                  unint64_t v119 = &v118[8 * v114];
                  *(void *)unint64_t v119 = 0;
                  unint64_t v120 = v119 + 8;
                  while (v89 != v113)
                  {
                    uint64_t v121 = *((void *)v89 - 1);
                    v89 -= 8;
                    *((void *)v119 - 1) = v121;
                    v119 -= 8;
                  }
                  *(void *)(a1 + 104) = v119;
                  *(void *)(a1 + 112) = v120;
                  *(void *)(a1 + 120) = &v118[8 * v117];
                  if (v113) {
                    operator delete(v113);
                  }
                  unsigned int v89 = v120;
                }
                else
                {
                  *(void *)unsigned int v89 = 0;
                  v89 += 8;
                }
                *(void *)(a1 + 112) = v89;
                unint64_t v123 = *((void *)this + 1);
                unint64_t v122 = *((void *)this + 2);
                uint64_t v124 = *(void *)this;
                if (v123 <= 0xFFFFFFFFFFFFFFF5 && v123 + 10 <= v122)
                {
                  char v131 = 0;
                  unsigned int v132 = 0;
                  uint64_t v133 = 0;
                  while (1)
                  {
                    unint64_t v134 = v123 + 1;
                    *((void *)this + 1) = v123 + 1;
                    char v135 = *(unsigned char *)(v124 + v123);
                    v133 |= (unint64_t)(v135 & 0x7F) << v131;
                    if ((v135 & 0x80) == 0) {
                      goto LABEL_178;
                    }
                    v131 += 7;
                    unint64_t v123 = v134;
                    BOOL v102 = v132++ > 8;
                    if (v102)
                    {
                      uint64_t v133 = 0;
                      goto LABEL_178;
                    }
                  }
                }
                char v126 = 0;
                unsigned int v127 = 0;
                uint64_t v133 = 0;
                if (v122 <= v123) {
                  uint64_t v128 = *((void *)this + 1);
                }
                else {
                  uint64_t v128 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v128 == v123)
                  {
LABEL_315:
                    *((unsigned char *)this + 24) = 1;
                    *((void *)v89 - 1) = 0;
                    goto LABEL_316;
                  }
                  unint64_t v129 = v123++;
                  char v130 = *(unsigned char *)(v124 + v129);
                  *((void *)this + 1) = v123;
                  v133 |= (unint64_t)(v130 & 0x7F) << v126;
                  if ((v130 & 0x80) == 0) {
                    break;
                  }
                  v126 += 7;
                  BOOL v102 = v127++ > 8;
                  if (v102)
                  {
                    uint64_t v133 = 0;
                    goto LABEL_177;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v133 = 0;
                }
LABEL_177:
                unint64_t v134 = v129 + 1;
LABEL_178:
                *((void *)v89 - 1) = v133;
              }
              while (v134 < v122 && !*((unsigned char *)this + 24));
            }
            goto LABEL_316;
          case 207:
            if (v25 != 2)
            {
              unint64_t v209 = *(char **)(a1 + 16);
              unint64_t v208 = *(void *)(a1 + 24);
              if ((unint64_t)v209 >= v208)
              {
                uint64_t v227 = (char *)*v10;
                uint64_t v228 = (v209 - (unsigned char *)*v10) >> 2;
                unint64_t v229 = v228 + 1;
                if ((unint64_t)(v228 + 1) >> 62) {
LABEL_465:
                }
                  sub_227B8B89C();
                uint64_t v230 = v208 - (void)v227;
                if (v230 >> 1 > v229) {
                  unint64_t v229 = v230 >> 1;
                }
                if ((unint64_t)v230 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v231 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v231 = v229;
                }
                if (v231)
                {
                  char v232 = (char *)sub_227B8BBB8(v11, v231);
                  uint64_t v227 = *(char **)(a1 + 8);
                  unint64_t v209 = *(char **)(a1 + 16);
                }
                else
                {
                  char v232 = 0;
                }
                unint64_t v270 = &v232[4 * v228];
                *(_DWORD *)unint64_t v270 = 0;
                unint64_t v210 = v270 + 4;
                while (v209 != v227)
                {
                  int v271 = *((_DWORD *)v209 - 1);
                  v209 -= 4;
                  *((_DWORD *)v270 - 1) = v271;
                  v270 -= 4;
                }
                *(void *)(a1 + 8) = v270;
                *(void *)(a1 + 16) = v210;
                *(void *)(a1 + 24) = &v232[4 * v231];
                if (v227) {
                  operator delete(v227);
                }
              }
              else
              {
                *(_DWORD *)unint64_t v209 = 0;
                unint64_t v210 = v209 + 4;
              }
              *(void *)(a1 + 16) = v210;
              goto LABEL_450;
            }
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v136 = *((void *)this + 1);
            unint64_t v137 = *((void *)this + 2);
            while (v136 < v137 && !*((unsigned char *)this + 24))
            {
              unint64_t v139 = *(char **)(a1 + 16);
              unint64_t v138 = *(void *)(a1 + 24);
              if ((unint64_t)v139 >= v138)
              {
                unint64_t v141 = (char *)*v10;
                uint64_t v142 = (v139 - (unsigned char *)*v10) >> 2;
                unint64_t v143 = v142 + 1;
                if ((unint64_t)(v142 + 1) >> 62) {
                  goto LABEL_465;
                }
                uint64_t v144 = v138 - (void)v141;
                if (v144 >> 1 > v143) {
                  unint64_t v143 = v144 >> 1;
                }
                if ((unint64_t)v144 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v145 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v145 = v143;
                }
                if (v145)
                {
                  uint64_t v146 = (char *)sub_227B8BBB8(v11, v145);
                  unint64_t v141 = *(char **)(a1 + 8);
                  unint64_t v139 = *(char **)(a1 + 16);
                }
                else
                {
                  uint64_t v146 = 0;
                }
                unint64_t v147 = &v146[4 * v142];
                *(_DWORD *)unint64_t v147 = 0;
                unint64_t v140 = v147 + 4;
                while (v139 != v141)
                {
                  int v148 = *((_DWORD *)v139 - 1);
                  v139 -= 4;
                  *((_DWORD *)v147 - 1) = v148;
                  v147 -= 4;
                }
                *(void *)(a1 + 8) = v147;
                *(void *)(a1 + 16) = v140;
                *(void *)(a1 + 24) = &v146[4 * v145];
                if (v141) {
                  operator delete(v141);
                }
              }
              else
              {
                *(_DWORD *)unint64_t v139 = 0;
                unint64_t v140 = v139 + 4;
              }
              *(void *)(a1 + 16) = v140;
              unint64_t v149 = *((void *)this + 1);
              if (v149 > 0xFFFFFFFFFFFFFFFBLL || v149 + 4 > *((void *)this + 2)) {
                goto LABEL_314;
              }
              *(v140 - 1) = *(_DWORD *)(*(void *)this + v149);
              unint64_t v137 = *((void *)this + 2);
              unint64_t v136 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v136;
            }
            goto LABEL_316;
          case 208:
            if (v25 != 2)
            {
              char v212 = *(char **)(a1 + 64);
              unint64_t v211 = *(void *)(a1 + 72);
              if ((unint64_t)v212 >= v211)
              {
                unint64_t v233 = (char *)*v9;
                uint64_t v234 = (v212 - (unsigned char *)*v9) >> 2;
                unint64_t v235 = v234 + 1;
                if ((unint64_t)(v234 + 1) >> 62) {
LABEL_466:
                }
                  sub_227B8B89C();
                uint64_t v236 = v211 - (void)v233;
                if (v236 >> 1 > v235) {
                  unint64_t v235 = v236 >> 1;
                }
                if ((unint64_t)v236 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v237 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v237 = v235;
                }
                if (v237)
                {
                  uint64_t v238 = (char *)sub_227B8BBB8(v281, v237);
                  unint64_t v233 = *(char **)(a1 + 56);
                  char v212 = *(char **)(a1 + 64);
                }
                else
                {
                  uint64_t v238 = 0;
                }
                BOOL v272 = &v238[4 * v234];
                *(_DWORD *)BOOL v272 = 0;
                unint64_t v210 = v272 + 4;
                while (v212 != v233)
                {
                  int v273 = *((_DWORD *)v212 - 1);
                  v212 -= 4;
                  *((_DWORD *)v272 - 1) = v273;
                  v272 -= 4;
                }
                *(void *)(a1 + 56) = v272;
                *(void *)(a1 + 64) = v210;
                *(void *)(a1 + 72) = &v238[4 * v237];
                if (v233) {
                  operator delete(v233);
                }
              }
              else
              {
                *(_DWORD *)char v212 = 0;
                unint64_t v210 = v212 + 4;
              }
              *(void *)(a1 + 64) = v210;
              goto LABEL_450;
            }
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v150 = *((void *)this + 1);
            unint64_t v151 = *((void *)this + 2);
            while (v150 < v151 && !*((unsigned char *)this + 24))
            {
              unsigned int v153 = *(char **)(a1 + 64);
              unint64_t v152 = *(void *)(a1 + 72);
              if ((unint64_t)v153 >= v152)
              {
                unint64_t v155 = (char *)*v9;
                uint64_t v156 = (v153 - (unsigned char *)*v9) >> 2;
                unint64_t v157 = v156 + 1;
                if ((unint64_t)(v156 + 1) >> 62) {
                  goto LABEL_466;
                }
                uint64_t v158 = v152 - (void)v155;
                if (v158 >> 1 > v157) {
                  unint64_t v157 = v158 >> 1;
                }
                if ((unint64_t)v158 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v159 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v159 = v157;
                }
                if (v159)
                {
                  unint64_t v160 = (char *)sub_227B8BBB8(v281, v159);
                  unint64_t v155 = *(char **)(a1 + 56);
                  unsigned int v153 = *(char **)(a1 + 64);
                }
                else
                {
                  unint64_t v160 = 0;
                }
                unint64_t v161 = &v160[4 * v156];
                *(_DWORD *)unint64_t v161 = 0;
                uint64_t v154 = v161 + 4;
                while (v153 != v155)
                {
                  int v162 = *((_DWORD *)v153 - 1);
                  v153 -= 4;
                  *((_DWORD *)v161 - 1) = v162;
                  v161 -= 4;
                }
                *(void *)(a1 + 56) = v161;
                *(void *)(a1 + 64) = v154;
                *(void *)(a1 + 72) = &v160[4 * v159];
                if (v155) {
                  operator delete(v155);
                }
              }
              else
              {
                *(_DWORD *)unsigned int v153 = 0;
                uint64_t v154 = v153 + 4;
              }
              *(void *)(a1 + 64) = v154;
              unint64_t v163 = *((void *)this + 1);
              if (v163 > 0xFFFFFFFFFFFFFFFBLL || v163 + 4 > *((void *)this + 2)) {
                goto LABEL_314;
              }
              *(v154 - 1) = *(_DWORD *)(*(void *)this + v163);
              unint64_t v151 = *((void *)this + 2);
              unint64_t v150 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v150;
            }
            goto LABEL_316;
          case 209:
            if (v25 == 2)
            {
              if (PB::Reader::placeMark()) {
                return 0;
              }
              unint64_t v164 = *((void *)this + 1);
              unint64_t v165 = *((void *)this + 2);
              while (v164 < v165 && !*((unsigned char *)this + 24))
              {
                char v167 = *(char **)(a1 + 40);
                unint64_t v166 = *(void *)(a1 + 48);
                if ((unint64_t)v167 >= v166)
                {
                  unint64_t v169 = (char *)*v8;
                  uint64_t v170 = (v167 - (unsigned char *)*v8) >> 2;
                  unint64_t v171 = v170 + 1;
                  if ((unint64_t)(v170 + 1) >> 62) {
                    goto LABEL_467;
                  }
                  uint64_t v172 = v166 - (void)v169;
                  if (v172 >> 1 > v171) {
                    unint64_t v171 = v172 >> 1;
                  }
                  if ((unint64_t)v172 >= 0x7FFFFFFFFFFFFFFCLL) {
                    unint64_t v173 = 0x3FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v173 = v171;
                  }
                  if (v173)
                  {
                    unint64_t v174 = (char *)sub_227B8BBB8(v282, v173);
                    unint64_t v169 = *(char **)(a1 + 32);
                    char v167 = *(char **)(a1 + 40);
                  }
                  else
                  {
                    unint64_t v174 = 0;
                  }
                  char v175 = &v174[4 * v170];
                  *(_DWORD *)char v175 = 0;
                  unint64_t v168 = v175 + 4;
                  while (v167 != v169)
                  {
                    int v176 = *((_DWORD *)v167 - 1);
                    v167 -= 4;
                    *((_DWORD *)v175 - 1) = v176;
                    v175 -= 4;
                  }
                  *(void *)(a1 + 32) = v175;
                  *(void *)(a1 + 40) = v168;
                  *(void *)(a1 + 48) = &v174[4 * v173];
                  if (v169) {
                    operator delete(v169);
                  }
                }
                else
                {
                  *(_DWORD *)char v167 = 0;
                  unint64_t v168 = v167 + 4;
                }
                *(void *)(a1 + 40) = v168;
                unint64_t v177 = *((void *)this + 1);
                if (v177 > 0xFFFFFFFFFFFFFFFBLL || v177 + 4 > *((void *)this + 2))
                {
LABEL_314:
                  *((unsigned char *)this + 24) = 1;
                  break;
                }
                *(v168 - 1) = *(_DWORD *)(*(void *)this + v177);
                unint64_t v165 = *((void *)this + 2);
                unint64_t v164 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v164;
              }
LABEL_316:
              PB::Reader::recallMark();
              goto LABEL_455;
            }
            uint64_t v214 = *(char **)(a1 + 40);
            unint64_t v213 = *(void *)(a1 + 48);
            if ((unint64_t)v214 >= v213)
            {
              unint64_t v239 = (char *)*v8;
              uint64_t v240 = (v214 - (unsigned char *)*v8) >> 2;
              unint64_t v241 = v240 + 1;
              if ((unint64_t)(v240 + 1) >> 62) {
LABEL_467:
              }
                sub_227B8B89C();
              uint64_t v242 = v213 - (void)v239;
              if (v242 >> 1 > v241) {
                unint64_t v241 = v242 >> 1;
              }
              if ((unint64_t)v242 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v243 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v243 = v241;
              }
              if (v243)
              {
                char v244 = (char *)sub_227B8BBB8(v282, v243);
                unint64_t v239 = *(char **)(a1 + 32);
                uint64_t v214 = *(char **)(a1 + 40);
              }
              else
              {
                char v244 = 0;
              }
              unint64_t v274 = &v244[4 * v240];
              *(_DWORD *)unint64_t v274 = 0;
              unint64_t v210 = v274 + 4;
              while (v214 != v239)
              {
                int v275 = *((_DWORD *)v214 - 1);
                v214 -= 4;
                *((_DWORD *)v274 - 1) = v275;
                v274 -= 4;
              }
              *(void *)(a1 + 32) = v274;
              *(void *)(a1 + 40) = v210;
              *(void *)(a1 + 48) = &v244[4 * v243];
              if (v239) {
                operator delete(v239);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v214 = 0;
              unint64_t v210 = v214 + 4;
            }
            *(void *)(a1 + 40) = v210;
LABEL_450:
            unint64_t v276 = *((void *)this + 1);
            if (v276 <= 0xFFFFFFFFFFFFFFFBLL && v276 + 4 <= *((void *)this + 2))
            {
              *(v210 - 1) = *(_DWORD *)(*(void *)this + v276);
              goto LABEL_454;
            }
            break;
          default:
            goto LABEL_256;
        }
      }
      else
      {
        switch((int)v26)
        {
          case 'e':
            *(_WORD *)(a1 + 204) |= 0x10u;
            unint64_t v27 = *((void *)this + 1);
            unint64_t v28 = *((void *)this + 2);
            uint64_t v29 = *(void *)this;
            if (v27 <= 0xFFFFFFFFFFFFFFF5 && v27 + 10 <= v28)
            {
              char v30 = 0;
              unsigned int v31 = 0;
              uint64_t v32 = 0;
              do
              {
                unint64_t v33 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v34 = *(unsigned char *)(v29 + v27);
                v32 |= (unint64_t)(v34 & 0x7F) << v30;
                if ((v34 & 0x80) == 0) {
                  goto LABEL_365;
                }
                v30 += 7;
                unint64_t v27 = v33;
                BOOL v102 = v31++ > 8;
              }
              while (!v102);
LABEL_264:
              uint64_t v32 = 0;
              goto LABEL_365;
            }
            char v179 = 0;
            unsigned int v180 = 0;
            uint64_t v32 = 0;
            if (v28 <= v27) {
              unint64_t v28 = *((void *)this + 1);
            }
            while (2)
            {
              if (v28 == v27)
              {
                uint64_t v32 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v181 = v27 + 1;
                char v182 = *(unsigned char *)(v29 + v27);
                *((void *)this + 1) = v181;
                v32 |= (unint64_t)(v182 & 0x7F) << v179;
                if (v182 < 0)
                {
                  v179 += 7;
                  unint64_t v27 = v181;
                  BOOL v102 = v180++ > 8;
                  if (v102) {
                    goto LABEL_264;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v32 = 0;
                }
              }
              break;
            }
LABEL_365:
            *(void *)(a1 + 160) = v32;
            goto LABEL_455;
          case 'f':
            *(_WORD *)(a1 + 204) |= 0x4000u;
            unint64_t v44 = *((void *)this + 1);
            if (v44 >= *((void *)this + 2))
            {
              BOOL v47 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v45 = v44 + 1;
              int v46 = *(unsigned __int8 *)(*(void *)this + v44);
              *((void *)this + 1) = v45;
              BOOL v47 = v46 != 0;
            }
            *(unsigned char *)(a1 + 201) = v47;
            goto LABEL_455;
          case 'g':
            *(_WORD *)(a1 + 204) |= 0x400u;
            unint64_t v48 = *((void *)this + 1);
            if (v48 > 0xFFFFFFFFFFFFFFFBLL || v48 + 4 > *((void *)this + 2)) {
              break;
            }
            *(_DWORD *)(a1 + 188) = *(_DWORD *)(*(void *)this + v48);
            goto LABEL_454;
          case 'h':
            *(_WORD *)(a1 + 204) |= 0x2000u;
            unint64_t v49 = *((void *)this + 1);
            if (v49 >= *((void *)this + 2))
            {
              BOOL v52 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v50 = v49 + 1;
              int v51 = *(unsigned __int8 *)(*(void *)this + v49);
              *((void *)this + 1) = v50;
              BOOL v52 = v51 != 0;
            }
            *(unsigned char *)(a1 + 200) = v52;
            goto LABEL_455;
          case 'i':
            *(_WORD *)(a1 + 204) |= 4u;
            unint64_t v53 = *((void *)this + 1);
            unint64_t v54 = *((void *)this + 2);
            uint64_t v55 = *(void *)this;
            if (v53 <= 0xFFFFFFFFFFFFFFF5 && v53 + 10 <= v54)
            {
              char v56 = 0;
              unsigned int v57 = 0;
              uint64_t v58 = 0;
              do
              {
                unint64_t v59 = v53 + 1;
                *((void *)this + 1) = v53 + 1;
                char v60 = *(unsigned char *)(v55 + v53);
                v58 |= (unint64_t)(v60 & 0x7F) << v56;
                if ((v60 & 0x80) == 0) {
                  goto LABEL_371;
                }
                v56 += 7;
                unint64_t v53 = v59;
                BOOL v102 = v57++ > 8;
              }
              while (!v102);
LABEL_282:
              uint64_t v58 = 0;
              goto LABEL_371;
            }
            char v187 = 0;
            unsigned int v188 = 0;
            uint64_t v58 = 0;
            if (v54 <= v53) {
              unint64_t v54 = *((void *)this + 1);
            }
            while (2)
            {
              if (v54 == v53)
              {
                uint64_t v58 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v189 = v53 + 1;
                char v190 = *(unsigned char *)(v55 + v53);
                *((void *)this + 1) = v189;
                v58 |= (unint64_t)(v190 & 0x7F) << v187;
                if (v190 < 0)
                {
                  v187 += 7;
                  unint64_t v53 = v189;
                  BOOL v102 = v188++ > 8;
                  if (v102) {
                    goto LABEL_282;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v58 = 0;
                }
              }
              break;
            }
LABEL_371:
            *(void *)(a1 + 144) = v58;
            goto LABEL_455;
          case 'j':
            *(_WORD *)(a1 + 204) |= 8u;
            unint64_t v61 = *((void *)this + 1);
            unint64_t v62 = *((void *)this + 2);
            uint64_t v63 = *(void *)this;
            if (v61 <= 0xFFFFFFFFFFFFFFF5 && v61 + 10 <= v62)
            {
              char v64 = 0;
              unsigned int v65 = 0;
              uint64_t v66 = 0;
              do
              {
                unint64_t v67 = v61 + 1;
                *((void *)this + 1) = v61 + 1;
                char v68 = *(unsigned char *)(v63 + v61);
                v66 |= (unint64_t)(v68 & 0x7F) << v64;
                if ((v68 & 0x80) == 0) {
                  goto LABEL_374;
                }
                v64 += 7;
                unint64_t v61 = v67;
                BOOL v102 = v65++ > 8;
              }
              while (!v102);
LABEL_289:
              uint64_t v66 = 0;
              goto LABEL_374;
            }
            char v191 = 0;
            unsigned int v192 = 0;
            uint64_t v66 = 0;
            if (v62 <= v61) {
              unint64_t v62 = *((void *)this + 1);
            }
            while (2)
            {
              if (v62 == v61)
              {
                uint64_t v66 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v193 = v61 + 1;
                char v194 = *(unsigned char *)(v63 + v61);
                *((void *)this + 1) = v193;
                v66 |= (unint64_t)(v194 & 0x7F) << v191;
                if (v194 < 0)
                {
                  v191 += 7;
                  unint64_t v61 = v193;
                  BOOL v102 = v192++ > 8;
                  if (v102) {
                    goto LABEL_289;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v66 = 0;
                }
              }
              break;
            }
LABEL_374:
            *(void *)(a1 + 152) = v66;
            goto LABEL_455;
          case 'k':
            *(_WORD *)(a1 + 204) |= 0x100u;
            unint64_t v69 = *((void *)this + 1);
            if (v69 > 0xFFFFFFFFFFFFFFFBLL || v69 + 4 > *((void *)this + 2)) {
              break;
            }
            *(_DWORD *)(a1 + 180) = *(_DWORD *)(*(void *)this + v69);
            goto LABEL_454;
          case 'l':
            *(_WORD *)(a1 + 204) |= 0x80u;
            unint64_t v70 = *((void *)this + 1);
            if (v70 > 0xFFFFFFFFFFFFFFFBLL || v70 + 4 > *((void *)this + 2)) {
              break;
            }
            *(_DWORD *)(a1 + 176) = *(_DWORD *)(*(void *)this + v70);
            goto LABEL_454;
          case 'm':
            *(_WORD *)(a1 + 204) |= 0x40u;
            unint64_t v71 = *((void *)this + 1);
            if (v71 > 0xFFFFFFFFFFFFFFFBLL || v71 + 4 > *((void *)this + 2)) {
              break;
            }
            *(_DWORD *)(a1 + 172) = *(_DWORD *)(*(void *)this + v71);
            goto LABEL_454;
          default:
            if (v26 == 1)
            {
              *(_WORD *)(a1 + 204) |= 0x1000u;
              unint64_t v178 = *((void *)this + 1);
              if (v178 <= 0xFFFFFFFFFFFFFFFBLL && v178 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 196) = *(_DWORD *)(*(void *)this + v178);
                goto LABEL_454;
              }
            }
            else
            {
              if (v26 != 2)
              {
LABEL_256:
                if ((PB::Reader::skip(this) & 1) == 0) {
                  return 0;
                }
                goto LABEL_455;
              }
              *(_WORD *)(a1 + 204) |= 0x800u;
              unint64_t v43 = *((void *)this + 1);
              if (v43 <= 0xFFFFFFFFFFFFFFFBLL && v43 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 192) = *(_DWORD *)(*(void *)this + v43);
LABEL_454:
                *((void *)this + 1) += 4;
                goto LABEL_455;
              }
            }
            break;
        }
      }
      *((unsigned char *)this + 24) = 1;
LABEL_455:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v17 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v22 = v2 + 1;
      char v23 = *(unsigned char *)(v14 + v2);
      *((void *)this + 1) = v22;
      v17 |= (unint64_t)(v23 & 0x7F) << v20;
      if ((v23 & 0x80) == 0) {
        goto LABEL_21;
      }
      v20 += 7;
      unint64_t v2 = v22;
      if (v21++ >= 9)
      {
LABEL_20:
        unint64_t v17 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B7ECA4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 204);
  if ((v4 & 0x1000) != 0)
  {
    double result = PB::Writer::write(this, *(float *)(result + 196));
    __int16 v4 = *(_WORD *)(v3 + 204);
    if ((v4 & 0x800) == 0)
    {
LABEL_3:
      if ((v4 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_35;
    }
  }
  else if ((*(_WORD *)(result + 204) & 0x800) == 0)
  {
    goto LABEL_3;
  }
  double result = PB::Writer::write(this, *(float *)(v3 + 192));
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 0x10) == 0)
  {
LABEL_4:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_36;
  }
LABEL_35:
  double result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 0x4000) == 0)
  {
LABEL_5:
    if ((v4 & 0x400) == 0) {
      goto LABEL_6;
    }
    goto LABEL_37;
  }
LABEL_36:
  double result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 0x400) == 0)
  {
LABEL_6:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_38;
  }
LABEL_37:
  double result = PB::Writer::write(this, *(float *)(v3 + 188));
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 0x2000) == 0)
  {
LABEL_7:
    if ((v4 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_39;
  }
LABEL_38:
  double result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 4) == 0)
  {
LABEL_8:
    if ((v4 & 8) == 0) {
      goto LABEL_9;
    }
    goto LABEL_40;
  }
LABEL_39:
  double result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 8) == 0)
  {
LABEL_9:
    if ((v4 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_41;
  }
LABEL_40:
  double result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 0x100) == 0)
  {
LABEL_10:
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_42;
  }
LABEL_41:
  double result = PB::Writer::write(this, *(float *)(v3 + 180));
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 0x80) == 0)
  {
LABEL_11:
    if ((v4 & 0x40) == 0) {
      goto LABEL_12;
    }
    goto LABEL_43;
  }
LABEL_42:
  double result = PB::Writer::write(this, *(float *)(v3 + 176));
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 0x40) == 0)
  {
LABEL_12:
    if ((v4 & 1) == 0) {
      goto LABEL_13;
    }
    goto LABEL_44;
  }
LABEL_43:
  double result = PB::Writer::write(this, *(float *)(v3 + 172));
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 1) == 0)
  {
LABEL_13:
    if ((v4 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_45;
  }
LABEL_44:
  double result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 2) == 0)
  {
LABEL_14:
    if ((v4 & 0x200) == 0) {
      goto LABEL_15;
    }
LABEL_46:
    double result = PB::Writer::writeVarInt(this);
    if ((*(_WORD *)(v3 + 204) & 0x20) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_45:
  double result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 0x200) != 0) {
    goto LABEL_46;
  }
LABEL_15:
  if ((v4 & 0x20) != 0) {
LABEL_16:
  }
    double result = PB::Writer::write(this, *(float *)(v3 + 168));
LABEL_17:
  uint64_t v5 = *(void *)(v3 + 80);
  uint64_t v6 = *(void *)(v3 + 88);
  while (v5 != v6)
  {
    v5 += 8;
    double result = PB::Writer::writeVarInt(this);
  }
  uint64_t v7 = *(void *)(v3 + 104);
  uint64_t v8 = *(void *)(v3 + 112);
  while (v7 != v8)
  {
    v7 += 8;
    double result = PB::Writer::writeVarInt(this);
  }
  int v9 = *(float **)(v3 + 8);
  int v10 = *(float **)(v3 + 16);
  while (v9 != v10)
  {
    float v11 = *v9++;
    double result = PB::Writer::write(this, v11);
  }
  uint64_t v12 = *(float **)(v3 + 56);
  uint64_t v13 = *(float **)(v3 + 64);
  while (v12 != v13)
  {
    float v14 = *v12++;
    double result = PB::Writer::write(this, v14);
  }
  unsigned int v16 = *(float **)(v3 + 32);
  char v15 = *(float **)(v3 + 40);
  while (v16 != v15)
  {
    float v17 = *v16++;
    double result = PB::Writer::write(this, v17);
  }
  return result;
}

uint64_t sub_227B7EF14(uint64_t result)
{
  *(void *)double result = &unk_26DC21030;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void sub_227B7EF3C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B7EF74(uint64_t result, uint64_t a2)
{
  *(void *)double result = &unk_26DC21030;
  *(_DWORD *)(result + 32) = 0;
  char v2 = *(unsigned char *)(a2 + 32);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 32) = 1;
    *(void *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 32) & 0x10) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 28);
    v3 |= 0x10u;
    *(unsigned char *)(result + 32) = v3;
    *(_DWORD *)(result + 28) = v5;
    char v2 = *(unsigned char *)(a2 + 32);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 20);
    v3 |= 4u;
    *(unsigned char *)(result + 32) = v3;
    *(_DWORD *)(result + 20) = v6;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 2) == 0)
    {
LABEL_8:
      if ((v2 & 8) == 0) {
        return result;
      }
LABEL_12:
      int v8 = *(_DWORD *)(a2 + 24);
      *(unsigned char *)(result + 32) = v3 | 8;
      *(_DWORD *)(result + 24) = v8;
      return result;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 16);
  v3 |= 2u;
  *(unsigned char *)(result + 32) = v3;
  *(_DWORD *)(result + 16) = v7;
  if ((*(unsigned char *)(a2 + 32) & 8) != 0) {
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_227B7F02C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "currentCadence", *(float *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 32);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 32) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "deltaSteps");
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(this, "pedometerArmConstrainedState");
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(this, "stepCount");
  if (*(unsigned char *)(a1 + 32)) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "timestamp");
LABEL_7:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B7F110(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 32) |= 1u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v45 = 0;
                unsigned int v46 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_88;
                  }
                  unint64_t v47 = v20++;
                  char v48 = *(unsigned char *)(v21 + v47);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v48 & 0x7F) << v45;
                  if ((v48 & 0x80) == 0) {
                    break;
                  }
                  v45 += 7;
                  BOOL v14 = v46++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_87;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_87:
                unint64_t v2 = v47 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_88;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_88:
              *(void *)(a1 + 8) = v24;
              goto LABEL_104;
            case 2u:
              *(unsigned char *)(a1 + 32) |= 0x10u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v49 = 0;
                unsigned int v50 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_93;
                  }
                  unint64_t v51 = v27++;
                  char v52 = *(unsigned char *)(v28 + v51);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v52 & 0x7F) << v49;
                  if ((v52 & 0x80) == 0) {
                    break;
                  }
                  v49 += 7;
                  BOOL v14 = v50++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_92:
                    unint64_t v2 = v51 + 1;
                    goto LABEL_93;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_92;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_93;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_93:
              *(_DWORD *)(a1 + 28) = v31;
              goto LABEL_104;
            case 3u:
              *(unsigned char *)(a1 + 32) |= 4u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v53 = 0;
                unsigned int v54 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_98;
                  }
                  unint64_t v55 = v33++;
                  char v56 = *(unsigned char *)(v34 + v55);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v56 & 0x7F) << v53;
                  if ((v56 & 0x80) == 0) {
                    break;
                  }
                  v53 += 7;
                  BOOL v14 = v54++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_97:
                    unint64_t v2 = v55 + 1;
                    goto LABEL_98;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_97;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_98;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_98:
              *(_DWORD *)(a1 + 20) = v37;
              goto LABEL_104;
            case 4u:
              *(unsigned char *)(a1 + 32) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_104;
            case 5u:
              *(unsigned char *)(a1 + 32) |= 8u;
              unint64_t v39 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v40 = *(void *)this;
              if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
              {
                char v57 = 0;
                unsigned int v58 = 0;
                uint64_t v43 = 0;
                if (v2 <= v39) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v39)
                  {
                    LODWORD(v43) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_103;
                  }
                  unint64_t v59 = v39++;
                  char v60 = *(unsigned char *)(v40 + v59);
                  *((void *)this + 1) = v39;
                  v43 |= (unint64_t)(v60 & 0x7F) << v57;
                  if ((v60 & 0x80) == 0) {
                    break;
                  }
                  v57 += 7;
                  BOOL v14 = v58++ > 8;
                  if (v14)
                  {
                    LODWORD(v43) = 0;
LABEL_102:
                    unint64_t v2 = v59 + 1;
                    goto LABEL_103;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v43) = 0;
                }
                goto LABEL_102;
              }
              char v41 = 0;
              unsigned int v42 = 0;
              uint64_t v43 = 0;
              do
              {
                unint64_t v2 = v39 + 1;
                *((void *)this + 1) = v39 + 1;
                char v44 = *(unsigned char *)(v40 + v39);
                v43 |= (unint64_t)(v44 & 0x7F) << v41;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_103;
                }
                v41 += 7;
                unint64_t v39 = v2;
                BOOL v14 = v42++ > 8;
              }
              while (!v14);
              LODWORD(v43) = 0;
LABEL_103:
              *(_DWORD *)(a1 + 24) = v43;
LABEL_104:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_104;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B7F694(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 32);
    if ((v4 & 0x10) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 32) & 0x10) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 2) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16));
    if ((*(unsigned char *)(v3 + 32) & 8) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 8) == 0) {
    return result;
  }
LABEL_11:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227B7F758(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC21068;
  *(_DWORD *)(result + 60) = 0;
  return result;
}

void sub_227B7F780(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B7F7B8(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC21068;
  *(_DWORD *)(result + 60) = 0;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 8) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 32);
    __int16 v3 = 8;
    *(_WORD *)(result + 60) = 8;
    *(void *)(result + 32) = v4;
    __int16 v2 = *(_WORD *)(a2 + 60);
    if ((v2 & 0x100) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((*(_WORD *)(a2 + 60) & 0x100) != 0)
  {
LABEL_5:
    char v5 = *(unsigned char *)(a2 + 56);
    v3 |= 0x100u;
    *(_WORD *)(result + 60) = v3;
    *(unsigned char *)(result + 56) = v5;
    __int16 v2 = *(_WORD *)(a2 + 60);
  }
LABEL_6:
  if ((v2 & 0x80) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 52);
    v3 |= 0x80u;
    *(_WORD *)(result + 60) = v3;
    *(_DWORD *)(result + 52) = v6;
    __int16 v2 = *(_WORD *)(a2 + 60);
    if ((v2 & 0x20) == 0)
    {
LABEL_8:
      if ((v2 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_16;
    }
  }
  else if ((v2 & 0x20) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 44);
  v3 |= 0x20u;
  *(_WORD *)(result + 60) = v3;
  *(_DWORD *)(result + 44) = v7;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x10) == 0)
  {
LABEL_9:
    if ((v2 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_17;
  }
LABEL_16:
  int v8 = *(_DWORD *)(a2 + 40);
  v3 |= 0x10u;
  *(_WORD *)(result + 60) = v3;
  *(_DWORD *)(result + 40) = v8;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x40) == 0)
  {
LABEL_10:
    if ((v2 & 4) == 0) {
      goto LABEL_11;
    }
    goto LABEL_18;
  }
LABEL_17:
  int v9 = *(_DWORD *)(a2 + 48);
  v3 |= 0x40u;
  *(_WORD *)(result + 60) = v3;
  *(_DWORD *)(result + 48) = v9;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 4) == 0)
  {
LABEL_11:
    if ((v2 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t v10 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(_WORD *)(result + 60) = v3;
  *(void *)(result + 24) = v10;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 1) == 0)
  {
LABEL_12:
    if ((v2 & 2) == 0) {
      return result;
    }
LABEL_20:
    uint64_t v12 = *(void *)(a2 + 16);
    *(_WORD *)(result + 60) = v3 | 2;
    *(void *)(result + 16) = v12;
    return result;
  }
LABEL_19:
  uint64_t v11 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(result + 60) = v3;
  *(void *)(result + 8) = v11;
  if ((*(_WORD *)(a2 + 60) & 2) != 0) {
    goto LABEL_20;
  }
  return result;
}

uint64_t sub_227B7F8E0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x10) != 0)
  {
    PB::TextFormatter::format(this, "currentCadence", *(float *)(a1 + 40));
    __int16 v5 = *(_WORD *)(a1 + 60);
    if ((v5 & 0x20) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v5 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "deltaSteps", *(float *)(a1 + 44));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 1) == 0)
  {
LABEL_4:
    if ((v5 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "epochFirstTimestamp");
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 2) == 0)
  {
LABEL_5:
    if ((v5 & 0x100) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  PB::TextFormatter::format(this, "epochLastTimestamp");
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x100) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "hasSteps");
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "pedometerArmConstrainedState");
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x80) == 0)
  {
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "stepCount", *(float *)(a1 + 52));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 4) == 0)
  {
LABEL_9:
    if ((v5 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_21:
  PB::TextFormatter::format(this, "stepCountEventTimestamp");
  if ((*(_WORD *)(a1 + 60) & 8) != 0) {
LABEL_10:
  }
    PB::TextFormatter::format(this, "timestamp");
LABEL_11:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B7FA44(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          unint64_t v20 = v11 >> 3;
          switch((v11 >> 3))
          {
            case 'e':
              *(_WORD *)(a1 + 60) |= 8u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v54 = 0;
                unsigned int v55 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    uint64_t v25 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_115;
                  }
                  unint64_t v56 = v21++;
                  char v57 = *(unsigned char *)(v22 + v56);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v57 & 0x7F) << v54;
                  if ((v57 & 0x80) == 0) {
                    break;
                  }
                  v54 += 7;
                  BOOL v14 = v55++ > 8;
                  if (v14)
                  {
                    uint64_t v25 = 0;
                    goto LABEL_114;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v25 = 0;
                }
LABEL_114:
                unint64_t v2 = v56 + 1;
              }
              else
              {
                char v23 = 0;
                unsigned int v24 = 0;
                uint64_t v25 = 0;
                do
                {
                  unint64_t v2 = v21 + 1;
                  *((void *)this + 1) = v21 + 1;
                  char v26 = *(unsigned char *)(v22 + v21);
                  v25 |= (unint64_t)(v26 & 0x7F) << v23;
                  if ((v26 & 0x80) == 0) {
                    goto LABEL_115;
                  }
                  v23 += 7;
                  unint64_t v21 = v2;
                  BOOL v14 = v24++ > 8;
                }
                while (!v14);
                uint64_t v25 = 0;
              }
LABEL_115:
              *(void *)(a1 + 32) = v25;
              goto LABEL_136;
            case 'f':
              *(_WORD *)(a1 + 60) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v34 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v33 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v34 = v33 != 0;
              }
              *(unsigned char *)(a1 + 56) = v34;
              goto LABEL_136;
            case 'g':
              *(_WORD *)(a1 + 60) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_48;
              }
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_110;
            case 'h':
              *(_WORD *)(a1 + 60) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_48;
              }
              *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_110;
            case 'i':
              *(_WORD *)(a1 + 60) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
LABEL_110:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_48:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_136;
            case 'j':
              *(_WORD *)(a1 + 60) |= 0x40u;
              unint64_t v35 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v36 = *(void *)this;
              if (v35 > 0xFFFFFFFFFFFFFFF5 || v35 + 10 > v2)
              {
                char v62 = 0;
                unsigned int v63 = 0;
                uint64_t v39 = 0;
                if (v2 <= v35) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v35)
                  {
                    LODWORD(v39) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_125;
                  }
                  unint64_t v64 = v35++;
                  char v65 = *(unsigned char *)(v36 + v64);
                  *((void *)this + 1) = v35;
                  v39 |= (unint64_t)(v65 & 0x7F) << v62;
                  if ((v65 & 0x80) == 0) {
                    break;
                  }
                  v62 += 7;
                  BOOL v14 = v63++ > 8;
                  if (v14)
                  {
                    LODWORD(v39) = 0;
LABEL_124:
                    unint64_t v2 = v64 + 1;
                    goto LABEL_125;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v39) = 0;
                }
                goto LABEL_124;
              }
              char v37 = 0;
              unsigned int v38 = 0;
              uint64_t v39 = 0;
              do
              {
                unint64_t v2 = v35 + 1;
                *((void *)this + 1) = v35 + 1;
                char v40 = *(unsigned char *)(v36 + v35);
                v39 |= (unint64_t)(v40 & 0x7F) << v37;
                if ((v40 & 0x80) == 0) {
                  goto LABEL_125;
                }
                v37 += 7;
                unint64_t v35 = v2;
                BOOL v14 = v38++ > 8;
              }
              while (!v14);
              LODWORD(v39) = 0;
LABEL_125:
              *(_DWORD *)(a1 + 48) = v39;
              goto LABEL_136;
            case 'k':
              *(_WORD *)(a1 + 60) |= 4u;
              unint64_t v41 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v42 = *(void *)this;
              if (v41 > 0xFFFFFFFFFFFFFFF5 || v41 + 10 > v2)
              {
                char v66 = 0;
                unsigned int v67 = 0;
                uint64_t v45 = 0;
                if (v2 <= v41) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v41)
                  {
                    uint64_t v45 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_130;
                  }
                  unint64_t v68 = v41++;
                  char v69 = *(unsigned char *)(v42 + v68);
                  *((void *)this + 1) = v41;
                  v45 |= (unint64_t)(v69 & 0x7F) << v66;
                  if ((v69 & 0x80) == 0) {
                    break;
                  }
                  v66 += 7;
                  BOOL v14 = v67++ > 8;
                  if (v14)
                  {
                    uint64_t v45 = 0;
LABEL_129:
                    unint64_t v2 = v68 + 1;
                    goto LABEL_130;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v45 = 0;
                }
                goto LABEL_129;
              }
              char v43 = 0;
              unsigned int v44 = 0;
              uint64_t v45 = 0;
              do
              {
                unint64_t v2 = v41 + 1;
                *((void *)this + 1) = v41 + 1;
                char v46 = *(unsigned char *)(v42 + v41);
                v45 |= (unint64_t)(v46 & 0x7F) << v43;
                if ((v46 & 0x80) == 0) {
                  goto LABEL_130;
                }
                v43 += 7;
                unint64_t v41 = v2;
                BOOL v14 = v44++ > 8;
              }
              while (!v14);
              uint64_t v45 = 0;
LABEL_130:
              *(void *)(a1 + 24) = v45;
              goto LABEL_136;
            default:
              if (v20 == 201)
              {
                *(_WORD *)(a1 + 60) |= 1u;
                unint64_t v47 = *((void *)this + 1);
                unint64_t v2 = *((void *)this + 2);
                uint64_t v48 = *(void *)this;
                if (v47 > 0xFFFFFFFFFFFFFFF5 || v47 + 10 > v2)
                {
                  char v70 = 0;
                  unsigned int v71 = 0;
                  uint64_t v51 = 0;
                  if (v2 <= v47) {
                    unint64_t v2 = *((void *)this + 1);
                  }
                  while (1)
                  {
                    if (v2 == v47)
                    {
                      uint64_t v51 = 0;
                      *((unsigned char *)this + 24) = 1;
                      goto LABEL_135;
                    }
                    unint64_t v72 = v47++;
                    char v73 = *(unsigned char *)(v48 + v72);
                    *((void *)this + 1) = v47;
                    v51 |= (unint64_t)(v73 & 0x7F) << v70;
                    if ((v73 & 0x80) == 0) {
                      break;
                    }
                    v70 += 7;
                    BOOL v14 = v71++ > 8;
                    if (v14)
                    {
                      uint64_t v51 = 0;
                      goto LABEL_134;
                    }
                  }
                  if (*((unsigned char *)this + 24)) {
                    uint64_t v51 = 0;
                  }
LABEL_134:
                  unint64_t v2 = v72 + 1;
                }
                else
                {
                  char v49 = 0;
                  unsigned int v50 = 0;
                  uint64_t v51 = 0;
                  while (1)
                  {
                    unint64_t v2 = v47 + 1;
                    *((void *)this + 1) = v47 + 1;
                    char v52 = *(unsigned char *)(v48 + v47);
                    v51 |= (unint64_t)(v52 & 0x7F) << v49;
                    if ((v52 & 0x80) == 0) {
                      break;
                    }
                    v49 += 7;
                    unint64_t v47 = v2;
                    BOOL v14 = v50++ > 8;
                    if (v14)
                    {
                      uint64_t v51 = 0;
                      break;
                    }
                  }
                }
LABEL_135:
                *(void *)(a1 + 8) = v51;
              }
              else if (v20 == 202)
              {
                *(_WORD *)(a1 + 60) |= 2u;
                unint64_t v27 = *((void *)this + 1);
                unint64_t v2 = *((void *)this + 2);
                uint64_t v28 = *(void *)this;
                if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
                {
                  char v58 = 0;
                  unsigned int v59 = 0;
                  uint64_t v31 = 0;
                  if (v2 <= v27) {
                    unint64_t v2 = *((void *)this + 1);
                  }
                  while (1)
                  {
                    if (v2 == v27)
                    {
                      uint64_t v31 = 0;
                      *((unsigned char *)this + 24) = 1;
                      goto LABEL_120;
                    }
                    unint64_t v60 = v27++;
                    char v61 = *(unsigned char *)(v28 + v60);
                    *((void *)this + 1) = v27;
                    v31 |= (unint64_t)(v61 & 0x7F) << v58;
                    if ((v61 & 0x80) == 0) {
                      break;
                    }
                    v58 += 7;
                    BOOL v14 = v59++ > 8;
                    if (v14)
                    {
                      uint64_t v31 = 0;
                      goto LABEL_119;
                    }
                  }
                  if (*((unsigned char *)this + 24)) {
                    uint64_t v31 = 0;
                  }
LABEL_119:
                  unint64_t v2 = v60 + 1;
                }
                else
                {
                  char v29 = 0;
                  unsigned int v30 = 0;
                  uint64_t v31 = 0;
                  while (1)
                  {
                    unint64_t v2 = v27 + 1;
                    *((void *)this + 1) = v27 + 1;
                    char v32 = *(unsigned char *)(v28 + v27);
                    v31 |= (unint64_t)(v32 & 0x7F) << v29;
                    if ((v32 & 0x80) == 0) {
                      break;
                    }
                    v29 += 7;
                    unint64_t v27 = v2;
                    BOOL v14 = v30++ > 8;
                    if (v14)
                    {
                      uint64_t v31 = 0;
                      break;
                    }
                  }
                }
LABEL_120:
                *(void *)(a1 + 16) = v31;
              }
              else
              {
                uint64_t result = PB::Reader::skip(this);
                if (!result) {
                  return result;
                }
                unint64_t v2 = *((void *)this + 1);
              }
LABEL_136:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B80180(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 60);
  if ((v4 & 8) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    __int16 v4 = *(_WORD *)(v3 + 60);
    if ((v4 & 0x100) == 0)
    {
LABEL_3:
      if ((v4 & 0x80) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((*(_WORD *)(result + 60) & 0x100) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x80) == 0)
  {
LABEL_4:
    if ((v4 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x20) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44));
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x40) == 0)
  {
LABEL_7:
    if ((v4 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 4) == 0)
  {
LABEL_8:
    if ((v4 & 1) == 0) {
      goto LABEL_9;
    }
LABEL_18:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(_WORD *)(v3 + 60) & 2) == 0) {
      return result;
    }
    goto LABEL_19;
  }
LABEL_17:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if (v4) {
    goto LABEL_18;
  }
LABEL_9:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_19:

  return PB::Writer::writeVarInt(this);
}

double sub_227B802B4(uint64_t a1)
{
  *(void *)a1 = &unk_26DC210A0;
  *(_DWORD *)(a1 + 212) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)(a1 + 72) = 0;
  return result;
}

void sub_227B802F0(PB::Base *this)
{
  *(void *)this = &unk_26DC210A0;
  unint64_t v2 = (void *)*((void *)this + 7);
  if (v2)
  {
    *((void *)this + 8) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 4);
  if (v3)
  {
    *((void *)this + 5) = v3;
    operator delete(v3);
  }
  __int16 v4 = (void *)*((void *)this + 1);
  if (v4)
  {
    *((void *)this + 2) = v4;
    operator delete(v4);
  }

  PB::Base::~Base(this);
}

void sub_227B80374(PB::Base *a1)
{
  sub_227B802F0(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B803AC(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 8) = 0u;
  __int16 v4 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)a1 = &unk_26DC210A0;
  *(_DWORD *)(a1 + 212) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 72) = 0;
  int v5 = *(_DWORD *)(a2 + 212);
  if ((v5 & 4) != 0)
  {
    uint64_t v7 = *(void *)(a2 + 96);
    int v6 = 4;
    *(_DWORD *)(a1 + 212) = 4;
    *(void *)(a1 + 96) = v7;
    int v5 = *(_DWORD *)(a2 + 212);
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_6;
    }
  }
  else
  {
    int v6 = 0;
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_6;
    }
  }
  char v8 = *(unsigned char *)(a2 + 211);
  v6 |= 0x80000000;
  *(_DWORD *)(a1 + 212) = v6;
  *(unsigned char *)(a1 + 211) = v8;
  int v5 = *(_DWORD *)(a2 + 212);
LABEL_6:
  if (v5)
  {
    uint64_t v9 = *(void *)(a2 + 80);
    *(_DWORD *)(a1 + 212) = v6 | 1;
    *(void *)(a1 + 80) = v9;
  }
  if (a1 != a2)
  {
    sub_227B8B74C(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
    sub_227B8BA68((char *)(a1 + 56), *(char **)(a2 + 56), *(void *)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 2);
    sub_227B8BA68((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
  }
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x10000000) != 0)
  {
    char v13 = *(unsigned char *)(a2 + 208);
    *(_DWORD *)(a1 + 212) |= 0x10000000u;
    *(unsigned char *)(a1 + 208) = v13;
    int v10 = *(_DWORD *)(a2 + 212);
    if ((v10 & 0x20000000) == 0)
    {
LABEL_12:
      if ((v10 & 0x400000) == 0) {
        goto LABEL_13;
      }
      goto LABEL_43;
    }
  }
  else if ((v10 & 0x20000000) == 0)
  {
    goto LABEL_12;
  }
  char v14 = *(unsigned char *)(a2 + 209);
  *(_DWORD *)(a1 + 212) |= 0x20000000u;
  *(unsigned char *)(a1 + 209) = v14;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x400000) == 0)
  {
LABEL_13:
    if ((v10 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_44;
  }
LABEL_43:
  int v15 = *(_DWORD *)(a2 + 184);
  *(_DWORD *)(a1 + 212) |= 0x400000u;
  *(_DWORD *)(a1 + 184) = v15;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x10) == 0)
  {
LABEL_14:
    if ((v10 & 0x80000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_45;
  }
LABEL_44:
  int v16 = *(_DWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 212) |= 0x10u;
  *(_DWORD *)(a1 + 112) = v16;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x80000) == 0)
  {
LABEL_15:
    if ((v10 & 0x40000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_46;
  }
LABEL_45:
  int v17 = *(_DWORD *)(a2 + 172);
  *(_DWORD *)(a1 + 212) |= 0x80000u;
  *(_DWORD *)(a1 + 172) = v17;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x40000) == 0)
  {
LABEL_16:
    if ((v10 & 0x20000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_47;
  }
LABEL_46:
  int v18 = *(_DWORD *)(a2 + 168);
  *(_DWORD *)(a1 + 212) |= 0x40000u;
  *(_DWORD *)(a1 + 168) = v18;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x20000) == 0)
  {
LABEL_17:
    if ((v10 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_48;
  }
LABEL_47:
  int v19 = *(_DWORD *)(a2 + 164);
  *(_DWORD *)(a1 + 212) |= 0x20000u;
  *(_DWORD *)(a1 + 164) = v19;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x10000) == 0)
  {
LABEL_18:
    if ((v10 & 0x8000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_49;
  }
LABEL_48:
  int v20 = *(_DWORD *)(a2 + 160);
  *(_DWORD *)(a1 + 212) |= 0x10000u;
  *(_DWORD *)(a1 + 160) = v20;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x8000) == 0)
  {
LABEL_19:
    if ((v10 & 0x4000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_50;
  }
LABEL_49:
  int v21 = *(_DWORD *)(a2 + 156);
  *(_DWORD *)(a1 + 212) |= 0x8000u;
  *(_DWORD *)(a1 + 156) = v21;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x4000) == 0)
  {
LABEL_20:
    if ((v10 & 0x2000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_51;
  }
LABEL_50:
  int v22 = *(_DWORD *)(a2 + 152);
  *(_DWORD *)(a1 + 212) |= 0x4000u;
  *(_DWORD *)(a1 + 152) = v22;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x2000) == 0)
  {
LABEL_21:
    if ((v10 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_52;
  }
LABEL_51:
  int v23 = *(_DWORD *)(a2 + 148);
  *(_DWORD *)(a1 + 212) |= 0x2000u;
  *(_DWORD *)(a1 + 148) = v23;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x100000) == 0)
  {
LABEL_22:
    if ((v10 & 0x100) == 0) {
      goto LABEL_23;
    }
    goto LABEL_53;
  }
LABEL_52:
  int v24 = *(_DWORD *)(a2 + 176);
  *(_DWORD *)(a1 + 212) |= 0x100000u;
  *(_DWORD *)(a1 + 176) = v24;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x100) == 0)
  {
LABEL_23:
    if ((v10 & 0x1000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_54;
  }
LABEL_53:
  int v25 = *(_DWORD *)(a2 + 128);
  *(_DWORD *)(a1 + 212) |= 0x100u;
  *(_DWORD *)(a1 + 128) = v25;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x1000000) == 0)
  {
LABEL_24:
    if ((v10 & 0x20) == 0) {
      goto LABEL_25;
    }
    goto LABEL_55;
  }
LABEL_54:
  int v26 = *(_DWORD *)(a2 + 192);
  *(_DWORD *)(a1 + 212) |= 0x1000000u;
  *(_DWORD *)(a1 + 192) = v26;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x20) == 0)
  {
LABEL_25:
    if ((v10 & 8) == 0) {
      goto LABEL_26;
    }
    goto LABEL_56;
  }
LABEL_55:
  int v27 = *(_DWORD *)(a2 + 116);
  *(_DWORD *)(a1 + 212) |= 0x20u;
  *(_DWORD *)(a1 + 116) = v27;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 8) == 0)
  {
LABEL_26:
    if ((v10 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t v28 = *(void *)(a2 + 104);
  *(_DWORD *)(a1 + 212) |= 8u;
  *(void *)(a1 + 104) = v28;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v10 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_58;
  }
LABEL_57:
  int v29 = *(_DWORD *)(a2 + 196);
  *(_DWORD *)(a1 + 212) |= 0x2000000u;
  *(_DWORD *)(a1 + 196) = v29;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v10 & 0x8000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_59;
  }
LABEL_58:
  int v30 = *(_DWORD *)(a2 + 200);
  *(_DWORD *)(a1 + 212) |= 0x4000000u;
  *(_DWORD *)(a1 + 200) = v30;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v10 & 0x800) == 0) {
      goto LABEL_30;
    }
    goto LABEL_60;
  }
LABEL_59:
  int v31 = *(_DWORD *)(a2 + 204);
  *(_DWORD *)(a1 + 212) |= 0x8000000u;
  *(_DWORD *)(a1 + 204) = v31;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x800) == 0)
  {
LABEL_30:
    if ((v10 & 0x80) == 0) {
      goto LABEL_31;
    }
    goto LABEL_61;
  }
LABEL_60:
  int v32 = *(_DWORD *)(a2 + 140);
  *(_DWORD *)(a1 + 212) |= 0x800u;
  *(_DWORD *)(a1 + 140) = v32;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x80) == 0)
  {
LABEL_31:
    if ((v10 & 2) == 0) {
      goto LABEL_32;
    }
    goto LABEL_62;
  }
LABEL_61:
  int v33 = *(_DWORD *)(a2 + 124);
  *(_DWORD *)(a1 + 212) |= 0x80u;
  *(_DWORD *)(a1 + 124) = v33;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 2) == 0)
  {
LABEL_32:
    if ((v10 & 0x40000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t v34 = *(void *)(a2 + 88);
  *(_DWORD *)(a1 + 212) |= 2u;
  *(void *)(a1 + 88) = v34;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x40000000) == 0)
  {
LABEL_33:
    if ((v10 & 0x1000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_64;
  }
LABEL_63:
  char v35 = *(unsigned char *)(a2 + 210);
  *(_DWORD *)(a1 + 212) |= 0x40000000u;
  *(unsigned char *)(a1 + 210) = v35;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x1000) == 0)
  {
LABEL_34:
    if ((v10 & 0x200) == 0) {
      goto LABEL_35;
    }
    goto LABEL_65;
  }
LABEL_64:
  int v36 = *(_DWORD *)(a2 + 144);
  *(_DWORD *)(a1 + 212) |= 0x1000u;
  *(_DWORD *)(a1 + 144) = v36;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x200) == 0)
  {
LABEL_35:
    if ((v10 & 0x40) == 0) {
      goto LABEL_36;
    }
    goto LABEL_66;
  }
LABEL_65:
  int v37 = *(_DWORD *)(a2 + 132);
  *(_DWORD *)(a1 + 212) |= 0x200u;
  *(_DWORD *)(a1 + 132) = v37;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x40) == 0)
  {
LABEL_36:
    if ((v10 & 0x200000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_67;
  }
LABEL_66:
  int v38 = *(_DWORD *)(a2 + 120);
  *(_DWORD *)(a1 + 212) |= 0x40u;
  *(_DWORD *)(a1 + 120) = v38;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x200000) == 0)
  {
LABEL_37:
    if ((v10 & 0x400) == 0) {
      goto LABEL_38;
    }
LABEL_68:
    int v40 = *(_DWORD *)(a2 + 136);
    *(_DWORD *)(a1 + 212) |= 0x400u;
    *(_DWORD *)(a1 + 136) = v40;
    if ((*(_DWORD *)(a2 + 212) & 0x800000) == 0) {
      return a1;
    }
    goto LABEL_39;
  }
LABEL_67:
  int v39 = *(_DWORD *)(a2 + 180);
  *(_DWORD *)(a1 + 212) |= 0x200000u;
  *(_DWORD *)(a1 + 180) = v39;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x400) != 0) {
    goto LABEL_68;
  }
LABEL_38:
  if ((v10 & 0x800000) != 0)
  {
LABEL_39:
    int v11 = *(_DWORD *)(a2 + 188);
    *(_DWORD *)(a1 + 212) |= 0x800000u;
    *(_DWORD *)(a1 + 188) = v11;
  }
  return a1;
}

uint64_t sub_227B80854(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 212);
  if (v5)
  {
    PB::TextFormatter::format(this, "avgHorizontalDecelMax", *(double *)(a1 + 80));
    int v5 = *(_DWORD *)(a1 + 212);
    if ((v5 & 0x10) == 0)
    {
LABEL_3:
      if ((v5 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_47;
    }
  }
  else if ((v5 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "avgHorizontalDecelThresholdCoupled", *(float *)(a1 + 112));
  int v5 = *(_DWORD *)(a1 + 212);
  if ((v5 & 0x20) == 0)
  {
LABEL_4:
    if ((v5 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(this, "btHint");
  int v5 = *(_DWORD *)(a1 + 212);
  if ((v5 & 2) == 0)
  {
LABEL_5:
    if ((v5 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(this, "companionAopTs");
  int v5 = *(_DWORD *)(a1 + 212);
  if ((v5 & 0x40) == 0)
  {
LABEL_6:
    if ((v5 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_50;
  }
LABEL_49:
  PB::TextFormatter::format(this, "currentWindowMean", *(float *)(a1 + 120));
  int v5 = *(_DWORD *)(a1 + 212);
  if ((v5 & 0x80) == 0)
  {
LABEL_7:
    if ((v5 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_50:
  PB::TextFormatter::format(this, "enableMode");
  if ((*(_DWORD *)(a1 + 212) & 0x100) != 0) {
LABEL_8:
  }
    PB::TextFormatter::format(this, "impactThresholdUncoupled", *(float *)(a1 + 128));
LABEL_9:
  int v6 = *(double **)(a1 + 8);
  uint64_t v7 = *(double **)(a1 + 16);
  while (v6 != v7)
  {
    double v8 = *v6++;
    PB::TextFormatter::format(this, "inertialAccel", v8);
  }
  int v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x10000000) != 0)
  {
    PB::TextFormatter::format(this, "isMounted");
    int v9 = *(_DWORD *)(a1 + 212);
    if ((v9 & 0x20000000) == 0)
    {
LABEL_13:
      if ((v9 & 0x200) == 0) {
        goto LABEL_14;
      }
      goto LABEL_54;
    }
  }
  else if ((v9 & 0x20000000) == 0)
  {
    goto LABEL_13;
  }
  PB::TextFormatter::format(this, "isSimulated");
  int v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x200) == 0)
  {
LABEL_14:
    if ((v9 & 0x400) == 0) {
      goto LABEL_15;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(this, "lastCompleted15sWindowMean", *(float *)(a1 + 132));
  int v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x400) == 0)
  {
LABEL_15:
    if ((v9 & 0x40000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_56;
  }
LABEL_55:
  PB::TextFormatter::format(this, "locallyArmedBitmap");
  int v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x40000000) == 0)
  {
LABEL_16:
    if ((v9 & 0x800) == 0) {
      goto LABEL_17;
    }
    goto LABEL_57;
  }
LABEL_56:
  PB::TextFormatter::format(this, "martyIsBicycle");
  int v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x800) == 0)
  {
LABEL_17:
    if ((v9 & 0x1000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_58;
  }
LABEL_57:
  PB::TextFormatter::format(this, "martyTriggerPathBitmap");
  int v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x1000) == 0)
  {
LABEL_18:
    if ((v9 & 0x2000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_59;
  }
LABEL_58:
  PB::TextFormatter::format(this, "maxMeanTenMinPreTrigger", *(float *)(a1 + 144));
  int v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x2000) == 0)
  {
LABEL_19:
    if ((v9 & 0x4000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_60;
  }
LABEL_59:
  PB::TextFormatter::format(this, "nAccelGap");
  int v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x4000) == 0)
  {
LABEL_20:
    if ((v9 & 0x8000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_61;
  }
LABEL_60:
  PB::TextFormatter::format(this, "nFullAccel");
  int v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x8000) == 0)
  {
LABEL_21:
    if ((v9 & 0x10000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_62;
  }
LABEL_61:
  PB::TextFormatter::format(this, "nFullDM");
  int v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x10000) == 0)
  {
LABEL_22:
    if ((v9 & 0x20000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_63;
  }
LABEL_62:
  PB::TextFormatter::format(this, "nOldAccel");
  int v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x20000) == 0)
  {
LABEL_23:
    if ((v9 & 0x40000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_64;
  }
LABEL_63:
  PB::TextFormatter::format(this, "nOldDM");
  int v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x40000) == 0)
  {
LABEL_24:
    if ((v9 & 0x80000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_65;
  }
LABEL_64:
  PB::TextFormatter::format(this, "nOldDt");
  int v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x80000) == 0)
  {
LABEL_25:
    if ((v9 & 0x100000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_66;
  }
LABEL_65:
  PB::TextFormatter::format(this, "nPrecondition");
  int v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x100000) == 0)
  {
LABEL_26:
    if ((v9 & 0x200000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_67;
  }
LABEL_66:
  PB::TextFormatter::format(this, "nUseNearest");
  int v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x200000) == 0)
  {
LABEL_27:
    if ((v9 & 0x400000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_68;
  }
LABEL_67:
  PB::TextFormatter::format(this, "numMaxEnvelopes");
  int v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x400000) == 0)
  {
LABEL_28:
    if ((v9 & 0x800000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_29;
  }
LABEL_68:
  PB::TextFormatter::format(this, "numResets");
  if ((*(_DWORD *)(a1 + 212) & 0x800000) != 0) {
LABEL_29:
  }
    PB::TextFormatter::format(this, "overrideArmedBitmap");
LABEL_30:
  int v10 = *(float **)(a1 + 32);
  int v11 = *(float **)(a1 + 40);
  while (v10 != v11)
  {
    float v12 = *v10++;
    PB::TextFormatter::format(this, "prevQ", v12);
  }
  char v13 = *(float **)(a1 + 56);
  char v14 = *(float **)(a1 + 64);
  while (v13 != v14)
  {
    float v15 = *v13++;
    PB::TextFormatter::format(this, "rawClampedAccel", v15);
  }
  int v16 = *(_DWORD *)(a1 + 212);
  if (v16 < 0)
  {
    PB::TextFormatter::format(this, "shouldTrigger");
    int v16 = *(_DWORD *)(a1 + 212);
    if ((v16 & 4) == 0)
    {
LABEL_36:
      if ((v16 & 0x1000000) == 0) {
        goto LABEL_37;
      }
      goto LABEL_72;
    }
  }
  else if ((v16 & 4) == 0)
  {
    goto LABEL_36;
  }
  PB::TextFormatter::format(this, "timestamp");
  int v16 = *(_DWORD *)(a1 + 212);
  if ((v16 & 0x1000000) == 0)
  {
LABEL_37:
    if ((v16 & 0x2000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_73;
  }
LABEL_72:
  PB::TextFormatter::format(this, "triggerPathBitmap");
  int v16 = *(_DWORD *)(a1 + 212);
  if ((v16 & 0x2000000) == 0)
  {
LABEL_38:
    if ((v16 & 0x4000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_74;
  }
LABEL_73:
  PB::TextFormatter::format(this, "vehicleProbabilityLongTermMean0", *(float *)(a1 + 196));
  int v16 = *(_DWORD *)(a1 + 212);
  if ((v16 & 0x4000000) == 0)
  {
LABEL_39:
    if ((v16 & 0x8000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_75;
  }
LABEL_74:
  PB::TextFormatter::format(this, "vehicleProbabilityLongTermMean1", *(float *)(a1 + 200));
  int v16 = *(_DWORD *)(a1 + 212);
  if ((v16 & 0x8000000) == 0)
  {
LABEL_40:
    if ((v16 & 8) == 0) {
      goto LABEL_42;
    }
    goto LABEL_41;
  }
LABEL_75:
  PB::TextFormatter::format(this, "vehicleProbabilityLongTermMean2", *(float *)(a1 + 204));
  if ((*(_DWORD *)(a1 + 212) & 8) != 0) {
LABEL_41:
  }
    PB::TextFormatter::format(this, "vehicleProbabilityTs");
LABEL_42:

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227B80D2C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    double v8 = (void **)(a1 + 32);
    uint64_t v9 = a1 + 48;
    int v10 = (void **)(a1 + 56);
    uint64_t v11 = a1 + 72;
    float v12 = (void **)(a1 + 8);
    uint64_t v13 = a1 + 24;
    while (1)
    {
      uint64_t v14 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v17 = 0;
      while (1)
      {
        unint64_t v18 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v19 = *(unsigned char *)(v14 + v2);
        v17 |= (unint64_t)(v19 & 0x7F) << v15;
        if ((v19 & 0x80) == 0) {
          break;
        }
        v15 += 7;
        unint64_t v2 = v18;
        BOOL v20 = v16++ > 8;
        if (v20) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v26 = v17 & 7;
      if (v26 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v17 >> 3))
      {
        case 1u:
          *(_DWORD *)(a1 + 212) |= 4u;
          unint64_t v27 = *((void *)this + 1);
          unint64_t v28 = *((void *)this + 2);
          uint64_t v29 = *(void *)this;
          if (v27 <= 0xFFFFFFFFFFFFFFF5 && v27 + 10 <= v28)
          {
            char v30 = 0;
            unsigned int v31 = 0;
            uint64_t v32 = 0;
            do
            {
              unint64_t v33 = v27 + 1;
              *((void *)this + 1) = v27 + 1;
              char v34 = *(unsigned char *)(v29 + v27);
              v32 |= (unint64_t)(v34 & 0x7F) << v30;
              if ((v34 & 0x80) == 0) {
                goto LABEL_459;
              }
              v30 += 7;
              unint64_t v27 = v33;
              BOOL v20 = v31++ > 8;
            }
            while (!v20);
LABEL_271:
            uint64_t v32 = 0;
            goto LABEL_459;
          }
          char v246 = 0;
          unsigned int v247 = 0;
          uint64_t v32 = 0;
          if (v28 <= v27) {
            unint64_t v28 = *((void *)this + 1);
          }
          while (2)
          {
            if (v28 == v27)
            {
              uint64_t v32 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v248 = v27 + 1;
              char v249 = *(unsigned char *)(v29 + v27);
              *((void *)this + 1) = v248;
              v32 |= (unint64_t)(v249 & 0x7F) << v246;
              if (v249 < 0)
              {
                v246 += 7;
                unint64_t v27 = v248;
                BOOL v20 = v247++ > 8;
                if (v20) {
                  goto LABEL_271;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v32 = 0;
              }
            }
            break;
          }
LABEL_459:
          *(void *)(a1 + 96) = v32;
          goto LABEL_544;
        case 2u:
          *(_DWORD *)(a1 + 212) |= 0x80000000;
          unint64_t v35 = *((void *)this + 1);
          if (v35 >= *((void *)this + 2))
          {
            BOOL v38 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v36 = v35 + 1;
            int v37 = *(unsigned __int8 *)(*(void *)this + v35);
            *((void *)this + 1) = v36;
            BOOL v38 = v37 != 0;
          }
          *(unsigned char *)(a1 + 211) = v38;
          goto LABEL_544;
        case 3u:
          *(_DWORD *)(a1 + 212) |= 1u;
          unint64_t v39 = *((void *)this + 1);
          if (v39 > 0xFFFFFFFFFFFFFFF7 || v39 + 8 > *((void *)this + 2)) {
            goto LABEL_540;
          }
          *(void *)(a1 + 80) = *(void *)(*(void *)this + v39);
          goto LABEL_523;
        case 4u:
          if (v26 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v40 = *((void *)this + 1);
            unint64_t v41 = *((void *)this + 2);
            while (v40 < v41 && !*((unsigned char *)this + 24))
            {
              char v43 = *(char **)(a1 + 16);
              unint64_t v42 = *(void *)(a1 + 24);
              if ((unint64_t)v43 >= v42)
              {
                uint64_t v45 = (char *)*v12;
                uint64_t v46 = (v43 - (unsigned char *)*v12) >> 3;
                unint64_t v47 = v46 + 1;
                if ((unint64_t)(v46 + 1) >> 61) {
                  goto LABEL_554;
                }
                uint64_t v48 = v42 - (void)v45;
                if (v48 >> 2 > v47) {
                  unint64_t v47 = v48 >> 2;
                }
                if ((unint64_t)v48 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v49 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v49 = v47;
                }
                if (v49)
                {
                  unsigned int v50 = (char *)sub_227B8B8B4(v13, v49);
                  uint64_t v45 = *(char **)(a1 + 8);
                  char v43 = *(char **)(a1 + 16);
                }
                else
                {
                  unsigned int v50 = 0;
                }
                uint64_t v51 = &v50[8 * v46];
                *(void *)uint64_t v51 = 0;
                unsigned int v44 = v51 + 8;
                while (v43 != v45)
                {
                  uint64_t v52 = *((void *)v43 - 1);
                  v43 -= 8;
                  *((void *)v51 - 1) = v52;
                  v51 -= 8;
                }
                *(void *)(a1 + 8) = v51;
                *(void *)(a1 + 16) = v44;
                *(void *)(a1 + 24) = &v50[8 * v49];
                if (v45) {
                  operator delete(v45);
                }
              }
              else
              {
                *(void *)char v43 = 0;
                unsigned int v44 = v43 + 8;
              }
              *(void *)(a1 + 16) = v44;
              unint64_t v53 = *((void *)this + 1);
              if (v53 > 0xFFFFFFFFFFFFFFF7 || v53 + 8 > *((void *)this + 2)) {
                goto LABEL_412;
              }
              *(v44 - 1) = *(void *)(*(void *)this + v53);
              unint64_t v41 = *((void *)this + 2);
              unint64_t v40 = *((void *)this + 1) + 8;
              *((void *)this + 1) = v40;
            }
            goto LABEL_413;
          }
          unsigned int v251 = *(char **)(a1 + 16);
          unint64_t v250 = *(void *)(a1 + 24);
          if ((unint64_t)v251 >= v250)
          {
            unint64_t v330 = (char *)*v12;
            uint64_t v331 = (v251 - (unsigned char *)*v12) >> 3;
            unint64_t v332 = v331 + 1;
            if ((unint64_t)(v331 + 1) >> 61) {
LABEL_554:
            }
              sub_227B8B89C();
            uint64_t v333 = v250 - (void)v330;
            if (v333 >> 2 > v332) {
              unint64_t v332 = v333 >> 2;
            }
            if ((unint64_t)v333 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v334 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v334 = v332;
            }
            if (v334)
            {
              int v335 = (char *)sub_227B8B8B4(v13, v334);
              unint64_t v330 = *(char **)(a1 + 8);
              unsigned int v251 = *(char **)(a1 + 16);
            }
            else
            {
              int v335 = 0;
            }
            char v348 = &v335[8 * v331];
            *(void *)char v348 = 0;
            BOOL v252 = v348 + 8;
            while (v251 != v330)
            {
              uint64_t v349 = *((void *)v251 - 1);
              v251 -= 8;
              *((void *)v348 - 1) = v349;
              v348 -= 8;
            }
            *(void *)(a1 + 8) = v348;
            *(void *)(a1 + 16) = v252;
            *(void *)(a1 + 24) = &v335[8 * v334];
            if (v330) {
              operator delete(v330);
            }
          }
          else
          {
            *(void *)unsigned int v251 = 0;
            BOOL v252 = v251 + 8;
          }
          *(void *)(a1 + 16) = v252;
          unint64_t v350 = *((void *)this + 1);
          if (v350 <= 0xFFFFFFFFFFFFFFF7 && v350 + 8 <= *((void *)this + 2))
          {
            *(v252 - 1) = *(void *)(*(void *)this + v350);
LABEL_523:
            uint64_t v351 = *((void *)this + 1) + 8;
            goto LABEL_543;
          }
          goto LABEL_540;
        case 5u:
          if (v26 != 2)
          {
            char v254 = *(char **)(a1 + 64);
            unint64_t v253 = *(void *)(a1 + 72);
            if ((unint64_t)v254 >= v253)
            {
              BOOL v336 = (char *)*v10;
              uint64_t v337 = (v254 - (unsigned char *)*v10) >> 2;
              unint64_t v338 = v337 + 1;
              if ((unint64_t)(v337 + 1) >> 62) {
LABEL_555:
              }
                sub_227B8B89C();
              uint64_t v339 = v253 - (void)v336;
              if (v339 >> 1 > v338) {
                unint64_t v338 = v339 >> 1;
              }
              if ((unint64_t)v339 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v340 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v340 = v338;
              }
              if (v340)
              {
                unint64_t v341 = (char *)sub_227B8BBB8(v11, v340);
                BOOL v336 = *(char **)(a1 + 56);
                char v254 = *(char **)(a1 + 64);
              }
              else
              {
                unint64_t v341 = 0;
              }
              BOOL v352 = &v341[4 * v337];
              *(_DWORD *)BOOL v352 = 0;
              uint64_t v255 = v352 + 4;
              while (v254 != v336)
              {
                int v353 = *((_DWORD *)v254 - 1);
                v254 -= 4;
                *((_DWORD *)v352 - 1) = v353;
                v352 -= 4;
              }
              *(void *)(a1 + 56) = v352;
              *(void *)(a1 + 64) = v255;
              *(void *)(a1 + 72) = &v341[4 * v340];
              if (v336) {
                operator delete(v336);
              }
            }
            else
            {
              *(_DWORD *)char v254 = 0;
              uint64_t v255 = v254 + 4;
            }
            *(void *)(a1 + 64) = v255;
            goto LABEL_538;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v54 = *((void *)this + 1);
          unint64_t v55 = *((void *)this + 2);
          while (v54 < v55 && !*((unsigned char *)this + 24))
          {
            char v57 = *(char **)(a1 + 64);
            unint64_t v56 = *(void *)(a1 + 72);
            if ((unint64_t)v57 >= v56)
            {
              unsigned int v59 = (char *)*v10;
              uint64_t v60 = (v57 - (unsigned char *)*v10) >> 2;
              unint64_t v61 = v60 + 1;
              if ((unint64_t)(v60 + 1) >> 62) {
                goto LABEL_555;
              }
              uint64_t v62 = v56 - (void)v59;
              if (v62 >> 1 > v61) {
                unint64_t v61 = v62 >> 1;
              }
              if ((unint64_t)v62 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v63 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v63 = v61;
              }
              if (v63)
              {
                unint64_t v64 = (char *)sub_227B8BBB8(v11, v63);
                unsigned int v59 = *(char **)(a1 + 56);
                char v57 = *(char **)(a1 + 64);
              }
              else
              {
                unint64_t v64 = 0;
              }
              char v65 = &v64[4 * v60];
              *(_DWORD *)char v65 = 0;
              char v58 = v65 + 4;
              while (v57 != v59)
              {
                int v66 = *((_DWORD *)v57 - 1);
                v57 -= 4;
                *((_DWORD *)v65 - 1) = v66;
                v65 -= 4;
              }
              *(void *)(a1 + 56) = v65;
              *(void *)(a1 + 64) = v58;
              *(void *)(a1 + 72) = &v64[4 * v63];
              if (v59) {
                operator delete(v59);
              }
            }
            else
            {
              *(_DWORD *)char v57 = 0;
              char v58 = v57 + 4;
            }
            *(void *)(a1 + 64) = v58;
            unint64_t v67 = *((void *)this + 1);
            if (v67 > 0xFFFFFFFFFFFFFFFBLL || v67 + 4 > *((void *)this + 2)) {
              goto LABEL_412;
            }
            *(v58 - 1) = *(_DWORD *)(*(void *)this + v67);
            unint64_t v55 = *((void *)this + 2);
            unint64_t v54 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v54;
          }
          goto LABEL_413;
        case 6u:
          if (v26 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v68 = *((void *)this + 1);
            unint64_t v69 = *((void *)this + 2);
            while (v68 < v69 && !*((unsigned char *)this + 24))
            {
              unsigned int v71 = *(char **)(a1 + 40);
              unint64_t v70 = *(void *)(a1 + 48);
              if ((unint64_t)v71 >= v70)
              {
                char v73 = (char *)*v8;
                uint64_t v74 = (v71 - (unsigned char *)*v8) >> 2;
                unint64_t v75 = v74 + 1;
                if ((unint64_t)(v74 + 1) >> 62) {
                  goto LABEL_556;
                }
                uint64_t v76 = v70 - (void)v73;
                if (v76 >> 1 > v75) {
                  unint64_t v75 = v76 >> 1;
                }
                if ((unint64_t)v76 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v77 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v77 = v75;
                }
                if (v77)
                {
                  unint64_t v78 = (char *)sub_227B8BBB8(v9, v77);
                  char v73 = *(char **)(a1 + 32);
                  unsigned int v71 = *(char **)(a1 + 40);
                }
                else
                {
                  unint64_t v78 = 0;
                }
                char v79 = &v78[4 * v74];
                *(_DWORD *)char v79 = 0;
                unint64_t v72 = v79 + 4;
                while (v71 != v73)
                {
                  int v80 = *((_DWORD *)v71 - 1);
                  v71 -= 4;
                  *((_DWORD *)v79 - 1) = v80;
                  v79 -= 4;
                }
                *(void *)(a1 + 32) = v79;
                *(void *)(a1 + 40) = v72;
                *(void *)(a1 + 48) = &v78[4 * v77];
                if (v73) {
                  operator delete(v73);
                }
              }
              else
              {
                *(_DWORD *)unsigned int v71 = 0;
                unint64_t v72 = v71 + 4;
              }
              *(void *)(a1 + 40) = v72;
              unint64_t v81 = *((void *)this + 1);
              if (v81 > 0xFFFFFFFFFFFFFFFBLL || v81 + 4 > *((void *)this + 2))
              {
LABEL_412:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v72 - 1) = *(_DWORD *)(*(void *)this + v81);
              unint64_t v69 = *((void *)this + 2);
              unint64_t v68 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v68;
            }
LABEL_413:
            PB::Reader::recallMark();
          }
          else
          {
            char v257 = *(char **)(a1 + 40);
            unint64_t v256 = *(void *)(a1 + 48);
            if ((unint64_t)v257 >= v256)
            {
              unint64_t v342 = (char *)*v8;
              uint64_t v343 = (v257 - (unsigned char *)*v8) >> 2;
              unint64_t v344 = v343 + 1;
              if ((unint64_t)(v343 + 1) >> 62) {
LABEL_556:
              }
                sub_227B8B89C();
              uint64_t v345 = v256 - (void)v342;
              if (v345 >> 1 > v344) {
                unint64_t v344 = v345 >> 1;
              }
              if ((unint64_t)v345 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v346 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v346 = v344;
              }
              if (v346)
              {
                unint64_t v347 = (char *)sub_227B8BBB8(v9, v346);
                unint64_t v342 = *(char **)(a1 + 32);
                char v257 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v347 = 0;
              }
              unint64_t v354 = &v347[4 * v343];
              *(_DWORD *)unint64_t v354 = 0;
              uint64_t v255 = v354 + 4;
              while (v257 != v342)
              {
                int v355 = *((_DWORD *)v257 - 1);
                v257 -= 4;
                *((_DWORD *)v354 - 1) = v355;
                v354 -= 4;
              }
              *(void *)(a1 + 32) = v354;
              *(void *)(a1 + 40) = v255;
              *(void *)(a1 + 48) = &v347[4 * v346];
              if (v342) {
                operator delete(v342);
              }
            }
            else
            {
              *(_DWORD *)char v257 = 0;
              uint64_t v255 = v257 + 4;
            }
            *(void *)(a1 + 40) = v255;
LABEL_538:
            unint64_t v356 = *((void *)this + 1);
            if (v356 <= 0xFFFFFFFFFFFFFFFBLL && v356 + 4 <= *((void *)this + 2))
            {
              *(v255 - 1) = *(_DWORD *)(*(void *)this + v356);
LABEL_542:
              uint64_t v351 = *((void *)this + 1) + 4;
LABEL_543:
              *((void *)this + 1) = v351;
            }
            else
            {
LABEL_540:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_544:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        case 7u:
          *(_DWORD *)(a1 + 212) |= 0x10000000u;
          unint64_t v82 = *((void *)this + 1);
          if (v82 >= *((void *)this + 2))
          {
            BOOL v85 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v83 = v82 + 1;
            int v84 = *(unsigned __int8 *)(*(void *)this + v82);
            *((void *)this + 1) = v83;
            BOOL v85 = v84 != 0;
          }
          *(unsigned char *)(a1 + 208) = v85;
          goto LABEL_544;
        case 8u:
          *(_DWORD *)(a1 + 212) |= 0x20000000u;
          unint64_t v86 = *((void *)this + 1);
          if (v86 >= *((void *)this + 2))
          {
            BOOL v89 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v87 = v86 + 1;
            int v88 = *(unsigned __int8 *)(*(void *)this + v86);
            *((void *)this + 1) = v87;
            BOOL v89 = v88 != 0;
          }
          *(unsigned char *)(a1 + 209) = v89;
          goto LABEL_544;
        case 9u:
          *(_DWORD *)(a1 + 212) |= 0x400000u;
          unint64_t v90 = *((void *)this + 1);
          unint64_t v91 = *((void *)this + 2);
          uint64_t v92 = *(void *)this;
          if (v90 <= 0xFFFFFFFFFFFFFFF5 && v90 + 10 <= v91)
          {
            char v93 = 0;
            unsigned int v94 = 0;
            uint64_t v95 = 0;
            do
            {
              unint64_t v96 = v90 + 1;
              *((void *)this + 1) = v90 + 1;
              char v97 = *(unsigned char *)(v92 + v90);
              v95 |= (unint64_t)(v97 & 0x7F) << v93;
              if ((v97 & 0x80) == 0) {
                goto LABEL_462;
              }
              v93 += 7;
              unint64_t v90 = v96;
              BOOL v20 = v94++ > 8;
            }
            while (!v20);
LABEL_290:
            LODWORD(v95) = 0;
            goto LABEL_462;
          }
          char v258 = 0;
          unsigned int v259 = 0;
          uint64_t v95 = 0;
          if (v91 <= v90) {
            unint64_t v91 = *((void *)this + 1);
          }
          while (2)
          {
            if (v91 == v90)
            {
              LODWORD(v95) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v260 = v90 + 1;
              char v261 = *(unsigned char *)(v92 + v90);
              *((void *)this + 1) = v260;
              v95 |= (unint64_t)(v261 & 0x7F) << v258;
              if (v261 < 0)
              {
                v258 += 7;
                unint64_t v90 = v260;
                BOOL v20 = v259++ > 8;
                if (v20) {
                  goto LABEL_290;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v95) = 0;
              }
            }
            break;
          }
LABEL_462:
          *(_DWORD *)(a1 + 184) = v95;
          goto LABEL_544;
        case 0xAu:
          *(_DWORD *)(a1 + 212) |= 0x10u;
          unint64_t v98 = *((void *)this + 1);
          if (v98 > 0xFFFFFFFFFFFFFFFBLL || v98 + 4 > *((void *)this + 2)) {
            goto LABEL_540;
          }
          *(_DWORD *)(a1 + 112) = *(_DWORD *)(*(void *)this + v98);
          goto LABEL_542;
        case 0xBu:
          *(_DWORD *)(a1 + 212) |= 0x80000u;
          unint64_t v99 = *((void *)this + 1);
          unint64_t v100 = *((void *)this + 2);
          uint64_t v101 = *(void *)this;
          if (v99 <= 0xFFFFFFFFFFFFFFF5 && v99 + 10 <= v100)
          {
            char v102 = 0;
            unsigned int v103 = 0;
            uint64_t v104 = 0;
            do
            {
              unint64_t v105 = v99 + 1;
              *((void *)this + 1) = v99 + 1;
              char v106 = *(unsigned char *)(v101 + v99);
              v104 |= (unint64_t)(v106 & 0x7F) << v102;
              if ((v106 & 0x80) == 0) {
                goto LABEL_465;
              }
              v102 += 7;
              unint64_t v99 = v105;
              BOOL v20 = v103++ > 8;
            }
            while (!v20);
LABEL_297:
            LODWORD(v104) = 0;
            goto LABEL_465;
          }
          char v262 = 0;
          unsigned int v263 = 0;
          uint64_t v104 = 0;
          if (v100 <= v99) {
            unint64_t v100 = *((void *)this + 1);
          }
          while (2)
          {
            if (v100 == v99)
            {
              LODWORD(v104) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v264 = v99 + 1;
              char v265 = *(unsigned char *)(v101 + v99);
              *((void *)this + 1) = v264;
              v104 |= (unint64_t)(v265 & 0x7F) << v262;
              if (v265 < 0)
              {
                v262 += 7;
                unint64_t v99 = v264;
                BOOL v20 = v263++ > 8;
                if (v20) {
                  goto LABEL_297;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v104) = 0;
              }
            }
            break;
          }
LABEL_465:
          *(_DWORD *)(a1 + 172) = v104;
          goto LABEL_544;
        case 0xCu:
          *(_DWORD *)(a1 + 212) |= 0x40000u;
          unint64_t v107 = *((void *)this + 1);
          unint64_t v108 = *((void *)this + 2);
          uint64_t v109 = *(void *)this;
          if (v107 <= 0xFFFFFFFFFFFFFFF5 && v107 + 10 <= v108)
          {
            char v110 = 0;
            unsigned int v111 = 0;
            uint64_t v112 = 0;
            do
            {
              unint64_t v113 = v107 + 1;
              *((void *)this + 1) = v107 + 1;
              char v114 = *(unsigned char *)(v109 + v107);
              v112 |= (unint64_t)(v114 & 0x7F) << v110;
              if ((v114 & 0x80) == 0) {
                goto LABEL_468;
              }
              v110 += 7;
              unint64_t v107 = v113;
              BOOL v20 = v111++ > 8;
            }
            while (!v20);
LABEL_304:
            LODWORD(v112) = 0;
            goto LABEL_468;
          }
          char v266 = 0;
          unsigned int v267 = 0;
          uint64_t v112 = 0;
          if (v108 <= v107) {
            unint64_t v108 = *((void *)this + 1);
          }
          while (2)
          {
            if (v108 == v107)
            {
              LODWORD(v112) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v268 = v107 + 1;
              char v269 = *(unsigned char *)(v109 + v107);
              *((void *)this + 1) = v268;
              v112 |= (unint64_t)(v269 & 0x7F) << v266;
              if (v269 < 0)
              {
                v266 += 7;
                unint64_t v107 = v268;
                BOOL v20 = v267++ > 8;
                if (v20) {
                  goto LABEL_304;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v112) = 0;
              }
            }
            break;
          }
LABEL_468:
          *(_DWORD *)(a1 + 168) = v112;
          goto LABEL_544;
        case 0xDu:
          *(_DWORD *)(a1 + 212) |= 0x20000u;
          unint64_t v115 = *((void *)this + 1);
          unint64_t v116 = *((void *)this + 2);
          uint64_t v117 = *(void *)this;
          if (v115 <= 0xFFFFFFFFFFFFFFF5 && v115 + 10 <= v116)
          {
            char v118 = 0;
            unsigned int v119 = 0;
            uint64_t v120 = 0;
            do
            {
              unint64_t v121 = v115 + 1;
              *((void *)this + 1) = v115 + 1;
              char v122 = *(unsigned char *)(v117 + v115);
              v120 |= (unint64_t)(v122 & 0x7F) << v118;
              if ((v122 & 0x80) == 0) {
                goto LABEL_471;
              }
              v118 += 7;
              unint64_t v115 = v121;
              BOOL v20 = v119++ > 8;
            }
            while (!v20);
LABEL_311:
            LODWORD(v120) = 0;
            goto LABEL_471;
          }
          char v270 = 0;
          unsigned int v271 = 0;
          uint64_t v120 = 0;
          if (v116 <= v115) {
            unint64_t v116 = *((void *)this + 1);
          }
          while (2)
          {
            if (v116 == v115)
            {
              LODWORD(v120) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v272 = v115 + 1;
              char v273 = *(unsigned char *)(v117 + v115);
              *((void *)this + 1) = v272;
              v120 |= (unint64_t)(v273 & 0x7F) << v270;
              if (v273 < 0)
              {
                v270 += 7;
                unint64_t v115 = v272;
                BOOL v20 = v271++ > 8;
                if (v20) {
                  goto LABEL_311;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v120) = 0;
              }
            }
            break;
          }
LABEL_471:
          *(_DWORD *)(a1 + 164) = v120;
          goto LABEL_544;
        case 0xEu:
          *(_DWORD *)(a1 + 212) |= 0x10000u;
          unint64_t v123 = *((void *)this + 1);
          unint64_t v124 = *((void *)this + 2);
          uint64_t v125 = *(void *)this;
          if (v123 <= 0xFFFFFFFFFFFFFFF5 && v123 + 10 <= v124)
          {
            char v126 = 0;
            unsigned int v127 = 0;
            uint64_t v128 = 0;
            do
            {
              unint64_t v129 = v123 + 1;
              *((void *)this + 1) = v123 + 1;
              char v130 = *(unsigned char *)(v125 + v123);
              v128 |= (unint64_t)(v130 & 0x7F) << v126;
              if ((v130 & 0x80) == 0) {
                goto LABEL_474;
              }
              v126 += 7;
              unint64_t v123 = v129;
              BOOL v20 = v127++ > 8;
            }
            while (!v20);
LABEL_318:
            LODWORD(v128) = 0;
            goto LABEL_474;
          }
          char v274 = 0;
          unsigned int v275 = 0;
          uint64_t v128 = 0;
          if (v124 <= v123) {
            unint64_t v124 = *((void *)this + 1);
          }
          while (2)
          {
            if (v124 == v123)
            {
              LODWORD(v128) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v276 = v123 + 1;
              char v277 = *(unsigned char *)(v125 + v123);
              *((void *)this + 1) = v276;
              v128 |= (unint64_t)(v277 & 0x7F) << v274;
              if (v277 < 0)
              {
                v274 += 7;
                unint64_t v123 = v276;
                BOOL v20 = v275++ > 8;
                if (v20) {
                  goto LABEL_318;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v128) = 0;
              }
            }
            break;
          }
LABEL_474:
          *(_DWORD *)(a1 + 160) = v128;
          goto LABEL_544;
        case 0xFu:
          *(_DWORD *)(a1 + 212) |= 0x8000u;
          unint64_t v131 = *((void *)this + 1);
          unint64_t v132 = *((void *)this + 2);
          uint64_t v133 = *(void *)this;
          if (v131 <= 0xFFFFFFFFFFFFFFF5 && v131 + 10 <= v132)
          {
            char v134 = 0;
            unsigned int v135 = 0;
            uint64_t v136 = 0;
            do
            {
              unint64_t v137 = v131 + 1;
              *((void *)this + 1) = v131 + 1;
              char v138 = *(unsigned char *)(v133 + v131);
              v136 |= (unint64_t)(v138 & 0x7F) << v134;
              if ((v138 & 0x80) == 0) {
                goto LABEL_477;
              }
              v134 += 7;
              unint64_t v131 = v137;
              BOOL v20 = v135++ > 8;
            }
            while (!v20);
LABEL_325:
            LODWORD(v136) = 0;
            goto LABEL_477;
          }
          char v278 = 0;
          unsigned int v279 = 0;
          uint64_t v136 = 0;
          if (v132 <= v131) {
            unint64_t v132 = *((void *)this + 1);
          }
          while (2)
          {
            if (v132 == v131)
            {
              LODWORD(v136) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v280 = v131 + 1;
              char v281 = *(unsigned char *)(v133 + v131);
              *((void *)this + 1) = v280;
              v136 |= (unint64_t)(v281 & 0x7F) << v278;
              if (v281 < 0)
              {
                v278 += 7;
                unint64_t v131 = v280;
                BOOL v20 = v279++ > 8;
                if (v20) {
                  goto LABEL_325;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v136) = 0;
              }
            }
            break;
          }
LABEL_477:
          *(_DWORD *)(a1 + 156) = v136;
          goto LABEL_544;
        case 0x10u:
          *(_DWORD *)(a1 + 212) |= 0x4000u;
          unint64_t v139 = *((void *)this + 1);
          unint64_t v140 = *((void *)this + 2);
          uint64_t v141 = *(void *)this;
          if (v139 <= 0xFFFFFFFFFFFFFFF5 && v139 + 10 <= v140)
          {
            char v142 = 0;
            unsigned int v143 = 0;
            uint64_t v144 = 0;
            do
            {
              unint64_t v145 = v139 + 1;
              *((void *)this + 1) = v139 + 1;
              char v146 = *(unsigned char *)(v141 + v139);
              v144 |= (unint64_t)(v146 & 0x7F) << v142;
              if ((v146 & 0x80) == 0) {
                goto LABEL_480;
              }
              v142 += 7;
              unint64_t v139 = v145;
              BOOL v20 = v143++ > 8;
            }
            while (!v20);
LABEL_332:
            LODWORD(v144) = 0;
            goto LABEL_480;
          }
          char v282 = 0;
          unsigned int v283 = 0;
          uint64_t v144 = 0;
          if (v140 <= v139) {
            unint64_t v140 = *((void *)this + 1);
          }
          while (2)
          {
            if (v140 == v139)
            {
              LODWORD(v144) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v284 = v139 + 1;
              char v285 = *(unsigned char *)(v141 + v139);
              *((void *)this + 1) = v284;
              v144 |= (unint64_t)(v285 & 0x7F) << v282;
              if (v285 < 0)
              {
                v282 += 7;
                unint64_t v139 = v284;
                BOOL v20 = v283++ > 8;
                if (v20) {
                  goto LABEL_332;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v144) = 0;
              }
            }
            break;
          }
LABEL_480:
          *(_DWORD *)(a1 + 152) = v144;
          goto LABEL_544;
        case 0x11u:
          *(_DWORD *)(a1 + 212) |= 0x2000u;
          unint64_t v147 = *((void *)this + 1);
          unint64_t v148 = *((void *)this + 2);
          uint64_t v149 = *(void *)this;
          if (v147 <= 0xFFFFFFFFFFFFFFF5 && v147 + 10 <= v148)
          {
            char v150 = 0;
            unsigned int v151 = 0;
            uint64_t v152 = 0;
            do
            {
              unint64_t v153 = v147 + 1;
              *((void *)this + 1) = v147 + 1;
              char v154 = *(unsigned char *)(v149 + v147);
              v152 |= (unint64_t)(v154 & 0x7F) << v150;
              if ((v154 & 0x80) == 0) {
                goto LABEL_483;
              }
              v150 += 7;
              unint64_t v147 = v153;
              BOOL v20 = v151++ > 8;
            }
            while (!v20);
LABEL_339:
            LODWORD(v152) = 0;
            goto LABEL_483;
          }
          char v286 = 0;
          unsigned int v287 = 0;
          uint64_t v152 = 0;
          if (v148 <= v147) {
            unint64_t v148 = *((void *)this + 1);
          }
          while (2)
          {
            if (v148 == v147)
            {
              LODWORD(v152) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v288 = v147 + 1;
              char v289 = *(unsigned char *)(v149 + v147);
              *((void *)this + 1) = v288;
              v152 |= (unint64_t)(v289 & 0x7F) << v286;
              if (v289 < 0)
              {
                v286 += 7;
                unint64_t v147 = v288;
                BOOL v20 = v287++ > 8;
                if (v20) {
                  goto LABEL_339;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v152) = 0;
              }
            }
            break;
          }
LABEL_483:
          *(_DWORD *)(a1 + 148) = v152;
          goto LABEL_544;
        case 0x12u:
          *(_DWORD *)(a1 + 212) |= 0x100000u;
          unint64_t v155 = *((void *)this + 1);
          unint64_t v156 = *((void *)this + 2);
          uint64_t v157 = *(void *)this;
          if (v155 <= 0xFFFFFFFFFFFFFFF5 && v155 + 10 <= v156)
          {
            char v158 = 0;
            unsigned int v159 = 0;
            uint64_t v160 = 0;
            do
            {
              unint64_t v161 = v155 + 1;
              *((void *)this + 1) = v155 + 1;
              char v162 = *(unsigned char *)(v157 + v155);
              v160 |= (unint64_t)(v162 & 0x7F) << v158;
              if ((v162 & 0x80) == 0) {
                goto LABEL_486;
              }
              v158 += 7;
              unint64_t v155 = v161;
              BOOL v20 = v159++ > 8;
            }
            while (!v20);
LABEL_346:
            LODWORD(v160) = 0;
            goto LABEL_486;
          }
          char v290 = 0;
          unsigned int v291 = 0;
          uint64_t v160 = 0;
          if (v156 <= v155) {
            unint64_t v156 = *((void *)this + 1);
          }
          while (2)
          {
            if (v156 == v155)
            {
              LODWORD(v160) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v292 = v155 + 1;
              char v293 = *(unsigned char *)(v157 + v155);
              *((void *)this + 1) = v292;
              v160 |= (unint64_t)(v293 & 0x7F) << v290;
              if (v293 < 0)
              {
                v290 += 7;
                unint64_t v155 = v292;
                BOOL v20 = v291++ > 8;
                if (v20) {
                  goto LABEL_346;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v160) = 0;
              }
            }
            break;
          }
LABEL_486:
          *(_DWORD *)(a1 + 176) = v160;
          goto LABEL_544;
        case 0x13u:
          *(_DWORD *)(a1 + 212) |= 0x100u;
          unint64_t v163 = *((void *)this + 1);
          if (v163 > 0xFFFFFFFFFFFFFFFBLL || v163 + 4 > *((void *)this + 2)) {
            goto LABEL_540;
          }
          *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v163);
          goto LABEL_542;
        case 0x14u:
          *(_DWORD *)(a1 + 212) |= 0x1000000u;
          unint64_t v164 = *((void *)this + 1);
          unint64_t v165 = *((void *)this + 2);
          uint64_t v166 = *(void *)this;
          if (v164 <= 0xFFFFFFFFFFFFFFF5 && v164 + 10 <= v165)
          {
            char v167 = 0;
            unsigned int v168 = 0;
            uint64_t v169 = 0;
            do
            {
              unint64_t v170 = v164 + 1;
              *((void *)this + 1) = v164 + 1;
              char v171 = *(unsigned char *)(v166 + v164);
              v169 |= (unint64_t)(v171 & 0x7F) << v167;
              if ((v171 & 0x80) == 0) {
                goto LABEL_489;
              }
              v167 += 7;
              unint64_t v164 = v170;
              BOOL v20 = v168++ > 8;
            }
            while (!v20);
LABEL_353:
            LODWORD(v169) = 0;
            goto LABEL_489;
          }
          char v294 = 0;
          unsigned int v295 = 0;
          uint64_t v169 = 0;
          if (v165 <= v164) {
            unint64_t v165 = *((void *)this + 1);
          }
          while (2)
          {
            if (v165 == v164)
            {
              LODWORD(v169) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v296 = v164 + 1;
              char v297 = *(unsigned char *)(v166 + v164);
              *((void *)this + 1) = v296;
              v169 |= (unint64_t)(v297 & 0x7F) << v294;
              if (v297 < 0)
              {
                v294 += 7;
                unint64_t v164 = v296;
                BOOL v20 = v295++ > 8;
                if (v20) {
                  goto LABEL_353;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v169) = 0;
              }
            }
            break;
          }
LABEL_489:
          *(_DWORD *)(a1 + 192) = v169;
          goto LABEL_544;
        case 0x15u:
          *(_DWORD *)(a1 + 212) |= 0x20u;
          unint64_t v172 = *((void *)this + 1);
          unint64_t v173 = *((void *)this + 2);
          uint64_t v174 = *(void *)this;
          if (v172 <= 0xFFFFFFFFFFFFFFF5 && v172 + 10 <= v173)
          {
            char v175 = 0;
            unsigned int v176 = 0;
            uint64_t v177 = 0;
            do
            {
              unint64_t v178 = v172 + 1;
              *((void *)this + 1) = v172 + 1;
              char v179 = *(unsigned char *)(v174 + v172);
              v177 |= (unint64_t)(v179 & 0x7F) << v175;
              if ((v179 & 0x80) == 0) {
                goto LABEL_492;
              }
              v175 += 7;
              unint64_t v172 = v178;
              BOOL v20 = v176++ > 8;
            }
            while (!v20);
LABEL_360:
            LODWORD(v177) = 0;
            goto LABEL_492;
          }
          char v298 = 0;
          unsigned int v299 = 0;
          uint64_t v177 = 0;
          if (v173 <= v172) {
            unint64_t v173 = *((void *)this + 1);
          }
          while (2)
          {
            if (v173 == v172)
            {
              LODWORD(v177) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v300 = v172 + 1;
              char v301 = *(unsigned char *)(v174 + v172);
              *((void *)this + 1) = v300;
              v177 |= (unint64_t)(v301 & 0x7F) << v298;
              if (v301 < 0)
              {
                v298 += 7;
                unint64_t v172 = v300;
                BOOL v20 = v299++ > 8;
                if (v20) {
                  goto LABEL_360;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v177) = 0;
              }
            }
            break;
          }
LABEL_492:
          *(_DWORD *)(a1 + 116) = v177;
          goto LABEL_544;
        case 0x16u:
          *(_DWORD *)(a1 + 212) |= 8u;
          unint64_t v180 = *((void *)this + 1);
          unint64_t v181 = *((void *)this + 2);
          uint64_t v182 = *(void *)this;
          if (v180 <= 0xFFFFFFFFFFFFFFF5 && v180 + 10 <= v181)
          {
            char v183 = 0;
            unsigned int v184 = 0;
            uint64_t v185 = 0;
            do
            {
              unint64_t v186 = v180 + 1;
              *((void *)this + 1) = v180 + 1;
              char v187 = *(unsigned char *)(v182 + v180);
              v185 |= (unint64_t)(v187 & 0x7F) << v183;
              if ((v187 & 0x80) == 0) {
                goto LABEL_495;
              }
              v183 += 7;
              unint64_t v180 = v186;
              BOOL v20 = v184++ > 8;
            }
            while (!v20);
LABEL_367:
            uint64_t v185 = 0;
            goto LABEL_495;
          }
          char v302 = 0;
          unsigned int v303 = 0;
          uint64_t v185 = 0;
          if (v181 <= v180) {
            unint64_t v181 = *((void *)this + 1);
          }
          while (2)
          {
            if (v181 == v180)
            {
              uint64_t v185 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v304 = v180 + 1;
              char v305 = *(unsigned char *)(v182 + v180);
              *((void *)this + 1) = v304;
              v185 |= (unint64_t)(v305 & 0x7F) << v302;
              if (v305 < 0)
              {
                v302 += 7;
                unint64_t v180 = v304;
                BOOL v20 = v303++ > 8;
                if (v20) {
                  goto LABEL_367;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v185 = 0;
              }
            }
            break;
          }
LABEL_495:
          *(void *)(a1 + 104) = v185;
          goto LABEL_544;
        case 0x17u:
          *(_DWORD *)(a1 + 212) |= 0x2000000u;
          unint64_t v188 = *((void *)this + 1);
          if (v188 > 0xFFFFFFFFFFFFFFFBLL || v188 + 4 > *((void *)this + 2)) {
            goto LABEL_540;
          }
          *(_DWORD *)(a1 + 196) = *(_DWORD *)(*(void *)this + v188);
          goto LABEL_542;
        case 0x18u:
          *(_DWORD *)(a1 + 212) |= 0x4000000u;
          unint64_t v189 = *((void *)this + 1);
          if (v189 > 0xFFFFFFFFFFFFFFFBLL || v189 + 4 > *((void *)this + 2)) {
            goto LABEL_540;
          }
          *(_DWORD *)(a1 + 200) = *(_DWORD *)(*(void *)this + v189);
          goto LABEL_542;
        case 0x19u:
          *(_DWORD *)(a1 + 212) |= 0x8000000u;
          unint64_t v190 = *((void *)this + 1);
          if (v190 > 0xFFFFFFFFFFFFFFFBLL || v190 + 4 > *((void *)this + 2)) {
            goto LABEL_540;
          }
          *(_DWORD *)(a1 + 204) = *(_DWORD *)(*(void *)this + v190);
          goto LABEL_542;
        case 0x1Au:
          *(_DWORD *)(a1 + 212) |= 0x800u;
          unint64_t v191 = *((void *)this + 1);
          unint64_t v192 = *((void *)this + 2);
          uint64_t v193 = *(void *)this;
          if (v191 <= 0xFFFFFFFFFFFFFFF5 && v191 + 10 <= v192)
          {
            char v194 = 0;
            unsigned int v195 = 0;
            uint64_t v196 = 0;
            do
            {
              unint64_t v197 = v191 + 1;
              *((void *)this + 1) = v191 + 1;
              char v198 = *(unsigned char *)(v193 + v191);
              v196 |= (unint64_t)(v198 & 0x7F) << v194;
              if ((v198 & 0x80) == 0) {
                goto LABEL_498;
              }
              v194 += 7;
              unint64_t v191 = v197;
              BOOL v20 = v195++ > 8;
            }
            while (!v20);
LABEL_374:
            LODWORD(v196) = 0;
            goto LABEL_498;
          }
          char v306 = 0;
          unsigned int v307 = 0;
          uint64_t v196 = 0;
          if (v192 <= v191) {
            unint64_t v192 = *((void *)this + 1);
          }
          while (2)
          {
            if (v192 == v191)
            {
              LODWORD(v196) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v308 = v191 + 1;
              char v309 = *(unsigned char *)(v193 + v191);
              *((void *)this + 1) = v308;
              v196 |= (unint64_t)(v309 & 0x7F) << v306;
              if (v309 < 0)
              {
                v306 += 7;
                unint64_t v191 = v308;
                BOOL v20 = v307++ > 8;
                if (v20) {
                  goto LABEL_374;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v196) = 0;
              }
            }
            break;
          }
LABEL_498:
          *(_DWORD *)(a1 + 140) = v196;
          goto LABEL_544;
        case 0x1Bu:
          *(_DWORD *)(a1 + 212) |= 0x80u;
          unint64_t v199 = *((void *)this + 1);
          unint64_t v200 = *((void *)this + 2);
          uint64_t v201 = *(void *)this;
          if (v199 <= 0xFFFFFFFFFFFFFFF5 && v199 + 10 <= v200)
          {
            char v202 = 0;
            unsigned int v203 = 0;
            uint64_t v204 = 0;
            do
            {
              unint64_t v205 = v199 + 1;
              *((void *)this + 1) = v199 + 1;
              char v206 = *(unsigned char *)(v201 + v199);
              v204 |= (unint64_t)(v206 & 0x7F) << v202;
              if ((v206 & 0x80) == 0) {
                goto LABEL_501;
              }
              v202 += 7;
              unint64_t v199 = v205;
              BOOL v20 = v203++ > 8;
            }
            while (!v20);
LABEL_381:
            LODWORD(v204) = 0;
            goto LABEL_501;
          }
          char v310 = 0;
          unsigned int v311 = 0;
          uint64_t v204 = 0;
          if (v200 <= v199) {
            unint64_t v200 = *((void *)this + 1);
          }
          while (2)
          {
            if (v200 == v199)
            {
              LODWORD(v204) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v312 = v199 + 1;
              char v313 = *(unsigned char *)(v201 + v199);
              *((void *)this + 1) = v312;
              v204 |= (unint64_t)(v313 & 0x7F) << v310;
              if (v313 < 0)
              {
                v310 += 7;
                unint64_t v199 = v312;
                BOOL v20 = v311++ > 8;
                if (v20) {
                  goto LABEL_381;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v204) = 0;
              }
            }
            break;
          }
LABEL_501:
          *(_DWORD *)(a1 + 124) = v204;
          goto LABEL_544;
        case 0x1Cu:
          *(_DWORD *)(a1 + 212) |= 2u;
          unint64_t v207 = *((void *)this + 1);
          unint64_t v208 = *((void *)this + 2);
          uint64_t v209 = *(void *)this;
          if (v207 <= 0xFFFFFFFFFFFFFFF5 && v207 + 10 <= v208)
          {
            char v210 = 0;
            unsigned int v211 = 0;
            uint64_t v212 = 0;
            do
            {
              unint64_t v213 = v207 + 1;
              *((void *)this + 1) = v207 + 1;
              char v214 = *(unsigned char *)(v209 + v207);
              v212 |= (unint64_t)(v214 & 0x7F) << v210;
              if ((v214 & 0x80) == 0) {
                goto LABEL_504;
              }
              v210 += 7;
              unint64_t v207 = v213;
              BOOL v20 = v211++ > 8;
            }
            while (!v20);
LABEL_388:
            uint64_t v212 = 0;
            goto LABEL_504;
          }
          char v314 = 0;
          unsigned int v315 = 0;
          uint64_t v212 = 0;
          if (v208 <= v207) {
            unint64_t v208 = *((void *)this + 1);
          }
          while (2)
          {
            if (v208 == v207)
            {
              uint64_t v212 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v316 = v207 + 1;
              char v317 = *(unsigned char *)(v209 + v207);
              *((void *)this + 1) = v316;
              v212 |= (unint64_t)(v317 & 0x7F) << v314;
              if (v317 < 0)
              {
                v314 += 7;
                unint64_t v207 = v316;
                BOOL v20 = v315++ > 8;
                if (v20) {
                  goto LABEL_388;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v212 = 0;
              }
            }
            break;
          }
LABEL_504:
          *(void *)(a1 + 88) = v212;
          goto LABEL_544;
        case 0x1Du:
          *(_DWORD *)(a1 + 212) |= 0x40000000u;
          unint64_t v215 = *((void *)this + 1);
          if (v215 >= *((void *)this + 2))
          {
            BOOL v218 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v216 = v215 + 1;
            int v217 = *(unsigned __int8 *)(*(void *)this + v215);
            *((void *)this + 1) = v216;
            BOOL v218 = v217 != 0;
          }
          *(unsigned char *)(a1 + 210) = v218;
          goto LABEL_544;
        case 0x1Eu:
          *(_DWORD *)(a1 + 212) |= 0x1000u;
          unint64_t v219 = *((void *)this + 1);
          if (v219 > 0xFFFFFFFFFFFFFFFBLL || v219 + 4 > *((void *)this + 2)) {
            goto LABEL_540;
          }
          *(_DWORD *)(a1 + 144) = *(_DWORD *)(*(void *)this + v219);
          goto LABEL_542;
        case 0x1Fu:
          *(_DWORD *)(a1 + 212) |= 0x200u;
          unint64_t v220 = *((void *)this + 1);
          if (v220 > 0xFFFFFFFFFFFFFFFBLL || v220 + 4 > *((void *)this + 2)) {
            goto LABEL_540;
          }
          *(_DWORD *)(a1 + 132) = *(_DWORD *)(*(void *)this + v220);
          goto LABEL_542;
        case 0x20u:
          *(_DWORD *)(a1 + 212) |= 0x40u;
          unint64_t v221 = *((void *)this + 1);
          if (v221 > 0xFFFFFFFFFFFFFFFBLL || v221 + 4 > *((void *)this + 2)) {
            goto LABEL_540;
          }
          *(_DWORD *)(a1 + 120) = *(_DWORD *)(*(void *)this + v221);
          goto LABEL_542;
        case 0x21u:
          *(_DWORD *)(a1 + 212) |= 0x200000u;
          unint64_t v222 = *((void *)this + 1);
          unint64_t v223 = *((void *)this + 2);
          uint64_t v224 = *(void *)this;
          if (v222 <= 0xFFFFFFFFFFFFFFF5 && v222 + 10 <= v223)
          {
            char v225 = 0;
            unsigned int v226 = 0;
            uint64_t v227 = 0;
            do
            {
              unint64_t v228 = v222 + 1;
              *((void *)this + 1) = v222 + 1;
              char v229 = *(unsigned char *)(v224 + v222);
              v227 |= (unint64_t)(v229 & 0x7F) << v225;
              if ((v229 & 0x80) == 0) {
                goto LABEL_507;
              }
              v225 += 7;
              unint64_t v222 = v228;
              BOOL v20 = v226++ > 8;
            }
            while (!v20);
LABEL_397:
            LODWORD(v227) = 0;
            goto LABEL_507;
          }
          char v318 = 0;
          unsigned int v319 = 0;
          uint64_t v227 = 0;
          if (v223 <= v222) {
            unint64_t v223 = *((void *)this + 1);
          }
          while (2)
          {
            if (v223 == v222)
            {
              LODWORD(v227) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v320 = v222 + 1;
              char v321 = *(unsigned char *)(v224 + v222);
              *((void *)this + 1) = v320;
              v227 |= (unint64_t)(v321 & 0x7F) << v318;
              if (v321 < 0)
              {
                v318 += 7;
                unint64_t v222 = v320;
                BOOL v20 = v319++ > 8;
                if (v20) {
                  goto LABEL_397;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v227) = 0;
              }
            }
            break;
          }
LABEL_507:
          *(_DWORD *)(a1 + 180) = v227;
          goto LABEL_544;
        case 0x22u:
          *(_DWORD *)(a1 + 212) |= 0x400u;
          unint64_t v230 = *((void *)this + 1);
          unint64_t v231 = *((void *)this + 2);
          uint64_t v232 = *(void *)this;
          if (v230 <= 0xFFFFFFFFFFFFFFF5 && v230 + 10 <= v231)
          {
            char v233 = 0;
            unsigned int v234 = 0;
            uint64_t v235 = 0;
            do
            {
              unint64_t v236 = v230 + 1;
              *((void *)this + 1) = v230 + 1;
              char v237 = *(unsigned char *)(v232 + v230);
              v235 |= (unint64_t)(v237 & 0x7F) << v233;
              if ((v237 & 0x80) == 0) {
                goto LABEL_510;
              }
              v233 += 7;
              unint64_t v230 = v236;
              BOOL v20 = v234++ > 8;
            }
            while (!v20);
LABEL_404:
            LODWORD(v235) = 0;
            goto LABEL_510;
          }
          char v322 = 0;
          unsigned int v323 = 0;
          uint64_t v235 = 0;
          if (v231 <= v230) {
            unint64_t v231 = *((void *)this + 1);
          }
          while (2)
          {
            if (v231 == v230)
            {
              LODWORD(v235) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v324 = v230 + 1;
              char v325 = *(unsigned char *)(v232 + v230);
              *((void *)this + 1) = v324;
              v235 |= (unint64_t)(v325 & 0x7F) << v322;
              if (v325 < 0)
              {
                v322 += 7;
                unint64_t v230 = v324;
                BOOL v20 = v323++ > 8;
                if (v20) {
                  goto LABEL_404;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v235) = 0;
              }
            }
            break;
          }
LABEL_510:
          *(_DWORD *)(a1 + 136) = v235;
          goto LABEL_544;
        case 0x23u:
          *(_DWORD *)(a1 + 212) |= 0x800000u;
          unint64_t v238 = *((void *)this + 1);
          unint64_t v239 = *((void *)this + 2);
          uint64_t v240 = *(void *)this;
          if (v238 <= 0xFFFFFFFFFFFFFFF5 && v238 + 10 <= v239)
          {
            char v241 = 0;
            unsigned int v242 = 0;
            uint64_t v243 = 0;
            do
            {
              unint64_t v244 = v238 + 1;
              *((void *)this + 1) = v238 + 1;
              char v245 = *(unsigned char *)(v240 + v238);
              v243 |= (unint64_t)(v245 & 0x7F) << v241;
              if ((v245 & 0x80) == 0) {
                goto LABEL_513;
              }
              v241 += 7;
              unint64_t v238 = v244;
              BOOL v20 = v242++ > 8;
            }
            while (!v20);
LABEL_411:
            LODWORD(v243) = 0;
            goto LABEL_513;
          }
          char v326 = 0;
          unsigned int v327 = 0;
          uint64_t v243 = 0;
          if (v239 <= v238) {
            unint64_t v239 = *((void *)this + 1);
          }
          while (2)
          {
            if (v239 == v238)
            {
              LODWORD(v243) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v328 = v238 + 1;
              char v329 = *(unsigned char *)(v240 + v238);
              *((void *)this + 1) = v328;
              v243 |= (unint64_t)(v329 & 0x7F) << v326;
              if (v329 < 0)
              {
                v326 += 7;
                unint64_t v238 = v328;
                BOOL v20 = v327++ > 8;
                if (v20) {
                  goto LABEL_411;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v243) = 0;
              }
            }
            break;
          }
LABEL_513:
          *(_DWORD *)(a1 + 188) = v243;
          goto LABEL_544;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_544;
      }
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v17 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v23 = v2 + 1;
      char v24 = *(unsigned char *)(v14 + v2);
      *((void *)this + 1) = v23;
      v17 |= (unint64_t)(v24 & 0x7F) << v21;
      if ((v24 & 0x80) == 0) {
        goto LABEL_21;
      }
      v21 += 7;
      unint64_t v2 = v23;
      if (v22++ >= 9)
      {
LABEL_20:
        unint64_t v17 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B82964(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 212);
  if ((v4 & 4) == 0)
  {
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_3;
    }
LABEL_45:
    double result = PB::Writer::write(this);
    if ((*(_DWORD *)(v3 + 212) & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  double result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 212);
  if (v4 < 0) {
    goto LABEL_45;
  }
LABEL_3:
  if (v4) {
LABEL_4:
  }
    double result = PB::Writer::write(this, *(double *)(v3 + 80));
LABEL_5:
  int v5 = *(double **)(v3 + 8);
  int v6 = *(double **)(v3 + 16);
  while (v5 != v6)
  {
    double v7 = *v5++;
    double result = PB::Writer::write(this, v7);
  }
  double v8 = *(float **)(v3 + 56);
  uint64_t v9 = *(float **)(v3 + 64);
  while (v8 != v9)
  {
    float v10 = *v8++;
    double result = PB::Writer::write(this, v10);
  }
  uint64_t v11 = *(float **)(v3 + 32);
  float v12 = *(float **)(v3 + 40);
  while (v11 != v12)
  {
    float v13 = *v11++;
    double result = PB::Writer::write(this, v13);
  }
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x10000000) != 0)
  {
    double result = PB::Writer::write(this);
    int v14 = *(_DWORD *)(v3 + 212);
    if ((v14 & 0x20000000) == 0)
    {
LABEL_16:
      if ((v14 & 0x400000) == 0) {
        goto LABEL_17;
      }
      goto LABEL_49;
    }
  }
  else if ((v14 & 0x20000000) == 0)
  {
    goto LABEL_16;
  }
  double result = PB::Writer::write(this);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x400000) == 0)
  {
LABEL_17:
    if ((v14 & 0x10) == 0) {
      goto LABEL_18;
    }
    goto LABEL_50;
  }
LABEL_49:
  double result = PB::Writer::writeVarInt(this);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x10) == 0)
  {
LABEL_18:
    if ((v14 & 0x80000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_51;
  }
LABEL_50:
  double result = PB::Writer::write(this, *(float *)(v3 + 112));
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x80000) == 0)
  {
LABEL_19:
    if ((v14 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_52;
  }
LABEL_51:
  double result = PB::Writer::writeVarInt(this);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x40000) == 0)
  {
LABEL_20:
    if ((v14 & 0x20000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_53;
  }
LABEL_52:
  double result = PB::Writer::writeVarInt(this);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x20000) == 0)
  {
LABEL_21:
    if ((v14 & 0x10000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_54;
  }
LABEL_53:
  double result = PB::Writer::writeVarInt(this);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x10000) == 0)
  {
LABEL_22:
    if ((v14 & 0x8000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_55;
  }
LABEL_54:
  double result = PB::Writer::writeVarInt(this);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x8000) == 0)
  {
LABEL_23:
    if ((v14 & 0x4000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_56;
  }
LABEL_55:
  double result = PB::Writer::writeVarInt(this);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x4000) == 0)
  {
LABEL_24:
    if ((v14 & 0x2000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_57;
  }
LABEL_56:
  double result = PB::Writer::writeVarInt(this);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x2000) == 0)
  {
LABEL_25:
    if ((v14 & 0x100000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_58;
  }
LABEL_57:
  double result = PB::Writer::writeVarInt(this);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x100000) == 0)
  {
LABEL_26:
    if ((v14 & 0x100) == 0) {
      goto LABEL_27;
    }
    goto LABEL_59;
  }
LABEL_58:
  double result = PB::Writer::writeVarInt(this);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x100) == 0)
  {
LABEL_27:
    if ((v14 & 0x1000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_60;
  }
LABEL_59:
  double result = PB::Writer::write(this, *(float *)(v3 + 128));
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x1000000) == 0)
  {
LABEL_28:
    if ((v14 & 0x20) == 0) {
      goto LABEL_29;
    }
    goto LABEL_61;
  }
LABEL_60:
  double result = PB::Writer::writeVarInt(this);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x20) == 0)
  {
LABEL_29:
    if ((v14 & 8) == 0) {
      goto LABEL_30;
    }
    goto LABEL_62;
  }
LABEL_61:
  double result = PB::Writer::writeVarInt(this);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 8) == 0)
  {
LABEL_30:
    if ((v14 & 0x2000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_63;
  }
LABEL_62:
  double result = PB::Writer::writeVarInt(this);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x2000000) == 0)
  {
LABEL_31:
    if ((v14 & 0x4000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_64;
  }
LABEL_63:
  double result = PB::Writer::write(this, *(float *)(v3 + 196));
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x4000000) == 0)
  {
LABEL_32:
    if ((v14 & 0x8000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_65;
  }
LABEL_64:
  double result = PB::Writer::write(this, *(float *)(v3 + 200));
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x8000000) == 0)
  {
LABEL_33:
    if ((v14 & 0x800) == 0) {
      goto LABEL_34;
    }
    goto LABEL_66;
  }
LABEL_65:
  double result = PB::Writer::write(this, *(float *)(v3 + 204));
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x800) == 0)
  {
LABEL_34:
    if ((v14 & 0x80) == 0) {
      goto LABEL_35;
    }
    goto LABEL_67;
  }
LABEL_66:
  double result = PB::Writer::writeVarInt(this);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x80) == 0)
  {
LABEL_35:
    if ((v14 & 2) == 0) {
      goto LABEL_36;
    }
    goto LABEL_68;
  }
LABEL_67:
  double result = PB::Writer::writeVarInt(this);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 2) == 0)
  {
LABEL_36:
    if ((v14 & 0x40000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_69;
  }
LABEL_68:
  double result = PB::Writer::writeVarInt(this);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x40000000) == 0)
  {
LABEL_37:
    if ((v14 & 0x1000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_70;
  }
LABEL_69:
  double result = PB::Writer::write(this);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x1000) == 0)
  {
LABEL_38:
    if ((v14 & 0x200) == 0) {
      goto LABEL_39;
    }
    goto LABEL_71;
  }
LABEL_70:
  double result = PB::Writer::write(this, *(float *)(v3 + 144));
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x200) == 0)
  {
LABEL_39:
    if ((v14 & 0x40) == 0) {
      goto LABEL_40;
    }
    goto LABEL_72;
  }
LABEL_71:
  double result = PB::Writer::write(this, *(float *)(v3 + 132));
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x40) == 0)
  {
LABEL_40:
    if ((v14 & 0x200000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_73;
  }
LABEL_72:
  double result = PB::Writer::write(this, *(float *)(v3 + 120));
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x200000) == 0)
  {
LABEL_41:
    if ((v14 & 0x400) == 0) {
      goto LABEL_42;
    }
LABEL_74:
    double result = PB::Writer::writeVarInt(this);
    if ((*(_DWORD *)(v3 + 212) & 0x800000) == 0) {
      return result;
    }
    goto LABEL_75;
  }
LABEL_73:
  double result = PB::Writer::writeVarInt(this);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x400) != 0) {
    goto LABEL_74;
  }
LABEL_42:
  if ((v14 & 0x800000) == 0) {
    return result;
  }
LABEL_75:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227B82D88(uint64_t result)
{
  *(void *)double result = &unk_26DC210D8;
  *(_DWORD *)(result + 96) = 0;
  return result;
}

void sub_227B82DB0(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B82DE8(uint64_t result, uint64_t a2)
{
  *(void *)double result = &unk_26DC210D8;
  *(_DWORD *)(result + 96) = 0;
  __int16 v2 = *(_WORD *)(a2 + 96);
  if ((v2 & 0x1000) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 88);
    __int16 v3 = 4096;
    *(_WORD *)(result + 96) = 4096;
    *(_DWORD *)(result + 88) = v4;
    __int16 v2 = *(_WORD *)(a2 + 96);
    if ((v2 & 0x800) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((*(_WORD *)(a2 + 96) & 0x800) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 84);
    v3 |= 0x800u;
    *(_WORD *)(result + 96) = v3;
    *(_DWORD *)(result + 84) = v5;
    __int16 v2 = *(_WORD *)(a2 + 96);
  }
LABEL_6:
  if ((v2 & 0x100) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 72);
    v3 |= 0x100u;
    *(_WORD *)(result + 96) = v3;
    *(_DWORD *)(result + 72) = v6;
    __int16 v2 = *(_WORD *)(a2 + 96);
    if ((v2 & 0x80) == 0)
    {
LABEL_8:
      if ((v2 & 0x8000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_23;
    }
  }
  else if ((v2 & 0x80) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 64);
  v3 |= 0x80u;
  *(_WORD *)(result + 96) = v3;
  *(void *)(result + 64) = v7;
  __int16 v2 = *(_WORD *)(a2 + 96);
  if ((v2 & 0x8000) == 0)
  {
LABEL_9:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  char v8 = *(unsigned char *)(a2 + 94);
  v3 |= 0x8000u;
  *(_WORD *)(result + 96) = v3;
  *(unsigned char *)(result + 94) = v8;
  __int16 v2 = *(_WORD *)(a2 + 96);
  if ((v2 & 0x4000) == 0)
  {
LABEL_10:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  char v9 = *(unsigned char *)(a2 + 93);
  v3 |= 0x4000u;
  *(_WORD *)(result + 96) = v3;
  *(unsigned char *)(result + 93) = v9;
  __int16 v2 = *(_WORD *)(a2 + 96);
  if ((v2 & 0x2000) == 0)
  {
LABEL_11:
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_25:
  char v10 = *(unsigned char *)(a2 + 92);
  v3 |= 0x2000u;
  *(_WORD *)(result + 96) = v3;
  *(unsigned char *)(result + 92) = v10;
  __int16 v2 = *(_WORD *)(a2 + 96);
  if ((v2 & 2) == 0)
  {
LABEL_12:
    if ((v2 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v11 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(result + 96) = v3;
  *(void *)(result + 16) = v11;
  __int16 v2 = *(_WORD *)(a2 + 96);
  if ((v2 & 8) == 0)
  {
LABEL_13:
    if ((v2 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t v12 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_WORD *)(result + 96) = v3;
  *(void *)(result + 32) = v12;
  __int16 v2 = *(_WORD *)(a2 + 96);
  if ((v2 & 0x10) == 0)
  {
LABEL_14:
    if ((v2 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t v13 = *(void *)(a2 + 40);
  v3 |= 0x10u;
  *(_WORD *)(result + 96) = v3;
  *(void *)(result + 40) = v13;
  __int16 v2 = *(_WORD *)(a2 + 96);
  if ((v2 & 0x20) == 0)
  {
LABEL_15:
    if ((v2 & 0x40) == 0) {
      goto LABEL_16;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t v14 = *(void *)(a2 + 48);
  v3 |= 0x20u;
  *(_WORD *)(result + 96) = v3;
  *(void *)(result + 48) = v14;
  __int16 v2 = *(_WORD *)(a2 + 96);
  if ((v2 & 0x40) == 0)
  {
LABEL_16:
    if ((v2 & 1) == 0) {
      goto LABEL_17;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t v15 = *(void *)(a2 + 56);
  v3 |= 0x40u;
  *(_WORD *)(result + 96) = v3;
  *(void *)(result + 56) = v15;
  __int16 v2 = *(_WORD *)(a2 + 96);
  if ((v2 & 1) == 0)
  {
LABEL_17:
    if ((v2 & 0x400) == 0) {
      goto LABEL_18;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t v16 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(result + 96) = v3;
  *(void *)(result + 8) = v16;
  __int16 v2 = *(_WORD *)(a2 + 96);
  if ((v2 & 0x400) == 0)
  {
LABEL_18:
    if ((v2 & 0x200) == 0) {
      goto LABEL_19;
    }
    goto LABEL_33;
  }
LABEL_32:
  int v17 = *(_DWORD *)(a2 + 80);
  v3 |= 0x400u;
  *(_WORD *)(result + 96) = v3;
  *(_DWORD *)(result + 80) = v17;
  __int16 v2 = *(_WORD *)(a2 + 96);
  if ((v2 & 0x200) == 0)
  {
LABEL_19:
    if ((v2 & 4) == 0) {
      return result;
    }
LABEL_34:
    uint64_t v19 = *(void *)(a2 + 24);
    *(_WORD *)(result + 96) = v3 | 4;
    *(void *)(result + 24) = v19;
    return result;
  }
LABEL_33:
  int v18 = *(_DWORD *)(a2 + 76);
  v3 |= 0x200u;
  *(_WORD *)(result + 96) = v3;
  *(_DWORD *)(result + 76) = v18;
  if ((*(_WORD *)(a2 + 96) & 4) != 0) {
    goto LABEL_34;
  }
  return result;
}

uint64_t sub_227B82FD4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 96);
  if (v5)
  {
    PB::TextFormatter::format(this, "armedDuration");
    __int16 v5 = *(_WORD *)(a1 + 96);
    if ((v5 & 0x100) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_23;
    }
  }
  else if ((*(_WORD *)(a1 + 96) & 0x100) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "armedDurationThreshold", *(float *)(a1 + 72));
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 2) == 0)
  {
LABEL_4:
    if ((v5 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "armedDurationThresholdTimestamp");
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 4) == 0)
  {
LABEL_5:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "btHint");
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 8) == 0)
  {
LABEL_6:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "epochFirstTimestamp");
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 0x10) == 0)
  {
LABEL_7:
    if ((v5 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "epochLastTimestamp");
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 0x20) == 0)
  {
LABEL_8:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "firstTriggerTimestamp");
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 0x2000) == 0)
  {
LABEL_9:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "isBTHintDetected");
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 0x4000) == 0)
  {
LABEL_10:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(this, "isClusterInBeginningOfDrive");
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 0x8000) == 0)
  {
LABEL_11:
    if ((v5 & 0x40) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "isTriggerCluster");
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 0x40) == 0)
  {
LABEL_12:
    if ((v5 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(this, "lastTriggerTimestamp");
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 0x200) == 0)
  {
LABEL_13:
    if ((v5 & 0x400) == 0) {
      goto LABEL_14;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(this, "numTriggersInEpoch");
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 0x400) == 0)
  {
LABEL_14:
    if ((v5 & 0x800) == 0) {
      goto LABEL_15;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(this, "numTriggersInWindow");
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 0x800) == 0)
  {
LABEL_15:
    if ((v5 & 0x80) == 0) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "numTriggersThreshold");
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 0x80) == 0)
  {
LABEL_16:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
LABEL_35:
  PB::TextFormatter::format(this, "timestamp");
  if ((*(_WORD *)(a1 + 96) & 0x1000) != 0) {
LABEL_17:
  }
    PB::TextFormatter::format(this, "windowDuration");
LABEL_18:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B83218(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((int)(v11 >> 3) > 300)
      {
        switch((int)v20)
        {
          case 301:
            *(_WORD *)(a1 + 96) |= 8u;
            unint64_t v27 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v28 = *(void *)this;
            if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
            {
              char v104 = 0;
              unsigned int v105 = 0;
              uint64_t v31 = 0;
              if (v2 <= v27) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v27)
                {
                  uint64_t v31 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_223;
                }
                unint64_t v106 = v27++;
                char v107 = *(unsigned char *)(v28 + v106);
                *((void *)this + 1) = v27;
                v31 |= (unint64_t)(v107 & 0x7F) << v104;
                if ((v107 & 0x80) == 0) {
                  break;
                }
                v104 += 7;
                BOOL v14 = v105++ > 8;
                if (v14)
                {
                  uint64_t v31 = 0;
LABEL_222:
                  unint64_t v2 = v106 + 1;
                  goto LABEL_223;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v31 = 0;
              }
              goto LABEL_222;
            }
            char v29 = 0;
            unsigned int v30 = 0;
            uint64_t v31 = 0;
            do
            {
              unint64_t v2 = v27 + 1;
              *((void *)this + 1) = v27 + 1;
              char v32 = *(unsigned char *)(v28 + v27);
              v31 |= (unint64_t)(v32 & 0x7F) << v29;
              if ((v32 & 0x80) == 0) {
                goto LABEL_223;
              }
              v29 += 7;
              unint64_t v27 = v2;
              BOOL v14 = v30++ > 8;
            }
            while (!v14);
            uint64_t v31 = 0;
LABEL_223:
            *(void *)(a1 + 32) = v31;
            break;
          case 302:
            *(_WORD *)(a1 + 96) |= 0x10u;
            unint64_t v45 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v46 = *(void *)this;
            if (v45 > 0xFFFFFFFFFFFFFFF5 || v45 + 10 > v2)
            {
              char v112 = 0;
              unsigned int v113 = 0;
              uint64_t v49 = 0;
              if (v2 <= v45) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v45)
                {
                  uint64_t v49 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_233;
                }
                unint64_t v114 = v45++;
                char v115 = *(unsigned char *)(v46 + v114);
                *((void *)this + 1) = v45;
                v49 |= (unint64_t)(v115 & 0x7F) << v112;
                if ((v115 & 0x80) == 0) {
                  break;
                }
                v112 += 7;
                BOOL v14 = v113++ > 8;
                if (v14)
                {
                  uint64_t v49 = 0;
LABEL_232:
                  unint64_t v2 = v114 + 1;
                  goto LABEL_233;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v49 = 0;
              }
              goto LABEL_232;
            }
            char v47 = 0;
            unsigned int v48 = 0;
            uint64_t v49 = 0;
            do
            {
              unint64_t v2 = v45 + 1;
              *((void *)this + 1) = v45 + 1;
              char v50 = *(unsigned char *)(v46 + v45);
              v49 |= (unint64_t)(v50 & 0x7F) << v47;
              if ((v50 & 0x80) == 0) {
                goto LABEL_233;
              }
              v47 += 7;
              unint64_t v45 = v2;
              BOOL v14 = v48++ > 8;
            }
            while (!v14);
            uint64_t v49 = 0;
LABEL_233:
            *(void *)(a1 + 40) = v49;
            break;
          case 303:
            *(_WORD *)(a1 + 96) |= 0x20u;
            unint64_t v51 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v52 = *(void *)this;
            if (v51 > 0xFFFFFFFFFFFFFFF5 || v51 + 10 > v2)
            {
              char v116 = 0;
              unsigned int v117 = 0;
              uint64_t v55 = 0;
              if (v2 <= v51) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v51)
                {
                  uint64_t v55 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_238;
                }
                unint64_t v118 = v51++;
                char v119 = *(unsigned char *)(v52 + v118);
                *((void *)this + 1) = v51;
                v55 |= (unint64_t)(v119 & 0x7F) << v116;
                if ((v119 & 0x80) == 0) {
                  break;
                }
                v116 += 7;
                BOOL v14 = v117++ > 8;
                if (v14)
                {
                  uint64_t v55 = 0;
LABEL_237:
                  unint64_t v2 = v118 + 1;
                  goto LABEL_238;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v55 = 0;
              }
              goto LABEL_237;
            }
            char v53 = 0;
            unsigned int v54 = 0;
            uint64_t v55 = 0;
            do
            {
              unint64_t v2 = v51 + 1;
              *((void *)this + 1) = v51 + 1;
              char v56 = *(unsigned char *)(v52 + v51);
              v55 |= (unint64_t)(v56 & 0x7F) << v53;
              if ((v56 & 0x80) == 0) {
                goto LABEL_238;
              }
              v53 += 7;
              unint64_t v51 = v2;
              BOOL v14 = v54++ > 8;
            }
            while (!v14);
            uint64_t v55 = 0;
LABEL_238:
            *(void *)(a1 + 48) = v55;
            break;
          case 304:
            *(_WORD *)(a1 + 96) |= 0x40u;
            unint64_t v57 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v58 = *(void *)this;
            if (v57 > 0xFFFFFFFFFFFFFFF5 || v57 + 10 > v2)
            {
              char v120 = 0;
              unsigned int v121 = 0;
              uint64_t v61 = 0;
              if (v2 <= v57) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v57)
                {
                  uint64_t v61 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_243;
                }
                unint64_t v122 = v57++;
                char v123 = *(unsigned char *)(v58 + v122);
                *((void *)this + 1) = v57;
                v61 |= (unint64_t)(v123 & 0x7F) << v120;
                if ((v123 & 0x80) == 0) {
                  break;
                }
                v120 += 7;
                BOOL v14 = v121++ > 8;
                if (v14)
                {
                  uint64_t v61 = 0;
LABEL_242:
                  unint64_t v2 = v122 + 1;
                  goto LABEL_243;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v61 = 0;
              }
              goto LABEL_242;
            }
            char v59 = 0;
            unsigned int v60 = 0;
            uint64_t v61 = 0;
            do
            {
              unint64_t v2 = v57 + 1;
              *((void *)this + 1) = v57 + 1;
              char v62 = *(unsigned char *)(v58 + v57);
              v61 |= (unint64_t)(v62 & 0x7F) << v59;
              if ((v62 & 0x80) == 0) {
                goto LABEL_243;
              }
              v59 += 7;
              unint64_t v57 = v2;
              BOOL v14 = v60++ > 8;
            }
            while (!v14);
            uint64_t v61 = 0;
LABEL_243:
            *(void *)(a1 + 56) = v61;
            break;
          case 305:
            *(_WORD *)(a1 + 96) |= 1u;
            unint64_t v63 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v64 = *(void *)this;
            if (v63 > 0xFFFFFFFFFFFFFFF5 || v63 + 10 > v2)
            {
              char v124 = 0;
              unsigned int v125 = 0;
              uint64_t v67 = 0;
              if (v2 <= v63) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v63)
                {
                  uint64_t v67 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_248;
                }
                unint64_t v126 = v63++;
                char v127 = *(unsigned char *)(v64 + v126);
                *((void *)this + 1) = v63;
                v67 |= (unint64_t)(v127 & 0x7F) << v124;
                if ((v127 & 0x80) == 0) {
                  break;
                }
                v124 += 7;
                BOOL v14 = v125++ > 8;
                if (v14)
                {
                  uint64_t v67 = 0;
LABEL_247:
                  unint64_t v2 = v126 + 1;
                  goto LABEL_248;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v67 = 0;
              }
              goto LABEL_247;
            }
            char v65 = 0;
            unsigned int v66 = 0;
            uint64_t v67 = 0;
            do
            {
              unint64_t v2 = v63 + 1;
              *((void *)this + 1) = v63 + 1;
              char v68 = *(unsigned char *)(v64 + v63);
              v67 |= (unint64_t)(v68 & 0x7F) << v65;
              if ((v68 & 0x80) == 0) {
                goto LABEL_248;
              }
              v65 += 7;
              unint64_t v63 = v2;
              BOOL v14 = v66++ > 8;
            }
            while (!v14);
            uint64_t v67 = 0;
LABEL_248:
            *(void *)(a1 + 8) = v67;
            break;
          case 306:
            *(_WORD *)(a1 + 96) |= 0x400u;
            unint64_t v69 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v70 = *(void *)this;
            if (v69 > 0xFFFFFFFFFFFFFFF5 || v69 + 10 > v2)
            {
              char v128 = 0;
              unsigned int v129 = 0;
              uint64_t v73 = 0;
              if (v2 <= v69) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v69)
                {
                  LODWORD(v73) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_253;
                }
                unint64_t v130 = v69++;
                char v131 = *(unsigned char *)(v70 + v130);
                *((void *)this + 1) = v69;
                v73 |= (unint64_t)(v131 & 0x7F) << v128;
                if ((v131 & 0x80) == 0) {
                  break;
                }
                v128 += 7;
                BOOL v14 = v129++ > 8;
                if (v14)
                {
                  LODWORD(v73) = 0;
LABEL_252:
                  unint64_t v2 = v130 + 1;
                  goto LABEL_253;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v73) = 0;
              }
              goto LABEL_252;
            }
            char v71 = 0;
            unsigned int v72 = 0;
            uint64_t v73 = 0;
            do
            {
              unint64_t v2 = v69 + 1;
              *((void *)this + 1) = v69 + 1;
              char v74 = *(unsigned char *)(v70 + v69);
              v73 |= (unint64_t)(v74 & 0x7F) << v71;
              if ((v74 & 0x80) == 0) {
                goto LABEL_253;
              }
              v71 += 7;
              unint64_t v69 = v2;
              BOOL v14 = v72++ > 8;
            }
            while (!v14);
            LODWORD(v73) = 0;
LABEL_253:
            *(_DWORD *)(a1 + 80) = v73;
            break;
          case 307:
            *(_WORD *)(a1 + 96) |= 0x200u;
            unint64_t v75 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v76 = *(void *)this;
            if (v75 > 0xFFFFFFFFFFFFFFF5 || v75 + 10 > v2)
            {
              char v132 = 0;
              unsigned int v133 = 0;
              uint64_t v79 = 0;
              if (v2 <= v75) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v75)
                {
                  LODWORD(v79) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_258;
                }
                unint64_t v134 = v75++;
                char v135 = *(unsigned char *)(v76 + v134);
                *((void *)this + 1) = v75;
                v79 |= (unint64_t)(v135 & 0x7F) << v132;
                if ((v135 & 0x80) == 0) {
                  break;
                }
                v132 += 7;
                BOOL v14 = v133++ > 8;
                if (v14)
                {
                  LODWORD(v79) = 0;
LABEL_257:
                  unint64_t v2 = v134 + 1;
                  goto LABEL_258;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v79) = 0;
              }
              goto LABEL_257;
            }
            char v77 = 0;
            unsigned int v78 = 0;
            uint64_t v79 = 0;
            do
            {
              unint64_t v2 = v75 + 1;
              *((void *)this + 1) = v75 + 1;
              char v80 = *(unsigned char *)(v76 + v75);
              v79 |= (unint64_t)(v80 & 0x7F) << v77;
              if ((v80 & 0x80) == 0) {
                goto LABEL_258;
              }
              v77 += 7;
              unint64_t v75 = v2;
              BOOL v14 = v78++ > 8;
            }
            while (!v14);
            LODWORD(v79) = 0;
LABEL_258:
            *(_DWORD *)(a1 + 76) = v79;
            break;
          case 308:
            *(_WORD *)(a1 + 96) |= 4u;
            unint64_t v81 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v82 = *(void *)this;
            if (v81 > 0xFFFFFFFFFFFFFFF5 || v81 + 10 > v2)
            {
              char v136 = 0;
              unsigned int v137 = 0;
              uint64_t v85 = 0;
              if (v2 <= v81) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v81)
                {
                  uint64_t v85 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_263;
                }
                unint64_t v138 = v81++;
                char v139 = *(unsigned char *)(v82 + v138);
                *((void *)this + 1) = v81;
                v85 |= (unint64_t)(v139 & 0x7F) << v136;
                if ((v139 & 0x80) == 0) {
                  break;
                }
                v136 += 7;
                BOOL v14 = v137++ > 8;
                if (v14)
                {
                  uint64_t v85 = 0;
LABEL_262:
                  unint64_t v2 = v138 + 1;
                  goto LABEL_263;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v85 = 0;
              }
              goto LABEL_262;
            }
            char v83 = 0;
            unsigned int v84 = 0;
            uint64_t v85 = 0;
            do
            {
              unint64_t v2 = v81 + 1;
              *((void *)this + 1) = v81 + 1;
              char v86 = *(unsigned char *)(v82 + v81);
              v85 |= (unint64_t)(v86 & 0x7F) << v83;
              if ((v86 & 0x80) == 0) {
                goto LABEL_263;
              }
              v83 += 7;
              unint64_t v81 = v2;
              BOOL v14 = v84++ > 8;
            }
            while (!v14);
            uint64_t v85 = 0;
LABEL_263:
            *(void *)(a1 + 24) = v85;
            break;
          default:
            goto LABEL_121;
        }
      }
      else if ((int)v20 <= 200)
      {
        switch(v20)
        {
          case 'e':
            *(_WORD *)(a1 + 96) |= 0x1000u;
            unint64_t v87 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v88 = *(void *)this;
            if (v87 > 0xFFFFFFFFFFFFFFF5 || v87 + 10 > v2)
            {
              char v140 = 0;
              unsigned int v141 = 0;
              uint64_t v91 = 0;
              if (v2 <= v87) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v87)
                {
                  LODWORD(v91) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_268;
                }
                unint64_t v142 = v87++;
                char v143 = *(unsigned char *)(v88 + v142);
                *((void *)this + 1) = v87;
                v91 |= (unint64_t)(v143 & 0x7F) << v140;
                if ((v143 & 0x80) == 0) {
                  break;
                }
                v140 += 7;
                BOOL v14 = v141++ > 8;
                if (v14)
                {
                  LODWORD(v91) = 0;
                  goto LABEL_267;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v91) = 0;
              }
LABEL_267:
              unint64_t v2 = v142 + 1;
            }
            else
            {
              char v89 = 0;
              unsigned int v90 = 0;
              uint64_t v91 = 0;
              while (1)
              {
                unint64_t v2 = v87 + 1;
                *((void *)this + 1) = v87 + 1;
                char v92 = *(unsigned char *)(v88 + v87);
                v91 |= (unint64_t)(v92 & 0x7F) << v89;
                if ((v92 & 0x80) == 0) {
                  break;
                }
                v89 += 7;
                unint64_t v87 = v2;
                BOOL v14 = v90++ > 8;
                if (v14)
                {
                  LODWORD(v91) = 0;
                  break;
                }
              }
            }
LABEL_268:
            *(_DWORD *)(a1 + 88) = v91;
            break;
          case 'f':
            *(_WORD *)(a1 + 96) |= 0x800u;
            unint64_t v93 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v94 = *(void *)this;
            if (v93 > 0xFFFFFFFFFFFFFFF5 || v93 + 10 > v2)
            {
              char v144 = 0;
              unsigned int v145 = 0;
              uint64_t v97 = 0;
              if (v2 <= v93) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v93)
                {
                  LODWORD(v97) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_273;
                }
                unint64_t v146 = v93++;
                char v147 = *(unsigned char *)(v94 + v146);
                *((void *)this + 1) = v93;
                v97 |= (unint64_t)(v147 & 0x7F) << v144;
                if ((v147 & 0x80) == 0) {
                  break;
                }
                v144 += 7;
                BOOL v14 = v145++ > 8;
                if (v14)
                {
                  LODWORD(v97) = 0;
                  goto LABEL_272;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v97) = 0;
              }
LABEL_272:
              unint64_t v2 = v146 + 1;
            }
            else
            {
              char v95 = 0;
              unsigned int v96 = 0;
              uint64_t v97 = 0;
              while (1)
              {
                unint64_t v2 = v93 + 1;
                *((void *)this + 1) = v93 + 1;
                char v98 = *(unsigned char *)(v94 + v93);
                v97 |= (unint64_t)(v98 & 0x7F) << v95;
                if ((v98 & 0x80) == 0) {
                  break;
                }
                v95 += 7;
                unint64_t v93 = v2;
                BOOL v14 = v96++ > 8;
                if (v14)
                {
                  LODWORD(v97) = 0;
                  break;
                }
              }
            }
LABEL_273:
            *(_DWORD *)(a1 + 84) = v97;
            break;
          case 'g':
            *(_WORD *)(a1 + 96) |= 0x100u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
            {
              *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v2);
              unint64_t v2 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v2;
            }
            else
            {
              *((unsigned char *)this + 24) = 1;
            }
            break;
          default:
LABEL_121:
            uint64_t result = PB::Reader::skip(this);
            if (!result) {
              return result;
            }
            unint64_t v2 = *((void *)this + 1);
            break;
        }
      }
      else
      {
        switch((int)v20)
        {
          case 201:
            *(_WORD *)(a1 + 96) |= 0x80u;
            unint64_t v21 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v22 = *(void *)this;
            if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
            {
              char v100 = 0;
              unsigned int v101 = 0;
              uint64_t v25 = 0;
              if (v2 <= v21) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v21)
                {
                  uint64_t v25 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_218;
                }
                unint64_t v102 = v21++;
                char v103 = *(unsigned char *)(v22 + v102);
                *((void *)this + 1) = v21;
                v25 |= (unint64_t)(v103 & 0x7F) << v100;
                if ((v103 & 0x80) == 0) {
                  break;
                }
                v100 += 7;
                BOOL v14 = v101++ > 8;
                if (v14)
                {
                  uint64_t v25 = 0;
LABEL_217:
                  unint64_t v2 = v102 + 1;
                  goto LABEL_218;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v25 = 0;
              }
              goto LABEL_217;
            }
            char v23 = 0;
            unsigned int v24 = 0;
            uint64_t v25 = 0;
            do
            {
              unint64_t v2 = v21 + 1;
              *((void *)this + 1) = v21 + 1;
              char v26 = *(unsigned char *)(v22 + v21);
              v25 |= (unint64_t)(v26 & 0x7F) << v23;
              if ((v26 & 0x80) == 0) {
                goto LABEL_218;
              }
              v23 += 7;
              unint64_t v21 = v2;
              BOOL v14 = v24++ > 8;
            }
            while (!v14);
            uint64_t v25 = 0;
LABEL_218:
            *(void *)(a1 + 64) = v25;
            break;
          case 202:
            *(_WORD *)(a1 + 96) |= 0x8000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v34 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v33 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v34 = v33 != 0;
            }
            *(unsigned char *)(a1 + 94) = v34;
            break;
          case 203:
            *(_WORD *)(a1 + 96) |= 0x4000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v36 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v35 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v36 = v35 != 0;
            }
            *(unsigned char *)(a1 + 93) = v36;
            break;
          case 204:
            *(_WORD *)(a1 + 96) |= 0x2000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v38 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v37 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v38 = v37 != 0;
            }
            *(unsigned char *)(a1 + 92) = v38;
            break;
          case 205:
            *(_WORD *)(a1 + 96) |= 2u;
            unint64_t v39 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v40 = *(void *)this;
            if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
            {
              char v108 = 0;
              unsigned int v109 = 0;
              uint64_t v43 = 0;
              if (v2 <= v39) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v39)
                {
                  uint64_t v43 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_228;
                }
                unint64_t v110 = v39++;
                char v111 = *(unsigned char *)(v40 + v110);
                *((void *)this + 1) = v39;
                v43 |= (unint64_t)(v111 & 0x7F) << v108;
                if ((v111 & 0x80) == 0) {
                  break;
                }
                v108 += 7;
                BOOL v14 = v109++ > 8;
                if (v14)
                {
                  uint64_t v43 = 0;
LABEL_227:
                  unint64_t v2 = v110 + 1;
                  goto LABEL_228;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v43 = 0;
              }
              goto LABEL_227;
            }
            char v41 = 0;
            unsigned int v42 = 0;
            uint64_t v43 = 0;
            do
            {
              unint64_t v2 = v39 + 1;
              *((void *)this + 1) = v39 + 1;
              char v44 = *(unsigned char *)(v40 + v39);
              v43 |= (unint64_t)(v44 & 0x7F) << v41;
              if ((v44 & 0x80) == 0) {
                goto LABEL_228;
              }
              v41 += 7;
              unint64_t v39 = v2;
              BOOL v14 = v42++ > 8;
            }
            while (!v14);
            uint64_t v43 = 0;
LABEL_228:
            *(void *)(a1 + 16) = v43;
            break;
          default:
            goto LABEL_121;
        }
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B8403C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 96);
  if ((v4 & 0x1000) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    __int16 v4 = *(_WORD *)(v3 + 96);
    if ((v4 & 0x800) == 0)
    {
LABEL_3:
      if ((v4 & 0x100) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((*(_WORD *)(result + 96) & 0x800) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x100) == 0)
  {
LABEL_4:
    if ((v4 & 0x80) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72));
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x80) == 0)
  {
LABEL_5:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x8000) == 0)
  {
LABEL_6:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x4000) == 0)
  {
LABEL_7:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x2000) == 0)
  {
LABEL_8:
    if ((v4 & 2) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 2) == 0)
  {
LABEL_9:
    if ((v4 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 8) == 0)
  {
LABEL_10:
    if ((v4 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x10) == 0)
  {
LABEL_11:
    if ((v4 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x20) == 0)
  {
LABEL_12:
    if ((v4 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x40) == 0)
  {
LABEL_13:
    if ((v4 & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 1) == 0)
  {
LABEL_14:
    if ((v4 & 0x400) == 0) {
      goto LABEL_15;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x400) == 0)
  {
LABEL_15:
    if ((v4 & 0x200) == 0) {
      goto LABEL_16;
    }
LABEL_32:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(_WORD *)(v3 + 96) & 4) == 0) {
      return result;
    }
    goto LABEL_33;
  }
LABEL_31:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x200) != 0) {
    goto LABEL_32;
  }
LABEL_16:
  if ((v4 & 4) == 0) {
    return result;
  }
LABEL_33:

  return PB::Writer::writeVarInt(this);
}

double sub_227B84234(uint64_t a1)
{
  *(void *)a1 = &unk_26DC21110;
  *(_DWORD *)(a1 + 120) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)(a1 + 72) = 0;
  return result;
}

void sub_227B84270(PB::Base *this)
{
  *(void *)this = &unk_26DC21110;
  unint64_t v2 = (void *)*((void *)this + 7);
  if (v2)
  {
    *((void *)this + 8) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 4);
  if (v3)
  {
    *((void *)this + 5) = v3;
    operator delete(v3);
  }
  __int16 v4 = (void *)*((void *)this + 1);
  if (v4)
  {
    *((void *)this + 2) = v4;
    operator delete(v4);
  }

  PB::Base::~Base(this);
}

void sub_227B842F4(PB::Base *a1)
{
  sub_227B84270(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B8432C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 8) = 0u;
  __int16 v4 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)a1 = &unk_26DC21110;
  *(_DWORD *)(a1 + 120) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 72) = 0;
  __int16 v5 = *(_WORD *)(a2 + 120);
  if ((v5 & 2) != 0)
  {
    uint64_t v7 = *(void *)(a2 + 88);
    __int16 v6 = 2;
    *(_WORD *)(a1 + 120) = 2;
    *(void *)(a1 + 88) = v7;
    __int16 v5 = *(_WORD *)(a2 + 120);
    if ((v5 & 0x200) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v6 = 0;
  if ((*(_WORD *)(a2 + 120) & 0x200) != 0)
  {
LABEL_5:
    char v8 = *(unsigned char *)(a2 + 118);
    v6 |= 0x200u;
    *(_WORD *)(a1 + 120) = v6;
    *(unsigned char *)(a1 + 118) = v8;
    __int16 v5 = *(_WORD *)(a2 + 120);
  }
LABEL_6:
  if (v5)
  {
    uint64_t v9 = *(void *)(a2 + 80);
    *(_WORD *)(a1 + 120) = v6 | 1;
    *(void *)(a1 + 80) = v9;
  }
  if (a1 != a2)
  {
    sub_227B8B74C(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
    sub_227B8BA68((char *)(a1 + 56), *(char **)(a2 + 56), *(void *)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 2);
    sub_227B8BA68((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
  }
  __int16 v10 = *(_WORD *)(a2 + 120);
  if ((v10 & 0x80) != 0)
  {
    char v13 = *(unsigned char *)(a2 + 116);
    *(_WORD *)(a1 + 120) |= 0x80u;
    *(unsigned char *)(a1 + 116) = v13;
    __int16 v10 = *(_WORD *)(a2 + 120);
    if ((v10 & 0x100) == 0)
    {
LABEL_12:
      if ((v10 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_21;
    }
  }
  else if ((*(_WORD *)(a2 + 120) & 0x100) == 0)
  {
    goto LABEL_12;
  }
  char v14 = *(unsigned char *)(a2 + 117);
  *(_WORD *)(a1 + 120) |= 0x100u;
  *(unsigned char *)(a1 + 117) = v14;
  __int16 v10 = *(_WORD *)(a2 + 120);
  if ((v10 & 4) == 0)
  {
LABEL_13:
    if ((v10 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_22;
  }
LABEL_21:
  int v15 = *(_DWORD *)(a2 + 96);
  *(_WORD *)(a1 + 120) |= 4u;
  *(_DWORD *)(a1 + 96) = v15;
  __int16 v10 = *(_WORD *)(a2 + 120);
  if ((v10 & 8) == 0)
  {
LABEL_14:
    if ((v10 & 0x40) == 0) {
      goto LABEL_15;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v16 = *(_DWORD *)(a2 + 100);
  *(_WORD *)(a1 + 120) |= 8u;
  *(_DWORD *)(a1 + 100) = v16;
  __int16 v10 = *(_WORD *)(a2 + 120);
  if ((v10 & 0x40) == 0)
  {
LABEL_15:
    if ((v10 & 0x20) == 0) {
      goto LABEL_16;
    }
LABEL_24:
    int v18 = *(_DWORD *)(a2 + 108);
    *(_WORD *)(a1 + 120) |= 0x20u;
    *(_DWORD *)(a1 + 108) = v18;
    if ((*(_WORD *)(a2 + 120) & 0x10) == 0) {
      return a1;
    }
    goto LABEL_17;
  }
LABEL_23:
  int v17 = *(_DWORD *)(a2 + 112);
  *(_WORD *)(a1 + 120) |= 0x40u;
  *(_DWORD *)(a1 + 112) = v17;
  __int16 v10 = *(_WORD *)(a2 + 120);
  if ((v10 & 0x20) != 0) {
    goto LABEL_24;
  }
LABEL_16:
  if ((v10 & 0x10) != 0)
  {
LABEL_17:
    int v11 = *(_DWORD *)(a2 + 104);
    *(_WORD *)(a1 + 120) |= 0x10u;
    *(_DWORD *)(a1 + 104) = v11;
  }
  return a1;
}

uint64_t sub_227B84514(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 120);
  if (v5)
  {
    PB::TextFormatter::format(this, "avgHorizontalDecelMax", *(double *)(a1 + 80));
    __int16 v5 = *(_WORD *)(a1 + 120);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "avgHorizontalDecelThresholdCoupled", *(float *)(a1 + 96));
  if ((*(_WORD *)(a1 + 120) & 8) != 0) {
LABEL_4:
  }
    PB::TextFormatter::format(this, "impactThresholdUncoupled", *(float *)(a1 + 100));
LABEL_5:
  __int16 v6 = *(double **)(a1 + 8);
  uint64_t v7 = *(double **)(a1 + 16);
  while (v6 != v7)
  {
    double v8 = *v6++;
    PB::TextFormatter::format(this, "inertialAccel", v8);
  }
  __int16 v9 = *(_WORD *)(a1 + 120);
  if ((v9 & 0x80) != 0)
  {
    PB::TextFormatter::format(this, "isMounted");
    __int16 v9 = *(_WORD *)(a1 + 120);
    if ((v9 & 0x100) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_28;
    }
  }
  else if ((*(_WORD *)(a1 + 120) & 0x100) == 0)
  {
    goto LABEL_9;
  }
  PB::TextFormatter::format(this, "isSimulated");
  __int16 v9 = *(_WORD *)(a1 + 120);
  if ((v9 & 0x10) == 0)
  {
LABEL_10:
    if ((v9 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_28:
  PB::TextFormatter::format(this, "nAccelGap");
  if ((*(_WORD *)(a1 + 120) & 0x20) != 0) {
LABEL_11:
  }
    PB::TextFormatter::format(this, "numResets");
LABEL_12:
  __int16 v10 = *(float **)(a1 + 32);
  int v11 = *(float **)(a1 + 40);
  while (v10 != v11)
  {
    float v12 = *v10++;
    PB::TextFormatter::format(this, "prevQ", v12);
  }
  char v13 = *(float **)(a1 + 56);
  char v14 = *(float **)(a1 + 64);
  while (v13 != v14)
  {
    float v15 = *v13++;
    PB::TextFormatter::format(this, "rawClampedAccel", v15);
  }
  __int16 v16 = *(_WORD *)(a1 + 120);
  if ((v16 & 0x200) != 0)
  {
    PB::TextFormatter::format(this, "shouldTrigger");
    __int16 v16 = *(_WORD *)(a1 + 120);
    if ((v16 & 2) == 0)
    {
LABEL_18:
      if ((v16 & 0x40) == 0) {
        goto LABEL_20;
      }
      goto LABEL_19;
    }
  }
  else if ((v16 & 2) == 0)
  {
    goto LABEL_18;
  }
  PB::TextFormatter::format(this, "timestamp");
  if ((*(_WORD *)(a1 + 120) & 0x40) != 0) {
LABEL_19:
  }
    PB::TextFormatter::format(this, "triggerPathBitmap");
LABEL_20:

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227B8472C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    double v8 = (void **)(a1 + 32);
    uint64_t v9 = a1 + 48;
    __int16 v10 = (void **)(a1 + 56);
    uint64_t v11 = a1 + 72;
    float v12 = (void **)(a1 + 8);
    uint64_t v13 = a1 + 24;
    while (1)
    {
      uint64_t v14 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v17 = 0;
      while (1)
      {
        unint64_t v18 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v19 = *(unsigned char *)(v14 + v2);
        v17 |= (unint64_t)(v19 & 0x7F) << v15;
        if ((v19 & 0x80) == 0) {
          break;
        }
        v15 += 7;
        unint64_t v2 = v18;
        BOOL v20 = v16++ > 8;
        if (v20) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v26 = v17 & 7;
      if (v26 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v17 >> 3))
      {
        case 1u:
          *(_WORD *)(a1 + 120) |= 2u;
          unint64_t v27 = *((void *)this + 1);
          unint64_t v28 = *((void *)this + 2);
          uint64_t v29 = *(void *)this;
          if (v27 <= 0xFFFFFFFFFFFFFFF5 && v27 + 10 <= v28)
          {
            char v30 = 0;
            unsigned int v31 = 0;
            uint64_t v32 = 0;
            do
            {
              unint64_t v33 = v27 + 1;
              *((void *)this + 1) = v27 + 1;
              char v34 = *(unsigned char *)(v29 + v27);
              v32 |= (unint64_t)(v34 & 0x7F) << v30;
              if ((v34 & 0x80) == 0) {
                goto LABEL_212;
              }
              v30 += 7;
              unint64_t v27 = v33;
              BOOL v20 = v31++ > 8;
            }
            while (!v20);
LABEL_146:
            uint64_t v32 = 0;
            goto LABEL_212;
          }
          char v116 = 0;
          unsigned int v117 = 0;
          uint64_t v32 = 0;
          if (v28 <= v27) {
            unint64_t v28 = *((void *)this + 1);
          }
          while (2)
          {
            if (v28 == v27)
            {
              uint64_t v32 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v118 = v27 + 1;
              char v119 = *(unsigned char *)(v29 + v27);
              *((void *)this + 1) = v118;
              v32 |= (unint64_t)(v119 & 0x7F) << v116;
              if (v119 < 0)
              {
                v116 += 7;
                unint64_t v27 = v118;
                BOOL v20 = v117++ > 8;
                if (v20) {
                  goto LABEL_146;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v32 = 0;
              }
            }
            break;
          }
LABEL_212:
          *(void *)(a1 + 88) = v32;
          goto LABEL_252;
        case 2u:
          *(_WORD *)(a1 + 120) |= 0x200u;
          unint64_t v35 = *((void *)this + 1);
          if (v35 >= *((void *)this + 2))
          {
            BOOL v38 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v36 = v35 + 1;
            int v37 = *(unsigned __int8 *)(*(void *)this + v35);
            *((void *)this + 1) = v36;
            BOOL v38 = v37 != 0;
          }
          *(unsigned char *)(a1 + 118) = v38;
          goto LABEL_252;
        case 3u:
          *(_WORD *)(a1 + 120) |= 1u;
          unint64_t v39 = *((void *)this + 1);
          if (v39 > 0xFFFFFFFFFFFFFFF7 || v39 + 8 > *((void *)this + 2)) {
            goto LABEL_248;
          }
          *(void *)(a1 + 80) = *(void *)(*(void *)this + v39);
          goto LABEL_231;
        case 4u:
          if (v26 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v40 = *((void *)this + 1);
            unint64_t v41 = *((void *)this + 2);
            while (v40 < v41 && !*((unsigned char *)this + 24))
            {
              uint64_t v43 = *(char **)(a1 + 16);
              unint64_t v42 = *(void *)(a1 + 24);
              if ((unint64_t)v43 >= v42)
              {
                unint64_t v45 = (char *)*v12;
                uint64_t v46 = (v43 - (unsigned char *)*v12) >> 3;
                unint64_t v47 = v46 + 1;
                if ((unint64_t)(v46 + 1) >> 61) {
                  goto LABEL_262;
                }
                uint64_t v48 = v42 - (void)v45;
                if (v48 >> 2 > v47) {
                  unint64_t v47 = v48 >> 2;
                }
                if ((unint64_t)v48 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v49 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v49 = v47;
                }
                if (v49)
                {
                  char v50 = (char *)sub_227B8B8B4(v13, v49);
                  unint64_t v45 = *(char **)(a1 + 8);
                  uint64_t v43 = *(char **)(a1 + 16);
                }
                else
                {
                  char v50 = 0;
                }
                unint64_t v51 = &v50[8 * v46];
                *(void *)unint64_t v51 = 0;
                char v44 = v51 + 8;
                while (v43 != v45)
                {
                  uint64_t v52 = *((void *)v43 - 1);
                  v43 -= 8;
                  *((void *)v51 - 1) = v52;
                  v51 -= 8;
                }
                *(void *)(a1 + 8) = v51;
                *(void *)(a1 + 16) = v44;
                *(void *)(a1 + 24) = &v50[8 * v49];
                if (v45) {
                  operator delete(v45);
                }
              }
              else
              {
                *(void *)uint64_t v43 = 0;
                char v44 = v43 + 8;
              }
              *(void *)(a1 + 16) = v44;
              unint64_t v53 = *((void *)this + 1);
              if (v53 > 0xFFFFFFFFFFFFFFF7 || v53 + 8 > *((void *)this + 2)) {
                goto LABEL_180;
              }
              *(v44 - 1) = *(void *)(*(void *)this + v53);
              unint64_t v41 = *((void *)this + 2);
              unint64_t v40 = *((void *)this + 1) + 8;
              *((void *)this + 1) = v40;
            }
            goto LABEL_181;
          }
          unsigned int v121 = *(char **)(a1 + 16);
          unint64_t v120 = *(void *)(a1 + 24);
          if ((unint64_t)v121 >= v120)
          {
            char v140 = (char *)*v12;
            uint64_t v141 = (v121 - (unsigned char *)*v12) >> 3;
            unint64_t v142 = v141 + 1;
            if ((unint64_t)(v141 + 1) >> 61) {
LABEL_262:
            }
              sub_227B8B89C();
            uint64_t v143 = v120 - (void)v140;
            if (v143 >> 2 > v142) {
              unint64_t v142 = v143 >> 2;
            }
            if ((unint64_t)v143 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v144 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v144 = v142;
            }
            if (v144)
            {
              unsigned int v145 = (char *)sub_227B8B8B4(v13, v144);
              char v140 = *(char **)(a1 + 8);
              unsigned int v121 = *(char **)(a1 + 16);
            }
            else
            {
              unsigned int v145 = 0;
            }
            char v158 = &v145[8 * v141];
            *(void *)char v158 = 0;
            unint64_t v122 = v158 + 8;
            while (v121 != v140)
            {
              uint64_t v159 = *((void *)v121 - 1);
              v121 -= 8;
              *((void *)v158 - 1) = v159;
              v158 -= 8;
            }
            *(void *)(a1 + 8) = v158;
            *(void *)(a1 + 16) = v122;
            *(void *)(a1 + 24) = &v145[8 * v144];
            if (v140) {
              operator delete(v140);
            }
          }
          else
          {
            *(void *)unsigned int v121 = 0;
            unint64_t v122 = v121 + 8;
          }
          *(void *)(a1 + 16) = v122;
          unint64_t v160 = *((void *)this + 1);
          if (v160 <= 0xFFFFFFFFFFFFFFF7 && v160 + 8 <= *((void *)this + 2))
          {
            *(v122 - 1) = *(void *)(*(void *)this + v160);
LABEL_231:
            uint64_t v161 = *((void *)this + 1) + 8;
            goto LABEL_251;
          }
          goto LABEL_248;
        case 5u:
          if (v26 != 2)
          {
            char v124 = *(char **)(a1 + 64);
            unint64_t v123 = *(void *)(a1 + 72);
            if ((unint64_t)v124 >= v123)
            {
              unint64_t v146 = (char *)*v10;
              uint64_t v147 = (v124 - (unsigned char *)*v10) >> 2;
              unint64_t v148 = v147 + 1;
              if ((unint64_t)(v147 + 1) >> 62) {
LABEL_263:
              }
                sub_227B8B89C();
              uint64_t v149 = v123 - (void)v146;
              if (v149 >> 1 > v148) {
                unint64_t v148 = v149 >> 1;
              }
              if ((unint64_t)v149 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v150 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v150 = v148;
              }
              if (v150)
              {
                unsigned int v151 = (char *)sub_227B8BBB8(v11, v150);
                unint64_t v146 = *(char **)(a1 + 56);
                char v124 = *(char **)(a1 + 64);
              }
              else
              {
                unsigned int v151 = 0;
              }
              char v162 = &v151[4 * v147];
              *(_DWORD *)char v162 = 0;
              unsigned int v125 = v162 + 4;
              while (v124 != v146)
              {
                int v163 = *((_DWORD *)v124 - 1);
                v124 -= 4;
                *((_DWORD *)v162 - 1) = v163;
                v162 -= 4;
              }
              *(void *)(a1 + 56) = v162;
              *(void *)(a1 + 64) = v125;
              *(void *)(a1 + 72) = &v151[4 * v150];
              if (v146) {
                operator delete(v146);
              }
            }
            else
            {
              *(_DWORD *)char v124 = 0;
              unsigned int v125 = v124 + 4;
            }
            *(void *)(a1 + 64) = v125;
            goto LABEL_246;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v54 = *((void *)this + 1);
          unint64_t v55 = *((void *)this + 2);
          while (v54 < v55 && !*((unsigned char *)this + 24))
          {
            unint64_t v57 = *(char **)(a1 + 64);
            unint64_t v56 = *(void *)(a1 + 72);
            if ((unint64_t)v57 >= v56)
            {
              char v59 = (char *)*v10;
              uint64_t v60 = (v57 - (unsigned char *)*v10) >> 2;
              unint64_t v61 = v60 + 1;
              if ((unint64_t)(v60 + 1) >> 62) {
                goto LABEL_263;
              }
              uint64_t v62 = v56 - (void)v59;
              if (v62 >> 1 > v61) {
                unint64_t v61 = v62 >> 1;
              }
              if ((unint64_t)v62 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v63 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v63 = v61;
              }
              if (v63)
              {
                uint64_t v64 = (char *)sub_227B8BBB8(v11, v63);
                char v59 = *(char **)(a1 + 56);
                unint64_t v57 = *(char **)(a1 + 64);
              }
              else
              {
                uint64_t v64 = 0;
              }
              char v65 = &v64[4 * v60];
              *(_DWORD *)char v65 = 0;
              uint64_t v58 = v65 + 4;
              while (v57 != v59)
              {
                int v66 = *((_DWORD *)v57 - 1);
                v57 -= 4;
                *((_DWORD *)v65 - 1) = v66;
                v65 -= 4;
              }
              *(void *)(a1 + 56) = v65;
              *(void *)(a1 + 64) = v58;
              *(void *)(a1 + 72) = &v64[4 * v63];
              if (v59) {
                operator delete(v59);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v57 = 0;
              uint64_t v58 = v57 + 4;
            }
            *(void *)(a1 + 64) = v58;
            unint64_t v67 = *((void *)this + 1);
            if (v67 > 0xFFFFFFFFFFFFFFFBLL || v67 + 4 > *((void *)this + 2)) {
              goto LABEL_180;
            }
            *(v58 - 1) = *(_DWORD *)(*(void *)this + v67);
            unint64_t v55 = *((void *)this + 2);
            unint64_t v54 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v54;
          }
          goto LABEL_181;
        case 6u:
          if (v26 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v68 = *((void *)this + 1);
            unint64_t v69 = *((void *)this + 2);
            while (v68 < v69 && !*((unsigned char *)this + 24))
            {
              char v71 = *(char **)(a1 + 40);
              unint64_t v70 = *(void *)(a1 + 48);
              if ((unint64_t)v71 >= v70)
              {
                uint64_t v73 = (char *)*v8;
                uint64_t v74 = (v71 - (unsigned char *)*v8) >> 2;
                unint64_t v75 = v74 + 1;
                if ((unint64_t)(v74 + 1) >> 62) {
                  goto LABEL_264;
                }
                uint64_t v76 = v70 - (void)v73;
                if (v76 >> 1 > v75) {
                  unint64_t v75 = v76 >> 1;
                }
                if ((unint64_t)v76 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v77 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v77 = v75;
                }
                if (v77)
                {
                  unsigned int v78 = (char *)sub_227B8BBB8(v9, v77);
                  uint64_t v73 = *(char **)(a1 + 32);
                  char v71 = *(char **)(a1 + 40);
                }
                else
                {
                  unsigned int v78 = 0;
                }
                uint64_t v79 = &v78[4 * v74];
                *(_DWORD *)uint64_t v79 = 0;
                unsigned int v72 = v79 + 4;
                while (v71 != v73)
                {
                  int v80 = *((_DWORD *)v71 - 1);
                  v71 -= 4;
                  *((_DWORD *)v79 - 1) = v80;
                  v79 -= 4;
                }
                *(void *)(a1 + 32) = v79;
                *(void *)(a1 + 40) = v72;
                *(void *)(a1 + 48) = &v78[4 * v77];
                if (v73) {
                  operator delete(v73);
                }
              }
              else
              {
                *(_DWORD *)char v71 = 0;
                unsigned int v72 = v71 + 4;
              }
              *(void *)(a1 + 40) = v72;
              unint64_t v81 = *((void *)this + 1);
              if (v81 > 0xFFFFFFFFFFFFFFFBLL || v81 + 4 > *((void *)this + 2))
              {
LABEL_180:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v72 - 1) = *(_DWORD *)(*(void *)this + v81);
              unint64_t v69 = *((void *)this + 2);
              unint64_t v68 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v68;
            }
LABEL_181:
            PB::Reader::recallMark();
          }
          else
          {
            char v127 = *(char **)(a1 + 40);
            unint64_t v126 = *(void *)(a1 + 48);
            if ((unint64_t)v127 >= v126)
            {
              uint64_t v152 = (char *)*v8;
              uint64_t v153 = (v127 - (unsigned char *)*v8) >> 2;
              unint64_t v154 = v153 + 1;
              if ((unint64_t)(v153 + 1) >> 62) {
LABEL_264:
              }
                sub_227B8B89C();
              uint64_t v155 = v126 - (void)v152;
              if (v155 >> 1 > v154) {
                unint64_t v154 = v155 >> 1;
              }
              if ((unint64_t)v155 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v156 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v156 = v154;
              }
              if (v156)
              {
                uint64_t v157 = (char *)sub_227B8BBB8(v9, v156);
                uint64_t v152 = *(char **)(a1 + 32);
                char v127 = *(char **)(a1 + 40);
              }
              else
              {
                uint64_t v157 = 0;
              }
              unint64_t v164 = &v157[4 * v153];
              *(_DWORD *)unint64_t v164 = 0;
              unsigned int v125 = v164 + 4;
              while (v127 != v152)
              {
                int v165 = *((_DWORD *)v127 - 1);
                v127 -= 4;
                *((_DWORD *)v164 - 1) = v165;
                v164 -= 4;
              }
              *(void *)(a1 + 32) = v164;
              *(void *)(a1 + 40) = v125;
              *(void *)(a1 + 48) = &v157[4 * v156];
              if (v152) {
                operator delete(v152);
              }
            }
            else
            {
              *(_DWORD *)char v127 = 0;
              unsigned int v125 = v127 + 4;
            }
            *(void *)(a1 + 40) = v125;
LABEL_246:
            unint64_t v166 = *((void *)this + 1);
            if (v166 <= 0xFFFFFFFFFFFFFFFBLL && v166 + 4 <= *((void *)this + 2))
            {
              *(v125 - 1) = *(_DWORD *)(*(void *)this + v166);
LABEL_250:
              uint64_t v161 = *((void *)this + 1) + 4;
LABEL_251:
              *((void *)this + 1) = v161;
            }
            else
            {
LABEL_248:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_252:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        case 7u:
          *(_WORD *)(a1 + 120) |= 0x80u;
          unint64_t v82 = *((void *)this + 1);
          if (v82 >= *((void *)this + 2))
          {
            BOOL v85 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v83 = v82 + 1;
            int v84 = *(unsigned __int8 *)(*(void *)this + v82);
            *((void *)this + 1) = v83;
            BOOL v85 = v84 != 0;
          }
          *(unsigned char *)(a1 + 116) = v85;
          goto LABEL_252;
        case 8u:
          *(_WORD *)(a1 + 120) |= 0x100u;
          unint64_t v86 = *((void *)this + 1);
          if (v86 >= *((void *)this + 2))
          {
            BOOL v89 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v87 = v86 + 1;
            int v88 = *(unsigned __int8 *)(*(void *)this + v86);
            *((void *)this + 1) = v87;
            BOOL v89 = v88 != 0;
          }
          *(unsigned char *)(a1 + 117) = v89;
          goto LABEL_252;
        case 9u:
          *(_WORD *)(a1 + 120) |= 4u;
          unint64_t v90 = *((void *)this + 1);
          if (v90 > 0xFFFFFFFFFFFFFFFBLL || v90 + 4 > *((void *)this + 2)) {
            goto LABEL_248;
          }
          *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v90);
          goto LABEL_250;
        case 0xAu:
          *(_WORD *)(a1 + 120) |= 8u;
          unint64_t v91 = *((void *)this + 1);
          if (v91 > 0xFFFFFFFFFFFFFFFBLL || v91 + 4 > *((void *)this + 2)) {
            goto LABEL_248;
          }
          *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v91);
          goto LABEL_250;
        case 0xBu:
          *(_WORD *)(a1 + 120) |= 0x40u;
          unint64_t v92 = *((void *)this + 1);
          unint64_t v93 = *((void *)this + 2);
          uint64_t v94 = *(void *)this;
          if (v92 <= 0xFFFFFFFFFFFFFFF5 && v92 + 10 <= v93)
          {
            char v95 = 0;
            unsigned int v96 = 0;
            uint64_t v97 = 0;
            do
            {
              unint64_t v98 = v92 + 1;
              *((void *)this + 1) = v92 + 1;
              char v99 = *(unsigned char *)(v94 + v92);
              v97 |= (unint64_t)(v99 & 0x7F) << v95;
              if ((v99 & 0x80) == 0) {
                goto LABEL_215;
              }
              v95 += 7;
              unint64_t v92 = v98;
              BOOL v20 = v96++ > 8;
            }
            while (!v20);
LABEL_165:
            LODWORD(v97) = 0;
            goto LABEL_215;
          }
          char v128 = 0;
          unsigned int v129 = 0;
          uint64_t v97 = 0;
          if (v93 <= v92) {
            unint64_t v93 = *((void *)this + 1);
          }
          while (2)
          {
            if (v93 == v92)
            {
              LODWORD(v97) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v130 = v92 + 1;
              char v131 = *(unsigned char *)(v94 + v92);
              *((void *)this + 1) = v130;
              v97 |= (unint64_t)(v131 & 0x7F) << v128;
              if (v131 < 0)
              {
                v128 += 7;
                unint64_t v92 = v130;
                BOOL v20 = v129++ > 8;
                if (v20) {
                  goto LABEL_165;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v97) = 0;
              }
            }
            break;
          }
LABEL_215:
          *(_DWORD *)(a1 + 112) = v97;
          goto LABEL_252;
        case 0xCu:
          *(_WORD *)(a1 + 120) |= 0x20u;
          unint64_t v100 = *((void *)this + 1);
          unint64_t v101 = *((void *)this + 2);
          uint64_t v102 = *(void *)this;
          if (v100 <= 0xFFFFFFFFFFFFFFF5 && v100 + 10 <= v101)
          {
            char v103 = 0;
            unsigned int v104 = 0;
            uint64_t v105 = 0;
            do
            {
              unint64_t v106 = v100 + 1;
              *((void *)this + 1) = v100 + 1;
              char v107 = *(unsigned char *)(v102 + v100);
              v105 |= (unint64_t)(v107 & 0x7F) << v103;
              if ((v107 & 0x80) == 0) {
                goto LABEL_218;
              }
              v103 += 7;
              unint64_t v100 = v106;
              BOOL v20 = v104++ > 8;
            }
            while (!v20);
LABEL_172:
            LODWORD(v105) = 0;
            goto LABEL_218;
          }
          char v132 = 0;
          unsigned int v133 = 0;
          uint64_t v105 = 0;
          if (v101 <= v100) {
            unint64_t v101 = *((void *)this + 1);
          }
          while (2)
          {
            if (v101 == v100)
            {
              LODWORD(v105) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v134 = v100 + 1;
              char v135 = *(unsigned char *)(v102 + v100);
              *((void *)this + 1) = v134;
              v105 |= (unint64_t)(v135 & 0x7F) << v132;
              if (v135 < 0)
              {
                v132 += 7;
                unint64_t v100 = v134;
                BOOL v20 = v133++ > 8;
                if (v20) {
                  goto LABEL_172;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v105) = 0;
              }
            }
            break;
          }
LABEL_218:
          *(_DWORD *)(a1 + 108) = v105;
          goto LABEL_252;
        case 0xDu:
          *(_WORD *)(a1 + 120) |= 0x10u;
          unint64_t v108 = *((void *)this + 1);
          unint64_t v109 = *((void *)this + 2);
          uint64_t v110 = *(void *)this;
          if (v108 <= 0xFFFFFFFFFFFFFFF5 && v108 + 10 <= v109)
          {
            char v111 = 0;
            unsigned int v112 = 0;
            uint64_t v113 = 0;
            do
            {
              unint64_t v114 = v108 + 1;
              *((void *)this + 1) = v108 + 1;
              char v115 = *(unsigned char *)(v110 + v108);
              v113 |= (unint64_t)(v115 & 0x7F) << v111;
              if ((v115 & 0x80) == 0) {
                goto LABEL_221;
              }
              v111 += 7;
              unint64_t v108 = v114;
              BOOL v20 = v112++ > 8;
            }
            while (!v20);
LABEL_179:
            LODWORD(v113) = 0;
            goto LABEL_221;
          }
          char v136 = 0;
          unsigned int v137 = 0;
          uint64_t v113 = 0;
          if (v109 <= v108) {
            unint64_t v109 = *((void *)this + 1);
          }
          while (2)
          {
            if (v109 == v108)
            {
              LODWORD(v113) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v138 = v108 + 1;
              char v139 = *(unsigned char *)(v110 + v108);
              *((void *)this + 1) = v138;
              v113 |= (unint64_t)(v139 & 0x7F) << v136;
              if (v139 < 0)
              {
                v136 += 7;
                unint64_t v108 = v138;
                BOOL v20 = v137++ > 8;
                if (v20) {
                  goto LABEL_179;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v113) = 0;
              }
            }
            break;
          }
LABEL_221:
          *(_DWORD *)(a1 + 104) = v113;
          goto LABEL_252;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_252;
      }
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v17 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v23 = v2 + 1;
      char v24 = *(unsigned char *)(v14 + v2);
      *((void *)this + 1) = v23;
      v17 |= (unint64_t)(v24 & 0x7F) << v21;
      if ((v24 & 0x80) == 0) {
        goto LABEL_21;
      }
      v21 += 7;
      unint64_t v2 = v23;
      if (v22++ >= 9)
      {
LABEL_20:
        unint64_t v17 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B853BC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 120);
  if ((v4 & 2) == 0)
  {
    if ((*(_WORD *)(result + 120) & 0x200) == 0) {
      goto LABEL_3;
    }
LABEL_23:
    double result = PB::Writer::write(this);
    if ((*(_WORD *)(v3 + 120) & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  double result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 120);
  if ((v4 & 0x200) != 0) {
    goto LABEL_23;
  }
LABEL_3:
  if (v4) {
LABEL_4:
  }
    double result = PB::Writer::write(this, *(double *)(v3 + 80));
LABEL_5:
  __int16 v5 = *(double **)(v3 + 8);
  __int16 v6 = *(double **)(v3 + 16);
  while (v5 != v6)
  {
    double v7 = *v5++;
    double result = PB::Writer::write(this, v7);
  }
  double v8 = *(float **)(v3 + 56);
  uint64_t v9 = *(float **)(v3 + 64);
  while (v8 != v9)
  {
    float v10 = *v8++;
    double result = PB::Writer::write(this, v10);
  }
  uint64_t v11 = *(float **)(v3 + 32);
  float v12 = *(float **)(v3 + 40);
  while (v11 != v12)
  {
    float v13 = *v11++;
    double result = PB::Writer::write(this, v13);
  }
  __int16 v14 = *(_WORD *)(v3 + 120);
  if ((v14 & 0x80) != 0)
  {
    double result = PB::Writer::write(this);
    __int16 v14 = *(_WORD *)(v3 + 120);
    if ((v14 & 0x100) == 0)
    {
LABEL_16:
      if ((v14 & 4) == 0) {
        goto LABEL_17;
      }
      goto LABEL_27;
    }
  }
  else if ((*(_WORD *)(v3 + 120) & 0x100) == 0)
  {
    goto LABEL_16;
  }
  double result = PB::Writer::write(this);
  __int16 v14 = *(_WORD *)(v3 + 120);
  if ((v14 & 4) == 0)
  {
LABEL_17:
    if ((v14 & 8) == 0) {
      goto LABEL_18;
    }
    goto LABEL_28;
  }
LABEL_27:
  double result = PB::Writer::write(this, *(float *)(v3 + 96));
  __int16 v14 = *(_WORD *)(v3 + 120);
  if ((v14 & 8) == 0)
  {
LABEL_18:
    if ((v14 & 0x40) == 0) {
      goto LABEL_19;
    }
    goto LABEL_29;
  }
LABEL_28:
  double result = PB::Writer::write(this, *(float *)(v3 + 100));
  __int16 v14 = *(_WORD *)(v3 + 120);
  if ((v14 & 0x40) == 0)
  {
LABEL_19:
    if ((v14 & 0x20) == 0) {
      goto LABEL_20;
    }
LABEL_30:
    double result = PB::Writer::writeVarInt(this);
    if ((*(_WORD *)(v3 + 120) & 0x10) == 0) {
      return result;
    }
    goto LABEL_31;
  }
LABEL_29:
  double result = PB::Writer::writeVarInt(this);
  __int16 v14 = *(_WORD *)(v3 + 120);
  if ((v14 & 0x20) != 0) {
    goto LABEL_30;
  }
LABEL_20:
  if ((v14 & 0x10) == 0) {
    return result;
  }
LABEL_31:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227B85578(uint64_t result)
{
  *(void *)double result = &unk_26DC21148;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void sub_227B855A0(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B855D8(uint64_t result, uint64_t a2)
{
  *(void *)double result = &unk_26DC21148;
  *(_DWORD *)(result + 16) = 0;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v2 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 16) = 1;
    *(void *)(result + 8) = v2;
  }
  return result;
}

uint64_t sub_227B85614(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 16)) {
    PB::TextFormatter::format(this, "timestamp");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B85674(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 16) |= 1u;
        unint64_t v20 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
        uint64_t v21 = *(void *)this;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v3)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v24 = 0;
          if (v3 <= v20) {
            unint64_t v2 = *((void *)this + 1);
          }
          else {
            unint64_t v2 = *((void *)this + 2);
          }
          while (1)
          {
            if (v2 == v20)
            {
              uint64_t v24 = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_43;
            }
            unint64_t v29 = v20++;
            char v30 = *(unsigned char *)(v21 + v29);
            *((void *)this + 1) = v20;
            v24 |= (unint64_t)(v30 & 0x7F) << v27;
            if ((v30 & 0x80) == 0) {
              break;
            }
            v27 += 7;
            BOOL v14 = v28++ > 8;
            if (v14)
            {
              uint64_t v24 = 0;
              goto LABEL_42;
            }
          }
          if (*((unsigned char *)this + 24)) {
            uint64_t v24 = 0;
          }
LABEL_42:
          unint64_t v2 = v29 + 1;
        }
        else
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          while (1)
          {
            unint64_t v2 = v20 + 1;
            *((void *)this + 1) = v20 + 1;
            char v25 = *(unsigned char *)(v21 + v20);
            v24 |= (unint64_t)(v25 & 0x7F) << v22;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v22 += 7;
            unint64_t v20 = v2;
            BOOL v14 = v23++ > 8;
            if (v14)
            {
              uint64_t v24 = 0;
              break;
            }
          }
        }
LABEL_43:
        *(void *)(a1 + 8) = v24;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B858AC(uint64_t result, PB::Writer *this)
{
  if (*(unsigned char *)(result + 16)) {
    return PB::Writer::writeVarInt(this);
  }
  return result;
}

void *sub_227B858CC(void *result)
{
  *uint64_t result = &unk_26DC21180;
  *(void *)((char *)result + 164) = 0;
  return result;
}

void sub_227B858F4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B8592C(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC21180;
  *(void *)(result + 164) = 0;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x100000000) != 0)
  {
    char v4 = *(unsigned char *)(a2 + 160);
    uint64_t v3 = 0x100000000;
    *(void *)(result + 164) = 0x100000000;
    *(unsigned char *)(result + 160) = v4;
    uint64_t v2 = *(void *)(a2 + 164);
    if ((v2 & 0x100000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v3 = 0;
  if ((v2 & 0x100000) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 112);
    v3 |= 0x100000uLL;
    *(void *)(result + 164) = v3;
    *(_DWORD *)(result + 112) = v5;
    uint64_t v2 = *(void *)(a2 + 164);
  }
LABEL_6:
  if ((v2 & 0x80000) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 108);
    v3 |= 0x80000uLL;
    *(void *)(result + 164) = v3;
    *(_DWORD *)(result + 108) = v6;
    uint64_t v2 = *(void *)(a2 + 164);
    if ((v2 & 0x1000000) == 0)
    {
LABEL_8:
      if ((v2 & 0x20000000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_40;
    }
  }
  else if ((v2 & 0x1000000) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 128);
  v3 |= 0x1000000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 128) = v7;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x20000000) == 0)
  {
LABEL_9:
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_41;
  }
LABEL_40:
  int v8 = *(_DWORD *)(a2 + 148);
  v3 |= 0x20000000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 148) = v8;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_10:
    if ((v2 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_42;
  }
LABEL_41:
  int v9 = *(_DWORD *)(a2 + 136);
  v3 |= 0x4000000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 136) = v9;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x80000000) == 0)
  {
LABEL_11:
    if ((v2 & 0x10000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_43;
  }
LABEL_42:
  int v10 = *(_DWORD *)(a2 + 156);
  v3 |= 0x80000000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 156) = v10;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_12:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_44;
  }
LABEL_43:
  int v11 = *(_DWORD *)(a2 + 144);
  v3 |= 0x10000000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 144) = v11;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x200000) == 0)
  {
LABEL_13:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_45;
  }
LABEL_44:
  int v12 = *(_DWORD *)(a2 + 116);
  v3 |= 0x200000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 116) = v12;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x400000) == 0)
  {
LABEL_14:
    if ((v2 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_46;
  }
LABEL_45:
  int v13 = *(_DWORD *)(a2 + 120);
  v3 |= 0x400000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 120) = v13;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t v14 = *(void *)(a2 + 40);
  v3 |= 0x10uLL;
  *(void *)(result + 164) = v3;
  *(void *)(result + 40) = v14;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 8) == 0)
  {
LABEL_16:
    if ((v2 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t v15 = *(void *)(a2 + 32);
  v3 |= 8uLL;
  *(void *)(result + 164) = v3;
  *(void *)(result + 32) = v15;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 4) == 0)
  {
LABEL_17:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t v16 = *(void *)(a2 + 24);
  v3 |= 4uLL;
  *(void *)(result + 164) = v3;
  *(void *)(result + 24) = v16;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x8000) == 0)
  {
LABEL_18:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_50;
  }
LABEL_49:
  int v17 = *(_DWORD *)(a2 + 92);
  v3 |= 0x8000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 92) = v17;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x20000) == 0)
  {
LABEL_19:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_51;
  }
LABEL_50:
  int v18 = *(_DWORD *)(a2 + 100);
  v3 |= 0x20000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 100) = v18;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x10000) == 0)
  {
LABEL_20:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_52;
  }
LABEL_51:
  int v19 = *(_DWORD *)(a2 + 96);
  v3 |= 0x10000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 96) = v19;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x40000) == 0)
  {
LABEL_21:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_53;
  }
LABEL_52:
  int v20 = *(_DWORD *)(a2 + 104);
  v3 |= 0x40000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 104) = v20;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x4000) == 0)
  {
LABEL_22:
    if ((v2 & 0x40) == 0) {
      goto LABEL_23;
    }
    goto LABEL_54;
  }
LABEL_53:
  int v21 = *(_DWORD *)(a2 + 88);
  v3 |= 0x4000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 88) = v21;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x40) == 0)
  {
LABEL_23:
    if ((v2 & 0x80) == 0) {
      goto LABEL_24;
    }
    goto LABEL_55;
  }
LABEL_54:
  int v22 = *(_DWORD *)(a2 + 56);
  v3 |= 0x40uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 56) = v22;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x80) == 0)
  {
LABEL_24:
    if ((v2 & 0x800) == 0) {
      goto LABEL_25;
    }
    goto LABEL_56;
  }
LABEL_55:
  int v23 = *(_DWORD *)(a2 + 60);
  v3 |= 0x80uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 60) = v23;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x800) == 0)
  {
LABEL_25:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_57;
  }
LABEL_56:
  int v24 = *(_DWORD *)(a2 + 76);
  v3 |= 0x800uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 76) = v24;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x1000) == 0)
  {
LABEL_26:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_58;
  }
LABEL_57:
  int v25 = *(_DWORD *)(a2 + 80);
  v3 |= 0x1000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 80) = v25;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x2000) == 0)
  {
LABEL_27:
    if ((v2 & 0x100) == 0) {
      goto LABEL_28;
    }
    goto LABEL_59;
  }
LABEL_58:
  int v26 = *(_DWORD *)(a2 + 84);
  v3 |= 0x2000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 84) = v26;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x100) == 0)
  {
LABEL_28:
    if ((v2 & 0x200) == 0) {
      goto LABEL_29;
    }
    goto LABEL_60;
  }
LABEL_59:
  int v27 = *(_DWORD *)(a2 + 64);
  v3 |= 0x100uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 64) = v27;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x200) == 0)
  {
LABEL_29:
    if ((v2 & 0x400) == 0) {
      goto LABEL_30;
    }
    goto LABEL_61;
  }
LABEL_60:
  int v28 = *(_DWORD *)(a2 + 68);
  v3 |= 0x200uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 68) = v28;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x400) == 0)
  {
LABEL_30:
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_62;
  }
LABEL_61:
  int v29 = *(_DWORD *)(a2 + 72);
  v3 |= 0x400uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 72) = v29;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x8000000) == 0)
  {
LABEL_31:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_63;
  }
LABEL_62:
  int v30 = *(_DWORD *)(a2 + 140);
  v3 |= 0x8000000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 140) = v30;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x800000) == 0)
  {
LABEL_32:
    if ((v2 & 0x20) == 0) {
      goto LABEL_33;
    }
    goto LABEL_64;
  }
LABEL_63:
  int v31 = *(_DWORD *)(a2 + 124);
  v3 |= 0x800000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 124) = v31;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x20) == 0)
  {
LABEL_33:
    if ((v2 & 0x2000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_65;
  }
LABEL_64:
  uint64_t v32 = *(void *)(a2 + 48);
  v3 |= 0x20uLL;
  *(void *)(result + 164) = v3;
  *(void *)(result + 48) = v32;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x2000000) == 0)
  {
LABEL_34:
    if ((v2 & 0x40000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_66;
  }
LABEL_65:
  int v33 = *(_DWORD *)(a2 + 132);
  v3 |= 0x2000000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 132) = v33;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x40000000) == 0)
  {
LABEL_35:
    if ((v2 & 1) == 0) {
      goto LABEL_36;
    }
    goto LABEL_67;
  }
LABEL_66:
  int v34 = *(_DWORD *)(a2 + 152);
  v3 |= 0x40000000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 152) = v34;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 1) == 0)
  {
LABEL_36:
    if ((v2 & 2) == 0) {
      return result;
    }
LABEL_68:
    uint64_t v36 = *(void *)(a2 + 16);
    *(void *)(result + 164) = v3 | 2;
    *(void *)(result + 16) = v36;
    return result;
  }
LABEL_67:
  uint64_t v35 = *(void *)(a2 + 8);
  v3 |= 1uLL;
  *(void *)(result + 164) = v3;
  *(void *)(result + 8) = v35;
  if ((*(void *)(a2 + 164) & 2) != 0) {
    goto LABEL_68;
  }
  return result;
}

uint64_t sub_227B85CF4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x40) != 0)
  {
    PB::TextFormatter::format(this, "configAccelThresholdNorm", *(float *)(a1 + 56));
    uint64_t v5 = *(void *)(a1 + 164);
    if ((v5 & 0x80) == 0)
    {
LABEL_3:
      if ((v5 & 0x100) == 0) {
        goto LABEL_4;
      }
      goto LABEL_40;
    }
  }
  else if ((v5 & 0x80) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "configHardware");
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x100) == 0)
  {
LABEL_4:
    if ((v5 & 0x200) == 0) {
      goto LABEL_5;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "configIx", *(float *)(a1 + 64));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x200) == 0)
  {
LABEL_5:
    if ((v5 & 0x400) == 0) {
      goto LABEL_6;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "configIy", *(float *)(a1 + 68));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x400) == 0)
  {
LABEL_6:
    if ((v5 & 0x800) == 0) {
      goto LABEL_7;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "configIz", *(float *)(a1 + 72));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x800) == 0)
  {
LABEL_7:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "configLx", *(float *)(a1 + 76));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x1000) == 0)
  {
LABEL_8:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "configLy", *(float *)(a1 + 80));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x2000) == 0)
  {
LABEL_9:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_46;
  }
LABEL_45:
  PB::TextFormatter::format(this, "configLz", *(float *)(a1 + 84));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x4000) == 0)
  {
LABEL_10:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_47;
  }
LABEL_46:
  PB::TextFormatter::format(this, "configZgThreshold", *(float *)(a1 + 88));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x8000) == 0)
  {
LABEL_11:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(this, "debugCountOfAccelDataDrop");
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x10000) == 0)
  {
LABEL_12:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(this, "debugCountOfDmDataDrop");
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x20000) == 0)
  {
LABEL_13:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_50;
  }
LABEL_49:
  PB::TextFormatter::format(this, "debugMaxTimeBetweenAccelSample", *(float *)(a1 + 100));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x40000) == 0)
  {
LABEL_14:
    if ((v5 & 1) == 0) {
      goto LABEL_15;
    }
    goto LABEL_51;
  }
LABEL_50:
  PB::TextFormatter::format(this, "debugMaxTimeBetweenDmSample", *(float *)(a1 + 104));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 1) == 0)
  {
LABEL_15:
    if ((v5 & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_52;
  }
LABEL_51:
  PB::TextFormatter::format(this, "epochFirstTimestamp");
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 2) == 0)
  {
LABEL_16:
    if ((v5 & 0x100000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_53;
  }
LABEL_52:
  PB::TextFormatter::format(this, "epochLastTimestamp");
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x100000000) == 0)
  {
LABEL_17:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(this, "freefallTpQualifier");
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x80000) == 0)
  {
LABEL_18:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(this, "metaCountOfFreefallImpactPassed");
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x100000) == 0)
  {
LABEL_19:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_56;
  }
LABEL_55:
  PB::TextFormatter::format(this, "metaCountOfFreefallTimePassed");
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x200000) == 0)
  {
LABEL_20:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_57;
  }
LABEL_56:
  PB::TextFormatter::format(this, "metaCountOfSigImpact");
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x400000) == 0)
  {
LABEL_21:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_58;
  }
LABEL_57:
  PB::TextFormatter::format(this, "metaCountOfZgSegment");
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x800000) == 0)
  {
LABEL_22:
    if ((v5 & 4) == 0) {
      goto LABEL_23;
    }
    goto LABEL_59;
  }
LABEL_58:
  PB::TextFormatter::format(this, "metaCrossingCount");
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 4) == 0)
  {
LABEL_23:
    if ((v5 & 8) == 0) {
      goto LABEL_24;
    }
    goto LABEL_60;
  }
LABEL_59:
  PB::TextFormatter::format(this, "metaDtBwFirstAndLastFreeFall");
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 8) == 0)
  {
LABEL_24:
    if ((v5 & 0x10) == 0) {
      goto LABEL_25;
    }
    goto LABEL_61;
  }
LABEL_60:
  PB::TextFormatter::format(this, "metaDtBwFirstFreeFall");
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x10) == 0)
  {
LABEL_25:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_62;
  }
LABEL_61:
  PB::TextFormatter::format(this, "metaDtBwFirstSigImpact");
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_63;
  }
LABEL_62:
  PB::TextFormatter::format(this, "metaFreefallTime", *(float *)(a1 + 128));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_64;
  }
LABEL_63:
  PB::TextFormatter::format(this, "metaFreefallTimeForImpact", *(float *)(a1 + 132));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_65;
  }
LABEL_64:
  PB::TextFormatter::format(this, "metaMaxOfAccel", *(float *)(a1 + 136));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_66;
  }
LABEL_65:
  PB::TextFormatter::format(this, "metaMaxPower", *(float *)(a1 + 140));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_67;
  }
LABEL_66:
  PB::TextFormatter::format(this, "metaMaxZgSegmentTime", *(float *)(a1 + 144));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v5 & 0x40000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_68;
  }
LABEL_67:
  PB::TextFormatter::format(this, "metaNormOfAccel", *(float *)(a1 + 148));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x40000000) == 0)
  {
LABEL_32:
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_69;
  }
LABEL_68:
  PB::TextFormatter::format(this, "metaNormOfImpact", *(float *)(a1 + 152));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x80000000) == 0)
  {
LABEL_33:
    if ((v5 & 0x20) == 0) {
      goto LABEL_35;
    }
    goto LABEL_34;
  }
LABEL_69:
  PB::TextFormatter::format(this, "metaTotalZgTime", *(float *)(a1 + 156));
  if ((*(void *)(a1 + 164) & 0x20) != 0) {
LABEL_34:
  }
    PB::TextFormatter::format(this, "timestamp");
LABEL_35:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B86158(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          unint64_t v20 = v11 >> 3;
          switch((v11 >> 3))
          {
            case 1u:
              *(void *)(a1 + 164) |= 0x100000000uLL;
              unint64_t v21 = *((void *)this + 1);
              if (v21 >= *((void *)this + 2))
              {
                BOOL v24 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v22 = v21 + 1;
                int v23 = *(unsigned __int8 *)(*(void *)this + v21);
                *((void *)this + 1) = v22;
                BOOL v24 = v23 != 0;
              }
              *(unsigned char *)(a1 + 160) = v24;
              goto LABEL_282;
            case 2u:
              *(void *)(a1 + 164) |= 0x100000uLL;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v34 = *((void *)this + 2);
              uint64_t v35 = *(void *)this;
              if (v33 <= 0xFFFFFFFFFFFFFFF5 && v33 + 10 <= v34)
              {
                char v36 = 0;
                unsigned int v37 = 0;
                uint64_t v38 = 0;
                do
                {
                  unint64_t v39 = v33 + 1;
                  *((void *)this + 1) = v33 + 1;
                  char v40 = *(unsigned char *)(v35 + v33);
                  v38 |= (unint64_t)(v40 & 0x7F) << v36;
                  if ((v40 & 0x80) == 0) {
                    goto LABEL_294;
                  }
                  v36 += 7;
                  unint64_t v33 = v39;
                  BOOL v14 = v37++ > 8;
                }
                while (!v14);
LABEL_195:
                LODWORD(v38) = 0;
                goto LABEL_294;
              }
              char v160 = 0;
              unsigned int v161 = 0;
              uint64_t v38 = 0;
              if (v34 <= v33) {
                unint64_t v34 = *((void *)this + 1);
              }
              while (2)
              {
                if (v34 == v33)
                {
                  LODWORD(v38) = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v162 = v33 + 1;
                  char v163 = *(unsigned char *)(v35 + v33);
                  *((void *)this + 1) = v162;
                  v38 |= (unint64_t)(v163 & 0x7F) << v160;
                  if (v163 < 0)
                  {
                    v160 += 7;
                    unint64_t v33 = v162;
                    BOOL v14 = v161++ > 8;
                    if (v14) {
                      goto LABEL_195;
                    }
                    continue;
                  }
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v38) = 0;
                  }
                }
                break;
              }
LABEL_294:
              *(_DWORD *)(a1 + 112) = v38;
              goto LABEL_282;
            case 3u:
              *(void *)(a1 + 164) |= 0x80000uLL;
              unint64_t v41 = *((void *)this + 1);
              unint64_t v42 = *((void *)this + 2);
              uint64_t v43 = *(void *)this;
              if (v41 <= 0xFFFFFFFFFFFFFFF5 && v41 + 10 <= v42)
              {
                char v44 = 0;
                unsigned int v45 = 0;
                uint64_t v46 = 0;
                do
                {
                  unint64_t v47 = v41 + 1;
                  *((void *)this + 1) = v41 + 1;
                  char v48 = *(unsigned char *)(v43 + v41);
                  v46 |= (unint64_t)(v48 & 0x7F) << v44;
                  if ((v48 & 0x80) == 0) {
                    goto LABEL_298;
                  }
                  v44 += 7;
                  unint64_t v41 = v47;
                  BOOL v14 = v45++ > 8;
                }
                while (!v14);
LABEL_202:
                LODWORD(v46) = 0;
                goto LABEL_298;
              }
              char v164 = 0;
              unsigned int v165 = 0;
              uint64_t v46 = 0;
              if (v42 <= v41) {
                unint64_t v42 = *((void *)this + 1);
              }
              while (2)
              {
                if (v42 == v41)
                {
                  LODWORD(v46) = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v166 = v41 + 1;
                  char v167 = *(unsigned char *)(v43 + v41);
                  *((void *)this + 1) = v166;
                  v46 |= (unint64_t)(v167 & 0x7F) << v164;
                  if (v167 < 0)
                  {
                    v164 += 7;
                    unint64_t v41 = v166;
                    BOOL v14 = v165++ > 8;
                    if (v14) {
                      goto LABEL_202;
                    }
                    continue;
                  }
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v46) = 0;
                  }
                }
                break;
              }
LABEL_298:
              *(_DWORD *)(a1 + 108) = v46;
              goto LABEL_282;
            case 4u:
              *(void *)(a1 + 164) |= 0x1000000uLL;
              unint64_t v49 = *((void *)this + 1);
              if (v49 > 0xFFFFFFFFFFFFFFFBLL || v49 + 4 > *((void *)this + 2)) {
                goto LABEL_170;
              }
              *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v49);
              goto LABEL_281;
            case 5u:
              *(void *)(a1 + 164) |= 0x20000000uLL;
              unint64_t v50 = *((void *)this + 1);
              if (v50 > 0xFFFFFFFFFFFFFFFBLL || v50 + 4 > *((void *)this + 2)) {
                goto LABEL_170;
              }
              *(_DWORD *)(a1 + 148) = *(_DWORD *)(*(void *)this + v50);
              goto LABEL_281;
            case 6u:
              *(void *)(a1 + 164) |= 0x4000000uLL;
              unint64_t v51 = *((void *)this + 1);
              if (v51 > 0xFFFFFFFFFFFFFFFBLL || v51 + 4 > *((void *)this + 2)) {
                goto LABEL_170;
              }
              *(_DWORD *)(a1 + 136) = *(_DWORD *)(*(void *)this + v51);
              goto LABEL_281;
            case 7u:
              *(void *)(a1 + 164) |= 0x80000000uLL;
              unint64_t v52 = *((void *)this + 1);
              if (v52 > 0xFFFFFFFFFFFFFFFBLL || v52 + 4 > *((void *)this + 2)) {
                goto LABEL_170;
              }
              *(_DWORD *)(a1 + 156) = *(_DWORD *)(*(void *)this + v52);
              goto LABEL_281;
            case 8u:
              *(void *)(a1 + 164) |= 0x10000000uLL;
              unint64_t v53 = *((void *)this + 1);
              if (v53 > 0xFFFFFFFFFFFFFFFBLL || v53 + 4 > *((void *)this + 2)) {
                goto LABEL_170;
              }
              *(_DWORD *)(a1 + 144) = *(_DWORD *)(*(void *)this + v53);
              goto LABEL_281;
            case 9u:
              *(void *)(a1 + 164) |= 0x200000uLL;
              unint64_t v54 = *((void *)this + 1);
              unint64_t v55 = *((void *)this + 2);
              uint64_t v56 = *(void *)this;
              if (v54 <= 0xFFFFFFFFFFFFFFF5 && v54 + 10 <= v55)
              {
                char v57 = 0;
                unsigned int v58 = 0;
                uint64_t v59 = 0;
                do
                {
                  unint64_t v60 = v54 + 1;
                  *((void *)this + 1) = v54 + 1;
                  char v61 = *(unsigned char *)(v56 + v54);
                  v59 |= (unint64_t)(v61 & 0x7F) << v57;
                  if ((v61 & 0x80) == 0) {
                    goto LABEL_302;
                  }
                  v57 += 7;
                  unint64_t v54 = v60;
                  BOOL v14 = v58++ > 8;
                }
                while (!v14);
LABEL_209:
                LODWORD(v59) = 0;
                goto LABEL_302;
              }
              char v168 = 0;
              unsigned int v169 = 0;
              uint64_t v59 = 0;
              if (v55 <= v54) {
                unint64_t v55 = *((void *)this + 1);
              }
              while (2)
              {
                if (v55 == v54)
                {
                  LODWORD(v59) = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v170 = v54 + 1;
                  char v171 = *(unsigned char *)(v56 + v54);
                  *((void *)this + 1) = v170;
                  v59 |= (unint64_t)(v171 & 0x7F) << v168;
                  if (v171 < 0)
                  {
                    v168 += 7;
                    unint64_t v54 = v170;
                    BOOL v14 = v169++ > 8;
                    if (v14) {
                      goto LABEL_209;
                    }
                    continue;
                  }
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v59) = 0;
                  }
                }
                break;
              }
LABEL_302:
              *(_DWORD *)(a1 + 116) = v59;
              goto LABEL_282;
            case 0xAu:
              *(void *)(a1 + 164) |= 0x400000uLL;
              unint64_t v62 = *((void *)this + 1);
              unint64_t v63 = *((void *)this + 2);
              uint64_t v64 = *(void *)this;
              if (v62 <= 0xFFFFFFFFFFFFFFF5 && v62 + 10 <= v63)
              {
                char v65 = 0;
                unsigned int v66 = 0;
                uint64_t v67 = 0;
                do
                {
                  unint64_t v68 = v62 + 1;
                  *((void *)this + 1) = v62 + 1;
                  char v69 = *(unsigned char *)(v64 + v62);
                  v67 |= (unint64_t)(v69 & 0x7F) << v65;
                  if ((v69 & 0x80) == 0) {
                    goto LABEL_306;
                  }
                  v65 += 7;
                  unint64_t v62 = v68;
                  BOOL v14 = v66++ > 8;
                }
                while (!v14);
LABEL_216:
                LODWORD(v67) = 0;
                goto LABEL_306;
              }
              char v172 = 0;
              unsigned int v173 = 0;
              uint64_t v67 = 0;
              if (v63 <= v62) {
                unint64_t v63 = *((void *)this + 1);
              }
              while (2)
              {
                if (v63 == v62)
                {
                  LODWORD(v67) = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v174 = v62 + 1;
                  char v175 = *(unsigned char *)(v64 + v62);
                  *((void *)this + 1) = v174;
                  v67 |= (unint64_t)(v175 & 0x7F) << v172;
                  if (v175 < 0)
                  {
                    v172 += 7;
                    unint64_t v62 = v174;
                    BOOL v14 = v173++ > 8;
                    if (v14) {
                      goto LABEL_216;
                    }
                    continue;
                  }
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v67) = 0;
                  }
                }
                break;
              }
LABEL_306:
              *(_DWORD *)(a1 + 120) = v67;
              goto LABEL_282;
            case 0xBu:
              *(void *)(a1 + 164) |= 0x10uLL;
              unint64_t v70 = *((void *)this + 1);
              unint64_t v71 = *((void *)this + 2);
              uint64_t v72 = *(void *)this;
              if (v70 <= 0xFFFFFFFFFFFFFFF5 && v70 + 10 <= v71)
              {
                char v73 = 0;
                unsigned int v74 = 0;
                uint64_t v75 = 0;
                do
                {
                  unint64_t v76 = v70 + 1;
                  *((void *)this + 1) = v70 + 1;
                  char v77 = *(unsigned char *)(v72 + v70);
                  v75 |= (unint64_t)(v77 & 0x7F) << v73;
                  if ((v77 & 0x80) == 0) {
                    goto LABEL_310;
                  }
                  v73 += 7;
                  unint64_t v70 = v76;
                  BOOL v14 = v74++ > 8;
                }
                while (!v14);
LABEL_223:
                uint64_t v75 = 0;
                goto LABEL_310;
              }
              char v176 = 0;
              unsigned int v177 = 0;
              uint64_t v75 = 0;
              if (v71 <= v70) {
                unint64_t v71 = *((void *)this + 1);
              }
              while (2)
              {
                if (v71 == v70)
                {
                  uint64_t v75 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v178 = v70 + 1;
                  char v179 = *(unsigned char *)(v72 + v70);
                  *((void *)this + 1) = v178;
                  v75 |= (unint64_t)(v179 & 0x7F) << v176;
                  if (v179 < 0)
                  {
                    v176 += 7;
                    unint64_t v70 = v178;
                    BOOL v14 = v177++ > 8;
                    if (v14) {
                      goto LABEL_223;
                    }
                    continue;
                  }
                  if (*((unsigned char *)this + 24)) {
                    uint64_t v75 = 0;
                  }
                }
                break;
              }
LABEL_310:
              *(void *)(a1 + 40) = v75;
              goto LABEL_282;
            case 0xCu:
              *(void *)(a1 + 164) |= 8uLL;
              unint64_t v78 = *((void *)this + 1);
              unint64_t v79 = *((void *)this + 2);
              uint64_t v80 = *(void *)this;
              if (v78 <= 0xFFFFFFFFFFFFFFF5 && v78 + 10 <= v79)
              {
                char v81 = 0;
                unsigned int v82 = 0;
                uint64_t v83 = 0;
                do
                {
                  unint64_t v84 = v78 + 1;
                  *((void *)this + 1) = v78 + 1;
                  char v85 = *(unsigned char *)(v80 + v78);
                  v83 |= (unint64_t)(v85 & 0x7F) << v81;
                  if ((v85 & 0x80) == 0) {
                    goto LABEL_314;
                  }
                  v81 += 7;
                  unint64_t v78 = v84;
                  BOOL v14 = v82++ > 8;
                }
                while (!v14);
LABEL_230:
                uint64_t v83 = 0;
                goto LABEL_314;
              }
              char v180 = 0;
              unsigned int v181 = 0;
              uint64_t v83 = 0;
              if (v79 <= v78) {
                unint64_t v79 = *((void *)this + 1);
              }
              while (2)
              {
                if (v79 == v78)
                {
                  uint64_t v83 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v182 = v78 + 1;
                  char v183 = *(unsigned char *)(v80 + v78);
                  *((void *)this + 1) = v182;
                  v83 |= (unint64_t)(v183 & 0x7F) << v180;
                  if (v183 < 0)
                  {
                    v180 += 7;
                    unint64_t v78 = v182;
                    BOOL v14 = v181++ > 8;
                    if (v14) {
                      goto LABEL_230;
                    }
                    continue;
                  }
                  if (*((unsigned char *)this + 24)) {
                    uint64_t v83 = 0;
                  }
                }
                break;
              }
LABEL_314:
              *(void *)(a1 + 32) = v83;
              goto LABEL_282;
            case 0xDu:
              *(void *)(a1 + 164) |= 4uLL;
              unint64_t v86 = *((void *)this + 1);
              unint64_t v87 = *((void *)this + 2);
              uint64_t v88 = *(void *)this;
              if (v86 <= 0xFFFFFFFFFFFFFFF5 && v86 + 10 <= v87)
              {
                char v89 = 0;
                unsigned int v90 = 0;
                uint64_t v91 = 0;
                do
                {
                  unint64_t v92 = v86 + 1;
                  *((void *)this + 1) = v86 + 1;
                  char v93 = *(unsigned char *)(v88 + v86);
                  v91 |= (unint64_t)(v93 & 0x7F) << v89;
                  if ((v93 & 0x80) == 0) {
                    goto LABEL_318;
                  }
                  v89 += 7;
                  unint64_t v86 = v92;
                  BOOL v14 = v90++ > 8;
                }
                while (!v14);
LABEL_237:
                uint64_t v91 = 0;
                goto LABEL_318;
              }
              char v184 = 0;
              unsigned int v185 = 0;
              uint64_t v91 = 0;
              if (v87 <= v86) {
                unint64_t v87 = *((void *)this + 1);
              }
              while (2)
              {
                if (v87 == v86)
                {
                  uint64_t v91 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v186 = v86 + 1;
                  char v187 = *(unsigned char *)(v88 + v86);
                  *((void *)this + 1) = v186;
                  v91 |= (unint64_t)(v187 & 0x7F) << v184;
                  if (v187 < 0)
                  {
                    v184 += 7;
                    unint64_t v86 = v186;
                    BOOL v14 = v185++ > 8;
                    if (v14) {
                      goto LABEL_237;
                    }
                    continue;
                  }
                  if (*((unsigned char *)this + 24)) {
                    uint64_t v91 = 0;
                  }
                }
                break;
              }
LABEL_318:
              *(void *)(a1 + 24) = v91;
              goto LABEL_282;
            case 0xEu:
              *(void *)(a1 + 164) |= 0x8000uLL;
              unint64_t v94 = *((void *)this + 1);
              unint64_t v95 = *((void *)this + 2);
              uint64_t v96 = *(void *)this;
              if (v94 <= 0xFFFFFFFFFFFFFFF5 && v94 + 10 <= v95)
              {
                char v97 = 0;
                unsigned int v98 = 0;
                uint64_t v99 = 0;
                do
                {
                  unint64_t v100 = v94 + 1;
                  *((void *)this + 1) = v94 + 1;
                  char v101 = *(unsigned char *)(v96 + v94);
                  v99 |= (unint64_t)(v101 & 0x7F) << v97;
                  if ((v101 & 0x80) == 0) {
                    goto LABEL_322;
                  }
                  v97 += 7;
                  unint64_t v94 = v100;
                  BOOL v14 = v98++ > 8;
                }
                while (!v14);
LABEL_244:
                LODWORD(v99) = 0;
                goto LABEL_322;
              }
              char v188 = 0;
              unsigned int v189 = 0;
              uint64_t v99 = 0;
              if (v95 <= v94) {
                unint64_t v95 = *((void *)this + 1);
              }
              while (2)
              {
                if (v95 == v94)
                {
                  LODWORD(v99) = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v190 = v94 + 1;
                  char v191 = *(unsigned char *)(v96 + v94);
                  *((void *)this + 1) = v190;
                  v99 |= (unint64_t)(v191 & 0x7F) << v188;
                  if (v191 < 0)
                  {
                    v188 += 7;
                    unint64_t v94 = v190;
                    BOOL v14 = v189++ > 8;
                    if (v14) {
                      goto LABEL_244;
                    }
                    continue;
                  }
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v99) = 0;
                  }
                }
                break;
              }
LABEL_322:
              *(_DWORD *)(a1 + 92) = v99;
              goto LABEL_282;
            case 0xFu:
              *(void *)(a1 + 164) |= 0x20000uLL;
              unint64_t v102 = *((void *)this + 1);
              if (v102 > 0xFFFFFFFFFFFFFFFBLL || v102 + 4 > *((void *)this + 2)) {
                goto LABEL_170;
              }
              *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v102);
              goto LABEL_281;
            case 0x10u:
              *(void *)(a1 + 164) |= 0x10000uLL;
              unint64_t v103 = *((void *)this + 1);
              unint64_t v104 = *((void *)this + 2);
              uint64_t v105 = *(void *)this;
              if (v103 <= 0xFFFFFFFFFFFFFFF5 && v103 + 10 <= v104)
              {
                char v106 = 0;
                unsigned int v107 = 0;
                uint64_t v108 = 0;
                do
                {
                  unint64_t v109 = v103 + 1;
                  *((void *)this + 1) = v103 + 1;
                  char v110 = *(unsigned char *)(v105 + v103);
                  v108 |= (unint64_t)(v110 & 0x7F) << v106;
                  if ((v110 & 0x80) == 0) {
                    goto LABEL_326;
                  }
                  v106 += 7;
                  unint64_t v103 = v109;
                  BOOL v14 = v107++ > 8;
                }
                while (!v14);
LABEL_251:
                LODWORD(v108) = 0;
                goto LABEL_326;
              }
              char v192 = 0;
              unsigned int v193 = 0;
              uint64_t v108 = 0;
              if (v104 <= v103) {
                unint64_t v104 = *((void *)this + 1);
              }
              while (2)
              {
                if (v104 == v103)
                {
                  LODWORD(v108) = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v194 = v103 + 1;
                  char v195 = *(unsigned char *)(v105 + v103);
                  *((void *)this + 1) = v194;
                  v108 |= (unint64_t)(v195 & 0x7F) << v192;
                  if (v195 < 0)
                  {
                    v192 += 7;
                    unint64_t v103 = v194;
                    BOOL v14 = v193++ > 8;
                    if (v14) {
                      goto LABEL_251;
                    }
                    continue;
                  }
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v108) = 0;
                  }
                }
                break;
              }
LABEL_326:
              *(_DWORD *)(a1 + 96) = v108;
              goto LABEL_282;
            case 0x11u:
              *(void *)(a1 + 164) |= 0x40000uLL;
              unint64_t v111 = *((void *)this + 1);
              if (v111 > 0xFFFFFFFFFFFFFFFBLL || v111 + 4 > *((void *)this + 2)) {
                goto LABEL_170;
              }
              *(_DWORD *)(a1 + 104) = *(_DWORD *)(*(void *)this + v111);
              goto LABEL_281;
            case 0x12u:
              *(void *)(a1 + 164) |= 0x4000uLL;
              unint64_t v112 = *((void *)this + 1);
              if (v112 > 0xFFFFFFFFFFFFFFFBLL || v112 + 4 > *((void *)this + 2)) {
                goto LABEL_170;
              }
              *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v112);
              goto LABEL_281;
            case 0x13u:
              *(void *)(a1 + 164) |= 0x40uLL;
              unint64_t v113 = *((void *)this + 1);
              if (v113 > 0xFFFFFFFFFFFFFFFBLL || v113 + 4 > *((void *)this + 2)) {
                goto LABEL_170;
              }
              *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v113);
              goto LABEL_281;
            case 0x14u:
              *(void *)(a1 + 164) |= 0x80uLL;
              unint64_t v114 = *((void *)this + 1);
              unint64_t v115 = *((void *)this + 2);
              uint64_t v116 = *(void *)this;
              if (v114 <= 0xFFFFFFFFFFFFFFF5 && v114 + 10 <= v115)
              {
                char v117 = 0;
                unsigned int v118 = 0;
                uint64_t v119 = 0;
                do
                {
                  unint64_t v120 = v114 + 1;
                  *((void *)this + 1) = v114 + 1;
                  char v121 = *(unsigned char *)(v116 + v114);
                  v119 |= (unint64_t)(v121 & 0x7F) << v117;
                  if ((v121 & 0x80) == 0) {
                    goto LABEL_330;
                  }
                  v117 += 7;
                  unint64_t v114 = v120;
                  BOOL v14 = v118++ > 8;
                }
                while (!v14);
LABEL_258:
                LODWORD(v119) = 0;
                goto LABEL_330;
              }
              char v196 = 0;
              unsigned int v197 = 0;
              uint64_t v119 = 0;
              if (v115 <= v114) {
                unint64_t v115 = *((void *)this + 1);
              }
              while (2)
              {
                if (v115 == v114)
                {
                  LODWORD(v119) = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v198 = v114 + 1;
                  char v199 = *(unsigned char *)(v116 + v114);
                  *((void *)this + 1) = v198;
                  v119 |= (unint64_t)(v199 & 0x7F) << v196;
                  if (v199 < 0)
                  {
                    v196 += 7;
                    unint64_t v114 = v198;
                    BOOL v14 = v197++ > 8;
                    if (v14) {
                      goto LABEL_258;
                    }
                    continue;
                  }
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v119) = 0;
                  }
                }
                break;
              }
LABEL_330:
              *(_DWORD *)(a1 + 60) = v119;
              goto LABEL_282;
            case 0x15u:
              *(void *)(a1 + 164) |= 0x800uLL;
              unint64_t v122 = *((void *)this + 1);
              if (v122 > 0xFFFFFFFFFFFFFFFBLL || v122 + 4 > *((void *)this + 2)) {
                goto LABEL_170;
              }
              *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v122);
              goto LABEL_281;
            case 0x16u:
              *(void *)(a1 + 164) |= 0x1000uLL;
              unint64_t v123 = *((void *)this + 1);
              if (v123 > 0xFFFFFFFFFFFFFFFBLL || v123 + 4 > *((void *)this + 2)) {
                goto LABEL_170;
              }
              *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v123);
              goto LABEL_281;
            case 0x17u:
              *(void *)(a1 + 164) |= 0x2000uLL;
              unint64_t v124 = *((void *)this + 1);
              if (v124 > 0xFFFFFFFFFFFFFFFBLL || v124 + 4 > *((void *)this + 2)) {
                goto LABEL_170;
              }
              *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v124);
              goto LABEL_281;
            case 0x18u:
              *(void *)(a1 + 164) |= 0x100uLL;
              unint64_t v125 = *((void *)this + 1);
              if (v125 > 0xFFFFFFFFFFFFFFFBLL || v125 + 4 > *((void *)this + 2)) {
                goto LABEL_170;
              }
              *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v125);
              goto LABEL_281;
            case 0x19u:
              *(void *)(a1 + 164) |= 0x200uLL;
              unint64_t v126 = *((void *)this + 1);
              if (v126 > 0xFFFFFFFFFFFFFFFBLL || v126 + 4 > *((void *)this + 2)) {
                goto LABEL_170;
              }
              *(_DWORD *)(a1 + 68) = *(_DWORD *)(*(void *)this + v126);
              goto LABEL_281;
            case 0x1Au:
              *(void *)(a1 + 164) |= 0x400uLL;
              unint64_t v127 = *((void *)this + 1);
              if (v127 > 0xFFFFFFFFFFFFFFFBLL || v127 + 4 > *((void *)this + 2)) {
                goto LABEL_170;
              }
              *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v127);
              goto LABEL_281;
            case 0x1Bu:
              *(void *)(a1 + 164) |= 0x8000000uLL;
              unint64_t v128 = *((void *)this + 1);
              if (v128 > 0xFFFFFFFFFFFFFFFBLL || v128 + 4 > *((void *)this + 2)) {
                goto LABEL_170;
              }
              *(_DWORD *)(a1 + 140) = *(_DWORD *)(*(void *)this + v128);
              goto LABEL_281;
            case 0x1Cu:
              *(void *)(a1 + 164) |= 0x800000uLL;
              unint64_t v129 = *((void *)this + 1);
              unint64_t v130 = *((void *)this + 2);
              uint64_t v131 = *(void *)this;
              if (v129 <= 0xFFFFFFFFFFFFFFF5 && v129 + 10 <= v130)
              {
                char v132 = 0;
                unsigned int v133 = 0;
                uint64_t v134 = 0;
                do
                {
                  unint64_t v135 = v129 + 1;
                  *((void *)this + 1) = v129 + 1;
                  char v136 = *(unsigned char *)(v131 + v129);
                  v134 |= (unint64_t)(v136 & 0x7F) << v132;
                  if ((v136 & 0x80) == 0) {
                    goto LABEL_334;
                  }
                  v132 += 7;
                  unint64_t v129 = v135;
                  BOOL v14 = v133++ > 8;
                }
                while (!v14);
LABEL_265:
                LODWORD(v134) = 0;
                goto LABEL_334;
              }
              char v200 = 0;
              unsigned int v201 = 0;
              uint64_t v134 = 0;
              if (v130 <= v129) {
                unint64_t v130 = *((void *)this + 1);
              }
              while (2)
              {
                if (v130 == v129)
                {
                  LODWORD(v134) = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v202 = v129 + 1;
                  char v203 = *(unsigned char *)(v131 + v129);
                  *((void *)this + 1) = v202;
                  v134 |= (unint64_t)(v203 & 0x7F) << v200;
                  if (v203 < 0)
                  {
                    v200 += 7;
                    unint64_t v129 = v202;
                    BOOL v14 = v201++ > 8;
                    if (v14) {
                      goto LABEL_265;
                    }
                    continue;
                  }
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v134) = 0;
                  }
                }
                break;
              }
LABEL_334:
              *(_DWORD *)(a1 + 124) = v134;
              goto LABEL_282;
            case 0x1Du:
              *(void *)(a1 + 164) |= 0x20uLL;
              unint64_t v137 = *((void *)this + 1);
              unint64_t v138 = *((void *)this + 2);
              uint64_t v139 = *(void *)this;
              if (v137 <= 0xFFFFFFFFFFFFFFF5 && v137 + 10 <= v138)
              {
                char v140 = 0;
                unsigned int v141 = 0;
                uint64_t v142 = 0;
                do
                {
                  unint64_t v143 = v137 + 1;
                  *((void *)this + 1) = v137 + 1;
                  char v144 = *(unsigned char *)(v139 + v137);
                  v142 |= (unint64_t)(v144 & 0x7F) << v140;
                  if ((v144 & 0x80) == 0) {
                    goto LABEL_338;
                  }
                  v140 += 7;
                  unint64_t v137 = v143;
                  BOOL v14 = v141++ > 8;
                }
                while (!v14);
LABEL_272:
                uint64_t v142 = 0;
                goto LABEL_338;
              }
              char v204 = 0;
              unsigned int v205 = 0;
              uint64_t v142 = 0;
              if (v138 <= v137) {
                unint64_t v138 = *((void *)this + 1);
              }
              while (2)
              {
                if (v138 == v137)
                {
                  uint64_t v142 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v206 = v137 + 1;
                  char v207 = *(unsigned char *)(v139 + v137);
                  *((void *)this + 1) = v206;
                  v142 |= (unint64_t)(v207 & 0x7F) << v204;
                  if (v207 < 0)
                  {
                    v204 += 7;
                    unint64_t v137 = v206;
                    BOOL v14 = v205++ > 8;
                    if (v14) {
                      goto LABEL_272;
                    }
                    continue;
                  }
                  if (*((unsigned char *)this + 24)) {
                    uint64_t v142 = 0;
                  }
                }
                break;
              }
LABEL_338:
              *(void *)(a1 + 48) = v142;
              goto LABEL_282;
            case 0x1Eu:
              *(void *)(a1 + 164) |= 0x2000000uLL;
              unint64_t v145 = *((void *)this + 1);
              if (v145 > 0xFFFFFFFFFFFFFFFBLL || v145 + 4 > *((void *)this + 2)) {
                goto LABEL_170;
              }
              *(_DWORD *)(a1 + 132) = *(_DWORD *)(*(void *)this + v145);
              goto LABEL_281;
            case 0x1Fu:
              *(void *)(a1 + 164) |= 0x40000000uLL;
              unint64_t v146 = *((void *)this + 1);
              if (v146 <= 0xFFFFFFFFFFFFFFFBLL && v146 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 152) = *(_DWORD *)(*(void *)this + v146);
LABEL_281:
                *((void *)this + 1) += 4;
              }
              else
              {
LABEL_170:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_282;
            default:
              if (v20 == 201)
              {
                *(void *)(a1 + 164) |= 1uLL;
                unint64_t v147 = *((void *)this + 1);
                unint64_t v148 = *((void *)this + 2);
                uint64_t v149 = *(void *)this;
                if (v147 > 0xFFFFFFFFFFFFFFF5 || v147 + 10 > v148)
                {
                  char v208 = 0;
                  unsigned int v209 = 0;
                  uint64_t v152 = 0;
                  if (v148 <= v147) {
                    unint64_t v148 = *((void *)this + 1);
                  }
                  while (1)
                  {
                    if (v148 == v147)
                    {
                      uint64_t v152 = 0;
                      *((unsigned char *)this + 24) = 1;
                      goto LABEL_342;
                    }
                    unint64_t v210 = v147 + 1;
                    char v211 = *(unsigned char *)(v149 + v147);
                    *((void *)this + 1) = v210;
                    v152 |= (unint64_t)(v211 & 0x7F) << v208;
                    if ((v211 & 0x80) == 0) {
                      break;
                    }
                    v208 += 7;
                    unint64_t v147 = v210;
                    BOOL v14 = v209++ > 8;
                    if (v14)
                    {
LABEL_279:
                      uint64_t v152 = 0;
                      goto LABEL_342;
                    }
                  }
                  if (*((unsigned char *)this + 24)) {
                    uint64_t v152 = 0;
                  }
                }
                else
                {
                  char v150 = 0;
                  unsigned int v151 = 0;
                  uint64_t v152 = 0;
                  while (1)
                  {
                    unint64_t v153 = v147 + 1;
                    *((void *)this + 1) = v147 + 1;
                    char v154 = *(unsigned char *)(v149 + v147);
                    v152 |= (unint64_t)(v154 & 0x7F) << v150;
                    if ((v154 & 0x80) == 0) {
                      break;
                    }
                    v150 += 7;
                    unint64_t v147 = v153;
                    BOOL v14 = v151++ > 8;
                    if (v14) {
                      goto LABEL_279;
                    }
                  }
                }
LABEL_342:
                *(void *)(a1 + 8) = v152;
              }
              else if (v20 == 202)
              {
                *(void *)(a1 + 164) |= 2uLL;
                unint64_t v25 = *((void *)this + 1);
                unint64_t v26 = *((void *)this + 2);
                uint64_t v27 = *(void *)this;
                if (v25 > 0xFFFFFFFFFFFFFFF5 || v25 + 10 > v26)
                {
                  char v156 = 0;
                  unsigned int v157 = 0;
                  uint64_t v30 = 0;
                  if (v26 <= v25) {
                    unint64_t v26 = *((void *)this + 1);
                  }
                  while (1)
                  {
                    if (v26 == v25)
                    {
                      uint64_t v30 = 0;
                      *((unsigned char *)this + 24) = 1;
                      goto LABEL_290;
                    }
                    unint64_t v158 = v25 + 1;
                    char v159 = *(unsigned char *)(v27 + v25);
                    *((void *)this + 1) = v158;
                    v30 |= (unint64_t)(v159 & 0x7F) << v156;
                    if ((v159 & 0x80) == 0) {
                      break;
                    }
                    v156 += 7;
                    unint64_t v25 = v158;
                    BOOL v14 = v157++ > 8;
                    if (v14)
                    {
LABEL_188:
                      uint64_t v30 = 0;
                      goto LABEL_290;
                    }
                  }
                  if (*((unsigned char *)this + 24)) {
                    uint64_t v30 = 0;
                  }
                }
                else
                {
                  char v28 = 0;
                  unsigned int v29 = 0;
                  uint64_t v30 = 0;
                  while (1)
                  {
                    unint64_t v31 = v25 + 1;
                    *((void *)this + 1) = v25 + 1;
                    char v32 = *(unsigned char *)(v27 + v25);
                    v30 |= (unint64_t)(v32 & 0x7F) << v28;
                    if ((v32 & 0x80) == 0) {
                      break;
                    }
                    v28 += 7;
                    unint64_t v25 = v31;
                    BOOL v14 = v29++ > 8;
                    if (v14) {
                      goto LABEL_188;
                    }
                  }
                }
LABEL_290:
                *(void *)(a1 + 16) = v30;
              }
              else
              {
                uint64_t result = PB::Reader::skip(this);
                if (!result) {
                  return result;
                }
              }
LABEL_282:
              unint64_t v2 = *((void *)this + 1);
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B8744C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(result + 164);
  if ((v4 & 0x100000000) != 0)
  {
    uint64_t result = PB::Writer::write(this);
    uint64_t v4 = *(void *)(v3 + 164);
    if ((v4 & 0x100000) == 0)
    {
LABEL_3:
      if ((v4 & 0x80000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_37;
    }
  }
  else if ((v4 & 0x100000) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x80000) == 0)
  {
LABEL_4:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_5:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 128));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_6:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 148));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_7:
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 136));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x80000000) == 0)
  {
LABEL_8:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 156));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_9:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 144));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x200000) == 0)
  {
LABEL_10:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x400000) == 0)
  {
LABEL_11:
    if ((v4 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x10) == 0)
  {
LABEL_12:
    if ((v4 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 8) == 0)
  {
LABEL_13:
    if ((v4 & 4) == 0) {
      goto LABEL_14;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 4) == 0)
  {
LABEL_14:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x8000) == 0)
  {
LABEL_15:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x20000) == 0)
  {
LABEL_16:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 100));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x10000) == 0)
  {
LABEL_17:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x40000) == 0)
  {
LABEL_18:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 104));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x4000) == 0)
  {
LABEL_19:
    if ((v4 & 0x40) == 0) {
      goto LABEL_20;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 88));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x40) == 0)
  {
LABEL_20:
    if ((v4 & 0x80) == 0) {
      goto LABEL_21;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x80) == 0)
  {
LABEL_21:
    if ((v4 & 0x800) == 0) {
      goto LABEL_22;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x800) == 0)
  {
LABEL_22:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x1000) == 0)
  {
LABEL_23:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x2000) == 0)
  {
LABEL_24:
    if ((v4 & 0x100) == 0) {
      goto LABEL_25;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x100) == 0)
  {
LABEL_25:
    if ((v4 & 0x200) == 0) {
      goto LABEL_26;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x200) == 0)
  {
LABEL_26:
    if ((v4 & 0x400) == 0) {
      goto LABEL_27;
    }
    goto LABEL_60;
  }
LABEL_59:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 68));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x400) == 0)
  {
LABEL_27:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_28:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 140));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x800000) == 0)
  {
LABEL_29:
    if ((v4 & 0x20) == 0) {
      goto LABEL_30;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x20) == 0)
  {
LABEL_30:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_64;
  }
LABEL_63:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_31:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_65;
  }
LABEL_64:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 132));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x40000000) == 0)
  {
LABEL_32:
    if ((v4 & 1) == 0) {
      goto LABEL_33;
    }
LABEL_66:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(void *)(v3 + 164) & 2) == 0) {
      return result;
    }
    goto LABEL_67;
  }
LABEL_65:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 152));
  uint64_t v4 = *(void *)(v3 + 164);
  if (v4) {
    goto LABEL_66;
  }
LABEL_33:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_67:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227B87820(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC211B8;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_227B87848(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B87880(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC211B8;
  *(_DWORD *)(result + 20) = 0;
  if (*(unsigned char *)(a2 + 20))
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 20) = 1;
    *(void *)(result + 8) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 20) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
LABEL_5:
    char v4 = *(unsigned char *)(a2 + 16);
    *(unsigned char *)(result + 20) = v2;
    *(unsigned char *)(result + 16) = v4;
  }
  return result;
}

uint64_t sub_227B878E4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "attached");
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if (v5) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B87960(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 >= *((void *)this + 2))
        {
          BOOL v21 = 0;
          *((unsigned char *)this + 24) = 1;
        }
        else
        {
          int v20 = *(unsigned __int8 *)(*(void *)this + v2++);
          *((void *)this + 1) = v2;
          BOOL v21 = v20 != 0;
        }
        *(unsigned char *)(a1 + 16) = v21;
      }
      else if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B87B48(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    return PB::Writer::write(this);
  }
  return result;
}

uint64_t sub_227B87BB4(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC211F0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_227B87BDC(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B87C14(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC211F0;
  *(_DWORD *)(result + 20) = 0;
  if (*(unsigned char *)(a2 + 20))
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 20) = 1;
    *(void *)(result + 8) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 20) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
LABEL_5:
    char v4 = *(unsigned char *)(a2 + 16);
    *(unsigned char *)(result + 20) = v2;
    *(unsigned char *)(result + 16) = v4;
  }
  return result;
}

uint64_t sub_227B87C78(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "keyPressedDown");
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if (v5) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B87CF4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 >= *((void *)this + 2))
        {
          BOOL v21 = 0;
          *((unsigned char *)this + 24) = 1;
        }
        else
        {
          int v20 = *(unsigned __int8 *)(*(void *)this + v2++);
          *((void *)this + 1) = v2;
          BOOL v21 = v20 != 0;
        }
        *(unsigned char *)(a1 + 16) = v21;
      }
      else if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B87EDC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    return PB::Writer::write(this);
  }
  return result;
}

uint64_t sub_227B87F48(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC21228;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

void sub_227B87F70(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227B87FA8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC21228;
  *(_DWORD *)(a1 + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 28);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 28) = 1;
    *(void *)(a1 + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 28) & 2) != 0)
  {
LABEL_5:
    LODWORD(v4) = *(_DWORD *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(a1 + 28) = v3;
    *(_DWORD *)(a1 + 16) = v4;
    char v2 = *(unsigned char *)(a2 + 28);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    LODWORD(v4) = *(_DWORD *)(a2 + 20);
    v3 |= 4u;
    *(unsigned char *)(a1 + 28) = v3;
    *(_DWORD *)(a1 + 20) = v4;
    if ((*(unsigned char *)(a2 + 28) & 8) == 0) {
      return *(float *)&v4;
    }
  }
  else if ((v2 & 8) == 0)
  {
    return *(float *)&v4;
  }
  LODWORD(v4) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = v3 | 8;
  *(_DWORD *)(a1 + 24) = v4;
  return *(float *)&v4;
}

uint64_t sub_227B88044(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "accelFilterX", *(float *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 28);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 28) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "accelFilterY", *(float *)(a1 + 20));
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "accelFilterZ", *(float *)(a1 + 24));
  if (*(unsigned char *)(a1 + 28)) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
LABEL_6:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B88108(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 28) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          goto LABEL_38;
        case 2u:
          *(unsigned char *)(a1 + 28) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_37;
        case 3u:
          *(unsigned char *)(a1 + 28) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_37;
        case 4u:
          *(unsigned char *)(a1 + 28) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
LABEL_37:
            unint64_t v2 = *((void *)this + 1) + 4;
LABEL_38:
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_35:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B88388(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 28);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
      if ((*(unsigned char *)(v3 + 28) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 28) & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16));
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 8) == 0) {
    return result;
  }
LABEL_9:
  float v5 = *(float *)(v3 + 24);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227B88430(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC21260;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_227B88458(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B88490(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC21260;
  *(_DWORD *)(result + 20) = 0;
  if (*(unsigned char *)(a2 + 20))
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 20) = 1;
    *(void *)(result + 8) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 20) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
LABEL_5:
    int v4 = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(result + 20) = v2;
    *(_DWORD *)(result + 16) = v4;
  }
  return result;
}

uint64_t sub_227B884F4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "state");
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if (v5) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B88570(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v20 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v21 = *(void *)this;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v24 = 0;
          if (v2 <= v20) {
            unint64_t v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v20)
            {
              LODWORD(v24) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_47;
            }
            unint64_t v29 = v20++;
            char v30 = *(unsigned char *)(v21 + v29);
            *((void *)this + 1) = v20;
            v24 |= (unint64_t)(v30 & 0x7F) << v27;
            if ((v30 & 0x80) == 0) {
              break;
            }
            v27 += 7;
            BOOL v14 = v28++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              goto LABEL_46;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v24) = 0;
          }
LABEL_46:
          unint64_t v2 = v29 + 1;
        }
        else
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          while (1)
          {
            unint64_t v2 = v20 + 1;
            *((void *)this + 1) = v20 + 1;
            char v25 = *(unsigned char *)(v21 + v20);
            v24 |= (unint64_t)(v25 & 0x7F) << v22;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v22 += 7;
            unint64_t v20 = v2;
            BOOL v14 = v23++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              break;
            }
          }
        }
LABEL_47:
        *(_DWORD *)(a1 + 16) = v24;
      }
      else if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B88800(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    return PB::Writer::writeVarInt(this);
  }
  return result;
}

uint64_t sub_227B8886C(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC21298;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_227B88894(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B888CC(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC21298;
  *(_DWORD *)(result + 20) = 0;
  if (*(unsigned char *)(a2 + 20))
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 20) = 1;
    *(void *)(result + 8) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 20) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
LABEL_5:
    char v4 = *(unsigned char *)(a2 + 16);
    *(unsigned char *)(result + 20) = v2;
    *(unsigned char *)(result + 16) = v4;
  }
  return result;
}

uint64_t sub_227B88930(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if (v5)
  {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if ((v5 & 2) != 0) {
    PB::TextFormatter::format(this, "touchActive");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B889AC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 >= *((void *)this + 2))
        {
          BOOL v21 = 0;
          *((unsigned char *)this + 24) = 1;
        }
        else
        {
          int v20 = *(unsigned __int8 *)(*(void *)this + v2++);
          *((void *)this + 1) = v2;
          BOOL v21 = v20 != 0;
        }
        *(unsigned char *)(a1 + 16) = v21;
      }
      else if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B88B94(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    return PB::Writer::write(this);
  }
  return result;
}

double sub_227B88C00(uint64_t a1)
{
  *(void *)a1 = &unk_26DC212D0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)(a1 + 72) = 0;
  *(void *)&double result = 0xFFFFFFFFLL;
  *(void *)(a1 + 184) = 0xFFFFFFFFLL;
  *(_DWORD *)(a1 + 192) = 0;
  return result;
}

void sub_227B88C44(PB::Base *this)
{
  *(void *)this = &unk_26DC212D0;
  unint64_t v2 = (void *)*((void *)this + 7);
  if (v2)
  {
    *((void *)this + 8) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 4);
  if (v3)
  {
    *((void *)this + 5) = v3;
    operator delete(v3);
  }
  char v4 = (void *)*((void *)this + 1);
  if (v4)
  {
    *((void *)this + 2) = v4;
    operator delete(v4);
  }

  PB::Base::~Base(this);
}

void sub_227B88CC8(PB::Base *a1)
{
  sub_227B88C44(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B88D00(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC212D0;
  *(_OWORD *)(a1 + 8) = 0u;
  char v4 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 56) = 0u;
  char v5 = (char *)(a1 + 56);
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 184) = 0xFFFFFFFFLL;
  *(_DWORD *)(a1 + 192) = 0;
  __int16 v6 = *(_WORD *)(a2 + 192);
  if ((v6 & 0x4000) != 0)
  {
    int v8 = *(_DWORD *)(a2 + 188);
    __int16 v7 = 0x4000;
    *(_WORD *)(a1 + 192) = 0x4000;
    *(_DWORD *)(a1 + 188) = v8;
    __int16 v6 = *(_WORD *)(a2 + 192);
    if ((v6 & 0x1000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v7 = 0;
  if ((*(_WORD *)(a2 + 192) & 0x1000) != 0)
  {
LABEL_5:
    uint64_t v9 = *(void *)(a2 + 176);
    v7 |= 0x1000u;
    *(_WORD *)(a1 + 192) = v7;
    *(void *)(a1 + 176) = v9;
    __int16 v6 = *(_WORD *)(a2 + 192);
  }
LABEL_6:
  if ((v6 & 0x40) != 0)
  {
    uint64_t v10 = *(void *)(a2 + 128);
    *(_WORD *)(a1 + 192) = v7 | 0x40;
    *(void *)(a1 + 128) = v10;
  }
  if (a1 != a2)
  {
    sub_227B8B74C((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 3);
    sub_227B8B74C(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
    sub_227B8B74C(v5, *(char **)(a2 + 56), *(void *)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 3);
  }
  __int16 v11 = *(_WORD *)(a2 + 192);
  if ((v11 & 2) != 0)
  {
    uint64_t v14 = *(void *)(a2 + 88);
    *(_WORD *)(a1 + 192) |= 2u;
    *(void *)(a1 + 88) = v14;
    __int16 v11 = *(_WORD *)(a2 + 192);
    if ((v11 & 0x2000) == 0)
    {
LABEL_12:
      if ((v11 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_26;
    }
  }
  else if ((*(_WORD *)(a2 + 192) & 0x2000) == 0)
  {
    goto LABEL_12;
  }
  int v15 = *(_DWORD *)(a2 + 184);
  *(_WORD *)(a1 + 192) |= 0x2000u;
  *(_DWORD *)(a1 + 184) = v15;
  __int16 v11 = *(_WORD *)(a2 + 192);
  if ((v11 & 4) == 0)
  {
LABEL_13:
    if ((v11 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v16 = *(void *)(a2 + 96);
  *(_WORD *)(a1 + 192) |= 4u;
  *(void *)(a1 + 96) = v16;
  __int16 v11 = *(_WORD *)(a2 + 192);
  if ((v11 & 0x10) == 0)
  {
LABEL_14:
    if ((v11 & 1) == 0) {
      goto LABEL_15;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t v17 = *(void *)(a2 + 112);
  *(_WORD *)(a1 + 192) |= 0x10u;
  *(void *)(a1 + 112) = v17;
  __int16 v11 = *(_WORD *)(a2 + 192);
  if ((v11 & 1) == 0)
  {
LABEL_15:
    if ((v11 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t v18 = *(void *)(a2 + 80);
  *(_WORD *)(a1 + 192) |= 1u;
  *(void *)(a1 + 80) = v18;
  __int16 v11 = *(_WORD *)(a2 + 192);
  if ((v11 & 8) == 0)
  {
LABEL_16:
    if ((v11 & 0x20) == 0) {
      goto LABEL_17;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t v19 = *(void *)(a2 + 104);
  *(_WORD *)(a1 + 192) |= 8u;
  *(void *)(a1 + 104) = v19;
  __int16 v11 = *(_WORD *)(a2 + 192);
  if ((v11 & 0x20) == 0)
  {
LABEL_17:
    if ((v11 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t v20 = *(void *)(a2 + 120);
  *(_WORD *)(a1 + 192) |= 0x20u;
  *(void *)(a1 + 120) = v20;
  __int16 v11 = *(_WORD *)(a2 + 192);
  if ((v11 & 0x800) == 0)
  {
LABEL_18:
    if ((v11 & 0x80) == 0) {
      goto LABEL_19;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t v21 = *(void *)(a2 + 168);
  *(_WORD *)(a1 + 192) |= 0x800u;
  *(void *)(a1 + 168) = v21;
  __int16 v11 = *(_WORD *)(a2 + 192);
  if ((v11 & 0x80) == 0)
  {
LABEL_19:
    if ((v11 & 0x100) == 0) {
      goto LABEL_20;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t v22 = *(void *)(a2 + 136);
  *(_WORD *)(a1 + 192) |= 0x80u;
  *(void *)(a1 + 136) = v22;
  __int16 v11 = *(_WORD *)(a2 + 192);
  if ((v11 & 0x100) == 0)
  {
LABEL_20:
    if ((v11 & 0x200) == 0) {
      goto LABEL_21;
    }
LABEL_34:
    uint64_t v24 = *(void *)(a2 + 152);
    *(_WORD *)(a1 + 192) |= 0x200u;
    *(void *)(a1 + 152) = v24;
    if ((*(_WORD *)(a2 + 192) & 0x400) == 0) {
      return a1;
    }
    goto LABEL_22;
  }
LABEL_33:
  uint64_t v23 = *(void *)(a2 + 144);
  *(_WORD *)(a1 + 192) |= 0x100u;
  *(void *)(a1 + 144) = v23;
  __int16 v11 = *(_WORD *)(a2 + 192);
  if ((v11 & 0x200) != 0) {
    goto LABEL_34;
  }
LABEL_21:
  if ((v11 & 0x400) != 0)
  {
LABEL_22:
    uint64_t v12 = *(void *)(a2 + 160);
    *(_WORD *)(a1 + 192) |= 0x400u;
    *(void *)(a1 + 160) = v12;
  }
  return a1;
}

uint64_t sub_227B88F98(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 192);
  if (v5)
  {
    PB::TextFormatter::format(this, "altitude", *(double *)(a1 + 80));
    __int16 v5 = *(_WORD *)(a1 + 192);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 0x2000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_30;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "confidence", *(double *)(a1 + 88));
  __int16 v5 = *(_WORD *)(a1 + 192);
  if ((v5 & 0x2000) == 0)
  {
LABEL_4:
    if ((v5 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "globalReferenceFrame");
  __int16 v5 = *(_WORD *)(a1 + 192);
  if ((v5 & 4) == 0)
  {
LABEL_5:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(this, "latitude", *(double *)(a1 + 96));
  __int16 v5 = *(_WORD *)(a1 + 192);
  if ((v5 & 8) == 0)
  {
LABEL_6:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(this, "locationTimestamp", *(double *)(a1 + 104));
  __int16 v5 = *(_WORD *)(a1 + 192);
  if ((v5 & 0x10) == 0)
  {
LABEL_7:
    if ((v5 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(this, "longitude", *(double *)(a1 + 112));
  __int16 v5 = *(_WORD *)(a1 + 192);
  if ((v5 & 0x20) == 0)
  {
LABEL_8:
    if ((v5 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "machContinuousLocationTimestamp", *(double *)(a1 + 120));
  __int16 v5 = *(_WORD *)(a1 + 192);
  if ((v5 & 0x40) == 0)
  {
LABEL_9:
    if ((v5 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "machContinuousTimestamp", *(double *)(a1 + 128));
  __int16 v5 = *(_WORD *)(a1 + 192);
  if ((v5 & 0x80) == 0)
  {
LABEL_10:
    if ((v5 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "polylinesLocation1Latitude", *(double *)(a1 + 136));
  __int16 v5 = *(_WORD *)(a1 + 192);
  if ((v5 & 0x100) == 0)
  {
LABEL_11:
    if ((v5 & 0x200) == 0) {
      goto LABEL_12;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "polylinesLocation1Longitude", *(double *)(a1 + 144));
  __int16 v5 = *(_WORD *)(a1 + 192);
  if ((v5 & 0x200) == 0)
  {
LABEL_12:
    if ((v5 & 0x400) == 0) {
      goto LABEL_13;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "polylinesLocation2Latitude", *(double *)(a1 + 152));
  __int16 v5 = *(_WORD *)(a1 + 192);
  if ((v5 & 0x400) == 0)
  {
LABEL_13:
    if ((v5 & 0x800) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_39:
  PB::TextFormatter::format(this, "polylinesLocation2Longitude", *(double *)(a1 + 160));
  if ((*(_WORD *)(a1 + 192) & 0x800) != 0) {
LABEL_14:
  }
    PB::TextFormatter::format(this, "roadID");
LABEL_15:
  __int16 v6 = *(double **)(a1 + 8);
  __int16 v7 = *(double **)(a1 + 16);
  while (v6 != v7)
  {
    double v8 = *v6++;
    PB::TextFormatter::format(this, "rotationFromGlobalToCameraFrame", v8);
  }
  uint64_t v9 = *(double **)(a1 + 32);
  uint64_t v10 = *(double **)(a1 + 40);
  while (v9 != v10)
  {
    double v11 = *v9++;
    PB::TextFormatter::format(this, "rotationFromGlobalToDeviceFrame", v11);
  }
  uint64_t v12 = *(double **)(a1 + 56);
  char v13 = *(double **)(a1 + 64);
  while (v12 != v13)
  {
    double v14 = *v12++;
    PB::TextFormatter::format(this, "rotationalAccuracyInRadians", v14);
  }
  __int16 v15 = *(_WORD *)(a1 + 192);
  if ((v15 & 0x4000) != 0)
  {
    PB::TextFormatter::format(this, "status");
    __int16 v15 = *(_WORD *)(a1 + 192);
  }
  if ((v15 & 0x1000) != 0) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 176));
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227B89248(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    double v8 = (void **)(a1 + 56);
    uint64_t v9 = a1 + 72;
    uint64_t v10 = (void **)(a1 + 8);
    uint64_t v11 = a1 + 24;
    uint64_t v12 = (void **)(a1 + 32);
    uint64_t v13 = a1 + 48;
    while (1)
    {
      uint64_t v14 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v17 = 0;
      while (1)
      {
        unint64_t v18 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v19 = *(unsigned char *)(v14 + v2);
        v17 |= (unint64_t)(v19 & 0x7F) << v15;
        if ((v19 & 0x80) == 0) {
          break;
        }
        v15 += 7;
        unint64_t v2 = v18;
        BOOL v20 = v16++ > 8;
        if (v20) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v26 = v17 & 7;
      if (v26 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v17 >> 3))
      {
        case 1u:
          *(_WORD *)(a1 + 192) |= 0x4000u;
          unint64_t v27 = *((void *)this + 1);
          unint64_t v28 = *((void *)this + 2);
          uint64_t v29 = *(void *)this;
          if (v27 <= 0xFFFFFFFFFFFFFFF5 && v27 + 10 <= v28)
          {
            char v30 = 0;
            unsigned int v31 = 0;
            uint64_t v32 = 0;
            do
            {
              unint64_t v33 = v27 + 1;
              *((void *)this + 1) = v27 + 1;
              char v34 = *(unsigned char *)(v29 + v27);
              v32 |= (unint64_t)(v34 & 0x7F) << v30;
              if ((v34 & 0x80) == 0) {
                goto LABEL_212;
              }
              v30 += 7;
              unint64_t v27 = v33;
              BOOL v20 = v31++ > 8;
            }
            while (!v20);
LABEL_160:
            LODWORD(v32) = 0;
            goto LABEL_212;
          }
          char v105 = 0;
          unsigned int v106 = 0;
          uint64_t v32 = 0;
          if (v28 <= v27) {
            unint64_t v28 = *((void *)this + 1);
          }
          while (2)
          {
            if (v28 == v27)
            {
              LODWORD(v32) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v107 = v27 + 1;
              char v108 = *(unsigned char *)(v29 + v27);
              *((void *)this + 1) = v107;
              v32 |= (unint64_t)(v108 & 0x7F) << v105;
              if (v108 < 0)
              {
                v105 += 7;
                unint64_t v27 = v107;
                BOOL v20 = v106++ > 8;
                if (v20) {
                  goto LABEL_160;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v32) = 0;
              }
            }
            break;
          }
LABEL_212:
          *(_DWORD *)(a1 + 188) = v32;
          goto LABEL_245;
        case 2u:
          *(_WORD *)(a1 + 192) |= 0x1000u;
          unint64_t v35 = *((void *)this + 1);
          if (v35 > 0xFFFFFFFFFFFFFFF7 || v35 + 8 > *((void *)this + 2)) {
            goto LABEL_242;
          }
          *(void *)(a1 + 176) = *(void *)(*(void *)this + v35);
          goto LABEL_244;
        case 3u:
          *(_WORD *)(a1 + 192) |= 0x40u;
          unint64_t v36 = *((void *)this + 1);
          if (v36 > 0xFFFFFFFFFFFFFFF7 || v36 + 8 > *((void *)this + 2)) {
            goto LABEL_242;
          }
          *(void *)(a1 + 128) = *(void *)(*(void *)this + v36);
          goto LABEL_244;
        case 4u:
          if (v26 != 2)
          {
            char v110 = *(char **)(a1 + 40);
            unint64_t v109 = *(void *)(a1 + 48);
            if ((unint64_t)v110 >= v109)
            {
              unint64_t v124 = (char *)*v12;
              uint64_t v125 = (v110 - (unsigned char *)*v12) >> 3;
              unint64_t v126 = v125 + 1;
              if ((unint64_t)(v125 + 1) >> 61) {
LABEL_255:
              }
                sub_227B8B89C();
              uint64_t v127 = v109 - (void)v124;
              if (v127 >> 2 > v126) {
                unint64_t v126 = v127 >> 2;
              }
              if ((unint64_t)v127 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v128 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v128 = v126;
              }
              if (v128)
              {
                unint64_t v129 = (char *)sub_227B8B8B4(v13, v128);
                unint64_t v124 = *(char **)(a1 + 32);
                char v110 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v129 = 0;
              }
              uint64_t v142 = &v129[8 * v125];
              *(void *)uint64_t v142 = 0;
              unint64_t v111 = v142 + 8;
              while (v110 != v124)
              {
                uint64_t v143 = *((void *)v110 - 1);
                v110 -= 8;
                *((void *)v142 - 1) = v143;
                v142 -= 8;
              }
              *(void *)(a1 + 32) = v142;
              *(void *)(a1 + 40) = v111;
              *(void *)(a1 + 48) = &v129[8 * v128];
              if (v124) {
                operator delete(v124);
              }
            }
            else
            {
              *(void *)char v110 = 0;
              unint64_t v111 = v110 + 8;
            }
            *(void *)(a1 + 40) = v111;
            goto LABEL_240;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v37 = *((void *)this + 1);
          unint64_t v38 = *((void *)this + 2);
          while (v37 < v38 && !*((unsigned char *)this + 24))
          {
            char v40 = *(char **)(a1 + 40);
            unint64_t v39 = *(void *)(a1 + 48);
            if ((unint64_t)v40 >= v39)
            {
              unint64_t v42 = (char *)*v12;
              uint64_t v43 = (v40 - (unsigned char *)*v12) >> 3;
              unint64_t v44 = v43 + 1;
              if ((unint64_t)(v43 + 1) >> 61) {
                goto LABEL_255;
              }
              uint64_t v45 = v39 - (void)v42;
              if (v45 >> 2 > v44) {
                unint64_t v44 = v45 >> 2;
              }
              if ((unint64_t)v45 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v46 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v46 = v44;
              }
              if (v46)
              {
                unint64_t v47 = (char *)sub_227B8B8B4(v13, v46);
                unint64_t v42 = *(char **)(a1 + 32);
                char v40 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v47 = 0;
              }
              char v48 = &v47[8 * v43];
              *(void *)char v48 = 0;
              unint64_t v41 = v48 + 8;
              while (v40 != v42)
              {
                uint64_t v49 = *((void *)v40 - 1);
                v40 -= 8;
                *((void *)v48 - 1) = v49;
                v48 -= 8;
              }
              *(void *)(a1 + 32) = v48;
              *(void *)(a1 + 40) = v41;
              *(void *)(a1 + 48) = &v47[8 * v46];
              if (v42) {
                operator delete(v42);
              }
            }
            else
            {
              *(void *)char v40 = 0;
              unint64_t v41 = v40 + 8;
            }
            *(void *)(a1 + 40) = v41;
            unint64_t v50 = *((void *)this + 1);
            if (v50 > 0xFFFFFFFFFFFFFFF7 || v50 + 8 > *((void *)this + 2)) {
              goto LABEL_181;
            }
            *(v41 - 1) = *(void *)(*(void *)this + v50);
            unint64_t v38 = *((void *)this + 2);
            unint64_t v37 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v37;
          }
          goto LABEL_182;
        case 5u:
          if (v26 != 2)
          {
            unint64_t v113 = *(char **)(a1 + 16);
            unint64_t v112 = *(void *)(a1 + 24);
            if ((unint64_t)v113 >= v112)
            {
              unint64_t v130 = (char *)*v10;
              uint64_t v131 = (v113 - (unsigned char *)*v10) >> 3;
              unint64_t v132 = v131 + 1;
              if ((unint64_t)(v131 + 1) >> 61) {
LABEL_256:
              }
                sub_227B8B89C();
              uint64_t v133 = v112 - (void)v130;
              if (v133 >> 2 > v132) {
                unint64_t v132 = v133 >> 2;
              }
              if ((unint64_t)v133 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v134 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v134 = v132;
              }
              if (v134)
              {
                unint64_t v135 = (char *)sub_227B8B8B4(v11, v134);
                unint64_t v130 = *(char **)(a1 + 8);
                unint64_t v113 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v135 = 0;
              }
              char v144 = &v135[8 * v131];
              *(void *)char v144 = 0;
              unint64_t v111 = v144 + 8;
              while (v113 != v130)
              {
                uint64_t v145 = *((void *)v113 - 1);
                v113 -= 8;
                *((void *)v144 - 1) = v145;
                v144 -= 8;
              }
              *(void *)(a1 + 8) = v144;
              *(void *)(a1 + 16) = v111;
              *(void *)(a1 + 24) = &v135[8 * v134];
              if (v130) {
                operator delete(v130);
              }
            }
            else
            {
              *(void *)unint64_t v113 = 0;
              unint64_t v111 = v113 + 8;
            }
            *(void *)(a1 + 16) = v111;
            goto LABEL_240;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v51 = *((void *)this + 1);
          unint64_t v52 = *((void *)this + 2);
          while (v51 < v52 && !*((unsigned char *)this + 24))
          {
            unint64_t v54 = *(char **)(a1 + 16);
            unint64_t v53 = *(void *)(a1 + 24);
            if ((unint64_t)v54 >= v53)
            {
              uint64_t v56 = (char *)*v10;
              uint64_t v57 = (v54 - (unsigned char *)*v10) >> 3;
              unint64_t v58 = v57 + 1;
              if ((unint64_t)(v57 + 1) >> 61) {
                goto LABEL_256;
              }
              uint64_t v59 = v53 - (void)v56;
              if (v59 >> 2 > v58) {
                unint64_t v58 = v59 >> 2;
              }
              if ((unint64_t)v59 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v60 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v60 = v58;
              }
              if (v60)
              {
                char v61 = (char *)sub_227B8B8B4(v11, v60);
                uint64_t v56 = *(char **)(a1 + 8);
                unint64_t v54 = *(char **)(a1 + 16);
              }
              else
              {
                char v61 = 0;
              }
              unint64_t v62 = &v61[8 * v57];
              *(void *)unint64_t v62 = 0;
              unint64_t v55 = v62 + 8;
              while (v54 != v56)
              {
                uint64_t v63 = *((void *)v54 - 1);
                v54 -= 8;
                *((void *)v62 - 1) = v63;
                v62 -= 8;
              }
              *(void *)(a1 + 8) = v62;
              *(void *)(a1 + 16) = v55;
              *(void *)(a1 + 24) = &v61[8 * v60];
              if (v56) {
                operator delete(v56);
              }
            }
            else
            {
              *(void *)unint64_t v54 = 0;
              unint64_t v55 = v54 + 8;
            }
            *(void *)(a1 + 16) = v55;
            unint64_t v64 = *((void *)this + 1);
            if (v64 > 0xFFFFFFFFFFFFFFF7 || v64 + 8 > *((void *)this + 2)) {
              goto LABEL_181;
            }
            *(v55 - 1) = *(void *)(*(void *)this + v64);
            unint64_t v52 = *((void *)this + 2);
            unint64_t v51 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v51;
          }
          goto LABEL_182;
        case 6u:
          if (v26 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v65 = *((void *)this + 1);
            unint64_t v66 = *((void *)this + 2);
            while (v65 < v66 && !*((unsigned char *)this + 24))
            {
              unint64_t v68 = *(char **)(a1 + 64);
              unint64_t v67 = *(void *)(a1 + 72);
              if ((unint64_t)v68 >= v67)
              {
                unint64_t v70 = (char *)*v8;
                uint64_t v71 = (v68 - (unsigned char *)*v8) >> 3;
                unint64_t v72 = v71 + 1;
                if ((unint64_t)(v71 + 1) >> 61) {
                  goto LABEL_257;
                }
                uint64_t v73 = v67 - (void)v70;
                if (v73 >> 2 > v72) {
                  unint64_t v72 = v73 >> 2;
                }
                if ((unint64_t)v73 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v74 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v74 = v72;
                }
                if (v74)
                {
                  uint64_t v75 = (char *)sub_227B8B8B4(v9, v74);
                  unint64_t v70 = *(char **)(a1 + 56);
                  unint64_t v68 = *(char **)(a1 + 64);
                }
                else
                {
                  uint64_t v75 = 0;
                }
                unint64_t v76 = &v75[8 * v71];
                *(void *)unint64_t v76 = 0;
                char v69 = v76 + 8;
                while (v68 != v70)
                {
                  uint64_t v77 = *((void *)v68 - 1);
                  v68 -= 8;
                  *((void *)v76 - 1) = v77;
                  v76 -= 8;
                }
                *(void *)(a1 + 56) = v76;
                *(void *)(a1 + 64) = v69;
                *(void *)(a1 + 72) = &v75[8 * v74];
                if (v70) {
                  operator delete(v70);
                }
              }
              else
              {
                *(void *)unint64_t v68 = 0;
                char v69 = v68 + 8;
              }
              *(void *)(a1 + 64) = v69;
              unint64_t v78 = *((void *)this + 1);
              if (v78 > 0xFFFFFFFFFFFFFFF7 || v78 + 8 > *((void *)this + 2))
              {
LABEL_181:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v69 - 1) = *(void *)(*(void *)this + v78);
              unint64_t v66 = *((void *)this + 2);
              unint64_t v65 = *((void *)this + 1) + 8;
              *((void *)this + 1) = v65;
            }
LABEL_182:
            PB::Reader::recallMark();
          }
          else
          {
            unint64_t v115 = *(char **)(a1 + 64);
            unint64_t v114 = *(void *)(a1 + 72);
            if ((unint64_t)v115 >= v114)
            {
              char v136 = (char *)*v8;
              uint64_t v137 = (v115 - (unsigned char *)*v8) >> 3;
              unint64_t v138 = v137 + 1;
              if ((unint64_t)(v137 + 1) >> 61) {
LABEL_257:
              }
                sub_227B8B89C();
              uint64_t v139 = v114 - (void)v136;
              if (v139 >> 2 > v138) {
                unint64_t v138 = v139 >> 2;
              }
              if ((unint64_t)v139 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v140 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v140 = v138;
              }
              if (v140)
              {
                unsigned int v141 = (char *)sub_227B8B8B4(v9, v140);
                char v136 = *(char **)(a1 + 56);
                unint64_t v115 = *(char **)(a1 + 64);
              }
              else
              {
                unsigned int v141 = 0;
              }
              unint64_t v146 = &v141[8 * v137];
              *(void *)unint64_t v146 = 0;
              unint64_t v111 = v146 + 8;
              while (v115 != v136)
              {
                uint64_t v147 = *((void *)v115 - 1);
                v115 -= 8;
                *((void *)v146 - 1) = v147;
                v146 -= 8;
              }
              *(void *)(a1 + 56) = v146;
              *(void *)(a1 + 64) = v111;
              *(void *)(a1 + 72) = &v141[8 * v140];
              if (v136) {
                operator delete(v136);
              }
            }
            else
            {
              *(void *)unint64_t v115 = 0;
              unint64_t v111 = v115 + 8;
            }
            *(void *)(a1 + 64) = v111;
LABEL_240:
            unint64_t v148 = *((void *)this + 1);
            if (v148 <= 0xFFFFFFFFFFFFFFF7 && v148 + 8 <= *((void *)this + 2))
            {
              *(v111 - 1) = *(void *)(*(void *)this + v148);
LABEL_244:
              *((void *)this + 1) += 8;
            }
            else
            {
LABEL_242:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_245:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        case 7u:
          *(_WORD *)(a1 + 192) |= 2u;
          unint64_t v79 = *((void *)this + 1);
          if (v79 > 0xFFFFFFFFFFFFFFF7 || v79 + 8 > *((void *)this + 2)) {
            goto LABEL_242;
          }
          *(void *)(a1 + 88) = *(void *)(*(void *)this + v79);
          goto LABEL_244;
        case 8u:
          *(_WORD *)(a1 + 192) |= 0x2000u;
          unint64_t v80 = *((void *)this + 1);
          unint64_t v81 = *((void *)this + 2);
          uint64_t v82 = *(void *)this;
          if (v80 <= 0xFFFFFFFFFFFFFFF5 && v80 + 10 <= v81)
          {
            char v83 = 0;
            unsigned int v84 = 0;
            uint64_t v85 = 0;
            do
            {
              unint64_t v86 = v80 + 1;
              *((void *)this + 1) = v80 + 1;
              char v87 = *(unsigned char *)(v82 + v80);
              v85 |= (unint64_t)(v87 & 0x7F) << v83;
              if ((v87 & 0x80) == 0) {
                goto LABEL_215;
              }
              v83 += 7;
              unint64_t v80 = v86;
              BOOL v20 = v84++ > 8;
            }
            while (!v20);
LABEL_173:
            LODWORD(v85) = 0;
            goto LABEL_215;
          }
          char v116 = 0;
          unsigned int v117 = 0;
          uint64_t v85 = 0;
          if (v81 <= v80) {
            unint64_t v81 = *((void *)this + 1);
          }
          while (2)
          {
            if (v81 == v80)
            {
              LODWORD(v85) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v118 = v80 + 1;
              char v119 = *(unsigned char *)(v82 + v80);
              *((void *)this + 1) = v118;
              v85 |= (unint64_t)(v119 & 0x7F) << v116;
              if (v119 < 0)
              {
                v116 += 7;
                unint64_t v80 = v118;
                BOOL v20 = v117++ > 8;
                if (v20) {
                  goto LABEL_173;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v85) = 0;
              }
            }
            break;
          }
LABEL_215:
          *(_DWORD *)(a1 + 184) = v85;
          goto LABEL_245;
        case 9u:
          *(_WORD *)(a1 + 192) |= 4u;
          unint64_t v88 = *((void *)this + 1);
          if (v88 > 0xFFFFFFFFFFFFFFF7 || v88 + 8 > *((void *)this + 2)) {
            goto LABEL_242;
          }
          *(void *)(a1 + 96) = *(void *)(*(void *)this + v88);
          goto LABEL_244;
        case 0xAu:
          *(_WORD *)(a1 + 192) |= 0x10u;
          unint64_t v89 = *((void *)this + 1);
          if (v89 > 0xFFFFFFFFFFFFFFF7 || v89 + 8 > *((void *)this + 2)) {
            goto LABEL_242;
          }
          *(void *)(a1 + 112) = *(void *)(*(void *)this + v89);
          goto LABEL_244;
        case 0xBu:
          *(_WORD *)(a1 + 192) |= 1u;
          unint64_t v90 = *((void *)this + 1);
          if (v90 > 0xFFFFFFFFFFFFFFF7 || v90 + 8 > *((void *)this + 2)) {
            goto LABEL_242;
          }
          *(void *)(a1 + 80) = *(void *)(*(void *)this + v90);
          goto LABEL_244;
        case 0xCu:
          *(_WORD *)(a1 + 192) |= 8u;
          unint64_t v91 = *((void *)this + 1);
          if (v91 > 0xFFFFFFFFFFFFFFF7 || v91 + 8 > *((void *)this + 2)) {
            goto LABEL_242;
          }
          *(void *)(a1 + 104) = *(void *)(*(void *)this + v91);
          goto LABEL_244;
        case 0xDu:
          *(_WORD *)(a1 + 192) |= 0x20u;
          unint64_t v92 = *((void *)this + 1);
          if (v92 > 0xFFFFFFFFFFFFFFF7 || v92 + 8 > *((void *)this + 2)) {
            goto LABEL_242;
          }
          *(void *)(a1 + 120) = *(void *)(*(void *)this + v92);
          goto LABEL_244;
        case 0xEu:
          *(_WORD *)(a1 + 192) |= 0x800u;
          unint64_t v93 = *((void *)this + 1);
          unint64_t v94 = *((void *)this + 2);
          uint64_t v95 = *(void *)this;
          if (v93 <= 0xFFFFFFFFFFFFFFF5 && v93 + 10 <= v94)
          {
            char v96 = 0;
            unsigned int v97 = 0;
            uint64_t v98 = 0;
            do
            {
              unint64_t v99 = v93 + 1;
              *((void *)this + 1) = v93 + 1;
              char v100 = *(unsigned char *)(v95 + v93);
              v98 |= (unint64_t)(v100 & 0x7F) << v96;
              if ((v100 & 0x80) == 0) {
                goto LABEL_218;
              }
              v96 += 7;
              unint64_t v93 = v99;
              BOOL v20 = v97++ > 8;
            }
            while (!v20);
LABEL_180:
            uint64_t v98 = 0;
            goto LABEL_218;
          }
          char v120 = 0;
          unsigned int v121 = 0;
          uint64_t v98 = 0;
          if (v94 <= v93) {
            unint64_t v94 = *((void *)this + 1);
          }
          while (2)
          {
            if (v94 == v93)
            {
              uint64_t v98 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v122 = v93 + 1;
              char v123 = *(unsigned char *)(v95 + v93);
              *((void *)this + 1) = v122;
              v98 |= (unint64_t)(v123 & 0x7F) << v120;
              if (v123 < 0)
              {
                v120 += 7;
                unint64_t v93 = v122;
                BOOL v20 = v121++ > 8;
                if (v20) {
                  goto LABEL_180;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v98 = 0;
              }
            }
            break;
          }
LABEL_218:
          *(void *)(a1 + 168) = v98;
          goto LABEL_245;
        case 0xFu:
          *(_WORD *)(a1 + 192) |= 0x80u;
          unint64_t v101 = *((void *)this + 1);
          if (v101 > 0xFFFFFFFFFFFFFFF7 || v101 + 8 > *((void *)this + 2)) {
            goto LABEL_242;
          }
          *(void *)(a1 + 136) = *(void *)(*(void *)this + v101);
          goto LABEL_244;
        case 0x10u:
          *(_WORD *)(a1 + 192) |= 0x100u;
          unint64_t v102 = *((void *)this + 1);
          if (v102 > 0xFFFFFFFFFFFFFFF7 || v102 + 8 > *((void *)this + 2)) {
            goto LABEL_242;
          }
          *(void *)(a1 + 144) = *(void *)(*(void *)this + v102);
          goto LABEL_244;
        case 0x11u:
          *(_WORD *)(a1 + 192) |= 0x200u;
          unint64_t v103 = *((void *)this + 1);
          if (v103 > 0xFFFFFFFFFFFFFFF7 || v103 + 8 > *((void *)this + 2)) {
            goto LABEL_242;
          }
          *(void *)(a1 + 152) = *(void *)(*(void *)this + v103);
          goto LABEL_244;
        case 0x12u:
          *(_WORD *)(a1 + 192) |= 0x400u;
          unint64_t v104 = *((void *)this + 1);
          if (v104 > 0xFFFFFFFFFFFFFFF7 || v104 + 8 > *((void *)this + 2)) {
            goto LABEL_242;
          }
          *(void *)(a1 + 160) = *(void *)(*(void *)this + v104);
          goto LABEL_244;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_245;
      }
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v17 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v23 = v2 + 1;
      char v24 = *(unsigned char *)(v14 + v2);
      *((void *)this + 1) = v23;
      v17 |= (unint64_t)(v24 & 0x7F) << v21;
      if ((v24 & 0x80) == 0) {
        goto LABEL_21;
      }
      v21 += 7;
      unint64_t v2 = v23;
      if (v22++ >= 9)
      {
LABEL_20:
        unint64_t v17 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B89F04(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 192);
  if ((v4 & 0x4000) == 0)
  {
    if ((*(_WORD *)(result + 192) & 0x1000) == 0) {
      goto LABEL_3;
    }
LABEL_28:
    double result = PB::Writer::write(this, *(double *)(v3 + 176));
    if ((*(_WORD *)(v3 + 192) & 0x40) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  double result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 192);
  if ((v4 & 0x1000) != 0) {
    goto LABEL_28;
  }
LABEL_3:
  if ((v4 & 0x40) != 0) {
LABEL_4:
  }
    double result = PB::Writer::write(this, *(double *)(v3 + 128));
LABEL_5:
  __int16 v5 = *(double **)(v3 + 32);
  __int16 v6 = *(double **)(v3 + 40);
  while (v5 != v6)
  {
    double v7 = *v5++;
    double result = PB::Writer::write(this, v7);
  }
  double v8 = *(double **)(v3 + 8);
  uint64_t v9 = *(double **)(v3 + 16);
  while (v8 != v9)
  {
    double v10 = *v8++;
    double result = PB::Writer::write(this, v10);
  }
  uint64_t v11 = *(double **)(v3 + 56);
  uint64_t v12 = *(double **)(v3 + 64);
  while (v11 != v12)
  {
    double v13 = *v11++;
    double result = PB::Writer::write(this, v13);
  }
  __int16 v14 = *(_WORD *)(v3 + 192);
  if ((v14 & 2) != 0)
  {
    double result = PB::Writer::write(this, *(double *)(v3 + 88));
    __int16 v14 = *(_WORD *)(v3 + 192);
    if ((v14 & 0x2000) == 0)
    {
LABEL_16:
      if ((v14 & 4) == 0) {
        goto LABEL_17;
      }
      goto LABEL_32;
    }
  }
  else if ((*(_WORD *)(v3 + 192) & 0x2000) == 0)
  {
    goto LABEL_16;
  }
  double result = PB::Writer::writeVarInt(this);
  __int16 v14 = *(_WORD *)(v3 + 192);
  if ((v14 & 4) == 0)
  {
LABEL_17:
    if ((v14 & 0x10) == 0) {
      goto LABEL_18;
    }
    goto LABEL_33;
  }
LABEL_32:
  double result = PB::Writer::write(this, *(double *)(v3 + 96));
  __int16 v14 = *(_WORD *)(v3 + 192);
  if ((v14 & 0x10) == 0)
  {
LABEL_18:
    if ((v14 & 1) == 0) {
      goto LABEL_19;
    }
    goto LABEL_34;
  }
LABEL_33:
  double result = PB::Writer::write(this, *(double *)(v3 + 112));
  __int16 v14 = *(_WORD *)(v3 + 192);
  if ((v14 & 1) == 0)
  {
LABEL_19:
    if ((v14 & 8) == 0) {
      goto LABEL_20;
    }
    goto LABEL_35;
  }
LABEL_34:
  double result = PB::Writer::write(this, *(double *)(v3 + 80));
  __int16 v14 = *(_WORD *)(v3 + 192);
  if ((v14 & 8) == 0)
  {
LABEL_20:
    if ((v14 & 0x20) == 0) {
      goto LABEL_21;
    }
    goto LABEL_36;
  }
LABEL_35:
  double result = PB::Writer::write(this, *(double *)(v3 + 104));
  __int16 v14 = *(_WORD *)(v3 + 192);
  if ((v14 & 0x20) == 0)
  {
LABEL_21:
    if ((v14 & 0x800) == 0) {
      goto LABEL_22;
    }
    goto LABEL_37;
  }
LABEL_36:
  double result = PB::Writer::write(this, *(double *)(v3 + 120));
  __int16 v14 = *(_WORD *)(v3 + 192);
  if ((v14 & 0x800) == 0)
  {
LABEL_22:
    if ((v14 & 0x80) == 0) {
      goto LABEL_23;
    }
    goto LABEL_38;
  }
LABEL_37:
  double result = PB::Writer::writeVarInt(this);
  __int16 v14 = *(_WORD *)(v3 + 192);
  if ((v14 & 0x80) == 0)
  {
LABEL_23:
    if ((v14 & 0x100) == 0) {
      goto LABEL_24;
    }
    goto LABEL_39;
  }
LABEL_38:
  double result = PB::Writer::write(this, *(double *)(v3 + 136));
  __int16 v14 = *(_WORD *)(v3 + 192);
  if ((v14 & 0x100) == 0)
  {
LABEL_24:
    if ((v14 & 0x200) == 0) {
      goto LABEL_25;
    }
LABEL_40:
    double result = PB::Writer::write(this, *(double *)(v3 + 152));
    if ((*(_WORD *)(v3 + 192) & 0x400) == 0) {
      return result;
    }
    goto LABEL_41;
  }
LABEL_39:
  double result = PB::Writer::write(this, *(double *)(v3 + 144));
  __int16 v14 = *(_WORD *)(v3 + 192);
  if ((v14 & 0x200) != 0) {
    goto LABEL_40;
  }
LABEL_25:
  if ((v14 & 0x400) == 0) {
    return result;
  }
LABEL_41:
  double v15 = *(double *)(v3 + 160);

  return PB::Writer::write(this, v15);
}

uint64_t sub_227B8A14C(uint64_t result)
{
  *(void *)double result = &unk_26DC21308;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void sub_227B8A174(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227B8A1AC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC21308;
  *(_DWORD *)(a1 + 40) = 0;
  char v2 = *(unsigned char *)(a2 + 40);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 40) = 1;
    *(void *)(a1 + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 40);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 40) & 2) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(a1 + 40) = v3;
    *(_DWORD *)(a1 + 16) = v5;
    char v2 = *(unsigned char *)(a2 + 40);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 20);
    v3 |= 4u;
    *(unsigned char *)(a1 + 40) = v3;
    *(_DWORD *)(a1 + 20) = v6;
    char v2 = *(unsigned char *)(a2 + 40);
    if ((v2 & 8) == 0)
    {
LABEL_8:
      if ((v2 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_14;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 24);
  v3 |= 8u;
  *(unsigned char *)(a1 + 40) = v3;
  *(_DWORD *)(a1 + 24) = v7;
  char v2 = *(unsigned char *)(a2 + 40);
  if ((v2 & 0x10) == 0)
  {
LABEL_9:
    if ((v2 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_15;
  }
LABEL_14:
  int v8 = *(_DWORD *)(a2 + 28);
  v3 |= 0x10u;
  *(unsigned char *)(a1 + 40) = v3;
  *(_DWORD *)(a1 + 28) = v8;
  char v2 = *(unsigned char *)(a2 + 40);
  if ((v2 & 0x20) == 0)
  {
LABEL_10:
    if ((v2 & 0x40) == 0) {
      return *(float *)&v4;
    }
    goto LABEL_16;
  }
LABEL_15:
  int v9 = *(_DWORD *)(a2 + 32);
  v3 |= 0x20u;
  *(unsigned char *)(a1 + 40) = v3;
  *(_DWORD *)(a1 + 32) = v9;
  if ((*(unsigned char *)(a2 + 40) & 0x40) == 0) {
    return *(float *)&v4;
  }
LABEL_16:
  LODWORD(v4) = *(_DWORD *)(a2 + 36);
  *(unsigned char *)(a1 + 40) = v3 | 0x40;
  *(_DWORD *)(a1 + 36) = v4;
  return *(float *)&v4;
}

uint64_t sub_227B8A29C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "ch0");
    char v5 = *(unsigned char *)(a1 + 40);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(a1 + 40) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "ch1");
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(this, "ch2");
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  PB::TextFormatter::format(this, "ch3");
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 0x20) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "ch4");
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 1) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_17:
  PB::TextFormatter::format(this, "lux", *(float *)(a1 + 36));
  if (*(unsigned char *)(a1 + 40)) {
LABEL_8:
  }
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
LABEL_9:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B8A3C0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 40) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              unint64_t v2 = *((void *)this + 1) + 8;
              goto LABEL_101;
            case 2u:
              *(unsigned char *)(a1 + 40) |= 2u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v51 = 0;
                unsigned int v52 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_106;
                  }
                  unint64_t v53 = v21++;
                  char v54 = *(unsigned char *)(v22 + v53);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v54 & 0x7F) << v51;
                  if ((v54 & 0x80) == 0) {
                    break;
                  }
                  v51 += 7;
                  BOOL v14 = v52++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_105:
                    unint64_t v2 = v53 + 1;
                    goto LABEL_106;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_105;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_106;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_106:
              *(_DWORD *)(a1 + 16) = v25;
              goto LABEL_127;
            case 3u:
              *(unsigned char *)(a1 + 40) |= 4u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v55 = 0;
                unsigned int v56 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_111;
                  }
                  unint64_t v57 = v27++;
                  char v58 = *(unsigned char *)(v28 + v57);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v58 & 0x7F) << v55;
                  if ((v58 & 0x80) == 0) {
                    break;
                  }
                  v55 += 7;
                  BOOL v14 = v56++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_110:
                    unint64_t v2 = v57 + 1;
                    goto LABEL_111;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_110;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_111;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_111:
              *(_DWORD *)(a1 + 20) = v31;
              goto LABEL_127;
            case 4u:
              *(unsigned char *)(a1 + 40) |= 8u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v59 = 0;
                unsigned int v60 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_116;
                  }
                  unint64_t v61 = v33++;
                  char v62 = *(unsigned char *)(v34 + v61);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v62 & 0x7F) << v59;
                  if ((v62 & 0x80) == 0) {
                    break;
                  }
                  v59 += 7;
                  BOOL v14 = v60++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_115:
                    unint64_t v2 = v61 + 1;
                    goto LABEL_116;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_115;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_116;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_116:
              *(_DWORD *)(a1 + 24) = v37;
              goto LABEL_127;
            case 5u:
              *(unsigned char *)(a1 + 40) |= 0x10u;
              unint64_t v39 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v40 = *(void *)this;
              if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
              {
                char v63 = 0;
                unsigned int v64 = 0;
                uint64_t v43 = 0;
                if (v2 <= v39) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v39)
                  {
                    LODWORD(v43) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_121;
                  }
                  unint64_t v65 = v39++;
                  char v66 = *(unsigned char *)(v40 + v65);
                  *((void *)this + 1) = v39;
                  v43 |= (unint64_t)(v66 & 0x7F) << v63;
                  if ((v66 & 0x80) == 0) {
                    break;
                  }
                  v63 += 7;
                  BOOL v14 = v64++ > 8;
                  if (v14)
                  {
                    LODWORD(v43) = 0;
LABEL_120:
                    unint64_t v2 = v65 + 1;
                    goto LABEL_121;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v43) = 0;
                }
                goto LABEL_120;
              }
              char v41 = 0;
              unsigned int v42 = 0;
              uint64_t v43 = 0;
              do
              {
                unint64_t v2 = v39 + 1;
                *((void *)this + 1) = v39 + 1;
                char v44 = *(unsigned char *)(v40 + v39);
                v43 |= (unint64_t)(v44 & 0x7F) << v41;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_121;
                }
                v41 += 7;
                unint64_t v39 = v2;
                BOOL v14 = v42++ > 8;
              }
              while (!v14);
              LODWORD(v43) = 0;
LABEL_121:
              *(_DWORD *)(a1 + 28) = v43;
              goto LABEL_127;
            case 6u:
              *(unsigned char *)(a1 + 40) |= 0x20u;
              unint64_t v45 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v46 = *(void *)this;
              if (v45 > 0xFFFFFFFFFFFFFFF5 || v45 + 10 > v2)
              {
                char v67 = 0;
                unsigned int v68 = 0;
                uint64_t v49 = 0;
                if (v2 <= v45) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v45)
                  {
                    LODWORD(v49) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_126;
                  }
                  unint64_t v69 = v45++;
                  char v70 = *(unsigned char *)(v46 + v69);
                  *((void *)this + 1) = v45;
                  v49 |= (unint64_t)(v70 & 0x7F) << v67;
                  if ((v70 & 0x80) == 0) {
                    break;
                  }
                  v67 += 7;
                  BOOL v14 = v68++ > 8;
                  if (v14)
                  {
                    LODWORD(v49) = 0;
LABEL_125:
                    unint64_t v2 = v69 + 1;
                    goto LABEL_126;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v49) = 0;
                }
                goto LABEL_125;
              }
              char v47 = 0;
              unsigned int v48 = 0;
              uint64_t v49 = 0;
              do
              {
                unint64_t v2 = v45 + 1;
                *((void *)this + 1) = v45 + 1;
                char v50 = *(unsigned char *)(v46 + v45);
                v49 |= (unint64_t)(v50 & 0x7F) << v47;
                if ((v50 & 0x80) == 0) {
                  goto LABEL_126;
                }
                v47 += 7;
                unint64_t v45 = v2;
                BOOL v14 = v48++ > 8;
              }
              while (!v14);
              LODWORD(v49) = 0;
LABEL_126:
              *(_DWORD *)(a1 + 32) = v49;
LABEL_127:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 7u:
              *(unsigned char *)(a1 + 40) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
                unint64_t v2 = *((void *)this + 1) + 4;
LABEL_101:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_64:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_127;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_127;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B8AA78(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 40);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 40);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(result + 40) & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_14:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(unsigned char *)(v3 + 40) & 0x40) == 0) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_13:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 0x20) != 0) {
    goto LABEL_14;
  }
LABEL_7:
  if ((v4 & 0x40) == 0) {
    return result;
  }
LABEL_15:
  float v5 = *(float *)(v3 + 36);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227B8AB74(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC21340;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void sub_227B8AB9C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227B8ABD4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC21340;
  *(_DWORD *)(a1 + 40) = 0;
  char v2 = *(unsigned char *)(a2 + 40);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 40) = 1;
    *(void *)(a1 + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 40);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 40) & 8) != 0)
  {
LABEL_5:
    LODWORD(v4) = *(_DWORD *)(a2 + 32);
    v3 |= 8u;
    *(unsigned char *)(a1 + 40) = v3;
    *(_DWORD *)(a1 + 32) = v4;
    char v2 = *(unsigned char *)(a2 + 40);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(a1 + 40) = v3;
    *(void *)(a1 + 16) = v4;
    char v2 = *(unsigned char *)(a2 + 40);
    if ((v2 & 4) == 0)
    {
LABEL_8:
      if ((v2 & 0x10) == 0) {
        return *(float *)&v4;
      }
      goto LABEL_12;
    }
  }
  else if ((v2 & 4) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v4 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(unsigned char *)(a1 + 40) = v3;
  *(void *)(a1 + 24) = v4;
  if ((*(unsigned char *)(a2 + 40) & 0x10) == 0) {
    return *(float *)&v4;
  }
LABEL_12:
  LODWORD(v4) = *(_DWORD *)(a2 + 36);
  *(unsigned char *)(a1 + 40) = v3 | 0x10;
  *(_DWORD *)(a1 + 36) = v4;
  return *(float *)&v4;
}

uint64_t sub_227B8AC8C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 8) != 0)
  {
    PB::TextFormatter::format(this, "gravityBufferDeltaToCurrentMax", *(float *)(a1 + 32));
    char v5 = *(unsigned char *)(a1 + 40);
    if ((v5 & 0x10) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 40) & 0x10) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "gravityFilterDeltaToHeadUp", *(float *)(a1 + 36));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 1) == 0)
  {
LABEL_4:
    if ((v5 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 2) == 0)
  {
LABEL_5:
    if ((v5 & 4) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(this, "timestampGravityBufferFront", *(double *)(a1 + 16));
  if ((*(unsigned char *)(a1 + 40) & 4) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "timestampTimerRef", *(double *)(a1 + 24));
LABEL_7:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B8AD70(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 40) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_39;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          goto LABEL_36;
        case 2u:
          *(unsigned char *)(a1 + 40) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_39;
          }
          *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_41;
        case 3u:
          *(unsigned char *)(a1 + 40) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_39;
          }
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
          goto LABEL_36;
        case 4u:
          *(unsigned char *)(a1 + 40) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_39;
          }
          *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
LABEL_36:
          unint64_t v2 = *((void *)this + 1) + 8;
          goto LABEL_42;
        case 5u:
          *(unsigned char *)(a1 + 40) |= 0x10u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
LABEL_41:
            unint64_t v2 = *((void *)this + 1) + 4;
LABEL_42:
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_39:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B8B02C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 40);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 40) & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 2) == 0)
  {
LABEL_4:
    if ((v4 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24));
    if ((*(unsigned char *)(v3 + 40) & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 4) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 0x10) == 0) {
    return result;
  }
LABEL_11:
  float v5 = *(float *)(v3 + 36);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227B8B0F0(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC21378;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

void sub_227B8B118(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227B8B150(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC21378;
  *(_DWORD *)(a1 + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 28);
  if (v2)
  {
    double result = *(double *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 28) = 1;
    *(double *)(a1 + 8) = result;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 28) & 4) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 24);
    v3 |= 4u;
    *(unsigned char *)(a1 + 28) = v3;
    *(_DWORD *)(a1 + 24) = v5;
    char v2 = *(unsigned char *)(a2 + 28);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    double result = *(double *)(a2 + 16);
    *(unsigned char *)(a1 + 28) = v3 | 2;
    *(double *)(a1 + 16) = result;
  }
  return result;
}

uint64_t sub_227B8B1D0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "status");
    char v5 = *(unsigned char *)(a1 + 28);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((*(unsigned char *)(a1 + 28) & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  if ((*(unsigned char *)(a1 + 28) & 2) != 0) {
LABEL_4:
  }
    PB::TextFormatter::format(this, "timestampArrival", *(double *)(a1 + 16));
LABEL_5:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B8B274(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  for (int i = *((unsigned __int8 *)this + 24); v2 < v3 && i == 0; int i = *((unsigned __int8 *)this + 24))
  {
    uint64_t v8 = *(void *)this;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      while (v3 != v2)
      {
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)this + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_20;
        }
        v15 += 7;
        unint64_t v2 = v17;
        if (v16++ >= 9)
        {
LABEL_19:
          unint64_t v11 = 0;
          goto LABEL_20;
        }
      }
      int i = 1;
      *((unsigned char *)this + 24) = 1;
      return i == 0;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)this + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_20:
    if ((v11 & 7) == 4)
    {
      int i = 0;
      return i == 0;
    }
    unint64_t v20 = v11 >> 3;
    if ((v11 >> 3) == 3)
    {
      *(unsigned char *)(a1 + 28) |= 2u;
      unint64_t v2 = *((void *)this + 1);
      if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
      {
        *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
        goto LABEL_47;
      }
    }
    else
    {
      if (v20 == 2)
      {
        *(unsigned char *)(a1 + 28) |= 4u;
        unint64_t v21 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v22 = *(void *)this;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v25 = 0;
          if (v2 <= v21) {
            unint64_t v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v21)
            {
              LODWORD(v25) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_52;
            }
            unint64_t v30 = v21++;
            char v31 = *(unsigned char *)(v22 + v30);
            *((void *)this + 1) = v21;
            v25 |= (unint64_t)(v31 & 0x7F) << v28;
            if ((v31 & 0x80) == 0) {
              break;
            }
            v28 += 7;
            BOOL v14 = v29++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              goto LABEL_51;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v25) = 0;
          }
LABEL_51:
          unint64_t v2 = v30 + 1;
        }
        else
        {
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          while (1)
          {
            unint64_t v2 = v21 + 1;
            *((void *)this + 1) = v21 + 1;
            char v26 = *(unsigned char *)(v22 + v21);
            v25 |= (unint64_t)(v26 & 0x7F) << v23;
            if ((v26 & 0x80) == 0) {
              break;
            }
            v23 += 7;
            unint64_t v21 = v2;
            BOOL v14 = v24++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              break;
            }
          }
        }
LABEL_52:
        *(_DWORD *)(a1 + 24) = v25;
        goto LABEL_53;
      }
      if (v20 != 1)
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
        goto LABEL_53;
      }
      *(unsigned char *)(a1 + 28) |= 1u;
      unint64_t v2 = *((void *)this + 1);
      if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
      {
        *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
LABEL_47:
        unint64_t v2 = *((void *)this + 1) + 8;
        *((void *)this + 1) = v2;
        goto LABEL_53;
      }
    }
    *((unsigned char *)this + 24) = 1;
LABEL_53:
    unint64_t v3 = *((void *)this + 2);
  }
  return i == 0;
}

uint64_t sub_227B8B544(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if ((v4 & 1) == 0)
  {
    if ((*(unsigned char *)(result + 28) & 4) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(unsigned char *)(v3 + 28) & 2) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 4) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_7:
  double v5 = *(double *)(v3 + 16);

  return PB::Writer::write(this, v5);
}

void sub_227B8B5D0(void ***a1)
{
  unint64_t v2 = *a1;
  if (*v2)
  {
    sub_227B8B624(v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void *sub_227B8B624(void *result)
{
  v1 = result;
  unint64_t v2 = (void *)*result;
  uint64_t v3 = (void *)result[1];
  while (v3 != v2)
  {
    char v4 = (void *)*--v3;
    uint64_t result = v4;
    *uint64_t v3 = 0;
    if (v4) {
      uint64_t result = (void *)(*(uint64_t (**)(void *))(*result + 8))(result);
    }
  }
  v1[1] = v2;
  return result;
}

void sub_227B8B690(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    if (*(char *)(a2 + 23) < 0) {
      operator delete(*(void **)a2);
    }
    JUMPOUT(0x22A6850E0);
  }
}

void ***sub_227B8B6EC(void ***result, void **a2)
{
  unint64_t v2 = *result;
  *uint64_t result = a2;
  if (v2)
  {
    free(*v2);
    JUMPOUT(0x22A6850E0);
  }
  return result;
}

char *sub_227B8B74C(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  int v7 = result;
  uint64_t v8 = *((void *)result + 2);
  char v9 = *(char **)result;
  if (a4 > (v8 - *(void *)result) >> 3)
  {
    if (v9)
    {
      *((void *)result + 1) = v9;
      operator delete(v9);
      uint64_t v8 = 0;
      *int v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 >> 61) {
      sub_227B8B89C();
    }
    uint64_t v10 = v8 >> 2;
    if (v8 >> 2 <= a4) {
      uint64_t v10 = a4;
    }
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v11 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v10;
    }
    uint64_t result = sub_227B8B858(v7, v11);
    char v13 = (char *)v7[1];
    unint64_t v12 = (void **)(v7 + 1);
    char v9 = v13;
LABEL_16:
    size_t v17 = a3 - (void)__src;
    if (v17)
    {
      char v18 = v9;
      char v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  unint64_t v12 = (void **)(result + 8);
  BOOL v14 = (unsigned char *)*((void *)result + 1);
  unint64_t v15 = (v14 - v9) >> 3;
  if (v15 >= a4) {
    goto LABEL_16;
  }
  unsigned int v16 = &__src[8 * v15];
  if (v14 != v9)
  {
    uint64_t result = (char *)memmove(*(void **)result, __src, v14 - v9);
    char v9 = (char *)*v12;
  }
  size_t v17 = a3 - (void)v16;
  if (v17)
  {
    char v18 = v9;
    char v19 = v16;
LABEL_18:
    uint64_t result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  *unint64_t v12 = &v9[v17];
  return result;
}

char *sub_227B8B858(void *a1, unint64_t a2)
{
  if (a2 >> 61) {
    sub_227B8B89C();
  }
  uint64_t result = (char *)sub_227B8B8B4((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[8 * v4];
  return result;
}

void sub_227B8B89C()
{
}

void *sub_227B8B8B4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61) {
    sub_227B8B97C();
  }
  return operator new(8 * a2);
}

void sub_227B8B8EC(const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_227B8B948(exception, a1);
  __cxa_throw(exception, (struct type_info *)off_264830290, MEMORY[0x263F8C060]);
}

void sub_227B8B934(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_227B8B948(std::logic_error *a1, const char *a2)
{
  uint64_t result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C388] + 16);
  return result;
}

void sub_227B8B97C()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x263F8C208], MEMORY[0x263F8C090]);
}

void *sub_227B8B9B0(unsigned char *__dst, void *__src, unint64_t a3)
{
  double v5 = __dst;
  if (a3 > 0x16)
  {
    if (a3 >= 0x7FFFFFFFFFFFFFF8) {
      sub_227B8BA50();
    }
    uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a3 | 7) != 0x17) {
      uint64_t v6 = a3 | 7;
    }
    uint64_t v7 = v6 + 1;
    uint64_t v8 = operator new(v6 + 1);
    v5[1] = a3;
    v5[2] = v7 | 0x8000000000000000;
    *double v5 = v8;
    double v5 = v8;
  }
  else
  {
    __dst[23] = a3;
  }

  return memmove(v5, __src, a3 + 1);
}

void sub_227B8BA50()
{
}

char *sub_227B8BA68(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  uint64_t v7 = result;
  uint64_t v8 = *((void *)result + 2);
  char v9 = *(char **)result;
  if (a4 > (v8 - *(void *)result) >> 2)
  {
    if (v9)
    {
      *((void *)result + 1) = v9;
      operator delete(v9);
      uint64_t v8 = 0;
      *uint64_t v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 >> 62) {
      sub_227B8B89C();
    }
    uint64_t v10 = v8 >> 1;
    if (v8 >> 1 <= a4) {
      uint64_t v10 = a4;
    }
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v11 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v10;
    }
    uint64_t result = sub_227B8BB74(v7, v11);
    char v13 = (char *)v7[1];
    unint64_t v12 = (void **)(v7 + 1);
    char v9 = v13;
LABEL_16:
    size_t v17 = a3 - (void)__src;
    if (v17)
    {
      char v18 = v9;
      char v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  unint64_t v12 = (void **)(result + 8);
  BOOL v14 = (unsigned char *)*((void *)result + 1);
  unint64_t v15 = (v14 - v9) >> 2;
  if (v15 >= a4) {
    goto LABEL_16;
  }
  unsigned int v16 = &__src[4 * v15];
  if (v14 != v9)
  {
    uint64_t result = (char *)memmove(*(void **)result, __src, v14 - v9);
    char v9 = (char *)*v12;
  }
  size_t v17 = a3 - (void)v16;
  if (v17)
  {
    char v18 = v9;
    char v19 = v16;
LABEL_18:
    uint64_t result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  *unint64_t v12 = &v9[v17];
  return result;
}

char *sub_227B8BB74(void *a1, unint64_t a2)
{
  if (a2 >> 62) {
    sub_227B8B89C();
  }
  uint64_t result = (char *)sub_227B8BBB8((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[4 * v4];
  return result;
}

void *sub_227B8BBB8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    sub_227B8B97C();
  }
  return operator new(4 * a2);
}

uint64_t sub_227B8BBF0(uint64_t *a1, void *a2)
{
  uint64_t result = sub_227B8BC68((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_227B8BC68(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v8 = (void *)(a7 - 8);
    char v9 = (void *)(a7 - 8);
    do
    {
      uint64_t v10 = *--a3;
      *a3 = 0;
      *v9-- = v10;
      *((void *)&v16 + 1) = v8;
      v7 -= 8;
      uint64_t v8 = v9;
    }
    while (a3 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  sub_227B8BD00((uint64_t)v13);
  return v11;
}

uint64_t sub_227B8BD00(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_227B8BD38((void *)a1);
  }
  return a1;
}

void *sub_227B8BD38(void *result)
{
  v1 = *(void ***)(result[2] + 8);
  unint64_t v2 = *(void ***)(result[1] + 8);
  while (v1 != v2)
  {
    uint64_t result = *v1;
    std::bad_array_new_length *v1 = 0;
    if (result) {
      uint64_t result = (void *)(*(uint64_t (**)(void *))(*result + 8))(result);
    }
    ++v1;
  }
  return result;
}

void **sub_227B8BDA0(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void *sub_227B8BDD8(void *result, uint64_t a2)
{
  uint64_t v2 = result[2];
  if (v2 != a2)
  {
    uint64_t v4 = result;
    do
    {
      v4[2] = v2 - 8;
      uint64_t result = *(void **)(v2 - 8);
      *(void *)(v2 - 8) = 0;
      if (result) {
        uint64_t result = (void *)(*(uint64_t (**)(void *))(*result + 8))(result);
      }
      uint64_t v2 = v4[2];
    }
    while (v2 != a2);
  }
  return result;
}

uint64_t sub_227B8BE4C(uint64_t *a1, void *a2)
{
  uint64_t result = sub_227B8BEC4((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_227B8BEC4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v8 = (void *)(a7 - 8);
    char v9 = (void *)(a7 - 8);
    do
    {
      uint64_t v10 = *--a3;
      *a3 = 0;
      *v9-- = v10;
      *((void *)&v16 + 1) = v8;
      v7 -= 8;
      uint64_t v8 = v9;
    }
    while (a3 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  sub_227B8BF5C((uint64_t)v13);
  return v11;
}

uint64_t sub_227B8BF5C(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_227B8BD38((void *)a1);
  }
  return a1;
}

uint64_t sub_227B8BF94(uint64_t *a1, void *a2)
{
  uint64_t result = sub_227B8C00C((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_227B8C00C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v8 = (void *)(a7 - 8);
    char v9 = (void *)(a7 - 8);
    do
    {
      uint64_t v10 = *--a3;
      *a3 = 0;
      *v9-- = v10;
      *((void *)&v16 + 1) = v8;
      v7 -= 8;
      uint64_t v8 = v9;
    }
    while (a3 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  sub_227B8C0A4((uint64_t)v13);
  return v11;
}

uint64_t sub_227B8C0A4(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_227B8BD38((void *)a1);
  }
  return a1;
}

uint64_t sub_227B8C0DC(uint64_t *a1, void *a2)
{
  uint64_t result = sub_227B8C154((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_227B8C154(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v8 = (void *)(a7 - 8);
    char v9 = (void *)(a7 - 8);
    do
    {
      uint64_t v10 = *--a3;
      *a3 = 0;
      *v9-- = v10;
      *((void *)&v16 + 1) = v8;
      v7 -= 8;
      uint64_t v8 = v9;
    }
    while (a3 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  sub_227B8C1EC((uint64_t)v13);
  return v11;
}

uint64_t sub_227B8C1EC(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_227B8BD38((void *)a1);
  }
  return a1;
}

uint64_t sub_227B8C224(uint64_t *a1, void *a2)
{
  uint64_t result = sub_227B8C29C((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_227B8C29C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v8 = (void *)(a7 - 8);
    char v9 = (void *)(a7 - 8);
    do
    {
      uint64_t v10 = *--a3;
      *a3 = 0;
      *v9-- = v10;
      *((void *)&v16 + 1) = v8;
      v7 -= 8;
      uint64_t v8 = v9;
    }
    while (a3 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  sub_227B8C334((uint64_t)v13);
  return v11;
}

uint64_t sub_227B8C334(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_227B8BD38((void *)a1);
  }
  return a1;
}

id sub_227B8C36C()
{
  v3[9] = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2681B9B48, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2681B9B48))
  {
    v3[0] = @"LoggingEnabled";
    v3[1] = @"FilePrefix";
    v3[2] = @"FileBasePath";
    v3[3] = @"FileSize";
    v3[4] = @"FileTimeInterval";
    v3[5] = @"FilesToKeep";
    v3[6] = @"FileExtension";
    v3[7] = @"ProtectionClass";
    v3[8] = @"FlushTimeout";
    qword_2681B9B40 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x263EFF8C0], v2, (uint64_t)v3, 9);
    __cxa_guard_release(&qword_2681B9B48);
  }
  v0 = (void *)qword_2681B9B40;

  return v0;
}

void sub_227B8C47C(_Unwind_Exception *a1)
{
}

id sub_227B8C494()
{
  if (qword_2681B9B50 != -1) {
    dispatch_once(&qword_2681B9B50, &unk_26DC21EB0);
  }
  v0 = (void *)qword_2681BAFC8;

  return v0;
}

void sub_227B8C4E8()
{
  dispatch_queue_t v0 = dispatch_queue_create("com.apple.Msl.DefaultsQueue", 0);
  v1 = (void *)qword_2681BAFC8;
  qword_2681BAFC8 = (uint64_t)v0;
}

void sub_227B8C528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void **)(a1 + 16);
  if (*(char *)(a2 + 63) >= 0) {
    objc_msgSend_stringWithUTF8String_(NSString, (const char *)a2, a2 + 40, a4);
  }
  else {
    objc_msgSend_stringWithUTF8String_(NSString, (const char *)a2, *(void *)(a2 + 40), a4);
  }
  id v36 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setValue_forKey_(v6, v7, (uint64_t)v36, @"FilePrefix");

  uint64_t v10 = *(void **)(a1 + 16);
  if (*(char *)(a2 + 39) >= 0) {
    objc_msgSend_stringWithUTF8String_(NSString, v8, a2 + 16, v9);
  }
  else {
    objc_msgSend_stringWithUTF8String_(NSString, v8, *(void *)(a2 + 16), v9);
  }
  id v37 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setValue_forKey_(v10, v11, (uint64_t)v37, @"FileBasePath");

  unint64_t v12 = *(void **)(a1 + 16);
  objc_msgSend_numberWithLongLong_(NSNumber, v13, *(void *)a2, v14);
  id v38 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setValue_forKey_(v12, v15, (uint64_t)v38, @"FileSize");

  long long v16 = *(void **)(a1 + 16);
  objc_msgSend_numberWithUnsignedInt_(NSNumber, v17, *(unsigned int *)(a2 + 8), v18);
  id v39 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setValue_forKey_(v16, v19, (uint64_t)v39, @"FileTimeInterval");

  unint64_t v20 = *(void **)(a1 + 16);
  objc_msgSend_numberWithUnsignedInt_(NSNumber, v21, *(unsigned int *)(a2 + 12), v22);
  id v40 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setValue_forKey_(v20, v23, (uint64_t)v40, @"FilesToKeep");

  char v26 = *(void **)(a1 + 16);
  if (*(char *)(a2 + 87) >= 0) {
    objc_msgSend_stringWithUTF8String_(NSString, v24, a2 + 64, v25);
  }
  else {
    objc_msgSend_stringWithUTF8String_(NSString, v24, *(void *)(a2 + 64), v25);
  }
  id v41 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setValue_forKey_(v26, v27, (uint64_t)v41, @"FileExtension");

  char v28 = *(void **)(a1 + 16);
  objc_msgSend_numberWithUnsignedInt_(NSNumber, v29, *(unsigned int *)(a2 + 88), v30);
  id v42 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setValue_forKey_(v28, v31, (uint64_t)v42, @"ProtectionClass");

  char v32 = *(void **)(a1 + 16);
  objc_msgSend_numberWithLongLong_(NSNumber, v33, *(void *)(a2 + 96), v34);
  id v43 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setValue_forKey_(v32, v35, (uint64_t)v43, @"FlushTimeout");
}

void sub_227B8C748(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_227B8C778(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 1048576000;
  *(void *)(a2 + 8) = 0x3200015180;
  sub_227B8D46C((void *)(a2 + 16), "/tmp/");
  sub_227B8D46C((void *)(a2 + 40), (char *)&unk_227CB7C2E);
  sub_227B8D46C((void *)(a2 + 64), "msl");
  *(_DWORD *)(a2 + 88) = 2;
  *(void *)(a2 + 96) = 300;
  objc_msgSend_allKeys(*(void **)(a1 + 16), v4, v5, v6);
  id v60 = (id)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend_containsObject_(v60, v7, @"FilePrefix", v8))
  {
    objc_msgSend_valueForKey_(*(void **)(a1 + 16), v9, @"FilePrefix", v10);
    id v11 = objc_claimAutoreleasedReturnValue();
    uint64_t v15 = objc_msgSend_UTF8String(v11, v12, v13, v14);
    MEMORY[0x22A684F00](a2 + 40, v15);
  }
  if (objc_msgSend_containsObject_(v60, v9, @"FileBasePath", v10))
  {
    objc_msgSend_valueForKey_(*(void **)(a1 + 16), v16, @"FileBasePath", v17);
    id v18 = objc_claimAutoreleasedReturnValue();
    uint64_t v22 = objc_msgSend_UTF8String(v18, v19, v20, v21);
    MEMORY[0x22A684F00](a2 + 16, v22);
  }
  if (objc_msgSend_containsObject_(v60, v16, @"FileExtension", v17))
  {
    objc_msgSend_valueForKey_(*(void **)(a1 + 16), v23, @"FileExtension", v24);
    id v25 = objc_claimAutoreleasedReturnValue();
    uint64_t v29 = objc_msgSend_UTF8String(v25, v26, v27, v28);
    MEMORY[0x22A684F00](a2 + 64, v29);
  }
  if (objc_msgSend_containsObject_(v60, v23, @"FileTimeInterval", v24))
  {
    char v32 = objc_msgSend_valueForKey_(*(void **)(a1 + 16), v30, @"FileTimeInterval", v31);
    *(_DWORD *)(a2 + 8) = objc_msgSend_unsignedIntValue(v32, v33, v34, v35);
  }
  if (objc_msgSend_containsObject_(v60, v30, @"FilesToKeep", v31))
  {
    id v38 = objc_msgSend_valueForKey_(*(void **)(a1 + 16), v36, @"FilesToKeep", v37);
    *(_DWORD *)(a2 + 12) = objc_msgSend_unsignedIntValue(v38, v39, v40, v41);
  }
  if (objc_msgSend_containsObject_(v60, v36, @"FileSize", v37))
  {
    char v44 = objc_msgSend_valueForKey_(*(void **)(a1 + 16), v42, @"FileSize", v43);
    *(void *)a2 = objc_msgSend_unsignedIntValue(v44, v45, v46, v47);
  }
  if (objc_msgSend_containsObject_(v60, v42, @"ProtectionClass", v43))
  {
    char v50 = objc_msgSend_valueForKey_(*(void **)(a1 + 16), v48, @"ProtectionClass", v49);
    *(_DWORD *)(a2 + 88) = objc_msgSend_unsignedIntValue(v50, v51, v52, v53);
  }
  if (objc_msgSend_containsObject_(v60, v48, @"FlushTimeout", v49))
  {
    unsigned int v56 = objc_msgSend_valueForKey_(*(void **)(a1 + 16), v54, @"FlushTimeout", v55);
    *(void *)(a2 + 96) = objc_msgSend_longLongValue(v56, v57, v58, v59);
  }
}

void sub_227B8CA1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  sub_227B8CAB0(v10);
  _Unwind_Resume(a1);
}

uint64_t sub_227B8CAB0(uint64_t a1)
{
  if (*(char *)(a1 + 87) < 0) {
    operator delete(*(void **)(a1 + 64));
  }
  if (*(char *)(a1 + 63) < 0) {
    operator delete(*(void **)(a1 + 40));
  }
  if (*(char *)(a1 + 39) < 0) {
    operator delete(*(void **)(a1 + 16));
  }
  return a1;
}

void sub_227B8CB04(uint64_t a1)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  uint64_t v2 = sub_227B8C36C();
  uint64_t v6 = objc_msgSend_countByEnumeratingWithState_objects_count_(v2, v3, (uint64_t)&v21, (uint64_t)v25, 16);
  if (v6)
  {
    uint64_t v7 = *(void *)v22;
    do
    {
      for (uint64_t i = 0; i != v6; ++i)
      {
        if (*(void *)v22 != v7) {
          objc_enumerationMutation(v2);
        }
        uint64_t v9 = *(void *)(*((void *)&v21 + 1) + 8 * i);
        uint64_t v10 = objc_msgSend_objectForKey_(*(void **)(a1 + 32), v4, v9, v5, (void)v21);
        uint64_t v13 = objc_msgSend_objectForKey_(*(void **)(a1 + 32), v11, v9, v12);
        BOOL v14 = v13 == 0;

        if (!v14)
        {
          id v18 = objc_msgSend_copy(v10, v15, v16, v17);
          objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 16), v19, (uint64_t)v18, v9);
        }
      }
      uint64_t v6 = objc_msgSend_countByEnumeratingWithState_objects_count_(v2, v4, (uint64_t)&v21, (uint64_t)v25, 16);
    }
    while (v6);
  }

  if (qword_2681B9B60 != -1) {
    dispatch_once(&qword_2681B9B60, &unk_26DC21ED0);
  }
  uint64_t v20 = qword_2681B9B58;
  if (os_log_type_enabled((os_log_t)qword_2681B9B58, OS_LOG_TYPE_DEBUG)) {
    sub_227CAB3B8(a1, v20);
  }
}

void sub_227B8CCA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_227B8CCE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = objc_msgSend_dictionary(MEMORY[0x263EFF9A0], (const char *)a2, a3, a4);
  if (*(char *)(a2 + 23) >= 0) {
    objc_msgSend_stringWithUTF8String_(NSString, v7, a2, v8);
  }
  else {
  *(void *)(a1 + 24) = objc_msgSend_stringWithUTF8String_(NSString, v7, *(void *)a2, v8);
  }
  id v9 = objc_alloc(MEMORY[0x263EFFA40]);
  *(void *)(a1 + 32) = objc_msgSend_initWithSuiteName_(v9, v10, *(void *)(a1 + 24), v11);
  *(void *)(a1 + 40) = objc_opt_new();
  if (!*(void *)(a1 + 32))
  {
    if (qword_2681B9B60 != -1) {
      dispatch_once(&qword_2681B9B60, &unk_26DC21ED0);
    }
    BOOL v14 = qword_2681B9B58;
    if (os_log_type_enabled((os_log_t)qword_2681B9B58, OS_LOG_TYPE_FAULT)) {
      sub_227CAB434((uint64_t *)(a1 + 24), v14);
    }
  }
  sub_227B8C528(a1, a4, v12, v13);
  sub_227B8CB04(a1);
  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  uint64_t v15 = sub_227B8C36C();
  uint64_t v18 = objc_msgSend_countByEnumeratingWithState_objects_count_(v15, v16, (uint64_t)&v22, (uint64_t)v26, 16);
  if (v18)
  {
    uint64_t v19 = *(void *)v23;
    do
    {
      for (uint64_t i = 0; i != v18; ++i)
      {
        if (*(void *)v23 != v19) {
          objc_enumerationMutation(v15);
        }
        objc_msgSend_addObserver_forKeyPath_options_context_(*(void **)(a1 + 32), v17, *(void *)(a1 + 40), *(void *)(*((void *)&v22 + 1) + 8 * i), 1, a1, (void)v22);
      }
      uint64_t v18 = objc_msgSend_countByEnumeratingWithState_objects_count_(v15, v17, (uint64_t)&v22, (uint64_t)v26, 16);
    }
    while (v18);
  }

  return a1;
}

void sub_227B8CEC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_227B8CF30(uint64_t a1)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  uint64_t v2 = sub_227B8C36C();
  uint64_t v5 = objc_msgSend_countByEnumeratingWithState_objects_count_(v2, v3, (uint64_t)&v9, (uint64_t)v13, 16);
  if (v5)
  {
    uint64_t v6 = *(void *)v10;
    do
    {
      uint64_t v7 = 0;
      do
      {
        if (*(void *)v10 != v6) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend_removeObserver_forKeyPath_context_(*(void **)(a1 + 32), v4, *(void *)(a1 + 40), *(void *)(*((void *)&v9 + 1) + 8 * v7++), a1, (void)v9);
      }
      while (v5 != v7);
      uint64_t v5 = objc_msgSend_countByEnumeratingWithState_objects_count_(v2, v4, (uint64_t)&v9, (uint64_t)v13, 16);
    }
    while (v5);
  }

  return a1;
}

void sub_227B8D04C(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_227B1AEE0(a1);
  }
  _Unwind_Resume(a1);
}

void sub_227B8D06C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  long long v9 = objc_msgSend_copy(a3, v6, v7, v8);
  objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 16), v10, (uint64_t)v9, (uint64_t)v5);

  if (!*(unsigned char *)a1)
  {
    *(unsigned char *)a1 = 1;
    dispatch_time_t v11 = dispatch_time(0, 10000000000);
    long long v12 = sub_227B8C494();
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = sub_227B8D178;
    block[3] = &unk_264830308;
    block[4] = a1;
    dispatch_after(v11, v12, block);
  }
}

void sub_227B8D15C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_227B8D178(uint64_t a1)
{
}

void sub_227B8D238(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_227B8CAB0((uint64_t)va);
  MEMORY[0x22A6850E0](v3, 0x1032C4044EE41C5);
  std::mutex::unlock(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_227B8D27C(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_227BD2DF8();
    JUMPOUT(0x22A6850E0);
  }
  return result;
}

uint64_t sub_227B8D2CC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = objc_msgSend_objectForKey_(*(void **)(a1 + 16), a2, @"LoggingEnabled", a4);
  uint64_t v8 = objc_msgSend_BOOLValue(v4, v5, v6, v7);

  return v8;
}

void sub_227B8D310(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_227B8D444(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_227B8D46C(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_227B8BA50();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    uint64_t v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v4;
    uint64_t v6 = a1;
    if (!v4) {
      goto LABEL_9;
    }
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((unsigned char *)v6 + v5) = 0;
  return a1;
}

void sub_227B8D520()
{
  os_log_t v0 = os_log_create("com.apple.MotionSensorLogging", "MSL");
  v1 = (void *)qword_2681B9B58;
  qword_2681B9B58 = (uint64_t)v0;
}

void sub_227B8D564(uint64_t a1)
{
  uint64_t v1 = *MEMORY[0x263EF8340];
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 24) = 850045863;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_26DC21F00;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(void *)(a1 + 80) = 0;
  operator new();
}

void sub_227B8D7F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_227B8CAB0((uint64_t)va);
  std::mutex::~mutex(v5);
  sub_227B8D27C(v4, 0);
  sub_227B8DE78(v3, 0);
  _Unwind_Resume(a1);
}

void sub_227B8D858()
{
}

void sub_227B8D930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_227B8CAB0((uint64_t)&a9);
  MEMORY[0x22A6850E0](v9, 0x1032C4044EE41C5);
  _Unwind_Resume(a1);
}

uint64_t sub_227B8D95C(uint64_t a1)
{
  *(void *)a1 = &unk_26DC21F00;
  if (qword_2681B9B70 != -1) {
    dispatch_once(&qword_2681B9B70, &unk_26DC21F20);
  }
  uint64_t v2 = qword_2681B9B68;
  if (os_log_type_enabled((os_log_t)qword_2681B9B68, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)size_t v5 = 0;
    _os_log_impl(&dword_227B19000, v2, OS_LOG_TYPE_DEFAULT, "[MSLManager] Ending.", v5, 2u);
  }
  std::mutex::lock((std::mutex *)(a1 + 24));
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3) {
    sub_227BD3D70(v3);
  }
  std::mutex::unlock((std::mutex *)(a1 + 24));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  sub_227B8D27C((uint64_t *)(a1 + 16), 0);
  sub_227B8DE78((uint64_t *)(a1 + 8), 0);
  return a1;
}

void sub_227B8DA60(uint64_t a1)
{
  sub_227B8D95C(a1);

  JUMPOUT(0x22A6850E0);
}

void sub_227B8DA98(uint64_t a1, uint64_t a2)
{
  if (qword_2681B9B70 != -1) {
    dispatch_once(&qword_2681B9B70, &unk_26DC21F20);
  }
  size_t v4 = qword_2681B9B68;
  if (os_log_type_enabled((os_log_t)qword_2681B9B68, OS_LOG_TYPE_DEBUG)) {
    sub_227CAB4F4(v4);
  }
  if (*(void *)(a1 + 16))
  {
    if (sub_227B8D2CC(*(void *)(a1 + 8), v5, v6, v7))
    {
      std::mutex::lock((std::mutex *)(a1 + 24));
      sub_227BD3B74(*(void *)(a1 + 16), a2);
      std::mutex::unlock((std::mutex *)(a1 + 24));
    }
    else
    {
      if (qword_2681B9B70 != -1) {
        dispatch_once(&qword_2681B9B70, &unk_26DC21F20);
      }
      uint64_t v9 = qword_2681B9B68;
      if (os_log_type_enabled((os_log_t)qword_2681B9B68, OS_LOG_TYPE_DEBUG)) {
        sub_227CAB4B0(v9);
      }
    }
  }
  else
  {
    if (qword_2681B9B70 != -1) {
      dispatch_once(&qword_2681B9B70, &unk_26DC21F20);
    }
    uint64_t v8 = qword_2681B9B68;
    if (os_log_type_enabled((os_log_t)qword_2681B9B68, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_impl(&dword_227B19000, v8, OS_LOG_TYPE_DEFAULT, "[MSLManager] Logging Msl item failed due to an invalid logger pointer.", v10, 2u);
    }
  }
}

void sub_227B8DC00(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_227B8DC14(uint64_t a1)
{
  uint64_t v2 = (std::mutex *)(a1 + 24);
  std::mutex::lock((std::mutex *)(a1 + 24));
  sub_227BD3D70(*(void *)(a1 + 16));

  std::mutex::unlock(v2);
}

void sub_227B8DC5C(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void *sub_227B8DC70@<X0>(char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, char *a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v36 = *MEMORY[0x263EF8340];
  if (qword_2681B9B70 != -1) {
    dispatch_once(&qword_2681B9B70, &unk_26DC21F20);
  }
  uint64_t v18 = qword_2681B9B68;
  if (os_log_type_enabled((os_log_t)qword_2681B9B68, OS_LOG_TYPE_DEFAULT))
  {
    int v20 = 136316930;
    long long v21 = a1;
    __int16 v22 = 2080;
    long long v23 = a2;
    __int16 v24 = 2080;
    long long v25 = a6;
    __int16 v26 = 1024;
    int v27 = a7;
    __int16 v28 = 2048;
    uint64_t v29 = a3;
    __int16 v30 = 1024;
    int v31 = a4;
    __int16 v32 = 1024;
    int v33 = a5;
    __int16 v34 = 2048;
    uint64_t v35 = a8;
    _os_log_impl(&dword_227B19000, v18, OS_LOG_TYPE_DEFAULT, "[CMMsl] Creating config with, file prefix, %s, file path, %s, file extension, %s, protection class, %d, file size, %lld, file time interval, %u, files to keep, %u, flush timeout, %lld", (uint8_t *)&v20, 0x46u);
  }
  *(void *)a9 = a3;
  *(_DWORD *)(a9 + 8) = a4;
  *(_DWORD *)(a9 + 12) = a5;
  sub_227B8D46C((void *)(a9 + 16), a2);
  sub_227B8D46C((void *)(a9 + 40), a1);
  uint64_t result = sub_227B8D46C((void *)(a9 + 64), a6);
  *(_DWORD *)(a9 + 88) = a7;
  *(void *)(a9 + 96) = a8;
  return result;
}

void sub_227B8DDF8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 63) < 0) {
    operator delete(*v2);
  }
  if (*(char *)(v1 + 39) < 0) {
    operator delete(*v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_227B8DE34()
{
  os_log_t v0 = os_log_create("com.apple.MotionSensorLogging", "MSL");
  uint64_t v1 = (void *)qword_2681B9B68;
  qword_2681B9B68 = (uint64_t)v0;
}

uint64_t sub_227B8DE78(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_227B8D068();
    JUMPOUT(0x22A6850E0);
  }
  return result;
}

uint64_t sub_227B8DEC8(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC21F50;
  *(_DWORD *)(result + 12) = 0;
  return result;
}

void sub_227B8DEF0(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227B8DF28(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC21F50;
  *(_DWORD *)(a1 + 12) = 0;
  if (*(unsigned char *)(a2 + 12))
  {
    float result = *(float *)(a2 + 8);
    *(unsigned char *)(a1 + 12) = 1;
    *(float *)(a1 + 8) = result;
  }
  return result;
}

uint64_t sub_227B8DF64(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 12)) {
    PB::TextFormatter::format(this, "alsTrustedLux", *(float *)(a1 + 8));
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B8DFC4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 12) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
        {
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 4;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B8E160(uint64_t result, PB::Writer *this)
{
  if (*(unsigned char *)(result + 12)) {
    return PB::Writer::write(this, *(float *)(result + 8));
  }
  return result;
}

uint64_t sub_227B8E17C(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC21F88;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_227B8E1A4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227B8E1DC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC21F88;
  *(_DWORD *)(a1 + 20) = 0;
  if (*(unsigned char *)(a2 + 20))
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(unsigned char *)(a1 + 20) = 1;
    *(void *)(a1 + 8) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 20) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
LABEL_5:
    float result = *(float *)(a2 + 16);
    *(unsigned char *)(a1 + 20) = v2;
    *(float *)(a1 + 16) = result;
  }
  return result;
}

uint64_t sub_227B8E240(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "lux", *(float *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if (v5) {
    PB::TextFormatter::format(this, "timestamp");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B8E2BC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
        {
          *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 4;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v20 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v21 = *(void *)this;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v24 = 0;
          if (v2 <= v20) {
            unint64_t v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v20)
            {
              uint64_t v24 = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_47;
            }
            unint64_t v29 = v20++;
            char v30 = *(unsigned char *)(v21 + v29);
            *((void *)this + 1) = v20;
            v24 |= (unint64_t)(v30 & 0x7F) << v27;
            if ((v30 & 0x80) == 0) {
              break;
            }
            v27 += 7;
            BOOL v14 = v28++ > 8;
            if (v14)
            {
              uint64_t v24 = 0;
              goto LABEL_46;
            }
          }
          if (*((unsigned char *)this + 24)) {
            uint64_t v24 = 0;
          }
LABEL_46:
          unint64_t v2 = v29 + 1;
        }
        else
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          while (1)
          {
            unint64_t v2 = v20 + 1;
            *((void *)this + 1) = v20 + 1;
            char v25 = *(unsigned char *)(v21 + v20);
            v24 |= (unint64_t)(v25 & 0x7F) << v22;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v22 += 7;
            unint64_t v20 = v2;
            BOOL v14 = v23++ > 8;
            if (v14)
            {
              uint64_t v24 = 0;
              break;
            }
          }
        }
LABEL_47:
        *(void *)(a1 + 8) = v24;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B8E54C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    float v5 = *(float *)(v3 + 16);
    return PB::Writer::write(this, v5);
  }
  return result;
}

void *sub_227B8E5B8(void *result)
{
  *uint64_t result = &unk_26DC21FC0;
  return result;
}

void sub_227B8E5DC(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B8E614(int a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227B8E654(int a1, PB::Reader *this)
{
  while (1)
  {
    unint64_t v3 = *((void *)this + 1);
    unint64_t v4 = *((void *)this + 2);
    int v5 = *((unsigned __int8 *)this + 24);
    if (v3 >= v4 || v5 != 0) {
      return v5 == 0;
    }
    uint64_t v7 = *(void *)this;
    char v8 = 0;
    unsigned int v9 = 0;
    BOOL v10 = v3 > 0xFFFFFFFFFFFFFFF5 || v3 + 10 > v4;
    if (v10)
    {
      uint64_t v14 = 0;
      if (v3 > v4) {
        unint64_t v4 = *((void *)this + 1);
      }
      while (v4 != v3)
      {
        unint64_t v11 = v3 + 1;
        char v12 = *(unsigned char *)(v7 + v3);
        *((void *)this + 1) = v11;
        v14 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          goto LABEL_22;
        }
        v8 += 7;
        unint64_t v3 = v11;
        if (v9++ >= 9)
        {
LABEL_21:
          LOBYTE(v14) = 0;
          goto LABEL_22;
        }
      }
      int v5 = 1;
      *((unsigned char *)this + 24) = 1;
      return v5 == 0;
    }
    uint64_t v14 = 0;
    while (1)
    {
      unint64_t v15 = v3 + 1;
      *((void *)this + 1) = v3 + 1;
      char v16 = *(unsigned char *)(v7 + v3);
      v14 |= (unint64_t)(v16 & 0x7F) << v8;
      if ((v16 & 0x80) == 0) {
        break;
      }
      v8 += 7;
      unint64_t v3 = v15;
      BOOL v10 = v9++ > 8;
      if (v10) {
        goto LABEL_21;
      }
    }
LABEL_22:
    if ((v14 & 7) == 4)
    {
      int v5 = 0;
      return v5 == 0;
    }
    if ((PB::Reader::skip(this) & 1) == 0) {
      return 0;
    }
  }
}

void *sub_227B8E770(void *result)
{
  *uint64_t result = &unk_26DC21FF8;
  result[1] = 0;
  return result;
}

void sub_227B8E790(PB::Base *this)
{
  *(void *)this = &unk_26DC21FF8;
  uint64_t v4 = *((void *)this + 1);
  unint64_t v2 = (void *)((char *)this + 8);
  uint64_t v3 = v4;
  *unint64_t v2 = 0;
  if (v4) {
    sub_227B8B690((uint64_t)v2, v3);
  }

  PB::Base::~Base(this);
}

void sub_227B8E7F4(PB::Base *a1)
{
  sub_227B8E790(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227B8E82C(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC21FF8;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227B8E8EC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(void *)(a1 + 8)) {
    PB::TextFormatter::format();
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B8E948(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B8EAEC(uint64_t result)
{
  if (*(void *)(result + 8)) {
    return PB::Writer::write();
  }
  return result;
}

uint64_t sub_227B8EB08(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC22030;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

void sub_227B8EB34(PB::Base *this)
{
  *(void *)this = &unk_26DC22030;
  unint64_t v2 = (void *)*((void *)this + 1);
  if (v2)
  {
    *((void *)this + 2) = v2;
    operator delete(v2);
  }

  PB::Base::~Base(this);
}

void sub_227B8EB98(PB::Base *a1)
{
  sub_227B8EB34(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B8EBD0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (char *)(a1 + 8);
  *(void *)a1 = &unk_26DC22030;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 56) = 0;
  char v5 = *(unsigned char *)(a2 + 56);
  if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    char v6 = 1;
    *(unsigned char *)(a1 + 56) = 1;
    *(void *)(a1 + 32) = v7;
    char v5 = *(unsigned char *)(a2 + 56);
    if ((v5 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v6 = 0;
  if ((*(unsigned char *)(a2 + 56) & 4) != 0)
  {
LABEL_5:
    int v8 = *(_DWORD *)(a2 + 44);
    v6 |= 4u;
    *(unsigned char *)(a1 + 56) = v6;
    *(_DWORD *)(a1 + 44) = v8;
    char v5 = *(unsigned char *)(a2 + 56);
  }
LABEL_6:
  if ((v5 & 8) == 0)
  {
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  int v12 = *(_DWORD *)(a2 + 48);
  v6 |= 8u;
  *(unsigned char *)(a1 + 56) = v6;
  *(_DWORD *)(a1 + 48) = v12;
  if ((*(unsigned char *)(a2 + 56) & 0x10) != 0)
  {
LABEL_8:
    int v9 = *(_DWORD *)(a2 + 52);
    *(unsigned char *)(a1 + 56) = v6 | 0x10;
    *(_DWORD *)(a1 + 52) = v9;
  }
LABEL_9:
  if (a1 != a2) {
    sub_227B8B74C(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
  }
  if ((*(unsigned char *)(a2 + 56) & 2) != 0)
  {
    int v10 = *(_DWORD *)(a2 + 40);
    *(unsigned char *)(a1 + 56) |= 2u;
    *(_DWORD *)(a1 + 40) = v10;
  }
  return a1;
}

uint64_t sub_227B8ECD4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(double **)(a1 + 8);
  char v6 = *(double **)(a1 + 16);
  while (v5 != v6)
  {
    double v7 = *v5++;
    PB::TextFormatter::format(this, "attitude", v7);
  }
  char v8 = *(unsigned char *)(a1 + 56);
  if ((v8 & 2) != 0)
  {
    PB::TextFormatter::format(this, "status");
    char v8 = *(unsigned char *)(a1 + 56);
    if ((v8 & 1) == 0)
    {
LABEL_5:
      if ((v8 & 4) == 0) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(a1 + 56) & 1) == 0)
  {
    goto LABEL_5;
  }
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 32));
  char v8 = *(unsigned char *)(a1 + 56);
  if ((v8 & 4) == 0)
  {
LABEL_6:
    if ((v8 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(this, "x", *(float *)(a1 + 44));
  char v8 = *(unsigned char *)(a1 + 56);
  if ((v8 & 8) == 0)
  {
LABEL_7:
    if ((v8 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_15:
  PB::TextFormatter::format(this, "y", *(float *)(a1 + 48));
  if ((*(unsigned char *)(a1 + 56) & 0x10) != 0) {
LABEL_8:
  }
    PB::TextFormatter::format(this, "z", *(float *)(a1 + 52));
LABEL_9:

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227B8EDF4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    char v8 = (void **)(a1 + 8);
    uint64_t v9 = a1 + 24;
    while (1)
    {
      uint64_t v10 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v11 = 0;
      unsigned int v12 = 0;
      unint64_t v13 = 0;
      while (1)
      {
        unint64_t v14 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v15 = *(unsigned char *)(v10 + v2);
        v13 |= (unint64_t)(v15 & 0x7F) << v11;
        if ((v15 & 0x80) == 0) {
          break;
        }
        v11 += 7;
        unint64_t v2 = v14;
        BOOL v16 = v12++ > 8;
        if (v16) {
          goto LABEL_20;
        }
      }
LABEL_21:
      if ((v13 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v13 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 56) |= 1u;
          unint64_t v22 = *((void *)this + 1);
          if (v22 > 0xFFFFFFFFFFFFFFF7 || v22 + 8 > *((void *)this + 2)) {
            goto LABEL_100;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v22);
          goto LABEL_102;
        case 2u:
          *(unsigned char *)(a1 + 56) |= 4u;
          unint64_t v23 = *((void *)this + 1);
          if (v23 > 0xFFFFFFFFFFFFFFFBLL || v23 + 4 > *((void *)this + 2)) {
            goto LABEL_100;
          }
          *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v23);
          goto LABEL_37;
        case 3u:
          *(unsigned char *)(a1 + 56) |= 8u;
          unint64_t v24 = *((void *)this + 1);
          if (v24 > 0xFFFFFFFFFFFFFFFBLL || v24 + 4 > *((void *)this + 2)) {
            goto LABEL_100;
          }
          *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v24);
          goto LABEL_37;
        case 4u:
          *(unsigned char *)(a1 + 56) |= 0x10u;
          unint64_t v25 = *((void *)this + 1);
          if (v25 > 0xFFFFFFFFFFFFFFFBLL || v25 + 4 > *((void *)this + 2)) {
            goto LABEL_100;
          }
          *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v25);
LABEL_37:
          uint64_t v26 = *((void *)this + 1) + 4;
          goto LABEL_103;
        case 5u:
          if ((v13 & 7) == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v27 = *((void *)this + 1);
            unint64_t v28 = *((void *)this + 2);
            while (v27 < v28 && !*((unsigned char *)this + 24))
            {
              char v30 = *(char **)(a1 + 16);
              unint64_t v29 = *(void *)(a1 + 24);
              if ((unint64_t)v30 >= v29)
              {
                __int16 v32 = (char *)*v8;
                uint64_t v33 = (v30 - (unsigned char *)*v8) >> 3;
                unint64_t v34 = v33 + 1;
                if ((unint64_t)(v33 + 1) >> 61) {
                  goto LABEL_114;
                }
                uint64_t v35 = v29 - (void)v32;
                if (v35 >> 2 > v34) {
                  unint64_t v34 = v35 >> 2;
                }
                if ((unint64_t)v35 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v36 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v36 = v34;
                }
                if (v36)
                {
                  uint64_t v37 = (char *)sub_227B8B8B4(v9, v36);
                  __int16 v32 = *(char **)(a1 + 8);
                  char v30 = *(char **)(a1 + 16);
                }
                else
                {
                  uint64_t v37 = 0;
                }
                id v38 = &v37[8 * v33];
                *(void *)id v38 = 0;
                int v31 = v38 + 8;
                while (v30 != v32)
                {
                  uint64_t v39 = *((void *)v30 - 1);
                  v30 -= 8;
                  *((void *)v38 - 1) = v39;
                  v38 -= 8;
                }
                *(void *)(a1 + 8) = v38;
                *(void *)(a1 + 16) = v31;
                *(void *)(a1 + 24) = &v37[8 * v36];
                if (v32) {
                  operator delete(v32);
                }
              }
              else
              {
                *(void *)char v30 = 0;
                int v31 = v30 + 8;
              }
              *(void *)(a1 + 16) = v31;
              unint64_t v40 = *((void *)this + 1);
              if (v40 > 0xFFFFFFFFFFFFFFF7 || v40 + 8 > *((void *)this + 2))
              {
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v31 - 1) = *(void *)(*(void *)this + v40);
              unint64_t v28 = *((void *)this + 2);
              unint64_t v27 = *((void *)this + 1) + 8;
              *((void *)this + 1) = v27;
            }
            PB::Reader::recallMark();
          }
          else
          {
            char v50 = *(char **)(a1 + 16);
            unint64_t v49 = *(void *)(a1 + 24);
            if ((unint64_t)v50 >= v49)
            {
              unsigned int v56 = (char *)*v8;
              uint64_t v57 = (v50 - (unsigned char *)*v8) >> 3;
              unint64_t v58 = v57 + 1;
              if ((unint64_t)(v57 + 1) >> 61) {
LABEL_114:
              }
                sub_227B8B89C();
              uint64_t v59 = v49 - (void)v56;
              if (v59 >> 2 > v58) {
                unint64_t v58 = v59 >> 2;
              }
              if ((unint64_t)v59 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v60 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v60 = v58;
              }
              if (v60)
              {
                unint64_t v61 = (char *)sub_227B8B8B4(v9, v60);
                unsigned int v56 = *(char **)(a1 + 8);
                char v50 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v61 = 0;
              }
              char v62 = &v61[8 * v57];
              *(void *)char v62 = 0;
              char v51 = v62 + 8;
              while (v50 != v56)
              {
                uint64_t v63 = *((void *)v50 - 1);
                v50 -= 8;
                *((void *)v62 - 1) = v63;
                v62 -= 8;
              }
              *(void *)(a1 + 8) = v62;
              *(void *)(a1 + 16) = v51;
              *(void *)(a1 + 24) = &v61[8 * v60];
              if (v56) {
                operator delete(v56);
              }
            }
            else
            {
              *(void *)char v50 = 0;
              char v51 = v50 + 8;
            }
            *(void *)(a1 + 16) = v51;
            unint64_t v64 = *((void *)this + 1);
            if (v64 <= 0xFFFFFFFFFFFFFFF7 && v64 + 8 <= *((void *)this + 2))
            {
              *(v51 - 1) = *(void *)(*(void *)this + v64);
LABEL_102:
              uint64_t v26 = *((void *)this + 1) + 8;
LABEL_103:
              *((void *)this + 1) = v26;
            }
            else
            {
LABEL_100:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_104:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        case 6u:
          *(unsigned char *)(a1 + 56) |= 2u;
          unint64_t v41 = *((void *)this + 1);
          unint64_t v42 = *((void *)this + 2);
          uint64_t v43 = *(void *)this;
          if (v41 <= 0xFFFFFFFFFFFFFFF5 && v41 + 10 <= v42)
          {
            char v44 = 0;
            unsigned int v45 = 0;
            uint64_t v46 = 0;
            do
            {
              unint64_t v47 = v41 + 1;
              *((void *)this + 1) = v41 + 1;
              char v48 = *(unsigned char *)(v43 + v41);
              v46 |= (unint64_t)(v48 & 0x7F) << v44;
              if ((v48 & 0x80) == 0) {
                goto LABEL_89;
              }
              v44 += 7;
              unint64_t v41 = v47;
              BOOL v16 = v45++ > 8;
            }
            while (!v16);
LABEL_77:
            LODWORD(v46) = 0;
            goto LABEL_89;
          }
          char v52 = 0;
          unsigned int v53 = 0;
          uint64_t v46 = 0;
          if (v42 <= v41) {
            unint64_t v42 = *((void *)this + 1);
          }
          while (2)
          {
            if (v42 == v41)
            {
              LODWORD(v46) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v54 = v41 + 1;
              char v55 = *(unsigned char *)(v43 + v41);
              *((void *)this + 1) = v54;
              v46 |= (unint64_t)(v55 & 0x7F) << v52;
              if (v55 < 0)
              {
                v52 += 7;
                unint64_t v41 = v54;
                BOOL v16 = v53++ > 8;
                if (v16) {
                  goto LABEL_77;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v46) = 0;
              }
            }
            break;
          }
LABEL_89:
          *(_DWORD *)(a1 + 40) = v46;
          goto LABEL_104;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_104;
      }
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v13 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v19 = v2 + 1;
      char v20 = *(unsigned char *)(v10 + v2);
      *((void *)this + 1) = v19;
      v13 |= (unint64_t)(v20 & 0x7F) << v17;
      if ((v20 & 0x80) == 0) {
        goto LABEL_21;
      }
      v17 += 7;
      unint64_t v2 = v19;
      if (v18++ >= 9)
      {
LABEL_20:
        unint64_t v13 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B8F370(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 56);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 32));
    char v4 = *(unsigned char *)(v3 + 56);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
LABEL_13:
      uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48));
      if ((*(unsigned char *)(v3 + 56) & 0x10) == 0) {
        goto LABEL_6;
      }
      goto LABEL_5;
    }
  }
  else if ((*(unsigned char *)(result + 56) & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44));
  char v4 = *(unsigned char *)(v3 + 56);
  if ((v4 & 8) != 0) {
    goto LABEL_13;
  }
LABEL_4:
  if ((v4 & 0x10) != 0) {
LABEL_5:
  }
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
LABEL_6:
  char v5 = *(double **)(v3 + 8);
  char v6 = *(double **)(v3 + 16);
  while (v5 != v6)
  {
    double v7 = *v5++;
    uint64_t result = PB::Writer::write(this, v7);
  }
  if ((*(unsigned char *)(v3 + 56) & 2) != 0)
  {
    return PB::Writer::writeVarInt(this);
  }
  return result;
}

void *sub_227B8F460(void *result)
{
  *uint64_t result = &unk_26DC22068;
  result[1] = 0;
  return result;
}

void sub_227B8F484(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B8F4BC(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC22068;
  *(void *)(result + 8) = 0;
  if (*(unsigned char *)(a2 + 12))
  {
    int v2 = *(_DWORD *)(a2 + 8);
    *(unsigned char *)(result + 12) = 1;
    *(_DWORD *)(result + 8) = v2;
  }
  return result;
}

uint64_t sub_227B8F4F4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 12)) {
    PB::TextFormatter::format(this, "state");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B8F554(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 12) |= 1u;
        unint64_t v20 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
        uint64_t v21 = *(void *)this;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v3)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v24 = 0;
          if (v3 <= v20) {
            unint64_t v2 = *((void *)this + 1);
          }
          else {
            unint64_t v2 = *((void *)this + 2);
          }
          while (1)
          {
            if (v2 == v20)
            {
              LODWORD(v24) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_43;
            }
            unint64_t v29 = v20++;
            char v30 = *(unsigned char *)(v21 + v29);
            *((void *)this + 1) = v20;
            v24 |= (unint64_t)(v30 & 0x7F) << v27;
            if ((v30 & 0x80) == 0) {
              break;
            }
            v27 += 7;
            BOOL v14 = v28++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              goto LABEL_42;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v24) = 0;
          }
LABEL_42:
          unint64_t v2 = v29 + 1;
        }
        else
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          while (1)
          {
            unint64_t v2 = v20 + 1;
            *((void *)this + 1) = v20 + 1;
            char v25 = *(unsigned char *)(v21 + v20);
            v24 |= (unint64_t)(v25 & 0x7F) << v22;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v22 += 7;
            unint64_t v20 = v2;
            BOOL v14 = v23++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              break;
            }
          }
        }
LABEL_43:
        *(_DWORD *)(a1 + 8) = v24;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B8F78C(uint64_t result, PB::Writer *this)
{
  if (*(unsigned char *)(result + 12)) {
    return PB::Writer::writeVarInt(this);
  }
  return result;
}

uint64_t sub_227B8F7AC(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC220A0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void sub_227B8F7D4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B8F80C(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC220A0;
  *(_DWORD *)(result + 32) = 0;
  char v2 = *(unsigned char *)(a2 + 32);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 32) = 1;
    *(void *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 32) & 4) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 20);
    v3 |= 4u;
    *(unsigned char *)(result + 32) = v3;
    *(_DWORD *)(result + 20) = v5;
    char v2 = *(unsigned char *)(a2 + 32);
  }
LABEL_6:
  if ((v2 & 8) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 24);
    v3 |= 8u;
    *(unsigned char *)(result + 32) = v3;
    *(_DWORD *)(result + 24) = v6;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 0x10) == 0)
    {
LABEL_8:
      if ((v2 & 2) == 0) {
        return result;
      }
LABEL_12:
      int v8 = *(_DWORD *)(a2 + 16);
      *(unsigned char *)(result + 32) = v3 | 2;
      *(_DWORD *)(result + 16) = v8;
      return result;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 28);
  v3 |= 0x10u;
  *(unsigned char *)(result + 32) = v3;
  *(_DWORD *)(result + 28) = v7;
  if ((*(unsigned char *)(a2 + 32) & 2) != 0) {
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_227B8F8C4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "location");
    char v5 = *(unsigned char *)(a1 + 32);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 32) & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(this, "x", *(float *)(a1 + 20));
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(this, "y", *(float *)(a1 + 24));
  if ((*(unsigned char *)(a1 + 32) & 0x10) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "z", *(float *)(a1 + 28));
LABEL_7:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B8F9A8(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 32) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_35;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              unint64_t v2 = *((void *)this + 1) + 8;
              goto LABEL_52;
            case 2u:
              *(unsigned char *)(a1 + 32) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_35;
              }
              *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_51;
            case 3u:
              *(unsigned char *)(a1 + 32) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_35;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_51;
            case 4u:
              *(unsigned char *)(a1 + 32) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
LABEL_51:
                unint64_t v2 = *((void *)this + 1) + 4;
LABEL_52:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_35:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_58;
            case 5u:
              *(unsigned char *)(a1 + 32) |= 2u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v27 = 0;
                unsigned int v28 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_57;
                  }
                  unint64_t v29 = v21++;
                  char v30 = *(unsigned char *)(v22 + v29);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v30 & 0x7F) << v27;
                  if ((v30 & 0x80) == 0) {
                    break;
                  }
                  v27 += 7;
                  BOOL v14 = v28++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_56:
                    unint64_t v2 = v29 + 1;
                    goto LABEL_57;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_56;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_57;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_57:
              *(_DWORD *)(a1 + 16) = v25;
LABEL_58:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_58;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B8FD18(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 32) & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 8) == 0)
  {
LABEL_4:
    if ((v4 & 0x10) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
    if ((*(unsigned char *)(v3 + 32) & 2) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 0x10) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_11:

  return PB::Writer::writeVarInt(this);
}

void *sub_227B8FDDC(void *result)
{
  *uint64_t result = &unk_26DC220D8;
  result[1] = 0;
  return result;
}

void sub_227B8FDFC(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC220D8;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227B8FE7C(PB::Base *a1)
{
  sub_227B8FDFC(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227B8FEB4(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC220D8;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227B8FF5C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B8FFD8(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B901F0(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

uint64_t sub_227B9020C(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC22110;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void sub_227B90234(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B9026C(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC22110;
  *(_DWORD *)(result + 32) = 0;
  char v2 = *(unsigned char *)(a2 + 32);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 32) = 1;
    *(void *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 32) & 4) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 20);
    v3 |= 4u;
    *(unsigned char *)(result + 32) = v3;
    *(_DWORD *)(result + 20) = v5;
    char v2 = *(unsigned char *)(a2 + 32);
  }
LABEL_6:
  if ((v2 & 8) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 24);
    v3 |= 8u;
    *(unsigned char *)(result + 32) = v3;
    *(_DWORD *)(result + 24) = v6;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 0x10) == 0)
    {
LABEL_8:
      if ((v2 & 2) == 0) {
        return result;
      }
LABEL_12:
      int v8 = *(_DWORD *)(a2 + 16);
      *(unsigned char *)(result + 32) = v3 | 2;
      *(_DWORD *)(result + 16) = v8;
      return result;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 28);
  v3 |= 0x10u;
  *(unsigned char *)(result + 32) = v3;
  *(_DWORD *)(result + 28) = v7;
  if ((*(unsigned char *)(a2 + 32) & 2) != 0) {
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_227B90324(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "batch");
    char v5 = *(unsigned char *)(a1 + 32);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 32) & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(this, "x", *(float *)(a1 + 20));
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(this, "y", *(float *)(a1 + 24));
  if ((*(unsigned char *)(a1 + 32) & 0x10) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "z", *(float *)(a1 + 28));
LABEL_7:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B90408(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 32) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_35;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              unint64_t v2 = *((void *)this + 1) + 8;
              goto LABEL_52;
            case 2u:
              *(unsigned char *)(a1 + 32) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_35;
              }
              *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_51;
            case 3u:
              *(unsigned char *)(a1 + 32) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_35;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_51;
            case 4u:
              *(unsigned char *)(a1 + 32) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
LABEL_51:
                unint64_t v2 = *((void *)this + 1) + 4;
LABEL_52:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_35:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_58;
            case 5u:
              *(unsigned char *)(a1 + 32) |= 2u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v27 = 0;
                unsigned int v28 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_57;
                  }
                  unint64_t v29 = v21++;
                  char v30 = *(unsigned char *)(v22 + v29);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v30 & 0x7F) << v27;
                  if ((v30 & 0x80) == 0) {
                    break;
                  }
                  v27 += 7;
                  BOOL v14 = v28++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_56:
                    unint64_t v2 = v29 + 1;
                    goto LABEL_57;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_56;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_57;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_57:
              *(_DWORD *)(a1 + 16) = v25;
LABEL_58:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_58;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B90778(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 32) & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 8) == 0)
  {
LABEL_4:
    if ((v4 & 0x10) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
    if ((*(unsigned char *)(v3 + 32) & 2) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 0x10) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_11:

  return PB::Writer::writeVarInt(this);
}

void *sub_227B9083C(void *result)
{
  *uint64_t result = &unk_26DC22148;
  result[1] = 0;
  return result;
}

void sub_227B9085C(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC22148;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227B908DC(PB::Base *a1)
{
  sub_227B9085C(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227B90914(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC22148;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227B909BC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B90A38(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B90C50(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

uint64_t sub_227B90C6C(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC22180;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

void sub_227B90C94(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227B90CCC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC22180;
  *(_DWORD *)(a1 + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 28);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 28) = 1;
    *(void *)(a1 + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 28) & 2) != 0)
  {
LABEL_5:
    LODWORD(v4) = *(_DWORD *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(a1 + 28) = v3;
    *(_DWORD *)(a1 + 16) = v4;
    char v2 = *(unsigned char *)(a2 + 28);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    LODWORD(v4) = *(_DWORD *)(a2 + 20);
    v3 |= 4u;
    *(unsigned char *)(a1 + 28) = v3;
    *(_DWORD *)(a1 + 20) = v4;
    if ((*(unsigned char *)(a2 + 28) & 8) == 0) {
      return *(float *)&v4;
    }
  }
  else if ((v2 & 8) == 0)
  {
    return *(float *)&v4;
  }
  LODWORD(v4) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = v3 | 8;
  *(_DWORD *)(a1 + 24) = v4;
  return *(float *)&v4;
}

uint64_t sub_227B90D68(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 28);
  if (v5)
  {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 28);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 28) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "x", *(float *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "y", *(float *)(a1 + 20));
  if ((*(unsigned char *)(a1 + 28) & 8) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "z", *(float *)(a1 + 24));
LABEL_6:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B90E2C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 28) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          goto LABEL_38;
        case 2u:
          *(unsigned char *)(a1 + 28) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_37;
        case 3u:
          *(unsigned char *)(a1 + 28) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_37;
        case 4u:
          *(unsigned char *)(a1 + 28) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
LABEL_37:
            unint64_t v2 = *((void *)this + 1) + 4;
LABEL_38:
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_35:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B910AC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 28);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
      if ((*(unsigned char *)(v3 + 28) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 28) & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16));
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 8) == 0) {
    return result;
  }
LABEL_9:
  float v5 = *(float *)(v3 + 24);

  return PB::Writer::write(this, v5);
}

void *sub_227B91154(void *result)
{
  *uint64_t result = &unk_26DC221B8;
  result[1] = 0;
  return result;
}

void sub_227B91174(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC221B8;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227B911F4(PB::Base *a1)
{
  sub_227B91174(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227B9122C(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC221B8;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227B912D4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B91350(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B91568(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

double sub_227B91584(uint64_t a1)
{
  *(void *)a1 = &unk_26DC221F0;
  *(_DWORD *)(a1 + 116) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)(a1 + 72) = 0;
  return result;
}

void sub_227B915C0(PB::Base *this)
{
  *(void *)this = &unk_26DC221F0;
  unint64_t v2 = (void *)*((void *)this + 7);
  if (v2)
  {
    *((void *)this + 8) = v2;
    operator delete(v2);
  }
  unint64_t v3 = (void *)*((void *)this + 4);
  if (v3)
  {
    *((void *)this + 5) = v3;
    operator delete(v3);
  }
  int v4 = (void *)*((void *)this + 1);
  if (v4)
  {
    *((void *)this + 2) = v4;
    operator delete(v4);
  }

  PB::Base::~Base(this);
}

void sub_227B91644(PB::Base *a1)
{
  sub_227B915C0(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B9167C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC221F0;
  *(_OWORD *)(a1 + 8) = 0u;
  int v4 = (char *)(a1 + 8);
  *(_DWORD *)(a1 + 116) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)(a1 + 72) = 0;
  if (a1 != a2)
  {
    sub_227B8BA68((char *)(a1 + 56), *(char **)(a2 + 56), *(void *)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 2);
    sub_227B8BA68((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
    sub_227B8BA68(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  char v5 = *(unsigned char *)(a2 + 116);
  if ((v5 & 2) != 0)
  {
    uint64_t v8 = *(void *)(a2 + 88);
    *(unsigned char *)(a1 + 116) |= 2u;
    *(void *)(a1 + 88) = v8;
    char v5 = *(unsigned char *)(a2 + 116);
    if ((v5 & 1) == 0)
    {
LABEL_5:
      if ((v5 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a2 + 116) & 1) == 0)
  {
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 116) |= 1u;
  *(void *)(a1 + 80) = v9;
  char v5 = *(unsigned char *)(a2 + 116);
  if ((v5 & 8) == 0)
  {
LABEL_6:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_13:
    char v11 = *(unsigned char *)(a2 + 112);
    *(unsigned char *)(a1 + 116) |= 0x10u;
    *(unsigned char *)(a1 + 112) = v11;
    if ((*(unsigned char *)(a2 + 116) & 4) == 0) {
      return a1;
    }
    goto LABEL_8;
  }
LABEL_12:
  uint64_t v10 = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 116) |= 8u;
  *(void *)(a1 + 104) = v10;
  char v5 = *(unsigned char *)(a2 + 116);
  if ((v5 & 0x10) != 0) {
    goto LABEL_13;
  }
LABEL_7:
  if ((v5 & 4) != 0)
  {
LABEL_8:
    uint64_t v6 = *(void *)(a2 + 96);
    *(unsigned char *)(a1 + 116) |= 4u;
    *(void *)(a1 + 96) = v6;
  }
  return a1;
}

uint64_t sub_227B917D4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(float **)(a1 + 8);
  uint64_t v6 = *(float **)(a1 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    PB::TextFormatter::format(this, "B", v7);
  }
  uint64_t v8 = *(float **)(a1 + 32);
  uint64_t v9 = *(float **)(a1 + 40);
  while (v8 != v9)
  {
    float v10 = *v8++;
    PB::TextFormatter::format(this, "N", v10);
  }
  char v11 = *(float **)(a1 + 56);
  char v12 = *(float **)(a1 + 64);
  while (v11 != v12)
  {
    float v13 = *v11++;
    PB::TextFormatter::format(this, "T", v13);
  }
  char v14 = *(unsigned char *)(a1 + 116);
  if (v14)
  {
    PB::TextFormatter::format(this, "curvature", *(double *)(a1 + 80));
    char v14 = *(unsigned char *)(a1 + 116);
    if ((v14 & 0x10) == 0)
    {
LABEL_9:
      if ((v14 & 2) == 0) {
        goto LABEL_10;
      }
      goto LABEL_18;
    }
  }
  else if ((*(unsigned char *)(a1 + 116) & 0x10) == 0)
  {
    goto LABEL_9;
  }
  PB::TextFormatter::format(this, "isValid");
  char v14 = *(unsigned char *)(a1 + 116);
  if ((v14 & 2) == 0)
  {
LABEL_10:
    if ((v14 & 4) == 0) {
      goto LABEL_11;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "jerkNorm", *(double *)(a1 + 88));
  char v14 = *(unsigned char *)(a1 + 116);
  if ((v14 & 4) == 0)
  {
LABEL_11:
    if ((v14 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_19:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 96));
  if ((*(unsigned char *)(a1 + 116) & 8) != 0) {
LABEL_12:
  }
    PB::TextFormatter::format(this, "torsion", *(double *)(a1 + 104));
LABEL_13:

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227B9194C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = (void **)(a1 + 8);
    uint64_t v9 = (void **)(a1 + 32);
    uint64_t v109 = a1 + 48;
    uint64_t v110 = a1 + 24;
    float v10 = (void **)(a1 + 56);
    uint64_t v11 = a1 + 72;
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        if (v14++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v24 = v15 & 7;
      if (v24 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v15 >> 3))
      {
        case 1u:
          if (v24 != 2)
          {
            uint64_t v77 = *(char **)(a1 + 64);
            unint64_t v76 = *(void *)(a1 + 72);
            if ((unint64_t)v77 >= v76)
            {
              char v83 = (char *)*v10;
              uint64_t v84 = (v77 - (unsigned char *)*v10) >> 2;
              unint64_t v85 = v84 + 1;
              if ((unint64_t)(v84 + 1) >> 62) {
LABEL_180:
              }
                sub_227B8B89C();
              uint64_t v86 = v76 - (void)v83;
              if (v86 >> 1 > v85) {
                unint64_t v85 = v86 >> 1;
              }
              if ((unint64_t)v86 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v87 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v87 = v85;
              }
              if (v87)
              {
                unint64_t v88 = (char *)sub_227B8BBB8(v11, v87);
                char v83 = *(char **)(a1 + 56);
                uint64_t v77 = *(char **)(a1 + 64);
              }
              else
              {
                unint64_t v88 = 0;
              }
              unint64_t v101 = &v88[4 * v84];
              *(_DWORD *)unint64_t v101 = 0;
              unint64_t v78 = v101 + 4;
              while (v77 != v83)
              {
                int v102 = *((_DWORD *)v77 - 1);
                v77 -= 4;
                *((_DWORD *)v101 - 1) = v102;
                v101 -= 4;
              }
              *(void *)(a1 + 56) = v101;
              *(void *)(a1 + 64) = v78;
              *(void *)(a1 + 72) = &v88[4 * v87];
              if (v83) {
                operator delete(v83);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v77 = 0;
              unint64_t v78 = v77 + 4;
            }
            *(void *)(a1 + 64) = v78;
            goto LABEL_167;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v25 = *((void *)this + 1);
          unint64_t v26 = *((void *)this + 2);
          while (v25 < v26 && !*((unsigned char *)this + 24))
          {
            unsigned int v28 = *(char **)(a1 + 64);
            unint64_t v27 = *(void *)(a1 + 72);
            if ((unint64_t)v28 >= v27)
            {
              char v30 = (char *)*v10;
              uint64_t v31 = (v28 - (unsigned char *)*v10) >> 2;
              unint64_t v32 = v31 + 1;
              if ((unint64_t)(v31 + 1) >> 62) {
                goto LABEL_180;
              }
              uint64_t v33 = v27 - (void)v30;
              if (v33 >> 1 > v32) {
                unint64_t v32 = v33 >> 1;
              }
              if ((unint64_t)v33 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v34 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v34 = v32;
              }
              if (v34)
              {
                uint64_t v35 = (char *)sub_227B8BBB8(v11, v34);
                char v30 = *(char **)(a1 + 56);
                unsigned int v28 = *(char **)(a1 + 64);
              }
              else
              {
                uint64_t v35 = 0;
              }
              unint64_t v36 = &v35[4 * v31];
              *(_DWORD *)unint64_t v36 = 0;
              unint64_t v29 = v36 + 4;
              while (v28 != v30)
              {
                int v37 = *((_DWORD *)v28 - 1);
                v28 -= 4;
                *((_DWORD *)v36 - 1) = v37;
                v36 -= 4;
              }
              *(void *)(a1 + 56) = v36;
              *(void *)(a1 + 64) = v29;
              *(void *)(a1 + 72) = &v35[4 * v34];
              if (v30) {
                operator delete(v30);
              }
            }
            else
            {
              *(_DWORD *)unsigned int v28 = 0;
              unint64_t v29 = v28 + 4;
            }
            *(void *)(a1 + 64) = v29;
            unint64_t v38 = *((void *)this + 1);
            if (v38 > 0xFFFFFFFFFFFFFFFBLL || v38 + 4 > *((void *)this + 2)) {
              goto LABEL_120;
            }
            *(v29 - 1) = *(_DWORD *)(*(void *)this + v38);
            unint64_t v26 = *((void *)this + 2);
            unint64_t v25 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v25;
          }
          goto LABEL_121;
        case 2u:
          if (v24 != 2)
          {
            unint64_t v80 = *(char **)(a1 + 40);
            unint64_t v79 = *(void *)(a1 + 48);
            if ((unint64_t)v80 >= v79)
            {
              unint64_t v89 = (char *)*v9;
              uint64_t v90 = (v80 - (unsigned char *)*v9) >> 2;
              unint64_t v91 = v90 + 1;
              if ((unint64_t)(v90 + 1) >> 62) {
LABEL_181:
              }
                sub_227B8B89C();
              uint64_t v92 = v79 - (void)v89;
              if (v92 >> 1 > v91) {
                unint64_t v91 = v92 >> 1;
              }
              if ((unint64_t)v92 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v93 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v93 = v91;
              }
              if (v93)
              {
                unint64_t v94 = (char *)sub_227B8BBB8(v109, v93);
                unint64_t v89 = *(char **)(a1 + 32);
                unint64_t v80 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v94 = 0;
              }
              unint64_t v103 = &v94[4 * v90];
              *(_DWORD *)unint64_t v103 = 0;
              unint64_t v78 = v103 + 4;
              while (v80 != v89)
              {
                int v104 = *((_DWORD *)v80 - 1);
                v80 -= 4;
                *((_DWORD *)v103 - 1) = v104;
                v103 -= 4;
              }
              *(void *)(a1 + 32) = v103;
              *(void *)(a1 + 40) = v78;
              *(void *)(a1 + 48) = &v94[4 * v93];
              if (v89) {
                operator delete(v89);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v80 = 0;
              unint64_t v78 = v80 + 4;
            }
            *(void *)(a1 + 40) = v78;
            goto LABEL_167;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v39 = *((void *)this + 1);
          unint64_t v40 = *((void *)this + 2);
          while (v39 < v40 && !*((unsigned char *)this + 24))
          {
            unint64_t v42 = *(char **)(a1 + 40);
            unint64_t v41 = *(void *)(a1 + 48);
            if ((unint64_t)v42 >= v41)
            {
              char v44 = (char *)*v9;
              uint64_t v45 = (v42 - (unsigned char *)*v9) >> 2;
              unint64_t v46 = v45 + 1;
              if ((unint64_t)(v45 + 1) >> 62) {
                goto LABEL_181;
              }
              uint64_t v47 = v41 - (void)v44;
              if (v47 >> 1 > v46) {
                unint64_t v46 = v47 >> 1;
              }
              if ((unint64_t)v47 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v48 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v48 = v46;
              }
              if (v48)
              {
                unint64_t v49 = (char *)sub_227B8BBB8(v109, v48);
                char v44 = *(char **)(a1 + 32);
                unint64_t v42 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v49 = 0;
              }
              char v50 = &v49[4 * v45];
              *(_DWORD *)char v50 = 0;
              uint64_t v43 = v50 + 4;
              while (v42 != v44)
              {
                int v51 = *((_DWORD *)v42 - 1);
                v42 -= 4;
                *((_DWORD *)v50 - 1) = v51;
                v50 -= 4;
              }
              *(void *)(a1 + 32) = v50;
              *(void *)(a1 + 40) = v43;
              *(void *)(a1 + 48) = &v49[4 * v48];
              if (v44) {
                operator delete(v44);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v42 = 0;
              uint64_t v43 = v42 + 4;
            }
            *(void *)(a1 + 40) = v43;
            unint64_t v52 = *((void *)this + 1);
            if (v52 > 0xFFFFFFFFFFFFFFFBLL || v52 + 4 > *((void *)this + 2)) {
              goto LABEL_120;
            }
            *(v43 - 1) = *(_DWORD *)(*(void *)this + v52);
            unint64_t v40 = *((void *)this + 2);
            unint64_t v39 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v39;
          }
          goto LABEL_121;
        case 3u:
          if (v24 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v53 = *((void *)this + 1);
            unint64_t v54 = *((void *)this + 2);
            while (v53 < v54 && !*((unsigned char *)this + 24))
            {
              unsigned int v56 = *(char **)(a1 + 16);
              unint64_t v55 = *(void *)(a1 + 24);
              if ((unint64_t)v56 >= v55)
              {
                unint64_t v58 = (char *)*v8;
                uint64_t v59 = (v56 - (unsigned char *)*v8) >> 2;
                unint64_t v60 = v59 + 1;
                if ((unint64_t)(v59 + 1) >> 62) {
                  goto LABEL_182;
                }
                uint64_t v61 = v55 - (void)v58;
                if (v61 >> 1 > v60) {
                  unint64_t v60 = v61 >> 1;
                }
                if ((unint64_t)v61 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v62 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v62 = v60;
                }
                if (v62)
                {
                  uint64_t v63 = (char *)sub_227B8BBB8(v110, v62);
                  unint64_t v58 = *(char **)(a1 + 8);
                  unsigned int v56 = *(char **)(a1 + 16);
                }
                else
                {
                  uint64_t v63 = 0;
                }
                unint64_t v64 = &v63[4 * v59];
                *(_DWORD *)unint64_t v64 = 0;
                uint64_t v57 = v64 + 4;
                while (v56 != v58)
                {
                  int v65 = *((_DWORD *)v56 - 1);
                  v56 -= 4;
                  *((_DWORD *)v64 - 1) = v65;
                  v64 -= 4;
                }
                *(void *)(a1 + 8) = v64;
                *(void *)(a1 + 16) = v57;
                *(void *)(a1 + 24) = &v63[4 * v62];
                if (v58) {
                  operator delete(v58);
                }
              }
              else
              {
                *(_DWORD *)unsigned int v56 = 0;
                uint64_t v57 = v56 + 4;
              }
              *(void *)(a1 + 16) = v57;
              unint64_t v66 = *((void *)this + 1);
              if (v66 > 0xFFFFFFFFFFFFFFFBLL || v66 + 4 > *((void *)this + 2))
              {
LABEL_120:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v57 - 1) = *(_DWORD *)(*(void *)this + v66);
              unint64_t v54 = *((void *)this + 2);
              unint64_t v53 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v53;
            }
LABEL_121:
            PB::Reader::recallMark();
          }
          else
          {
            uint64_t v82 = *(char **)(a1 + 16);
            unint64_t v81 = *(void *)(a1 + 24);
            if ((unint64_t)v82 >= v81)
            {
              uint64_t v95 = (char *)*v8;
              uint64_t v96 = (v82 - (unsigned char *)*v8) >> 2;
              unint64_t v97 = v96 + 1;
              if ((unint64_t)(v96 + 1) >> 62) {
LABEL_182:
              }
                sub_227B8B89C();
              uint64_t v98 = v81 - (void)v95;
              if (v98 >> 1 > v97) {
                unint64_t v97 = v98 >> 1;
              }
              if ((unint64_t)v98 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v99 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v99 = v97;
              }
              if (v99)
              {
                char v100 = (char *)sub_227B8BBB8(v110, v99);
                uint64_t v95 = *(char **)(a1 + 8);
                uint64_t v82 = *(char **)(a1 + 16);
              }
              else
              {
                char v100 = 0;
              }
              char v105 = &v100[4 * v96];
              *(_DWORD *)char v105 = 0;
              unint64_t v78 = v105 + 4;
              while (v82 != v95)
              {
                int v106 = *((_DWORD *)v82 - 1);
                v82 -= 4;
                *((_DWORD *)v105 - 1) = v106;
                v105 -= 4;
              }
              *(void *)(a1 + 8) = v105;
              *(void *)(a1 + 16) = v78;
              *(void *)(a1 + 24) = &v100[4 * v99];
              if (v95) {
                operator delete(v95);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v82 = 0;
              unint64_t v78 = v82 + 4;
            }
            *(void *)(a1 + 16) = v78;
LABEL_167:
            unint64_t v107 = *((void *)this + 1);
            if (v107 <= 0xFFFFFFFFFFFFFFFBLL && v107 + 4 <= *((void *)this + 2))
            {
              *(v78 - 1) = *(_DWORD *)(*(void *)this + v107);
              uint64_t v75 = *((void *)this + 1) + 4;
LABEL_171:
              *((void *)this + 1) = v75;
            }
            else
            {
LABEL_169:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_172:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || *((unsigned char *)this + 24)) {
            return v4 == 0;
          }
          break;
        case 4u:
          *(unsigned char *)(a1 + 116) |= 2u;
          unint64_t v67 = *((void *)this + 1);
          if (v67 > 0xFFFFFFFFFFFFFFF7 || v67 + 8 > *((void *)this + 2)) {
            goto LABEL_169;
          }
          *(void *)(a1 + 88) = *(void *)(*(void *)this + v67);
          goto LABEL_111;
        case 5u:
          *(unsigned char *)(a1 + 116) |= 1u;
          unint64_t v68 = *((void *)this + 1);
          if (v68 > 0xFFFFFFFFFFFFFFF7 || v68 + 8 > *((void *)this + 2)) {
            goto LABEL_169;
          }
          *(void *)(a1 + 80) = *(void *)(*(void *)this + v68);
          goto LABEL_111;
        case 6u:
          *(unsigned char *)(a1 + 116) |= 8u;
          unint64_t v69 = *((void *)this + 1);
          if (v69 > 0xFFFFFFFFFFFFFFF7 || v69 + 8 > *((void *)this + 2)) {
            goto LABEL_169;
          }
          *(void *)(a1 + 104) = *(void *)(*(void *)this + v69);
          goto LABEL_111;
        case 7u:
          *(unsigned char *)(a1 + 116) |= 0x10u;
          unint64_t v70 = *((void *)this + 1);
          if (v70 >= *((void *)this + 2))
          {
            BOOL v73 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v71 = v70 + 1;
            int v72 = *(unsigned __int8 *)(*(void *)this + v70);
            *((void *)this + 1) = v71;
            BOOL v73 = v72 != 0;
          }
          *(unsigned char *)(a1 + 112) = v73;
          goto LABEL_172;
        case 8u:
          *(unsigned char *)(a1 + 116) |= 4u;
          unint64_t v74 = *((void *)this + 1);
          if (v74 > 0xFFFFFFFFFFFFFFF7 || v74 + 8 > *((void *)this + 2)) {
            goto LABEL_169;
          }
          *(void *)(a1 + 96) = *(void *)(*(void *)this + v74);
LABEL_111:
          uint64_t v75 = *((void *)this + 1) + 8;
          goto LABEL_171;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_172;
      }
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v15 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v21 = v2 + 1;
      char v22 = *(unsigned char *)(v12 + v2);
      *((void *)this + 1) = v21;
      v15 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0) {
        goto LABEL_21;
      }
      v19 += 7;
      unint64_t v2 = v21;
      if (v20++ >= 9)
      {
LABEL_20:
        unint64_t v15 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B9219C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(float **)(result + 56);
  char v5 = *(float **)(result + 64);
  while (v4 != v5)
  {
    float v6 = *v4++;
    double result = PB::Writer::write(this, v6);
  }
  float v7 = *(float **)(v3 + 32);
  uint64_t v8 = *(float **)(v3 + 40);
  while (v7 != v8)
  {
    float v9 = *v7++;
    double result = PB::Writer::write(this, v9);
  }
  float v10 = *(float **)(v3 + 8);
  uint64_t v11 = *(float **)(v3 + 16);
  while (v10 != v11)
  {
    float v12 = *v10++;
    double result = PB::Writer::write(this, v12);
  }
  char v13 = *(unsigned char *)(v3 + 116);
  if ((v13 & 2) != 0)
  {
    double result = PB::Writer::write(this, *(double *)(v3 + 88));
    char v13 = *(unsigned char *)(v3 + 116);
    if ((v13 & 1) == 0)
    {
LABEL_12:
      if ((v13 & 8) == 0) {
        goto LABEL_13;
      }
      goto LABEL_18;
    }
  }
  else if ((*(unsigned char *)(v3 + 116) & 1) == 0)
  {
    goto LABEL_12;
  }
  double result = PB::Writer::write(this, *(double *)(v3 + 80));
  char v13 = *(unsigned char *)(v3 + 116);
  if ((v13 & 8) == 0)
  {
LABEL_13:
    if ((v13 & 0x10) == 0) {
      goto LABEL_14;
    }
LABEL_19:
    double result = PB::Writer::write(this);
    if ((*(unsigned char *)(v3 + 116) & 4) == 0) {
      return result;
    }
    goto LABEL_20;
  }
LABEL_18:
  double result = PB::Writer::write(this, *(double *)(v3 + 104));
  char v13 = *(unsigned char *)(v3 + 116);
  if ((v13 & 0x10) != 0) {
    goto LABEL_19;
  }
LABEL_14:
  if ((v13 & 4) == 0) {
    return result;
  }
LABEL_20:
  double v14 = *(double *)(v3 + 96);

  return PB::Writer::write(this, v14);
}

uint64_t sub_227B922CC(uint64_t result)
{
  *(void *)double result = &unk_26DC22228;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void sub_227B922F4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227B9232C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC22228;
  *(_DWORD *)(a1 + 32) = 0;
  char v2 = *(unsigned char *)(a2 + 32);
  if (v2)
  {
    double result = *(double *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 32) = 1;
    *(double *)(a1 + 8) = result;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 32) & 2) != 0)
  {
LABEL_5:
    double result = *(double *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(a1 + 32) = v3;
    *(double *)(a1 + 16) = result;
    char v2 = *(unsigned char *)(a2 + 32);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    double result = *(double *)(a2 + 24);
    *(unsigned char *)(a1 + 32) = v3 | 4;
    *(double *)(a1 + 24) = result;
  }
  return result;
}

uint64_t sub_227B923AC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 32);
  if (v5)
  {
    PB::TextFormatter::format(this, "calibrated", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 32);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((*(unsigned char *)(a1 + 32) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "lowerBound", *(double *)(a1 + 16));
  if ((*(unsigned char *)(a1 + 32) & 4) != 0) {
LABEL_4:
  }
    PB::TextFormatter::format(this, "upperBound", *(double *)(a1 + 24));
LABEL_5:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B92450(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    do
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
        return v4 == 0;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 3)
      {
        *(unsigned char *)(a1 + 32) |= 4u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
          goto LABEL_32;
        }
        *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
      }
      else if (v20 == 2)
      {
        *(unsigned char *)(a1 + 32) |= 2u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
          goto LABEL_32;
        }
        *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
      }
      else
      {
        if (v20 != 1)
        {
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          goto LABEL_37;
        }
        *(unsigned char *)(a1 + 32) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2))
        {
LABEL_32:
          *((unsigned char *)this + 24) = 1;
          goto LABEL_37;
        }
        *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
      }
      unint64_t v2 = *((void *)this + 1) + 8;
      *((void *)this + 1) = v2;
LABEL_37:
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
    }
    while (v2 < v3 && !*((unsigned char *)this + 24));
  }
  return v4 == 0;
}

uint64_t sub_227B9266C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if ((v4 & 1) == 0)
  {
    if ((*(unsigned char *)(result + 32) & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
    if ((*(unsigned char *)(v3 + 32) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v4 & 4) == 0) {
    return result;
  }
LABEL_7:
  double v5 = *(double *)(v3 + 24);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227B926F8(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC22260;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void sub_227B9271C(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC22260;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227B9279C(PB::Base *a1)
{
  sub_227B9271C(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B927D4(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC22260;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 32) = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  char v2 = *(unsigned char *)(a2 + 32);
  if ((v2 & 2) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 24);
    *(unsigned char *)(result + 32) |= 2u;
    *(_DWORD *)(result + 24) = v4;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 4) == 0)
    {
LABEL_5:
      if ((v2 & 1) == 0) {
        return result;
      }
      goto LABEL_6;
    }
  }
  else if ((*(unsigned char *)(a2 + 32) & 4) == 0)
  {
    goto LABEL_5;
  }
  int v5 = *(_DWORD *)(a2 + 28);
  *(unsigned char *)(result + 32) |= 4u;
  *(_DWORD *)(result + 28) = v5;
  if ((*(unsigned char *)(a2 + 32) & 1) == 0) {
    return result;
  }
LABEL_6:
  uint64_t v3 = *(void *)(a2 + 16);
  *(unsigned char *)(result + 32) |= 1u;
  *(void *)(result + 16) = v3;
  return result;
}

uint64_t sub_227B928E0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "accel");
  }
  char v6 = *(unsigned char *)(a1 + 32);
  if ((v6 & 2) != 0)
  {
    PB::TextFormatter::format(this, "location");
    char v6 = *(unsigned char *)(a1 + 32);
    if ((v6 & 1) == 0)
    {
LABEL_5:
      if ((v6 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
  }
  else if ((*(unsigned char *)(a1 + 32) & 1) == 0)
  {
    goto LABEL_5;
  }
  PB::TextFormatter::format(this, "sensorTime");
  if ((*(unsigned char *)(a1 + 32) & 4) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "sequenceNumber");
LABEL_7:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B929BC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          operator new();
        case 2u:
          *(unsigned char *)(a1 + 32) |= 2u;
          unint64_t v21 = *((void *)this + 1);
          unint64_t v22 = *((void *)this + 2);
          uint64_t v23 = *(void *)this;
          if (v21 <= 0xFFFFFFFFFFFFFFF5 && v21 + 10 <= v22)
          {
            char v24 = 0;
            unsigned int v25 = 0;
            uint64_t v26 = 0;
            do
            {
              unint64_t v27 = v21 + 1;
              *((void *)this + 1) = v21 + 1;
              char v28 = *(unsigned char *)(v23 + v21);
              v26 |= (unint64_t)(v28 & 0x7F) << v24;
              if ((v28 & 0x80) == 0) {
                goto LABEL_72;
              }
              v24 += 7;
              unint64_t v21 = v27;
              BOOL v14 = v25++ > 8;
            }
            while (!v14);
LABEL_52:
            LODWORD(v26) = 0;
            goto LABEL_72;
          }
          char v45 = 0;
          unsigned int v46 = 0;
          uint64_t v26 = 0;
          if (v22 <= v21) {
            unint64_t v22 = *((void *)this + 1);
          }
          while (2)
          {
            if (v22 == v21)
            {
              LODWORD(v26) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v47 = v21 + 1;
              char v48 = *(unsigned char *)(v23 + v21);
              *((void *)this + 1) = v47;
              v26 |= (unint64_t)(v48 & 0x7F) << v45;
              if (v48 < 0)
              {
                v45 += 7;
                unint64_t v21 = v47;
                BOOL v14 = v46++ > 8;
                if (v14) {
                  goto LABEL_52;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v26) = 0;
              }
            }
            break;
          }
LABEL_72:
          *(_DWORD *)(a1 + 24) = v26;
          goto LABEL_79;
        case 3u:
          *(unsigned char *)(a1 + 32) |= 4u;
          unint64_t v29 = *((void *)this + 1);
          unint64_t v30 = *((void *)this + 2);
          uint64_t v31 = *(void *)this;
          if (v29 <= 0xFFFFFFFFFFFFFFF5 && v29 + 10 <= v30)
          {
            char v32 = 0;
            unsigned int v33 = 0;
            uint64_t v34 = 0;
            do
            {
              unint64_t v35 = v29 + 1;
              *((void *)this + 1) = v29 + 1;
              char v36 = *(unsigned char *)(v31 + v29);
              v34 |= (unint64_t)(v36 & 0x7F) << v32;
              if ((v36 & 0x80) == 0) {
                goto LABEL_75;
              }
              v32 += 7;
              unint64_t v29 = v35;
              BOOL v14 = v33++ > 8;
            }
            while (!v14);
LABEL_59:
            LODWORD(v34) = 0;
            goto LABEL_75;
          }
          char v49 = 0;
          unsigned int v50 = 0;
          uint64_t v34 = 0;
          if (v30 <= v29) {
            unint64_t v30 = *((void *)this + 1);
          }
          while (2)
          {
            if (v30 == v29)
            {
              LODWORD(v34) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v51 = v29 + 1;
              char v52 = *(unsigned char *)(v31 + v29);
              *((void *)this + 1) = v51;
              v34 |= (unint64_t)(v52 & 0x7F) << v49;
              if (v52 < 0)
              {
                v49 += 7;
                unint64_t v29 = v51;
                BOOL v14 = v50++ > 8;
                if (v14) {
                  goto LABEL_59;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v34) = 0;
              }
            }
            break;
          }
LABEL_75:
          *(_DWORD *)(a1 + 28) = v34;
          goto LABEL_79;
        case 4u:
          *(unsigned char *)(a1 + 32) |= 1u;
          unint64_t v37 = *((void *)this + 1);
          unint64_t v38 = *((void *)this + 2);
          uint64_t v39 = *(void *)this;
          if (v37 <= 0xFFFFFFFFFFFFFFF5 && v37 + 10 <= v38)
          {
            char v40 = 0;
            unsigned int v41 = 0;
            uint64_t v42 = 0;
            do
            {
              unint64_t v43 = v37 + 1;
              *((void *)this + 1) = v37 + 1;
              char v44 = *(unsigned char *)(v39 + v37);
              v42 |= (unint64_t)(v44 & 0x7F) << v40;
              if ((v44 & 0x80) == 0) {
                goto LABEL_78;
              }
              v40 += 7;
              unint64_t v37 = v43;
              BOOL v14 = v41++ > 8;
            }
            while (!v14);
LABEL_66:
            uint64_t v42 = 0;
            goto LABEL_78;
          }
          char v53 = 0;
          unsigned int v54 = 0;
          uint64_t v42 = 0;
          if (v38 <= v37) {
            unint64_t v38 = *((void *)this + 1);
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          goto LABEL_79;
      }
      while (1)
      {
        if (v38 == v37)
        {
          uint64_t v42 = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_78;
        }
        unint64_t v55 = v37 + 1;
        char v56 = *(unsigned char *)(v39 + v37);
        *((void *)this + 1) = v55;
        v42 |= (unint64_t)(v56 & 0x7F) << v53;
        if ((v56 & 0x80) == 0) {
          break;
        }
        v53 += 7;
        unint64_t v37 = v55;
        BOOL v14 = v54++ > 8;
        if (v14) {
          goto LABEL_66;
        }
      }
      if (*((unsigned char *)this + 24)) {
        uint64_t v42 = 0;
      }
LABEL_78:
      *(void *)(a1 + 16) = v42;
LABEL_79:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B92EB8(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(const PB::Base **)(result + 8);
  if (v4) {
    uint64_t result = PB::Writer::writeSubmessage(this, v4);
  }
  char v5 = *(unsigned char *)(v3 + 32);
  if ((v5 & 2) == 0)
  {
    if ((*(unsigned char *)(v3 + 32) & 4) == 0) {
      goto LABEL_5;
    }
LABEL_8:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(unsigned char *)(v3 + 32) & 1) == 0) {
      return result;
    }
    goto LABEL_9;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  char v5 = *(unsigned char *)(v3 + 32);
  if ((v5 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_5:
  if ((v5 & 1) == 0) {
    return result;
  }
LABEL_9:

  return PB::Writer::writeVarInt(this);
}

void *sub_227B92F58(void *result)
{
  *uint64_t result = &unk_26DC22298;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void sub_227B92F7C(uint64_t a1)
{
  *(void *)a1 = &unk_26DC22298;
  uint64_t v2 = *(void *)(a1 + 24);
  *(void *)(a1 + 24) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = 0;
  if (v3) {
    sub_227B8B690(a1 + 16, v3);
  }
  sub_227B8B6EC((void ***)(a1 + 8), 0);

  PB::Base::~Base((PB::Base *)a1);
}

void sub_227B93020(uint64_t a1)
{
  sub_227B92F7C(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227B93058(void *result, void *a2)
{
  result[1] = 0;
  *uint64_t result = &unk_26DC22298;
  result[2] = 0;
  result[3] = 0;
  if (a2[3]) {
    operator new();
  }
  if (a2[1]) {
    operator new();
  }
  if (a2[2]) {
    operator new();
  }
  return result;
}

uint64_t sub_227B931DC(void *a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (a1[1]) {
    PB::TextFormatter::format();
  }
  if (a1[2]) {
    PB::TextFormatter::format();
  }
  uint64_t v5 = a1[3];
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "config");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B93288(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v19 = v10 >> 3;
      if ((v10 >> 3) == 3) {
        operator new();
      }
      if (v19 == 2) {
        operator new();
      }
      if (v19 == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B93568(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC22340;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_227B93590(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(const PB::Base **)(result + 24);
  if (v4) {
    uint64_t result = PB::Writer::writeSubmessage(this, v4);
  }
  if (*(void *)(v3 + 8)) {
    uint64_t result = PB::Writer::write();
  }
  if (*(void *)(v3 + 16))
  {
    return PB::Writer::write();
  }
  return result;
}

uint64_t sub_227B93608(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC222D0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void sub_227B93630(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B93668(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC222D0;
  *(_DWORD *)(result + 32) = 0;
  char v2 = *(unsigned char *)(a2 + 32);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 32) = 1;
    *(void *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 32) & 0x10) != 0)
  {
LABEL_5:
    char v5 = *(unsigned char *)(a2 + 28);
    v3 |= 0x10u;
    *(unsigned char *)(result + 32) = v3;
    *(unsigned char *)(result + 28) = v5;
    char v2 = *(unsigned char *)(a2 + 32);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(result + 32) = v3;
    *(_DWORD *)(result + 16) = v6;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 4) == 0)
    {
LABEL_8:
      if ((v2 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_13;
    }
  }
  else if ((v2 & 4) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 20);
  v3 |= 4u;
  *(unsigned char *)(result + 32) = v3;
  *(_DWORD *)(result + 20) = v7;
  char v2 = *(unsigned char *)(a2 + 32);
  if ((v2 & 8) == 0)
  {
LABEL_9:
    if ((v2 & 0x20) == 0) {
      return result;
    }
LABEL_14:
    char v9 = *(unsigned char *)(a2 + 29);
    *(unsigned char *)(result + 32) = v3 | 0x20;
    *(unsigned char *)(result + 29) = v9;
    return result;
  }
LABEL_13:
  int v8 = *(_DWORD *)(a2 + 24);
  v3 |= 8u;
  *(unsigned char *)(result + 32) = v3;
  *(_DWORD *)(result + 24) = v8;
  if ((*(unsigned char *)(a2 + 32) & 0x20) != 0) {
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_227B9373C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 0x10) != 0)
  {
    PB::TextFormatter::format(this, "asleep");
    char v5 = *(unsigned char *)(a1 + 32);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((*(unsigned char *)(a1 + 32) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "averageConfidence");
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 0x20) == 0)
  {
LABEL_4:
    if ((v5 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  PB::TextFormatter::format(this, "initialized");
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 4) == 0)
  {
LABEL_5:
    if ((v5 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(this, "rawConfidence", *(float *)(a1 + 20));
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 1) == 0)
  {
LABEL_6:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_15:
  PB::TextFormatter::format(this, "sensorTime");
  if ((*(unsigned char *)(a1 + 32) & 8) != 0) {
LABEL_7:
  }
    PB::TextFormatter::format(this, "sequenceNumber");
LABEL_8:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B93840(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 32) |= 1u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v43 = 0;
                unsigned int v44 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_82;
                  }
                  unint64_t v45 = v20++;
                  char v46 = *(unsigned char *)(v21 + v45);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v46 & 0x7F) << v43;
                  if ((v46 & 0x80) == 0) {
                    break;
                  }
                  v43 += 7;
                  BOOL v14 = v44++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_81;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_81:
                unint64_t v2 = v45 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_82;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_82:
              *(void *)(a1 + 8) = v24;
              goto LABEL_93;
            case 2u:
              *(unsigned char *)(a1 + 32) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v28 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v27 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v28 = v27 != 0;
              }
              *(unsigned char *)(a1 + 28) = v28;
              goto LABEL_93;
            case 3u:
              *(unsigned char *)(a1 + 32) |= 2u;
              unint64_t v29 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v30 = *(void *)this;
              if (v29 > 0xFFFFFFFFFFFFFFF5 || v29 + 10 > v2)
              {
                char v47 = 0;
                unsigned int v48 = 0;
                uint64_t v33 = 0;
                if (v2 <= v29) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v29)
                  {
                    LODWORD(v33) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_87;
                  }
                  unint64_t v49 = v29++;
                  char v50 = *(unsigned char *)(v30 + v49);
                  *((void *)this + 1) = v29;
                  v33 |= (unint64_t)(v50 & 0x7F) << v47;
                  if ((v50 & 0x80) == 0) {
                    break;
                  }
                  v47 += 7;
                  BOOL v14 = v48++ > 8;
                  if (v14)
                  {
                    LODWORD(v33) = 0;
LABEL_86:
                    unint64_t v2 = v49 + 1;
                    goto LABEL_87;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v33) = 0;
                }
                goto LABEL_86;
              }
              char v31 = 0;
              unsigned int v32 = 0;
              uint64_t v33 = 0;
              do
              {
                unint64_t v2 = v29 + 1;
                *((void *)this + 1) = v29 + 1;
                char v34 = *(unsigned char *)(v30 + v29);
                v33 |= (unint64_t)(v34 & 0x7F) << v31;
                if ((v34 & 0x80) == 0) {
                  goto LABEL_87;
                }
                v31 += 7;
                unint64_t v29 = v2;
                BOOL v14 = v32++ > 8;
              }
              while (!v14);
              LODWORD(v33) = 0;
LABEL_87:
              *(_DWORD *)(a1 + 16) = v33;
              goto LABEL_93;
            case 4u:
              *(unsigned char *)(a1 + 32) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_93;
            case 5u:
              *(unsigned char *)(a1 + 32) |= 8u;
              unint64_t v35 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v36 = *(void *)this;
              if (v35 > 0xFFFFFFFFFFFFFFF5 || v35 + 10 > v2)
              {
                char v51 = 0;
                unsigned int v52 = 0;
                uint64_t v39 = 0;
                if (v2 <= v35) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v35)
                  {
                    LODWORD(v39) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_92;
                  }
                  unint64_t v53 = v35++;
                  char v54 = *(unsigned char *)(v36 + v53);
                  *((void *)this + 1) = v35;
                  v39 |= (unint64_t)(v54 & 0x7F) << v51;
                  if ((v54 & 0x80) == 0) {
                    break;
                  }
                  v51 += 7;
                  BOOL v14 = v52++ > 8;
                  if (v14)
                  {
                    LODWORD(v39) = 0;
LABEL_91:
                    unint64_t v2 = v53 + 1;
                    goto LABEL_92;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v39) = 0;
                }
                goto LABEL_91;
              }
              char v37 = 0;
              unsigned int v38 = 0;
              uint64_t v39 = 0;
              do
              {
                unint64_t v2 = v35 + 1;
                *((void *)this + 1) = v35 + 1;
                char v40 = *(unsigned char *)(v36 + v35);
                v39 |= (unint64_t)(v40 & 0x7F) << v37;
                if ((v40 & 0x80) == 0) {
                  goto LABEL_92;
                }
                v37 += 7;
                unint64_t v35 = v2;
                BOOL v14 = v38++ > 8;
              }
              while (!v14);
              LODWORD(v39) = 0;
LABEL_92:
              *(_DWORD *)(a1 + 24) = v39;
LABEL_93:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 6u:
              *(unsigned char *)(a1 + 32) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v42 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v41 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v42 = v41 != 0;
              }
              *(unsigned char *)(a1 + 29) = v42;
              goto LABEL_93;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_93;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B93D64(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 32);
    if ((v4 & 0x10) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((*(unsigned char *)(result + 32) & 0x10) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this);
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 2) == 0)
  {
LABEL_4:
    if ((v4 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(unsigned char *)(v3 + 32) & 0x20) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_11:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 8) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v4 & 0x20) == 0) {
    return result;
  }
LABEL_13:

  return PB::Writer::write(this);
}

uint64_t sub_227B93E44(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC22308;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

void sub_227B93E6C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B93EA4(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC22308;
  *(_DWORD *)(result + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 28);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 28) = 1;
    *(void *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 28) & 2) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(result + 28) = v3;
    *(_DWORD *)(result + 16) = v5;
    char v2 = *(unsigned char *)(a2 + 28);
  }
LABEL_6:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      return result;
    }
LABEL_10:
    int v7 = *(_DWORD *)(a2 + 24);
    *(unsigned char *)(result + 28) = v3 | 8;
    *(_DWORD *)(result + 24) = v7;
    return result;
  }
  int v6 = *(_DWORD *)(a2 + 20);
  v3 |= 4u;
  *(unsigned char *)(result + 28) = v3;
  *(_DWORD *)(result + 20) = v6;
  if ((*(unsigned char *)(a2 + 28) & 8) != 0) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_227B93F40(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "activity");
    char v5 = *(unsigned char *)(a1 + 28);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 28) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "confidenceLevel");
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 1) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "sensorTime");
  if ((*(unsigned char *)(a1 + 28) & 8) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "sequenceNumber");
LABEL_6:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B94004(uint64_t a1, PB::Reader *this)
{
  unint64_t v3 = *((void *)this + 1);
  unint64_t v2 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v3 < v2 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v3 > 0xFFFFFFFFFFFFFFF5 || v3 + 10 > v2)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v3 > v2) {
          unint64_t v2 = v3;
        }
        while (v2 != v3)
        {
          unint64_t v17 = v3 + 1;
          char v18 = *(unsigned char *)(v8 + v3);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v3 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v3 + 1;
          *((void *)this + 1) = v3 + 1;
          char v13 = *(unsigned char *)(v8 + v3);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v3 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 28) |= 1u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v45 = 0;
                unsigned int v46 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v3 = *((void *)this + 1);
                }
                else {
                  unint64_t v3 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v3 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_88;
                  }
                  unint64_t v47 = v20++;
                  char v48 = *(unsigned char *)(v21 + v47);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v48 & 0x7F) << v45;
                  if ((v48 & 0x80) == 0) {
                    break;
                  }
                  v45 += 7;
                  BOOL v14 = v46++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_87;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_87:
                unint64_t v3 = v47 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v3 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_88;
                  }
                  v22 += 7;
                  unint64_t v20 = v3;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_88:
              *(void *)(a1 + 8) = v24;
              goto LABEL_104;
            case 2u:
              *(unsigned char *)(a1 + 28) |= 2u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v49 = 0;
                unsigned int v50 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v3 = *((void *)this + 1);
                }
                else {
                  unint64_t v3 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v3 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_93;
                  }
                  unint64_t v51 = v27++;
                  char v52 = *(unsigned char *)(v28 + v51);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v52 & 0x7F) << v49;
                  if ((v52 & 0x80) == 0) {
                    break;
                  }
                  v49 += 7;
                  BOOL v14 = v50++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_92:
                    unint64_t v3 = v51 + 1;
                    goto LABEL_93;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_92;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v3 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_93;
                }
                v29 += 7;
                unint64_t v27 = v3;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_93:
              *(_DWORD *)(a1 + 16) = v31;
              goto LABEL_104;
            case 3u:
              *(unsigned char *)(a1 + 28) |= 4u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v53 = 0;
                unsigned int v54 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v3 = *((void *)this + 1);
                }
                else {
                  unint64_t v3 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v3 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_98;
                  }
                  unint64_t v55 = v33++;
                  char v56 = *(unsigned char *)(v34 + v55);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v56 & 0x7F) << v53;
                  if ((v56 & 0x80) == 0) {
                    break;
                  }
                  v53 += 7;
                  BOOL v14 = v54++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_97:
                    unint64_t v3 = v55 + 1;
                    goto LABEL_98;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_97;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v3 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_98;
                }
                v35 += 7;
                unint64_t v33 = v3;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_98:
              *(_DWORD *)(a1 + 20) = v37;
              goto LABEL_104;
            case 4u:
              *(unsigned char *)(a1 + 28) |= 8u;
              unint64_t v39 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v40 = *(void *)this;
              if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
              {
                char v57 = 0;
                unsigned int v58 = 0;
                uint64_t v43 = 0;
                if (v2 <= v39) {
                  unint64_t v3 = *((void *)this + 1);
                }
                else {
                  unint64_t v3 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v3 == v39)
                  {
                    LODWORD(v43) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_103;
                  }
                  unint64_t v59 = v39++;
                  char v60 = *(unsigned char *)(v40 + v59);
                  *((void *)this + 1) = v39;
                  v43 |= (unint64_t)(v60 & 0x7F) << v57;
                  if ((v60 & 0x80) == 0) {
                    break;
                  }
                  v57 += 7;
                  BOOL v14 = v58++ > 8;
                  if (v14)
                  {
                    LODWORD(v43) = 0;
LABEL_102:
                    unint64_t v3 = v59 + 1;
                    goto LABEL_103;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v43) = 0;
                }
                goto LABEL_102;
              }
              char v41 = 0;
              unsigned int v42 = 0;
              uint64_t v43 = 0;
              do
              {
                unint64_t v3 = v39 + 1;
                *((void *)this + 1) = v39 + 1;
                char v44 = *(unsigned char *)(v40 + v39);
                v43 |= (unint64_t)(v44 & 0x7F) << v41;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_103;
                }
                v41 += 7;
                unint64_t v39 = v3;
                BOOL v14 = v42++ > 8;
              }
              while (!v14);
              LODWORD(v43) = 0;
LABEL_103:
              *(_DWORD *)(a1 + 24) = v43;
LABEL_104:
              int v4 = *((unsigned __int8 *)this + 24);
              if (v3 >= v2 || *((unsigned char *)this + 24)) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v3 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              goto LABEL_104;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B94534(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 28);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::writeVarInt(this);
      if ((*(unsigned char *)(v3 + 28) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 28) & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 8) == 0) {
    return result;
  }
LABEL_9:

  return PB::Writer::writeVarInt(this);
}

void sub_227B945DC(PB::Base *this)
{
  *(void *)this = &unk_26DC22340;
  uint64_t v4 = *((void *)this + 2);
  unint64_t v2 = (void *)((char *)this + 16);
  uint64_t v3 = v4;
  *unint64_t v2 = 0;
  if (v4) {
    sub_227B8B690((uint64_t)v2, v3);
  }
  uint64_t v5 = *((void *)this + 1);
  *((void *)this + 1) = 0;
  if (v5) {
    sub_227B8B690((uint64_t)this + 8, v5);
  }

  PB::Base::~Base(this);
}

void sub_227B94654(PB::Base *a1)
{
  sub_227B945DC(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B9468C(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC22340;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  if ((*(unsigned char *)(a2 + 32) & 2) != 0)
  {
    int v2 = *(_DWORD *)(a2 + 28);
    *(unsigned char *)(result + 32) = 2;
    *(_DWORD *)(result + 28) = v2;
  }
  if (*(void *)(a2 + 16)) {
    operator new();
  }
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  if (*(unsigned char *)(a2 + 32))
  {
    int v3 = *(_DWORD *)(a2 + 24);
    *(unsigned char *)(result + 32) |= 1u;
    *(_DWORD *)(result + 24) = v3;
  }
  return result;
}

uint64_t sub_227B947F8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(void *)(a1 + 8)) {
    PB::TextFormatter::format();
  }
  if (*(unsigned char *)(a1 + 32)) {
    PB::TextFormatter::format(this, "hardwareModel");
  }
  if (*(void *)(a1 + 16)) {
    PB::TextFormatter::format();
  }
  if ((*(unsigned char *)(a1 + 32) & 2) != 0) {
    PB::TextFormatter::format(this, "side");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B948A4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 32) |= 2u;
          unint64_t v20 = *((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
          uint64_t v22 = *(void *)this;
          if (v20 <= 0xFFFFFFFFFFFFFFF5 && v20 + 10 <= v21)
          {
            char v23 = 0;
            unsigned int v24 = 0;
            uint64_t v25 = 0;
            do
            {
              unint64_t v26 = v20 + 1;
              *((void *)this + 1) = v20 + 1;
              char v27 = *(unsigned char *)(v22 + v20);
              v25 |= (unint64_t)(v27 & 0x7F) << v23;
              if ((v27 & 0x80) == 0) {
                goto LABEL_57;
              }
              v23 += 7;
              unint64_t v20 = v26;
              BOOL v14 = v24++ > 8;
            }
            while (!v14);
LABEL_46:
            LODWORD(v25) = 0;
            goto LABEL_57;
          }
          char v37 = 0;
          unsigned int v38 = 0;
          uint64_t v25 = 0;
          if (v21 <= v20) {
            unint64_t v21 = *((void *)this + 1);
          }
          while (2)
          {
            if (v21 == v20)
            {
              LODWORD(v25) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v39 = v20 + 1;
              char v40 = *(unsigned char *)(v22 + v20);
              *((void *)this + 1) = v39;
              v25 |= (unint64_t)(v40 & 0x7F) << v37;
              if (v40 < 0)
              {
                v37 += 7;
                unint64_t v20 = v39;
                BOOL v14 = v38++ > 8;
                if (v14) {
                  goto LABEL_46;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v25) = 0;
              }
            }
            break;
          }
LABEL_57:
          *(_DWORD *)(a1 + 28) = v25;
          goto LABEL_62;
        case 2u:
          operator new();
        case 3u:
          operator new();
        case 4u:
          *(unsigned char *)(a1 + 32) |= 1u;
          unint64_t v29 = *((void *)this + 1);
          unint64_t v30 = *((void *)this + 2);
          uint64_t v31 = *(void *)this;
          if (v29 <= 0xFFFFFFFFFFFFFFF5 && v29 + 10 <= v30)
          {
            char v32 = 0;
            unsigned int v33 = 0;
            uint64_t v34 = 0;
            do
            {
              unint64_t v35 = v29 + 1;
              *((void *)this + 1) = v29 + 1;
              char v36 = *(unsigned char *)(v31 + v29);
              v34 |= (unint64_t)(v36 & 0x7F) << v32;
              if ((v36 & 0x80) == 0) {
                goto LABEL_61;
              }
              v32 += 7;
              unint64_t v29 = v35;
              BOOL v14 = v33++ > 8;
            }
            while (!v14);
LABEL_53:
            LODWORD(v34) = 0;
            goto LABEL_61;
          }
          char v41 = 0;
          unsigned int v42 = 0;
          uint64_t v34 = 0;
          if (v30 <= v29) {
            unint64_t v30 = *((void *)this + 1);
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          goto LABEL_62;
      }
      while (1)
      {
        if (v30 == v29)
        {
          LODWORD(v34) = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_61;
        }
        unint64_t v43 = v29 + 1;
        char v44 = *(unsigned char *)(v31 + v29);
        *((void *)this + 1) = v43;
        v34 |= (unint64_t)(v44 & 0x7F) << v41;
        if ((v44 & 0x80) == 0) {
          break;
        }
        v41 += 7;
        unint64_t v29 = v43;
        BOOL v14 = v42++ > 8;
        if (v14) {
          goto LABEL_53;
        }
      }
      if (*((unsigned char *)this + 24)) {
        LODWORD(v34) = 0;
      }
LABEL_61:
      *(_DWORD *)(a1 + 24) = v34;
LABEL_62:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B94CB4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  if ((*(unsigned char *)(result + 32) & 2) != 0) {
    uint64_t result = PB::Writer::writeVarInt(this);
  }
  if (*(void *)(v3 + 16)) {
    uint64_t result = PB::Writer::write();
  }
  if (*(void *)(v3 + 8)) {
    uint64_t result = PB::Writer::write();
  }
  if (*(unsigned char *)(v3 + 32))
  {
    return PB::Writer::writeVarInt(this);
  }
  return result;
}

uint64_t sub_227B94D48(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC22378;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void sub_227B94D6C(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC22378;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227B94DEC(PB::Base *a1)
{
  sub_227B94D6C(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B94E24(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC22378;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 24) = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  char v2 = *(unsigned char *)(a2 + 24);
  if (v2)
  {
    int v3 = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(result + 24) |= 1u;
    *(_DWORD *)(result + 16) = v3;
    char v2 = *(unsigned char *)(a2 + 24);
  }
  if ((v2 & 2) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 20);
    *(unsigned char *)(result + 24) |= 2u;
    *(_DWORD *)(result + 20) = v4;
  }
  return result;
}

uint64_t sub_227B94F0C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "dm");
  }
  char v6 = *(unsigned char *)(a1 + 24);
  if (v6)
  {
    PB::TextFormatter::format(this, "location");
    char v6 = *(unsigned char *)(a1 + 24);
  }
  if ((v6 & 2) != 0) {
    PB::TextFormatter::format(this, "sequenceNumber");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B94FC0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 3)
      {
        *(unsigned char *)(a1 + 24) |= 2u;
        unint64_t v21 = *((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        uint64_t v23 = *(void *)this;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v22)
        {
          char v38 = 0;
          unsigned int v39 = 0;
          uint64_t v26 = 0;
          if (v22 <= v21) {
            unint64_t v22 = *((void *)this + 1);
          }
          while (1)
          {
            if (v22 == v21)
            {
              LODWORD(v26) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_59;
            }
            unint64_t v40 = v21 + 1;
            char v41 = *(unsigned char *)(v23 + v21);
            *((void *)this + 1) = v40;
            v26 |= (unint64_t)(v41 & 0x7F) << v38;
            if ((v41 & 0x80) == 0) {
              break;
            }
            v38 += 7;
            unint64_t v21 = v40;
            BOOL v14 = v39++ > 8;
            if (v14)
            {
LABEL_47:
              LODWORD(v26) = 0;
              goto LABEL_59;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v26) = 0;
          }
        }
        else
        {
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v26 = 0;
          while (1)
          {
            unint64_t v27 = v21 + 1;
            *((void *)this + 1) = v21 + 1;
            char v28 = *(unsigned char *)(v23 + v21);
            v26 |= (unint64_t)(v28 & 0x7F) << v24;
            if ((v28 & 0x80) == 0) {
              break;
            }
            v24 += 7;
            unint64_t v21 = v27;
            BOOL v14 = v25++ > 8;
            if (v14) {
              goto LABEL_47;
            }
          }
        }
LABEL_59:
        *(_DWORD *)(a1 + 20) = v26;
      }
      else if (v20 == 2)
      {
        *(unsigned char *)(a1 + 24) |= 1u;
        unint64_t v29 = *((void *)this + 1);
        unint64_t v30 = *((void *)this + 2);
        uint64_t v31 = *(void *)this;
        if (v29 > 0xFFFFFFFFFFFFFFF5 || v29 + 10 > v30)
        {
          char v42 = 0;
          unsigned int v43 = 0;
          uint64_t v34 = 0;
          if (v30 <= v29) {
            unint64_t v30 = *((void *)this + 1);
          }
          while (1)
          {
            if (v30 == v29)
            {
              LODWORD(v34) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_62;
            }
            unint64_t v44 = v29 + 1;
            char v45 = *(unsigned char *)(v31 + v29);
            *((void *)this + 1) = v44;
            v34 |= (unint64_t)(v45 & 0x7F) << v42;
            if ((v45 & 0x80) == 0) {
              break;
            }
            v42 += 7;
            unint64_t v29 = v44;
            BOOL v14 = v43++ > 8;
            if (v14)
            {
LABEL_54:
              LODWORD(v34) = 0;
              goto LABEL_62;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v34) = 0;
          }
        }
        else
        {
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v34 = 0;
          while (1)
          {
            unint64_t v35 = v29 + 1;
            *((void *)this + 1) = v29 + 1;
            char v36 = *(unsigned char *)(v31 + v29);
            v34 |= (unint64_t)(v36 & 0x7F) << v32;
            if ((v36 & 0x80) == 0) {
              break;
            }
            v32 += 7;
            unint64_t v29 = v35;
            BOOL v14 = v33++ > 8;
            if (v14) {
              goto LABEL_54;
            }
          }
        }
LABEL_62:
        *(_DWORD *)(a1 + 16) = v34;
      }
      else
      {
        if (v20 == 1) {
          operator new();
        }
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B953B4(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC23450;
  *(_DWORD *)(result + 124) = 0;
  return result;
}

uint64_t sub_227B953D8(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(const PB::Base **)(result + 8);
  if (v4) {
    uint64_t result = PB::Writer::writeSubmessage(this, v4);
  }
  char v5 = *(unsigned char *)(v3 + 24);
  if (v5)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v5 = *(unsigned char *)(v3 + 24);
  }
  if ((v5 & 2) != 0)
  {
    return PB::Writer::writeVarInt(this);
  }
  return result;
}

double sub_227B95458(uint64_t a1)
{
  *(void *)a1 = &unk_26DC223B0;
  *(_DWORD *)(a1 + 44) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  return result;
}

void sub_227B95488(PB::Base *this)
{
  *(void *)this = &unk_26DC223B0;
  uint64_t v2 = *((void *)this + 4);
  *((void *)this + 4) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 2) = v3;
    operator delete(v3);
  }

  PB::Base::~Base(this);
}

void sub_227B9551C(PB::Base *a1)
{
  sub_227B95488(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B95554(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC223B0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_DWORD *)(a1 + 44) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  if (*(void *)(a2 + 32)) {
    operator new();
  }
  if (*(unsigned char *)(a2 + 44))
  {
    char v3 = *(unsigned char *)(a2 + 40);
    *(unsigned char *)(a1 + 44) |= 1u;
    *(unsigned char *)(a1 + 40) = v3;
  }
  if (a1 != a2) {
    sub_227B8BA68((char *)(a1 + 8), *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  return a1;
}

uint64_t sub_227B95650(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 32);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "config");
  }
  char v6 = *(float **)(a1 + 8);
  int v7 = *(float **)(a1 + 16);
  while (v6 != v7)
  {
    float v8 = *v6++;
    PB::TextFormatter::format(this, "headToHeadsetTransformation", v8);
  }
  if (*(unsigned char *)(a1 + 44)) {
    PB::TextFormatter::format(this, "isH2HValid");
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227B95724(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    float v8 = (void **)(a1 + 8);
    uint64_t v9 = a1 + 24;
    while (1)
    {
      uint64_t v10 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v11 = 0;
      unsigned int v12 = 0;
      unint64_t v13 = 0;
      while (1)
      {
        unint64_t v14 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v15 = *(unsigned char *)(v10 + v2);
        v13 |= (unint64_t)(v15 & 0x7F) << v11;
        if ((v15 & 0x80) == 0) {
          break;
        }
        v11 += 7;
        unint64_t v2 = v14;
        if (v12++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      if ((v13 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v22 = v13 >> 3;
      if ((v13 >> 3) == 3)
      {
        if ((v13 & 7) == 2)
        {
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v23 = *((void *)this + 1);
          unint64_t v24 = *((void *)this + 2);
          while (v23 < v24 && !*((unsigned char *)this + 24))
          {
            uint64_t v26 = *(char **)(a1 + 16);
            unint64_t v25 = *(void *)(a1 + 24);
            if ((unint64_t)v26 >= v25)
            {
              char v28 = (char *)*v8;
              uint64_t v29 = (v26 - (unsigned char *)*v8) >> 2;
              unint64_t v30 = v29 + 1;
              if ((unint64_t)(v29 + 1) >> 62) {
                goto LABEL_86;
              }
              uint64_t v31 = v25 - (void)v28;
              if (v31 >> 1 > v30) {
                unint64_t v30 = v31 >> 1;
              }
              if ((unint64_t)v31 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v32 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v32 = v30;
              }
              if (v32)
              {
                unsigned int v33 = (char *)sub_227B8BBB8(v9, v32);
                char v28 = *(char **)(a1 + 8);
                uint64_t v26 = *(char **)(a1 + 16);
              }
              else
              {
                unsigned int v33 = 0;
              }
              uint64_t v34 = &v33[4 * v29];
              *(_DWORD *)uint64_t v34 = 0;
              unint64_t v27 = v34 + 4;
              while (v26 != v28)
              {
                int v35 = *((_DWORD *)v26 - 1);
                v26 -= 4;
                *((_DWORD *)v34 - 1) = v35;
                v34 -= 4;
              }
              *(void *)(a1 + 8) = v34;
              *(void *)(a1 + 16) = v27;
              *(void *)(a1 + 24) = &v33[4 * v32];
              if (v28) {
                operator delete(v28);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v26 = 0;
              unint64_t v27 = v26 + 4;
            }
            *(void *)(a1 + 16) = v27;
            unint64_t v36 = *((void *)this + 1);
            if (v36 > 0xFFFFFFFFFFFFFFFBLL || v36 + 4 > *((void *)this + 2))
            {
              *((unsigned char *)this + 24) = 1;
              break;
            }
            *(v27 - 1) = *(_DWORD *)(*(void *)this + v36);
            unint64_t v24 = *((void *)this + 2);
            unint64_t v23 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v23;
          }
          PB::Reader::recallMark();
        }
        else
        {
          char v42 = *(char **)(a1 + 16);
          unint64_t v41 = *(void *)(a1 + 24);
          if ((unint64_t)v42 >= v41)
          {
            unint64_t v44 = (char *)*v8;
            uint64_t v45 = (v42 - (unsigned char *)*v8) >> 2;
            unint64_t v46 = v45 + 1;
            if ((unint64_t)(v45 + 1) >> 62) {
LABEL_86:
            }
              sub_227B8B89C();
            uint64_t v47 = v41 - (void)v44;
            if (v47 >> 1 > v46) {
              unint64_t v46 = v47 >> 1;
            }
            if ((unint64_t)v47 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v48 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v48 = v46;
            }
            if (v48)
            {
              char v49 = (char *)sub_227B8BBB8(v9, v48);
              unint64_t v44 = *(char **)(a1 + 8);
              char v42 = *(char **)(a1 + 16);
            }
            else
            {
              char v49 = 0;
            }
            unsigned int v50 = &v49[4 * v45];
            *(_DWORD *)unsigned int v50 = 0;
            unsigned int v43 = v50 + 4;
            while (v42 != v44)
            {
              int v51 = *((_DWORD *)v42 - 1);
              v42 -= 4;
              *((_DWORD *)v50 - 1) = v51;
              v50 -= 4;
            }
            *(void *)(a1 + 8) = v50;
            *(void *)(a1 + 16) = v43;
            *(void *)(a1 + 24) = &v49[4 * v48];
            if (v44) {
              operator delete(v44);
            }
          }
          else
          {
            *(_DWORD *)char v42 = 0;
            unsigned int v43 = v42 + 4;
          }
          *(void *)(a1 + 16) = v43;
          unint64_t v52 = *((void *)this + 1);
          if (v52 <= 0xFFFFFFFFFFFFFFFBLL && v52 + 4 <= *((void *)this + 2))
          {
            *(v43 - 1) = *(_DWORD *)(*(void *)this + v52);
            *((void *)this + 1) += 4;
          }
          else
          {
            *((unsigned char *)this + 24) = 1;
          }
        }
      }
      else if (v22 == 2)
      {
        *(unsigned char *)(a1 + 44) |= 1u;
        unint64_t v37 = *((void *)this + 1);
        if (v37 >= *((void *)this + 2))
        {
          BOOL v40 = 0;
          *((unsigned char *)this + 24) = 1;
        }
        else
        {
          unint64_t v38 = v37 + 1;
          int v39 = *(unsigned __int8 *)(*(void *)this + v37);
          *((void *)this + 1) = v38;
          BOOL v40 = v39 != 0;
        }
        *(unsigned char *)(a1 + 40) = v40;
      }
      else
      {
        if (v22 == 1) {
          operator new();
        }
        if ((PB::Reader::skip(this) & 1) == 0) {
          return 0;
        }
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v13 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v19 = v2 + 1;
      char v20 = *(unsigned char *)(v10 + v2);
      *((void *)this + 1) = v19;
      v13 |= (unint64_t)(v20 & 0x7F) << v17;
      if ((v20 & 0x80) == 0) {
        goto LABEL_21;
      }
      v17 += 7;
      unint64_t v2 = v19;
      if (v18++ >= 9)
      {
LABEL_20:
        unint64_t v13 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B95BA4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(const PB::Base **)(result + 32);
  if (v4) {
    double result = PB::Writer::writeSubmessage(this, v4);
  }
  if (*(unsigned char *)(v3 + 44)) {
    double result = PB::Writer::write(this);
  }
  char v6 = *(float **)(v3 + 8);
  uint64_t v5 = *(float **)(v3 + 16);
  while (v6 != v5)
  {
    float v7 = *v6++;
    double result = PB::Writer::write(this, v7);
  }
  return result;
}

uint64_t sub_227B95C1C(uint64_t result)
{
  *(void *)double result = &unk_26DC223E8;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 36) = 0;
  return result;
}

void sub_227B95C40(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC223E8;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227B95CC0(PB::Base *a1)
{
  sub_227B95C40(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B95CF8(uint64_t result, uint64_t a2)
{
  *(void *)double result = &unk_26DC223E8;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 36) = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  char v2 = *(unsigned char *)(a2 + 36);
  if ((v2 & 2) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 24);
    *(unsigned char *)(result + 36) |= 2u;
    *(_DWORD *)(result + 24) = v4;
    char v2 = *(unsigned char *)(a2 + 36);
    if ((v2 & 4) == 0)
    {
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a2 + 36) & 4) == 0)
  {
    goto LABEL_5;
  }
  int v5 = *(_DWORD *)(a2 + 28);
  *(unsigned char *)(result + 36) |= 4u;
  *(_DWORD *)(result + 28) = v5;
  char v2 = *(unsigned char *)(a2 + 36);
  if ((v2 & 8) == 0)
  {
LABEL_6:
    if ((v2 & 1) == 0) {
      return result;
    }
    goto LABEL_7;
  }
LABEL_11:
  int v6 = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(result + 36) |= 8u;
  *(_DWORD *)(result + 32) = v6;
  if ((*(unsigned char *)(a2 + 36) & 1) == 0) {
    return result;
  }
LABEL_7:
  uint64_t v3 = *(void *)(a2 + 16);
  *(unsigned char *)(result + 36) |= 1u;
  *(void *)(result + 16) = v3;
  return result;
}

uint64_t sub_227B95E24(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "gyro");
  }
  char v6 = *(unsigned char *)(a1 + 36);
  if ((v6 & 2) != 0)
  {
    PB::TextFormatter::format(this, "location");
    char v6 = *(unsigned char *)(a1 + 36);
    if ((v6 & 1) == 0)
    {
LABEL_5:
      if ((v6 & 4) == 0) {
        goto LABEL_6;
      }
      goto LABEL_13;
    }
  }
  else if ((*(unsigned char *)(a1 + 36) & 1) == 0)
  {
    goto LABEL_5;
  }
  PB::TextFormatter::format(this, "sensorTime");
  char v6 = *(unsigned char *)(a1 + 36);
  if ((v6 & 4) == 0)
  {
LABEL_6:
    if ((v6 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_13:
  PB::TextFormatter::format(this, "sequenceNumber");
  if ((*(unsigned char *)(a1 + 36) & 8) != 0) {
LABEL_7:
  }
    PB::TextFormatter::format(this, "temp", *(float *)(a1 + 32));
LABEL_8:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B95F20(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          operator new();
        case 2u:
          *(unsigned char *)(a1 + 36) |= 2u;
          unint64_t v21 = *((void *)this + 1);
          unint64_t v22 = *((void *)this + 2);
          uint64_t v23 = *(void *)this;
          if (v21 <= 0xFFFFFFFFFFFFFFF5 && v21 + 10 <= v22)
          {
            char v24 = 0;
            unsigned int v25 = 0;
            uint64_t v26 = 0;
            do
            {
              unint64_t v27 = v21 + 1;
              *((void *)this + 1) = v21 + 1;
              char v28 = *(unsigned char *)(v23 + v21);
              v26 |= (unint64_t)(v28 & 0x7F) << v24;
              if ((v28 & 0x80) == 0) {
                goto LABEL_76;
              }
              v24 += 7;
              unint64_t v21 = v27;
              BOOL v14 = v25++ > 8;
            }
            while (!v14);
LABEL_55:
            LODWORD(v26) = 0;
            goto LABEL_76;
          }
          char v46 = 0;
          unsigned int v47 = 0;
          uint64_t v26 = 0;
          if (v22 <= v21) {
            unint64_t v22 = *((void *)this + 1);
          }
          while (2)
          {
            if (v22 == v21)
            {
              LODWORD(v26) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v48 = v21 + 1;
              char v49 = *(unsigned char *)(v23 + v21);
              *((void *)this + 1) = v48;
              v26 |= (unint64_t)(v49 & 0x7F) << v46;
              if (v49 < 0)
              {
                v46 += 7;
                unint64_t v21 = v48;
                BOOL v14 = v47++ > 8;
                if (v14) {
                  goto LABEL_55;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v26) = 0;
              }
            }
            break;
          }
LABEL_76:
          *(_DWORD *)(a1 + 24) = v26;
          goto LABEL_83;
        case 3u:
          *(unsigned char *)(a1 + 36) |= 4u;
          unint64_t v29 = *((void *)this + 1);
          unint64_t v30 = *((void *)this + 2);
          uint64_t v31 = *(void *)this;
          if (v29 <= 0xFFFFFFFFFFFFFFF5 && v29 + 10 <= v30)
          {
            char v32 = 0;
            unsigned int v33 = 0;
            uint64_t v34 = 0;
            do
            {
              unint64_t v35 = v29 + 1;
              *((void *)this + 1) = v29 + 1;
              char v36 = *(unsigned char *)(v31 + v29);
              v34 |= (unint64_t)(v36 & 0x7F) << v32;
              if ((v36 & 0x80) == 0) {
                goto LABEL_79;
              }
              v32 += 7;
              unint64_t v29 = v35;
              BOOL v14 = v33++ > 8;
            }
            while (!v14);
LABEL_62:
            LODWORD(v34) = 0;
            goto LABEL_79;
          }
          char v50 = 0;
          unsigned int v51 = 0;
          uint64_t v34 = 0;
          if (v30 <= v29) {
            unint64_t v30 = *((void *)this + 1);
          }
          while (2)
          {
            if (v30 == v29)
            {
              LODWORD(v34) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v52 = v29 + 1;
              char v53 = *(unsigned char *)(v31 + v29);
              *((void *)this + 1) = v52;
              v34 |= (unint64_t)(v53 & 0x7F) << v50;
              if (v53 < 0)
              {
                v50 += 7;
                unint64_t v29 = v52;
                BOOL v14 = v51++ > 8;
                if (v14) {
                  goto LABEL_62;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v34) = 0;
              }
            }
            break;
          }
LABEL_79:
          *(_DWORD *)(a1 + 28) = v34;
          goto LABEL_83;
        case 4u:
          *(unsigned char *)(a1 + 36) |= 8u;
          unint64_t v37 = *((void *)this + 1);
          if (v37 <= 0xFFFFFFFFFFFFFFFBLL && v37 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v37);
            *((void *)this + 1) += 4;
          }
          else
          {
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_83;
        case 5u:
          *(unsigned char *)(a1 + 36) |= 1u;
          unint64_t v38 = *((void *)this + 1);
          unint64_t v39 = *((void *)this + 2);
          uint64_t v40 = *(void *)this;
          if (v38 <= 0xFFFFFFFFFFFFFFF5 && v38 + 10 <= v39)
          {
            char v41 = 0;
            unsigned int v42 = 0;
            uint64_t v43 = 0;
            do
            {
              unint64_t v44 = v38 + 1;
              *((void *)this + 1) = v38 + 1;
              char v45 = *(unsigned char *)(v40 + v38);
              v43 |= (unint64_t)(v45 & 0x7F) << v41;
              if ((v45 & 0x80) == 0) {
                goto LABEL_82;
              }
              v41 += 7;
              unint64_t v38 = v44;
              BOOL v14 = v42++ > 8;
            }
            while (!v14);
LABEL_69:
            uint64_t v43 = 0;
            goto LABEL_82;
          }
          char v54 = 0;
          unsigned int v55 = 0;
          uint64_t v43 = 0;
          if (v39 <= v38) {
            unint64_t v39 = *((void *)this + 1);
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          goto LABEL_83;
      }
      while (1)
      {
        if (v39 == v38)
        {
          uint64_t v43 = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_82;
        }
        unint64_t v56 = v38 + 1;
        char v57 = *(unsigned char *)(v40 + v38);
        *((void *)this + 1) = v56;
        v43 |= (unint64_t)(v57 & 0x7F) << v54;
        if ((v57 & 0x80) == 0) {
          break;
        }
        v54 += 7;
        unint64_t v38 = v56;
        BOOL v14 = v55++ > 8;
        if (v14) {
          goto LABEL_69;
        }
      }
      if (*((unsigned char *)this + 24)) {
        uint64_t v43 = 0;
      }
LABEL_82:
      *(void *)(a1 + 16) = v43;
LABEL_83:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B96450(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(const PB::Base **)(result + 8);
  if (v4) {
    uint64_t result = PB::Writer::writeSubmessage(this, v4);
  }
  char v5 = *(unsigned char *)(v3 + 36);
  if ((v5 & 2) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v5 = *(unsigned char *)(v3 + 36);
    if ((v5 & 4) == 0)
    {
LABEL_5:
      if ((v5 & 8) == 0) {
        goto LABEL_6;
      }
LABEL_10:
      uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
      if ((*(unsigned char *)(v3 + 36) & 1) == 0) {
        return result;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(v3 + 36) & 4) == 0)
  {
    goto LABEL_5;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  char v5 = *(unsigned char *)(v3 + 36);
  if ((v5 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_6:
  if ((v5 & 1) == 0) {
    return result;
  }
LABEL_11:

  return PB::Writer::writeVarInt(this);
}

void *sub_227B9650C(void *result)
{
  *uint64_t result = &unk_26DC22420;
  result[1] = 0;
  return result;
}

void sub_227B9652C(PB::Base *this)
{
  *(void *)this = &unk_26DC22420;
  uint64_t v4 = *((void *)this + 1);
  unint64_t v2 = (void *)((char *)this + 8);
  uint64_t v3 = v4;
  *unint64_t v2 = 0;
  if (v4) {
    sub_227B8B690((uint64_t)v2, v3);
  }

  PB::Base::~Base(this);
}

void sub_227B96590(PB::Base *a1)
{
  sub_227B9652C(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227B965C8(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC22420;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227B96688(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(void *)(a1 + 8)) {
    PB::TextFormatter::format();
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B966E4(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B96888(uint64_t result)
{
  if (*(void *)(result + 8)) {
    return PB::Writer::write();
  }
  return result;
}

void *sub_227B968A4(void *result)
{
  *uint64_t result = &unk_26DC22458;
  result[1] = 0;
  return result;
}

void sub_227B968C4(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC22458;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227B96944(PB::Base *a1)
{
  sub_227B968C4(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227B9697C(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC22458;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227B96A24(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "config");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B96AA0(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B96CBC(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

void *sub_227B96CD8(void *result)
{
  *uint64_t result = &unk_26DC22490;
  result[1] = 0;
  return result;
}

void sub_227B96CF8(PB::Base *this)
{
  *(void *)this = &unk_26DC22490;
  uint64_t v4 = *((void *)this + 1);
  unint64_t v2 = (void *)((char *)this + 8);
  uint64_t v3 = v4;
  *unint64_t v2 = 0;
  if (v4) {
    sub_227B8B690((uint64_t)v2, v3);
  }

  PB::Base::~Base(this);
}

void sub_227B96D5C(PB::Base *a1)
{
  sub_227B96CF8(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227B96D94(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC22490;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227B96E54(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(void *)(a1 + 8)) {
    PB::TextFormatter::format();
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B96EB0(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B97054(uint64_t result)
{
  if (*(void *)(result + 8)) {
    return PB::Writer::write();
  }
  return result;
}

uint64_t sub_227B97070(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC224C8;
  *(_DWORD *)(result + 36) = 0;
  return result;
}

void sub_227B97098(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B970D0(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC224C8;
  *(_DWORD *)(result + 36) = 0;
  char v2 = *(unsigned char *)(a2 + 36);
  if ((v2 & 2) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 16);
    char v3 = 2;
    *(unsigned char *)(result + 36) = 2;
    *(void *)(result + 16) = v4;
    char v2 = *(unsigned char *)(a2 + 36);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 36) & 8) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 28);
    v3 |= 8u;
    *(unsigned char *)(result + 36) = v3;
    *(_DWORD *)(result + 28) = v5;
    char v2 = *(unsigned char *)(a2 + 36);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 24);
    v3 |= 4u;
    *(unsigned char *)(result + 36) = v3;
    *(_DWORD *)(result + 24) = v6;
    char v2 = *(unsigned char *)(a2 + 36);
    if ((v2 & 1) == 0)
    {
LABEL_8:
      if ((v2 & 0x10) == 0) {
        return result;
      }
LABEL_12:
      int v8 = *(_DWORD *)(a2 + 32);
      *(unsigned char *)(result + 36) = v3 | 0x10;
      *(_DWORD *)(result + 32) = v8;
      return result;
    }
  }
  else if ((v2 & 1) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(unsigned char *)(result + 36) = v3;
  *(void *)(result + 8) = v7;
  if ((*(unsigned char *)(a2 + 36) & 0x10) != 0) {
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_227B97188(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 36);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "confidence", *(float *)(a1 + 24));
    char v5 = *(unsigned char *)(a1 + 36);
    if ((v5 & 8) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 36) & 8) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "heartRate");
  char v5 = *(unsigned char *)(a1 + 36);
  if ((v5 & 1) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(this, "sensorTime", *(double *)(a1 + 8));
  char v5 = *(unsigned char *)(a1 + 36);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 2) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(this, "sequenceNumber");
  if ((*(unsigned char *)(a1 + 36) & 2) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 16));
LABEL_7:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B9726C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 36) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_39;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_62;
            case 2u:
              *(unsigned char *)(a1 + 36) |= 8u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v33 = 0;
                unsigned int v34 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_68;
                  }
                  unint64_t v35 = v21++;
                  char v36 = *(unsigned char *)(v22 + v35);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v36 & 0x7F) << v33;
                  if ((v36 & 0x80) == 0) {
                    break;
                  }
                  v33 += 7;
                  BOOL v14 = v34++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_67:
                    unint64_t v2 = v35 + 1;
                    goto LABEL_68;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_67;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_68;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_68:
              *(_DWORD *)(a1 + 28) = v25;
              goto LABEL_74;
            case 3u:
              *(unsigned char *)(a1 + 36) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_39;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              unint64_t v2 = *((void *)this + 1) + 4;
              goto LABEL_63;
            case 4u:
              *(unsigned char *)(a1 + 36) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
LABEL_62:
                unint64_t v2 = *((void *)this + 1) + 8;
LABEL_63:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_39:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_74;
            case 5u:
              *(unsigned char *)(a1 + 36) |= 0x10u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v37 = 0;
                unsigned int v38 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_73;
                  }
                  unint64_t v39 = v27++;
                  char v40 = *(unsigned char *)(v28 + v39);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v40 & 0x7F) << v37;
                  if ((v40 & 0x80) == 0) {
                    break;
                  }
                  v37 += 7;
                  BOOL v14 = v38++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_72:
                    unint64_t v2 = v39 + 1;
                    goto LABEL_73;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_72;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_73;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_73:
              *(_DWORD *)(a1 + 32) = v31;
LABEL_74:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_74;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B97690(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 36);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 16));
    char v4 = *(unsigned char *)(v3 + 36);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 36) & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 36);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 1) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
    if ((*(unsigned char *)(v3 + 36) & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
  char v4 = *(unsigned char *)(v3 + 36);
  if (v4) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 0x10) == 0) {
    return result;
  }
LABEL_11:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227B97754(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC22500;
  *(_DWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void sub_227B97780(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227B977B8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC22500;
  *(_DWORD *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  if (*(unsigned char *)(a2 + 16))
  {
    int v3 = *(_DWORD *)(a2 + 8);
    *(unsigned char *)(a1 + 16) = 1;
    *(_DWORD *)(a1 + 8) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 16) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 16) & 2) != 0)
  {
LABEL_5:
    float result = *(float *)(a2 + 12);
    *(unsigned char *)(a1 + 16) = v2;
    *(float *)(a1 + 12) = result;
  }
  return result;
}

uint64_t sub_227B97820(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 16);
  if (v5)
  {
    PB::TextFormatter::format(this, "status");
    char v5 = *(unsigned char *)(a1 + 16);
  }
  if ((v5 & 2) != 0) {
    PB::TextFormatter::format(this, "timestamp", *(float *)(a1 + 12));
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B9789C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 16) |= 2u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
        {
          *(_DWORD *)(a1 + 12) = *(_DWORD *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 4;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 16) |= 1u;
        unint64_t v20 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v21 = *(void *)this;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v24 = 0;
          if (v2 <= v20) {
            unint64_t v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v20)
            {
              LODWORD(v24) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_47;
            }
            unint64_t v29 = v20++;
            char v30 = *(unsigned char *)(v21 + v29);
            *((void *)this + 1) = v20;
            v24 |= (unint64_t)(v30 & 0x7F) << v27;
            if ((v30 & 0x80) == 0) {
              break;
            }
            v27 += 7;
            BOOL v14 = v28++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              goto LABEL_46;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v24) = 0;
          }
LABEL_46:
          unint64_t v2 = v29 + 1;
        }
        else
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          while (1)
          {
            unint64_t v2 = v20 + 1;
            *((void *)this + 1) = v20 + 1;
            char v25 = *(unsigned char *)(v21 + v20);
            v24 |= (unint64_t)(v25 & 0x7F) << v22;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v22 += 7;
            unint64_t v20 = v2;
            BOOL v14 = v23++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              break;
            }
          }
        }
LABEL_47:
        *(_DWORD *)(a1 + 8) = v24;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B97B2C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 16);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 16);
  }
  if ((v4 & 2) != 0)
  {
    float v5 = *(float *)(v3 + 12);
    return PB::Writer::write(this, v5);
  }
  return result;
}

uint64_t sub_227B97B98(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC22538;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void sub_227B97BBC(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC22538;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227B97C3C(PB::Base *a1)
{
  sub_227B97BBC(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B97C74(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC22538;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 32) = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  char v2 = *(unsigned char *)(a2 + 32);
  if ((v2 & 2) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 24);
    *(unsigned char *)(result + 32) |= 2u;
    *(_DWORD *)(result + 24) = v4;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 4) == 0)
    {
LABEL_5:
      if ((v2 & 1) == 0) {
        return result;
      }
      goto LABEL_6;
    }
  }
  else if ((*(unsigned char *)(a2 + 32) & 4) == 0)
  {
    goto LABEL_5;
  }
  int v5 = *(_DWORD *)(a2 + 28);
  *(unsigned char *)(result + 32) |= 4u;
  *(_DWORD *)(result + 28) = v5;
  if ((*(unsigned char *)(a2 + 32) & 1) == 0) {
    return result;
  }
LABEL_6:
  uint64_t v3 = *(void *)(a2 + 16);
  *(unsigned char *)(result + 32) |= 1u;
  *(void *)(result + 16) = v3;
  return result;
}

uint64_t sub_227B97D80(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if ((*(unsigned char *)(a1 + 32) & 2) != 0) {
    PB::TextFormatter::format(this, "location");
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "magnetometer");
  }
  char v6 = *(unsigned char *)(a1 + 32);
  if (v6)
  {
    PB::TextFormatter::format(this, "sensorTime");
    char v6 = *(unsigned char *)(a1 + 32);
  }
  if ((v6 & 4) != 0) {
    PB::TextFormatter::format(this, "sequenceNumber");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B97E50(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          operator new();
        case 2u:
          *(unsigned char *)(a1 + 32) |= 2u;
          unint64_t v21 = *((void *)this + 1);
          unint64_t v22 = *((void *)this + 2);
          uint64_t v23 = *(void *)this;
          if (v21 <= 0xFFFFFFFFFFFFFFF5 && v21 + 10 <= v22)
          {
            char v24 = 0;
            unsigned int v25 = 0;
            uint64_t v26 = 0;
            do
            {
              unint64_t v27 = v21 + 1;
              *((void *)this + 1) = v21 + 1;
              char v28 = *(unsigned char *)(v23 + v21);
              v26 |= (unint64_t)(v28 & 0x7F) << v24;
              if ((v28 & 0x80) == 0) {
                goto LABEL_72;
              }
              v24 += 7;
              unint64_t v21 = v27;
              BOOL v14 = v25++ > 8;
            }
            while (!v14);
LABEL_52:
            LODWORD(v26) = 0;
            goto LABEL_72;
          }
          char v45 = 0;
          unsigned int v46 = 0;
          uint64_t v26 = 0;
          if (v22 <= v21) {
            unint64_t v22 = *((void *)this + 1);
          }
          while (2)
          {
            if (v22 == v21)
            {
              LODWORD(v26) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v47 = v21 + 1;
              char v48 = *(unsigned char *)(v23 + v21);
              *((void *)this + 1) = v47;
              v26 |= (unint64_t)(v48 & 0x7F) << v45;
              if (v48 < 0)
              {
                v45 += 7;
                unint64_t v21 = v47;
                BOOL v14 = v46++ > 8;
                if (v14) {
                  goto LABEL_52;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v26) = 0;
              }
            }
            break;
          }
LABEL_72:
          *(_DWORD *)(a1 + 24) = v26;
          goto LABEL_79;
        case 3u:
          *(unsigned char *)(a1 + 32) |= 4u;
          unint64_t v29 = *((void *)this + 1);
          unint64_t v30 = *((void *)this + 2);
          uint64_t v31 = *(void *)this;
          if (v29 <= 0xFFFFFFFFFFFFFFF5 && v29 + 10 <= v30)
          {
            char v32 = 0;
            unsigned int v33 = 0;
            uint64_t v34 = 0;
            do
            {
              unint64_t v35 = v29 + 1;
              *((void *)this + 1) = v29 + 1;
              char v36 = *(unsigned char *)(v31 + v29);
              v34 |= (unint64_t)(v36 & 0x7F) << v32;
              if ((v36 & 0x80) == 0) {
                goto LABEL_75;
              }
              v32 += 7;
              unint64_t v29 = v35;
              BOOL v14 = v33++ > 8;
            }
            while (!v14);
LABEL_59:
            LODWORD(v34) = 0;
            goto LABEL_75;
          }
          char v49 = 0;
          unsigned int v50 = 0;
          uint64_t v34 = 0;
          if (v30 <= v29) {
            unint64_t v30 = *((void *)this + 1);
          }
          while (2)
          {
            if (v30 == v29)
            {
              LODWORD(v34) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v51 = v29 + 1;
              char v52 = *(unsigned char *)(v31 + v29);
              *((void *)this + 1) = v51;
              v34 |= (unint64_t)(v52 & 0x7F) << v49;
              if (v52 < 0)
              {
                v49 += 7;
                unint64_t v29 = v51;
                BOOL v14 = v50++ > 8;
                if (v14) {
                  goto LABEL_59;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v34) = 0;
              }
            }
            break;
          }
LABEL_75:
          *(_DWORD *)(a1 + 28) = v34;
          goto LABEL_79;
        case 4u:
          *(unsigned char *)(a1 + 32) |= 1u;
          unint64_t v37 = *((void *)this + 1);
          unint64_t v38 = *((void *)this + 2);
          uint64_t v39 = *(void *)this;
          if (v37 <= 0xFFFFFFFFFFFFFFF5 && v37 + 10 <= v38)
          {
            char v40 = 0;
            unsigned int v41 = 0;
            uint64_t v42 = 0;
            do
            {
              unint64_t v43 = v37 + 1;
              *((void *)this + 1) = v37 + 1;
              char v44 = *(unsigned char *)(v39 + v37);
              v42 |= (unint64_t)(v44 & 0x7F) << v40;
              if ((v44 & 0x80) == 0) {
                goto LABEL_78;
              }
              v40 += 7;
              unint64_t v37 = v43;
              BOOL v14 = v41++ > 8;
            }
            while (!v14);
LABEL_66:
            uint64_t v42 = 0;
            goto LABEL_78;
          }
          char v53 = 0;
          unsigned int v54 = 0;
          uint64_t v42 = 0;
          if (v38 <= v37) {
            unint64_t v38 = *((void *)this + 1);
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          goto LABEL_79;
      }
      while (1)
      {
        if (v38 == v37)
        {
          uint64_t v42 = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_78;
        }
        unint64_t v55 = v37 + 1;
        char v56 = *(unsigned char *)(v39 + v37);
        *((void *)this + 1) = v55;
        v42 |= (unint64_t)(v56 & 0x7F) << v53;
        if ((v56 & 0x80) == 0) {
          break;
        }
        v53 += 7;
        unint64_t v37 = v55;
        BOOL v14 = v54++ > 8;
        if (v14) {
          goto LABEL_66;
        }
      }
      if (*((unsigned char *)this + 24)) {
        uint64_t v42 = 0;
      }
LABEL_78:
      *(void *)(a1 + 16) = v42;
LABEL_79:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B98330(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(const PB::Base **)(result + 8);
  if (v4) {
    uint64_t result = PB::Writer::writeSubmessage(this, v4);
  }
  char v5 = *(unsigned char *)(v3 + 32);
  if ((v5 & 2) == 0)
  {
    if ((*(unsigned char *)(v3 + 32) & 4) == 0) {
      goto LABEL_5;
    }
LABEL_8:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(unsigned char *)(v3 + 32) & 1) == 0) {
      return result;
    }
    goto LABEL_9;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  char v5 = *(unsigned char *)(v3 + 32);
  if ((v5 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_5:
  if ((v5 & 1) == 0) {
    return result;
  }
LABEL_9:

  return PB::Writer::writeVarInt(this);
}

void *sub_227B983D0(void *result)
{
  *uint64_t result = &unk_26DC22570;
  result[1] = 0;
  return result;
}

void sub_227B983F0(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC22570;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227B98470(PB::Base *a1)
{
  sub_227B983F0(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227B984A8(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC22570;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227B98550(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "config");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B985CC(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B987E8(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

double sub_227B98804(uint64_t a1)
{
  *(void *)a1 = &unk_26DC225A8;
  *(_DWORD *)(a1 + 224) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  return result;
}

void sub_227B9885C(PB::Base *this)
{
  *(void *)this = &unk_26DC225A8;
  unint64_t v2 = (void *)*((void *)this + 22);
  if (v2)
  {
    *((void *)this + 23) = v2;
    operator delete(v2);
  }
  unint64_t v3 = (void *)*((void *)this + 19);
  if (v3)
  {
    *((void *)this + 20) = v3;
    operator delete(v3);
  }
  int v4 = (void *)*((void *)this + 16);
  if (v4)
  {
    *((void *)this + 17) = v4;
    operator delete(v4);
  }
  uint64_t v5 = (void *)*((void *)this + 13);
  if (v5)
  {
    *((void *)this + 14) = v5;
    operator delete(v5);
  }
  char v6 = (void *)*((void *)this + 10);
  if (v6)
  {
    *((void *)this + 11) = v6;
    operator delete(v6);
  }
  uint64_t v7 = (void *)*((void *)this + 7);
  if (v7)
  {
    *((void *)this + 8) = v7;
    operator delete(v7);
  }
  char v8 = (void *)*((void *)this + 4);
  if (v8)
  {
    *((void *)this + 5) = v8;
    operator delete(v8);
  }
  unsigned int v9 = (void *)*((void *)this + 1);
  if (v9)
  {
    *((void *)this + 2) = v9;
    operator delete(v9);
  }

  PB::Base::~Base(this);
}

void sub_227B98930(PB::Base *a1)
{
  sub_227B9885C(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B98968(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC225A8;
  *(_OWORD *)(a1 + 8) = 0u;
  int v4 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_DWORD *)(a1 + 224) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  char v5 = *(unsigned char *)(a2 + 224);
  if ((v5 & 2) != 0)
  {
    uint64_t v7 = *(void *)(a2 + 208);
    char v6 = 2;
    *(unsigned char *)(a1 + 224) = 2;
    *(void *)(a1 + 208) = v7;
    char v5 = *(unsigned char *)(a2 + 224);
    if ((v5 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v6 = 0;
  if (*(unsigned char *)(a2 + 224))
  {
LABEL_5:
    uint64_t v8 = *(void *)(a2 + 200);
    v6 |= 1u;
    *(unsigned char *)(a1 + 224) = v6;
    *(void *)(a1 + 200) = v8;
    char v5 = *(unsigned char *)(a2 + 224);
  }
LABEL_6:
  if ((v5 & 8) == 0)
  {
    if ((v5 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  int v11 = *(_DWORD *)(a2 + 220);
  v6 |= 8u;
  *(unsigned char *)(a1 + 224) = v6;
  *(_DWORD *)(a1 + 220) = v11;
  if ((*(unsigned char *)(a2 + 224) & 4) != 0)
  {
LABEL_8:
    int v9 = *(_DWORD *)(a2 + 216);
    *(unsigned char *)(a1 + 224) = v6 | 4;
    *(_DWORD *)(a1 + 216) = v9;
  }
LABEL_9:
  if (a1 != a2)
  {
    sub_227B8BA68(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
    sub_227B8BA68((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
    sub_227B8BA68((char *)(a1 + 56), *(char **)(a2 + 56), *(void *)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 2);
    sub_227B8BA68((char *)(a1 + 80), *(char **)(a2 + 80), *(void *)(a2 + 88), (uint64_t)(*(void *)(a2 + 88) - *(void *)(a2 + 80)) >> 2);
    sub_227B8BA68((char *)(a1 + 128), *(char **)(a2 + 128), *(void *)(a2 + 136), (uint64_t)(*(void *)(a2 + 136) - *(void *)(a2 + 128)) >> 2);
    sub_227B8BA68((char *)(a1 + 152), *(char **)(a2 + 152), *(void *)(a2 + 160), (uint64_t)(*(void *)(a2 + 160) - *(void *)(a2 + 152)) >> 2);
    sub_227B8BA68((char *)(a1 + 176), *(char **)(a2 + 176), *(void *)(a2 + 184), (uint64_t)(*(void *)(a2 + 184) - *(void *)(a2 + 176)) >> 2);
    sub_227B8BA68((char *)(a1 + 104), *(char **)(a2 + 104), *(void *)(a2 + 112), (uint64_t)(*(void *)(a2 + 112) - *(void *)(a2 + 104)) >> 2);
  }
  return a1;
}

uint64_t sub_227B98B20(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  while (v5 != v6)
  {
    v5 += 4;
    PB::TextFormatter::format(this, "dark0");
  }
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  while (v7 != v8)
  {
    v7 += 4;
    PB::TextFormatter::format(this, "dark1");
  }
  uint64_t v9 = *(void *)(a1 + 56);
  uint64_t v10 = *(void *)(a1 + 64);
  while (v9 != v10)
  {
    v9 += 4;
    PB::TextFormatter::format(this, "dark2");
  }
  uint64_t v11 = *(void *)(a1 + 80);
  uint64_t v12 = *(void *)(a1 + 88);
  while (v11 != v12)
  {
    v11 += 4;
    PB::TextFormatter::format(this, "dark3");
  }
  char v13 = *(unsigned char *)(a1 + 224);
  if ((v13 & 4) != 0)
  {
    PB::TextFormatter::format(this, "error");
    char v13 = *(unsigned char *)(a1 + 224);
  }
  if ((v13 & 8) != 0) {
    PB::TextFormatter::format(this, "frameNum");
  }
  uint64_t v14 = *(void *)(a1 + 104);
  uint64_t v15 = *(void *)(a1 + 112);
  while (v14 != v15)
  {
    v14 += 4;
    PB::TextFormatter::format(this, "ledCurrent");
  }
  uint64_t v16 = *(void *)(a1 + 128);
  uint64_t v17 = *(void *)(a1 + 136);
  while (v16 != v17)
  {
    v16 += 4;
    PB::TextFormatter::format(this, "light0");
  }
  uint64_t v18 = *(void *)(a1 + 152);
  uint64_t v19 = *(void *)(a1 + 160);
  while (v18 != v19)
  {
    v18 += 4;
    PB::TextFormatter::format(this, "light1");
  }
  uint64_t v20 = *(void *)(a1 + 176);
  uint64_t v21 = *(void *)(a1 + 184);
  while (v20 != v21)
  {
    v20 += 4;
    PB::TextFormatter::format(this, "rxGain");
  }
  char v22 = *(unsigned char *)(a1 + 224);
  if (v22)
  {
    PB::TextFormatter::format(this, "sensorTime");
    char v22 = *(unsigned char *)(a1 + 224);
  }
  if ((v22 & 2) != 0) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 208));
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227B98D44(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v420 = (void **)(a1 + 104);
    char v421 = (void *)(a1 + 120);
    uint64_t v8 = (void *)(a1 + 192);
    unint64_t v418 = (void **)(a1 + 152);
    unint64_t v419 = (void **)(a1 + 176);
    uint64_t v9 = (void *)(a1 + 168);
    uint64_t v10 = (void *)(a1 + 144);
    unint64_t v416 = (void **)(a1 + 80);
    char v417 = (void **)(a1 + 128);
    uint64_t v11 = (void *)(a1 + 96);
    uint64_t v12 = (void *)(a1 + 72);
    unsigned int v414 = (void **)(a1 + 32);
    uint64_t v415 = (void **)(a1 + 56);
    char v13 = (void *)(a1 + 48);
    char v413 = (void **)(a1 + 8);
    uint64_t v14 = (void *)(a1 + 24);
    while (1)
    {
      uint64_t v15 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v16 = 0;
      unsigned int v17 = 0;
      unint64_t v18 = 0;
      while (1)
      {
        unint64_t v19 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v20 = *(unsigned char *)(v15 + v2);
        v18 |= (unint64_t)(v20 & 0x7F) << v16;
        if ((v20 & 0x80) == 0) {
          break;
        }
        v16 += 7;
        unint64_t v2 = v19;
        BOOL v65 = v17++ > 8;
        if (v65) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v26 = v18 & 7;
      if (v26 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v18 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 224) |= 2u;
          unint64_t v27 = *((void *)this + 1);
          if (v27 <= 0xFFFFFFFFFFFFFFF7 && v27 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 208) = *(void *)(*(void *)this + v27);
            *((void *)this + 1) += 8;
          }
          else
          {
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_706;
        case 2u:
          *(unsigned char *)(a1 + 224) |= 1u;
          unint64_t v28 = *((void *)this + 1);
          unint64_t v29 = *((void *)this + 2);
          uint64_t v30 = *(void *)this;
          if (v28 <= 0xFFFFFFFFFFFFFFF5 && v28 + 10 <= v29)
          {
            char v31 = 0;
            unsigned int v32 = 0;
            uint64_t v33 = 0;
            do
            {
              unint64_t v34 = v28 + 1;
              *((void *)this + 1) = v28 + 1;
              char v35 = *(unsigned char *)(v30 + v28);
              v33 |= (unint64_t)(v35 & 0x7F) << v31;
              if ((v35 & 0x80) == 0) {
                goto LABEL_518;
              }
              v31 += 7;
              unint64_t v28 = v34;
              BOOL v65 = v32++ > 8;
            }
            while (!v65);
LABEL_417:
            uint64_t v33 = 0;
            goto LABEL_518;
          }
          char v237 = 0;
          unsigned int v238 = 0;
          uint64_t v33 = 0;
          if (v29 <= v28) {
            unint64_t v29 = *((void *)this + 1);
          }
          while (2)
          {
            if (v29 == v28)
            {
              uint64_t v33 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v239 = v28 + 1;
              char v240 = *(unsigned char *)(v30 + v28);
              *((void *)this + 1) = v239;
              v33 |= (unint64_t)(v240 & 0x7F) << v237;
              if (v240 < 0)
              {
                v237 += 7;
                unint64_t v28 = v239;
                BOOL v65 = v238++ > 8;
                if (v65) {
                  goto LABEL_417;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v33 = 0;
              }
            }
            break;
          }
LABEL_518:
          *(void *)(a1 + 200) = v33;
          goto LABEL_706;
        case 3u:
          *(unsigned char *)(a1 + 224) |= 8u;
          unint64_t v36 = *((void *)this + 1);
          unint64_t v37 = *((void *)this + 2);
          uint64_t v38 = *(void *)this;
          if (v36 <= 0xFFFFFFFFFFFFFFF5 && v36 + 10 <= v37)
          {
            char v39 = 0;
            unsigned int v40 = 0;
            uint64_t v41 = 0;
            do
            {
              unint64_t v42 = v36 + 1;
              *((void *)this + 1) = v36 + 1;
              char v43 = *(unsigned char *)(v38 + v36);
              v41 |= (unint64_t)(v43 & 0x7F) << v39;
              if ((v43 & 0x80) == 0) {
                goto LABEL_521;
              }
              v39 += 7;
              unint64_t v36 = v42;
              BOOL v65 = v40++ > 8;
            }
            while (!v65);
LABEL_424:
            LODWORD(v41) = 0;
            goto LABEL_521;
          }
          char v241 = 0;
          unsigned int v242 = 0;
          uint64_t v41 = 0;
          if (v37 <= v36) {
            unint64_t v37 = *((void *)this + 1);
          }
          while (2)
          {
            if (v37 == v36)
            {
              LODWORD(v41) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v243 = v36 + 1;
              char v244 = *(unsigned char *)(v38 + v36);
              *((void *)this + 1) = v243;
              v41 |= (unint64_t)(v244 & 0x7F) << v241;
              if (v244 < 0)
              {
                v241 += 7;
                unint64_t v36 = v243;
                BOOL v65 = v242++ > 8;
                if (v65) {
                  goto LABEL_424;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v41) = 0;
              }
            }
            break;
          }
LABEL_521:
          *(_DWORD *)(a1 + 220) = v41;
          goto LABEL_706;
        case 4u:
          *(unsigned char *)(a1 + 224) |= 4u;
          unint64_t v44 = *((void *)this + 1);
          unint64_t v45 = *((void *)this + 2);
          uint64_t v46 = *(void *)this;
          if (v44 <= 0xFFFFFFFFFFFFFFF5 && v44 + 10 <= v45)
          {
            char v47 = 0;
            unsigned int v48 = 0;
            uint64_t v49 = 0;
            do
            {
              unint64_t v50 = v44 + 1;
              *((void *)this + 1) = v44 + 1;
              char v51 = *(unsigned char *)(v46 + v44);
              v49 |= (unint64_t)(v51 & 0x7F) << v47;
              if ((v51 & 0x80) == 0) {
                goto LABEL_524;
              }
              v47 += 7;
              unint64_t v44 = v50;
              BOOL v65 = v48++ > 8;
            }
            while (!v65);
LABEL_431:
            LODWORD(v49) = 0;
            goto LABEL_524;
          }
          char v245 = 0;
          unsigned int v246 = 0;
          uint64_t v49 = 0;
          if (v45 <= v44) {
            unint64_t v45 = *((void *)this + 1);
          }
          while (2)
          {
            if (v45 == v44)
            {
              LODWORD(v49) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v247 = v44 + 1;
              char v248 = *(unsigned char *)(v46 + v44);
              *((void *)this + 1) = v247;
              v49 |= (unint64_t)(v248 & 0x7F) << v245;
              if (v248 < 0)
              {
                v245 += 7;
                unint64_t v44 = v247;
                BOOL v65 = v246++ > 8;
                if (v65) {
                  goto LABEL_431;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v49) = 0;
              }
            }
            break;
          }
LABEL_524:
          *(_DWORD *)(a1 + 216) = v49;
          goto LABEL_706;
        case 5u:
          if (v26 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            if (*((void *)this + 1) < *((void *)this + 2) && !*((unsigned char *)this + 24))
            {
              char v52 = *(char **)(a1 + 16);
              do
              {
                if ((unint64_t)v52 >= *v14)
                {
                  char v53 = (char *)*v413;
                  uint64_t v54 = (v52 - (unsigned char *)*v413) >> 2;
                  unint64_t v55 = v54 + 1;
                  if ((unint64_t)(v54 + 1) >> 62) {
                    goto LABEL_716;
                  }
                  uint64_t v56 = *v14 - (void)v53;
                  if (v56 >> 1 > v55) {
                    unint64_t v55 = v56 >> 1;
                  }
                  if ((unint64_t)v56 >= 0x7FFFFFFFFFFFFFFCLL) {
                    unint64_t v57 = 0x3FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v57 = v55;
                  }
                  if (v57)
                  {
                    unsigned int v58 = (char *)sub_227B8BBB8((uint64_t)v14, v57);
                    char v53 = *(char **)(a1 + 8);
                    char v52 = *(char **)(a1 + 16);
                  }
                  else
                  {
                    unsigned int v58 = 0;
                  }
                  unint64_t v59 = &v58[4 * v54];
                  *(_DWORD *)unint64_t v59 = 0;
                  char v60 = v59 + 4;
                  while (v52 != v53)
                  {
                    int v61 = *((_DWORD *)v52 - 1);
                    v52 -= 4;
                    *((_DWORD *)v59 - 1) = v61;
                    v59 -= 4;
                  }
                  *(void *)(a1 + 8) = v59;
                  *(void *)(a1 + 16) = v60;
                  *(void *)(a1 + 24) = &v58[4 * v57];
                  if (v53) {
                    operator delete(v53);
                  }
                  char v52 = v60;
                }
                else
                {
                  *(_DWORD *)char v52 = 0;
                  v52 += 4;
                }
                *(void *)(a1 + 16) = v52;
                unint64_t v63 = *((void *)this + 1);
                unint64_t v62 = *((void *)this + 2);
                uint64_t v64 = *(void *)this;
                BOOL v65 = v63 > 0xFFFFFFFFFFFFFFF5 || v63 + 10 > v62;
                if (v65)
                {
                  char v66 = 0;
                  unsigned int v67 = 0;
                  uint64_t v73 = 0;
                  if (v62 <= v63) {
                    uint64_t v68 = *((void *)this + 1);
                  }
                  else {
                    uint64_t v68 = *((void *)this + 2);
                  }
                  while (1)
                  {
                    if (v68 == v63) {
                      goto LABEL_409;
                    }
                    unint64_t v69 = v63++;
                    char v70 = *(unsigned char *)(v64 + v69);
                    *((void *)this + 1) = v63;
                    v73 |= (unint64_t)(v70 & 0x7F) << v66;
                    if ((v70 & 0x80) == 0) {
                      break;
                    }
                    v66 += 7;
                    BOOL v65 = v67++ > 8;
                    if (v65)
                    {
                      LODWORD(v73) = 0;
                      goto LABEL_90;
                    }
                  }
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v73) = 0;
                  }
LABEL_90:
                  unint64_t v74 = v69 + 1;
                }
                else
                {
                  char v71 = 0;
                  unsigned int v72 = 0;
                  uint64_t v73 = 0;
                  while (1)
                  {
                    unint64_t v74 = v63 + 1;
                    *((void *)this + 1) = v63 + 1;
                    char v75 = *(unsigned char *)(v64 + v63);
                    v73 |= (unint64_t)(v75 & 0x7F) << v71;
                    if ((v75 & 0x80) == 0) {
                      break;
                    }
                    v71 += 7;
                    unint64_t v63 = v74;
                    BOOL v65 = v72++ > 8;
                    if (v65)
                    {
                      LODWORD(v73) = 0;
                      break;
                    }
                  }
                }
                *((_DWORD *)v52 - 1) = v73;
              }
              while (v74 < v62 && !*((unsigned char *)this + 24));
            }
            goto LABEL_410;
          }
          unint64_t v250 = *(char **)(a1 + 16);
          unint64_t v249 = *(void *)(a1 + 24);
          if ((unint64_t)v250 >= v249)
          {
            char v266 = (char *)*v413;
            uint64_t v267 = (v250 - (unsigned char *)*v413) >> 2;
            unint64_t v268 = v267 + 1;
            if ((unint64_t)(v267 + 1) >> 62) {
LABEL_716:
            }
              sub_227B8B89C();
            uint64_t v269 = v249 - (void)v266;
            if (v269 >> 1 > v268) {
              unint64_t v268 = v269 >> 1;
            }
            if ((unint64_t)v269 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v270 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v270 = v268;
            }
            if (v270)
            {
              unsigned int v271 = (char *)sub_227B8BBB8((uint64_t)v14, v270);
              char v266 = *(char **)(a1 + 8);
              unint64_t v250 = *(char **)(a1 + 16);
            }
            else
            {
              unsigned int v271 = 0;
            }
            char v314 = &v271[4 * v267];
            *(_DWORD *)char v314 = 0;
            unsigned int v251 = v314 + 4;
            while (v250 != v266)
            {
              int v315 = *((_DWORD *)v250 - 1);
              v250 -= 4;
              *((_DWORD *)v314 - 1) = v315;
              v314 -= 4;
            }
            *(void *)(a1 + 8) = v314;
            *(void *)(a1 + 16) = v251;
            *(void *)(a1 + 24) = &v271[4 * v270];
            if (v266) {
              operator delete(v266);
            }
          }
          else
          {
            *(_DWORD *)unint64_t v250 = 0;
            unsigned int v251 = v250 + 4;
          }
          *(void *)(a1 + 16) = v251;
          unint64_t v316 = *((void *)this + 1);
          unint64_t v317 = *((void *)this + 2);
          uint64_t v318 = *(void *)this;
          char v319 = 0;
          unsigned int v320 = 0;
          if (v316 <= 0xFFFFFFFFFFFFFFF5 && v316 + 10 <= v317)
          {
            uint64_t v324 = 0;
            while (1)
            {
              unint64_t v325 = v316 + 1;
              *((void *)this + 1) = v316 + 1;
              char v326 = *(unsigned char *)(v318 + v316);
              v324 |= (unint64_t)(v326 & 0x7F) << v319;
              if ((v326 & 0x80) == 0) {
                goto LABEL_705;
              }
              v319 += 7;
              unint64_t v316 = v325;
              BOOL v65 = v320++ > 8;
              if (v65) {
                goto LABEL_704;
              }
            }
          }
          uint64_t v324 = 0;
          if (v317 <= v316) {
            unint64_t v317 = *((void *)this + 1);
          }
          while (v317 != v316)
          {
            unint64_t v322 = v316 + 1;
            char v323 = *(unsigned char *)(v318 + v316);
            *((void *)this + 1) = v322;
            v324 |= (unint64_t)(v323 & 0x7F) << v319;
            if ((v323 & 0x80) == 0) {
              goto LABEL_698;
            }
            v319 += 7;
            unint64_t v316 = v322;
            BOOL v65 = v320++ > 8;
            if (v65) {
              goto LABEL_704;
            }
          }
          goto LABEL_697;
        case 6u:
          if (v26 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            if (*((void *)this + 1) < *((void *)this + 2) && !*((unsigned char *)this + 24))
            {
              char v52 = *(char **)(a1 + 40);
              do
              {
                if ((unint64_t)v52 >= *v13)
                {
                  unint64_t v76 = (char *)*v414;
                  uint64_t v77 = (v52 - (unsigned char *)*v414) >> 2;
                  unint64_t v78 = v77 + 1;
                  if ((unint64_t)(v77 + 1) >> 62) {
                    goto LABEL_717;
                  }
                  uint64_t v79 = *v13 - (void)v76;
                  if (v79 >> 1 > v78) {
                    unint64_t v78 = v79 >> 1;
                  }
                  if ((unint64_t)v79 >= 0x7FFFFFFFFFFFFFFCLL) {
                    unint64_t v80 = 0x3FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v80 = v78;
                  }
                  if (v80)
                  {
                    unint64_t v81 = (char *)sub_227B8BBB8((uint64_t)v13, v80);
                    unint64_t v76 = *(char **)(a1 + 32);
                    char v52 = *(char **)(a1 + 40);
                  }
                  else
                  {
                    unint64_t v81 = 0;
                  }
                  uint64_t v82 = &v81[4 * v77];
                  *(_DWORD *)uint64_t v82 = 0;
                  char v83 = v82 + 4;
                  while (v52 != v76)
                  {
                    int v84 = *((_DWORD *)v52 - 1);
                    v52 -= 4;
                    *((_DWORD *)v82 - 1) = v84;
                    v82 -= 4;
                  }
                  *(void *)(a1 + 32) = v82;
                  *(void *)(a1 + 40) = v83;
                  *(void *)(a1 + 48) = &v81[4 * v80];
                  if (v76) {
                    operator delete(v76);
                  }
                  char v52 = v83;
                }
                else
                {
                  *(_DWORD *)char v52 = 0;
                  v52 += 4;
                }
                *(void *)(a1 + 40) = v52;
                unint64_t v86 = *((void *)this + 1);
                unint64_t v85 = *((void *)this + 2);
                uint64_t v87 = *(void *)this;
                if (v86 > 0xFFFFFFFFFFFFFFF5 || v86 + 10 > v85)
                {
                  char v89 = 0;
                  unsigned int v90 = 0;
                  uint64_t v96 = 0;
                  if (v85 <= v86) {
                    uint64_t v91 = *((void *)this + 1);
                  }
                  else {
                    uint64_t v91 = *((void *)this + 2);
                  }
                  while (1)
                  {
                    if (v91 == v86) {
                      goto LABEL_409;
                    }
                    unint64_t v92 = v86++;
                    char v93 = *(unsigned char *)(v87 + v92);
                    *((void *)this + 1) = v86;
                    v96 |= (unint64_t)(v93 & 0x7F) << v89;
                    if ((v93 & 0x80) == 0) {
                      break;
                    }
                    v89 += 7;
                    BOOL v65 = v90++ > 8;
                    if (v65)
                    {
                      LODWORD(v96) = 0;
                      goto LABEL_135;
                    }
                  }
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v96) = 0;
                  }
LABEL_135:
                  unint64_t v97 = v92 + 1;
                }
                else
                {
                  char v94 = 0;
                  unsigned int v95 = 0;
                  uint64_t v96 = 0;
                  while (1)
                  {
                    unint64_t v97 = v86 + 1;
                    *((void *)this + 1) = v86 + 1;
                    char v98 = *(unsigned char *)(v87 + v86);
                    v96 |= (unint64_t)(v98 & 0x7F) << v94;
                    if ((v98 & 0x80) == 0) {
                      break;
                    }
                    v94 += 7;
                    unint64_t v86 = v97;
                    BOOL v65 = v95++ > 8;
                    if (v65)
                    {
                      LODWORD(v96) = 0;
                      break;
                    }
                  }
                }
                *((_DWORD *)v52 - 1) = v96;
              }
              while (v97 < v85 && !*((unsigned char *)this + 24));
            }
            goto LABEL_410;
          }
          unint64_t v253 = *(char **)(a1 + 40);
          unint64_t v252 = *(void *)(a1 + 48);
          if ((unint64_t)v253 >= v252)
          {
            unint64_t v272 = (char *)*v414;
            uint64_t v273 = (v253 - (unsigned char *)*v414) >> 2;
            unint64_t v274 = v273 + 1;
            if ((unint64_t)(v273 + 1) >> 62) {
LABEL_717:
            }
              sub_227B8B89C();
            uint64_t v275 = v252 - (void)v272;
            if (v275 >> 1 > v274) {
              unint64_t v274 = v275 >> 1;
            }
            if ((unint64_t)v275 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v276 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v276 = v274;
            }
            if (v276)
            {
              char v277 = (char *)sub_227B8BBB8((uint64_t)v13, v276);
              unint64_t v272 = *(char **)(a1 + 32);
              unint64_t v253 = *(char **)(a1 + 40);
            }
            else
            {
              char v277 = 0;
            }
            unsigned int v327 = &v277[4 * v273];
            *(_DWORD *)unsigned int v327 = 0;
            unsigned int v251 = v327 + 4;
            while (v253 != v272)
            {
              int v328 = *((_DWORD *)v253 - 1);
              v253 -= 4;
              *((_DWORD *)v327 - 1) = v328;
              v327 -= 4;
            }
            *(void *)(a1 + 32) = v327;
            *(void *)(a1 + 40) = v251;
            *(void *)(a1 + 48) = &v277[4 * v276];
            if (v272) {
              operator delete(v272);
            }
          }
          else
          {
            *(_DWORD *)unint64_t v253 = 0;
            unsigned int v251 = v253 + 4;
          }
          *(void *)(a1 + 40) = v251;
          unint64_t v329 = *((void *)this + 1);
          unint64_t v330 = *((void *)this + 2);
          uint64_t v331 = *(void *)this;
          char v332 = 0;
          unsigned int v333 = 0;
          if (v329 <= 0xFFFFFFFFFFFFFFF5 && v329 + 10 <= v330)
          {
            uint64_t v324 = 0;
            while (1)
            {
              unint64_t v337 = v329 + 1;
              *((void *)this + 1) = v329 + 1;
              char v338 = *(unsigned char *)(v331 + v329);
              v324 |= (unint64_t)(v338 & 0x7F) << v332;
              if ((v338 & 0x80) == 0) {
                goto LABEL_705;
              }
              v332 += 7;
              unint64_t v329 = v337;
              BOOL v65 = v333++ > 8;
              if (v65) {
                goto LABEL_704;
              }
            }
          }
          uint64_t v324 = 0;
          if (v330 <= v329) {
            unint64_t v330 = *((void *)this + 1);
          }
          while (v330 != v329)
          {
            unint64_t v335 = v329 + 1;
            char v336 = *(unsigned char *)(v331 + v329);
            *((void *)this + 1) = v335;
            v324 |= (unint64_t)(v336 & 0x7F) << v332;
            if ((v336 & 0x80) == 0) {
              goto LABEL_698;
            }
            v332 += 7;
            unint64_t v329 = v335;
            BOOL v65 = v333++ > 8;
            if (v65) {
              goto LABEL_704;
            }
          }
          goto LABEL_697;
        case 7u:
          if (v26 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            if (*((void *)this + 1) < *((void *)this + 2) && !*((unsigned char *)this + 24))
            {
              char v52 = *(char **)(a1 + 64);
              do
              {
                if ((unint64_t)v52 >= *v12)
                {
                  unint64_t v99 = (char *)*v415;
                  uint64_t v100 = (v52 - (unsigned char *)*v415) >> 2;
                  unint64_t v101 = v100 + 1;
                  if ((unint64_t)(v100 + 1) >> 62) {
                    goto LABEL_718;
                  }
                  uint64_t v102 = *v12 - (void)v99;
                  if (v102 >> 1 > v101) {
                    unint64_t v101 = v102 >> 1;
                  }
                  if ((unint64_t)v102 >= 0x7FFFFFFFFFFFFFFCLL) {
                    unint64_t v103 = 0x3FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v103 = v101;
                  }
                  if (v103)
                  {
                    int v104 = (char *)sub_227B8BBB8((uint64_t)v12, v103);
                    unint64_t v99 = *(char **)(a1 + 56);
                    char v52 = *(char **)(a1 + 64);
                  }
                  else
                  {
                    int v104 = 0;
                  }
                  char v105 = &v104[4 * v100];
                  *(_DWORD *)char v105 = 0;
                  int v106 = v105 + 4;
                  while (v52 != v99)
                  {
                    int v107 = *((_DWORD *)v52 - 1);
                    v52 -= 4;
                    *((_DWORD *)v105 - 1) = v107;
                    v105 -= 4;
                  }
                  *(void *)(a1 + 56) = v105;
                  *(void *)(a1 + 64) = v106;
                  *(void *)(a1 + 72) = &v104[4 * v103];
                  if (v99) {
                    operator delete(v99);
                  }
                  char v52 = v106;
                }
                else
                {
                  *(_DWORD *)char v52 = 0;
                  v52 += 4;
                }
                *(void *)(a1 + 64) = v52;
                unint64_t v109 = *((void *)this + 1);
                unint64_t v108 = *((void *)this + 2);
                uint64_t v110 = *(void *)this;
                if (v109 > 0xFFFFFFFFFFFFFFF5 || v109 + 10 > v108)
                {
                  char v112 = 0;
                  unsigned int v113 = 0;
                  uint64_t v119 = 0;
                  if (v108 <= v109) {
                    uint64_t v114 = *((void *)this + 1);
                  }
                  else {
                    uint64_t v114 = *((void *)this + 2);
                  }
                  while (1)
                  {
                    if (v114 == v109) {
                      goto LABEL_409;
                    }
                    unint64_t v115 = v109++;
                    char v116 = *(unsigned char *)(v110 + v115);
                    *((void *)this + 1) = v109;
                    v119 |= (unint64_t)(v116 & 0x7F) << v112;
                    if ((v116 & 0x80) == 0) {
                      break;
                    }
                    v112 += 7;
                    BOOL v65 = v113++ > 8;
                    if (v65)
                    {
                      LODWORD(v119) = 0;
                      goto LABEL_180;
                    }
                  }
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v119) = 0;
                  }
LABEL_180:
                  unint64_t v120 = v115 + 1;
                }
                else
                {
                  char v117 = 0;
                  unsigned int v118 = 0;
                  uint64_t v119 = 0;
                  while (1)
                  {
                    unint64_t v120 = v109 + 1;
                    *((void *)this + 1) = v109 + 1;
                    char v121 = *(unsigned char *)(v110 + v109);
                    v119 |= (unint64_t)(v121 & 0x7F) << v117;
                    if ((v121 & 0x80) == 0) {
                      break;
                    }
                    v117 += 7;
                    unint64_t v109 = v120;
                    BOOL v65 = v118++ > 8;
                    if (v65)
                    {
                      LODWORD(v119) = 0;
                      break;
                    }
                  }
                }
                *((_DWORD *)v52 - 1) = v119;
              }
              while (v120 < v108 && !*((unsigned char *)this + 24));
            }
            goto LABEL_410;
          }
          uint64_t v255 = *(char **)(a1 + 64);
          unint64_t v254 = *(void *)(a1 + 72);
          if ((unint64_t)v255 >= v254)
          {
            char v278 = (char *)*v415;
            uint64_t v279 = (v255 - (unsigned char *)*v415) >> 2;
            unint64_t v280 = v279 + 1;
            if ((unint64_t)(v279 + 1) >> 62) {
LABEL_718:
            }
              sub_227B8B89C();
            uint64_t v281 = v254 - (void)v278;
            if (v281 >> 1 > v280) {
              unint64_t v280 = v281 >> 1;
            }
            if ((unint64_t)v281 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v282 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v282 = v280;
            }
            if (v282)
            {
              unsigned int v283 = (char *)sub_227B8BBB8((uint64_t)v12, v282);
              char v278 = *(char **)(a1 + 56);
              uint64_t v255 = *(char **)(a1 + 64);
            }
            else
            {
              unsigned int v283 = 0;
            }
            uint64_t v339 = &v283[4 * v279];
            *(_DWORD *)uint64_t v339 = 0;
            unsigned int v251 = v339 + 4;
            while (v255 != v278)
            {
              int v340 = *((_DWORD *)v255 - 1);
              v255 -= 4;
              *((_DWORD *)v339 - 1) = v340;
              v339 -= 4;
            }
            *(void *)(a1 + 56) = v339;
            *(void *)(a1 + 64) = v251;
            *(void *)(a1 + 72) = &v283[4 * v282];
            if (v278) {
              operator delete(v278);
            }
          }
          else
          {
            *(_DWORD *)uint64_t v255 = 0;
            unsigned int v251 = v255 + 4;
          }
          *(void *)(a1 + 64) = v251;
          unint64_t v341 = *((void *)this + 1);
          unint64_t v342 = *((void *)this + 2);
          uint64_t v343 = *(void *)this;
          char v344 = 0;
          unsigned int v345 = 0;
          if (v341 <= 0xFFFFFFFFFFFFFFF5 && v341 + 10 <= v342)
          {
            uint64_t v324 = 0;
            while (1)
            {
              unint64_t v349 = v341 + 1;
              *((void *)this + 1) = v341 + 1;
              char v350 = *(unsigned char *)(v343 + v341);
              v324 |= (unint64_t)(v350 & 0x7F) << v344;
              if ((v350 & 0x80) == 0) {
                goto LABEL_705;
              }
              v344 += 7;
              unint64_t v341 = v349;
              BOOL v65 = v345++ > 8;
              if (v65) {
                goto LABEL_704;
              }
            }
          }
          uint64_t v324 = 0;
          if (v342 <= v341) {
            unint64_t v342 = *((void *)this + 1);
          }
          while (v342 != v341)
          {
            unint64_t v347 = v341 + 1;
            char v348 = *(unsigned char *)(v343 + v341);
            *((void *)this + 1) = v347;
            v324 |= (unint64_t)(v348 & 0x7F) << v344;
            if ((v348 & 0x80) == 0) {
              goto LABEL_698;
            }
            v344 += 7;
            unint64_t v341 = v347;
            BOOL v65 = v345++ > 8;
            if (v65) {
              goto LABEL_704;
            }
          }
          goto LABEL_697;
        case 8u:
          if (v26 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            if (*((void *)this + 1) < *((void *)this + 2) && !*((unsigned char *)this + 24))
            {
              char v52 = *(char **)(a1 + 88);
              do
              {
                if ((unint64_t)v52 >= *v11)
                {
                  unint64_t v122 = (char *)*v416;
                  uint64_t v123 = (v52 - (unsigned char *)*v416) >> 2;
                  unint64_t v124 = v123 + 1;
                  if ((unint64_t)(v123 + 1) >> 62) {
                    goto LABEL_719;
                  }
                  uint64_t v125 = *v11 - (void)v122;
                  if (v125 >> 1 > v124) {
                    unint64_t v124 = v125 >> 1;
                  }
                  if ((unint64_t)v125 >= 0x7FFFFFFFFFFFFFFCLL) {
                    unint64_t v126 = 0x3FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v126 = v124;
                  }
                  if (v126)
                  {
                    uint64_t v127 = (char *)sub_227B8BBB8((uint64_t)v11, v126);
                    unint64_t v122 = *(char **)(a1 + 80);
                    char v52 = *(char **)(a1 + 88);
                  }
                  else
                  {
                    uint64_t v127 = 0;
                  }
                  unint64_t v128 = &v127[4 * v123];
                  *(_DWORD *)unint64_t v128 = 0;
                  unint64_t v129 = v128 + 4;
                  while (v52 != v122)
                  {
                    int v130 = *((_DWORD *)v52 - 1);
                    v52 -= 4;
                    *((_DWORD *)v128 - 1) = v130;
                    v128 -= 4;
                  }
                  *(void *)(a1 + 80) = v128;
                  *(void *)(a1 + 88) = v129;
                  *(void *)(a1 + 96) = &v127[4 * v126];
                  if (v122) {
                    operator delete(v122);
                  }
                  char v52 = v129;
                }
                else
                {
                  *(_DWORD *)char v52 = 0;
                  v52 += 4;
                }
                *(void *)(a1 + 88) = v52;
                unint64_t v132 = *((void *)this + 1);
                unint64_t v131 = *((void *)this + 2);
                uint64_t v133 = *(void *)this;
                if (v132 > 0xFFFFFFFFFFFFFFF5 || v132 + 10 > v131)
                {
                  char v135 = 0;
                  unsigned int v136 = 0;
                  uint64_t v142 = 0;
                  if (v131 <= v132) {
                    uint64_t v137 = *((void *)this + 1);
                  }
                  else {
                    uint64_t v137 = *((void *)this + 2);
                  }
                  while (1)
                  {
                    if (v137 == v132) {
                      goto LABEL_409;
                    }
                    unint64_t v138 = v132++;
                    char v139 = *(unsigned char *)(v133 + v138);
                    *((void *)this + 1) = v132;
                    v142 |= (unint64_t)(v139 & 0x7F) << v135;
                    if ((v139 & 0x80) == 0) {
                      break;
                    }
                    v135 += 7;
                    BOOL v65 = v136++ > 8;
                    if (v65)
                    {
                      LODWORD(v142) = 0;
                      goto LABEL_225;
                    }
                  }
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v142) = 0;
                  }
LABEL_225:
                  unint64_t v143 = v138 + 1;
                }
                else
                {
                  char v140 = 0;
                  unsigned int v141 = 0;
                  uint64_t v142 = 0;
                  while (1)
                  {
                    unint64_t v143 = v132 + 1;
                    *((void *)this + 1) = v132 + 1;
                    char v144 = *(unsigned char *)(v133 + v132);
                    v142 |= (unint64_t)(v144 & 0x7F) << v140;
                    if ((v144 & 0x80) == 0) {
                      break;
                    }
                    v140 += 7;
                    unint64_t v132 = v143;
                    BOOL v65 = v141++ > 8;
                    if (v65)
                    {
                      LODWORD(v142) = 0;
                      break;
                    }
                  }
                }
                *((_DWORD *)v52 - 1) = v142;
              }
              while (v143 < v131 && !*((unsigned char *)this + 24));
            }
            goto LABEL_410;
          }
          char v257 = *(char **)(a1 + 88);
          unint64_t v256 = *(void *)(a1 + 96);
          if ((unint64_t)v257 >= v256)
          {
            unint64_t v284 = (char *)*v416;
            uint64_t v285 = (v257 - (unsigned char *)*v416) >> 2;
            unint64_t v286 = v285 + 1;
            if ((unint64_t)(v285 + 1) >> 62) {
LABEL_719:
            }
              sub_227B8B89C();
            uint64_t v287 = v256 - (void)v284;
            if (v287 >> 1 > v286) {
              unint64_t v286 = v287 >> 1;
            }
            if ((unint64_t)v287 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v288 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v288 = v286;
            }
            if (v288)
            {
              char v289 = (char *)sub_227B8BBB8((uint64_t)v11, v288);
              unint64_t v284 = *(char **)(a1 + 80);
              char v257 = *(char **)(a1 + 88);
            }
            else
            {
              char v289 = 0;
            }
            uint64_t v351 = &v289[4 * v285];
            *(_DWORD *)uint64_t v351 = 0;
            unsigned int v251 = v351 + 4;
            while (v257 != v284)
            {
              int v352 = *((_DWORD *)v257 - 1);
              v257 -= 4;
              *((_DWORD *)v351 - 1) = v352;
              v351 -= 4;
            }
            *(void *)(a1 + 80) = v351;
            *(void *)(a1 + 88) = v251;
            *(void *)(a1 + 96) = &v289[4 * v288];
            if (v284) {
              operator delete(v284);
            }
          }
          else
          {
            *(_DWORD *)char v257 = 0;
            unsigned int v251 = v257 + 4;
          }
          *(void *)(a1 + 88) = v251;
          unint64_t v353 = *((void *)this + 1);
          unint64_t v354 = *((void *)this + 2);
          uint64_t v355 = *(void *)this;
          char v356 = 0;
          unsigned int v357 = 0;
          if (v353 <= 0xFFFFFFFFFFFFFFF5 && v353 + 10 <= v354)
          {
            uint64_t v324 = 0;
            while (1)
            {
              unint64_t v361 = v353 + 1;
              *((void *)this + 1) = v353 + 1;
              char v362 = *(unsigned char *)(v355 + v353);
              v324 |= (unint64_t)(v362 & 0x7F) << v356;
              if ((v362 & 0x80) == 0) {
                goto LABEL_705;
              }
              v356 += 7;
              unint64_t v353 = v361;
              BOOL v65 = v357++ > 8;
              if (v65) {
                goto LABEL_704;
              }
            }
          }
          uint64_t v324 = 0;
          if (v354 <= v353) {
            unint64_t v354 = *((void *)this + 1);
          }
          while (v354 != v353)
          {
            unint64_t v359 = v353 + 1;
            char v360 = *(unsigned char *)(v355 + v353);
            *((void *)this + 1) = v359;
            v324 |= (unint64_t)(v360 & 0x7F) << v356;
            if ((v360 & 0x80) == 0) {
              goto LABEL_698;
            }
            v356 += 7;
            unint64_t v353 = v359;
            BOOL v65 = v357++ > 8;
            if (v65) {
              goto LABEL_704;
            }
          }
          goto LABEL_697;
        case 9u:
          if (v26 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            if (*((void *)this + 1) < *((void *)this + 2) && !*((unsigned char *)this + 24))
            {
              char v52 = *(char **)(a1 + 136);
              do
              {
                if ((unint64_t)v52 >= *v10)
                {
                  uint64_t v145 = (char *)*v417;
                  uint64_t v146 = (v52 - (unsigned char *)*v417) >> 2;
                  unint64_t v147 = v146 + 1;
                  if ((unint64_t)(v146 + 1) >> 62) {
                    goto LABEL_720;
                  }
                  uint64_t v148 = *v10 - (void)v145;
                  if (v148 >> 1 > v147) {
                    unint64_t v147 = v148 >> 1;
                  }
                  if ((unint64_t)v148 >= 0x7FFFFFFFFFFFFFFCLL) {
                    unint64_t v149 = 0x3FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v149 = v147;
                  }
                  if (v149)
                  {
                    char v150 = (char *)sub_227B8BBB8((uint64_t)v10, v149);
                    uint64_t v145 = *(char **)(a1 + 128);
                    char v52 = *(char **)(a1 + 136);
                  }
                  else
                  {
                    char v150 = 0;
                  }
                  unsigned int v151 = &v150[4 * v146];
                  *(_DWORD *)unsigned int v151 = 0;
                  uint64_t v152 = v151 + 4;
                  while (v52 != v145)
                  {
                    int v153 = *((_DWORD *)v52 - 1);
                    v52 -= 4;
                    *((_DWORD *)v151 - 1) = v153;
                    v151 -= 4;
                  }
                  *(void *)(a1 + 128) = v151;
                  *(void *)(a1 + 136) = v152;
                  *(void *)(a1 + 144) = &v150[4 * v149];
                  if (v145) {
                    operator delete(v145);
                  }
                  char v52 = v152;
                }
                else
                {
                  *(_DWORD *)char v52 = 0;
                  v52 += 4;
                }
                *(void *)(a1 + 136) = v52;
                unint64_t v155 = *((void *)this + 1);
                unint64_t v154 = *((void *)this + 2);
                uint64_t v156 = *(void *)this;
                if (v155 > 0xFFFFFFFFFFFFFFF5 || v155 + 10 > v154)
                {
                  char v158 = 0;
                  unsigned int v159 = 0;
                  uint64_t v165 = 0;
                  if (v154 <= v155) {
                    uint64_t v160 = *((void *)this + 1);
                  }
                  else {
                    uint64_t v160 = *((void *)this + 2);
                  }
                  while (1)
                  {
                    if (v160 == v155) {
                      goto LABEL_409;
                    }
                    unint64_t v161 = v155++;
                    char v162 = *(unsigned char *)(v156 + v161);
                    *((void *)this + 1) = v155;
                    v165 |= (unint64_t)(v162 & 0x7F) << v158;
                    if ((v162 & 0x80) == 0) {
                      break;
                    }
                    v158 += 7;
                    BOOL v65 = v159++ > 8;
                    if (v65)
                    {
                      LODWORD(v165) = 0;
                      goto LABEL_270;
                    }
                  }
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v165) = 0;
                  }
LABEL_270:
                  unint64_t v166 = v161 + 1;
                }
                else
                {
                  char v163 = 0;
                  unsigned int v164 = 0;
                  uint64_t v165 = 0;
                  while (1)
                  {
                    unint64_t v166 = v155 + 1;
                    *((void *)this + 1) = v155 + 1;
                    char v167 = *(unsigned char *)(v156 + v155);
                    v165 |= (unint64_t)(v167 & 0x7F) << v163;
                    if ((v167 & 0x80) == 0) {
                      break;
                    }
                    v163 += 7;
                    unint64_t v155 = v166;
                    BOOL v65 = v164++ > 8;
                    if (v65)
                    {
                      LODWORD(v165) = 0;
                      break;
                    }
                  }
                }
                *((_DWORD *)v52 - 1) = v165;
              }
              while (v166 < v154 && !*((unsigned char *)this + 24));
            }
            goto LABEL_410;
          }
          unsigned int v259 = *(char **)(a1 + 136);
          unint64_t v258 = *(void *)(a1 + 144);
          if ((unint64_t)v259 >= v258)
          {
            char v290 = (char *)*v417;
            uint64_t v291 = (v259 - (unsigned char *)*v417) >> 2;
            unint64_t v292 = v291 + 1;
            if ((unint64_t)(v291 + 1) >> 62) {
LABEL_720:
            }
              sub_227B8B89C();
            uint64_t v293 = v258 - (void)v290;
            if (v293 >> 1 > v292) {
              unint64_t v292 = v293 >> 1;
            }
            if ((unint64_t)v293 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v294 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v294 = v292;
            }
            if (v294)
            {
              unsigned int v295 = (char *)sub_227B8BBB8((uint64_t)v10, v294);
              char v290 = *(char **)(a1 + 128);
              unsigned int v259 = *(char **)(a1 + 136);
            }
            else
            {
              unsigned int v295 = 0;
            }
            int v363 = &v295[4 * v291];
            *(_DWORD *)int v363 = 0;
            unsigned int v251 = v363 + 4;
            while (v259 != v290)
            {
              int v364 = *((_DWORD *)v259 - 1);
              v259 -= 4;
              *((_DWORD *)v363 - 1) = v364;
              v363 -= 4;
            }
            *(void *)(a1 + 128) = v363;
            *(void *)(a1 + 136) = v251;
            *(void *)(a1 + 144) = &v295[4 * v294];
            if (v290) {
              operator delete(v290);
            }
          }
          else
          {
            *(_DWORD *)unsigned int v259 = 0;
            unsigned int v251 = v259 + 4;
          }
          *(void *)(a1 + 136) = v251;
          unint64_t v365 = *((void *)this + 1);
          unint64_t v366 = *((void *)this + 2);
          uint64_t v367 = *(void *)this;
          char v368 = 0;
          unsigned int v369 = 0;
          if (v365 <= 0xFFFFFFFFFFFFFFF5 && v365 + 10 <= v366)
          {
            uint64_t v324 = 0;
            while (1)
            {
              unint64_t v373 = v365 + 1;
              *((void *)this + 1) = v365 + 1;
              char v374 = *(unsigned char *)(v367 + v365);
              v324 |= (unint64_t)(v374 & 0x7F) << v368;
              if ((v374 & 0x80) == 0) {
                goto LABEL_705;
              }
              v368 += 7;
              unint64_t v365 = v373;
              BOOL v65 = v369++ > 8;
              if (v65) {
                goto LABEL_704;
              }
            }
          }
          uint64_t v324 = 0;
          if (v366 <= v365) {
            unint64_t v366 = *((void *)this + 1);
          }
          while (v366 != v365)
          {
            unint64_t v371 = v365 + 1;
            char v372 = *(unsigned char *)(v367 + v365);
            *((void *)this + 1) = v371;
            v324 |= (unint64_t)(v372 & 0x7F) << v368;
            if ((v372 & 0x80) == 0) {
              goto LABEL_698;
            }
            v368 += 7;
            unint64_t v365 = v371;
            BOOL v65 = v369++ > 8;
            if (v65) {
              goto LABEL_704;
            }
          }
          goto LABEL_697;
        case 0xAu:
          if (v26 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            if (*((void *)this + 1) < *((void *)this + 2) && !*((unsigned char *)this + 24))
            {
              char v52 = *(char **)(a1 + 160);
              do
              {
                if ((unint64_t)v52 >= *v9)
                {
                  char v168 = (char *)*v418;
                  uint64_t v169 = (v52 - (unsigned char *)*v418) >> 2;
                  unint64_t v170 = v169 + 1;
                  if ((unint64_t)(v169 + 1) >> 62) {
                    goto LABEL_721;
                  }
                  uint64_t v171 = *v9 - (void)v168;
                  if (v171 >> 1 > v170) {
                    unint64_t v170 = v171 >> 1;
                  }
                  if ((unint64_t)v171 >= 0x7FFFFFFFFFFFFFFCLL) {
                    unint64_t v172 = 0x3FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v172 = v170;
                  }
                  if (v172)
                  {
                    unsigned int v173 = (char *)sub_227B8BBB8((uint64_t)v9, v172);
                    char v168 = *(char **)(a1 + 152);
                    char v52 = *(char **)(a1 + 160);
                  }
                  else
                  {
                    unsigned int v173 = 0;
                  }
                  unint64_t v174 = &v173[4 * v169];
                  *(_DWORD *)unint64_t v174 = 0;
                  char v175 = v174 + 4;
                  while (v52 != v168)
                  {
                    int v176 = *((_DWORD *)v52 - 1);
                    v52 -= 4;
                    *((_DWORD *)v174 - 1) = v176;
                    v174 -= 4;
                  }
                  *(void *)(a1 + 152) = v174;
                  *(void *)(a1 + 160) = v175;
                  *(void *)(a1 + 168) = &v173[4 * v172];
                  if (v168) {
                    operator delete(v168);
                  }
                  char v52 = v175;
                }
                else
                {
                  *(_DWORD *)char v52 = 0;
                  v52 += 4;
                }
                *(void *)(a1 + 160) = v52;
                unint64_t v178 = *((void *)this + 1);
                unint64_t v177 = *((void *)this + 2);
                uint64_t v179 = *(void *)this;
                if (v178 > 0xFFFFFFFFFFFFFFF5 || v178 + 10 > v177)
                {
                  char v181 = 0;
                  unsigned int v182 = 0;
                  uint64_t v188 = 0;
                  if (v177 <= v178) {
                    uint64_t v183 = *((void *)this + 1);
                  }
                  else {
                    uint64_t v183 = *((void *)this + 2);
                  }
                  while (1)
                  {
                    if (v183 == v178) {
                      goto LABEL_409;
                    }
                    unint64_t v184 = v178++;
                    char v185 = *(unsigned char *)(v179 + v184);
                    *((void *)this + 1) = v178;
                    v188 |= (unint64_t)(v185 & 0x7F) << v181;
                    if ((v185 & 0x80) == 0) {
                      break;
                    }
                    v181 += 7;
                    BOOL v65 = v182++ > 8;
                    if (v65)
                    {
                      LODWORD(v188) = 0;
                      goto LABEL_315;
                    }
                  }
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v188) = 0;
                  }
LABEL_315:
                  unint64_t v189 = v184 + 1;
                }
                else
                {
                  char v186 = 0;
                  unsigned int v187 = 0;
                  uint64_t v188 = 0;
                  while (1)
                  {
                    unint64_t v189 = v178 + 1;
                    *((void *)this + 1) = v178 + 1;
                    char v190 = *(unsigned char *)(v179 + v178);
                    v188 |= (unint64_t)(v190 & 0x7F) << v186;
                    if ((v190 & 0x80) == 0) {
                      break;
                    }
                    v186 += 7;
                    unint64_t v178 = v189;
                    BOOL v65 = v187++ > 8;
                    if (v65)
                    {
                      LODWORD(v188) = 0;
                      break;
                    }
                  }
                }
                *((_DWORD *)v52 - 1) = v188;
              }
              while (v189 < v177 && !*((unsigned char *)this + 24));
            }
            goto LABEL_410;
          }
          char v261 = *(char **)(a1 + 160);
          unint64_t v260 = *(void *)(a1 + 168);
          if ((unint64_t)v261 >= v260)
          {
            unint64_t v296 = (char *)*v418;
            uint64_t v297 = (v261 - (unsigned char *)*v418) >> 2;
            unint64_t v298 = v297 + 1;
            if ((unint64_t)(v297 + 1) >> 62) {
LABEL_721:
            }
              sub_227B8B89C();
            uint64_t v299 = v260 - (void)v296;
            if (v299 >> 1 > v298) {
              unint64_t v298 = v299 >> 1;
            }
            if ((unint64_t)v299 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v300 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v300 = v298;
            }
            if (v300)
            {
              char v301 = (char *)sub_227B8BBB8((uint64_t)v9, v300);
              unint64_t v296 = *(char **)(a1 + 152);
              char v261 = *(char **)(a1 + 160);
            }
            else
            {
              char v301 = 0;
            }
            int v375 = &v301[4 * v297];
            *(_DWORD *)int v375 = 0;
            unsigned int v251 = v375 + 4;
            while (v261 != v296)
            {
              int v376 = *((_DWORD *)v261 - 1);
              v261 -= 4;
              *((_DWORD *)v375 - 1) = v376;
              v375 -= 4;
            }
            *(void *)(a1 + 152) = v375;
            *(void *)(a1 + 160) = v251;
            *(void *)(a1 + 168) = &v301[4 * v300];
            if (v296) {
              operator delete(v296);
            }
          }
          else
          {
            *(_DWORD *)char v261 = 0;
            unsigned int v251 = v261 + 4;
          }
          *(void *)(a1 + 160) = v251;
          unint64_t v377 = *((void *)this + 1);
          unint64_t v378 = *((void *)this + 2);
          uint64_t v379 = *(void *)this;
          char v380 = 0;
          unsigned int v381 = 0;
          if (v377 <= 0xFFFFFFFFFFFFFFF5 && v377 + 10 <= v378)
          {
            uint64_t v324 = 0;
            while (1)
            {
              unint64_t v385 = v377 + 1;
              *((void *)this + 1) = v377 + 1;
              char v386 = *(unsigned char *)(v379 + v377);
              v324 |= (unint64_t)(v386 & 0x7F) << v380;
              if ((v386 & 0x80) == 0) {
                goto LABEL_705;
              }
              v380 += 7;
              unint64_t v377 = v385;
              BOOL v65 = v381++ > 8;
              if (v65) {
                goto LABEL_704;
              }
            }
          }
          uint64_t v324 = 0;
          if (v378 <= v377) {
            unint64_t v378 = *((void *)this + 1);
          }
          while (v378 != v377)
          {
            unint64_t v383 = v377 + 1;
            char v384 = *(unsigned char *)(v379 + v377);
            *((void *)this + 1) = v383;
            v324 |= (unint64_t)(v384 & 0x7F) << v380;
            if ((v384 & 0x80) == 0) {
              goto LABEL_698;
            }
            v380 += 7;
            unint64_t v377 = v383;
            BOOL v65 = v381++ > 8;
            if (v65) {
              goto LABEL_704;
            }
          }
          goto LABEL_697;
        case 0xBu:
          if (v26 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            if (*((void *)this + 1) < *((void *)this + 2) && !*((unsigned char *)this + 24))
            {
              char v52 = *(char **)(a1 + 184);
              do
              {
                if ((unint64_t)v52 >= *v8)
                {
                  char v191 = (char *)*v419;
                  uint64_t v192 = (v52 - (unsigned char *)*v419) >> 2;
                  unint64_t v193 = v192 + 1;
                  if ((unint64_t)(v192 + 1) >> 62) {
                    goto LABEL_722;
                  }
                  uint64_t v194 = *v8 - (void)v191;
                  if (v194 >> 1 > v193) {
                    unint64_t v193 = v194 >> 1;
                  }
                  if ((unint64_t)v194 >= 0x7FFFFFFFFFFFFFFCLL) {
                    unint64_t v195 = 0x3FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v195 = v193;
                  }
                  if (v195)
                  {
                    char v196 = (char *)sub_227B8BBB8((uint64_t)v8, v195);
                    char v191 = *(char **)(a1 + 176);
                    char v52 = *(char **)(a1 + 184);
                  }
                  else
                  {
                    char v196 = 0;
                  }
                  unsigned int v197 = &v196[4 * v192];
                  *(_DWORD *)unsigned int v197 = 0;
                  unint64_t v198 = v197 + 4;
                  while (v52 != v191)
                  {
                    int v199 = *((_DWORD *)v52 - 1);
                    v52 -= 4;
                    *((_DWORD *)v197 - 1) = v199;
                    v197 -= 4;
                  }
                  *(void *)(a1 + 176) = v197;
                  *(void *)(a1 + 184) = v198;
                  *(void *)(a1 + 192) = &v196[4 * v195];
                  if (v191) {
                    operator delete(v191);
                  }
                  char v52 = v198;
                }
                else
                {
                  *(_DWORD *)char v52 = 0;
                  v52 += 4;
                }
                *(void *)(a1 + 184) = v52;
                unint64_t v201 = *((void *)this + 1);
                unint64_t v200 = *((void *)this + 2);
                uint64_t v202 = *(void *)this;
                if (v201 > 0xFFFFFFFFFFFFFFF5 || v201 + 10 > v200)
                {
                  char v204 = 0;
                  unsigned int v205 = 0;
                  uint64_t v211 = 0;
                  if (v200 <= v201) {
                    uint64_t v206 = *((void *)this + 1);
                  }
                  else {
                    uint64_t v206 = *((void *)this + 2);
                  }
                  while (1)
                  {
                    if (v206 == v201) {
                      goto LABEL_409;
                    }
                    unint64_t v207 = v201++;
                    char v208 = *(unsigned char *)(v202 + v207);
                    *((void *)this + 1) = v201;
                    v211 |= (unint64_t)(v208 & 0x7F) << v204;
                    if ((v208 & 0x80) == 0) {
                      break;
                    }
                    v204 += 7;
                    BOOL v65 = v205++ > 8;
                    if (v65)
                    {
                      LODWORD(v211) = 0;
                      goto LABEL_360;
                    }
                  }
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v211) = 0;
                  }
LABEL_360:
                  unint64_t v212 = v207 + 1;
                }
                else
                {
                  char v209 = 0;
                  unsigned int v210 = 0;
                  uint64_t v211 = 0;
                  while (1)
                  {
                    unint64_t v212 = v201 + 1;
                    *((void *)this + 1) = v201 + 1;
                    char v213 = *(unsigned char *)(v202 + v201);
                    v211 |= (unint64_t)(v213 & 0x7F) << v209;
                    if ((v213 & 0x80) == 0) {
                      break;
                    }
                    v209 += 7;
                    unint64_t v201 = v212;
                    BOOL v65 = v210++ > 8;
                    if (v65)
                    {
                      LODWORD(v211) = 0;
                      break;
                    }
                  }
                }
                *((_DWORD *)v52 - 1) = v211;
              }
              while (v212 < v200 && !*((unsigned char *)this + 24));
            }
            goto LABEL_410;
          }
          unsigned int v263 = *(char **)(a1 + 184);
          unint64_t v262 = *(void *)(a1 + 192);
          if ((unint64_t)v263 >= v262)
          {
            char v302 = (char *)*v419;
            uint64_t v303 = (v263 - (unsigned char *)*v419) >> 2;
            unint64_t v304 = v303 + 1;
            if ((unint64_t)(v303 + 1) >> 62) {
LABEL_722:
            }
              sub_227B8B89C();
            uint64_t v305 = v262 - (void)v302;
            if (v305 >> 1 > v304) {
              unint64_t v304 = v305 >> 1;
            }
            if ((unint64_t)v305 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v306 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v306 = v304;
            }
            if (v306)
            {
              unsigned int v307 = (char *)sub_227B8BBB8((uint64_t)v8, v306);
              char v302 = *(char **)(a1 + 176);
              unsigned int v263 = *(char **)(a1 + 184);
            }
            else
            {
              unsigned int v307 = 0;
            }
            int v387 = &v307[4 * v303];
            *(_DWORD *)int v387 = 0;
            unsigned int v251 = v387 + 4;
            while (v263 != v302)
            {
              int v388 = *((_DWORD *)v263 - 1);
              v263 -= 4;
              *((_DWORD *)v387 - 1) = v388;
              v387 -= 4;
            }
            *(void *)(a1 + 176) = v387;
            *(void *)(a1 + 184) = v251;
            *(void *)(a1 + 192) = &v307[4 * v306];
            if (v302) {
              operator delete(v302);
            }
          }
          else
          {
            *(_DWORD *)unsigned int v263 = 0;
            unsigned int v251 = v263 + 4;
          }
          *(void *)(a1 + 184) = v251;
          unint64_t v389 = *((void *)this + 1);
          unint64_t v390 = *((void *)this + 2);
          uint64_t v391 = *(void *)this;
          char v392 = 0;
          unsigned int v393 = 0;
          if (v389 <= 0xFFFFFFFFFFFFFFF5 && v389 + 10 <= v390)
          {
            uint64_t v324 = 0;
            while (1)
            {
              unint64_t v397 = v389 + 1;
              *((void *)this + 1) = v389 + 1;
              char v398 = *(unsigned char *)(v391 + v389);
              v324 |= (unint64_t)(v398 & 0x7F) << v392;
              if ((v398 & 0x80) == 0) {
                goto LABEL_705;
              }
              v392 += 7;
              unint64_t v389 = v397;
              BOOL v65 = v393++ > 8;
              if (v65) {
                goto LABEL_704;
              }
            }
          }
          uint64_t v324 = 0;
          if (v390 <= v389) {
            unint64_t v390 = *((void *)this + 1);
          }
          while (v390 != v389)
          {
            unint64_t v395 = v389 + 1;
            char v396 = *(unsigned char *)(v391 + v389);
            *((void *)this + 1) = v395;
            v324 |= (unint64_t)(v396 & 0x7F) << v392;
            if ((v396 & 0x80) == 0) {
              goto LABEL_698;
            }
            v392 += 7;
            unint64_t v389 = v395;
            BOOL v65 = v393++ > 8;
            if (v65) {
              goto LABEL_704;
            }
          }
          goto LABEL_697;
        case 0xCu:
          if (v26 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            if (*((void *)this + 1) < *((void *)this + 2) && !*((unsigned char *)this + 24))
            {
              char v52 = *(char **)(a1 + 112);
              do
              {
                if ((unint64_t)v52 >= *v421)
                {
                  char v214 = (char *)*v420;
                  uint64_t v215 = (v52 - (unsigned char *)*v420) >> 2;
                  unint64_t v216 = v215 + 1;
                  if ((unint64_t)(v215 + 1) >> 62) {
                    goto LABEL_723;
                  }
                  uint64_t v217 = *v421 - (void)v214;
                  if (v217 >> 1 > v216) {
                    unint64_t v216 = v217 >> 1;
                  }
                  if ((unint64_t)v217 >= 0x7FFFFFFFFFFFFFFCLL) {
                    unint64_t v218 = 0x3FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v218 = v216;
                  }
                  if (v218)
                  {
                    unint64_t v219 = (char *)sub_227B8BBB8((uint64_t)v421, v218);
                    char v214 = *(char **)(a1 + 104);
                    char v52 = *(char **)(a1 + 112);
                  }
                  else
                  {
                    unint64_t v219 = 0;
                  }
                  unint64_t v220 = &v219[4 * v215];
                  *(_DWORD *)unint64_t v220 = 0;
                  unint64_t v221 = v220 + 4;
                  while (v52 != v214)
                  {
                    int v222 = *((_DWORD *)v52 - 1);
                    v52 -= 4;
                    *((_DWORD *)v220 - 1) = v222;
                    v220 -= 4;
                  }
                  *(void *)(a1 + 104) = v220;
                  *(void *)(a1 + 112) = v221;
                  *(void *)(a1 + 120) = &v219[4 * v218];
                  if (v214) {
                    operator delete(v214);
                  }
                  char v52 = v221;
                }
                else
                {
                  *(_DWORD *)char v52 = 0;
                  v52 += 4;
                }
                *(void *)(a1 + 112) = v52;
                unint64_t v224 = *((void *)this + 1);
                unint64_t v223 = *((void *)this + 2);
                uint64_t v225 = *(void *)this;
                if (v224 <= 0xFFFFFFFFFFFFFFF5 && v224 + 10 <= v223)
                {
                  char v232 = 0;
                  unsigned int v233 = 0;
                  uint64_t v234 = 0;
                  while (1)
                  {
                    unint64_t v235 = v224 + 1;
                    *((void *)this + 1) = v224 + 1;
                    char v236 = *(unsigned char *)(v225 + v224);
                    v234 |= (unint64_t)(v236 & 0x7F) << v232;
                    if ((v236 & 0x80) == 0) {
                      goto LABEL_406;
                    }
                    v232 += 7;
                    unint64_t v224 = v235;
                    BOOL v65 = v233++ > 8;
                    if (v65)
                    {
                      LODWORD(v234) = 0;
                      goto LABEL_406;
                    }
                  }
                }
                char v227 = 0;
                unsigned int v228 = 0;
                uint64_t v234 = 0;
                if (v223 <= v224) {
                  uint64_t v229 = *((void *)this + 1);
                }
                else {
                  uint64_t v229 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v229 == v224)
                  {
LABEL_409:
                    *((unsigned char *)this + 24) = 1;
                    *((_DWORD *)v52 - 1) = 0;
                    goto LABEL_410;
                  }
                  unint64_t v230 = v224++;
                  char v231 = *(unsigned char *)(v225 + v230);
                  *((void *)this + 1) = v224;
                  v234 |= (unint64_t)(v231 & 0x7F) << v227;
                  if ((v231 & 0x80) == 0) {
                    break;
                  }
                  v227 += 7;
                  BOOL v65 = v228++ > 8;
                  if (v65)
                  {
                    LODWORD(v234) = 0;
                    goto LABEL_405;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v234) = 0;
                }
LABEL_405:
                unint64_t v235 = v230 + 1;
LABEL_406:
                *((_DWORD *)v52 - 1) = v234;
              }
              while (v235 < v223 && !*((unsigned char *)this + 24));
            }
LABEL_410:
            PB::Reader::recallMark();
          }
          else
          {
            char v265 = *(char **)(a1 + 112);
            unint64_t v264 = *(void *)(a1 + 120);
            if ((unint64_t)v265 >= v264)
            {
              unint64_t v308 = (char *)*v420;
              uint64_t v309 = (v265 - (unsigned char *)*v420) >> 2;
              unint64_t v310 = v309 + 1;
              if ((unint64_t)(v309 + 1) >> 62) {
LABEL_723:
              }
                sub_227B8B89C();
              uint64_t v311 = v264 - (void)v308;
              if (v311 >> 1 > v310) {
                unint64_t v310 = v311 >> 1;
              }
              if ((unint64_t)v311 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v312 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v312 = v310;
              }
              if (v312)
              {
                char v313 = (char *)sub_227B8BBB8((uint64_t)v421, v312);
                unint64_t v308 = *(char **)(a1 + 104);
                char v265 = *(char **)(a1 + 112);
              }
              else
              {
                char v313 = 0;
              }
              unint64_t v399 = &v313[4 * v309];
              *(_DWORD *)unint64_t v399 = 0;
              unsigned int v251 = v399 + 4;
              while (v265 != v308)
              {
                int v400 = *((_DWORD *)v265 - 1);
                v265 -= 4;
                *((_DWORD *)v399 - 1) = v400;
                v399 -= 4;
              }
              *(void *)(a1 + 104) = v399;
              *(void *)(a1 + 112) = v251;
              *(void *)(a1 + 120) = &v313[4 * v312];
              if (v308) {
                operator delete(v308);
              }
            }
            else
            {
              *(_DWORD *)char v265 = 0;
              unsigned int v251 = v265 + 4;
            }
            *(void *)(a1 + 112) = v251;
            unint64_t v401 = *((void *)this + 1);
            unint64_t v402 = *((void *)this + 2);
            uint64_t v403 = *(void *)this;
            char v404 = 0;
            unsigned int v405 = 0;
            if (v401 > 0xFFFFFFFFFFFFFFF5 || v401 + 10 > v402)
            {
              uint64_t v324 = 0;
              if (v402 <= v401) {
                unint64_t v402 = *((void *)this + 1);
              }
              while (v402 != v401)
              {
                unint64_t v407 = v401 + 1;
                char v408 = *(unsigned char *)(v403 + v401);
                *((void *)this + 1) = v407;
                v324 |= (unint64_t)(v408 & 0x7F) << v404;
                if ((v408 & 0x80) == 0)
                {
LABEL_698:
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v324) = 0;
                  }
                  goto LABEL_705;
                }
                v404 += 7;
                unint64_t v401 = v407;
                BOOL v65 = v405++ > 8;
                if (v65)
                {
LABEL_704:
                  LODWORD(v324) = 0;
                  goto LABEL_705;
                }
              }
LABEL_697:
              LODWORD(v324) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              uint64_t v324 = 0;
              while (1)
              {
                unint64_t v409 = v401 + 1;
                *((void *)this + 1) = v401 + 1;
                char v410 = *(unsigned char *)(v403 + v401);
                v324 |= (unint64_t)(v410 & 0x7F) << v404;
                if ((v410 & 0x80) == 0) {
                  break;
                }
                v404 += 7;
                unint64_t v401 = v409;
                BOOL v65 = v405++ > 8;
                if (v65) {
                  goto LABEL_704;
                }
              }
            }
LABEL_705:
            *(v251 - 1) = v324;
          }
LABEL_706:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_706;
      }
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v18 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v23 = v2 + 1;
      char v24 = *(unsigned char *)(v15 + v2);
      *((void *)this + 1) = v23;
      v18 |= (unint64_t)(v24 & 0x7F) << v21;
      if ((v24 & 0x80) == 0) {
        goto LABEL_21;
      }
      v21 += 7;
      unint64_t v2 = v23;
      if (v22++ >= 9)
      {
LABEL_20:
        unint64_t v18 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B9AB2C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 224);
  if ((v4 & 2) != 0)
  {
    double result = PB::Writer::write(this, *(double *)(result + 208));
    char v4 = *(unsigned char *)(v3 + 224);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
LABEL_33:
      double result = PB::Writer::writeVarInt(this);
      if ((*(unsigned char *)(v3 + 224) & 4) == 0) {
        goto LABEL_6;
      }
      goto LABEL_5;
    }
  }
  else if ((*(unsigned char *)(result + 224) & 1) == 0)
  {
    goto LABEL_3;
  }
  double result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 224);
  if ((v4 & 8) != 0) {
    goto LABEL_33;
  }
LABEL_4:
  if ((v4 & 4) != 0) {
LABEL_5:
  }
    double result = PB::Writer::writeVarInt(this);
LABEL_6:
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  while (v5 != v6)
  {
    v5 += 4;
    double result = PB::Writer::writeVarInt(this);
  }
  uint64_t v7 = *(void *)(v3 + 32);
  uint64_t v8 = *(void *)(v3 + 40);
  while (v7 != v8)
  {
    v7 += 4;
    double result = PB::Writer::writeVarInt(this);
  }
  uint64_t v9 = *(void *)(v3 + 56);
  uint64_t v10 = *(void *)(v3 + 64);
  while (v9 != v10)
  {
    v9 += 4;
    double result = PB::Writer::writeVarInt(this);
  }
  uint64_t v11 = *(void *)(v3 + 80);
  uint64_t v12 = *(void *)(v3 + 88);
  while (v11 != v12)
  {
    v11 += 4;
    double result = PB::Writer::writeVarInt(this);
  }
  uint64_t v13 = *(void *)(v3 + 128);
  uint64_t v14 = *(void *)(v3 + 136);
  while (v13 != v14)
  {
    v13 += 4;
    double result = PB::Writer::writeVarInt(this);
  }
  uint64_t v15 = *(void *)(v3 + 152);
  uint64_t v16 = *(void *)(v3 + 160);
  while (v15 != v16)
  {
    v15 += 4;
    double result = PB::Writer::writeVarInt(this);
  }
  uint64_t v17 = *(void *)(v3 + 176);
  uint64_t v18 = *(void *)(v3 + 184);
  while (v17 != v18)
  {
    v17 += 4;
    double result = PB::Writer::writeVarInt(this);
  }
  uint64_t v20 = *(void *)(v3 + 104);
  uint64_t v19 = *(void *)(v3 + 112);
  while (v20 != v19)
  {
    v20 += 4;
    double result = PB::Writer::writeVarInt(this);
  }
  return result;
}

uint64_t sub_227B9ACC8(uint64_t result)
{
  *(void *)double result = &unk_26DC225E0;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

void sub_227B9ACF0(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B9AD28(uint64_t result, uint64_t a2)
{
  *(void *)double result = &unk_26DC225E0;
  *(_DWORD *)(result + 56) = 0;
  __int16 v2 = *(_WORD *)(a2 + 56);
  if ((v2 & 4) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 24);
    __int16 v3 = 4;
    *(_WORD *)(result + 56) = 4;
    *(_DWORD *)(result + 24) = v4;
    __int16 v2 = *(_WORD *)(a2 + 56);
    if ((v2 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 0x20) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 36);
    v3 |= 0x20u;
    *(_WORD *)(result + 56) = v3;
    *(_DWORD *)(result + 36) = v5;
    __int16 v2 = *(_WORD *)(a2 + 56);
  }
LABEL_6:
  if ((v2 & 0x200) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 52);
    v3 |= 0x200u;
    *(_WORD *)(result + 56) = v3;
    *(_DWORD *)(result + 52) = v6;
    __int16 v2 = *(_WORD *)(a2 + 56);
    if ((v2 & 0x10) == 0)
    {
LABEL_8:
      if ((v2 & 2) == 0) {
        goto LABEL_9;
      }
      goto LABEL_17;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 32);
  v3 |= 0x10u;
  *(_WORD *)(result + 56) = v3;
  *(_DWORD *)(result + 32) = v7;
  __int16 v2 = *(_WORD *)(a2 + 56);
  if ((v2 & 2) == 0)
  {
LABEL_9:
    if ((v2 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t v8 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(result + 56) = v3;
  *(void *)(result + 16) = v8;
  __int16 v2 = *(_WORD *)(a2 + 56);
  if ((v2 & 0x100) == 0)
  {
LABEL_10:
    if ((v2 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_19;
  }
LABEL_18:
  int v9 = *(_DWORD *)(a2 + 48);
  v3 |= 0x100u;
  *(_WORD *)(result + 56) = v3;
  *(_DWORD *)(result + 48) = v9;
  __int16 v2 = *(_WORD *)(a2 + 56);
  if ((v2 & 0x80) == 0)
  {
LABEL_11:
    if ((v2 & 0x40) == 0) {
      goto LABEL_12;
    }
    goto LABEL_20;
  }
LABEL_19:
  int v10 = *(_DWORD *)(a2 + 44);
  v3 |= 0x80u;
  *(_WORD *)(result + 56) = v3;
  *(_DWORD *)(result + 44) = v10;
  __int16 v2 = *(_WORD *)(a2 + 56);
  if ((v2 & 0x40) == 0)
  {
LABEL_12:
    if ((v2 & 1) == 0) {
      goto LABEL_13;
    }
    goto LABEL_21;
  }
LABEL_20:
  int v11 = *(_DWORD *)(a2 + 40);
  v3 |= 0x40u;
  *(_WORD *)(result + 56) = v3;
  *(_DWORD *)(result + 40) = v11;
  __int16 v2 = *(_WORD *)(a2 + 56);
  if ((v2 & 1) == 0)
  {
LABEL_13:
    if ((v2 & 8) == 0) {
      return result;
    }
LABEL_22:
    int v13 = *(_DWORD *)(a2 + 28);
    *(_WORD *)(result + 56) = v3 | 8;
    *(_DWORD *)(result + 28) = v13;
    return result;
  }
LABEL_21:
  uint64_t v12 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(result + 56) = v3;
  *(void *)(result + 8) = v12;
  if ((*(_WORD *)(a2 + 56) & 8) != 0) {
    goto LABEL_22;
  }
  return result;
}

uint64_t sub_227B9AE6C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 56);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "base", *(float *)(a1 + 24));
    __int16 v5 = *(_WORD *)(a1 + 56);
    if ((v5 & 8) == 0)
    {
LABEL_3:
      if ((v5 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v5 & 8) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "broken");
  __int16 v5 = *(_WORD *)(a1 + 56);
  if ((v5 & 0x10) == 0)
  {
LABEL_4:
    if ((v5 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  PB::TextFormatter::format(this, "location");
  __int16 v5 = *(_WORD *)(a1 + 56);
  if ((v5 & 0x20) == 0)
  {
LABEL_5:
    if ((v5 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "peak", *(float *)(a1 + 36));
  __int16 v5 = *(_WORD *)(a1 + 56);
  if ((v5 & 0x40) == 0)
  {
LABEL_6:
    if ((v5 & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "sensor");
  __int16 v5 = *(_WORD *)(a1 + 56);
  if ((v5 & 1) == 0)
  {
LABEL_7:
    if ((v5 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "sensorTime");
  __int16 v5 = *(_WORD *)(a1 + 56);
  if ((v5 & 0x80) == 0)
  {
LABEL_8:
    if ((v5 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "sequenceNumber");
  __int16 v5 = *(_WORD *)(a1 + 56);
  if ((v5 & 0x100) == 0)
  {
LABEL_9:
    if ((v5 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "status");
  __int16 v5 = *(_WORD *)(a1 + 56);
  if ((v5 & 0x200) == 0)
  {
LABEL_10:
    if ((v5 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_23:
  PB::TextFormatter::format(this, "temp", *(float *)(a1 + 52));
  if ((*(_WORD *)(a1 + 56) & 2) != 0) {
LABEL_11:
  }
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 16));
LABEL_12:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B9AFF0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 56) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_43;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_33;
            case 2u:
              *(_WORD *)(a1 + 56) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_43;
              }
              *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_33;
            case 3u:
              *(_WORD *)(a1 + 56) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_43;
              }
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
LABEL_33:
              unint64_t v2 = *((void *)this + 1) + 4;
              goto LABEL_122;
            case 4u:
              *(_WORD *)(a1 + 56) |= 8u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v57 = 0;
                unsigned int v58 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_127;
                  }
                  unint64_t v59 = v21++;
                  char v60 = *(unsigned char *)(v22 + v59);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v60 & 0x7F) << v57;
                  if ((v60 & 0x80) == 0) {
                    break;
                  }
                  v57 += 7;
                  BOOL v14 = v58++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_126:
                    unint64_t v2 = v59 + 1;
                    goto LABEL_127;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_126;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_127;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_127:
              *(_DWORD *)(a1 + 28) = v25;
              goto LABEL_153;
            case 5u:
              *(_WORD *)(a1 + 56) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
                unint64_t v2 = *((void *)this + 1) + 8;
LABEL_122:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_43:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_153;
            case 6u:
              *(_WORD *)(a1 + 56) |= 0x100u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v61 = 0;
                unsigned int v62 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_132;
                  }
                  unint64_t v63 = v27++;
                  char v64 = *(unsigned char *)(v28 + v63);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v64 & 0x7F) << v61;
                  if ((v64 & 0x80) == 0) {
                    break;
                  }
                  v61 += 7;
                  BOOL v14 = v62++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_131:
                    unint64_t v2 = v63 + 1;
                    goto LABEL_132;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_131;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_132;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_132:
              *(_DWORD *)(a1 + 48) = v31;
              goto LABEL_153;
            case 7u:
              *(_WORD *)(a1 + 56) |= 0x80u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v65 = 0;
                unsigned int v66 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_137;
                  }
                  unint64_t v67 = v33++;
                  char v68 = *(unsigned char *)(v34 + v67);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v68 & 0x7F) << v65;
                  if ((v68 & 0x80) == 0) {
                    break;
                  }
                  v65 += 7;
                  BOOL v14 = v66++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_136:
                    unint64_t v2 = v67 + 1;
                    goto LABEL_137;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_136;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_137;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_137:
              *(_DWORD *)(a1 + 44) = v37;
              goto LABEL_153;
            case 8u:
              *(_WORD *)(a1 + 56) |= 0x40u;
              unint64_t v39 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v40 = *(void *)this;
              if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
              {
                char v69 = 0;
                unsigned int v70 = 0;
                uint64_t v43 = 0;
                if (v2 <= v39) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v39)
                  {
                    LODWORD(v43) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_142;
                  }
                  unint64_t v71 = v39++;
                  char v72 = *(unsigned char *)(v40 + v71);
                  *((void *)this + 1) = v39;
                  v43 |= (unint64_t)(v72 & 0x7F) << v69;
                  if ((v72 & 0x80) == 0) {
                    break;
                  }
                  v69 += 7;
                  BOOL v14 = v70++ > 8;
                  if (v14)
                  {
                    LODWORD(v43) = 0;
LABEL_141:
                    unint64_t v2 = v71 + 1;
                    goto LABEL_142;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v43) = 0;
                }
                goto LABEL_141;
              }
              char v41 = 0;
              unsigned int v42 = 0;
              uint64_t v43 = 0;
              do
              {
                unint64_t v2 = v39 + 1;
                *((void *)this + 1) = v39 + 1;
                char v44 = *(unsigned char *)(v40 + v39);
                v43 |= (unint64_t)(v44 & 0x7F) << v41;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_142;
                }
                v41 += 7;
                unint64_t v39 = v2;
                BOOL v14 = v42++ > 8;
              }
              while (!v14);
              LODWORD(v43) = 0;
LABEL_142:
              *(_DWORD *)(a1 + 40) = v43;
              goto LABEL_153;
            case 9u:
              *(_WORD *)(a1 + 56) |= 0x10u;
              unint64_t v45 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v46 = *(void *)this;
              if (v45 > 0xFFFFFFFFFFFFFFF5 || v45 + 10 > v2)
              {
                char v73 = 0;
                unsigned int v74 = 0;
                uint64_t v49 = 0;
                if (v2 <= v45) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v45)
                  {
                    LODWORD(v49) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_147;
                  }
                  unint64_t v75 = v45++;
                  char v76 = *(unsigned char *)(v46 + v75);
                  *((void *)this + 1) = v45;
                  v49 |= (unint64_t)(v76 & 0x7F) << v73;
                  if ((v76 & 0x80) == 0) {
                    break;
                  }
                  v73 += 7;
                  BOOL v14 = v74++ > 8;
                  if (v14)
                  {
                    LODWORD(v49) = 0;
LABEL_146:
                    unint64_t v2 = v75 + 1;
                    goto LABEL_147;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v49) = 0;
                }
                goto LABEL_146;
              }
              char v47 = 0;
              unsigned int v48 = 0;
              uint64_t v49 = 0;
              do
              {
                unint64_t v2 = v45 + 1;
                *((void *)this + 1) = v45 + 1;
                char v50 = *(unsigned char *)(v46 + v45);
                v49 |= (unint64_t)(v50 & 0x7F) << v47;
                if ((v50 & 0x80) == 0) {
                  goto LABEL_147;
                }
                v47 += 7;
                unint64_t v45 = v2;
                BOOL v14 = v48++ > 8;
              }
              while (!v14);
              LODWORD(v49) = 0;
LABEL_147:
              *(_DWORD *)(a1 + 32) = v49;
              goto LABEL_153;
            case 0xAu:
              *(_WORD *)(a1 + 56) |= 1u;
              unint64_t v51 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v52 = *(void *)this;
              if (v51 > 0xFFFFFFFFFFFFFFF5 || v51 + 10 > v2)
              {
                char v77 = 0;
                unsigned int v78 = 0;
                uint64_t v55 = 0;
                if (v2 <= v51) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v51)
                  {
                    uint64_t v55 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_152;
                  }
                  unint64_t v79 = v51++;
                  char v80 = *(unsigned char *)(v52 + v79);
                  *((void *)this + 1) = v51;
                  v55 |= (unint64_t)(v80 & 0x7F) << v77;
                  if ((v80 & 0x80) == 0) {
                    break;
                  }
                  v77 += 7;
                  BOOL v14 = v78++ > 8;
                  if (v14)
                  {
                    uint64_t v55 = 0;
LABEL_151:
                    unint64_t v2 = v79 + 1;
                    goto LABEL_152;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v55 = 0;
                }
                goto LABEL_151;
              }
              char v53 = 0;
              unsigned int v54 = 0;
              uint64_t v55 = 0;
              do
              {
                unint64_t v2 = v51 + 1;
                *((void *)this + 1) = v51 + 1;
                char v56 = *(unsigned char *)(v52 + v51);
                v55 |= (unint64_t)(v56 & 0x7F) << v53;
                if ((v56 & 0x80) == 0) {
                  goto LABEL_152;
                }
                v53 += 7;
                unint64_t v51 = v2;
                BOOL v14 = v54++ > 8;
              }
              while (!v14);
              uint64_t v55 = 0;
LABEL_152:
              *(void *)(a1 + 8) = v55;
LABEL_153:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_153;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B9B810(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 56);
  if ((v4 & 4) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(result + 24));
    __int16 v4 = *(_WORD *)(v3 + 56);
    if ((v4 & 0x20) == 0)
    {
LABEL_3:
      if ((v4 & 0x200) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v4 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36));
  __int16 v4 = *(_WORD *)(v3 + 56);
  if ((v4 & 0x200) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
  __int16 v4 = *(_WORD *)(v3 + 56);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 56);
  if ((v4 & 2) == 0)
  {
LABEL_6:
    if ((v4 & 0x100) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  __int16 v4 = *(_WORD *)(v3 + 56);
  if ((v4 & 0x100) == 0)
  {
LABEL_7:
    if ((v4 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 56);
  if ((v4 & 0x80) == 0)
  {
LABEL_8:
    if ((v4 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 56);
  if ((v4 & 0x40) == 0)
  {
LABEL_9:
    if ((v4 & 0x10) == 0) {
      goto LABEL_10;
    }
LABEL_20:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(_WORD *)(v3 + 56) & 1) == 0) {
      return result;
    }
    goto LABEL_21;
  }
LABEL_19:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 56);
  if ((v4 & 0x10) != 0) {
    goto LABEL_20;
  }
LABEL_10:
  if ((v4 & 1) == 0) {
    return result;
  }
LABEL_21:

  return PB::Writer::writeVarInt(this);
}

double sub_227B9B960(uint64_t a1)
{
  *(void *)a1 = &unk_26DC22618;
  *(_DWORD *)(a1 + 104) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)(a1 + 72) = 0;
  return result;
}

void sub_227B9B99C(uint64_t a1)
{
  *(void *)a1 = &unk_26DC22618;
  __int16 v4 = (void **)(a1 + 56);
  sub_227B8B5D0(&v4);
  unint64_t v2 = *(void **)(a1 + 32);
  if (v2)
  {
    *(void *)(a1 + 40) = v2;
    operator delete(v2);
  }
  uint64_t v3 = *(void **)(a1 + 8);
  if (v3)
  {
    *(void *)(a1 + 16) = v3;
    operator delete(v3);
  }
  PB::Base::~Base((PB::Base *)a1);
}

void sub_227B9BA1C(uint64_t a1)
{
  sub_227B9B99C(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B9BA54(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)a1 = &unk_26DC22618;
  *(_DWORD *)(a1 + 104) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 72) = 0;
  if ((*(unsigned char *)(a2 + 104) & 8) != 0)
  {
    int v5 = *(_DWORD *)(a2 + 92);
    *(unsigned char *)(a1 + 104) = 8;
    *(_DWORD *)(a1 + 92) = v5;
    char v4 = 12;
    if ((*(unsigned char *)(a2 + 104) & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v4 = 4;
  if ((*(unsigned char *)(a2 + 104) & 4) != 0)
  {
LABEL_5:
    int v6 = *(_DWORD *)(a2 + 88);
    *(unsigned char *)(a1 + 104) = v4;
    *(_DWORD *)(a1 + 88) = v6;
  }
LABEL_6:
  if (*(void *)(a2 + 56) != *(void *)(a2 + 64)) {
    sub_227B45894();
  }
  if (a1 != a2)
  {
    sub_227B8BA68((char *)(a1 + 8), *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
    sub_227B8BA68((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
  }
  char v7 = *(unsigned char *)(a2 + 104);
  if (v7)
  {
    int v10 = *(_DWORD *)(a2 + 80);
    *(unsigned char *)(a1 + 104) |= 1u;
    *(_DWORD *)(a1 + 80) = v10;
    char v7 = *(unsigned char *)(a2 + 104);
    if ((v7 & 0x10) == 0)
    {
LABEL_12:
      if ((v7 & 2) == 0) {
        goto LABEL_13;
      }
LABEL_18:
      int v12 = *(_DWORD *)(a2 + 84);
      *(unsigned char *)(a1 + 104) |= 2u;
      *(_DWORD *)(a1 + 84) = v12;
      if ((*(unsigned char *)(a2 + 104) & 0x20) == 0) {
        return a1;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(a2 + 104) & 0x10) == 0)
  {
    goto LABEL_12;
  }
  int v11 = *(_DWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 104) |= 0x10u;
  *(_DWORD *)(a1 + 96) = v11;
  char v7 = *(unsigned char *)(a2 + 104);
  if ((v7 & 2) != 0) {
    goto LABEL_18;
  }
LABEL_13:
  if ((v7 & 0x20) != 0)
  {
LABEL_14:
    int v8 = *(_DWORD *)(a2 + 100);
    *(unsigned char *)(a1 + 104) |= 0x20u;
    *(_DWORD *)(a1 + 100) = v8;
  }
  return a1;
}

uint64_t sub_227B9BBE4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 104);
  if (v5)
  {
    PB::TextFormatter::format(this, "conchaDropped");
    char v5 = *(unsigned char *)(a1 + 104);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_21;
    }
  }
  else if ((*(unsigned char *)(a1 + 104) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "conchaRecovered");
  char v5 = *(unsigned char *)(a1 + 104);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_21:
  PB::TextFormatter::format(this, "iedState");
  if ((*(unsigned char *)(a1 + 104) & 8) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "location");
LABEL_6:
  int v6 = *(float **)(a1 + 8);
  char v7 = *(float **)(a1 + 16);
  while (v6 != v7)
  {
    float v8 = *v6++;
    PB::TextFormatter::format(this, "mean", v8);
  }
  char v9 = *(uint64_t **)(a1 + 56);
  int v10 = *(uint64_t **)(a1 + 64);
  while (v9 != v10)
  {
    uint64_t v11 = *v9++;
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v11 + 32))(v11, this, "optical");
  }
  char v12 = *(unsigned char *)(a1 + 104);
  if ((v12 & 0x10) != 0)
  {
    PB::TextFormatter::format(this, "tragusDropped");
    char v12 = *(unsigned char *)(a1 + 104);
  }
  if ((v12 & 0x20) != 0) {
    PB::TextFormatter::format(this, "tragusRecovered");
  }
  char v13 = *(float **)(a1 + 32);
  BOOL v14 = *(float **)(a1 + 40);
  while (v13 != v14)
  {
    float v15 = *v13++;
    PB::TextFormatter::format(this, "variance", v15);
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227B9BD94(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    float v8 = (void **)(a1 + 32);
    uint64_t v9 = a1 + 48;
    int v10 = (void **)(a1 + 8);
    uint64_t v11 = a1 + 24;
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        BOOL v18 = v14++ > 8;
        if (v18) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v24 = v15 & 7;
      if (v24 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v15 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 104) |= 8u;
          unint64_t v25 = *((void *)this + 1);
          unint64_t v26 = *((void *)this + 2);
          uint64_t v27 = *(void *)this;
          if (v25 <= 0xFFFFFFFFFFFFFFF5 && v25 + 10 <= v26)
          {
            char v28 = 0;
            unsigned int v29 = 0;
            uint64_t v30 = 0;
            do
            {
              unint64_t v31 = v25 + 1;
              *((void *)this + 1) = v25 + 1;
              char v32 = *(unsigned char *)(v27 + v25);
              v30 |= (unint64_t)(v32 & 0x7F) << v28;
              if ((v32 & 0x80) == 0) {
                goto LABEL_188;
              }
              v28 += 7;
              unint64_t v25 = v31;
              BOOL v18 = v29++ > 8;
            }
            while (!v18);
LABEL_122:
            LODWORD(v30) = 0;
            goto LABEL_188;
          }
          char v101 = 0;
          unsigned int v102 = 0;
          uint64_t v30 = 0;
          if (v26 <= v25) {
            unint64_t v26 = *((void *)this + 1);
          }
          while (2)
          {
            if (v26 == v25)
            {
              LODWORD(v30) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v103 = v25 + 1;
              char v104 = *(unsigned char *)(v27 + v25);
              *((void *)this + 1) = v103;
              v30 |= (unint64_t)(v104 & 0x7F) << v101;
              if (v104 < 0)
              {
                v101 += 7;
                unint64_t v25 = v103;
                BOOL v18 = v102++ > 8;
                if (v18) {
                  goto LABEL_122;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v30) = 0;
              }
            }
            break;
          }
LABEL_188:
          *(_DWORD *)(a1 + 92) = v30;
          goto LABEL_222;
        case 2u:
          *(unsigned char *)(a1 + 104) |= 4u;
          unint64_t v33 = *((void *)this + 1);
          unint64_t v34 = *((void *)this + 2);
          uint64_t v35 = *(void *)this;
          if (v33 <= 0xFFFFFFFFFFFFFFF5 && v33 + 10 <= v34)
          {
            char v36 = 0;
            unsigned int v37 = 0;
            uint64_t v38 = 0;
            do
            {
              unint64_t v39 = v33 + 1;
              *((void *)this + 1) = v33 + 1;
              char v40 = *(unsigned char *)(v35 + v33);
              v38 |= (unint64_t)(v40 & 0x7F) << v36;
              if ((v40 & 0x80) == 0) {
                goto LABEL_191;
              }
              v36 += 7;
              unint64_t v33 = v39;
              BOOL v18 = v37++ > 8;
            }
            while (!v18);
LABEL_129:
            LODWORD(v38) = 0;
            goto LABEL_191;
          }
          char v105 = 0;
          unsigned int v106 = 0;
          uint64_t v38 = 0;
          if (v34 <= v33) {
            unint64_t v34 = *((void *)this + 1);
          }
          while (2)
          {
            if (v34 == v33)
            {
              LODWORD(v38) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v107 = v33 + 1;
              char v108 = *(unsigned char *)(v35 + v33);
              *((void *)this + 1) = v107;
              v38 |= (unint64_t)(v108 & 0x7F) << v105;
              if (v108 < 0)
              {
                v105 += 7;
                unint64_t v33 = v107;
                BOOL v18 = v106++ > 8;
                if (v18) {
                  goto LABEL_129;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v38) = 0;
              }
            }
            break;
          }
LABEL_191:
          *(_DWORD *)(a1 + 88) = v38;
          goto LABEL_222;
        case 3u:
          sub_227B45D48();
        case 4u:
          if (v24 != 2)
          {
            uint64_t v110 = *(char **)(a1 + 16);
            unint64_t v109 = *(void *)(a1 + 24);
            if ((unint64_t)v110 >= v109)
            {
              int v130 = (char *)*v10;
              uint64_t v131 = (v110 - (unsigned char *)*v10) >> 2;
              unint64_t v132 = v131 + 1;
              if ((unint64_t)(v131 + 1) >> 62) {
LABEL_232:
              }
                sub_227B8B89C();
              uint64_t v133 = v109 - (void)v130;
              if (v133 >> 1 > v132) {
                unint64_t v132 = v133 >> 1;
              }
              if ((unint64_t)v133 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v134 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v134 = v132;
              }
              if (v134)
              {
                char v135 = (char *)sub_227B8BBB8(v11, v134);
                int v130 = *(char **)(a1 + 8);
                uint64_t v110 = *(char **)(a1 + 16);
              }
              else
              {
                char v135 = 0;
              }
              uint64_t v142 = &v135[4 * v131];
              *(_DWORD *)uint64_t v142 = 0;
              unint64_t v111 = v142 + 4;
              while (v110 != v130)
              {
                int v143 = *((_DWORD *)v110 - 1);
                v110 -= 4;
                *((_DWORD *)v142 - 1) = v143;
                v142 -= 4;
              }
              *(void *)(a1 + 8) = v142;
              *(void *)(a1 + 16) = v111;
              *(void *)(a1 + 24) = &v135[4 * v134];
              if (v130) {
                operator delete(v130);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v110 = 0;
              unint64_t v111 = v110 + 4;
            }
            *(void *)(a1 + 16) = v111;
            goto LABEL_218;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v41 = *((void *)this + 1);
          unint64_t v42 = *((void *)this + 2);
          while (v41 < v42 && !*((unsigned char *)this + 24))
          {
            char v44 = *(char **)(a1 + 16);
            unint64_t v43 = *(void *)(a1 + 24);
            if ((unint64_t)v44 >= v43)
            {
              uint64_t v46 = (char *)*v10;
              uint64_t v47 = (v44 - (unsigned char *)*v10) >> 2;
              unint64_t v48 = v47 + 1;
              if ((unint64_t)(v47 + 1) >> 62) {
                goto LABEL_232;
              }
              uint64_t v49 = v43 - (void)v46;
              if (v49 >> 1 > v48) {
                unint64_t v48 = v49 >> 1;
              }
              if ((unint64_t)v49 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v50 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v50 = v48;
              }
              if (v50)
              {
                unint64_t v51 = (char *)sub_227B8BBB8(v11, v50);
                uint64_t v46 = *(char **)(a1 + 8);
                char v44 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v51 = 0;
              }
              uint64_t v52 = &v51[4 * v47];
              *(_DWORD *)uint64_t v52 = 0;
              unint64_t v45 = v52 + 4;
              while (v44 != v46)
              {
                int v53 = *((_DWORD *)v44 - 1);
                v44 -= 4;
                *((_DWORD *)v52 - 1) = v53;
                v52 -= 4;
              }
              *(void *)(a1 + 8) = v52;
              *(void *)(a1 + 16) = v45;
              *(void *)(a1 + 24) = &v51[4 * v50];
              if (v46) {
                operator delete(v46);
              }
            }
            else
            {
              *(_DWORD *)char v44 = 0;
              unint64_t v45 = v44 + 4;
            }
            *(void *)(a1 + 16) = v45;
            unint64_t v54 = *((void *)this + 1);
            if (v54 > 0xFFFFFFFFFFFFFFFBLL || v54 + 4 > *((void *)this + 2)) {
              goto LABEL_162;
            }
            *(v45 - 1) = *(_DWORD *)(*(void *)this + v54);
            unint64_t v42 = *((void *)this + 2);
            unint64_t v41 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v41;
          }
          goto LABEL_163;
        case 5u:
          if (v24 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v55 = *((void *)this + 1);
            unint64_t v56 = *((void *)this + 2);
            while (v55 < v56 && !*((unsigned char *)this + 24))
            {
              unsigned int v58 = *(char **)(a1 + 40);
              unint64_t v57 = *(void *)(a1 + 48);
              if ((unint64_t)v58 >= v57)
              {
                char v60 = (char *)*v8;
                uint64_t v61 = (v58 - (unsigned char *)*v8) >> 2;
                unint64_t v62 = v61 + 1;
                if ((unint64_t)(v61 + 1) >> 62) {
                  goto LABEL_233;
                }
                uint64_t v63 = v57 - (void)v60;
                if (v63 >> 1 > v62) {
                  unint64_t v62 = v63 >> 1;
                }
                if ((unint64_t)v63 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v64 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v64 = v62;
                }
                if (v64)
                {
                  char v65 = (char *)sub_227B8BBB8(v9, v64);
                  char v60 = *(char **)(a1 + 32);
                  unsigned int v58 = *(char **)(a1 + 40);
                }
                else
                {
                  char v65 = 0;
                }
                unsigned int v66 = &v65[4 * v61];
                *(_DWORD *)unsigned int v66 = 0;
                unint64_t v59 = v66 + 4;
                while (v58 != v60)
                {
                  int v67 = *((_DWORD *)v58 - 1);
                  v58 -= 4;
                  *((_DWORD *)v66 - 1) = v67;
                  v66 -= 4;
                }
                *(void *)(a1 + 32) = v66;
                *(void *)(a1 + 40) = v59;
                *(void *)(a1 + 48) = &v65[4 * v64];
                if (v60) {
                  operator delete(v60);
                }
              }
              else
              {
                *(_DWORD *)unsigned int v58 = 0;
                unint64_t v59 = v58 + 4;
              }
              *(void *)(a1 + 40) = v59;
              unint64_t v68 = *((void *)this + 1);
              if (v68 > 0xFFFFFFFFFFFFFFFBLL || v68 + 4 > *((void *)this + 2))
              {
LABEL_162:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v59 - 1) = *(_DWORD *)(*(void *)this + v68);
              unint64_t v56 = *((void *)this + 2);
              unint64_t v55 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v55;
            }
LABEL_163:
            PB::Reader::recallMark();
          }
          else
          {
            unsigned int v113 = *(char **)(a1 + 40);
            unint64_t v112 = *(void *)(a1 + 48);
            if ((unint64_t)v113 >= v112)
            {
              unsigned int v136 = (char *)*v8;
              uint64_t v137 = (v113 - (unsigned char *)*v8) >> 2;
              unint64_t v138 = v137 + 1;
              if ((unint64_t)(v137 + 1) >> 62) {
LABEL_233:
              }
                sub_227B8B89C();
              uint64_t v139 = v112 - (void)v136;
              if (v139 >> 1 > v138) {
                unint64_t v138 = v139 >> 1;
              }
              if ((unint64_t)v139 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v140 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v140 = v138;
              }
              if (v140)
              {
                unsigned int v141 = (char *)sub_227B8BBB8(v9, v140);
                unsigned int v136 = *(char **)(a1 + 32);
                unsigned int v113 = *(char **)(a1 + 40);
              }
              else
              {
                unsigned int v141 = 0;
              }
              char v144 = &v141[4 * v137];
              *(_DWORD *)char v144 = 0;
              unint64_t v111 = v144 + 4;
              while (v113 != v136)
              {
                int v145 = *((_DWORD *)v113 - 1);
                v113 -= 4;
                *((_DWORD *)v144 - 1) = v145;
                v144 -= 4;
              }
              *(void *)(a1 + 32) = v144;
              *(void *)(a1 + 40) = v111;
              *(void *)(a1 + 48) = &v141[4 * v140];
              if (v136) {
                operator delete(v136);
              }
            }
            else
            {
              *(_DWORD *)unsigned int v113 = 0;
              unint64_t v111 = v113 + 4;
            }
            *(void *)(a1 + 40) = v111;
LABEL_218:
            unint64_t v146 = *((void *)this + 1);
            if (v146 <= 0xFFFFFFFFFFFFFFFBLL && v146 + 4 <= *((void *)this + 2))
            {
              *(v111 - 1) = *(_DWORD *)(*(void *)this + v146);
              *((void *)this + 1) += 4;
            }
            else
            {
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_222:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        case 6u:
          *(unsigned char *)(a1 + 104) |= 1u;
          unint64_t v69 = *((void *)this + 1);
          unint64_t v70 = *((void *)this + 2);
          uint64_t v71 = *(void *)this;
          if (v69 <= 0xFFFFFFFFFFFFFFF5 && v69 + 10 <= v70)
          {
            char v72 = 0;
            unsigned int v73 = 0;
            uint64_t v74 = 0;
            do
            {
              unint64_t v75 = v69 + 1;
              *((void *)this + 1) = v69 + 1;
              char v76 = *(unsigned char *)(v71 + v69);
              v74 |= (unint64_t)(v76 & 0x7F) << v72;
              if ((v76 & 0x80) == 0) {
                goto LABEL_194;
              }
              v72 += 7;
              unint64_t v69 = v75;
              BOOL v18 = v73++ > 8;
            }
            while (!v18);
LABEL_140:
            LODWORD(v74) = 0;
            goto LABEL_194;
          }
          char v114 = 0;
          unsigned int v115 = 0;
          uint64_t v74 = 0;
          if (v70 <= v69) {
            unint64_t v70 = *((void *)this + 1);
          }
          while (2)
          {
            if (v70 == v69)
            {
              LODWORD(v74) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v116 = v69 + 1;
              char v117 = *(unsigned char *)(v71 + v69);
              *((void *)this + 1) = v116;
              v74 |= (unint64_t)(v117 & 0x7F) << v114;
              if (v117 < 0)
              {
                v114 += 7;
                unint64_t v69 = v116;
                BOOL v18 = v115++ > 8;
                if (v18) {
                  goto LABEL_140;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v74) = 0;
              }
            }
            break;
          }
LABEL_194:
          *(_DWORD *)(a1 + 80) = v74;
          goto LABEL_222;
        case 7u:
          *(unsigned char *)(a1 + 104) |= 0x10u;
          unint64_t v77 = *((void *)this + 1);
          unint64_t v78 = *((void *)this + 2);
          uint64_t v79 = *(void *)this;
          if (v77 <= 0xFFFFFFFFFFFFFFF5 && v77 + 10 <= v78)
          {
            char v80 = 0;
            unsigned int v81 = 0;
            uint64_t v82 = 0;
            do
            {
              unint64_t v83 = v77 + 1;
              *((void *)this + 1) = v77 + 1;
              char v84 = *(unsigned char *)(v79 + v77);
              v82 |= (unint64_t)(v84 & 0x7F) << v80;
              if ((v84 & 0x80) == 0) {
                goto LABEL_197;
              }
              v80 += 7;
              unint64_t v77 = v83;
              BOOL v18 = v81++ > 8;
            }
            while (!v18);
LABEL_147:
            LODWORD(v82) = 0;
            goto LABEL_197;
          }
          char v118 = 0;
          unsigned int v119 = 0;
          uint64_t v82 = 0;
          if (v78 <= v77) {
            unint64_t v78 = *((void *)this + 1);
          }
          while (2)
          {
            if (v78 == v77)
            {
              LODWORD(v82) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v120 = v77 + 1;
              char v121 = *(unsigned char *)(v79 + v77);
              *((void *)this + 1) = v120;
              v82 |= (unint64_t)(v121 & 0x7F) << v118;
              if (v121 < 0)
              {
                v118 += 7;
                unint64_t v77 = v120;
                BOOL v18 = v119++ > 8;
                if (v18) {
                  goto LABEL_147;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v82) = 0;
              }
            }
            break;
          }
LABEL_197:
          *(_DWORD *)(a1 + 96) = v82;
          goto LABEL_222;
        case 8u:
          *(unsigned char *)(a1 + 104) |= 2u;
          unint64_t v85 = *((void *)this + 1);
          unint64_t v86 = *((void *)this + 2);
          uint64_t v87 = *(void *)this;
          if (v85 <= 0xFFFFFFFFFFFFFFF5 && v85 + 10 <= v86)
          {
            char v88 = 0;
            unsigned int v89 = 0;
            uint64_t v90 = 0;
            do
            {
              unint64_t v91 = v85 + 1;
              *((void *)this + 1) = v85 + 1;
              char v92 = *(unsigned char *)(v87 + v85);
              v90 |= (unint64_t)(v92 & 0x7F) << v88;
              if ((v92 & 0x80) == 0) {
                goto LABEL_200;
              }
              v88 += 7;
              unint64_t v85 = v91;
              BOOL v18 = v89++ > 8;
            }
            while (!v18);
LABEL_154:
            LODWORD(v90) = 0;
            goto LABEL_200;
          }
          char v122 = 0;
          unsigned int v123 = 0;
          uint64_t v90 = 0;
          if (v86 <= v85) {
            unint64_t v86 = *((void *)this + 1);
          }
          while (2)
          {
            if (v86 == v85)
            {
              LODWORD(v90) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v124 = v85 + 1;
              char v125 = *(unsigned char *)(v87 + v85);
              *((void *)this + 1) = v124;
              v90 |= (unint64_t)(v125 & 0x7F) << v122;
              if (v125 < 0)
              {
                v122 += 7;
                unint64_t v85 = v124;
                BOOL v18 = v123++ > 8;
                if (v18) {
                  goto LABEL_154;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v90) = 0;
              }
            }
            break;
          }
LABEL_200:
          *(_DWORD *)(a1 + 84) = v90;
          goto LABEL_222;
        case 9u:
          *(unsigned char *)(a1 + 104) |= 0x20u;
          unint64_t v93 = *((void *)this + 1);
          unint64_t v94 = *((void *)this + 2);
          uint64_t v95 = *(void *)this;
          if (v93 <= 0xFFFFFFFFFFFFFFF5 && v93 + 10 <= v94)
          {
            char v96 = 0;
            unsigned int v97 = 0;
            uint64_t v98 = 0;
            do
            {
              unint64_t v99 = v93 + 1;
              *((void *)this + 1) = v93 + 1;
              char v100 = *(unsigned char *)(v95 + v93);
              v98 |= (unint64_t)(v100 & 0x7F) << v96;
              if ((v100 & 0x80) == 0) {
                goto LABEL_203;
              }
              v96 += 7;
              unint64_t v93 = v99;
              BOOL v18 = v97++ > 8;
            }
            while (!v18);
LABEL_161:
            LODWORD(v98) = 0;
            goto LABEL_203;
          }
          char v126 = 0;
          unsigned int v127 = 0;
          uint64_t v98 = 0;
          if (v94 <= v93) {
            unint64_t v94 = *((void *)this + 1);
          }
          while (2)
          {
            if (v94 == v93)
            {
              LODWORD(v98) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v128 = v93 + 1;
              char v129 = *(unsigned char *)(v95 + v93);
              *((void *)this + 1) = v128;
              v98 |= (unint64_t)(v129 & 0x7F) << v126;
              if (v129 < 0)
              {
                v126 += 7;
                unint64_t v93 = v128;
                BOOL v18 = v127++ > 8;
                if (v18) {
                  goto LABEL_161;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v98) = 0;
              }
            }
            break;
          }
LABEL_203:
          *(_DWORD *)(a1 + 100) = v98;
          goto LABEL_222;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_222;
      }
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v15 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v21 = v2 + 1;
      char v22 = *(unsigned char *)(v12 + v2);
      *((void *)this + 1) = v21;
      v15 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0) {
        goto LABEL_21;
      }
      v19 += 7;
      unint64_t v2 = v21;
      if (v20++ >= 9)
      {
LABEL_20:
        unint64_t v15 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B9C8D4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 104);
  if ((v4 & 8) != 0)
  {
    double result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 104);
  }
  if ((v4 & 4) != 0) {
    double result = PB::Writer::writeVarInt(this);
  }
  char v5 = *(const PB::Base ***)(v3 + 56);
  int v6 = *(const PB::Base ***)(v3 + 64);
  while (v5 != v6)
  {
    char v7 = *v5++;
    double result = PB::Writer::writeSubmessage(this, v7);
  }
  float v8 = *(float **)(v3 + 8);
  uint64_t v9 = *(float **)(v3 + 16);
  while (v8 != v9)
  {
    float v10 = *v8++;
    double result = PB::Writer::write(this, v10);
  }
  uint64_t v11 = *(float **)(v3 + 32);
  uint64_t v12 = *(float **)(v3 + 40);
  while (v11 != v12)
  {
    float v13 = *v11++;
    double result = PB::Writer::write(this, v13);
  }
  char v14 = *(unsigned char *)(v3 + 104);
  if (v14)
  {
    double result = PB::Writer::writeVarInt(this);
    char v14 = *(unsigned char *)(v3 + 104);
    if ((v14 & 0x10) == 0)
    {
LABEL_16:
      if ((v14 & 2) == 0) {
        goto LABEL_17;
      }
LABEL_21:
      double result = PB::Writer::writeVarInt(this);
      if ((*(unsigned char *)(v3 + 104) & 0x20) == 0) {
        return result;
      }
      goto LABEL_22;
    }
  }
  else if ((*(unsigned char *)(v3 + 104) & 0x10) == 0)
  {
    goto LABEL_16;
  }
  double result = PB::Writer::writeVarInt(this);
  char v14 = *(unsigned char *)(v3 + 104);
  if ((v14 & 2) != 0) {
    goto LABEL_21;
  }
LABEL_17:
  if ((v14 & 0x20) == 0) {
    return result;
  }
LABEL_22:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227B9CA18(uint64_t result)
{
  *(void *)double result = &unk_26DC22650;
  *(_DWORD *)(result + 44) = 0;
  return result;
}

void sub_227B9CA40(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B9CA78(uint64_t result, uint64_t a2)
{
  *(void *)double result = &unk_26DC22650;
  *(_DWORD *)(result + 44) = 0;
  char v2 = *(unsigned char *)(a2 + 44);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 44) = 1;
    *(void *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 44);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 44) & 4) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 20);
    v3 |= 4u;
    *(unsigned char *)(result + 44) = v3;
    *(_DWORD *)(result + 20) = v5;
    char v2 = *(unsigned char *)(a2 + 44);
  }
LABEL_6:
  if (v2 < 0)
  {
    char v6 = *(unsigned char *)(a2 + 40);
    v3 |= 0x80u;
    *(unsigned char *)(result + 44) = v3;
    *(unsigned char *)(result + 40) = v6;
    char v2 = *(unsigned char *)(a2 + 44);
    if ((v2 & 0x10) == 0)
    {
LABEL_8:
      if ((v2 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_15;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 28);
  v3 |= 0x10u;
  *(unsigned char *)(result + 44) = v3;
  *(_DWORD *)(result + 28) = v7;
  char v2 = *(unsigned char *)(a2 + 44);
  if ((v2 & 8) == 0)
  {
LABEL_9:
    if ((v2 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_16;
  }
LABEL_15:
  int v8 = *(_DWORD *)(a2 + 24);
  v3 |= 8u;
  *(unsigned char *)(result + 44) = v3;
  *(_DWORD *)(result + 24) = v8;
  char v2 = *(unsigned char *)(a2 + 44);
  if ((v2 & 0x40) == 0)
  {
LABEL_10:
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
    goto LABEL_17;
  }
LABEL_16:
  int v9 = *(_DWORD *)(a2 + 36);
  v3 |= 0x40u;
  *(unsigned char *)(result + 44) = v3;
  *(_DWORD *)(result + 36) = v9;
  char v2 = *(unsigned char *)(a2 + 44);
  if ((v2 & 2) == 0)
  {
LABEL_11:
    if ((v2 & 0x20) == 0) {
      return result;
    }
LABEL_18:
    int v11 = *(_DWORD *)(a2 + 32);
    *(unsigned char *)(result + 44) = v3 | 0x20;
    *(_DWORD *)(result + 32) = v11;
    return result;
  }
LABEL_17:
  int v10 = *(_DWORD *)(a2 + 16);
  v3 |= 2u;
  *(unsigned char *)(result + 44) = v3;
  *(_DWORD *)(result + 16) = v10;
  if ((*(unsigned char *)(a2 + 44) & 0x20) != 0) {
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_227B9CB84(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "conchaTemp");
    char v5 = *(unsigned char *)(a1 + 44);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((*(unsigned char *)(a1 + 44) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "location");
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  PB::TextFormatter::format(this, "prescalar");
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "pwrState");
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 1) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "tragusTemp");
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 0x80) == 0)
  {
LABEL_8:
    if ((v5 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_19:
  PB::TextFormatter::format(this, "valid");
  if ((*(unsigned char *)(a1 + 44) & 0x40) != 0) {
LABEL_9:
  }
    PB::TextFormatter::format(this, "wdtPeriod");
LABEL_10:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B9CCC8(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 44) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_146;
            case 2u:
              *(unsigned char *)(a1 + 44) |= 4u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v59 = 0;
                unsigned int v60 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_120;
                  }
                  unint64_t v61 = v21++;
                  char v62 = *(unsigned char *)(v22 + v61);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v62 & 0x7F) << v59;
                  if ((v62 & 0x80) == 0) {
                    break;
                  }
                  v59 += 7;
                  BOOL v14 = v60++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_119:
                    unint64_t v2 = v61 + 1;
                    goto LABEL_120;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_119;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_120;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_120:
              *(_DWORD *)(a1 + 20) = v25;
              goto LABEL_146;
            case 3u:
              *(unsigned char *)(a1 + 44) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v28 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v27 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v28 = v27 != 0;
              }
              *(unsigned char *)(a1 + 40) = v28;
              goto LABEL_146;
            case 4u:
              *(unsigned char *)(a1 + 44) |= 0x10u;
              unint64_t v29 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v30 = *(void *)this;
              if (v29 > 0xFFFFFFFFFFFFFFF5 || v29 + 10 > v2)
              {
                char v63 = 0;
                unsigned int v64 = 0;
                uint64_t v33 = 0;
                if (v2 <= v29) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v29)
                  {
                    LODWORD(v33) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_125;
                  }
                  unint64_t v65 = v29++;
                  char v66 = *(unsigned char *)(v30 + v65);
                  *((void *)this + 1) = v29;
                  v33 |= (unint64_t)(v66 & 0x7F) << v63;
                  if ((v66 & 0x80) == 0) {
                    break;
                  }
                  v63 += 7;
                  BOOL v14 = v64++ > 8;
                  if (v14)
                  {
                    LODWORD(v33) = 0;
LABEL_124:
                    unint64_t v2 = v65 + 1;
                    goto LABEL_125;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v33) = 0;
                }
                goto LABEL_124;
              }
              char v31 = 0;
              unsigned int v32 = 0;
              uint64_t v33 = 0;
              do
              {
                unint64_t v2 = v29 + 1;
                *((void *)this + 1) = v29 + 1;
                char v34 = *(unsigned char *)(v30 + v29);
                v33 |= (unint64_t)(v34 & 0x7F) << v31;
                if ((v34 & 0x80) == 0) {
                  goto LABEL_125;
                }
                v31 += 7;
                unint64_t v29 = v2;
                BOOL v14 = v32++ > 8;
              }
              while (!v14);
              LODWORD(v33) = 0;
LABEL_125:
              *(_DWORD *)(a1 + 28) = v33;
              goto LABEL_146;
            case 5u:
              *(unsigned char *)(a1 + 44) |= 8u;
              unint64_t v35 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v36 = *(void *)this;
              if (v35 > 0xFFFFFFFFFFFFFFF5 || v35 + 10 > v2)
              {
                char v67 = 0;
                unsigned int v68 = 0;
                uint64_t v39 = 0;
                if (v2 <= v35) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v35)
                  {
                    LODWORD(v39) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_130;
                  }
                  unint64_t v69 = v35++;
                  char v70 = *(unsigned char *)(v36 + v69);
                  *((void *)this + 1) = v35;
                  v39 |= (unint64_t)(v70 & 0x7F) << v67;
                  if ((v70 & 0x80) == 0) {
                    break;
                  }
                  v67 += 7;
                  BOOL v14 = v68++ > 8;
                  if (v14)
                  {
                    LODWORD(v39) = 0;
LABEL_129:
                    unint64_t v2 = v69 + 1;
                    goto LABEL_130;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v39) = 0;
                }
                goto LABEL_129;
              }
              char v37 = 0;
              unsigned int v38 = 0;
              uint64_t v39 = 0;
              do
              {
                unint64_t v2 = v35 + 1;
                *((void *)this + 1) = v35 + 1;
                char v40 = *(unsigned char *)(v36 + v35);
                v39 |= (unint64_t)(v40 & 0x7F) << v37;
                if ((v40 & 0x80) == 0) {
                  goto LABEL_130;
                }
                v37 += 7;
                unint64_t v35 = v2;
                BOOL v14 = v38++ > 8;
              }
              while (!v14);
              LODWORD(v39) = 0;
LABEL_130:
              *(_DWORD *)(a1 + 24) = v39;
              goto LABEL_146;
            case 6u:
              *(unsigned char *)(a1 + 44) |= 0x40u;
              unint64_t v41 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v42 = *(void *)this;
              if (v41 > 0xFFFFFFFFFFFFFFF5 || v41 + 10 > v2)
              {
                char v71 = 0;
                unsigned int v72 = 0;
                uint64_t v45 = 0;
                if (v2 <= v41) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v41)
                  {
                    LODWORD(v45) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_135;
                  }
                  unint64_t v73 = v41++;
                  char v74 = *(unsigned char *)(v42 + v73);
                  *((void *)this + 1) = v41;
                  v45 |= (unint64_t)(v74 & 0x7F) << v71;
                  if ((v74 & 0x80) == 0) {
                    break;
                  }
                  v71 += 7;
                  BOOL v14 = v72++ > 8;
                  if (v14)
                  {
                    LODWORD(v45) = 0;
LABEL_134:
                    unint64_t v2 = v73 + 1;
                    goto LABEL_135;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v45) = 0;
                }
                goto LABEL_134;
              }
              char v43 = 0;
              unsigned int v44 = 0;
              uint64_t v45 = 0;
              do
              {
                unint64_t v2 = v41 + 1;
                *((void *)this + 1) = v41 + 1;
                char v46 = *(unsigned char *)(v42 + v41);
                v45 |= (unint64_t)(v46 & 0x7F) << v43;
                if ((v46 & 0x80) == 0) {
                  goto LABEL_135;
                }
                v43 += 7;
                unint64_t v41 = v2;
                BOOL v14 = v44++ > 8;
              }
              while (!v14);
              LODWORD(v45) = 0;
LABEL_135:
              *(_DWORD *)(a1 + 36) = v45;
              goto LABEL_146;
            case 7u:
              *(unsigned char *)(a1 + 44) |= 2u;
              unint64_t v47 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v48 = *(void *)this;
              if (v47 > 0xFFFFFFFFFFFFFFF5 || v47 + 10 > v2)
              {
                char v75 = 0;
                unsigned int v76 = 0;
                uint64_t v51 = 0;
                if (v2 <= v47) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v47)
                  {
                    LODWORD(v51) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_140;
                  }
                  unint64_t v77 = v47++;
                  char v78 = *(unsigned char *)(v48 + v77);
                  *((void *)this + 1) = v47;
                  v51 |= (unint64_t)(v78 & 0x7F) << v75;
                  if ((v78 & 0x80) == 0) {
                    break;
                  }
                  v75 += 7;
                  BOOL v14 = v76++ > 8;
                  if (v14)
                  {
                    LODWORD(v51) = 0;
LABEL_139:
                    unint64_t v2 = v77 + 1;
                    goto LABEL_140;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v51) = 0;
                }
                goto LABEL_139;
              }
              char v49 = 0;
              unsigned int v50 = 0;
              uint64_t v51 = 0;
              do
              {
                unint64_t v2 = v47 + 1;
                *((void *)this + 1) = v47 + 1;
                char v52 = *(unsigned char *)(v48 + v47);
                v51 |= (unint64_t)(v52 & 0x7F) << v49;
                if ((v52 & 0x80) == 0) {
                  goto LABEL_140;
                }
                v49 += 7;
                unint64_t v47 = v2;
                BOOL v14 = v50++ > 8;
              }
              while (!v14);
              LODWORD(v51) = 0;
LABEL_140:
              *(_DWORD *)(a1 + 16) = v51;
              goto LABEL_146;
            case 8u:
              *(unsigned char *)(a1 + 44) |= 0x20u;
              unint64_t v53 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v54 = *(void *)this;
              if (v53 > 0xFFFFFFFFFFFFFFF5 || v53 + 10 > v2)
              {
                char v79 = 0;
                unsigned int v80 = 0;
                uint64_t v57 = 0;
                if (v2 <= v53) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v53)
                  {
                    LODWORD(v57) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_145;
                  }
                  unint64_t v81 = v53++;
                  char v82 = *(unsigned char *)(v54 + v81);
                  *((void *)this + 1) = v53;
                  v57 |= (unint64_t)(v82 & 0x7F) << v79;
                  if ((v82 & 0x80) == 0) {
                    break;
                  }
                  v79 += 7;
                  BOOL v14 = v80++ > 8;
                  if (v14)
                  {
                    LODWORD(v57) = 0;
LABEL_144:
                    unint64_t v2 = v81 + 1;
                    goto LABEL_145;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v57) = 0;
                }
                goto LABEL_144;
              }
              char v55 = 0;
              unsigned int v56 = 0;
              uint64_t v57 = 0;
              do
              {
                unint64_t v2 = v53 + 1;
                *((void *)this + 1) = v53 + 1;
                char v58 = *(unsigned char *)(v54 + v53);
                v57 |= (unint64_t)(v58 & 0x7F) << v55;
                if ((v58 & 0x80) == 0) {
                  goto LABEL_145;
                }
                v55 += 7;
                unint64_t v53 = v2;
                BOOL v14 = v56++ > 8;
              }
              while (!v14);
              LODWORD(v57) = 0;
LABEL_145:
              *(_DWORD *)(a1 + 32) = v57;
LABEL_146:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_146;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B9D474(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 44);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 44);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 0x80) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(result + 44) & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 0x80) == 0)
  {
LABEL_4:
    if ((v4 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = PB::Writer::write(this);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 0x10) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 0x40) == 0)
  {
LABEL_7:
    if ((v4 & 2) == 0) {
      goto LABEL_8;
    }
LABEL_16:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(unsigned char *)(v3 + 44) & 0x20) == 0) {
      return result;
    }
    goto LABEL_17;
  }
LABEL_15:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 2) != 0) {
    goto LABEL_16;
  }
LABEL_8:
  if ((v4 & 0x20) == 0) {
    return result;
  }
LABEL_17:

  return PB::Writer::writeVarInt(this);
}

double sub_227B9D58C(uint64_t a1)
{
  *(void *)a1 = &unk_26DC22688;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = 0;
  return result;
}

void sub_227B9D5BC(uint64_t a1)
{
  *(void *)a1 = &unk_26DC22688;
  uint64_t v4 = *(void *)(a1 + 40);
  unint64_t v2 = (void *)(a1 + 40);
  uint64_t v3 = v4;
  *unint64_t v2 = 0;
  if (v4) {
    sub_227B8B690((uint64_t)v2, v3);
  }
  sub_227B8B6EC((void ***)(a1 + 32), 0);
  uint64_t v5 = *(void *)(a1 + 24);
  *(void *)(a1 + 24) = 0;
  if (v5) {
    sub_227B8B690(a1 + 24, v5);
  }
  sub_227B8B6EC((void ***)(a1 + 16), 0);
  uint64_t v6 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = 0;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }

  PB::Base::~Base((PB::Base *)a1);
}

void sub_227B9D67C(uint64_t a1)
{
  sub_227B9D5BC(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B9D6B4(uint64_t result, void *a2)
{
  *(void *)double result = &unk_26DC22688;
  *(_OWORD *)(result + 8) = 0u;
  *(_OWORD *)(result + 24) = 0u;
  *(void *)(result + 40) = 0;
  if (a2[1]) {
    operator new();
  }
  if (a2[2]) {
    operator new();
  }
  if (a2[4]) {
    operator new();
  }
  if (a2[3]) {
    operator new();
  }
  if (a2[5]) {
    operator new();
  }
  return result;
}

uint64_t sub_227B9D8E8(void *a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = a1[1];
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "config");
  }
  if (a1[2]) {
    PB::TextFormatter::format();
  }
  if (a1[3]) {
    PB::TextFormatter::format();
  }
  if (a1[4]) {
    PB::TextFormatter::format();
  }
  if (a1[5]) {
    PB::TextFormatter::format();
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B9D9C4(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v14 = 0;
        unsigned int v15 = 0;
        unint64_t v10 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v16 = v2 + 1;
          char v17 = *(unsigned char *)(v7 + v2);
          *((void *)this + 1) = v16;
          v10 |= (unint64_t)(v17 & 0x7F) << v14;
          if ((v17 & 0x80) == 0) {
            goto LABEL_20;
          }
          v14 += 7;
          unint64_t v2 = v16;
          if (v15++ >= 9)
          {
LABEL_19:
            unint64_t v10 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          unint64_t v11 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v12 = *(unsigned char *)(v7 + v2);
          v10 |= (unint64_t)(v12 & 0x7F) << v8;
          if ((v12 & 0x80) == 0) {
            break;
          }
          v8 += 7;
          unint64_t v2 = v11;
          if (v9++ > 8) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v10 & 7) != 4)
        {
          switch((v10 >> 3))
          {
            case 1u:
              operator new();
            case 2u:
              operator new();
            case 3u:
              operator new();
            case 4u:
              operator new();
            case 5u:
              operator new();
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || *((unsigned char *)this + 24)) {
                return v4 == 0;
              }
              continue;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B9DD70(uint64_t result, PB::Writer *this)
{
  unint64_t v3 = (void *)result;
  int v4 = *(const PB::Base **)(result + 8);
  if (v4) {
    uint64_t result = PB::Writer::writeSubmessage(this, v4);
  }
  if (v3[2]) {
    uint64_t result = PB::Writer::write();
  }
  if (v3[4]) {
    uint64_t result = PB::Writer::write();
  }
  if (v3[3]) {
    uint64_t result = PB::Writer::write();
  }
  if (v3[5])
  {
    return PB::Writer::write();
  }
  return result;
}

uint64_t sub_227B9DE10(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC226C0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void sub_227B9DE38(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B9DE70(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC226C0;
  *(_DWORD *)(result + 32) = 0;
  char v2 = *(unsigned char *)(a2 + 32);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 32) = 1;
    *(void *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 32) & 0x10) != 0)
  {
LABEL_5:
    char v5 = *(unsigned char *)(a2 + 28);
    v3 |= 0x10u;
    *(unsigned char *)(result + 32) = v3;
    *(unsigned char *)(result + 28) = v5;
    char v2 = *(unsigned char *)(a2 + 32);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(result + 32) = v3;
    *(_DWORD *)(result + 16) = v6;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 4) == 0)
    {
LABEL_8:
      if ((v2 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_13;
    }
  }
  else if ((v2 & 4) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 20);
  v3 |= 4u;
  *(unsigned char *)(result + 32) = v3;
  *(_DWORD *)(result + 20) = v7;
  char v2 = *(unsigned char *)(a2 + 32);
  if ((v2 & 8) == 0)
  {
LABEL_9:
    if ((v2 & 0x20) == 0) {
      return result;
    }
LABEL_14:
    char v9 = *(unsigned char *)(a2 + 29);
    *(unsigned char *)(result + 32) = v3 | 0x20;
    *(unsigned char *)(result + 29) = v9;
    return result;
  }
LABEL_13:
  int v8 = *(_DWORD *)(a2 + 24);
  v3 |= 8u;
  *(unsigned char *)(result + 32) = v3;
  *(_DWORD *)(result + 24) = v8;
  if ((*(unsigned char *)(a2 + 32) & 0x20) != 0) {
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_227B9DF44(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 0x10) != 0)
  {
    PB::TextFormatter::format(this, "asleep");
    char v5 = *(unsigned char *)(a1 + 32);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((*(unsigned char *)(a1 + 32) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "averageConfidence");
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 0x20) == 0)
  {
LABEL_4:
    if ((v5 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  PB::TextFormatter::format(this, "initialized");
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 4) == 0)
  {
LABEL_5:
    if ((v5 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(this, "rawConfidence", *(float *)(a1 + 20));
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 1) == 0)
  {
LABEL_6:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_15:
  PB::TextFormatter::format(this, "sensorTime");
  if ((*(unsigned char *)(a1 + 32) & 8) != 0) {
LABEL_7:
  }
    PB::TextFormatter::format(this, "sequenceNumber");
LABEL_8:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B9E048(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 32) |= 1u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v43 = 0;
                unsigned int v44 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_82;
                  }
                  unint64_t v45 = v20++;
                  char v46 = *(unsigned char *)(v21 + v45);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v46 & 0x7F) << v43;
                  if ((v46 & 0x80) == 0) {
                    break;
                  }
                  v43 += 7;
                  BOOL v14 = v44++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_81;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_81:
                unint64_t v2 = v45 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_82;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_82:
              *(void *)(a1 + 8) = v24;
              goto LABEL_93;
            case 2u:
              *(unsigned char *)(a1 + 32) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v28 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v27 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v28 = v27 != 0;
              }
              *(unsigned char *)(a1 + 28) = v28;
              goto LABEL_93;
            case 3u:
              *(unsigned char *)(a1 + 32) |= 2u;
              unint64_t v29 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v30 = *(void *)this;
              if (v29 > 0xFFFFFFFFFFFFFFF5 || v29 + 10 > v2)
              {
                char v47 = 0;
                unsigned int v48 = 0;
                uint64_t v33 = 0;
                if (v2 <= v29) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v29)
                  {
                    LODWORD(v33) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_87;
                  }
                  unint64_t v49 = v29++;
                  char v50 = *(unsigned char *)(v30 + v49);
                  *((void *)this + 1) = v29;
                  v33 |= (unint64_t)(v50 & 0x7F) << v47;
                  if ((v50 & 0x80) == 0) {
                    break;
                  }
                  v47 += 7;
                  BOOL v14 = v48++ > 8;
                  if (v14)
                  {
                    LODWORD(v33) = 0;
LABEL_86:
                    unint64_t v2 = v49 + 1;
                    goto LABEL_87;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v33) = 0;
                }
                goto LABEL_86;
              }
              char v31 = 0;
              unsigned int v32 = 0;
              uint64_t v33 = 0;
              do
              {
                unint64_t v2 = v29 + 1;
                *((void *)this + 1) = v29 + 1;
                char v34 = *(unsigned char *)(v30 + v29);
                v33 |= (unint64_t)(v34 & 0x7F) << v31;
                if ((v34 & 0x80) == 0) {
                  goto LABEL_87;
                }
                v31 += 7;
                unint64_t v29 = v2;
                BOOL v14 = v32++ > 8;
              }
              while (!v14);
              LODWORD(v33) = 0;
LABEL_87:
              *(_DWORD *)(a1 + 16) = v33;
              goto LABEL_93;
            case 4u:
              *(unsigned char *)(a1 + 32) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_93;
            case 5u:
              *(unsigned char *)(a1 + 32) |= 8u;
              unint64_t v35 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v36 = *(void *)this;
              if (v35 > 0xFFFFFFFFFFFFFFF5 || v35 + 10 > v2)
              {
                char v51 = 0;
                unsigned int v52 = 0;
                uint64_t v39 = 0;
                if (v2 <= v35) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v35)
                  {
                    LODWORD(v39) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_92;
                  }
                  unint64_t v53 = v35++;
                  char v54 = *(unsigned char *)(v36 + v53);
                  *((void *)this + 1) = v35;
                  v39 |= (unint64_t)(v54 & 0x7F) << v51;
                  if ((v54 & 0x80) == 0) {
                    break;
                  }
                  v51 += 7;
                  BOOL v14 = v52++ > 8;
                  if (v14)
                  {
                    LODWORD(v39) = 0;
LABEL_91:
                    unint64_t v2 = v53 + 1;
                    goto LABEL_92;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v39) = 0;
                }
                goto LABEL_91;
              }
              char v37 = 0;
              unsigned int v38 = 0;
              uint64_t v39 = 0;
              do
              {
                unint64_t v2 = v35 + 1;
                *((void *)this + 1) = v35 + 1;
                char v40 = *(unsigned char *)(v36 + v35);
                v39 |= (unint64_t)(v40 & 0x7F) << v37;
                if ((v40 & 0x80) == 0) {
                  goto LABEL_92;
                }
                v37 += 7;
                unint64_t v35 = v2;
                BOOL v14 = v38++ > 8;
              }
              while (!v14);
              LODWORD(v39) = 0;
LABEL_92:
              *(_DWORD *)(a1 + 24) = v39;
LABEL_93:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 6u:
              *(unsigned char *)(a1 + 32) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v42 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v41 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v42 = v41 != 0;
              }
              *(unsigned char *)(a1 + 29) = v42;
              goto LABEL_93;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_93;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B9E56C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 32);
    if ((v4 & 0x10) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((*(unsigned char *)(result + 32) & 0x10) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this);
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 2) == 0)
  {
LABEL_4:
    if ((v4 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(unsigned char *)(v3 + 32) & 0x20) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_11:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 8) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v4 & 0x20) == 0) {
    return result;
  }
LABEL_13:

  return PB::Writer::write(this);
}

uint64_t sub_227B9E64C(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC226F8;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

void sub_227B9E674(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B9E6AC(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC226F8;
  *(_DWORD *)(result + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 28);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 28) = 1;
    *(void *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 28) & 2) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(result + 28) = v3;
    *(_DWORD *)(result + 16) = v5;
    char v2 = *(unsigned char *)(a2 + 28);
  }
LABEL_6:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      return result;
    }
LABEL_10:
    int v7 = *(_DWORD *)(a2 + 24);
    *(unsigned char *)(result + 28) = v3 | 8;
    *(_DWORD *)(result + 24) = v7;
    return result;
  }
  int v6 = *(_DWORD *)(a2 + 20);
  v3 |= 4u;
  *(unsigned char *)(result + 28) = v3;
  *(_DWORD *)(result + 20) = v6;
  if ((*(unsigned char *)(a2 + 28) & 8) != 0) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_227B9E748(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "activity");
    char v5 = *(unsigned char *)(a1 + 28);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 28) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "confidenceLevel");
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 1) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "sensorTime");
  if ((*(unsigned char *)(a1 + 28) & 8) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "sequenceNumber");
LABEL_6:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B9E80C(uint64_t a1, PB::Reader *this)
{
  unint64_t v3 = *((void *)this + 1);
  unint64_t v2 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v3 < v2 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v3 > 0xFFFFFFFFFFFFFFF5 || v3 + 10 > v2)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v3 > v2) {
          unint64_t v2 = v3;
        }
        while (v2 != v3)
        {
          unint64_t v17 = v3 + 1;
          char v18 = *(unsigned char *)(v8 + v3);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v3 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v3 + 1;
          *((void *)this + 1) = v3 + 1;
          char v13 = *(unsigned char *)(v8 + v3);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v3 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 28) |= 1u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v45 = 0;
                unsigned int v46 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v3 = *((void *)this + 1);
                }
                else {
                  unint64_t v3 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v3 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_88;
                  }
                  unint64_t v47 = v20++;
                  char v48 = *(unsigned char *)(v21 + v47);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v48 & 0x7F) << v45;
                  if ((v48 & 0x80) == 0) {
                    break;
                  }
                  v45 += 7;
                  BOOL v14 = v46++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_87;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_87:
                unint64_t v3 = v47 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v3 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_88;
                  }
                  v22 += 7;
                  unint64_t v20 = v3;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_88:
              *(void *)(a1 + 8) = v24;
              goto LABEL_104;
            case 2u:
              *(unsigned char *)(a1 + 28) |= 2u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v49 = 0;
                unsigned int v50 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v3 = *((void *)this + 1);
                }
                else {
                  unint64_t v3 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v3 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_93;
                  }
                  unint64_t v51 = v27++;
                  char v52 = *(unsigned char *)(v28 + v51);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v52 & 0x7F) << v49;
                  if ((v52 & 0x80) == 0) {
                    break;
                  }
                  v49 += 7;
                  BOOL v14 = v50++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_92:
                    unint64_t v3 = v51 + 1;
                    goto LABEL_93;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_92;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v3 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_93;
                }
                v29 += 7;
                unint64_t v27 = v3;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_93:
              *(_DWORD *)(a1 + 16) = v31;
              goto LABEL_104;
            case 3u:
              *(unsigned char *)(a1 + 28) |= 4u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v53 = 0;
                unsigned int v54 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v3 = *((void *)this + 1);
                }
                else {
                  unint64_t v3 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v3 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_98;
                  }
                  unint64_t v55 = v33++;
                  char v56 = *(unsigned char *)(v34 + v55);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v56 & 0x7F) << v53;
                  if ((v56 & 0x80) == 0) {
                    break;
                  }
                  v53 += 7;
                  BOOL v14 = v54++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_97:
                    unint64_t v3 = v55 + 1;
                    goto LABEL_98;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_97;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v3 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_98;
                }
                v35 += 7;
                unint64_t v33 = v3;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_98:
              *(_DWORD *)(a1 + 20) = v37;
              goto LABEL_104;
            case 4u:
              *(unsigned char *)(a1 + 28) |= 8u;
              unint64_t v39 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v40 = *(void *)this;
              if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
              {
                char v57 = 0;
                unsigned int v58 = 0;
                uint64_t v43 = 0;
                if (v2 <= v39) {
                  unint64_t v3 = *((void *)this + 1);
                }
                else {
                  unint64_t v3 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v3 == v39)
                  {
                    LODWORD(v43) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_103;
                  }
                  unint64_t v59 = v39++;
                  char v60 = *(unsigned char *)(v40 + v59);
                  *((void *)this + 1) = v39;
                  v43 |= (unint64_t)(v60 & 0x7F) << v57;
                  if ((v60 & 0x80) == 0) {
                    break;
                  }
                  v57 += 7;
                  BOOL v14 = v58++ > 8;
                  if (v14)
                  {
                    LODWORD(v43) = 0;
LABEL_102:
                    unint64_t v3 = v59 + 1;
                    goto LABEL_103;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v43) = 0;
                }
                goto LABEL_102;
              }
              char v41 = 0;
              unsigned int v42 = 0;
              uint64_t v43 = 0;
              do
              {
                unint64_t v3 = v39 + 1;
                *((void *)this + 1) = v39 + 1;
                char v44 = *(unsigned char *)(v40 + v39);
                v43 |= (unint64_t)(v44 & 0x7F) << v41;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_103;
                }
                v41 += 7;
                unint64_t v39 = v3;
                BOOL v14 = v42++ > 8;
              }
              while (!v14);
              LODWORD(v43) = 0;
LABEL_103:
              *(_DWORD *)(a1 + 24) = v43;
LABEL_104:
              int v4 = *((unsigned __int8 *)this + 24);
              if (v3 >= v2 || *((unsigned char *)this + 24)) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v3 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              goto LABEL_104;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B9ED3C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 28);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::writeVarInt(this);
      if ((*(unsigned char *)(v3 + 28) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 28) & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 8) == 0) {
    return result;
  }
LABEL_9:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227B9EDE4(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC22730;
  *(void *)(result + 8) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 60) = 0;
  return result;
}

void sub_227B9EE0C(PB::Base *this)
{
  *(void *)this = &unk_26DC22730;
  uint64_t v2 = *((void *)this + 5);
  *((void *)this + 5) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *((void *)this + 1);
  *((void *)this + 1) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }

  PB::Base::~Base(this);
}

void sub_227B9EEC0(PB::Base *a1)
{
  sub_227B9EE0C(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B9EEF8(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC22730;
  *(void *)(result + 8) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 60) = 0;
  char v2 = *(unsigned char *)(a2 + 60);
  if ((v2 & 4) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 32);
    char v3 = 4;
    *(unsigned char *)(result + 60) = 4;
    *(void *)(result + 32) = v4;
    char v2 = *(unsigned char *)(a2 + 60);
    if ((v2 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 60) & 0x10) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 52);
    v3 |= 0x10u;
    *(unsigned char *)(result + 60) = v3;
    *(_DWORD *)(result + 52) = v5;
    char v2 = *(unsigned char *)(a2 + 60);
  }
LABEL_6:
  if ((v2 & 8) != 0)
  {
    int v7 = *(_DWORD *)(a2 + 48);
    v3 |= 8u;
    *(unsigned char *)(result + 60) = v3;
    *(_DWORD *)(result + 48) = v7;
    char v2 = *(unsigned char *)(a2 + 60);
    if ((v2 & 2) == 0)
    {
LABEL_8:
      if ((v2 & 1) == 0) {
        goto LABEL_9;
      }
      goto LABEL_18;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v8 = *(void *)(a2 + 24);
  v3 |= 2u;
  *(unsigned char *)(result + 60) = v3;
  *(void *)(result + 24) = v8;
  char v2 = *(unsigned char *)(a2 + 60);
  if ((v2 & 1) == 0)
  {
LABEL_9:
    if ((v2 & 0x20) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_18:
  uint64_t v9 = *(void *)(a2 + 16);
  v3 |= 1u;
  *(unsigned char *)(result + 60) = v3;
  *(void *)(result + 16) = v9;
  if ((*(unsigned char *)(a2 + 60) & 0x20) != 0)
  {
LABEL_10:
    char v6 = *(unsigned char *)(a2 + 56);
    *(unsigned char *)(result + 60) = v3 | 0x20;
    *(unsigned char *)(result + 56) = v6;
  }
LABEL_11:
  if (*(void *)(a2 + 40)) {
    operator new();
  }
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227B9F0B0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if ((*(unsigned char *)(a1 + 60) & 0x20) != 0) {
    PB::TextFormatter::format(this, "detectedSteps");
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "firstStepFeatures");
  }
  char v6 = *(unsigned char *)(a1 + 60);
  if ((v6 & 8) != 0)
  {
    PB::TextFormatter::format(this, "fsmEndState");
    char v6 = *(unsigned char *)(a1 + 60);
    if ((v6 & 0x10) == 0)
    {
LABEL_7:
      if ((v6 & 1) == 0) {
        goto LABEL_8;
      }
      goto LABEL_18;
    }
  }
  else if ((*(unsigned char *)(a1 + 60) & 0x10) == 0)
  {
    goto LABEL_7;
  }
  PB::TextFormatter::format(this, "fsmStartState");
  char v6 = *(unsigned char *)(a1 + 60);
  if ((v6 & 1) == 0)
  {
LABEL_8:
    if ((v6 & 2) == 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "impulseEndTime", *(double *)(a1 + 16));
  char v6 = *(unsigned char *)(a1 + 60);
  if ((v6 & 2) == 0)
  {
LABEL_9:
    if ((v6 & 4) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_19:
  PB::TextFormatter::format(this, "impulseStartTime", *(double *)(a1 + 24));
  if ((*(unsigned char *)(a1 + 60) & 4) != 0) {
LABEL_10:
  }
    PB::TextFormatter::format(this, "imuTimestamp", *(double *)(a1 + 32));
LABEL_11:
  uint64_t v7 = *(void *)(a1 + 40);
  if (v7) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v7 + 32))(v7, this, "stepLikelihoodFeatures");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B9F220(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 60) |= 4u;
          unint64_t v20 = *((void *)this + 1);
          if (v20 > 0xFFFFFFFFFFFFFFF7 || v20 + 8 > *((void *)this + 2)) {
            goto LABEL_46;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v20);
          goto LABEL_68;
        case 2u:
          *(unsigned char *)(a1 + 60) |= 0x10u;
          unint64_t v22 = *((void *)this + 1);
          unint64_t v23 = *((void *)this + 2);
          uint64_t v24 = *(void *)this;
          if (v22 <= 0xFFFFFFFFFFFFFFF5 && v22 + 10 <= v23)
          {
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v27 = 0;
            do
            {
              unint64_t v28 = v22 + 1;
              *((void *)this + 1) = v22 + 1;
              char v29 = *(unsigned char *)(v24 + v22);
              v27 |= (unint64_t)(v29 & 0x7F) << v25;
              if ((v29 & 0x80) == 0) {
                goto LABEL_72;
              }
              v25 += 7;
              unint64_t v22 = v28;
              BOOL v14 = v26++ > 8;
            }
            while (!v14);
LABEL_57:
            LODWORD(v27) = 0;
            goto LABEL_72;
          }
          char v44 = 0;
          unsigned int v45 = 0;
          uint64_t v27 = 0;
          if (v23 <= v22) {
            unint64_t v23 = *((void *)this + 1);
          }
          while (2)
          {
            if (v23 == v22)
            {
              LODWORD(v27) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v46 = v22 + 1;
              char v47 = *(unsigned char *)(v24 + v22);
              *((void *)this + 1) = v46;
              v27 |= (unint64_t)(v47 & 0x7F) << v44;
              if (v47 < 0)
              {
                v44 += 7;
                unint64_t v22 = v46;
                BOOL v14 = v45++ > 8;
                if (v14) {
                  goto LABEL_57;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v27) = 0;
              }
            }
            break;
          }
LABEL_72:
          *(_DWORD *)(a1 + 52) = v27;
          goto LABEL_77;
        case 3u:
          *(unsigned char *)(a1 + 60) |= 8u;
          unint64_t v30 = *((void *)this + 1);
          unint64_t v31 = *((void *)this + 2);
          uint64_t v32 = *(void *)this;
          if (v30 <= 0xFFFFFFFFFFFFFFF5 && v30 + 10 <= v31)
          {
            char v33 = 0;
            unsigned int v34 = 0;
            uint64_t v35 = 0;
            do
            {
              unint64_t v36 = v30 + 1;
              *((void *)this + 1) = v30 + 1;
              char v37 = *(unsigned char *)(v32 + v30);
              v35 |= (unint64_t)(v37 & 0x7F) << v33;
              if ((v37 & 0x80) == 0) {
                goto LABEL_76;
              }
              v33 += 7;
              unint64_t v30 = v36;
              BOOL v14 = v34++ > 8;
            }
            while (!v14);
LABEL_64:
            LODWORD(v35) = 0;
            goto LABEL_76;
          }
          char v48 = 0;
          unsigned int v49 = 0;
          uint64_t v35 = 0;
          if (v31 <= v30) {
            unint64_t v31 = *((void *)this + 1);
          }
          break;
        case 4u:
          *(unsigned char *)(a1 + 60) |= 2u;
          unint64_t v38 = *((void *)this + 1);
          if (v38 > 0xFFFFFFFFFFFFFFF7 || v38 + 8 > *((void *)this + 2)) {
            goto LABEL_46;
          }
          *(void *)(a1 + 24) = *(void *)(*(void *)this + v38);
          goto LABEL_68;
        case 5u:
          *(unsigned char *)(a1 + 60) |= 1u;
          unint64_t v39 = *((void *)this + 1);
          if (v39 <= 0xFFFFFFFFFFFFFFF7 && v39 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 16) = *(void *)(*(void *)this + v39);
LABEL_68:
            *((void *)this + 1) += 8;
          }
          else
          {
LABEL_46:
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_77;
        case 6u:
          *(unsigned char *)(a1 + 60) |= 0x20u;
          unint64_t v40 = *((void *)this + 1);
          if (v40 >= *((void *)this + 2))
          {
            BOOL v43 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v41 = v40 + 1;
            int v42 = *(unsigned __int8 *)(*(void *)this + v40);
            *((void *)this + 1) = v41;
            BOOL v43 = v42 != 0;
          }
          *(unsigned char *)(a1 + 56) = v43;
          goto LABEL_77;
        case 7u:
          operator new();
        case 8u:
          operator new();
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          goto LABEL_77;
      }
      while (1)
      {
        if (v31 == v30)
        {
          LODWORD(v35) = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_76;
        }
        unint64_t v50 = v30 + 1;
        char v51 = *(unsigned char *)(v32 + v30);
        *((void *)this + 1) = v50;
        v35 |= (unint64_t)(v51 & 0x7F) << v48;
        if ((v51 & 0x80) == 0) {
          break;
        }
        v48 += 7;
        unint64_t v30 = v50;
        BOOL v14 = v49++ > 8;
        if (v14) {
          goto LABEL_64;
        }
      }
      if (*((unsigned char *)this + 24)) {
        LODWORD(v35) = 0;
      }
LABEL_76:
      *(_DWORD *)(a1 + 48) = v35;
LABEL_77:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B9F784(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 60);
  if ((v4 & 4) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 32));
    char v4 = *(unsigned char *)(v3 + 60);
    if ((v4 & 0x10) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((*(unsigned char *)(result + 60) & 0x10) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 60);
  if ((v4 & 8) == 0)
  {
LABEL_4:
    if ((v4 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 60);
  if ((v4 & 2) == 0)
  {
LABEL_5:
    if ((v4 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24));
  char v4 = *(unsigned char *)(v3 + 60);
  if ((v4 & 1) == 0)
  {
LABEL_6:
    if ((v4 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  if ((*(unsigned char *)(v3 + 60) & 0x20) != 0) {
LABEL_7:
  }
    uint64_t result = PB::Writer::write(this);
LABEL_8:
  uint64_t v5 = *(const PB::Base **)(v3 + 40);
  if (v5) {
    uint64_t result = PB::Writer::writeSubmessage(this, v5);
  }
  char v6 = *(const PB::Base **)(v3 + 8);
  if (v6)
  {
    return PB::Writer::writeSubmessage(this, v6);
  }
  return result;
}

uint64_t sub_227B9F890(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC22768;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 52) = 0;
  return result;
}

void sub_227B9F8B8(PB::Base *this)
{
  *(void *)this = &unk_26DC22768;
  unint64_t v2 = (void *)*((void *)this + 1);
  if (v2)
  {
    *((void *)this + 2) = v2;
    operator delete(v2);
  }

  PB::Base::~Base(this);
}

void sub_227B9F91C(PB::Base *a1)
{
  sub_227B9F8B8(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B9F954(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC22768;
  *(void *)(a1 + 8) = 0;
  uint64_t v3 = (char *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 52) = 0;
  char v4 = *(unsigned char *)(a2 + 52);
  if ((v4 & 4) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 44);
    char v5 = 4;
    *(unsigned char *)(a1 + 52) = 4;
    *(_DWORD *)(a1 + 44) = v6;
    char v4 = *(unsigned char *)(a2 + 52);
    if ((v4 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v5 = 0;
  if (*(unsigned char *)(a2 + 52))
  {
LABEL_5:
    uint64_t v7 = *(void *)(a2 + 32);
    v5 |= 1u;
    *(unsigned char *)(a1 + 52) = v5;
    *(void *)(a1 + 32) = v7;
    char v4 = *(unsigned char *)(a2 + 52);
  }
LABEL_6:
  if ((v4 & 8) == 0)
  {
    if ((v4 & 2) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  int v10 = *(_DWORD *)(a2 + 48);
  v5 |= 8u;
  *(unsigned char *)(a1 + 52) = v5;
  *(_DWORD *)(a1 + 48) = v10;
  if ((*(unsigned char *)(a2 + 52) & 2) != 0)
  {
LABEL_8:
    int v8 = *(_DWORD *)(a2 + 40);
    *(unsigned char *)(a1 + 52) = v5 | 2;
    *(_DWORD *)(a1 + 40) = v8;
  }
LABEL_9:
  if (a1 != a2) {
    sub_227B8BA68(v3, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  return a1;
}

uint64_t sub_227B9FA38(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 52);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "hostState");
    char v5 = *(unsigned char *)(a1 + 52);
  }
  if ((v5 & 4) != 0) {
    PB::TextFormatter::format(this, "location");
  }
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  while (v6 != v7)
  {
    v6 += 4;
    PB::TextFormatter::format(this, "s7q8");
  }
  char v8 = *(unsigned char *)(a1 + 52);
  if ((v8 & 8) != 0)
  {
    PB::TextFormatter::format(this, "sensorState");
    char v8 = *(unsigned char *)(a1 + 52);
  }
  if (v8) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 32));
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227B9FB28(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    char v8 = (void **)(a1 + 8);
    char v9 = (void *)(a1 + 24);
    while (1)
    {
      uint64_t v10 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v11 = 0;
      unsigned int v12 = 0;
      unint64_t v13 = 0;
      while (1)
      {
        unint64_t v14 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v15 = *(unsigned char *)(v10 + v2);
        v13 |= (unint64_t)(v15 & 0x7F) << v11;
        if ((v15 & 0x80) == 0) {
          break;
        }
        v11 += 7;
        unint64_t v2 = v14;
        BOOL v59 = v12++ > 8;
        if (v59) {
          goto LABEL_20;
        }
      }
LABEL_21:
      if ((v13 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v13 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 52) |= 4u;
          unint64_t v21 = *((void *)this + 1);
          unint64_t v22 = *((void *)this + 2);
          uint64_t v23 = *(void *)this;
          if (v21 <= 0xFFFFFFFFFFFFFFF5 && v21 + 10 <= v22)
          {
            char v24 = 0;
            unsigned int v25 = 0;
            uint64_t v26 = 0;
            do
            {
              unint64_t v27 = v21 + 1;
              *((void *)this + 1) = v21 + 1;
              char v28 = *(unsigned char *)(v23 + v21);
              v26 |= (unint64_t)(v28 & 0x7F) << v24;
              if ((v28 & 0x80) == 0) {
                goto LABEL_133;
              }
              v24 += 7;
              unint64_t v21 = v27;
              BOOL v59 = v25++ > 8;
            }
            while (!v59);
LABEL_100:
            LODWORD(v26) = 0;
            goto LABEL_133;
          }
          char v70 = 0;
          unsigned int v71 = 0;
          uint64_t v26 = 0;
          if (v22 <= v21) {
            unint64_t v22 = *((void *)this + 1);
          }
          while (2)
          {
            if (v22 == v21)
            {
              LODWORD(v26) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v72 = v21 + 1;
              char v73 = *(unsigned char *)(v23 + v21);
              *((void *)this + 1) = v72;
              v26 |= (unint64_t)(v73 & 0x7F) << v70;
              if (v73 < 0)
              {
                v70 += 7;
                unint64_t v21 = v72;
                BOOL v59 = v71++ > 8;
                if (v59) {
                  goto LABEL_100;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v26) = 0;
              }
            }
            break;
          }
LABEL_133:
          *(_DWORD *)(a1 + 44) = v26;
          goto LABEL_166;
        case 2u:
          *(unsigned char *)(a1 + 52) |= 1u;
          unint64_t v29 = *((void *)this + 1);
          if (v29 <= 0xFFFFFFFFFFFFFFF7 && v29 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 32) = *(void *)(*(void *)this + v29);
            *((void *)this + 1) += 8;
          }
          else
          {
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_166;
        case 3u:
          *(unsigned char *)(a1 + 52) |= 8u;
          unint64_t v30 = *((void *)this + 1);
          unint64_t v31 = *((void *)this + 2);
          uint64_t v32 = *(void *)this;
          if (v30 <= 0xFFFFFFFFFFFFFFF5 && v30 + 10 <= v31)
          {
            char v33 = 0;
            unsigned int v34 = 0;
            uint64_t v35 = 0;
            do
            {
              unint64_t v36 = v30 + 1;
              *((void *)this + 1) = v30 + 1;
              char v37 = *(unsigned char *)(v32 + v30);
              v35 |= (unint64_t)(v37 & 0x7F) << v33;
              if ((v37 & 0x80) == 0) {
                goto LABEL_136;
              }
              v33 += 7;
              unint64_t v30 = v36;
              BOOL v59 = v34++ > 8;
            }
            while (!v59);
LABEL_107:
            LODWORD(v35) = 0;
            goto LABEL_136;
          }
          char v74 = 0;
          unsigned int v75 = 0;
          uint64_t v35 = 0;
          if (v31 <= v30) {
            unint64_t v31 = *((void *)this + 1);
          }
          while (2)
          {
            if (v31 == v30)
            {
              LODWORD(v35) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v76 = v30 + 1;
              char v77 = *(unsigned char *)(v32 + v30);
              *((void *)this + 1) = v76;
              v35 |= (unint64_t)(v77 & 0x7F) << v74;
              if (v77 < 0)
              {
                v74 += 7;
                unint64_t v30 = v76;
                BOOL v59 = v75++ > 8;
                if (v59) {
                  goto LABEL_107;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v35) = 0;
              }
            }
            break;
          }
LABEL_136:
          *(_DWORD *)(a1 + 48) = v35;
          goto LABEL_166;
        case 4u:
          *(unsigned char *)(a1 + 52) |= 2u;
          unint64_t v38 = *((void *)this + 1);
          unint64_t v39 = *((void *)this + 2);
          uint64_t v40 = *(void *)this;
          if (v38 <= 0xFFFFFFFFFFFFFFF5 && v38 + 10 <= v39)
          {
            char v41 = 0;
            unsigned int v42 = 0;
            uint64_t v43 = 0;
            do
            {
              unint64_t v44 = v38 + 1;
              *((void *)this + 1) = v38 + 1;
              char v45 = *(unsigned char *)(v40 + v38);
              v43 |= (unint64_t)(v45 & 0x7F) << v41;
              if ((v45 & 0x80) == 0) {
                goto LABEL_139;
              }
              v41 += 7;
              unint64_t v38 = v44;
              BOOL v59 = v42++ > 8;
            }
            while (!v59);
LABEL_114:
            LODWORD(v43) = 0;
            goto LABEL_139;
          }
          char v78 = 0;
          unsigned int v79 = 0;
          uint64_t v43 = 0;
          if (v39 <= v38) {
            unint64_t v39 = *((void *)this + 1);
          }
          while (2)
          {
            if (v39 == v38)
            {
              LODWORD(v43) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v80 = v38 + 1;
              char v81 = *(unsigned char *)(v40 + v38);
              *((void *)this + 1) = v80;
              v43 |= (unint64_t)(v81 & 0x7F) << v78;
              if (v81 < 0)
              {
                v78 += 7;
                unint64_t v38 = v80;
                BOOL v59 = v79++ > 8;
                if (v59) {
                  goto LABEL_114;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v43) = 0;
              }
            }
            break;
          }
LABEL_139:
          *(_DWORD *)(a1 + 40) = v43;
          goto LABEL_166;
        case 5u:
          if ((v13 & 7) == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            if (*((void *)this + 1) < *((void *)this + 2) && !*((unsigned char *)this + 24))
            {
              unint64_t v46 = *(char **)(a1 + 16);
              do
              {
                if ((unint64_t)v46 >= *v9)
                {
                  char v47 = (char *)*v8;
                  uint64_t v48 = (v46 - (unsigned char *)*v8) >> 2;
                  unint64_t v49 = v48 + 1;
                  if ((unint64_t)(v48 + 1) >> 62) {
                    goto LABEL_176;
                  }
                  uint64_t v50 = *v9 - (void)v47;
                  if (v50 >> 1 > v49) {
                    unint64_t v49 = v50 >> 1;
                  }
                  if ((unint64_t)v50 >= 0x7FFFFFFFFFFFFFFCLL) {
                    unint64_t v51 = 0x3FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v51 = v49;
                  }
                  if (v51)
                  {
                    char v52 = (char *)sub_227B8BBB8((uint64_t)v9, v51);
                    char v47 = *(char **)(a1 + 8);
                    unint64_t v46 = *(char **)(a1 + 16);
                  }
                  else
                  {
                    char v52 = 0;
                  }
                  char v53 = &v52[4 * v48];
                  *(_DWORD *)char v53 = 0;
                  unsigned int v54 = v53 + 4;
                  while (v46 != v47)
                  {
                    int v55 = *((_DWORD *)v46 - 1);
                    v46 -= 4;
                    *((_DWORD *)v53 - 1) = v55;
                    v53 -= 4;
                  }
                  *(void *)(a1 + 8) = v53;
                  *(void *)(a1 + 16) = v54;
                  *(void *)(a1 + 24) = &v52[4 * v51];
                  if (v47) {
                    operator delete(v47);
                  }
                  unint64_t v46 = v54;
                }
                else
                {
                  *(_DWORD *)unint64_t v46 = 0;
                  v46 += 4;
                }
                *(void *)(a1 + 16) = v46;
                unint64_t v57 = *((void *)this + 1);
                unint64_t v56 = *((void *)this + 2);
                uint64_t v58 = *(void *)this;
                BOOL v59 = v57 > 0xFFFFFFFFFFFFFFF5 || v57 + 10 > v56;
                if (!v59)
                {
                  char v65 = 0;
                  unsigned int v66 = 0;
                  uint64_t v67 = 0;
                  while (1)
                  {
                    unint64_t v68 = v57 + 1;
                    *((void *)this + 1) = v57 + 1;
                    char v69 = *(unsigned char *)(v58 + v57);
                    v67 |= (unint64_t)(v69 & 0x7F) << v65;
                    if ((v69 & 0x80) == 0) {
                      goto LABEL_91;
                    }
                    v65 += 7;
                    unint64_t v57 = v68;
                    BOOL v59 = v66++ > 8;
                    if (v59)
                    {
                      LODWORD(v67) = 0;
                      goto LABEL_91;
                    }
                  }
                }
                char v60 = 0;
                unsigned int v61 = 0;
                uint64_t v67 = 0;
                if (v56 <= v57) {
                  uint64_t v62 = *((void *)this + 1);
                }
                else {
                  uint64_t v62 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v62 == v57)
                  {
                    *((unsigned char *)this + 24) = 1;
                    *((_DWORD *)v46 - 1) = 0;
                    goto LABEL_127;
                  }
                  unint64_t v63 = v57++;
                  char v64 = *(unsigned char *)(v58 + v63);
                  *((void *)this + 1) = v57;
                  v67 |= (unint64_t)(v64 & 0x7F) << v60;
                  if ((v64 & 0x80) == 0) {
                    break;
                  }
                  v60 += 7;
                  BOOL v59 = v61++ > 8;
                  if (v59)
                  {
                    LODWORD(v67) = 0;
                    goto LABEL_90;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v67) = 0;
                }
LABEL_90:
                unint64_t v68 = v63 + 1;
LABEL_91:
                *((_DWORD *)v46 - 1) = v67;
              }
              while (v68 < v56 && !*((unsigned char *)this + 24));
            }
LABEL_127:
            PB::Reader::recallMark();
          }
          else
          {
            unint64_t v83 = *(char **)(a1 + 16);
            unint64_t v82 = *(void *)(a1 + 24);
            if ((unint64_t)v83 >= v82)
            {
              unint64_t v85 = (char *)*v8;
              uint64_t v86 = (v83 - (unsigned char *)*v8) >> 2;
              unint64_t v87 = v86 + 1;
              if ((unint64_t)(v86 + 1) >> 62) {
LABEL_176:
              }
                sub_227B8B89C();
              uint64_t v88 = v82 - (void)v85;
              if (v88 >> 1 > v87) {
                unint64_t v87 = v88 >> 1;
              }
              if ((unint64_t)v88 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v89 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v89 = v87;
              }
              if (v89)
              {
                uint64_t v90 = (char *)sub_227B8BBB8((uint64_t)v9, v89);
                unint64_t v85 = *(char **)(a1 + 8);
                unint64_t v83 = *(char **)(a1 + 16);
              }
              else
              {
                uint64_t v90 = 0;
              }
              unint64_t v91 = &v90[4 * v86];
              *(_DWORD *)unint64_t v91 = 0;
              char v84 = v91 + 4;
              while (v83 != v85)
              {
                int v92 = *((_DWORD *)v83 - 1);
                v83 -= 4;
                *((_DWORD *)v91 - 1) = v92;
                v91 -= 4;
              }
              *(void *)(a1 + 8) = v91;
              *(void *)(a1 + 16) = v84;
              *(void *)(a1 + 24) = &v90[4 * v89];
              if (v85) {
                operator delete(v85);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v83 = 0;
              char v84 = v83 + 4;
            }
            *(void *)(a1 + 16) = v84;
            unint64_t v93 = *((void *)this + 1);
            unint64_t v94 = *((void *)this + 2);
            uint64_t v95 = *(void *)this;
            char v96 = 0;
            unsigned int v97 = 0;
            if (v93 > 0xFFFFFFFFFFFFFFF5 || v93 + 10 > v94)
            {
              uint64_t v101 = 0;
              if (v94 <= v93) {
                unint64_t v94 = *((void *)this + 1);
              }
              while (1)
              {
                if (v94 == v93)
                {
                  LODWORD(v101) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_165;
                }
                unint64_t v99 = v93 + 1;
                char v100 = *(unsigned char *)(v95 + v93);
                *((void *)this + 1) = v99;
                v101 |= (unint64_t)(v100 & 0x7F) << v96;
                if ((v100 & 0x80) == 0) {
                  break;
                }
                v96 += 7;
                unint64_t v93 = v99;
                BOOL v59 = v97++ > 8;
                if (v59)
                {
LABEL_161:
                  LODWORD(v101) = 0;
                  goto LABEL_165;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v101) = 0;
              }
            }
            else
            {
              uint64_t v101 = 0;
              while (1)
              {
                unint64_t v102 = v93 + 1;
                *((void *)this + 1) = v93 + 1;
                char v103 = *(unsigned char *)(v95 + v93);
                v101 |= (unint64_t)(v103 & 0x7F) << v96;
                if ((v103 & 0x80) == 0) {
                  break;
                }
                v96 += 7;
                unint64_t v93 = v102;
                BOOL v59 = v97++ > 8;
                if (v59) {
                  goto LABEL_161;
                }
              }
            }
LABEL_165:
            *(v84 - 1) = v101;
          }
LABEL_166:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_166;
      }
    }
    char v16 = 0;
    unsigned int v17 = 0;
    unint64_t v13 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v18 = v2 + 1;
      char v19 = *(unsigned char *)(v10 + v2);
      *((void *)this + 1) = v18;
      v13 |= (unint64_t)(v19 & 0x7F) << v16;
      if ((v19 & 0x80) == 0) {
        goto LABEL_21;
      }
      v16 += 7;
      unint64_t v2 = v18;
      if (v17++ >= 9)
      {
LABEL_20:
        unint64_t v13 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227BA0308(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 52);
  if ((v4 & 4) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 52);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
LABEL_12:
      uint64_t result = PB::Writer::writeVarInt(this);
      if ((*(unsigned char *)(v3 + 52) & 2) == 0) {
        goto LABEL_6;
      }
      goto LABEL_5;
    }
  }
  else if ((*(unsigned char *)(result + 52) & 1) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32));
  char v4 = *(unsigned char *)(v3 + 52);
  if ((v4 & 8) != 0) {
    goto LABEL_12;
  }
LABEL_4:
  if ((v4 & 2) != 0) {
LABEL_5:
  }
    uint64_t result = PB::Writer::writeVarInt(this);
LABEL_6:
  uint64_t v6 = *(void *)(v3 + 8);
  uint64_t v5 = *(void *)(v3 + 16);
  while (v6 != v5)
  {
    v6 += 4;
    uint64_t result = PB::Writer::writeVarInt(this);
  }
  return result;
}

double sub_227BA03C4(uint64_t a1)
{
  *(void *)a1 = &unk_26DC227A0;
  *(_DWORD *)(a1 + 192) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  return result;
}

void sub_227BA0410(PB::Base *this)
{
  *(void *)this = &unk_26DC227A0;
  unint64_t v2 = (void *)*((void *)this + 16);
  if (v2)
  {
    *((void *)this + 17) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 13);
  if (v3)
  {
    *((void *)this + 14) = v3;
    operator delete(v3);
  }
  char v4 = (void *)*((void *)this + 10);
  if (v4)
  {
    *((void *)this + 11) = v4;
    operator delete(v4);
  }
  uint64_t v5 = (void *)*((void *)this + 7);
  if (v5)
  {
    *((void *)this + 8) = v5;
    operator delete(v5);
  }
  uint64_t v6 = (void *)*((void *)this + 4);
  if (v6)
  {
    *((void *)this + 5) = v6;
    operator delete(v6);
  }
  uint64_t v7 = (void *)*((void *)this + 1);
  if (v7)
  {
    *((void *)this + 2) = v7;
    operator delete(v7);
  }

  PB::Base::~Base(this);
}

void sub_227BA04C4(PB::Base *a1)
{
  sub_227BA0410(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227BA04FC(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 8) = 0u;
  char v4 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)a1 = &unk_26DC227A0;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_DWORD *)(a1 + 192) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  if (*(_WORD *)(a2 + 192))
  {
    uint64_t v5 = *(void *)(a2 + 152);
    *(_WORD *)(a1 + 192) = 1;
    *(void *)(a1 + 152) = v5;
  }
  if (a1 != a2)
  {
    sub_227B8BA68(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
    sub_227B8BA68((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
    sub_227B8BA68((char *)(a1 + 80), *(char **)(a2 + 80), *(void *)(a2 + 88), (uint64_t)(*(void *)(a2 + 88) - *(void *)(a2 + 80)) >> 2);
    sub_227B8BA68((char *)(a1 + 56), *(char **)(a2 + 56), *(void *)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 2);
  }
  __int16 v6 = *(_WORD *)(a2 + 192);
  if ((v6 & 0x80) != 0)
  {
    int v9 = *(_DWORD *)(a2 + 184);
    *(_WORD *)(a1 + 192) |= 0x80u;
    *(_DWORD *)(a1 + 184) = v9;
    __int16 v6 = *(_WORD *)(a2 + 192);
    if ((v6 & 0x40) == 0)
    {
LABEL_7:
      if ((v6 & 0x100) == 0) {
        goto LABEL_8;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 0x40) == 0)
  {
    goto LABEL_7;
  }
  int v10 = *(_DWORD *)(a2 + 180);
  *(_WORD *)(a1 + 192) |= 0x40u;
  *(_DWORD *)(a1 + 180) = v10;
  __int16 v6 = *(_WORD *)(a2 + 192);
  if ((v6 & 0x100) == 0)
  {
LABEL_8:
    if ((v6 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  int v11 = *(_DWORD *)(a2 + 188);
  *(_WORD *)(a1 + 192) |= 0x100u;
  *(_DWORD *)(a1 + 188) = v11;
  __int16 v6 = *(_WORD *)(a2 + 192);
  if ((v6 & 4) == 0)
  {
LABEL_9:
    if ((v6 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  int v12 = *(_DWORD *)(a2 + 164);
  *(_WORD *)(a1 + 192) |= 4u;
  *(_DWORD *)(a1 + 164) = v12;
  __int16 v6 = *(_WORD *)(a2 + 192);
  if ((v6 & 8) == 0)
  {
LABEL_10:
    if ((v6 & 0x20) == 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  int v13 = *(_DWORD *)(a2 + 168);
  *(_WORD *)(a1 + 192) |= 8u;
  *(_DWORD *)(a1 + 168) = v13;
  __int16 v6 = *(_WORD *)(a2 + 192);
  if ((v6 & 0x20) == 0)
  {
LABEL_11:
    if ((v6 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v14 = *(_DWORD *)(a2 + 176);
  *(_WORD *)(a1 + 192) |= 0x20u;
  *(_DWORD *)(a1 + 176) = v14;
  __int16 v6 = *(_WORD *)(a2 + 192);
  if ((v6 & 0x10) == 0)
  {
LABEL_12:
    if ((v6 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_23:
  int v15 = *(_DWORD *)(a2 + 172);
  *(_WORD *)(a1 + 192) |= 0x10u;
  *(_DWORD *)(a1 + 172) = v15;
  if ((*(_WORD *)(a2 + 192) & 2) != 0)
  {
LABEL_13:
    int v7 = *(_DWORD *)(a2 + 160);
    *(_WORD *)(a1 + 192) |= 2u;
    *(_DWORD *)(a1 + 160) = v7;
  }
LABEL_14:
  if (a1 != a2)
  {
    sub_227B8BA68((char *)(a1 + 104), *(char **)(a2 + 104), *(void *)(a2 + 112), (uint64_t)(*(void *)(a2 + 112) - *(void *)(a2 + 104)) >> 2);
    sub_227B8BA68((char *)(a1 + 128), *(char **)(a2 + 128), *(void *)(a2 + 136), (uint64_t)(*(void *)(a2 + 136) - *(void *)(a2 + 128)) >> 2);
  }
  return a1;
}

uint64_t sub_227BA0720(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(float **)(a1 + 8);
  __int16 v6 = *(float **)(a1 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    PB::TextFormatter::format(this, "accelDecimated", v7);
  }
  if ((*(_WORD *)(a1 + 192) & 2) != 0) {
    PB::TextFormatter::format(this, "accelFrontVariance", *(float *)(a1 + 160));
  }
  char v8 = *(float **)(a1 + 32);
  int v9 = *(float **)(a1 + 40);
  while (v8 != v9)
  {
    float v10 = *v8++;
    PB::TextFormatter::format(this, "accelMean", v10);
  }
  int v11 = *(float **)(a1 + 56);
  int v12 = *(float **)(a1 + 64);
  while (v11 != v12)
  {
    float v13 = *v11++;
    PB::TextFormatter::format(this, "accelNormAutocorr", v13);
  }
  __int16 v14 = *(_WORD *)(a1 + 192);
  if ((v14 & 4) != 0)
  {
    PB::TextFormatter::format(this, "accelNormMean", *(float *)(a1 + 164));
    __int16 v14 = *(_WORD *)(a1 + 192);
  }
  if ((v14 & 8) != 0) {
    PB::TextFormatter::format(this, "accelNormVariance", *(float *)(a1 + 168));
  }
  int v15 = *(float **)(a1 + 80);
  char v16 = *(float **)(a1 + 88);
  while (v15 != v16)
  {
    float v17 = *v15++;
    PB::TextFormatter::format(this, "accelVariance", v17);
  }
  __int16 v18 = *(_WORD *)(a1 + 192);
  if ((v18 & 0x10) != 0)
  {
    PB::TextFormatter::format(this, "currentAngleDelta", *(float *)(a1 + 172));
    __int16 v18 = *(_WORD *)(a1 + 192);
    if ((v18 & 0x20) == 0)
    {
LABEL_17:
      if ((v18 & 0x40) == 0) {
        goto LABEL_19;
      }
      goto LABEL_18;
    }
  }
  else if ((v18 & 0x20) == 0)
  {
    goto LABEL_17;
  }
  PB::TextFormatter::format(this, "currentMotionState");
  if ((*(_WORD *)(a1 + 192) & 0x40) != 0) {
LABEL_18:
  }
    PB::TextFormatter::format(this, "lagAtMaxAutocorr");
LABEL_19:
  char v19 = *(float **)(a1 + 104);
  unint64_t v20 = *(float **)(a1 + 112);
  while (v19 != v20)
  {
    float v21 = *v19++;
    PB::TextFormatter::format(this, "lastBaseline", v21);
  }
  __int16 v22 = *(_WORD *)(a1 + 192);
  if ((v22 & 0x80) != 0)
  {
    PB::TextFormatter::format(this, "maxAutocorr", *(float *)(a1 + 184));
    __int16 v22 = *(_WORD *)(a1 + 192);
  }
  if (v22) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 152));
  }
  uint64_t v23 = *(float **)(a1 + 128);
  char v24 = *(float **)(a1 + 136);
  while (v23 != v24)
  {
    float v25 = *v23++;
    PB::TextFormatter::format(this, "walkingBaseline", v25);
  }
  if ((*(_WORD *)(a1 + 192) & 0x100) != 0) {
    PB::TextFormatter::format(this, "widthAtMaxAutocorr");
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227BA0984(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v221 = a1 + 144;
    int v222 = (void **)(a1 + 104);
    unint64_t v223 = (void **)(a1 + 128);
    char v8 = (void **)(a1 + 56);
    uint64_t v219 = a1 + 72;
    uint64_t v220 = a1 + 120;
    int v9 = (void **)(a1 + 80);
    float v10 = (void **)(a1 + 32);
    uint64_t v217 = a1 + 48;
    uint64_t v218 = a1 + 96;
    int v11 = (void **)(a1 + 8);
    uint64_t v216 = a1 + 24;
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        BOOL v18 = v14++ > 8;
        if (v18) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v24 = v15 & 7;
      if (v24 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v15 >> 3))
      {
        case 1u:
          *(_WORD *)(a1 + 192) |= 1u;
          unint64_t v25 = *((void *)this + 1);
          if (v25 > 0xFFFFFFFFFFFFFFF7 || v25 + 8 > *((void *)this + 2)) {
            goto LABEL_347;
          }
          *(void *)(a1 + 152) = *(void *)(*(void *)this + v25);
          uint64_t v26 = *((void *)this + 1) + 8;
          goto LABEL_350;
        case 2u:
          if (v24 != 2)
          {
            unsigned int v141 = *(char **)(a1 + 16);
            unint64_t v140 = *(void *)(a1 + 24);
            if ((unint64_t)v141 >= v140)
            {
              uint64_t v165 = (char *)*v11;
              uint64_t v166 = (v141 - (unsigned char *)*v11) >> 2;
              unint64_t v167 = v166 + 1;
              if ((unint64_t)(v166 + 1) >> 62) {
LABEL_366:
              }
                sub_227B8B89C();
              uint64_t v168 = v140 - (void)v165;
              if (v168 >> 1 > v167) {
                unint64_t v167 = v168 >> 1;
              }
              if ((unint64_t)v168 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v169 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v169 = v167;
              }
              if (v169)
              {
                unint64_t v170 = (char *)sub_227B8BBB8(v216, v169);
                uint64_t v165 = *(char **)(a1 + 8);
                unsigned int v141 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v170 = 0;
              }
              unint64_t v201 = &v170[4 * v166];
              *(_DWORD *)unint64_t v201 = 0;
              uint64_t v142 = v201 + 4;
              while (v141 != v165)
              {
                int v202 = *((_DWORD *)v141 - 1);
                v141 -= 4;
                *((_DWORD *)v201 - 1) = v202;
                v201 -= 4;
              }
              *(void *)(a1 + 8) = v201;
              *(void *)(a1 + 16) = v142;
              *(void *)(a1 + 24) = &v170[4 * v169];
              if (v165) {
                operator delete(v165);
              }
            }
            else
            {
              *(_DWORD *)unsigned int v141 = 0;
              uint64_t v142 = v141 + 4;
            }
            *(void *)(a1 + 16) = v142;
            goto LABEL_345;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v27 = *((void *)this + 1);
          unint64_t v28 = *((void *)this + 2);
          while (v27 < v28 && !*((unsigned char *)this + 24))
          {
            unint64_t v30 = *(char **)(a1 + 16);
            unint64_t v29 = *(void *)(a1 + 24);
            if ((unint64_t)v30 >= v29)
            {
              uint64_t v32 = (char *)*v11;
              uint64_t v33 = (v30 - (unsigned char *)*v11) >> 2;
              unint64_t v34 = v33 + 1;
              if ((unint64_t)(v33 + 1) >> 62) {
                goto LABEL_366;
              }
              uint64_t v35 = v29 - (void)v32;
              if (v35 >> 1 > v34) {
                unint64_t v34 = v35 >> 1;
              }
              if ((unint64_t)v35 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v36 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v36 = v34;
              }
              if (v36)
              {
                char v37 = (char *)sub_227B8BBB8(v216, v36);
                uint64_t v32 = *(char **)(a1 + 8);
                unint64_t v30 = *(char **)(a1 + 16);
              }
              else
              {
                char v37 = 0;
              }
              unint64_t v38 = &v37[4 * v33];
              *(_DWORD *)unint64_t v38 = 0;
              unint64_t v31 = v38 + 4;
              while (v30 != v32)
              {
                int v39 = *((_DWORD *)v30 - 1);
                v30 -= 4;
                *((_DWORD *)v38 - 1) = v39;
                v38 -= 4;
              }
              *(void *)(a1 + 8) = v38;
              *(void *)(a1 + 16) = v31;
              *(void *)(a1 + 24) = &v37[4 * v36];
              if (v32) {
                operator delete(v32);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v30 = 0;
              unint64_t v31 = v30 + 4;
            }
            *(void *)(a1 + 16) = v31;
            unint64_t v40 = *((void *)this + 1);
            if (v40 > 0xFFFFFFFFFFFFFFFBLL || v40 + 4 > *((void *)this + 2)) {
              goto LABEL_208;
            }
            *(v31 - 1) = *(_DWORD *)(*(void *)this + v40);
            unint64_t v28 = *((void *)this + 2);
            unint64_t v27 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v27;
          }
          goto LABEL_209;
        case 3u:
          if (v24 != 2)
          {
            char v144 = *(char **)(a1 + 40);
            unint64_t v143 = *(void *)(a1 + 48);
            if ((unint64_t)v144 >= v143)
            {
              uint64_t v171 = (char *)*v10;
              uint64_t v172 = (v144 - (unsigned char *)*v10) >> 2;
              unint64_t v173 = v172 + 1;
              if ((unint64_t)(v172 + 1) >> 62) {
LABEL_361:
              }
                sub_227B8B89C();
              uint64_t v174 = v143 - (void)v171;
              if (v174 >> 1 > v173) {
                unint64_t v173 = v174 >> 1;
              }
              if ((unint64_t)v174 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v175 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v175 = v173;
              }
              if (v175)
              {
                int v176 = (char *)sub_227B8BBB8(v217, v175);
                uint64_t v171 = *(char **)(a1 + 32);
                char v144 = *(char **)(a1 + 40);
              }
              else
              {
                int v176 = 0;
              }
              char v203 = &v176[4 * v172];
              *(_DWORD *)char v203 = 0;
              uint64_t v142 = v203 + 4;
              while (v144 != v171)
              {
                int v204 = *((_DWORD *)v144 - 1);
                v144 -= 4;
                *((_DWORD *)v203 - 1) = v204;
                v203 -= 4;
              }
              *(void *)(a1 + 32) = v203;
              *(void *)(a1 + 40) = v142;
              *(void *)(a1 + 48) = &v176[4 * v175];
              if (v171) {
                operator delete(v171);
              }
            }
            else
            {
              *(_DWORD *)char v144 = 0;
              uint64_t v142 = v144 + 4;
            }
            *(void *)(a1 + 40) = v142;
            goto LABEL_345;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v41 = *((void *)this + 1);
          unint64_t v42 = *((void *)this + 2);
          while (v41 < v42 && !*((unsigned char *)this + 24))
          {
            unint64_t v44 = *(char **)(a1 + 40);
            unint64_t v43 = *(void *)(a1 + 48);
            if ((unint64_t)v44 >= v43)
            {
              unint64_t v46 = (char *)*v10;
              uint64_t v47 = (v44 - (unsigned char *)*v10) >> 2;
              unint64_t v48 = v47 + 1;
              if ((unint64_t)(v47 + 1) >> 62) {
                goto LABEL_361;
              }
              uint64_t v49 = v43 - (void)v46;
              if (v49 >> 1 > v48) {
                unint64_t v48 = v49 >> 1;
              }
              if ((unint64_t)v49 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v50 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v50 = v48;
              }
              if (v50)
              {
                unint64_t v51 = (char *)sub_227B8BBB8(v217, v50);
                unint64_t v46 = *(char **)(a1 + 32);
                unint64_t v44 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v51 = 0;
              }
              char v52 = &v51[4 * v47];
              *(_DWORD *)char v52 = 0;
              char v45 = v52 + 4;
              while (v44 != v46)
              {
                int v53 = *((_DWORD *)v44 - 1);
                v44 -= 4;
                *((_DWORD *)v52 - 1) = v53;
                v52 -= 4;
              }
              *(void *)(a1 + 32) = v52;
              *(void *)(a1 + 40) = v45;
              *(void *)(a1 + 48) = &v51[4 * v50];
              if (v46) {
                operator delete(v46);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v44 = 0;
              char v45 = v44 + 4;
            }
            *(void *)(a1 + 40) = v45;
            unint64_t v54 = *((void *)this + 1);
            if (v54 > 0xFFFFFFFFFFFFFFFBLL || v54 + 4 > *((void *)this + 2)) {
              goto LABEL_208;
            }
            *(v45 - 1) = *(_DWORD *)(*(void *)this + v54);
            unint64_t v42 = *((void *)this + 2);
            unint64_t v41 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v41;
          }
          goto LABEL_209;
        case 4u:
          if (v24 != 2)
          {
            unint64_t v146 = *(char **)(a1 + 88);
            unint64_t v145 = *(void *)(a1 + 96);
            if ((unint64_t)v146 >= v145)
            {
              unint64_t v177 = (char *)*v9;
              uint64_t v178 = (v146 - (unsigned char *)*v9) >> 2;
              unint64_t v179 = v178 + 1;
              if ((unint64_t)(v178 + 1) >> 62) {
LABEL_362:
              }
                sub_227B8B89C();
              uint64_t v180 = v145 - (void)v177;
              if (v180 >> 1 > v179) {
                unint64_t v179 = v180 >> 1;
              }
              if ((unint64_t)v180 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v181 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v181 = v179;
              }
              if (v181)
              {
                unsigned int v182 = (char *)sub_227B8BBB8(v218, v181);
                unint64_t v177 = *(char **)(a1 + 80);
                unint64_t v146 = *(char **)(a1 + 88);
              }
              else
              {
                unsigned int v182 = 0;
              }
              unsigned int v205 = &v182[4 * v178];
              *(_DWORD *)unsigned int v205 = 0;
              uint64_t v142 = v205 + 4;
              while (v146 != v177)
              {
                int v206 = *((_DWORD *)v146 - 1);
                v146 -= 4;
                *((_DWORD *)v205 - 1) = v206;
                v205 -= 4;
              }
              *(void *)(a1 + 80) = v205;
              *(void *)(a1 + 88) = v142;
              *(void *)(a1 + 96) = &v182[4 * v181];
              if (v177) {
                operator delete(v177);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v146 = 0;
              uint64_t v142 = v146 + 4;
            }
            *(void *)(a1 + 88) = v142;
            goto LABEL_345;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v55 = *((void *)this + 1);
          unint64_t v56 = *((void *)this + 2);
          while (v55 < v56 && !*((unsigned char *)this + 24))
          {
            uint64_t v58 = *(char **)(a1 + 88);
            unint64_t v57 = *(void *)(a1 + 96);
            if ((unint64_t)v58 >= v57)
            {
              char v60 = (char *)*v9;
              uint64_t v61 = (v58 - (unsigned char *)*v9) >> 2;
              unint64_t v62 = v61 + 1;
              if ((unint64_t)(v61 + 1) >> 62) {
                goto LABEL_362;
              }
              uint64_t v63 = v57 - (void)v60;
              if (v63 >> 1 > v62) {
                unint64_t v62 = v63 >> 1;
              }
              if ((unint64_t)v63 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v64 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v64 = v62;
              }
              if (v64)
              {
                char v65 = (char *)sub_227B8BBB8(v218, v64);
                char v60 = *(char **)(a1 + 80);
                uint64_t v58 = *(char **)(a1 + 88);
              }
              else
              {
                char v65 = 0;
              }
              unsigned int v66 = &v65[4 * v61];
              *(_DWORD *)unsigned int v66 = 0;
              BOOL v59 = v66 + 4;
              while (v58 != v60)
              {
                int v67 = *((_DWORD *)v58 - 1);
                v58 -= 4;
                *((_DWORD *)v66 - 1) = v67;
                v66 -= 4;
              }
              *(void *)(a1 + 80) = v66;
              *(void *)(a1 + 88) = v59;
              *(void *)(a1 + 96) = &v65[4 * v64];
              if (v60) {
                operator delete(v60);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v58 = 0;
              BOOL v59 = v58 + 4;
            }
            *(void *)(a1 + 88) = v59;
            unint64_t v68 = *((void *)this + 1);
            if (v68 > 0xFFFFFFFFFFFFFFFBLL || v68 + 4 > *((void *)this + 2)) {
              goto LABEL_208;
            }
            *(v59 - 1) = *(_DWORD *)(*(void *)this + v68);
            unint64_t v56 = *((void *)this + 2);
            unint64_t v55 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v55;
          }
          goto LABEL_209;
        case 5u:
          if (v24 != 2)
          {
            uint64_t v148 = *(char **)(a1 + 64);
            unint64_t v147 = *(void *)(a1 + 72);
            if ((unint64_t)v148 >= v147)
            {
              uint64_t v183 = (char *)*v8;
              uint64_t v184 = (v148 - (unsigned char *)*v8) >> 2;
              unint64_t v185 = v184 + 1;
              if ((unint64_t)(v184 + 1) >> 62) {
LABEL_363:
              }
                sub_227B8B89C();
              uint64_t v186 = v147 - (void)v183;
              if (v186 >> 1 > v185) {
                unint64_t v185 = v186 >> 1;
              }
              if ((unint64_t)v186 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v187 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v187 = v185;
              }
              if (v187)
              {
                uint64_t v188 = (char *)sub_227B8BBB8(v219, v187);
                uint64_t v183 = *(char **)(a1 + 56);
                uint64_t v148 = *(char **)(a1 + 64);
              }
              else
              {
                uint64_t v188 = 0;
              }
              unint64_t v207 = &v188[4 * v184];
              *(_DWORD *)unint64_t v207 = 0;
              uint64_t v142 = v207 + 4;
              while (v148 != v183)
              {
                int v208 = *((_DWORD *)v148 - 1);
                v148 -= 4;
                *((_DWORD *)v207 - 1) = v208;
                v207 -= 4;
              }
              *(void *)(a1 + 56) = v207;
              *(void *)(a1 + 64) = v142;
              *(void *)(a1 + 72) = &v188[4 * v187];
              if (v183) {
                operator delete(v183);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v148 = 0;
              uint64_t v142 = v148 + 4;
            }
            *(void *)(a1 + 64) = v142;
            goto LABEL_345;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v69 = *((void *)this + 1);
          unint64_t v70 = *((void *)this + 2);
          while (v69 < v70 && !*((unsigned char *)this + 24))
          {
            unint64_t v72 = *(char **)(a1 + 64);
            unint64_t v71 = *(void *)(a1 + 72);
            if ((unint64_t)v72 >= v71)
            {
              char v74 = (char *)*v8;
              uint64_t v75 = (v72 - (unsigned char *)*v8) >> 2;
              unint64_t v76 = v75 + 1;
              if ((unint64_t)(v75 + 1) >> 62) {
                goto LABEL_363;
              }
              uint64_t v77 = v71 - (void)v74;
              if (v77 >> 1 > v76) {
                unint64_t v76 = v77 >> 1;
              }
              if ((unint64_t)v77 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v78 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v78 = v76;
              }
              if (v78)
              {
                unsigned int v79 = (char *)sub_227B8BBB8(v219, v78);
                char v74 = *(char **)(a1 + 56);
                unint64_t v72 = *(char **)(a1 + 64);
              }
              else
              {
                unsigned int v79 = 0;
              }
              unint64_t v80 = &v79[4 * v75];
              *(_DWORD *)unint64_t v80 = 0;
              char v73 = v80 + 4;
              while (v72 != v74)
              {
                int v81 = *((_DWORD *)v72 - 1);
                v72 -= 4;
                *((_DWORD *)v80 - 1) = v81;
                v80 -= 4;
              }
              *(void *)(a1 + 56) = v80;
              *(void *)(a1 + 64) = v73;
              *(void *)(a1 + 72) = &v79[4 * v78];
              if (v74) {
                operator delete(v74);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v72 = 0;
              char v73 = v72 + 4;
            }
            *(void *)(a1 + 64) = v73;
            unint64_t v82 = *((void *)this + 1);
            if (v82 > 0xFFFFFFFFFFFFFFFBLL || v82 + 4 > *((void *)this + 2)) {
              goto LABEL_208;
            }
            *(v73 - 1) = *(_DWORD *)(*(void *)this + v82);
            unint64_t v70 = *((void *)this + 2);
            unint64_t v69 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v69;
          }
          goto LABEL_209;
        case 6u:
          *(_WORD *)(a1 + 192) |= 0x80u;
          unint64_t v83 = *((void *)this + 1);
          if (v83 > 0xFFFFFFFFFFFFFFFBLL || v83 + 4 > *((void *)this + 2)) {
            goto LABEL_347;
          }
          *(_DWORD *)(a1 + 184) = *(_DWORD *)(*(void *)this + v83);
          goto LABEL_349;
        case 7u:
          *(_WORD *)(a1 + 192) |= 0x40u;
          unint64_t v84 = *((void *)this + 1);
          unint64_t v85 = *((void *)this + 2);
          uint64_t v86 = *(void *)this;
          if (v84 <= 0xFFFFFFFFFFFFFFF5 && v84 + 10 <= v85)
          {
            char v87 = 0;
            unsigned int v88 = 0;
            uint64_t v89 = 0;
            do
            {
              unint64_t v90 = v84 + 1;
              *((void *)this + 1) = v84 + 1;
              char v91 = *(unsigned char *)(v86 + v84);
              v89 |= (unint64_t)(v91 & 0x7F) << v87;
              if ((v91 & 0x80) == 0) {
                goto LABEL_296;
              }
              v87 += 7;
              unint64_t v84 = v90;
              BOOL v18 = v88++ > 8;
            }
            while (!v18);
LABEL_224:
            LODWORD(v89) = 0;
            goto LABEL_296;
          }
          char v149 = 0;
          unsigned int v150 = 0;
          uint64_t v89 = 0;
          if (v85 <= v84) {
            unint64_t v85 = *((void *)this + 1);
          }
          while (2)
          {
            if (v85 == v84)
            {
              LODWORD(v89) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v151 = v84 + 1;
              char v152 = *(unsigned char *)(v86 + v84);
              *((void *)this + 1) = v151;
              v89 |= (unint64_t)(v152 & 0x7F) << v149;
              if (v152 < 0)
              {
                v149 += 7;
                unint64_t v84 = v151;
                BOOL v18 = v150++ > 8;
                if (v18) {
                  goto LABEL_224;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v89) = 0;
              }
            }
            break;
          }
LABEL_296:
          *(_DWORD *)(a1 + 180) = v89;
          goto LABEL_351;
        case 8u:
          *(_WORD *)(a1 + 192) |= 0x100u;
          unint64_t v92 = *((void *)this + 1);
          unint64_t v93 = *((void *)this + 2);
          uint64_t v94 = *(void *)this;
          if (v92 <= 0xFFFFFFFFFFFFFFF5 && v92 + 10 <= v93)
          {
            char v95 = 0;
            unsigned int v96 = 0;
            uint64_t v97 = 0;
            do
            {
              unint64_t v98 = v92 + 1;
              *((void *)this + 1) = v92 + 1;
              char v99 = *(unsigned char *)(v94 + v92);
              v97 |= (unint64_t)(v99 & 0x7F) << v95;
              if ((v99 & 0x80) == 0) {
                goto LABEL_299;
              }
              v95 += 7;
              unint64_t v92 = v98;
              BOOL v18 = v96++ > 8;
            }
            while (!v18);
LABEL_231:
            LODWORD(v97) = 0;
            goto LABEL_299;
          }
          char v153 = 0;
          unsigned int v154 = 0;
          uint64_t v97 = 0;
          if (v93 <= v92) {
            unint64_t v93 = *((void *)this + 1);
          }
          while (2)
          {
            if (v93 == v92)
            {
              LODWORD(v97) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v155 = v92 + 1;
              char v156 = *(unsigned char *)(v94 + v92);
              *((void *)this + 1) = v155;
              v97 |= (unint64_t)(v156 & 0x7F) << v153;
              if (v156 < 0)
              {
                v153 += 7;
                unint64_t v92 = v155;
                BOOL v18 = v154++ > 8;
                if (v18) {
                  goto LABEL_231;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v97) = 0;
              }
            }
            break;
          }
LABEL_299:
          *(_DWORD *)(a1 + 188) = v97;
          goto LABEL_351;
        case 9u:
          *(_WORD *)(a1 + 192) |= 4u;
          unint64_t v100 = *((void *)this + 1);
          if (v100 > 0xFFFFFFFFFFFFFFFBLL || v100 + 4 > *((void *)this + 2)) {
            goto LABEL_347;
          }
          *(_DWORD *)(a1 + 164) = *(_DWORD *)(*(void *)this + v100);
          goto LABEL_349;
        case 0xAu:
          *(_WORD *)(a1 + 192) |= 8u;
          unint64_t v101 = *((void *)this + 1);
          if (v101 > 0xFFFFFFFFFFFFFFFBLL || v101 + 4 > *((void *)this + 2)) {
            goto LABEL_347;
          }
          *(_DWORD *)(a1 + 168) = *(_DWORD *)(*(void *)this + v101);
          goto LABEL_349;
        case 0xBu:
          *(_WORD *)(a1 + 192) |= 0x20u;
          unint64_t v102 = *((void *)this + 1);
          unint64_t v103 = *((void *)this + 2);
          uint64_t v104 = *(void *)this;
          if (v102 <= 0xFFFFFFFFFFFFFFF5 && v102 + 10 <= v103)
          {
            char v105 = 0;
            unsigned int v106 = 0;
            uint64_t v107 = 0;
            do
            {
              unint64_t v108 = v102 + 1;
              *((void *)this + 1) = v102 + 1;
              char v109 = *(unsigned char *)(v104 + v102);
              v107 |= (unint64_t)(v109 & 0x7F) << v105;
              if ((v109 & 0x80) == 0) {
                goto LABEL_302;
              }
              v105 += 7;
              unint64_t v102 = v108;
              BOOL v18 = v106++ > 8;
            }
            while (!v18);
LABEL_238:
            LODWORD(v107) = 0;
            goto LABEL_302;
          }
          char v157 = 0;
          unsigned int v158 = 0;
          uint64_t v107 = 0;
          if (v103 <= v102) {
            unint64_t v103 = *((void *)this + 1);
          }
          while (2)
          {
            if (v103 == v102)
            {
              LODWORD(v107) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v159 = v102 + 1;
              char v160 = *(unsigned char *)(v104 + v102);
              *((void *)this + 1) = v159;
              v107 |= (unint64_t)(v160 & 0x7F) << v157;
              if (v160 < 0)
              {
                v157 += 7;
                unint64_t v102 = v159;
                BOOL v18 = v158++ > 8;
                if (v18) {
                  goto LABEL_238;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v107) = 0;
              }
            }
            break;
          }
LABEL_302:
          *(_DWORD *)(a1 + 176) = v107;
          goto LABEL_351;
        case 0xCu:
          *(_WORD *)(a1 + 192) |= 0x10u;
          unint64_t v110 = *((void *)this + 1);
          if (v110 > 0xFFFFFFFFFFFFFFFBLL || v110 + 4 > *((void *)this + 2)) {
            goto LABEL_347;
          }
          *(_DWORD *)(a1 + 172) = *(_DWORD *)(*(void *)this + v110);
          goto LABEL_349;
        case 0xDu:
          *(_WORD *)(a1 + 192) |= 2u;
          unint64_t v111 = *((void *)this + 1);
          if (v111 > 0xFFFFFFFFFFFFFFFBLL || v111 + 4 > *((void *)this + 2)) {
            goto LABEL_347;
          }
          *(_DWORD *)(a1 + 160) = *(_DWORD *)(*(void *)this + v111);
          goto LABEL_349;
        case 0xEu:
          if (v24 != 2)
          {
            char v162 = *(char **)(a1 + 112);
            unint64_t v161 = *(void *)(a1 + 120);
            if ((unint64_t)v162 >= v161)
            {
              unint64_t v189 = (char *)*v222;
              uint64_t v190 = (v162 - (unsigned char *)*v222) >> 2;
              unint64_t v191 = v190 + 1;
              if ((unint64_t)(v190 + 1) >> 62) {
LABEL_364:
              }
                sub_227B8B89C();
              uint64_t v192 = v161 - (void)v189;
              if (v192 >> 1 > v191) {
                unint64_t v191 = v192 >> 1;
              }
              if ((unint64_t)v192 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v193 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v193 = v191;
              }
              if (v193)
              {
                uint64_t v194 = (char *)sub_227B8BBB8(v220, v193);
                unint64_t v189 = *(char **)(a1 + 104);
                char v162 = *(char **)(a1 + 112);
              }
              else
              {
                uint64_t v194 = 0;
              }
              char v209 = &v194[4 * v190];
              *(_DWORD *)char v209 = 0;
              uint64_t v142 = v209 + 4;
              while (v162 != v189)
              {
                int v210 = *((_DWORD *)v162 - 1);
                v162 -= 4;
                *((_DWORD *)v209 - 1) = v210;
                v209 -= 4;
              }
              *(void *)(a1 + 104) = v209;
              *(void *)(a1 + 112) = v142;
              *(void *)(a1 + 120) = &v194[4 * v193];
              if (v189) {
                operator delete(v189);
              }
            }
            else
            {
              *(_DWORD *)char v162 = 0;
              uint64_t v142 = v162 + 4;
            }
            *(void *)(a1 + 112) = v142;
            goto LABEL_345;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v112 = *((void *)this + 1);
          unint64_t v113 = *((void *)this + 2);
          while (v112 < v113 && !*((unsigned char *)this + 24))
          {
            unsigned int v115 = *(char **)(a1 + 112);
            unint64_t v114 = *(void *)(a1 + 120);
            if ((unint64_t)v115 >= v114)
            {
              char v117 = (char *)*v222;
              uint64_t v118 = (v115 - (unsigned char *)*v222) >> 2;
              unint64_t v119 = v118 + 1;
              if ((unint64_t)(v118 + 1) >> 62) {
                goto LABEL_364;
              }
              uint64_t v120 = v114 - (void)v117;
              if (v120 >> 1 > v119) {
                unint64_t v119 = v120 >> 1;
              }
              if ((unint64_t)v120 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v121 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v121 = v119;
              }
              if (v121)
              {
                char v122 = (char *)sub_227B8BBB8(v220, v121);
                char v117 = *(char **)(a1 + 104);
                unsigned int v115 = *(char **)(a1 + 112);
              }
              else
              {
                char v122 = 0;
              }
              unsigned int v123 = &v122[4 * v118];
              *(_DWORD *)unsigned int v123 = 0;
              unint64_t v116 = v123 + 4;
              while (v115 != v117)
              {
                int v124 = *((_DWORD *)v115 - 1);
                v115 -= 4;
                *((_DWORD *)v123 - 1) = v124;
                v123 -= 4;
              }
              *(void *)(a1 + 104) = v123;
              *(void *)(a1 + 112) = v116;
              *(void *)(a1 + 120) = &v122[4 * v121];
              if (v117) {
                operator delete(v117);
              }
            }
            else
            {
              *(_DWORD *)unsigned int v115 = 0;
              unint64_t v116 = v115 + 4;
            }
            *(void *)(a1 + 112) = v116;
            unint64_t v125 = *((void *)this + 1);
            if (v125 > 0xFFFFFFFFFFFFFFFBLL || v125 + 4 > *((void *)this + 2)) {
              goto LABEL_208;
            }
            *(v116 - 1) = *(_DWORD *)(*(void *)this + v125);
            unint64_t v113 = *((void *)this + 2);
            unint64_t v112 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v112;
          }
          goto LABEL_209;
        case 0xFu:
          if (v24 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v126 = *((void *)this + 1);
            unint64_t v127 = *((void *)this + 2);
            while (v126 < v127 && !*((unsigned char *)this + 24))
            {
              char v129 = *(char **)(a1 + 136);
              unint64_t v128 = *(void *)(a1 + 144);
              if ((unint64_t)v129 >= v128)
              {
                uint64_t v131 = (char *)*v223;
                uint64_t v132 = (v129 - (unsigned char *)*v223) >> 2;
                unint64_t v133 = v132 + 1;
                if ((unint64_t)(v132 + 1) >> 62) {
                  goto LABEL_365;
                }
                uint64_t v134 = v128 - (void)v131;
                if (v134 >> 1 > v133) {
                  unint64_t v133 = v134 >> 1;
                }
                if ((unint64_t)v134 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v135 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v135 = v133;
                }
                if (v135)
                {
                  unsigned int v136 = (char *)sub_227B8BBB8(v221, v135);
                  uint64_t v131 = *(char **)(a1 + 128);
                  char v129 = *(char **)(a1 + 136);
                }
                else
                {
                  unsigned int v136 = 0;
                }
                uint64_t v137 = &v136[4 * v132];
                *(_DWORD *)uint64_t v137 = 0;
                int v130 = v137 + 4;
                while (v129 != v131)
                {
                  int v138 = *((_DWORD *)v129 - 1);
                  v129 -= 4;
                  *((_DWORD *)v137 - 1) = v138;
                  v137 -= 4;
                }
                *(void *)(a1 + 128) = v137;
                *(void *)(a1 + 136) = v130;
                *(void *)(a1 + 144) = &v136[4 * v135];
                if (v131) {
                  operator delete(v131);
                }
              }
              else
              {
                *(_DWORD *)char v129 = 0;
                int v130 = v129 + 4;
              }
              *(void *)(a1 + 136) = v130;
              unint64_t v139 = *((void *)this + 1);
              if (v139 > 0xFFFFFFFFFFFFFFFBLL || v139 + 4 > *((void *)this + 2))
              {
LABEL_208:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v130 - 1) = *(_DWORD *)(*(void *)this + v139);
              unint64_t v127 = *((void *)this + 2);
              unint64_t v126 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v126;
            }
LABEL_209:
            PB::Reader::recallMark();
          }
          else
          {
            unsigned int v164 = *(char **)(a1 + 136);
            unint64_t v163 = *(void *)(a1 + 144);
            if ((unint64_t)v164 >= v163)
            {
              unint64_t v195 = (char *)*v223;
              uint64_t v196 = (v164 - (unsigned char *)*v223) >> 2;
              unint64_t v197 = v196 + 1;
              if ((unint64_t)(v196 + 1) >> 62) {
LABEL_365:
              }
                sub_227B8B89C();
              uint64_t v198 = v163 - (void)v195;
              if (v198 >> 1 > v197) {
                unint64_t v197 = v198 >> 1;
              }
              if ((unint64_t)v198 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v199 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v199 = v197;
              }
              if (v199)
              {
                unint64_t v200 = (char *)sub_227B8BBB8(v221, v199);
                unint64_t v195 = *(char **)(a1 + 128);
                unsigned int v164 = *(char **)(a1 + 136);
              }
              else
              {
                unint64_t v200 = 0;
              }
              uint64_t v211 = &v200[4 * v196];
              *(_DWORD *)uint64_t v211 = 0;
              uint64_t v142 = v211 + 4;
              while (v164 != v195)
              {
                int v212 = *((_DWORD *)v164 - 1);
                v164 -= 4;
                *((_DWORD *)v211 - 1) = v212;
                v211 -= 4;
              }
              *(void *)(a1 + 128) = v211;
              *(void *)(a1 + 136) = v142;
              *(void *)(a1 + 144) = &v200[4 * v199];
              if (v195) {
                operator delete(v195);
              }
            }
            else
            {
              *(_DWORD *)unsigned int v164 = 0;
              uint64_t v142 = v164 + 4;
            }
            *(void *)(a1 + 136) = v142;
LABEL_345:
            unint64_t v213 = *((void *)this + 1);
            if (v213 <= 0xFFFFFFFFFFFFFFFBLL && v213 + 4 <= *((void *)this + 2))
            {
              *(v142 - 1) = *(_DWORD *)(*(void *)this + v213);
LABEL_349:
              uint64_t v26 = *((void *)this + 1) + 4;
LABEL_350:
              *((void *)this + 1) = v26;
            }
            else
            {
LABEL_347:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_351:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_351;
      }
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v15 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v21 = v2 + 1;
      char v22 = *(unsigned char *)(v12 + v2);
      *((void *)this + 1) = v21;
      v15 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0) {
        goto LABEL_21;
      }
      v19 += 7;
      unint64_t v2 = v21;
      if (v20++ >= 9)
      {
LABEL_20:
        unint64_t v15 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227BA19F8(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  if (*(_WORD *)(result + 192)) {
    double result = PB::Writer::write(this, *(double *)(result + 152));
  }
  int v4 = *(float **)(v3 + 8);
  uint64_t v5 = *(float **)(v3 + 16);
  while (v4 != v5)
  {
    float v6 = *v4++;
    double result = PB::Writer::write(this, v6);
  }
  float v7 = *(float **)(v3 + 32);
  char v8 = *(float **)(v3 + 40);
  while (v7 != v8)
  {
    float v9 = *v7++;
    double result = PB::Writer::write(this, v9);
  }
  float v10 = *(float **)(v3 + 80);
  int v11 = *(float **)(v3 + 88);
  while (v10 != v11)
  {
    float v12 = *v10++;
    double result = PB::Writer::write(this, v12);
  }
  char v13 = *(float **)(v3 + 56);
  unsigned int v14 = *(float **)(v3 + 64);
  while (v13 != v14)
  {
    float v15 = *v13++;
    double result = PB::Writer::write(this, v15);
  }
  __int16 v16 = *(_WORD *)(v3 + 192);
  if ((v16 & 0x80) != 0)
  {
    double result = PB::Writer::write(this, *(float *)(v3 + 184));
    __int16 v16 = *(_WORD *)(v3 + 192);
    if ((v16 & 0x40) == 0)
    {
LABEL_17:
      if ((v16 & 0x100) == 0) {
        goto LABEL_18;
      }
      goto LABEL_33;
    }
  }
  else if ((v16 & 0x40) == 0)
  {
    goto LABEL_17;
  }
  double result = PB::Writer::writeVarInt(this);
  __int16 v16 = *(_WORD *)(v3 + 192);
  if ((v16 & 0x100) == 0)
  {
LABEL_18:
    if ((v16 & 4) == 0) {
      goto LABEL_19;
    }
    goto LABEL_34;
  }
LABEL_33:
  double result = PB::Writer::writeVarInt(this);
  __int16 v16 = *(_WORD *)(v3 + 192);
  if ((v16 & 4) == 0)
  {
LABEL_19:
    if ((v16 & 8) == 0) {
      goto LABEL_20;
    }
    goto LABEL_35;
  }
LABEL_34:
  double result = PB::Writer::write(this, *(float *)(v3 + 164));
  __int16 v16 = *(_WORD *)(v3 + 192);
  if ((v16 & 8) == 0)
  {
LABEL_20:
    if ((v16 & 0x20) == 0) {
      goto LABEL_21;
    }
    goto LABEL_36;
  }
LABEL_35:
  double result = PB::Writer::write(this, *(float *)(v3 + 168));
  __int16 v16 = *(_WORD *)(v3 + 192);
  if ((v16 & 0x20) == 0)
  {
LABEL_21:
    if ((v16 & 0x10) == 0) {
      goto LABEL_22;
    }
LABEL_37:
    double result = PB::Writer::write(this, *(float *)(v3 + 172));
    if ((*(_WORD *)(v3 + 192) & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_23;
  }
LABEL_36:
  double result = PB::Writer::writeVarInt(this);
  __int16 v16 = *(_WORD *)(v3 + 192);
  if ((v16 & 0x10) != 0) {
    goto LABEL_37;
  }
LABEL_22:
  if ((v16 & 2) != 0) {
LABEL_23:
  }
    double result = PB::Writer::write(this, *(float *)(v3 + 160));
LABEL_24:
  char v17 = *(float **)(v3 + 104);
  BOOL v18 = *(float **)(v3 + 112);
  while (v17 != v18)
  {
    float v19 = *v17++;
    double result = PB::Writer::write(this, v19);
  }
  unint64_t v21 = *(float **)(v3 + 128);
  unsigned int v20 = *(float **)(v3 + 136);
  while (v21 != v20)
  {
    float v22 = *v21++;
    double result = PB::Writer::write(this, v22);
  }
  return result;
}

uint64_t sub_227BA1BDC(uint64_t result)
{
  *(void *)double result = &unk_26DC227D8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void sub_227BA1C08(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227BA1C40(uint64_t result, uint64_t a2)
{
  *(void *)double result = &unk_26DC227D8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  char v2 = *(unsigned char *)(a2 + 24);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 24) = 1;
    *(void *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 24);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 24) & 4) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 20);
    v3 |= 4u;
    *(unsigned char *)(result + 24) = v3;
    *(_DWORD *)(result + 20) = v5;
    char v2 = *(unsigned char *)(a2 + 24);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(result + 24) = v3 | 2;
    *(_DWORD *)(result + 16) = v6;
  }
  return result;
}

uint64_t sub_227BA1CC4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 24);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "eventTag");
    char v5 = *(unsigned char *)(a1 + 24);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((*(unsigned char *)(a1 + 24) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "location");
  if (*(unsigned char *)(a1 + 24)) {
LABEL_4:
  }
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
LABEL_5:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BA1D68(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 3)
      {
        *(unsigned char *)(a1 + 24) |= 2u;
        unint64_t v21 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v22 = *(void *)this;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
        {
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v25 = 0;
          if (v2 <= v21) {
            unint64_t v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v21)
            {
              LODWORD(v25) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_62;
            }
            unint64_t v36 = v21++;
            char v37 = *(unsigned char *)(v22 + v36);
            *((void *)this + 1) = v21;
            v25 |= (unint64_t)(v37 & 0x7F) << v34;
            if ((v37 & 0x80) == 0) {
              break;
            }
            v34 += 7;
            BOOL v14 = v35++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              goto LABEL_61;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v25) = 0;
          }
LABEL_61:
          unint64_t v2 = v36 + 1;
        }
        else
        {
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          while (1)
          {
            unint64_t v2 = v21 + 1;
            *((void *)this + 1) = v21 + 1;
            char v26 = *(unsigned char *)(v22 + v21);
            v25 |= (unint64_t)(v26 & 0x7F) << v23;
            if ((v26 & 0x80) == 0) {
              break;
            }
            v23 += 7;
            unint64_t v21 = v2;
            BOOL v14 = v24++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              break;
            }
          }
        }
LABEL_62:
        *(_DWORD *)(a1 + 16) = v25;
      }
      else if (v20 == 2)
      {
        *(unsigned char *)(a1 + 24) |= 4u;
        unint64_t v27 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v28 = *(void *)this;
        if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
        {
          char v38 = 0;
          unsigned int v39 = 0;
          uint64_t v31 = 0;
          if (v2 <= v27) {
            unint64_t v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v27)
            {
              LODWORD(v31) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_67;
            }
            unint64_t v40 = v27++;
            char v41 = *(unsigned char *)(v28 + v40);
            *((void *)this + 1) = v27;
            v31 |= (unint64_t)(v41 & 0x7F) << v38;
            if ((v41 & 0x80) == 0) {
              break;
            }
            v38 += 7;
            BOOL v14 = v39++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              goto LABEL_66;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v31) = 0;
          }
LABEL_66:
          unint64_t v2 = v40 + 1;
        }
        else
        {
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v31 = 0;
          while (1)
          {
            unint64_t v2 = v27 + 1;
            *((void *)this + 1) = v27 + 1;
            char v32 = *(unsigned char *)(v28 + v27);
            v31 |= (unint64_t)(v32 & 0x7F) << v29;
            if ((v32 & 0x80) == 0) {
              break;
            }
            v29 += 7;
            unint64_t v27 = v2;
            BOOL v14 = v30++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              break;
            }
          }
        }
LABEL_67:
        *(_DWORD *)(a1 + 20) = v31;
      }
      else if (v20 == 1)
      {
        *(unsigned char *)(a1 + 24) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227BA20EC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 24);
  if ((v4 & 1) == 0)
  {
    if ((*(unsigned char *)(result + 24) & 4) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(unsigned char *)(v3 + 24) & 2) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
  char v4 = *(unsigned char *)(v3 + 24);
  if ((v4 & 4) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_7:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227BA2178(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC22810;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void sub_227BA21A0(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227BA21D8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC22810;
  *(_DWORD *)(a1 + 40) = 0;
  char v2 = *(unsigned char *)(a2 + 40);
  if ((v2 & 8) != 0)
  {
    double result = *(double *)(a2 + 32);
    char v3 = 8;
    *(unsigned char *)(a1 + 40) = 8;
    *(double *)(a1 + 32) = result;
    char v2 = *(unsigned char *)(a2 + 40);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 40) & 4) != 0)
  {
LABEL_5:
    double result = *(double *)(a2 + 24);
    v3 |= 4u;
    *(unsigned char *)(a1 + 40) = v3;
    *(double *)(a1 + 24) = result;
    char v2 = *(unsigned char *)(a2 + 40);
  }
LABEL_6:
  if ((v2 & 2) == 0)
  {
    if ((v2 & 1) == 0) {
      return result;
    }
LABEL_10:
    double result = *(double *)(a2 + 8);
    *(unsigned char *)(a1 + 40) = v3 | 1;
    *(double *)(a1 + 8) = result;
    return result;
  }
  double result = *(double *)(a2 + 16);
  v3 |= 2u;
  *(unsigned char *)(a1 + 40) = v3;
  *(double *)(a1 + 16) = result;
  if (*(unsigned char *)(a2 + 40)) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_227BA2274(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 40);
  if (v5)
  {
    PB::TextFormatter::format(this, "machAbsTimestamp", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 40);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 40) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "pressure", *(double *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "relativeAltitude", *(double *)(a1 + 24));
  if ((*(unsigned char *)(a1 + 40) & 8) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 32));
LABEL_6:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BA2338(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 40) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
          goto LABEL_37;
        case 2u:
          *(unsigned char *)(a1 + 40) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
          goto LABEL_37;
        case 3u:
          *(unsigned char *)(a1 + 40) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
          goto LABEL_37;
        case 4u:
          *(unsigned char *)(a1 + 40) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
LABEL_37:
            unint64_t v2 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_35:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227BA25B0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 40);
  if ((v4 & 8) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 32));
    char v4 = *(unsigned char *)(v3 + 40);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
      if ((*(unsigned char *)(v3 + 40) & 1) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 40) & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24));
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 1) == 0) {
    return result;
  }
LABEL_9:
  double v5 = *(double *)(v3 + 8);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227BA2658(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC22848;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

void sub_227BA2680(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227BA26B8(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC22848;
  *(_DWORD *)(result + 64) = 0;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x10) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 32);
    __int16 v3 = 16;
    *(_WORD *)(result + 64) = 16;
    *(_DWORD *)(result + 32) = v4;
    __int16 v2 = *(_WORD *)(a2 + 64);
    if ((v2 & 0x400) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((*(_WORD *)(a2 + 64) & 0x400) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 56);
    v3 |= 0x400u;
    *(_WORD *)(result + 64) = v3;
    *(_DWORD *)(result + 56) = v5;
    __int16 v2 = *(_WORD *)(a2 + 64);
  }
LABEL_6:
  if ((v2 & 8) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 28);
    v3 |= 8u;
    *(_WORD *)(result + 64) = v3;
    *(_DWORD *)(result + 28) = v6;
    __int16 v2 = *(_WORD *)(a2 + 64);
    if ((v2 & 4) == 0)
    {
LABEL_8:
      if ((v2 & 0x80) == 0) {
        goto LABEL_9;
      }
      goto LABEL_19;
    }
  }
  else if ((v2 & 4) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 24);
  v3 |= 4u;
  *(_WORD *)(result + 64) = v3;
  *(_DWORD *)(result + 24) = v7;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x80) == 0)
  {
LABEL_9:
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_19:
  int v8 = *(_DWORD *)(a2 + 44);
  v3 |= 0x80u;
  *(_WORD *)(result + 64) = v3;
  *(_DWORD *)(result + 44) = v8;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 2) == 0)
  {
LABEL_10:
    if ((v2 & 1) == 0) {
      goto LABEL_11;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t v9 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(result + 64) = v3;
  *(void *)(result + 16) = v9;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 1) == 0)
  {
LABEL_11:
    if ((v2 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t v10 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(result + 64) = v3;
  *(void *)(result + 8) = v10;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x100) == 0)
  {
LABEL_12:
    if ((v2 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v11 = *(_DWORD *)(a2 + 48);
  v3 |= 0x100u;
  *(_WORD *)(result + 64) = v3;
  *(_DWORD *)(result + 48) = v11;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x200) == 0)
  {
LABEL_13:
    if ((v2 & 0x40) == 0) {
      goto LABEL_14;
    }
    goto LABEL_24;
  }
LABEL_23:
  int v12 = *(_DWORD *)(a2 + 52);
  v3 |= 0x200u;
  *(_WORD *)(result + 64) = v3;
  *(_DWORD *)(result + 52) = v12;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x40) == 0)
  {
LABEL_14:
    if ((v2 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v13 = *(_DWORD *)(a2 + 40);
  v3 |= 0x40u;
  *(_WORD *)(result + 64) = v3;
  *(_DWORD *)(result + 40) = v13;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x20) == 0)
  {
LABEL_15:
    if ((v2 & 0x800) == 0) {
      return result;
    }
LABEL_26:
    char v15 = *(unsigned char *)(a2 + 60);
    *(_WORD *)(result + 64) = v3 | 0x800;
    *(unsigned char *)(result + 60) = v15;
    return result;
  }
LABEL_25:
  int v14 = *(_DWORD *)(a2 + 36);
  v3 |= 0x20u;
  *(_WORD *)(result + 64) = v3;
  *(_DWORD *)(result + 36) = v14;
  if ((*(_WORD *)(a2 + 64) & 0x800) != 0) {
    goto LABEL_26;
  }
  return result;
}

uint64_t sub_227BA2834(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "accelBiasZ", *(float *)(a1 + 24));
    __int16 v5 = *(_WORD *)(a1 + 64);
    if ((v5 & 8) == 0)
    {
LABEL_3:
      if ((v5 & 0x800) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v5 & 8) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "accelZ", *(float *)(a1 + 28));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x800) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "compensate");
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "height", *(float *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x20) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "inertialCompOffset", *(float *)(a1 + 36));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "inertialCompPressure", *(float *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x80) == 0)
  {
LABEL_8:
    if ((v5 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "kfPressure", *(float *)(a1 + 44));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x100) == 0)
  {
LABEL_9:
    if ((v5 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "rawPressure", *(float *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x200) == 0)
  {
LABEL_10:
    if ((v5 & 1) == 0) {
      goto LABEL_11;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "rawPressureTemperature", *(float *)(a1 + 52));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 1) == 0)
  {
LABEL_11:
    if ((v5 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "rawPressureTimestamp");
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 2) == 0)
  {
LABEL_12:
    if ((v5 & 0x400) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_27:
  PB::TextFormatter::format(this, "timestamp");
  if ((*(_WORD *)(a1 + 64) & 0x400) != 0) {
LABEL_13:
  }
    PB::TextFormatter::format(this, "verticalSpeed", *(float *)(a1 + 56));
LABEL_14:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BA29F8(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 64) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_84;
            case 2u:
              *(_WORD *)(a1 + 64) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_84;
            case 3u:
              *(_WORD *)(a1 + 64) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_84;
            case 4u:
              *(_WORD *)(a1 + 64) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_84;
            case 5u:
              *(_WORD *)(a1 + 64) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_84;
            case 6u:
              *(_WORD *)(a1 + 64) |= 2u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v35 = 0;
                unsigned int v36 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    uint64_t v25 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_89;
                  }
                  unint64_t v37 = v21++;
                  char v38 = *(unsigned char *)(v22 + v37);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v38 & 0x7F) << v35;
                  if ((v38 & 0x80) == 0) {
                    break;
                  }
                  v35 += 7;
                  BOOL v14 = v36++ > 8;
                  if (v14)
                  {
                    uint64_t v25 = 0;
LABEL_88:
                    unint64_t v2 = v37 + 1;
                    goto LABEL_89;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v25 = 0;
                }
                goto LABEL_88;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_89;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              uint64_t v25 = 0;
LABEL_89:
              *(void *)(a1 + 16) = v25;
              goto LABEL_95;
            case 7u:
              *(_WORD *)(a1 + 64) |= 1u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v39 = 0;
                unsigned int v40 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    uint64_t v31 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_94;
                  }
                  unint64_t v41 = v27++;
                  char v42 = *(unsigned char *)(v28 + v41);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v42 & 0x7F) << v39;
                  if ((v42 & 0x80) == 0) {
                    break;
                  }
                  v39 += 7;
                  BOOL v14 = v40++ > 8;
                  if (v14)
                  {
                    uint64_t v31 = 0;
LABEL_93:
                    unint64_t v2 = v41 + 1;
                    goto LABEL_94;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v31 = 0;
                }
                goto LABEL_93;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_94;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              uint64_t v31 = 0;
LABEL_94:
              *(void *)(a1 + 8) = v31;
LABEL_95:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 8u:
              *(_WORD *)(a1 + 64) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_84;
            case 9u:
              *(_WORD *)(a1 + 64) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_84;
            case 0xAu:
              *(_WORD *)(a1 + 64) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_84;
            case 0xBu:
              *(_WORD *)(a1 + 64) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
LABEL_84:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_64:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_95;
            case 0xCu:
              *(_WORD *)(a1 + 64) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v34 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v33 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v34 = v33 != 0;
              }
              *(unsigned char *)(a1 + 60) = v34;
              goto LABEL_95;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_95;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227BA2FC4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 64);
  if ((v4 & 0x10) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(result + 32));
    __int16 v4 = *(_WORD *)(v3 + 64);
    if ((v4 & 0x400) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((*(_WORD *)(result + 64) & 0x400) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 8) == 0)
  {
LABEL_4:
    if ((v4 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 0x80) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x80) == 0)
  {
LABEL_6:
    if ((v4 & 2) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 2) == 0)
  {
LABEL_7:
    if ((v4 & 1) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 1) == 0)
  {
LABEL_8:
    if ((v4 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x100) == 0)
  {
LABEL_9:
    if ((v4 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x200) == 0)
  {
LABEL_10:
    if ((v4 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x40) == 0)
  {
LABEL_11:
    if ((v4 & 0x20) == 0) {
      goto LABEL_12;
    }
LABEL_24:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36));
    if ((*(_WORD *)(v3 + 64) & 0x800) == 0) {
      return result;
    }
    goto LABEL_25;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x20) != 0) {
    goto LABEL_24;
  }
LABEL_12:
  if ((v4 & 0x800) == 0) {
    return result;
  }
LABEL_25:

  return PB::Writer::write(this);
}

uint64_t sub_227BA314C(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC22880;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void sub_227BA3170(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC22880;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227BA31F0(PB::Base *a1)
{
  sub_227BA3170(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227BA3228(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC22880;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 24) = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  if (*(unsigned char *)(a2 + 24))
  {
    uint64_t v2 = *(void *)(a2 + 16);
    *(unsigned char *)(result + 24) |= 1u;
    *(void *)(result + 16) = v2;
  }
  return result;
}

uint64_t sub_227BA32F4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "correction");
  }
  if (*(unsigned char *)(a1 + 24)) {
    PB::TextFormatter::format(this, "lastConvergenceTimestamp", *(double *)(a1 + 16));
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BA338C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 24) |= 1u;
        unint64_t v20 = *((void *)this + 1);
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v20);
          *((void *)this + 1) += 8;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        if ((v11 >> 3) == 1) {
          operator new();
        }
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

double sub_227BA3624(uint64_t a1)
{
  *(void *)a1 = &unk_26DC234C0;
  *(_DWORD *)(a1 + 160) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  return result;
}

uint64_t sub_227BA3670(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(const PB::Base **)(result + 8);
  if (v4) {
    double result = PB::Writer::writeSubmessage(this, v4);
  }
  if (*(unsigned char *)(v3 + 24))
  {
    double v5 = *(double *)(v3 + 16);
    return PB::Writer::write(this, v5);
  }
  return result;
}

uint64_t sub_227BA36D8(uint64_t result)
{
  *(void *)double result = &unk_26DC228B8;
  *(_DWORD *)(result + 44) = 0;
  return result;
}

void sub_227BA3700(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227BA3738(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC228B8;
  *(_DWORD *)(a1 + 44) = 0;
  char v2 = *(unsigned char *)(a2 + 44);
  if ((v2 & 8) != 0)
  {
    double result = *(double *)(a2 + 32);
    char v3 = 8;
    *(unsigned char *)(a1 + 44) = 8;
    *(double *)(a1 + 32) = result;
    char v2 = *(unsigned char *)(a2 + 44);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 44) & 4) != 0)
  {
LABEL_5:
    double result = *(double *)(a2 + 24);
    v3 |= 4u;
    *(unsigned char *)(a1 + 44) = v3;
    *(double *)(a1 + 24) = result;
    char v2 = *(unsigned char *)(a2 + 44);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    double result = *(double *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(a1 + 44) = v3;
    *(double *)(a1 + 16) = result;
    char v2 = *(unsigned char *)(a2 + 44);
    if ((v2 & 0x10) == 0)
    {
LABEL_8:
      if ((v2 & 1) == 0) {
        return result;
      }
LABEL_12:
      double result = *(double *)(a2 + 8);
      *(unsigned char *)(a1 + 44) = v3 | 1;
      *(double *)(a1 + 8) = result;
      return result;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_8;
  }
  char v5 = *(unsigned char *)(a2 + 40);
  v3 |= 0x10u;
  *(unsigned char *)(a1 + 44) = v3;
  *(unsigned char *)(a1 + 40) = v5;
  if (*(unsigned char *)(a2 + 44)) {
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_227BA37F0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 44);
  if (v5)
  {
    PB::TextFormatter::format(this, "dThetaNorm", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 44);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 44) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "lastCorrespondenceTimestamp", *(double *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(this, "lastUpdateTimestamp", *(double *)(a1 + 24));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(this, "state");
  if ((*(unsigned char *)(a1 + 44) & 8) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 32));
LABEL_7:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BA38D4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 44) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_37;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
          goto LABEL_41;
        case 2u:
          *(unsigned char *)(a1 + 44) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_37;
          }
          *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
          goto LABEL_41;
        case 3u:
          *(unsigned char *)(a1 + 44) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_37;
          }
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
          goto LABEL_41;
        case 4u:
          *(unsigned char *)(a1 + 44) |= 0x10u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 >= *((void *)this + 2))
          {
            BOOL v22 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            int v21 = *(unsigned __int8 *)(*(void *)this + v2++);
            *((void *)this + 1) = v2;
            BOOL v22 = v21 != 0;
          }
          *(unsigned char *)(a1 + 40) = v22;
          break;
        case 5u:
          *(unsigned char *)(a1 + 44) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
LABEL_41:
            unint64_t v2 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_37:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227BA3B94(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 44);
  if ((v4 & 8) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 32));
    char v4 = *(unsigned char *)(v3 + 44);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 44) & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24));
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 2) == 0)
  {
LABEL_4:
    if ((v4 & 0x10) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = PB::Writer::write(this);
    if ((*(unsigned char *)(v3 + 44) & 1) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 0x10) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 1) == 0) {
    return result;
  }
LABEL_11:
  double v5 = *(double *)(v3 + 8);

  return PB::Writer::write(this, v5);
}

void *sub_227BA3C58(void *result)
{
  *uint64_t result = &unk_26DC228F0;
  result[1] = 0;
  return result;
}

void sub_227BA3C78(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC228F0;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227BA3CF8(PB::Base *a1)
{
  sub_227BA3C78(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227BA3D30(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC228F0;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227BA3DD8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BA3E54(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227BA4084(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

double sub_227BA40A0(uint64_t a1)
{
  *(void *)a1 = &unk_26DC22928;
  *(void *)(a1 + 72) = 0;
  *(_DWORD *)(a1 + 108) = 0;
  *(_DWORD *)(a1 + 116) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return result;
}

void sub_227BA40DC(PB::Base *this)
{
  *(void *)this = &unk_26DC22928;
  uint64_t v2 = *((void *)this + 9);
  *((void *)this + 9) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  unint64_t v3 = (void *)*((void *)this + 4);
  if (v3)
  {
    *((void *)this + 5) = v3;
    operator delete(v3);
  }
  int v4 = (void *)*((void *)this + 1);
  if (v4)
  {
    *((void *)this + 2) = v4;
    operator delete(v4);
  }

  PB::Base::~Base(this);
}

void sub_227BA4180(PB::Base *a1)
{
  sub_227BA40DC(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227BA41B8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC22928;
  *(_OWORD *)(a1 + 8) = 0u;
  *(void *)(a1 + 72) = 0;
  *(_DWORD *)(a1 + 108) = 0;
  *(_DWORD *)(a1 + 116) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  if (*(void *)(a2 + 72)) {
    operator new();
  }
  if (a1 != a2) {
    sub_227B8BA68((char *)(a1 + 8), *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  __int16 v4 = *(_WORD *)(a2 + 116);
  if ((v4 & 0x40) != 0)
  {
    int v10 = *(_DWORD *)(a2 + 96);
    *(_WORD *)(a1 + 116) |= 0x40u;
    *(_DWORD *)(a1 + 96) = v10;
    __int16 v4 = *(_WORD *)(a2 + 116);
    if ((v4 & 0x20) == 0)
    {
LABEL_7:
      if ((v4 & 0x10) == 0) {
        goto LABEL_8;
      }
      goto LABEL_24;
    }
  }
  else if ((v4 & 0x20) == 0)
  {
    goto LABEL_7;
  }
  int v11 = *(_DWORD *)(a2 + 92);
  *(_WORD *)(a1 + 116) |= 0x20u;
  *(_DWORD *)(a1 + 92) = v11;
  __int16 v4 = *(_WORD *)(a2 + 116);
  if ((v4 & 0x10) == 0)
  {
LABEL_8:
    if ((v4 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v12 = *(_DWORD *)(a2 + 88);
  *(_WORD *)(a1 + 116) |= 0x10u;
  *(_DWORD *)(a1 + 88) = v12;
  __int16 v4 = *(_WORD *)(a2 + 116);
  if ((v4 & 0x100) == 0)
  {
LABEL_9:
    if ((v4 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_25:
  int v13 = *(_DWORD *)(a2 + 104);
  *(_WORD *)(a1 + 116) |= 0x100u;
  *(_DWORD *)(a1 + 104) = v13;
  __int16 v4 = *(_WORD *)(a2 + 116);
  if ((v4 & 2) == 0)
  {
LABEL_10:
    if ((v4 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v14 = *(void *)(a2 + 64);
  *(_WORD *)(a1 + 116) |= 2u;
  *(void *)(a1 + 64) = v14;
  __int16 v4 = *(_WORD *)(a2 + 116);
  if ((v4 & 0x200) == 0)
  {
LABEL_11:
    if ((v4 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_27:
  int v15 = *(_DWORD *)(a2 + 108);
  *(_WORD *)(a1 + 116) |= 0x200u;
  *(_DWORD *)(a1 + 108) = v15;
  __int16 v4 = *(_WORD *)(a2 + 116);
  if ((v4 & 1) == 0)
  {
LABEL_12:
    if ((v4 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t v16 = *(void *)(a2 + 56);
  *(_WORD *)(a1 + 116) |= 1u;
  *(void *)(a1 + 56) = v16;
  __int16 v4 = *(_WORD *)(a2 + 116);
  if ((v4 & 8) == 0)
  {
LABEL_13:
    if ((v4 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_29:
  int v17 = *(_DWORD *)(a2 + 84);
  *(_WORD *)(a1 + 116) |= 8u;
  *(_DWORD *)(a1 + 84) = v17;
  if ((*(_WORD *)(a2 + 116) & 0x80) != 0)
  {
LABEL_14:
    int v5 = *(_DWORD *)(a2 + 100);
    *(_WORD *)(a1 + 116) |= 0x80u;
    *(_DWORD *)(a1 + 100) = v5;
  }
LABEL_15:
  if (a1 != a2) {
    sub_227B8BA68((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
  }
  __int16 v6 = *(_WORD *)(a2 + 116);
  if ((v6 & 4) != 0)
  {
    int v7 = *(_DWORD *)(a2 + 80);
    *(_WORD *)(a1 + 116) |= 4u;
    *(_DWORD *)(a1 + 80) = v7;
    __int16 v6 = *(_WORD *)(a2 + 116);
  }
  if ((v6 & 0x400) != 0)
  {
    char v8 = *(unsigned char *)(a2 + 112);
    *(_WORD *)(a1 + 116) |= 0x400u;
    *(unsigned char *)(a1 + 112) = v8;
  }
  return a1;
}

uint64_t sub_227BA441C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 116);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "activity");
    __int16 v5 = *(_WORD *)(a1 + 116);
    if ((v5 & 8) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v5 & 8) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "arrivalTimestamp", *(float *)(a1 + 84));
  if (*(_WORD *)(a1 + 116)) {
LABEL_4:
  }
    PB::TextFormatter::format(this, "btcTimestamp");
LABEL_5:
  __int16 v6 = *(float **)(a1 + 8);
  int v7 = *(float **)(a1 + 16);
  while (v6 != v7)
  {
    float v8 = *v6++;
    PB::TextFormatter::format(this, "filteredAcceleration", v8);
  }
  unsigned int v9 = *(float **)(a1 + 32);
  int v10 = *(float **)(a1 + 40);
  while (v9 != v10)
  {
    float v11 = *v9++;
    PB::TextFormatter::format(this, "gyroBias", v11);
  }
  __int16 v12 = *(_WORD *)(a1 + 116);
  if ((v12 & 0x400) != 0)
  {
    PB::TextFormatter::format(this, "isInEar");
    __int16 v12 = *(_WORD *)(a1 + 116);
    if ((v12 & 0x10) == 0)
    {
LABEL_11:
      if ((v12 & 0x20) == 0) {
        goto LABEL_12;
      }
      goto LABEL_29;
    }
  }
  else if ((v12 & 0x10) == 0)
  {
    goto LABEL_11;
  }
  PB::TextFormatter::format(this, "location");
  __int16 v12 = *(_WORD *)(a1 + 116);
  if ((v12 & 0x20) == 0)
  {
LABEL_12:
    if ((v12 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(this, "quiescentMode");
  __int16 v12 = *(_WORD *)(a1 + 116);
  if ((v12 & 0x40) == 0)
  {
LABEL_13:
    if ((v12 & 0x80) == 0) {
      goto LABEL_14;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "quiescentNoise", *(float *)(a1 + 96));
  __int16 v12 = *(_WORD *)(a1 + 116);
  if ((v12 & 0x80) == 0)
  {
LABEL_14:
    if ((v12 & 2) == 0) {
      goto LABEL_15;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(this, "sampleLatency", *(float *)(a1 + 100));
  __int16 v12 = *(_WORD *)(a1 + 116);
  if ((v12 & 2) == 0)
  {
LABEL_15:
    if ((v12 & 0x100) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_32:
  PB::TextFormatter::format(this, "sensorTimeUponReceival", *(double *)(a1 + 64));
  if ((*(_WORD *)(a1 + 116) & 0x100) != 0) {
LABEL_16:
  }
    PB::TextFormatter::format(this, "sequenceNumber");
LABEL_17:
  uint64_t v13 = *(void *)(a1 + 72);
  if (v13) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v13 + 32))(v13, this, "super");
  }
  if ((*(_WORD *)(a1 + 116) & 0x200) != 0) {
    PB::TextFormatter::format(this, "timeSyncStatus");
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227BA465C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    float v8 = (void **)(a1 + 32);
    uint64_t v9 = a1 + 48;
    int v10 = (void **)(a1 + 8);
    uint64_t v11 = a1 + 24;
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        BOOL v18 = v14++ > 8;
        if (v18) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v24 = v15 & 7;
      if (v24 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v15 >> 3))
      {
        case 1u:
          operator new();
        case 2u:
          if (v24 != 2)
          {
            unint64_t v111 = *(char **)(a1 + 16);
            unint64_t v110 = *(void *)(a1 + 24);
            if ((unint64_t)v111 >= v110)
            {
              unint64_t v139 = (char *)*v10;
              uint64_t v140 = (v111 - (unsigned char *)*v10) >> 2;
              unint64_t v141 = v140 + 1;
              if ((unint64_t)(v140 + 1) >> 62) {
LABEL_251:
              }
                sub_227B8B89C();
              uint64_t v142 = v110 - (void)v139;
              if (v142 >> 1 > v141) {
                unint64_t v141 = v142 >> 1;
              }
              if ((unint64_t)v142 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v143 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v143 = v141;
              }
              if (v143)
              {
                char v144 = (char *)sub_227B8BBB8(v11, v143);
                unint64_t v139 = *(char **)(a1 + 8);
                unint64_t v111 = *(char **)(a1 + 16);
              }
              else
              {
                char v144 = 0;
              }
              unint64_t v151 = &v144[4 * v140];
              *(_DWORD *)unint64_t v151 = 0;
              unint64_t v112 = v151 + 4;
              while (v111 != v139)
              {
                int v152 = *((_DWORD *)v111 - 1);
                v111 -= 4;
                *((_DWORD *)v151 - 1) = v152;
                v151 -= 4;
              }
              *(void *)(a1 + 8) = v151;
              *(void *)(a1 + 16) = v112;
              *(void *)(a1 + 24) = &v144[4 * v143];
              if (v139) {
                operator delete(v139);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v111 = 0;
              unint64_t v112 = v111 + 4;
            }
            *(void *)(a1 + 16) = v112;
            goto LABEL_234;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v25 = *((void *)this + 1);
          unint64_t v26 = *((void *)this + 2);
          while (v25 < v26 && !*((unsigned char *)this + 24))
          {
            uint64_t v28 = *(char **)(a1 + 16);
            unint64_t v27 = *(void *)(a1 + 24);
            if ((unint64_t)v28 >= v27)
            {
              unsigned int v30 = (char *)*v10;
              uint64_t v31 = (v28 - (unsigned char *)*v10) >> 2;
              unint64_t v32 = v31 + 1;
              if ((unint64_t)(v31 + 1) >> 62) {
                goto LABEL_251;
              }
              uint64_t v33 = v27 - (void)v30;
              if (v33 >> 1 > v32) {
                unint64_t v32 = v33 >> 1;
              }
              if ((unint64_t)v33 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v34 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v34 = v32;
              }
              if (v34)
              {
                char v35 = (char *)sub_227B8BBB8(v11, v34);
                unsigned int v30 = *(char **)(a1 + 8);
                uint64_t v28 = *(char **)(a1 + 16);
              }
              else
              {
                char v35 = 0;
              }
              unsigned int v36 = &v35[4 * v31];
              *(_DWORD *)unsigned int v36 = 0;
              char v29 = v36 + 4;
              while (v28 != v30)
              {
                int v37 = *((_DWORD *)v28 - 1);
                v28 -= 4;
                *((_DWORD *)v36 - 1) = v37;
                v36 -= 4;
              }
              *(void *)(a1 + 8) = v36;
              *(void *)(a1 + 16) = v29;
              *(void *)(a1 + 24) = &v35[4 * v34];
              if (v30) {
                operator delete(v30);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v28 = 0;
              char v29 = v28 + 4;
            }
            *(void *)(a1 + 16) = v29;
            unint64_t v38 = *((void *)this + 1);
            if (v38 > 0xFFFFFFFFFFFFFFFBLL || v38 + 4 > *((void *)this + 2)) {
              goto LABEL_178;
            }
            *(v29 - 1) = *(_DWORD *)(*(void *)this + v38);
            unint64_t v26 = *((void *)this + 2);
            unint64_t v25 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v25;
          }
          goto LABEL_179;
        case 3u:
          *(_WORD *)(a1 + 116) |= 0x40u;
          unint64_t v39 = *((void *)this + 1);
          if (v39 > 0xFFFFFFFFFFFFFFFBLL || v39 + 4 > *((void *)this + 2)) {
            goto LABEL_236;
          }
          *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v39);
          goto LABEL_238;
        case 4u:
          *(_WORD *)(a1 + 116) |= 0x20u;
          unint64_t v40 = *((void *)this + 1);
          unint64_t v41 = *((void *)this + 2);
          uint64_t v42 = *(void *)this;
          if (v40 <= 0xFFFFFFFFFFFFFFF5 && v40 + 10 <= v41)
          {
            char v43 = 0;
            unsigned int v44 = 0;
            uint64_t v45 = 0;
            do
            {
              unint64_t v46 = v40 + 1;
              *((void *)this + 1) = v40 + 1;
              char v47 = *(unsigned char *)(v42 + v40);
              v45 |= (unint64_t)(v47 & 0x7F) << v43;
              if ((v47 & 0x80) == 0) {
                goto LABEL_204;
              }
              v43 += 7;
              unint64_t v40 = v46;
              BOOL v18 = v44++ > 8;
            }
            while (!v18);
LABEL_138:
            LODWORD(v45) = 0;
            goto LABEL_204;
          }
          char v113 = 0;
          unsigned int v114 = 0;
          uint64_t v45 = 0;
          if (v41 <= v40) {
            unint64_t v41 = *((void *)this + 1);
          }
          while (2)
          {
            if (v41 == v40)
            {
              LODWORD(v45) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v115 = v40 + 1;
              char v116 = *(unsigned char *)(v42 + v40);
              *((void *)this + 1) = v115;
              v45 |= (unint64_t)(v116 & 0x7F) << v113;
              if (v116 < 0)
              {
                v113 += 7;
                unint64_t v40 = v115;
                BOOL v18 = v114++ > 8;
                if (v18) {
                  goto LABEL_138;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v45) = 0;
              }
            }
            break;
          }
LABEL_204:
          *(_DWORD *)(a1 + 92) = v45;
          goto LABEL_240;
        case 5u:
          *(_WORD *)(a1 + 116) |= 0x10u;
          unint64_t v48 = *((void *)this + 1);
          unint64_t v49 = *((void *)this + 2);
          uint64_t v50 = *(void *)this;
          if (v48 <= 0xFFFFFFFFFFFFFFF5 && v48 + 10 <= v49)
          {
            char v51 = 0;
            unsigned int v52 = 0;
            uint64_t v53 = 0;
            do
            {
              unint64_t v54 = v48 + 1;
              *((void *)this + 1) = v48 + 1;
              char v55 = *(unsigned char *)(v50 + v48);
              v53 |= (unint64_t)(v55 & 0x7F) << v51;
              if ((v55 & 0x80) == 0) {
                goto LABEL_207;
              }
              v51 += 7;
              unint64_t v48 = v54;
              BOOL v18 = v52++ > 8;
            }
            while (!v18);
LABEL_145:
            LODWORD(v53) = 0;
            goto LABEL_207;
          }
          char v117 = 0;
          unsigned int v118 = 0;
          uint64_t v53 = 0;
          if (v49 <= v48) {
            unint64_t v49 = *((void *)this + 1);
          }
          while (2)
          {
            if (v49 == v48)
            {
              LODWORD(v53) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v119 = v48 + 1;
              char v120 = *(unsigned char *)(v50 + v48);
              *((void *)this + 1) = v119;
              v53 |= (unint64_t)(v120 & 0x7F) << v117;
              if (v120 < 0)
              {
                v117 += 7;
                unint64_t v48 = v119;
                BOOL v18 = v118++ > 8;
                if (v18) {
                  goto LABEL_145;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v53) = 0;
              }
            }
            break;
          }
LABEL_207:
          *(_DWORD *)(a1 + 88) = v53;
          goto LABEL_240;
        case 6u:
          *(_WORD *)(a1 + 116) |= 0x100u;
          unint64_t v56 = *((void *)this + 1);
          unint64_t v57 = *((void *)this + 2);
          uint64_t v58 = *(void *)this;
          if (v56 <= 0xFFFFFFFFFFFFFFF5 && v56 + 10 <= v57)
          {
            char v59 = 0;
            unsigned int v60 = 0;
            uint64_t v61 = 0;
            do
            {
              unint64_t v62 = v56 + 1;
              *((void *)this + 1) = v56 + 1;
              char v63 = *(unsigned char *)(v58 + v56);
              v61 |= (unint64_t)(v63 & 0x7F) << v59;
              if ((v63 & 0x80) == 0) {
                goto LABEL_210;
              }
              v59 += 7;
              unint64_t v56 = v62;
              BOOL v18 = v60++ > 8;
            }
            while (!v18);
LABEL_152:
            LODWORD(v61) = 0;
            goto LABEL_210;
          }
          char v121 = 0;
          unsigned int v122 = 0;
          uint64_t v61 = 0;
          if (v57 <= v56) {
            unint64_t v57 = *((void *)this + 1);
          }
          while (2)
          {
            if (v57 == v56)
            {
              LODWORD(v61) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v123 = v56 + 1;
              char v124 = *(unsigned char *)(v58 + v56);
              *((void *)this + 1) = v123;
              v61 |= (unint64_t)(v124 & 0x7F) << v121;
              if (v124 < 0)
              {
                v121 += 7;
                unint64_t v56 = v123;
                BOOL v18 = v122++ > 8;
                if (v18) {
                  goto LABEL_152;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v61) = 0;
              }
            }
            break;
          }
LABEL_210:
          *(_DWORD *)(a1 + 104) = v61;
          goto LABEL_240;
        case 7u:
          *(_WORD *)(a1 + 116) |= 2u;
          unint64_t v64 = *((void *)this + 1);
          if (v64 > 0xFFFFFFFFFFFFFFF7 || v64 + 8 > *((void *)this + 2)) {
            goto LABEL_236;
          }
          *(void *)(a1 + 64) = *(void *)(*(void *)this + v64);
          uint64_t v65 = *((void *)this + 1) + 8;
          goto LABEL_239;
        case 8u:
          *(_WORD *)(a1 + 116) |= 0x200u;
          unint64_t v66 = *((void *)this + 1);
          unint64_t v67 = *((void *)this + 2);
          uint64_t v68 = *(void *)this;
          if (v66 <= 0xFFFFFFFFFFFFFFF5 && v66 + 10 <= v67)
          {
            char v69 = 0;
            unsigned int v70 = 0;
            uint64_t v71 = 0;
            do
            {
              unint64_t v72 = v66 + 1;
              *((void *)this + 1) = v66 + 1;
              char v73 = *(unsigned char *)(v68 + v66);
              v71 |= (unint64_t)(v73 & 0x7F) << v69;
              if ((v73 & 0x80) == 0) {
                goto LABEL_213;
              }
              v69 += 7;
              unint64_t v66 = v72;
              BOOL v18 = v70++ > 8;
            }
            while (!v18);
LABEL_159:
            LODWORD(v71) = 0;
            goto LABEL_213;
          }
          char v125 = 0;
          unsigned int v126 = 0;
          uint64_t v71 = 0;
          if (v67 <= v66) {
            unint64_t v67 = *((void *)this + 1);
          }
          while (2)
          {
            if (v67 == v66)
            {
              LODWORD(v71) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v127 = v66 + 1;
              char v128 = *(unsigned char *)(v68 + v66);
              *((void *)this + 1) = v127;
              v71 |= (unint64_t)(v128 & 0x7F) << v125;
              if (v128 < 0)
              {
                v125 += 7;
                unint64_t v66 = v127;
                BOOL v18 = v126++ > 8;
                if (v18) {
                  goto LABEL_159;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v71) = 0;
              }
            }
            break;
          }
LABEL_213:
          *(_DWORD *)(a1 + 108) = v71;
          goto LABEL_240;
        case 9u:
          *(_WORD *)(a1 + 116) |= 1u;
          unint64_t v74 = *((void *)this + 1);
          unint64_t v75 = *((void *)this + 2);
          uint64_t v76 = *(void *)this;
          if (v74 <= 0xFFFFFFFFFFFFFFF5 && v74 + 10 <= v75)
          {
            char v77 = 0;
            unsigned int v78 = 0;
            uint64_t v79 = 0;
            do
            {
              unint64_t v80 = v74 + 1;
              *((void *)this + 1) = v74 + 1;
              char v81 = *(unsigned char *)(v76 + v74);
              v79 |= (unint64_t)(v81 & 0x7F) << v77;
              if ((v81 & 0x80) == 0) {
                goto LABEL_216;
              }
              v77 += 7;
              unint64_t v74 = v80;
              BOOL v18 = v78++ > 8;
            }
            while (!v18);
LABEL_166:
            uint64_t v79 = 0;
            goto LABEL_216;
          }
          char v129 = 0;
          unsigned int v130 = 0;
          uint64_t v79 = 0;
          if (v75 <= v74) {
            unint64_t v75 = *((void *)this + 1);
          }
          while (2)
          {
            if (v75 == v74)
            {
              uint64_t v79 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v131 = v74 + 1;
              char v132 = *(unsigned char *)(v76 + v74);
              *((void *)this + 1) = v131;
              v79 |= (unint64_t)(v132 & 0x7F) << v129;
              if (v132 < 0)
              {
                v129 += 7;
                unint64_t v74 = v131;
                BOOL v18 = v130++ > 8;
                if (v18) {
                  goto LABEL_166;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v79 = 0;
              }
            }
            break;
          }
LABEL_216:
          *(void *)(a1 + 56) = v79;
          goto LABEL_240;
        case 0xAu:
          *(_WORD *)(a1 + 116) |= 8u;
          unint64_t v82 = *((void *)this + 1);
          if (v82 > 0xFFFFFFFFFFFFFFFBLL || v82 + 4 > *((void *)this + 2)) {
            goto LABEL_236;
          }
          *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v82);
          goto LABEL_238;
        case 0xBu:
          *(_WORD *)(a1 + 116) |= 0x80u;
          unint64_t v83 = *((void *)this + 1);
          if (v83 > 0xFFFFFFFFFFFFFFFBLL || v83 + 4 > *((void *)this + 2)) {
            goto LABEL_236;
          }
          *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v83);
          goto LABEL_238;
        case 0xCu:
          if (v24 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v84 = *((void *)this + 1);
            unint64_t v85 = *((void *)this + 2);
            while (v84 < v85 && !*((unsigned char *)this + 24))
            {
              char v87 = *(char **)(a1 + 40);
              unint64_t v86 = *(void *)(a1 + 48);
              if ((unint64_t)v87 >= v86)
              {
                uint64_t v89 = (char *)*v8;
                uint64_t v90 = (v87 - (unsigned char *)*v8) >> 2;
                unint64_t v91 = v90 + 1;
                if ((unint64_t)(v90 + 1) >> 62) {
                  goto LABEL_250;
                }
                uint64_t v92 = v86 - (void)v89;
                if (v92 >> 1 > v91) {
                  unint64_t v91 = v92 >> 1;
                }
                if ((unint64_t)v92 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v93 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v93 = v91;
                }
                if (v93)
                {
                  uint64_t v94 = (char *)sub_227B8BBB8(v9, v93);
                  uint64_t v89 = *(char **)(a1 + 32);
                  char v87 = *(char **)(a1 + 40);
                }
                else
                {
                  uint64_t v94 = 0;
                }
                char v95 = &v94[4 * v90];
                *(_DWORD *)char v95 = 0;
                unsigned int v88 = v95 + 4;
                while (v87 != v89)
                {
                  int v96 = *((_DWORD *)v87 - 1);
                  v87 -= 4;
                  *((_DWORD *)v95 - 1) = v96;
                  v95 -= 4;
                }
                *(void *)(a1 + 32) = v95;
                *(void *)(a1 + 40) = v88;
                *(void *)(a1 + 48) = &v94[4 * v93];
                if (v89) {
                  operator delete(v89);
                }
              }
              else
              {
                *(_DWORD *)char v87 = 0;
                unsigned int v88 = v87 + 4;
              }
              *(void *)(a1 + 40) = v88;
              unint64_t v97 = *((void *)this + 1);
              if (v97 > 0xFFFFFFFFFFFFFFFBLL || v97 + 4 > *((void *)this + 2))
              {
LABEL_178:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v88 - 1) = *(_DWORD *)(*(void *)this + v97);
              unint64_t v85 = *((void *)this + 2);
              unint64_t v84 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v84;
            }
LABEL_179:
            PB::Reader::recallMark();
          }
          else
          {
            uint64_t v134 = *(char **)(a1 + 40);
            unint64_t v133 = *(void *)(a1 + 48);
            if ((unint64_t)v134 >= v133)
            {
              unint64_t v145 = (char *)*v8;
              uint64_t v146 = (v134 - (unsigned char *)*v8) >> 2;
              unint64_t v147 = v146 + 1;
              if ((unint64_t)(v146 + 1) >> 62) {
LABEL_250:
              }
                sub_227B8B89C();
              uint64_t v148 = v133 - (void)v145;
              if (v148 >> 1 > v147) {
                unint64_t v147 = v148 >> 1;
              }
              if ((unint64_t)v148 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v149 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v149 = v147;
              }
              if (v149)
              {
                unsigned int v150 = (char *)sub_227B8BBB8(v9, v149);
                unint64_t v145 = *(char **)(a1 + 32);
                uint64_t v134 = *(char **)(a1 + 40);
              }
              else
              {
                unsigned int v150 = 0;
              }
              char v153 = &v150[4 * v146];
              *(_DWORD *)char v153 = 0;
              unint64_t v112 = v153 + 4;
              while (v134 != v145)
              {
                int v154 = *((_DWORD *)v134 - 1);
                v134 -= 4;
                *((_DWORD *)v153 - 1) = v154;
                v153 -= 4;
              }
              *(void *)(a1 + 32) = v153;
              *(void *)(a1 + 40) = v112;
              *(void *)(a1 + 48) = &v150[4 * v149];
              if (v145) {
                operator delete(v145);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v134 = 0;
              unint64_t v112 = v134 + 4;
            }
            *(void *)(a1 + 40) = v112;
LABEL_234:
            unint64_t v155 = *((void *)this + 1);
            if (v155 <= 0xFFFFFFFFFFFFFFFBLL && v155 + 4 <= *((void *)this + 2))
            {
              *(v112 - 1) = *(_DWORD *)(*(void *)this + v155);
LABEL_238:
              uint64_t v65 = *((void *)this + 1) + 4;
LABEL_239:
              *((void *)this + 1) = v65;
            }
            else
            {
LABEL_236:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_240:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        case 0xDu:
          *(_WORD *)(a1 + 116) |= 4u;
          unint64_t v98 = *((void *)this + 1);
          unint64_t v99 = *((void *)this + 2);
          uint64_t v100 = *(void *)this;
          if (v98 <= 0xFFFFFFFFFFFFFFF5 && v98 + 10 <= v99)
          {
            char v101 = 0;
            unsigned int v102 = 0;
            uint64_t v103 = 0;
            do
            {
              unint64_t v104 = v98 + 1;
              *((void *)this + 1) = v98 + 1;
              char v105 = *(unsigned char *)(v100 + v98);
              v103 |= (unint64_t)(v105 & 0x7F) << v101;
              if ((v105 & 0x80) == 0) {
                goto LABEL_219;
              }
              v101 += 7;
              unint64_t v98 = v104;
              BOOL v18 = v102++ > 8;
            }
            while (!v18);
LABEL_175:
            LODWORD(v103) = 0;
            goto LABEL_219;
          }
          char v135 = 0;
          unsigned int v136 = 0;
          uint64_t v103 = 0;
          if (v99 <= v98) {
            unint64_t v99 = *((void *)this + 1);
          }
          while (2)
          {
            if (v99 == v98)
            {
              LODWORD(v103) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v137 = v98 + 1;
              char v138 = *(unsigned char *)(v100 + v98);
              *((void *)this + 1) = v137;
              v103 |= (unint64_t)(v138 & 0x7F) << v135;
              if (v138 < 0)
              {
                v135 += 7;
                unint64_t v98 = v137;
                BOOL v18 = v136++ > 8;
                if (v18) {
                  goto LABEL_175;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v103) = 0;
              }
            }
            break;
          }
LABEL_219:
          *(_DWORD *)(a1 + 80) = v103;
          goto LABEL_240;
        case 0xEu:
          *(_WORD *)(a1 + 116) |= 0x400u;
          unint64_t v106 = *((void *)this + 1);
          if (v106 >= *((void *)this + 2))
          {
            BOOL v109 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v107 = v106 + 1;
            int v108 = *(unsigned __int8 *)(*(void *)this + v106);
            *((void *)this + 1) = v107;
            BOOL v109 = v108 != 0;
          }
          *(unsigned char *)(a1 + 112) = v109;
          goto LABEL_240;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_240;
      }
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v15 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v21 = v2 + 1;
      char v22 = *(unsigned char *)(v12 + v2);
      *((void *)this + 1) = v21;
      v15 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0) {
        goto LABEL_21;
      }
      v19 += 7;
      unint64_t v2 = v21;
      if (v20++ >= 9)
      {
LABEL_20:
        unint64_t v15 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

double sub_227BA5340(uint64_t a1)
{
  *(void *)a1 = &unk_26DC22960;
  *(_DWORD *)(a1 + 152) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(void *)(a1 + 120) = 0;
  return result;
}

uint64_t sub_227BA5388(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(const PB::Base **)(result + 72);
  if (v4) {
    double result = PB::Writer::writeSubmessage(this, v4);
  }
  __int16 v5 = *(float **)(v3 + 8);
  __int16 v6 = *(float **)(v3 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    double result = PB::Writer::write(this, v7);
  }
  __int16 v8 = *(_WORD *)(v3 + 116);
  if ((v8 & 0x40) != 0)
  {
    double result = PB::Writer::write(this, *(float *)(v3 + 96));
    __int16 v8 = *(_WORD *)(v3 + 116);
    if ((v8 & 0x20) == 0)
    {
LABEL_8:
      if ((v8 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_25;
    }
  }
  else if ((v8 & 0x20) == 0)
  {
    goto LABEL_8;
  }
  double result = PB::Writer::writeVarInt(this);
  __int16 v8 = *(_WORD *)(v3 + 116);
  if ((v8 & 0x10) == 0)
  {
LABEL_9:
    if ((v8 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_25:
  double result = PB::Writer::writeVarInt(this);
  __int16 v8 = *(_WORD *)(v3 + 116);
  if ((v8 & 0x100) == 0)
  {
LABEL_10:
    if ((v8 & 2) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  double result = PB::Writer::writeVarInt(this);
  __int16 v8 = *(_WORD *)(v3 + 116);
  if ((v8 & 2) == 0)
  {
LABEL_11:
    if ((v8 & 0x200) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_27:
  double result = PB::Writer::write(this, *(double *)(v3 + 64));
  __int16 v8 = *(_WORD *)(v3 + 116);
  if ((v8 & 0x200) == 0)
  {
LABEL_12:
    if ((v8 & 1) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_28:
  double result = PB::Writer::writeVarInt(this);
  __int16 v8 = *(_WORD *)(v3 + 116);
  if ((v8 & 1) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_14;
    }
LABEL_30:
    double result = PB::Writer::write(this, *(float *)(v3 + 84));
    if ((*(_WORD *)(v3 + 116) & 0x80) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_29:
  double result = PB::Writer::writeVarInt(this);
  __int16 v8 = *(_WORD *)(v3 + 116);
  if ((v8 & 8) != 0) {
    goto LABEL_30;
  }
LABEL_14:
  if ((v8 & 0x80) != 0) {
LABEL_15:
  }
    double result = PB::Writer::write(this, *(float *)(v3 + 100));
LABEL_16:
  uint64_t v9 = *(float **)(v3 + 32);
  int v10 = *(float **)(v3 + 40);
  while (v9 != v10)
  {
    float v11 = *v9++;
    double result = PB::Writer::write(this, v11);
  }
  __int16 v12 = *(_WORD *)(v3 + 116);
  if ((v12 & 4) != 0)
  {
    double result = PB::Writer::writeVarInt(this);
    __int16 v12 = *(_WORD *)(v3 + 116);
  }
  if ((v12 & 0x400) != 0)
  {
    return PB::Writer::write(this);
  }
  return result;
}

void sub_227BA5550(PB::Base *this)
{
  *(void *)this = &unk_26DC22960;
  unint64_t v2 = (void *)*((void *)this + 13);
  if (v2)
  {
    *((void *)this + 14) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 10);
  if (v3)
  {
    *((void *)this + 11) = v3;
    operator delete(v3);
  }
  int v4 = (void *)*((void *)this + 7);
  if (v4)
  {
    *((void *)this + 8) = v4;
    operator delete(v4);
  }
  __int16 v5 = (void *)*((void *)this + 4);
  if (v5)
  {
    *((void *)this + 5) = v5;
    operator delete(v5);
  }
  __int16 v6 = (void *)*((void *)this + 1);
  if (v6)
  {
    *((void *)this + 2) = v6;
    operator delete(v6);
  }

  PB::Base::~Base(this);
}

void sub_227BA55F4(PB::Base *a1)
{
  sub_227BA5550(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227BA562C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC22960;
  *(_OWORD *)(a1 + 8) = 0u;
  int v4 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 56) = 0u;
  __int16 v5 = (char *)(a1 + 56);
  *(_OWORD *)(a1 + 104) = 0u;
  *(_DWORD *)(a1 + 152) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(void *)(a1 + 120) = 0;
  if ((*(unsigned char *)(a2 + 152) & 2) != 0)
  {
    uint64_t v6 = *(void *)(a2 + 136);
    *(unsigned char *)(a1 + 152) = 2;
    *(void *)(a1 + 136) = v6;
  }
  if (a1 != a2)
  {
    sub_227B8BA68(v5, *(char **)(a2 + 56), *(void *)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 2);
    sub_227B8BA68((char *)(a1 + 80), *(char **)(a2 + 80), *(void *)(a2 + 88), (uint64_t)(*(void *)(a2 + 88) - *(void *)(a2 + 80)) >> 2);
    sub_227B8BA68((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
    sub_227B8BA68(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  char v7 = *(unsigned char *)(a2 + 152);
  if ((v7 & 8) != 0)
  {
    int v8 = *(_DWORD *)(a2 + 148);
    *(unsigned char *)(a1 + 152) |= 8u;
    *(_DWORD *)(a1 + 148) = v8;
    char v7 = *(unsigned char *)(a2 + 152);
  }
  if (v7)
  {
    uint64_t v9 = *(void *)(a2 + 128);
    *(unsigned char *)(a1 + 152) |= 1u;
    *(void *)(a1 + 128) = v9;
  }
  if (a1 != a2) {
    sub_227B8BA68((char *)(a1 + 104), *(char **)(a2 + 104), *(void *)(a2 + 112), (uint64_t)(*(void *)(a2 + 112) - *(void *)(a2 + 104)) >> 2);
  }
  if ((*(unsigned char *)(a2 + 152) & 4) != 0)
  {
    int v10 = *(_DWORD *)(a2 + 144);
    *(unsigned char *)(a1 + 152) |= 4u;
    *(_DWORD *)(a1 + 144) = v10;
  }
  return a1;
}

uint64_t sub_227BA5788(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(float **)(a1 + 8);
  uint64_t v6 = *(float **)(a1 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    PB::TextFormatter::format(this, "acceleration", v7);
  }
  int v8 = *(float **)(a1 + 32);
  uint64_t v9 = *(float **)(a1 + 40);
  while (v8 != v9)
  {
    float v10 = *v8++;
    PB::TextFormatter::format(this, "biasCovariance", v10);
  }
  float v11 = *(float **)(a1 + 56);
  __int16 v12 = *(float **)(a1 + 64);
  while (v11 != v12)
  {
    float v13 = *v11++;
    PB::TextFormatter::format(this, "quaternion", v13);
  }
  unsigned int v14 = *(float **)(a1 + 80);
  unint64_t v15 = *(float **)(a1 + 88);
  while (v14 != v15)
  {
    float v16 = *v14++;
    PB::TextFormatter::format(this, "rotationRate", v16);
  }
  char v17 = *(unsigned char *)(a1 + 152);
  if (v17)
  {
    PB::TextFormatter::format(this, "sensorTime");
    char v17 = *(unsigned char *)(a1 + 152);
    if ((v17 & 4) == 0)
    {
LABEL_11:
      if ((v17 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_21;
    }
  }
  else if ((*(unsigned char *)(a1 + 152) & 4) == 0)
  {
    goto LABEL_11;
  }
  PB::TextFormatter::format(this, "status");
  char v17 = *(unsigned char *)(a1 + 152);
  if ((v17 & 8) == 0)
  {
LABEL_12:
    if ((v17 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_21:
  PB::TextFormatter::format(this, "statusDeprecated");
  if ((*(unsigned char *)(a1 + 152) & 2) != 0) {
LABEL_13:
  }
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 136));
LABEL_14:
  BOOL v18 = *(float **)(a1 + 104);
  char v19 = *(float **)(a1 + 112);
  while (v18 != v19)
  {
    float v20 = *v18++;
    PB::TextFormatter::format(this, "userAcceleration", v20);
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227BA5938(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    int v8 = (void **)(a1 + 104);
    uint64_t v9 = (void **)(a1 + 8);
    uint64_t v191 = a1 + 24;
    uint64_t v192 = a1 + 120;
    float v10 = (void **)(a1 + 32);
    float v11 = (void **)(a1 + 80);
    uint64_t v189 = a1 + 96;
    uint64_t v190 = a1 + 48;
    __int16 v12 = (void **)(a1 + 56);
    uint64_t v188 = a1 + 72;
    while (1)
    {
      uint64_t v13 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v14 = 0;
      unsigned int v15 = 0;
      unint64_t v16 = 0;
      while (1)
      {
        unint64_t v17 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v18 = *(unsigned char *)(v13 + v2);
        v16 |= (unint64_t)(v18 & 0x7F) << v14;
        if ((v18 & 0x80) == 0) {
          break;
        }
        v14 += 7;
        unint64_t v2 = v17;
        BOOL v19 = v15++ > 8;
        if (v19) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v25 = v16 & 7;
      if (v25 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v16 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 152) |= 2u;
          unint64_t v26 = *((void *)this + 1);
          if (v26 > 0xFFFFFFFFFFFFFFF7 || v26 + 8 > *((void *)this + 2)) {
            goto LABEL_291;
          }
          *(void *)(a1 + 136) = *(void *)(*(void *)this + v26);
          uint64_t v27 = *((void *)this + 1) + 8;
          goto LABEL_293;
        case 2u:
          if (v25 != 2)
          {
            unint64_t v123 = *(char **)(a1 + 64);
            unint64_t v122 = *(void *)(a1 + 72);
            if ((unint64_t)v123 >= v122)
            {
              unint64_t v145 = (char *)*v12;
              uint64_t v146 = (v123 - (unsigned char *)*v12) >> 2;
              unint64_t v147 = v146 + 1;
              if ((unint64_t)(v146 + 1) >> 62) {
LABEL_304:
              }
                sub_227B8B89C();
              uint64_t v148 = v122 - (void)v145;
              if (v148 >> 1 > v147) {
                unint64_t v147 = v148 >> 1;
              }
              if ((unint64_t)v148 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v149 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v149 = v147;
              }
              if (v149)
              {
                unsigned int v150 = (char *)sub_227B8BBB8(v188, v149);
                unint64_t v145 = *(char **)(a1 + 56);
                unint64_t v123 = *(char **)(a1 + 64);
              }
              else
              {
                unsigned int v150 = 0;
              }
              unint64_t v175 = &v150[4 * v146];
              *(_DWORD *)unint64_t v175 = 0;
              char v124 = v175 + 4;
              while (v123 != v145)
              {
                int v176 = *((_DWORD *)v123 - 1);
                v123 -= 4;
                *((_DWORD *)v175 - 1) = v176;
                v175 -= 4;
              }
              *(void *)(a1 + 56) = v175;
              *(void *)(a1 + 64) = v124;
              *(void *)(a1 + 72) = &v150[4 * v149];
              if (v145) {
                operator delete(v145);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v123 = 0;
              char v124 = v123 + 4;
            }
            *(void *)(a1 + 64) = v124;
            goto LABEL_289;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v28 = *((void *)this + 1);
          unint64_t v29 = *((void *)this + 2);
          while (v28 < v29 && !*((unsigned char *)this + 24))
          {
            uint64_t v31 = *(char **)(a1 + 64);
            unint64_t v30 = *(void *)(a1 + 72);
            if ((unint64_t)v31 >= v30)
            {
              uint64_t v33 = (char *)*v12;
              uint64_t v34 = (v31 - (unsigned char *)*v12) >> 2;
              unint64_t v35 = v34 + 1;
              if ((unint64_t)(v34 + 1) >> 62) {
                goto LABEL_304;
              }
              uint64_t v36 = v30 - (void)v33;
              if (v36 >> 1 > v35) {
                unint64_t v35 = v36 >> 1;
              }
              if ((unint64_t)v36 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v37 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v37 = v35;
              }
              if (v37)
              {
                unint64_t v38 = (char *)sub_227B8BBB8(v188, v37);
                uint64_t v33 = *(char **)(a1 + 56);
                uint64_t v31 = *(char **)(a1 + 64);
              }
              else
              {
                unint64_t v38 = 0;
              }
              unint64_t v39 = &v38[4 * v34];
              *(_DWORD *)unint64_t v39 = 0;
              unint64_t v32 = v39 + 4;
              while (v31 != v33)
              {
                int v40 = *((_DWORD *)v31 - 1);
                v31 -= 4;
                *((_DWORD *)v39 - 1) = v40;
                v39 -= 4;
              }
              *(void *)(a1 + 56) = v39;
              *(void *)(a1 + 64) = v32;
              *(void *)(a1 + 72) = &v38[4 * v37];
              if (v33) {
                operator delete(v33);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v31 = 0;
              unint64_t v32 = v31 + 4;
            }
            *(void *)(a1 + 64) = v32;
            unint64_t v41 = *((void *)this + 1);
            if (v41 > 0xFFFFFFFFFFFFFFFBLL || v41 + 4 > *((void *)this + 2)) {
              goto LABEL_169;
            }
            *(v32 - 1) = *(_DWORD *)(*(void *)this + v41);
            unint64_t v29 = *((void *)this + 2);
            unint64_t v28 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v28;
          }
          goto LABEL_170;
        case 3u:
          if (v25 != 2)
          {
            unsigned int v126 = *(char **)(a1 + 88);
            unint64_t v125 = *(void *)(a1 + 96);
            if ((unint64_t)v126 >= v125)
            {
              unint64_t v151 = (char *)*v11;
              uint64_t v152 = (v126 - (unsigned char *)*v11) >> 2;
              unint64_t v153 = v152 + 1;
              if ((unint64_t)(v152 + 1) >> 62) {
LABEL_305:
              }
                sub_227B8B89C();
              uint64_t v154 = v125 - (void)v151;
              if (v154 >> 1 > v153) {
                unint64_t v153 = v154 >> 1;
              }
              if ((unint64_t)v154 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v155 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v155 = v153;
              }
              if (v155)
              {
                char v156 = (char *)sub_227B8BBB8(v189, v155);
                unint64_t v151 = *(char **)(a1 + 80);
                unsigned int v126 = *(char **)(a1 + 88);
              }
              else
              {
                char v156 = 0;
              }
              unint64_t v177 = &v156[4 * v152];
              *(_DWORD *)unint64_t v177 = 0;
              char v124 = v177 + 4;
              while (v126 != v151)
              {
                int v178 = *((_DWORD *)v126 - 1);
                v126 -= 4;
                *((_DWORD *)v177 - 1) = v178;
                v177 -= 4;
              }
              *(void *)(a1 + 80) = v177;
              *(void *)(a1 + 88) = v124;
              *(void *)(a1 + 96) = &v156[4 * v155];
              if (v151) {
                operator delete(v151);
              }
            }
            else
            {
              *(_DWORD *)unsigned int v126 = 0;
              char v124 = v126 + 4;
            }
            *(void *)(a1 + 88) = v124;
            goto LABEL_289;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v42 = *((void *)this + 1);
          unint64_t v43 = *((void *)this + 2);
          while (v42 < v43 && !*((unsigned char *)this + 24))
          {
            uint64_t v45 = *(char **)(a1 + 88);
            unint64_t v44 = *(void *)(a1 + 96);
            if ((unint64_t)v45 >= v44)
            {
              char v47 = (char *)*v11;
              uint64_t v48 = (v45 - (unsigned char *)*v11) >> 2;
              unint64_t v49 = v48 + 1;
              if ((unint64_t)(v48 + 1) >> 62) {
                goto LABEL_305;
              }
              uint64_t v50 = v44 - (void)v47;
              if (v50 >> 1 > v49) {
                unint64_t v49 = v50 >> 1;
              }
              if ((unint64_t)v50 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v51 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v51 = v49;
              }
              if (v51)
              {
                unsigned int v52 = (char *)sub_227B8BBB8(v189, v51);
                char v47 = *(char **)(a1 + 80);
                uint64_t v45 = *(char **)(a1 + 88);
              }
              else
              {
                unsigned int v52 = 0;
              }
              uint64_t v53 = &v52[4 * v48];
              *(_DWORD *)uint64_t v53 = 0;
              unint64_t v46 = v53 + 4;
              while (v45 != v47)
              {
                int v54 = *((_DWORD *)v45 - 1);
                v45 -= 4;
                *((_DWORD *)v53 - 1) = v54;
                v53 -= 4;
              }
              *(void *)(a1 + 80) = v53;
              *(void *)(a1 + 88) = v46;
              *(void *)(a1 + 96) = &v52[4 * v51];
              if (v47) {
                operator delete(v47);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v45 = 0;
              unint64_t v46 = v45 + 4;
            }
            *(void *)(a1 + 88) = v46;
            unint64_t v55 = *((void *)this + 1);
            if (v55 > 0xFFFFFFFFFFFFFFFBLL || v55 + 4 > *((void *)this + 2)) {
              goto LABEL_169;
            }
            *(v46 - 1) = *(_DWORD *)(*(void *)this + v55);
            unint64_t v43 = *((void *)this + 2);
            unint64_t v42 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v42;
          }
          goto LABEL_170;
        case 4u:
          if (v25 != 2)
          {
            char v128 = *(char **)(a1 + 40);
            unint64_t v127 = *(void *)(a1 + 48);
            if ((unint64_t)v128 >= v127)
            {
              char v157 = (char *)*v10;
              uint64_t v158 = (v128 - (unsigned char *)*v10) >> 2;
              unint64_t v159 = v158 + 1;
              if ((unint64_t)(v158 + 1) >> 62) {
LABEL_306:
              }
                sub_227B8B89C();
              uint64_t v160 = v127 - (void)v157;
              if (v160 >> 1 > v159) {
                unint64_t v159 = v160 >> 1;
              }
              if ((unint64_t)v160 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v161 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v161 = v159;
              }
              if (v161)
              {
                char v162 = (char *)sub_227B8BBB8(v190, v161);
                char v157 = *(char **)(a1 + 32);
                char v128 = *(char **)(a1 + 40);
              }
              else
              {
                char v162 = 0;
              }
              unint64_t v179 = &v162[4 * v158];
              *(_DWORD *)unint64_t v179 = 0;
              char v124 = v179 + 4;
              while (v128 != v157)
              {
                int v180 = *((_DWORD *)v128 - 1);
                v128 -= 4;
                *((_DWORD *)v179 - 1) = v180;
                v179 -= 4;
              }
              *(void *)(a1 + 32) = v179;
              *(void *)(a1 + 40) = v124;
              *(void *)(a1 + 48) = &v162[4 * v161];
              if (v157) {
                operator delete(v157);
              }
            }
            else
            {
              *(_DWORD *)char v128 = 0;
              char v124 = v128 + 4;
            }
            *(void *)(a1 + 40) = v124;
            goto LABEL_289;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v56 = *((void *)this + 1);
          unint64_t v57 = *((void *)this + 2);
          while (v56 < v57 && !*((unsigned char *)this + 24))
          {
            char v59 = *(char **)(a1 + 40);
            unint64_t v58 = *(void *)(a1 + 48);
            if ((unint64_t)v59 >= v58)
            {
              uint64_t v61 = (char *)*v10;
              uint64_t v62 = (v59 - (unsigned char *)*v10) >> 2;
              unint64_t v63 = v62 + 1;
              if ((unint64_t)(v62 + 1) >> 62) {
                goto LABEL_306;
              }
              uint64_t v64 = v58 - (void)v61;
              if (v64 >> 1 > v63) {
                unint64_t v63 = v64 >> 1;
              }
              if ((unint64_t)v64 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v65 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v65 = v63;
              }
              if (v65)
              {
                unint64_t v66 = (char *)sub_227B8BBB8(v190, v65);
                uint64_t v61 = *(char **)(a1 + 32);
                char v59 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v66 = 0;
              }
              unint64_t v67 = &v66[4 * v62];
              *(_DWORD *)unint64_t v67 = 0;
              unsigned int v60 = v67 + 4;
              while (v59 != v61)
              {
                int v68 = *((_DWORD *)v59 - 1);
                v59 -= 4;
                *((_DWORD *)v67 - 1) = v68;
                v67 -= 4;
              }
              *(void *)(a1 + 32) = v67;
              *(void *)(a1 + 40) = v60;
              *(void *)(a1 + 48) = &v66[4 * v65];
              if (v61) {
                operator delete(v61);
              }
            }
            else
            {
              *(_DWORD *)char v59 = 0;
              unsigned int v60 = v59 + 4;
            }
            *(void *)(a1 + 40) = v60;
            unint64_t v69 = *((void *)this + 1);
            if (v69 > 0xFFFFFFFFFFFFFFFBLL || v69 + 4 > *((void *)this + 2)) {
              goto LABEL_169;
            }
            *(v60 - 1) = *(_DWORD *)(*(void *)this + v69);
            unint64_t v57 = *((void *)this + 2);
            unint64_t v56 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v56;
          }
          goto LABEL_170;
        case 5u:
          if (v25 != 2)
          {
            unsigned int v130 = *(char **)(a1 + 16);
            unint64_t v129 = *(void *)(a1 + 24);
            if ((unint64_t)v130 >= v129)
            {
              unint64_t v163 = (char *)*v9;
              uint64_t v164 = (v130 - (unsigned char *)*v9) >> 2;
              unint64_t v165 = v164 + 1;
              if ((unint64_t)(v164 + 1) >> 62) {
LABEL_307:
              }
                sub_227B8B89C();
              uint64_t v166 = v129 - (void)v163;
              if (v166 >> 1 > v165) {
                unint64_t v165 = v166 >> 1;
              }
              if ((unint64_t)v166 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v167 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v167 = v165;
              }
              if (v167)
              {
                uint64_t v168 = (char *)sub_227B8BBB8(v191, v167);
                unint64_t v163 = *(char **)(a1 + 8);
                unsigned int v130 = *(char **)(a1 + 16);
              }
              else
              {
                uint64_t v168 = 0;
              }
              unint64_t v181 = &v168[4 * v164];
              *(_DWORD *)unint64_t v181 = 0;
              char v124 = v181 + 4;
              while (v130 != v163)
              {
                int v182 = *((_DWORD *)v130 - 1);
                v130 -= 4;
                *((_DWORD *)v181 - 1) = v182;
                v181 -= 4;
              }
              *(void *)(a1 + 8) = v181;
              *(void *)(a1 + 16) = v124;
              *(void *)(a1 + 24) = &v168[4 * v167];
              if (v163) {
                operator delete(v163);
              }
            }
            else
            {
              *(_DWORD *)unsigned int v130 = 0;
              char v124 = v130 + 4;
            }
            *(void *)(a1 + 16) = v124;
            goto LABEL_289;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v70 = *((void *)this + 1);
          unint64_t v71 = *((void *)this + 2);
          while (v70 < v71 && !*((unsigned char *)this + 24))
          {
            char v73 = *(char **)(a1 + 16);
            unint64_t v72 = *(void *)(a1 + 24);
            if ((unint64_t)v73 >= v72)
            {
              unint64_t v75 = (char *)*v9;
              uint64_t v76 = (v73 - (unsigned char *)*v9) >> 2;
              unint64_t v77 = v76 + 1;
              if ((unint64_t)(v76 + 1) >> 62) {
                goto LABEL_307;
              }
              uint64_t v78 = v72 - (void)v75;
              if (v78 >> 1 > v77) {
                unint64_t v77 = v78 >> 1;
              }
              if ((unint64_t)v78 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v79 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v79 = v77;
              }
              if (v79)
              {
                unint64_t v80 = (char *)sub_227B8BBB8(v191, v79);
                unint64_t v75 = *(char **)(a1 + 8);
                char v73 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v80 = 0;
              }
              char v81 = &v80[4 * v76];
              *(_DWORD *)char v81 = 0;
              unint64_t v74 = v81 + 4;
              while (v73 != v75)
              {
                int v82 = *((_DWORD *)v73 - 1);
                v73 -= 4;
                *((_DWORD *)v81 - 1) = v82;
                v81 -= 4;
              }
              *(void *)(a1 + 8) = v81;
              *(void *)(a1 + 16) = v74;
              *(void *)(a1 + 24) = &v80[4 * v79];
              if (v75) {
                operator delete(v75);
              }
            }
            else
            {
              *(_DWORD *)char v73 = 0;
              unint64_t v74 = v73 + 4;
            }
            *(void *)(a1 + 16) = v74;
            unint64_t v83 = *((void *)this + 1);
            if (v83 > 0xFFFFFFFFFFFFFFFBLL || v83 + 4 > *((void *)this + 2)) {
              goto LABEL_169;
            }
            *(v74 - 1) = *(_DWORD *)(*(void *)this + v83);
            unint64_t v71 = *((void *)this + 2);
            unint64_t v70 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v70;
          }
          goto LABEL_170;
        case 6u:
          *(unsigned char *)(a1 + 152) |= 8u;
          unint64_t v84 = *((void *)this + 1);
          unint64_t v85 = *((void *)this + 2);
          uint64_t v86 = *(void *)this;
          if (v84 <= 0xFFFFFFFFFFFFFFF5 && v84 + 10 <= v85)
          {
            char v87 = 0;
            unsigned int v88 = 0;
            uint64_t v89 = 0;
            do
            {
              unint64_t v90 = v84 + 1;
              *((void *)this + 1) = v84 + 1;
              char v91 = *(unsigned char *)(v86 + v84);
              v89 |= (unint64_t)(v91 & 0x7F) << v87;
              if ((v91 & 0x80) == 0) {
                goto LABEL_247;
              }
              v87 += 7;
              unint64_t v84 = v90;
              BOOL v19 = v88++ > 8;
            }
            while (!v19);
LABEL_185:
            LODWORD(v89) = 0;
            goto LABEL_247;
          }
          char v131 = 0;
          unsigned int v132 = 0;
          uint64_t v89 = 0;
          if (v85 <= v84) {
            unint64_t v85 = *((void *)this + 1);
          }
          while (2)
          {
            if (v85 == v84)
            {
              LODWORD(v89) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v133 = v84 + 1;
              char v134 = *(unsigned char *)(v86 + v84);
              *((void *)this + 1) = v133;
              v89 |= (unint64_t)(v134 & 0x7F) << v131;
              if (v134 < 0)
              {
                v131 += 7;
                unint64_t v84 = v133;
                BOOL v19 = v132++ > 8;
                if (v19) {
                  goto LABEL_185;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v89) = 0;
              }
            }
            break;
          }
LABEL_247:
          *(_DWORD *)(a1 + 148) = v89;
          goto LABEL_294;
        case 7u:
          *(unsigned char *)(a1 + 152) |= 1u;
          unint64_t v92 = *((void *)this + 1);
          unint64_t v93 = *((void *)this + 2);
          uint64_t v94 = *(void *)this;
          if (v92 <= 0xFFFFFFFFFFFFFFF5 && v92 + 10 <= v93)
          {
            char v95 = 0;
            unsigned int v96 = 0;
            uint64_t v97 = 0;
            do
            {
              unint64_t v98 = v92 + 1;
              *((void *)this + 1) = v92 + 1;
              char v99 = *(unsigned char *)(v94 + v92);
              v97 |= (unint64_t)(v99 & 0x7F) << v95;
              if ((v99 & 0x80) == 0) {
                goto LABEL_250;
              }
              v95 += 7;
              unint64_t v92 = v98;
              BOOL v19 = v96++ > 8;
            }
            while (!v19);
LABEL_192:
            uint64_t v97 = 0;
            goto LABEL_250;
          }
          char v135 = 0;
          unsigned int v136 = 0;
          uint64_t v97 = 0;
          if (v93 <= v92) {
            unint64_t v93 = *((void *)this + 1);
          }
          while (2)
          {
            if (v93 == v92)
            {
              uint64_t v97 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v137 = v92 + 1;
              char v138 = *(unsigned char *)(v94 + v92);
              *((void *)this + 1) = v137;
              v97 |= (unint64_t)(v138 & 0x7F) << v135;
              if (v138 < 0)
              {
                v135 += 7;
                unint64_t v92 = v137;
                BOOL v19 = v136++ > 8;
                if (v19) {
                  goto LABEL_192;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v97 = 0;
              }
            }
            break;
          }
LABEL_250:
          *(void *)(a1 + 128) = v97;
          goto LABEL_294;
        case 8u:
          if (v25 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v100 = *((void *)this + 1);
            unint64_t v101 = *((void *)this + 2);
            while (v100 < v101 && !*((unsigned char *)this + 24))
            {
              uint64_t v103 = *(char **)(a1 + 112);
              unint64_t v102 = *(void *)(a1 + 120);
              if ((unint64_t)v103 >= v102)
              {
                char v105 = (char *)*v8;
                uint64_t v106 = (v103 - (unsigned char *)*v8) >> 2;
                unint64_t v107 = v106 + 1;
                if ((unint64_t)(v106 + 1) >> 62) {
                  goto LABEL_308;
                }
                uint64_t v108 = v102 - (void)v105;
                if (v108 >> 1 > v107) {
                  unint64_t v107 = v108 >> 1;
                }
                if ((unint64_t)v108 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v109 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v109 = v107;
                }
                if (v109)
                {
                  unint64_t v110 = (char *)sub_227B8BBB8(v192, v109);
                  char v105 = *(char **)(a1 + 104);
                  uint64_t v103 = *(char **)(a1 + 112);
                }
                else
                {
                  unint64_t v110 = 0;
                }
                unint64_t v111 = &v110[4 * v106];
                *(_DWORD *)unint64_t v111 = 0;
                unint64_t v104 = v111 + 4;
                while (v103 != v105)
                {
                  int v112 = *((_DWORD *)v103 - 1);
                  v103 -= 4;
                  *((_DWORD *)v111 - 1) = v112;
                  v111 -= 4;
                }
                *(void *)(a1 + 104) = v111;
                *(void *)(a1 + 112) = v104;
                *(void *)(a1 + 120) = &v110[4 * v109];
                if (v105) {
                  operator delete(v105);
                }
              }
              else
              {
                *(_DWORD *)uint64_t v103 = 0;
                unint64_t v104 = v103 + 4;
              }
              *(void *)(a1 + 112) = v104;
              unint64_t v113 = *((void *)this + 1);
              if (v113 > 0xFFFFFFFFFFFFFFFBLL || v113 + 4 > *((void *)this + 2))
              {
LABEL_169:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v104 - 1) = *(_DWORD *)(*(void *)this + v113);
              unint64_t v101 = *((void *)this + 2);
              unint64_t v100 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v100;
            }
LABEL_170:
            PB::Reader::recallMark();
          }
          else
          {
            uint64_t v140 = *(char **)(a1 + 112);
            unint64_t v139 = *(void *)(a1 + 120);
            if ((unint64_t)v140 >= v139)
            {
              unint64_t v169 = (char *)*v8;
              uint64_t v170 = (v140 - (unsigned char *)*v8) >> 2;
              unint64_t v171 = v170 + 1;
              if ((unint64_t)(v170 + 1) >> 62) {
LABEL_308:
              }
                sub_227B8B89C();
              uint64_t v172 = v139 - (void)v169;
              if (v172 >> 1 > v171) {
                unint64_t v171 = v172 >> 1;
              }
              if ((unint64_t)v172 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v173 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v173 = v171;
              }
              if (v173)
              {
                uint64_t v174 = (char *)sub_227B8BBB8(v192, v173);
                unint64_t v169 = *(char **)(a1 + 104);
                uint64_t v140 = *(char **)(a1 + 112);
              }
              else
              {
                uint64_t v174 = 0;
              }
              uint64_t v183 = &v174[4 * v170];
              *(_DWORD *)uint64_t v183 = 0;
              char v124 = v183 + 4;
              while (v140 != v169)
              {
                int v184 = *((_DWORD *)v140 - 1);
                v140 -= 4;
                *((_DWORD *)v183 - 1) = v184;
                v183 -= 4;
              }
              *(void *)(a1 + 104) = v183;
              *(void *)(a1 + 112) = v124;
              *(void *)(a1 + 120) = &v174[4 * v173];
              if (v169) {
                operator delete(v169);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v140 = 0;
              char v124 = v140 + 4;
            }
            *(void *)(a1 + 112) = v124;
LABEL_289:
            unint64_t v185 = *((void *)this + 1);
            if (v185 <= 0xFFFFFFFFFFFFFFFBLL && v185 + 4 <= *((void *)this + 2))
            {
              *(v124 - 1) = *(_DWORD *)(*(void *)this + v185);
              uint64_t v27 = *((void *)this + 1) + 4;
LABEL_293:
              *((void *)this + 1) = v27;
            }
            else
            {
LABEL_291:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_294:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        case 9u:
          *(unsigned char *)(a1 + 152) |= 4u;
          unint64_t v114 = *((void *)this + 1);
          unint64_t v115 = *((void *)this + 2);
          uint64_t v116 = *(void *)this;
          if (v114 <= 0xFFFFFFFFFFFFFFF5 && v114 + 10 <= v115)
          {
            char v117 = 0;
            unsigned int v118 = 0;
            uint64_t v119 = 0;
            do
            {
              unint64_t v120 = v114 + 1;
              *((void *)this + 1) = v114 + 1;
              char v121 = *(unsigned char *)(v116 + v114);
              v119 |= (unint64_t)(v121 & 0x7F) << v117;
              if ((v121 & 0x80) == 0) {
                goto LABEL_253;
              }
              v117 += 7;
              unint64_t v114 = v120;
              BOOL v19 = v118++ > 8;
            }
            while (!v19);
LABEL_201:
            LODWORD(v119) = 0;
            goto LABEL_253;
          }
          char v141 = 0;
          unsigned int v142 = 0;
          uint64_t v119 = 0;
          if (v115 <= v114) {
            unint64_t v115 = *((void *)this + 1);
          }
          while (2)
          {
            if (v115 == v114)
            {
              LODWORD(v119) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v143 = v114 + 1;
              char v144 = *(unsigned char *)(v116 + v114);
              *((void *)this + 1) = v143;
              v119 |= (unint64_t)(v144 & 0x7F) << v141;
              if (v144 < 0)
              {
                v141 += 7;
                unint64_t v114 = v143;
                BOOL v19 = v142++ > 8;
                if (v19) {
                  goto LABEL_201;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v119) = 0;
              }
            }
            break;
          }
LABEL_253:
          *(_DWORD *)(a1 + 144) = v119;
          goto LABEL_294;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_294;
      }
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v16 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v22 = v2 + 1;
      char v23 = *(unsigned char *)(v13 + v2);
      *((void *)this + 1) = v22;
      v16 |= (unint64_t)(v23 & 0x7F) << v20;
      if ((v23 & 0x80) == 0) {
        goto LABEL_21;
      }
      v20 += 7;
      unint64_t v2 = v22;
      if (v21++ >= 9)
      {
LABEL_20:
        unint64_t v16 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227BA66C4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  if ((*(unsigned char *)(result + 152) & 2) != 0) {
    double result = PB::Writer::write(this, *(double *)(result + 136));
  }
  int v4 = *(float **)(v3 + 56);
  __int16 v5 = *(float **)(v3 + 64);
  while (v4 != v5)
  {
    float v6 = *v4++;
    double result = PB::Writer::write(this, v6);
  }
  float v7 = *(float **)(v3 + 80);
  int v8 = *(float **)(v3 + 88);
  while (v7 != v8)
  {
    float v9 = *v7++;
    double result = PB::Writer::write(this, v9);
  }
  float v10 = *(float **)(v3 + 32);
  float v11 = *(float **)(v3 + 40);
  while (v10 != v11)
  {
    float v12 = *v10++;
    double result = PB::Writer::write(this, v12);
  }
  uint64_t v13 = *(float **)(v3 + 8);
  char v14 = *(float **)(v3 + 16);
  while (v13 != v14)
  {
    float v15 = *v13++;
    double result = PB::Writer::write(this, v15);
  }
  char v16 = *(unsigned char *)(v3 + 152);
  if ((v16 & 8) != 0)
  {
    double result = PB::Writer::writeVarInt(this);
    char v16 = *(unsigned char *)(v3 + 152);
  }
  if (v16) {
    double result = PB::Writer::writeVarInt(this);
  }
  unint64_t v17 = *(float **)(v3 + 104);
  char v18 = *(float **)(v3 + 112);
  while (v17 != v18)
  {
    float v19 = *v17++;
    double result = PB::Writer::write(this, v19);
  }
  if ((*(unsigned char *)(v3 + 152) & 4) != 0)
  {
    return PB::Writer::writeVarInt(this);
  }
  return result;
}

uint64_t sub_227BA680C(uint64_t result)
{
  *(void *)double result = &unk_26DC22998;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_227BA6834(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227BA686C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC22998;
  *(_DWORD *)(a1 + 20) = 0;
  if ((*(unsigned char *)(a2 + 20) & 1) == 0)
  {
    char v2 = 2;
    if ((*(unsigned char *)(a2 + 20) & 2) == 0) {
      return *(float *)&v3;
    }
    goto LABEL_5;
  }
  uint64_t v3 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 20) = 1;
  *(void *)(a1 + 8) = v3;
  char v2 = 3;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
LABEL_5:
    LODWORD(v3) = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(a1 + 20) = v2;
    *(_DWORD *)(a1 + 16) = v3;
  }
  return *(float *)&v3;
}

uint64_t sub_227BA68D0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "alsTrustedLux", *(float *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if (v5) {
    PB::TextFormatter::format(this, "startTime", *(double *)(a1 + 8));
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BA694C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    do
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
        return v4 == 0;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
        unint64_t v2 = *((void *)this + 1) + 4;
      }
      else
      {
        if ((v11 >> 3) != 1)
        {
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          goto LABEL_33;
        }
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2))
        {
LABEL_28:
          *((unsigned char *)this + 24) = 1;
          goto LABEL_33;
        }
        *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
        unint64_t v2 = *((void *)this + 1) + 8;
      }
      *((void *)this + 1) = v2;
LABEL_33:
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
    }
    while (v2 < v3 && !*((unsigned char *)this + 24));
  }
  return v4 == 0;
}

uint64_t sub_227BA6B30(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    float v5 = *(float *)(v3 + 16);
    return PB::Writer::write(this, v5);
  }
  return result;
}

uint64_t sub_227BA6B9C(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC229D0;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

void sub_227BA6BC4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227BA6BFC(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC229D0;
  *(_DWORD *)(result + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 28);
  if ((v2 & 2) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 16);
    char v3 = 2;
    *(unsigned char *)(result + 28) = 2;
    *(void *)(result + 16) = v4;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if (*(unsigned char *)(a2 + 28))
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 8);
    v3 |= 1u;
    *(unsigned char *)(result + 28) = v3;
    *(void *)(result + 8) = v5;
    char v2 = *(unsigned char *)(a2 + 28);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    char v6 = *(unsigned char *)(a2 + 24);
    *(unsigned char *)(result + 28) = v3 | 4;
    *(unsigned char *)(result + 24) = v6;
  }
  return result;
}

uint64_t sub_227BA6C7C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "fConnected");
    char v5 = *(unsigned char *)(a1 + 28);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((*(unsigned char *)(a1 + 28) & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "fEndTime", *(double *)(a1 + 8));
  if ((*(unsigned char *)(a1 + 28) & 2) != 0) {
LABEL_4:
  }
    PB::TextFormatter::format(this, "fStartTime", *(double *)(a1 + 16));
LABEL_5:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BA6D20(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    do
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
        return v4 == 0;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 3)
      {
        *(unsigned char *)(a1 + 28) |= 4u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 >= *((void *)this + 2))
        {
          BOOL v22 = 0;
          *((unsigned char *)this + 24) = 1;
        }
        else
        {
          int v21 = *(unsigned __int8 *)(*(void *)this + v2++);
          *((void *)this + 1) = v2;
          BOOL v22 = v21 != 0;
        }
        *(unsigned char *)(a1 + 24) = v22;
        goto LABEL_38;
      }
      if (v20 == 2)
      {
        *(unsigned char *)(a1 + 28) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
          goto LABEL_31;
        }
        *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
      }
      else
      {
        if (v20 != 1)
        {
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          goto LABEL_38;
        }
        *(unsigned char *)(a1 + 28) |= 2u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2))
        {
LABEL_31:
          *((unsigned char *)this + 24) = 1;
          goto LABEL_38;
        }
        *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
      }
      unint64_t v2 = *((void *)this + 1) + 8;
      *((void *)this + 1) = v2;
LABEL_38:
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
    }
    while (v2 < v3 && !*((unsigned char *)this + 24));
  }
  return v4 == 0;
}

uint64_t sub_227BA6F48(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if ((v4 & 2) == 0)
  {
    if ((*(unsigned char *)(result + 28) & 1) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
    if ((*(unsigned char *)(v3 + 28) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(result + 16));
  char v4 = *(unsigned char *)(v3 + 28);
  if (v4) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v4 & 4) == 0) {
    return result;
  }
LABEL_7:

  return PB::Writer::write(this);
}

uint64_t sub_227BA6FD4(uint64_t result)
{
  *(_DWORD *)(result + 28) = 0;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)uint64_t result = &unk_26DC22A08;
  return result;
}

void sub_227BA6FFC(PB::Base *this)
{
  *(void *)this = &unk_26DC22A08;
  uint64_t v4 = *((void *)this + 2);
  unint64_t v2 = (void *)((char *)this + 16);
  uint64_t v3 = v4;
  *unint64_t v2 = 0;
  if (v4) {
    sub_227B8B690((uint64_t)v2, v3);
  }
  uint64_t v5 = *((void *)this + 1);
  *((void *)this + 1) = 0;
  if (v5) {
    sub_227B8B690((uint64_t)this + 8, v5);
  }

  PB::Base::~Base(this);
}

void sub_227BA7074(PB::Base *a1)
{
  sub_227BA6FFC(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227BA70AC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 8) = 0;
  *(void *)uint64_t result = &unk_26DC22A08;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 28) = 0;
  if (*(unsigned char *)(a2 + 28))
  {
    int v2 = *(_DWORD *)(a2 + 24);
    *(unsigned char *)(result + 28) = 1;
    *(_DWORD *)(result + 24) = v2;
  }
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  if (*(void *)(a2 + 16)) {
    operator new();
  }
  return result;
}

uint64_t sub_227BA71FC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 28)) {
    PB::TextFormatter::format(this, "backlightState");
  }
  if (*(void *)(a1 + 8)) {
    PB::TextFormatter::format();
  }
  if (*(void *)(a1 + 16)) {
    PB::TextFormatter::format();
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BA728C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 3) {
        operator new();
      }
      if (v20 == 2) {
        operator new();
      }
      if (v20 == 1)
      {
        *(unsigned char *)(a1 + 28) |= 1u;
        unint64_t v21 = *((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        uint64_t v23 = *(void *)this;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v22)
        {
          char v30 = 0;
          unsigned int v31 = 0;
          uint64_t v26 = 0;
          if (v22 <= v21) {
            unint64_t v22 = *((void *)this + 1);
          }
          while (1)
          {
            if (v22 == v21)
            {
              LODWORD(v26) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_45;
            }
            unint64_t v32 = v21 + 1;
            char v33 = *(unsigned char *)(v23 + v21);
            *((void *)this + 1) = v32;
            v26 |= (unint64_t)(v33 & 0x7F) << v30;
            if ((v33 & 0x80) == 0) {
              break;
            }
            v30 += 7;
            unint64_t v21 = v32;
            BOOL v14 = v31++ > 8;
            if (v14)
            {
LABEL_41:
              LODWORD(v26) = 0;
              goto LABEL_45;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v26) = 0;
          }
        }
        else
        {
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v26 = 0;
          while (1)
          {
            unint64_t v27 = v21 + 1;
            *((void *)this + 1) = v21 + 1;
            char v28 = *(unsigned char *)(v23 + v21);
            v26 |= (unint64_t)(v28 & 0x7F) << v24;
            if ((v28 & 0x80) == 0) {
              break;
            }
            v24 += 7;
            unint64_t v21 = v27;
            BOOL v14 = v25++ > 8;
            if (v14) {
              goto LABEL_41;
            }
          }
        }
LABEL_45:
        *(_DWORD *)(a1 + 24) = v26;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227BA7594(uint64_t result, PB::Writer *this)
{
  uint64_t v2 = result;
  if (*(unsigned char *)(result + 28)) {
    uint64_t result = PB::Writer::writeVarInt(this);
  }
  if (*(void *)(v2 + 8)) {
    uint64_t result = PB::Writer::write();
  }
  if (*(void *)(v2 + 16))
  {
    return PB::Writer::write();
  }
  return result;
}

uint64_t sub_227BA7610(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC22A40;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

void sub_227BA7638(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227BA7670(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC22A40;
  *(_DWORD *)(result + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 28);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 28) = 1;
    *(void *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 28) & 4) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 20);
    v3 |= 4u;
    *(unsigned char *)(result + 28) = v3;
    *(_DWORD *)(result + 20) = v5;
    char v2 = *(unsigned char *)(a2 + 28);
  }
LABEL_6:
  if ((v2 & 8) == 0)
  {
    if ((v2 & 2) == 0) {
      return result;
    }
LABEL_10:
    int v7 = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(result + 28) = v3 | 2;
    *(_DWORD *)(result + 16) = v7;
    return result;
  }
  char v6 = *(unsigned char *)(a2 + 24);
  v3 |= 8u;
  *(unsigned char *)(result + 28) = v3;
  *(unsigned char *)(result + 24) = v6;
  if ((*(unsigned char *)(a2 + 28) & 2) != 0) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_227BA770C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 8) != 0)
  {
    PB::TextFormatter::format(this, "inCoex");
    char v5 = *(unsigned char *)(a1 + 28);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 28) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "reserved");
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "subType");
  if (*(unsigned char *)(a1 + 28)) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
LABEL_6:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BA77D0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 28) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_70;
            case 2u:
              *(unsigned char *)(a1 + 28) |= 4u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v35 = 0;
                unsigned int v36 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_64;
                  }
                  unint64_t v37 = v21++;
                  char v38 = *(unsigned char *)(v22 + v37);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v38 & 0x7F) << v35;
                  if ((v38 & 0x80) == 0) {
                    break;
                  }
                  v35 += 7;
                  BOOL v14 = v36++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_63:
                    unint64_t v2 = v37 + 1;
                    goto LABEL_64;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_63;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_64;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_64:
              *(_DWORD *)(a1 + 20) = v25;
              goto LABEL_70;
            case 3u:
              *(unsigned char *)(a1 + 28) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v28 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v27 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v28 = v27 != 0;
              }
              *(unsigned char *)(a1 + 24) = v28;
              goto LABEL_70;
            case 4u:
              *(unsigned char *)(a1 + 28) |= 2u;
              unint64_t v29 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v30 = *(void *)this;
              if (v29 > 0xFFFFFFFFFFFFFFF5 || v29 + 10 > v2)
              {
                char v39 = 0;
                unsigned int v40 = 0;
                uint64_t v33 = 0;
                if (v2 <= v29) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v29)
                  {
                    LODWORD(v33) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_69;
                  }
                  unint64_t v41 = v29++;
                  char v42 = *(unsigned char *)(v30 + v41);
                  *((void *)this + 1) = v29;
                  v33 |= (unint64_t)(v42 & 0x7F) << v39;
                  if ((v42 & 0x80) == 0) {
                    break;
                  }
                  v39 += 7;
                  BOOL v14 = v40++ > 8;
                  if (v14)
                  {
                    LODWORD(v33) = 0;
LABEL_68:
                    unint64_t v2 = v41 + 1;
                    goto LABEL_69;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v33) = 0;
                }
                goto LABEL_68;
              }
              char v31 = 0;
              unsigned int v32 = 0;
              uint64_t v33 = 0;
              do
              {
                unint64_t v2 = v29 + 1;
                *((void *)this + 1) = v29 + 1;
                char v34 = *(unsigned char *)(v30 + v29);
                v33 |= (unint64_t)(v34 & 0x7F) << v31;
                if ((v34 & 0x80) == 0) {
                  goto LABEL_69;
                }
                v31 += 7;
                unint64_t v29 = v2;
                BOOL v14 = v32++ > 8;
              }
              while (!v14);
              LODWORD(v33) = 0;
LABEL_69:
              *(_DWORD *)(a1 + 16) = v33;
LABEL_70:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_70;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227BA7BBC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 28);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::write(this);
      if ((*(unsigned char *)(v3 + 28) & 2) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 28) & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 8) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_9:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227BA7C64(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC22A78;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

void sub_227BA7C8C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227BA7CC4(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC22A78;
  *(_DWORD *)(result + 48) = 0;
  __int16 v2 = *(_WORD *)(a2 + 48);
  if ((v2 & 2) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 16);
    __int16 v3 = 2;
    *(_WORD *)(result + 48) = 2;
    *(void *)(result + 16) = v4;
    __int16 v2 = *(_WORD *)(a2 + 48);
    if ((v2 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if (v2)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 8);
    v3 |= 1u;
    *(_WORD *)(result + 48) = v3;
    *(void *)(result + 8) = v5;
    __int16 v2 = *(_WORD *)(a2 + 48);
  }
LABEL_6:
  if ((v2 & 0x40) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 40);
    v3 |= 0x40u;
    *(_WORD *)(result + 48) = v3;
    *(_DWORD *)(result + 40) = v6;
    __int16 v2 = *(_WORD *)(a2 + 48);
    if ((v2 & 8) == 0)
    {
LABEL_8:
      if ((v2 & 0x400) == 0) {
        goto LABEL_9;
      }
      goto LABEL_18;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 28);
  v3 |= 8u;
  *(_WORD *)(result + 48) = v3;
  *(_DWORD *)(result + 28) = v7;
  __int16 v2 = *(_WORD *)(a2 + 48);
  if ((v2 & 0x400) == 0)
  {
LABEL_9:
    if ((v2 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_19;
  }
LABEL_18:
  char v8 = *(unsigned char *)(a2 + 47);
  v3 |= 0x400u;
  *(_WORD *)(result + 48) = v3;
  *(unsigned char *)(result + 47) = v8;
  __int16 v2 = *(_WORD *)(a2 + 48);
  if ((v2 & 0x100) == 0)
  {
LABEL_10:
    if ((v2 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_20;
  }
LABEL_19:
  char v9 = *(unsigned char *)(a2 + 45);
  v3 |= 0x100u;
  *(_WORD *)(result + 48) = v3;
  *(unsigned char *)(result + 45) = v9;
  __int16 v2 = *(_WORD *)(a2 + 48);
  if ((v2 & 0x80) == 0)
  {
LABEL_11:
    if ((v2 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_21;
  }
LABEL_20:
  char v10 = *(unsigned char *)(a2 + 44);
  v3 |= 0x80u;
  *(_WORD *)(result + 48) = v3;
  *(unsigned char *)(result + 44) = v10;
  __int16 v2 = *(_WORD *)(a2 + 48);
  if ((v2 & 0x20) == 0)
  {
LABEL_12:
    if ((v2 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_22;
  }
LABEL_21:
  int v11 = *(_DWORD *)(a2 + 36);
  v3 |= 0x20u;
  *(_WORD *)(result + 48) = v3;
  *(_DWORD *)(result + 36) = v11;
  __int16 v2 = *(_WORD *)(a2 + 48);
  if ((v2 & 0x10) == 0)
  {
LABEL_13:
    if ((v2 & 4) == 0) {
      goto LABEL_14;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v12 = *(_DWORD *)(a2 + 32);
  v3 |= 0x10u;
  *(_WORD *)(result + 48) = v3;
  *(_DWORD *)(result + 32) = v12;
  __int16 v2 = *(_WORD *)(a2 + 48);
  if ((v2 & 4) == 0)
  {
LABEL_14:
    if ((v2 & 0x200) == 0) {
      return result;
    }
LABEL_24:
    char v14 = *(unsigned char *)(a2 + 46);
    *(_WORD *)(result + 48) = v3 | 0x200;
    *(unsigned char *)(result + 46) = v14;
    return result;
  }
LABEL_23:
  int v13 = *(_DWORD *)(a2 + 24);
  v3 |= 4u;
  *(_WORD *)(result + 48) = v3;
  *(_DWORD *)(result + 24) = v13;
  if ((*(_WORD *)(a2 + 48) & 0x200) != 0) {
    goto LABEL_24;
  }
  return result;
}

uint64_t sub_227BA7E24(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 48);
  if ((v5 & 0x80) != 0)
  {
    PB::TextFormatter::format(this, "activeCoex");
    __int16 v5 = *(_WORD *)(a1 + 48);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 0x100) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "avgTemperature", *(float *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 48);
  if ((v5 & 0x100) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "blackout");
  __int16 v5 = *(_WORD *)(a1 + 48);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "gradient", *(float *)(a1 + 28));
  __int16 v5 = *(_WORD *)(a1 + 48);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x200) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "instTemperature", *(float *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 48);
  if ((v5 & 0x200) == 0)
  {
LABEL_7:
    if ((v5 & 0x400) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "isSettle");
  __int16 v5 = *(_WORD *)(a1 + 48);
  if ((v5 & 0x400) == 0)
  {
LABEL_8:
    if ((v5 & 1) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "rapidGradientChange");
  __int16 v5 = *(_WORD *)(a1 + 48);
  if ((v5 & 1) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "startTime", *(double *)(a1 + 8));
  __int16 v5 = *(_WORD *)(a1 + 48);
  if ((v5 & 0x20) == 0)
  {
LABEL_10:
    if ((v5 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "state");
  __int16 v5 = *(_WORD *)(a1 + 48);
  if ((v5 & 0x40) == 0)
  {
LABEL_11:
    if ((v5 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_25:
  PB::TextFormatter::format(this, "temperature", *(float *)(a1 + 40));
  if ((*(_WORD *)(a1 + 48) & 2) != 0) {
LABEL_12:
  }
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 16));
LABEL_13:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BA7FC8(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 48) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_55;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_30;
            case 2u:
              *(_WORD *)(a1 + 48) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_55;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
LABEL_30:
              unint64_t v2 = *((void *)this + 1) + 8;
              goto LABEL_75;
            case 3u:
              *(_WORD *)(a1 + 48) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_55;
              }
              *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_74;
            case 4u:
              *(_WORD *)(a1 + 48) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_55;
              }
              *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_74;
            case 5u:
              *(_WORD *)(a1 + 48) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v22 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v21 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v22 = v21 != 0;
              }
              *(unsigned char *)(a1 + 47) = v22;
              goto LABEL_81;
            case 6u:
              *(_WORD *)(a1 + 48) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v24 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v23 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v24 = v23 != 0;
              }
              *(unsigned char *)(a1 + 45) = v24;
              goto LABEL_81;
            case 7u:
              *(_WORD *)(a1 + 48) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v26 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v25 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v26 = v25 != 0;
              }
              *(unsigned char *)(a1 + 44) = v26;
              goto LABEL_81;
            case 8u:
              *(_WORD *)(a1 + 48) |= 0x20u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v35 = 0;
                unsigned int v36 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_80;
                  }
                  unint64_t v37 = v27++;
                  char v38 = *(unsigned char *)(v28 + v37);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v38 & 0x7F) << v35;
                  if ((v38 & 0x80) == 0) {
                    break;
                  }
                  v35 += 7;
                  BOOL v14 = v36++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_79:
                    unint64_t v2 = v37 + 1;
                    goto LABEL_80;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_79;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_80;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_80:
              *(_DWORD *)(a1 + 36) = v31;
LABEL_81:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 9u:
              *(_WORD *)(a1 + 48) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_55;
              }
              *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_74;
            case 0xAu:
              *(_WORD *)(a1 + 48) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
LABEL_74:
                unint64_t v2 = *((void *)this + 1) + 4;
LABEL_75:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_55:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_81;
            case 0xBu:
              *(_WORD *)(a1 + 48) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v34 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v33 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v34 = v33 != 0;
              }
              *(unsigned char *)(a1 + 46) = v34;
              goto LABEL_81;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_81;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227BA84D0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 48);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 16));
    __int16 v4 = *(_WORD *)(v3 + 48);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      if ((v4 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v4 & 1) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
  __int16 v4 = *(_WORD *)(v3 + 48);
  if ((v4 & 0x40) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
  __int16 v4 = *(_WORD *)(v3 + 48);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x400) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
  __int16 v4 = *(_WORD *)(v3 + 48);
  if ((v4 & 0x400) == 0)
  {
LABEL_6:
    if ((v4 & 0x100) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 48);
  if ((v4 & 0x100) == 0)
  {
LABEL_7:
    if ((v4 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 48);
  if ((v4 & 0x80) == 0)
  {
LABEL_8:
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 48);
  if ((v4 & 0x20) == 0)
  {
LABEL_9:
    if ((v4 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 48);
  if ((v4 & 0x10) == 0)
  {
LABEL_10:
    if ((v4 & 4) == 0) {
      goto LABEL_11;
    }
LABEL_22:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
    if ((*(_WORD *)(v3 + 48) & 0x200) == 0) {
      return result;
    }
    goto LABEL_23;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
  __int16 v4 = *(_WORD *)(v3 + 48);
  if ((v4 & 4) != 0) {
    goto LABEL_22;
  }
LABEL_11:
  if ((v4 & 0x200) == 0) {
    return result;
  }
LABEL_23:

  return PB::Writer::write(this);
}

uint64_t sub_227BA863C(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC22AB0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void sub_227BA8664(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227BA869C(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC22AB0;
  *(_DWORD *)(result + 32) = 0;
  char v2 = *(unsigned char *)(a2 + 32);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 32) = 1;
    *(void *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 32) & 0x10) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 28);
    v3 |= 0x10u;
    *(unsigned char *)(result + 32) = v3;
    *(_DWORD *)(result + 28) = v5;
    char v2 = *(unsigned char *)(a2 + 32);
  }
LABEL_6:
  if ((v2 & 8) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 24);
    v3 |= 8u;
    *(unsigned char *)(result + 32) = v3;
    *(_DWORD *)(result + 24) = v6;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 4) == 0)
    {
LABEL_8:
      if ((v2 & 2) == 0) {
        return result;
      }
LABEL_12:
      int v8 = *(_DWORD *)(a2 + 16);
      *(unsigned char *)(result + 32) = v3 | 2;
      *(_DWORD *)(result + 16) = v8;
      return result;
    }
  }
  else if ((v2 & 4) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 20);
  v3 |= 4u;
  *(unsigned char *)(result + 32) = v3;
  *(_DWORD *)(result + 20) = v7;
  if ((*(unsigned char *)(a2 + 32) & 2) != 0) {
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_227BA8754(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "reserved");
    char v5 = *(unsigned char *)(a1 + 32);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 32) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "scaledValue");
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(this, "speedRange");
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(this, "speedThreshold");
  if (*(unsigned char *)(a1 + 32)) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "timestamp");
LABEL_7:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BA8838(uint64_t a1, PB::Reader *this)
{
  unint64_t v3 = *((void *)this + 1);
  unint64_t v2 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v3 < v2 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v3 > 0xFFFFFFFFFFFFFFF5 || v3 + 10 > v2)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v3 > v2) {
          unint64_t v2 = v3;
        }
        while (v2 != v3)
        {
          unint64_t v17 = v3 + 1;
          char v18 = *(unsigned char *)(v8 + v3);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v3 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v3 + 1;
          *((void *)this + 1) = v3 + 1;
          char v13 = *(unsigned char *)(v8 + v3);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v3 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 32) |= 1u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v51 = 0;
                unsigned int v52 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v3 = *((void *)this + 1);
                }
                else {
                  unint64_t v3 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v3 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_103;
                  }
                  unint64_t v53 = v20++;
                  char v54 = *(unsigned char *)(v21 + v53);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v54 & 0x7F) << v51;
                  if ((v54 & 0x80) == 0) {
                    break;
                  }
                  v51 += 7;
                  BOOL v14 = v52++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_102;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_102:
                unint64_t v3 = v53 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v3 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_103;
                  }
                  v22 += 7;
                  unint64_t v20 = v3;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_103:
              *(void *)(a1 + 8) = v24;
              goto LABEL_124;
            case 2u:
              *(unsigned char *)(a1 + 32) |= 0x10u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v55 = 0;
                unsigned int v56 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v3 = *((void *)this + 1);
                }
                else {
                  unint64_t v3 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v3 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_108;
                  }
                  unint64_t v57 = v27++;
                  char v58 = *(unsigned char *)(v28 + v57);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v58 & 0x7F) << v55;
                  if ((v58 & 0x80) == 0) {
                    break;
                  }
                  v55 += 7;
                  BOOL v14 = v56++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_107:
                    unint64_t v3 = v57 + 1;
                    goto LABEL_108;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_107;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v3 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_108;
                }
                v29 += 7;
                unint64_t v27 = v3;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_108:
              *(_DWORD *)(a1 + 28) = v31;
              goto LABEL_124;
            case 3u:
              *(unsigned char *)(a1 + 32) |= 8u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v59 = 0;
                unsigned int v60 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v3 = *((void *)this + 1);
                }
                else {
                  unint64_t v3 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v3 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_113;
                  }
                  unint64_t v61 = v33++;
                  char v62 = *(unsigned char *)(v34 + v61);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v62 & 0x7F) << v59;
                  if ((v62 & 0x80) == 0) {
                    break;
                  }
                  v59 += 7;
                  BOOL v14 = v60++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_112:
                    unint64_t v3 = v61 + 1;
                    goto LABEL_113;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_112;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v3 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_113;
                }
                v35 += 7;
                unint64_t v33 = v3;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_113:
              *(_DWORD *)(a1 + 24) = v37;
              goto LABEL_124;
            case 4u:
              *(unsigned char *)(a1 + 32) |= 4u;
              unint64_t v39 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v40 = *(void *)this;
              if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
              {
                char v63 = 0;
                unsigned int v64 = 0;
                uint64_t v43 = 0;
                if (v2 <= v39) {
                  unint64_t v3 = *((void *)this + 1);
                }
                else {
                  unint64_t v3 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v3 == v39)
                  {
                    LODWORD(v43) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_118;
                  }
                  unint64_t v65 = v39++;
                  char v66 = *(unsigned char *)(v40 + v65);
                  *((void *)this + 1) = v39;
                  v43 |= (unint64_t)(v66 & 0x7F) << v63;
                  if ((v66 & 0x80) == 0) {
                    break;
                  }
                  v63 += 7;
                  BOOL v14 = v64++ > 8;
                  if (v14)
                  {
                    LODWORD(v43) = 0;
LABEL_117:
                    unint64_t v3 = v65 + 1;
                    goto LABEL_118;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v43) = 0;
                }
                goto LABEL_117;
              }
              char v41 = 0;
              unsigned int v42 = 0;
              uint64_t v43 = 0;
              do
              {
                unint64_t v3 = v39 + 1;
                *((void *)this + 1) = v39 + 1;
                char v44 = *(unsigned char *)(v40 + v39);
                v43 |= (unint64_t)(v44 & 0x7F) << v41;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_118;
                }
                v41 += 7;
                unint64_t v39 = v3;
                BOOL v14 = v42++ > 8;
              }
              while (!v14);
              LODWORD(v43) = 0;
LABEL_118:
              *(_DWORD *)(a1 + 20) = v43;
              goto LABEL_124;
            case 5u:
              *(unsigned char *)(a1 + 32) |= 2u;
              unint64_t v45 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v46 = *(void *)this;
              if (v45 > 0xFFFFFFFFFFFFFFF5 || v45 + 10 > v2)
              {
                char v67 = 0;
                unsigned int v68 = 0;
                uint64_t v49 = 0;
                if (v2 <= v45) {
                  unint64_t v3 = *((void *)this + 1);
                }
                else {
                  unint64_t v3 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v3 == v45)
                  {
                    LODWORD(v49) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_123;
                  }
                  unint64_t v69 = v45++;
                  char v70 = *(unsigned char *)(v46 + v69);
                  *((void *)this + 1) = v45;
                  v49 |= (unint64_t)(v70 & 0x7F) << v67;
                  if ((v70 & 0x80) == 0) {
                    break;
                  }
                  v67 += 7;
                  BOOL v14 = v68++ > 8;
                  if (v14)
                  {
                    LODWORD(v49) = 0;
LABEL_122:
                    unint64_t v3 = v69 + 1;
                    goto LABEL_123;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v49) = 0;
                }
                goto LABEL_122;
              }
              char v47 = 0;
              unsigned int v48 = 0;
              uint64_t v49 = 0;
              do
              {
                unint64_t v3 = v45 + 1;
                *((void *)this + 1) = v45 + 1;
                char v50 = *(unsigned char *)(v46 + v45);
                v49 |= (unint64_t)(v50 & 0x7F) << v47;
                if ((v50 & 0x80) == 0) {
                  goto LABEL_123;
                }
                v47 += 7;
                unint64_t v45 = v3;
                BOOL v14 = v48++ > 8;
              }
              while (!v14);
              LODWORD(v49) = 0;
LABEL_123:
              *(_DWORD *)(a1 + 16) = v49;
LABEL_124:
              int v4 = *((unsigned __int8 *)this + 24);
              if (v3 >= v2 || *((unsigned char *)this + 24)) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v3 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              goto LABEL_124;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227BA8E58(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 32);
    if ((v4 & 0x10) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 32) & 0x10) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 8) == 0)
  {
LABEL_4:
    if ((v4 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(unsigned char *)(v3 + 32) & 2) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 4) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_11:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227BA8F1C(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC22AE8;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

void sub_227BA8F44(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227BA8F7C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC22AE8;
  *(_DWORD *)(a1 + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 28);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 28) = 1;
    *(void *)(a1 + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 28) & 0x10) != 0)
  {
LABEL_5:
    char v5 = *(unsigned char *)(a2 + 25);
    v3 |= 0x10u;
    *(unsigned char *)(a1 + 28) = v3;
    *(unsigned char *)(a1 + 25) = v5;
    char v2 = *(unsigned char *)(a2 + 28);
  }
LABEL_6:
  if ((v2 & 8) != 0)
  {
    char v6 = *(unsigned char *)(a2 + 24);
    v3 |= 8u;
    *(unsigned char *)(a1 + 28) = v3;
    *(unsigned char *)(a1 + 24) = v6;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 4) == 0)
    {
LABEL_8:
      if ((v2 & 2) == 0) {
        return result;
      }
LABEL_12:
      float result = *(float *)(a2 + 16);
      *(unsigned char *)(a1 + 28) = v3 | 2;
      *(float *)(a1 + 16) = result;
      return result;
    }
  }
  else if ((v2 & 4) == 0)
  {
    goto LABEL_8;
  }
  float result = *(float *)(a2 + 20);
  v3 |= 4u;
  *(unsigned char *)(a1 + 28) = v3;
  *(float *)(a1 + 20) = result;
  if ((*(unsigned char *)(a2 + 28) & 2) != 0) {
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_227BA9034(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "lux", *(float *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 28);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 28) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "minPostSUIProx", *(float *)(a1 + 20));
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(this, "possibleObstructed");
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(this, "resetTriggered");
  if (*(unsigned char *)(a1 + 28)) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "timestamp");
LABEL_7:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BA9118(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 28) |= 1u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v31 = 0;
                unsigned int v32 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_58;
                  }
                  unint64_t v33 = v20++;
                  char v34 = *(unsigned char *)(v21 + v33);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v34 & 0x7F) << v31;
                  if ((v34 & 0x80) == 0) {
                    break;
                  }
                  v31 += 7;
                  BOOL v14 = v32++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_57;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_57:
                unint64_t v2 = v33 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_58;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_58:
              *(void *)(a1 + 8) = v24;
              goto LABEL_59;
            case 2u:
              *(unsigned char *)(a1 + 28) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v28 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v27 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v28 = v27 != 0;
              }
              *(unsigned char *)(a1 + 25) = v28;
              goto LABEL_59;
            case 3u:
              *(unsigned char *)(a1 + 28) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v30 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v29 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v30 = v29 != 0;
              }
              *(unsigned char *)(a1 + 24) = v30;
              goto LABEL_59;
            case 4u:
              *(unsigned char *)(a1 + 28) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_40;
              }
              *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_53;
            case 5u:
              *(unsigned char *)(a1 + 28) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
LABEL_53:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_40:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_59;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
LABEL_59:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227BA9498(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 28);
    if ((v4 & 0x10) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 28) & 0x10) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this);
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 8) == 0)
  {
LABEL_4:
    if ((v4 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
    if ((*(unsigned char *)(v3 + 28) & 2) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = PB::Writer::write(this);
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 4) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_11:
  float v5 = *(float *)(v3 + 16);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227BA955C(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC22B20;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_227BA9580(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC22B20;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227BA9600(PB::Base *a1)
{
  sub_227BA9580(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227BA9638(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC22B20;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 20) = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  if (*(unsigned char *)(a2 + 20))
  {
    int v2 = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(result + 20) |= 1u;
    *(_DWORD *)(result + 16) = v2;
  }
  return result;
}

uint64_t sub_227BA9700(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 20)) {
    PB::TextFormatter::format(this, "batchedLocationFixType");
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BA9798(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v20 = *((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        uint64_t v22 = *(void *)this;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v21)
        {
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v25 = 0;
          if (v21 <= v20) {
            unint64_t v21 = *((void *)this + 1);
          }
          while (1)
          {
            if (v21 == v20)
            {
              LODWORD(v25) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_43;
            }
            unint64_t v31 = v20 + 1;
            char v32 = *(unsigned char *)(v22 + v20);
            *((void *)this + 1) = v31;
            v25 |= (unint64_t)(v32 & 0x7F) << v29;
            if ((v32 & 0x80) == 0) {
              break;
            }
            v29 += 7;
            unint64_t v20 = v31;
            BOOL v14 = v30++ > 8;
            if (v14)
            {
LABEL_39:
              LODWORD(v25) = 0;
              goto LABEL_43;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v25) = 0;
          }
        }
        else
        {
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          while (1)
          {
            unint64_t v26 = v20 + 1;
            *((void *)this + 1) = v20 + 1;
            char v27 = *(unsigned char *)(v22 + v20);
            v25 |= (unint64_t)(v27 & 0x7F) << v23;
            if ((v27 & 0x80) == 0) {
              break;
            }
            v23 += 7;
            unint64_t v20 = v26;
            BOOL v14 = v24++ > 8;
            if (v14) {
              goto LABEL_39;
            }
          }
        }
LABEL_43:
        *(_DWORD *)(a1 + 16) = v25;
      }
      else
      {
        if ((v11 >> 3) == 1) {
          operator new();
        }
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227BA9A84(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(const PB::Base **)(result + 8);
  if (v4) {
    uint64_t result = PB::Writer::writeSubmessage(this, v4);
  }
  if (*(unsigned char *)(v3 + 20))
  {
    return PB::Writer::writeVarInt(this);
  }
  return result;
}

uint64_t sub_227BA9AEC(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC22B58;
  *(_DWORD *)(result + 12) = 0;
  return result;
}

void sub_227BA9B14(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227BA9B4C(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC22B58;
  *(_DWORD *)(result + 12) = 0;
  if (*(unsigned char *)(a2 + 12))
  {
    char v2 = *(unsigned char *)(a2 + 8);
    *(unsigned char *)(result + 12) = 1;
    *(unsigned char *)(result + 8) = v2;
  }
  return result;
}

uint64_t sub_227BA9B88(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 12)) {
    PB::TextFormatter::format(this, "isBatterySaverModeEnabled");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BA9BE8(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 12) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
        if (v2 >= v3)
        {
          BOOL v21 = 0;
          *((unsigned char *)this + 24) = 1;
        }
        else
        {
          int v20 = *(unsigned __int8 *)(*(void *)this + v2++);
          *((void *)this + 1) = v2;
          BOOL v21 = v20 != 0;
        }
        *(unsigned char *)(a1 + 8) = v21;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227BA9D78(uint64_t result, PB::Writer *this)
{
  if (*(unsigned char *)(result + 12)) {
    return PB::Writer::write(this);
  }
  return result;
}

uint64_t sub_227BA9D98(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC22B90;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

void sub_227BA9DC0(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227BA9DF8(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC22B90;
  *(_DWORD *)(result + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 28);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 28) = 1;
    *(void *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 28) & 8) != 0)
  {
LABEL_5:
    char v5 = *(unsigned char *)(a2 + 24);
    v3 |= 8u;
    *(unsigned char *)(result + 28) = v3;
    *(unsigned char *)(result + 24) = v5;
    char v2 = *(unsigned char *)(a2 + 28);
  }
LABEL_6:
  if ((v2 & 0x10) != 0)
  {
    char v6 = *(unsigned char *)(a2 + 25);
    v3 |= 0x10u;
    *(unsigned char *)(result + 28) = v3;
    *(unsigned char *)(result + 25) = v6;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 4) == 0)
    {
LABEL_8:
      if ((v2 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_13;
    }
  }
  else if ((v2 & 4) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 20);
  v3 |= 4u;
  *(unsigned char *)(result + 28) = v3;
  *(_DWORD *)(result + 20) = v7;
  char v2 = *(unsigned char *)(a2 + 28);
  if ((v2 & 0x20) == 0)
  {
LABEL_9:
    if ((v2 & 2) == 0) {
      return result;
    }
LABEL_14:
    int v9 = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(result + 28) = v3 | 2;
    *(_DWORD *)(result + 16) = v9;
    return result;
  }
LABEL_13:
  char v8 = *(unsigned char *)(a2 + 26);
  v3 |= 0x20u;
  *(unsigned char *)(result + 28) = v3;
  *(unsigned char *)(result + 26) = v8;
  if ((*(unsigned char *)(a2 + 28) & 2) != 0) {
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_227BA9ECC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 8) != 0)
  {
    PB::TextFormatter::format(this, "charged");
    char v5 = *(unsigned char *)(a1 + 28);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((*(unsigned char *)(a1 + 28) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "chargerFamily");
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  PB::TextFormatter::format(this, "chargerType");
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(this, "connected");
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 1) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_15:
  PB::TextFormatter::format(this, "level", *(double *)(a1 + 8));
  if ((*(unsigned char *)(a1 + 28) & 0x20) != 0) {
LABEL_7:
  }
    PB::TextFormatter::format(this, "wasConnected");
LABEL_8:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BA9FD0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 28) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_78;
            case 2u:
              *(unsigned char *)(a1 + 28) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v22 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v21 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v22 = v21 != 0;
              }
              *(unsigned char *)(a1 + 24) = v22;
              goto LABEL_78;
            case 3u:
              *(unsigned char *)(a1 + 28) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v24 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v23 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v24 = v23 != 0;
              }
              *(unsigned char *)(a1 + 25) = v24;
              goto LABEL_78;
            case 4u:
              *(unsigned char *)(a1 + 28) |= 4u;
              unint64_t v25 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v26 = *(void *)this;
              if (v25 > 0xFFFFFFFFFFFFFFF5 || v25 + 10 > v2)
              {
                char v39 = 0;
                unsigned int v40 = 0;
                uint64_t v29 = 0;
                if (v2 <= v25) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v25)
                  {
                    LODWORD(v29) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_72;
                  }
                  unint64_t v41 = v25++;
                  char v42 = *(unsigned char *)(v26 + v41);
                  *((void *)this + 1) = v25;
                  v29 |= (unint64_t)(v42 & 0x7F) << v39;
                  if ((v42 & 0x80) == 0) {
                    break;
                  }
                  v39 += 7;
                  BOOL v14 = v40++ > 8;
                  if (v14)
                  {
                    LODWORD(v29) = 0;
LABEL_71:
                    unint64_t v2 = v41 + 1;
                    goto LABEL_72;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v29) = 0;
                }
                goto LABEL_71;
              }
              char v27 = 0;
              unsigned int v28 = 0;
              uint64_t v29 = 0;
              do
              {
                unint64_t v2 = v25 + 1;
                *((void *)this + 1) = v25 + 1;
                char v30 = *(unsigned char *)(v26 + v25);
                v29 |= (unint64_t)(v30 & 0x7F) << v27;
                if ((v30 & 0x80) == 0) {
                  goto LABEL_72;
                }
                v27 += 7;
                unint64_t v25 = v2;
                BOOL v14 = v28++ > 8;
              }
              while (!v14);
              LODWORD(v29) = 0;
LABEL_72:
              *(_DWORD *)(a1 + 20) = v29;
              goto LABEL_78;
            case 5u:
              *(unsigned char *)(a1 + 28) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v32 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v31 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v32 = v31 != 0;
              }
              *(unsigned char *)(a1 + 26) = v32;
              goto LABEL_78;
            case 6u:
              *(unsigned char *)(a1 + 28) |= 2u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v43 = 0;
                unsigned int v44 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_77;
                  }
                  unint64_t v45 = v33++;
                  char v46 = *(unsigned char *)(v34 + v45);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v46 & 0x7F) << v43;
                  if ((v46 & 0x80) == 0) {
                    break;
                  }
                  v43 += 7;
                  BOOL v14 = v44++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_76:
                    unint64_t v2 = v45 + 1;
                    goto LABEL_77;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_76;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_77;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_77:
              *(_DWORD *)(a1 + 16) = v37;
LABEL_78:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_78;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227BAA44C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 28);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((*(unsigned char *)(result + 28) & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this);
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 0x10) == 0)
  {
LABEL_4:
    if ((v4 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = PB::Writer::write(this);
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 0x20) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    uint64_t result = PB::Writer::write(this);
    if ((*(unsigned char *)(v3 + 28) & 2) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_11:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 0x20) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_13:

  return PB::Writer::writeVarInt(this);
}

void sub_227BAA52C(PB::Base *this)
{
  *(void *)this = &unk_26DC22BC8;
  uint64_t v2 = *((void *)this + 5);
  *((void *)this + 5) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 2) = v3;
    operator delete(v3);
  }

  PB::Base::~Base(this);
}

void sub_227BAA5C0(PB::Base *a1)
{
  sub_227BAA52C(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227BAA5F8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = &unk_26DC22BC8;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 52) = 0;
  if (*(void *)(a2 + 40)) {
    operator new();
  }
  if (a1 != a2) {
    sub_227B8B74C((char *)(a1 + 8), *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
  }
  char v4 = *(unsigned char *)(a2 + 52);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 32);
    *(unsigned char *)(a1 + 52) |= 1u;
    *(void *)(a1 + 32) = v5;
    char v4 = *(unsigned char *)(a2 + 52);
  }
  if ((v4 & 2) != 0)
  {
    char v6 = *(unsigned char *)(a2 + 48);
    *(unsigned char *)(a1 + 52) |= 2u;
    *(unsigned char *)(a1 + 48) = v6;
  }
  return a1;
}

uint64_t sub_227BAA70C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 52)) {
    PB::TextFormatter::format(this, "bioMotionTimestamp", *(double *)(a1 + 32));
  }
  uint64_t v5 = *(void *)(a1 + 40);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "pose");
  }
  if ((*(unsigned char *)(a1 + 52) & 2) != 0) {
    PB::TextFormatter::format(this, "runSmoother");
  }
  char v6 = *(double **)(a1 + 8);
  int v7 = *(double **)(a1 + 16);
  while (v6 != v7)
  {
    double v8 = *v6++;
    PB::TextFormatter::format(this, "velocity", v8);
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227BAA7F4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    double v8 = (void **)(a1 + 8);
    uint64_t v9 = a1 + 24;
    while (1)
    {
      uint64_t v10 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v11 = 0;
      unsigned int v12 = 0;
      unint64_t v13 = 0;
      while (1)
      {
        unint64_t v14 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v15 = *(unsigned char *)(v10 + v2);
        v13 |= (unint64_t)(v15 & 0x7F) << v11;
        if ((v15 & 0x80) == 0) {
          break;
        }
        v11 += 7;
        unint64_t v2 = v14;
        if (v12++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      if ((v13 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v13 >> 3))
      {
        case 1u:
          operator new();
        case 2u:
          if ((v13 & 7) == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v22 = *((void *)this + 1);
            unint64_t v23 = *((void *)this + 2);
            while (v22 < v23 && !*((unsigned char *)this + 24))
            {
              unint64_t v25 = *(char **)(a1 + 16);
              unint64_t v24 = *(void *)(a1 + 24);
              if ((unint64_t)v25 >= v24)
              {
                char v27 = (char *)*v8;
                uint64_t v28 = (v25 - (unsigned char *)*v8) >> 3;
                unint64_t v29 = v28 + 1;
                if ((unint64_t)(v28 + 1) >> 61) {
                  goto LABEL_88;
                }
                uint64_t v30 = v24 - (void)v27;
                if (v30 >> 2 > v29) {
                  unint64_t v29 = v30 >> 2;
                }
                if ((unint64_t)v30 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v31 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v31 = v29;
                }
                if (v31)
                {
                  BOOL v32 = (char *)sub_227B8B8B4(v9, v31);
                  char v27 = *(char **)(a1 + 8);
                  unint64_t v25 = *(char **)(a1 + 16);
                }
                else
                {
                  BOOL v32 = 0;
                }
                unint64_t v33 = &v32[8 * v28];
                *(void *)unint64_t v33 = 0;
                uint64_t v26 = v33 + 8;
                while (v25 != v27)
                {
                  uint64_t v34 = *((void *)v25 - 1);
                  v25 -= 8;
                  *((void *)v33 - 1) = v34;
                  v33 -= 8;
                }
                *(void *)(a1 + 8) = v33;
                *(void *)(a1 + 16) = v26;
                *(void *)(a1 + 24) = &v32[8 * v31];
                if (v27) {
                  operator delete(v27);
                }
              }
              else
              {
                *(void *)unint64_t v25 = 0;
                uint64_t v26 = v25 + 8;
              }
              *(void *)(a1 + 16) = v26;
              unint64_t v35 = *((void *)this + 1);
              if (v35 > 0xFFFFFFFFFFFFFFF7 || v35 + 8 > *((void *)this + 2))
              {
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v26 - 1) = *(void *)(*(void *)this + v35);
              unint64_t v23 = *((void *)this + 2);
              unint64_t v22 = *((void *)this + 1) + 8;
              *((void *)this + 1) = v22;
            }
            PB::Reader::recallMark();
          }
          else
          {
            char v42 = *(char **)(a1 + 16);
            unint64_t v41 = *(void *)(a1 + 24);
            if ((unint64_t)v42 >= v41)
            {
              unsigned int v44 = (char *)*v8;
              uint64_t v45 = (v42 - (unsigned char *)*v8) >> 3;
              unint64_t v46 = v45 + 1;
              if ((unint64_t)(v45 + 1) >> 61) {
LABEL_88:
              }
                sub_227B8B89C();
              uint64_t v47 = v41 - (void)v44;
              if (v47 >> 2 > v46) {
                unint64_t v46 = v47 >> 2;
              }
              if ((unint64_t)v47 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v48 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v48 = v46;
              }
              if (v48)
              {
                uint64_t v49 = (char *)sub_227B8B8B4(v9, v48);
                unsigned int v44 = *(char **)(a1 + 8);
                char v42 = *(char **)(a1 + 16);
              }
              else
              {
                uint64_t v49 = 0;
              }
              char v50 = &v49[8 * v45];
              *(void *)char v50 = 0;
              char v43 = v50 + 8;
              while (v42 != v44)
              {
                uint64_t v51 = *((void *)v42 - 1);
                v42 -= 8;
                *((void *)v50 - 1) = v51;
                v50 -= 8;
              }
              *(void *)(a1 + 8) = v50;
              *(void *)(a1 + 16) = v43;
              *(void *)(a1 + 24) = &v49[8 * v48];
              if (v44) {
                operator delete(v44);
              }
            }
            else
            {
              *(void *)char v42 = 0;
              char v43 = v42 + 8;
            }
            *(void *)(a1 + 16) = v43;
            unint64_t v52 = *((void *)this + 1);
            if (v52 <= 0xFFFFFFFFFFFFFFF7 && v52 + 8 <= *((void *)this + 2))
            {
              *(v43 - 1) = *(void *)(*(void *)this + v52);
LABEL_79:
              *((void *)this + 1) += 8;
            }
            else
            {
LABEL_77:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_80:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || *((unsigned char *)this + 24)) {
            return v4 == 0;
          }
          break;
        case 3u:
          *(unsigned char *)(a1 + 52) |= 1u;
          unint64_t v36 = *((void *)this + 1);
          if (v36 > 0xFFFFFFFFFFFFFFF7 || v36 + 8 > *((void *)this + 2)) {
            goto LABEL_77;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v36);
          goto LABEL_79;
        case 4u:
          *(unsigned char *)(a1 + 52) |= 2u;
          unint64_t v37 = *((void *)this + 1);
          if (v37 >= *((void *)this + 2))
          {
            BOOL v40 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v38 = v37 + 1;
            int v39 = *(unsigned __int8 *)(*(void *)this + v37);
            *((void *)this + 1) = v38;
            BOOL v40 = v39 != 0;
          }
          *(unsigned char *)(a1 + 48) = v40;
          goto LABEL_80;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_80;
      }
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v13 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v19 = v2 + 1;
      char v20 = *(unsigned char *)(v10 + v2);
      *((void *)this + 1) = v19;
      v13 |= (unint64_t)(v20 & 0x7F) << v17;
      if ((v20 & 0x80) == 0) {
        goto LABEL_21;
      }
      v17 += 7;
      unint64_t v2 = v19;
      if (v18++ >= 9)
      {
LABEL_20:
        unint64_t v13 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227BAACB0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(const PB::Base **)(result + 40);
  if (v4) {
    uint64_t result = PB::Writer::writeSubmessage(this, v4);
  }
  uint64_t v5 = *(double **)(v3 + 8);
  char v6 = *(double **)(v3 + 16);
  while (v5 != v6)
  {
    double v7 = *v5++;
    uint64_t result = PB::Writer::write(this, v7);
  }
  char v8 = *(unsigned char *)(v3 + 52);
  if (v8)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32));
    char v8 = *(unsigned char *)(v3 + 52);
  }
  if ((v8 & 2) != 0)
  {
    return PB::Writer::write(this);
  }
  return result;
}

void *sub_227BAAD5C(void *result)
{
  *uint64_t result = &unk_26DC22C00;
  result[1] = 0;
  return result;
}

void sub_227BAAD7C(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC22C00;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227BAADFC(PB::Base *a1)
{
  sub_227BAAD7C(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227BAAE34(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC22C00;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227BAAEDC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BAAF58(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227BAB178(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

uint64_t sub_227BAB194(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC22C38;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

void sub_227BAB1BC(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227BAB1F4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC22C38;
  *(_DWORD *)(a1 + 48) = 0;
  char v2 = *(unsigned char *)(a2 + 48);
  if ((v2 & 0x10) != 0)
  {
    double result = *(double *)(a2 + 40);
    char v3 = 16;
    *(unsigned char *)(a1 + 48) = 16;
    *(double *)(a1 + 40) = result;
    char v2 = *(unsigned char *)(a2 + 48);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 48) & 2) != 0)
  {
LABEL_5:
    double result = *(double *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(a1 + 48) = v3;
    *(double *)(a1 + 16) = result;
    char v2 = *(unsigned char *)(a2 + 48);
  }
LABEL_6:
  if ((v2 & 8) != 0)
  {
    double result = *(double *)(a2 + 32);
    v3 |= 8u;
    *(unsigned char *)(a1 + 48) = v3;
    *(double *)(a1 + 32) = result;
    char v2 = *(unsigned char *)(a2 + 48);
    if ((v2 & 4) == 0)
    {
LABEL_8:
      if ((v2 & 1) == 0) {
        return result;
      }
LABEL_12:
      double result = *(double *)(a2 + 8);
      *(unsigned char *)(a1 + 48) = v3 | 1;
      *(double *)(a1 + 8) = result;
      return result;
    }
  }
  else if ((v2 & 4) == 0)
  {
    goto LABEL_8;
  }
  double result = *(double *)(a2 + 24);
  v3 |= 4u;
  *(unsigned char *)(a1 + 48) = v3;
  *(double *)(a1 + 24) = result;
  if (*(unsigned char *)(a2 + 48)) {
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_227BAB2AC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 48);
  if (v5)
  {
    PB::TextFormatter::format(this, "probabilityGenericMotion", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 48);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 48) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "probabilityHeadMotion", *(double *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 48);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(this, "probabilityPedestrianMotion", *(double *)(a1 + 24));
  char v5 = *(unsigned char *)(a1 + 48);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(this, "probabilityTorsoMotion", *(double *)(a1 + 32));
  if ((*(unsigned char *)(a1 + 48) & 0x10) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 40));
LABEL_7:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BAB390(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 48) |= 0x10u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_38;
          }
          *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
          goto LABEL_40;
        case 2u:
          *(unsigned char *)(a1 + 48) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_38;
          }
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
          goto LABEL_40;
        case 3u:
          *(unsigned char *)(a1 + 48) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_38;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
          goto LABEL_40;
        case 4u:
          *(unsigned char *)(a1 + 48) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_38;
          }
          *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
          goto LABEL_40;
        case 5u:
          *(unsigned char *)(a1 + 48) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
LABEL_40:
            unint64_t v2 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_38:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227BAB644(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 48);
  if ((v4 & 0x10) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 40));
    char v4 = *(unsigned char *)(v3 + 48);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 48) & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  char v4 = *(unsigned char *)(v3 + 48);
  if ((v4 & 8) == 0)
  {
LABEL_4:
    if ((v4 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24));
    if ((*(unsigned char *)(v3 + 48) & 1) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32));
  char v4 = *(unsigned char *)(v3 + 48);
  if ((v4 & 4) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 1) == 0) {
    return result;
  }
LABEL_11:
  double v5 = *(double *)(v3 + 8);

  return PB::Writer::write(this, v5);
}

double sub_227BAB708(uint64_t a1)
{
  *(void *)a1 = &unk_26DC22C70;
  *(_DWORD *)(a1 + 144) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  return result;
}

void sub_227BAB748(PB::Base *this)
{
  *(void *)this = &unk_26DC22C70;
  unint64_t v2 = (void *)*((void *)this + 10);
  if (v2)
  {
    *((void *)this + 11) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 7);
  if (v3)
  {
    *((void *)this + 8) = v3;
    operator delete(v3);
  }
  char v4 = (void *)*((void *)this + 4);
  if (v4)
  {
    *((void *)this + 5) = v4;
    operator delete(v4);
  }
  double v5 = (void *)*((void *)this + 1);
  if (v5)
  {
    *((void *)this + 2) = v5;
    operator delete(v5);
  }

  PB::Base::~Base(this);
}

void sub_227BAB7DC(PB::Base *a1)
{
  sub_227BAB748(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227BAB814(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC22C70;
  *(_OWORD *)(a1 + 8) = 0u;
  char v4 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 56) = 0u;
  double v5 = (char *)(a1 + 56);
  *(_DWORD *)(a1 + 144) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  if ((*(unsigned char *)(a2 + 144) & 4) != 0)
  {
    uint64_t v6 = *(void *)(a2 + 120);
    *(unsigned char *)(a1 + 144) = 4;
    *(void *)(a1 + 120) = v6;
  }
  if (a1 != a2)
  {
    sub_227B8B74C((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 3);
    sub_227B8B74C((char *)(a1 + 80), *(char **)(a2 + 80), *(void *)(a2 + 88), (uint64_t)(*(void *)(a2 + 88) - *(void *)(a2 + 80)) >> 3);
    sub_227B8B74C(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
    sub_227B8B74C(v5, *(char **)(a2 + 56), *(void *)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 3);
  }
  char v7 = *(unsigned char *)(a2 + 144);
  if (v7)
  {
    uint64_t v10 = *(void *)(a2 + 104);
    *(unsigned char *)(a1 + 144) |= 1u;
    *(void *)(a1 + 104) = v10;
    char v7 = *(unsigned char *)(a2 + 144);
    if ((v7 & 2) == 0)
    {
LABEL_7:
      if ((v7 & 8) == 0) {
        goto LABEL_8;
      }
LABEL_13:
      uint64_t v12 = *(void *)(a2 + 128);
      *(unsigned char *)(a1 + 144) |= 8u;
      *(void *)(a1 + 128) = v12;
      if ((*(unsigned char *)(a2 + 144) & 0x10) == 0) {
        return a1;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(a2 + 144) & 2) == 0)
  {
    goto LABEL_7;
  }
  uint64_t v11 = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 144) |= 2u;
  *(void *)(a1 + 112) = v11;
  char v7 = *(unsigned char *)(a2 + 144);
  if ((v7 & 8) != 0) {
    goto LABEL_13;
  }
LABEL_8:
  if ((v7 & 0x10) != 0)
  {
LABEL_9:
    uint64_t v8 = *(void *)(a2 + 136);
    *(unsigned char *)(a1 + 144) |= 0x10u;
    *(void *)(a1 + 136) = v8;
  }
  return a1;
}

uint64_t sub_227BAB980(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  double v5 = *(double **)(a1 + 8);
  uint64_t v6 = *(double **)(a1 + 16);
  while (v5 != v6)
  {
    double v7 = *v5++;
    PB::TextFormatter::format(this, "centerOfRotationEstVars", v7);
  }
  uint64_t v8 = *(double **)(a1 + 32);
  char v9 = *(double **)(a1 + 40);
  while (v8 != v9)
  {
    double v10 = *v8++;
    PB::TextFormatter::format(this, "centerOfRotationEsts", v10);
  }
  uint64_t v11 = *(double **)(a1 + 56);
  uint64_t v12 = *(double **)(a1 + 64);
  while (v11 != v12)
  {
    double v13 = *v11++;
    PB::TextFormatter::format(this, "linkLengthEstVars", v13);
  }
  char v14 = *(double **)(a1 + 80);
  char v15 = *(double **)(a1 + 88);
  while (v14 != v15)
  {
    double v16 = *v14++;
    PB::TextFormatter::format(this, "linkLengthEsts", v16);
  }
  char v17 = *(unsigned char *)(a1 + 144);
  if (v17)
  {
    PB::TextFormatter::format(this, "positionResidualNormMean", *(double *)(a1 + 104));
    char v17 = *(unsigned char *)(a1 + 144);
    if ((v17 & 2) == 0)
    {
LABEL_11:
      if ((v17 & 4) == 0) {
        goto LABEL_12;
      }
      goto LABEL_20;
    }
  }
  else if ((*(unsigned char *)(a1 + 144) & 2) == 0)
  {
    goto LABEL_11;
  }
  PB::TextFormatter::format(this, "positionResidualNormVar", *(double *)(a1 + 112));
  char v17 = *(unsigned char *)(a1 + 144);
  if ((v17 & 4) == 0)
  {
LABEL_12:
    if ((v17 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 120));
  char v17 = *(unsigned char *)(a1 + 144);
  if ((v17 & 8) == 0)
  {
LABEL_13:
    if ((v17 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_21:
  PB::TextFormatter::format(this, "timestampBegin", *(double *)(a1 + 128));
  if ((*(unsigned char *)(a1 + 144) & 0x10) != 0) {
LABEL_14:
  }
    PB::TextFormatter::format(this, "timestampEnd", *(double *)(a1 + 136));
LABEL_15:

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227BABB24(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = (void **)(a1 + 56);
    char v9 = (void **)(a1 + 8);
    uint64_t v131 = a1 + 24;
    uint64_t v132 = a1 + 72;
    double v10 = (void **)(a1 + 80);
    uint64_t v11 = (void **)(a1 + 32);
    uint64_t v129 = a1 + 48;
    uint64_t v130 = a1 + 96;
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        if (v14++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v24 = v15 & 7;
      if (v24 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v15 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 144) |= 4u;
          unint64_t v25 = *((void *)this + 1);
          if (v25 > 0xFFFFFFFFFFFFFFF7 || v25 + 8 > *((void *)this + 2)) {
            goto LABEL_208;
          }
          *(void *)(a1 + 120) = *(void *)(*(void *)this + v25);
          goto LABEL_210;
        case 2u:
          if (v24 != 2)
          {
            char v87 = *(char **)(a1 + 40);
            unint64_t v86 = *(void *)(a1 + 48);
            if ((unint64_t)v87 >= v86)
            {
              char v95 = (char *)*v11;
              uint64_t v96 = (v87 - (unsigned char *)*v11) >> 3;
              unint64_t v97 = v96 + 1;
              if ((unint64_t)(v96 + 1) >> 61) {
LABEL_219:
              }
                sub_227B8B89C();
              uint64_t v98 = v86 - (void)v95;
              if (v98 >> 2 > v97) {
                unint64_t v97 = v98 >> 2;
              }
              if ((unint64_t)v98 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v99 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v99 = v97;
              }
              if (v99)
              {
                unint64_t v100 = (char *)sub_227B8B8B4(v129, v99);
                char v95 = *(char **)(a1 + 32);
                char v87 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v100 = 0;
              }
              uint64_t v119 = &v100[8 * v96];
              *(void *)uint64_t v119 = 0;
              unsigned int v88 = v119 + 8;
              while (v87 != v95)
              {
                uint64_t v120 = *((void *)v87 - 1);
                v87 -= 8;
                *((void *)v119 - 1) = v120;
                v119 -= 8;
              }
              *(void *)(a1 + 32) = v119;
              *(void *)(a1 + 40) = v88;
              *(void *)(a1 + 48) = &v100[8 * v99];
              if (v95) {
                operator delete(v95);
              }
            }
            else
            {
              *(void *)char v87 = 0;
              unsigned int v88 = v87 + 8;
            }
            *(void *)(a1 + 40) = v88;
            goto LABEL_206;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v26 = *((void *)this + 1);
          unint64_t v27 = *((void *)this + 2);
          while (v26 < v27 && !*((unsigned char *)this + 24))
          {
            unint64_t v29 = *(char **)(a1 + 40);
            unint64_t v28 = *(void *)(a1 + 48);
            if ((unint64_t)v29 >= v28)
            {
              unint64_t v31 = (char *)*v11;
              uint64_t v32 = (v29 - (unsigned char *)*v11) >> 3;
              unint64_t v33 = v32 + 1;
              if ((unint64_t)(v32 + 1) >> 61) {
                goto LABEL_219;
              }
              uint64_t v34 = v28 - (void)v31;
              if (v34 >> 2 > v33) {
                unint64_t v33 = v34 >> 2;
              }
              if ((unint64_t)v34 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v35 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v35 = v33;
              }
              if (v35)
              {
                unint64_t v36 = (char *)sub_227B8B8B4(v129, v35);
                unint64_t v31 = *(char **)(a1 + 32);
                unint64_t v29 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v36 = 0;
              }
              unint64_t v37 = &v36[8 * v32];
              *(void *)unint64_t v37 = 0;
              uint64_t v30 = v37 + 8;
              while (v29 != v31)
              {
                uint64_t v38 = *((void *)v29 - 1);
                v29 -= 8;
                *((void *)v37 - 1) = v38;
                v37 -= 8;
              }
              *(void *)(a1 + 32) = v37;
              *(void *)(a1 + 40) = v30;
              *(void *)(a1 + 48) = &v36[8 * v35];
              if (v31) {
                operator delete(v31);
              }
            }
            else
            {
              *(void *)unint64_t v29 = 0;
              uint64_t v30 = v29 + 8;
            }
            *(void *)(a1 + 40) = v30;
            unint64_t v39 = *((void *)this + 1);
            if (v39 > 0xFFFFFFFFFFFFFFF7 || v39 + 8 > *((void *)this + 2)) {
              goto LABEL_136;
            }
            *(v30 - 1) = *(void *)(*(void *)this + v39);
            unint64_t v27 = *((void *)this + 2);
            unint64_t v26 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v26;
          }
          goto LABEL_137;
        case 3u:
          if (v24 != 2)
          {
            unint64_t v90 = *(char **)(a1 + 88);
            unint64_t v89 = *(void *)(a1 + 96);
            if ((unint64_t)v90 >= v89)
            {
              unint64_t v101 = (char *)*v10;
              uint64_t v102 = (v90 - (unsigned char *)*v10) >> 3;
              unint64_t v103 = v102 + 1;
              if ((unint64_t)(v102 + 1) >> 61) {
LABEL_220:
              }
                sub_227B8B89C();
              uint64_t v104 = v89 - (void)v101;
              if (v104 >> 2 > v103) {
                unint64_t v103 = v104 >> 2;
              }
              if ((unint64_t)v104 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v105 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v105 = v103;
              }
              if (v105)
              {
                uint64_t v106 = (char *)sub_227B8B8B4(v130, v105);
                unint64_t v101 = *(char **)(a1 + 80);
                unint64_t v90 = *(char **)(a1 + 88);
              }
              else
              {
                uint64_t v106 = 0;
              }
              char v121 = &v106[8 * v102];
              *(void *)char v121 = 0;
              unsigned int v88 = v121 + 8;
              while (v90 != v101)
              {
                uint64_t v122 = *((void *)v90 - 1);
                v90 -= 8;
                *((void *)v121 - 1) = v122;
                v121 -= 8;
              }
              *(void *)(a1 + 80) = v121;
              *(void *)(a1 + 88) = v88;
              *(void *)(a1 + 96) = &v106[8 * v105];
              if (v101) {
                operator delete(v101);
              }
            }
            else
            {
              *(void *)unint64_t v90 = 0;
              unsigned int v88 = v90 + 8;
            }
            *(void *)(a1 + 88) = v88;
            goto LABEL_206;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v40 = *((void *)this + 1);
          unint64_t v41 = *((void *)this + 2);
          while (v40 < v41 && !*((unsigned char *)this + 24))
          {
            char v43 = *(char **)(a1 + 88);
            unint64_t v42 = *(void *)(a1 + 96);
            if ((unint64_t)v43 >= v42)
            {
              uint64_t v45 = (char *)*v10;
              uint64_t v46 = (v43 - (unsigned char *)*v10) >> 3;
              unint64_t v47 = v46 + 1;
              if ((unint64_t)(v46 + 1) >> 61) {
                goto LABEL_220;
              }
              uint64_t v48 = v42 - (void)v45;
              if (v48 >> 2 > v47) {
                unint64_t v47 = v48 >> 2;
              }
              if ((unint64_t)v48 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v49 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v49 = v47;
              }
              if (v49)
              {
                char v50 = (char *)sub_227B8B8B4(v130, v49);
                uint64_t v45 = *(char **)(a1 + 80);
                char v43 = *(char **)(a1 + 88);
              }
              else
              {
                char v50 = 0;
              }
              uint64_t v51 = &v50[8 * v46];
              *(void *)uint64_t v51 = 0;
              unsigned int v44 = v51 + 8;
              while (v43 != v45)
              {
                uint64_t v52 = *((void *)v43 - 1);
                v43 -= 8;
                *((void *)v51 - 1) = v52;
                v51 -= 8;
              }
              *(void *)(a1 + 80) = v51;
              *(void *)(a1 + 88) = v44;
              *(void *)(a1 + 96) = &v50[8 * v49];
              if (v45) {
                operator delete(v45);
              }
            }
            else
            {
              *(void *)char v43 = 0;
              unsigned int v44 = v43 + 8;
            }
            *(void *)(a1 + 88) = v44;
            unint64_t v53 = *((void *)this + 1);
            if (v53 > 0xFFFFFFFFFFFFFFF7 || v53 + 8 > *((void *)this + 2)) {
              goto LABEL_136;
            }
            *(v44 - 1) = *(void *)(*(void *)this + v53);
            unint64_t v41 = *((void *)this + 2);
            unint64_t v40 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v40;
          }
          goto LABEL_137;
        case 4u:
          if (v24 != 2)
          {
            unint64_t v92 = *(char **)(a1 + 16);
            unint64_t v91 = *(void *)(a1 + 24);
            if ((unint64_t)v92 >= v91)
            {
              unint64_t v107 = (char *)*v9;
              uint64_t v108 = (v92 - (unsigned char *)*v9) >> 3;
              unint64_t v109 = v108 + 1;
              if ((unint64_t)(v108 + 1) >> 61) {
LABEL_221:
              }
                sub_227B8B89C();
              uint64_t v110 = v91 - (void)v107;
              if (v110 >> 2 > v109) {
                unint64_t v109 = v110 >> 2;
              }
              if ((unint64_t)v110 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v111 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v111 = v109;
              }
              if (v111)
              {
                int v112 = (char *)sub_227B8B8B4(v131, v111);
                unint64_t v107 = *(char **)(a1 + 8);
                unint64_t v92 = *(char **)(a1 + 16);
              }
              else
              {
                int v112 = 0;
              }
              unint64_t v123 = &v112[8 * v108];
              *(void *)unint64_t v123 = 0;
              unsigned int v88 = v123 + 8;
              while (v92 != v107)
              {
                uint64_t v124 = *((void *)v92 - 1);
                v92 -= 8;
                *((void *)v123 - 1) = v124;
                v123 -= 8;
              }
              *(void *)(a1 + 8) = v123;
              *(void *)(a1 + 16) = v88;
              *(void *)(a1 + 24) = &v112[8 * v111];
              if (v107) {
                operator delete(v107);
              }
            }
            else
            {
              *(void *)unint64_t v92 = 0;
              unsigned int v88 = v92 + 8;
            }
            *(void *)(a1 + 16) = v88;
            goto LABEL_206;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v54 = *((void *)this + 1);
          unint64_t v55 = *((void *)this + 2);
          while (v54 < v55 && !*((unsigned char *)this + 24))
          {
            unint64_t v57 = *(char **)(a1 + 16);
            unint64_t v56 = *(void *)(a1 + 24);
            if ((unint64_t)v57 >= v56)
            {
              char v59 = (char *)*v9;
              uint64_t v60 = (v57 - (unsigned char *)*v9) >> 3;
              unint64_t v61 = v60 + 1;
              if ((unint64_t)(v60 + 1) >> 61) {
                goto LABEL_221;
              }
              uint64_t v62 = v56 - (void)v59;
              if (v62 >> 2 > v61) {
                unint64_t v61 = v62 >> 2;
              }
              if ((unint64_t)v62 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v63 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v63 = v61;
              }
              if (v63)
              {
                unsigned int v64 = (char *)sub_227B8B8B4(v131, v63);
                char v59 = *(char **)(a1 + 8);
                unint64_t v57 = *(char **)(a1 + 16);
              }
              else
              {
                unsigned int v64 = 0;
              }
              unint64_t v65 = &v64[8 * v60];
              *(void *)unint64_t v65 = 0;
              char v58 = v65 + 8;
              while (v57 != v59)
              {
                uint64_t v66 = *((void *)v57 - 1);
                v57 -= 8;
                *((void *)v65 - 1) = v66;
                v65 -= 8;
              }
              *(void *)(a1 + 8) = v65;
              *(void *)(a1 + 16) = v58;
              *(void *)(a1 + 24) = &v64[8 * v63];
              if (v59) {
                operator delete(v59);
              }
            }
            else
            {
              *(void *)unint64_t v57 = 0;
              char v58 = v57 + 8;
            }
            *(void *)(a1 + 16) = v58;
            unint64_t v67 = *((void *)this + 1);
            if (v67 > 0xFFFFFFFFFFFFFFF7 || v67 + 8 > *((void *)this + 2)) {
              goto LABEL_136;
            }
            *(v58 - 1) = *(void *)(*(void *)this + v67);
            unint64_t v55 = *((void *)this + 2);
            unint64_t v54 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v54;
          }
          goto LABEL_137;
        case 5u:
          if (v24 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v68 = *((void *)this + 1);
            unint64_t v69 = *((void *)this + 2);
            while (v68 < v69 && !*((unsigned char *)this + 24))
            {
              unint64_t v71 = *(char **)(a1 + 64);
              unint64_t v70 = *(void *)(a1 + 72);
              if ((unint64_t)v71 >= v70)
              {
                char v73 = (char *)*v8;
                uint64_t v74 = (v71 - (unsigned char *)*v8) >> 3;
                unint64_t v75 = v74 + 1;
                if ((unint64_t)(v74 + 1) >> 61) {
                  goto LABEL_222;
                }
                uint64_t v76 = v70 - (void)v73;
                if (v76 >> 2 > v75) {
                  unint64_t v75 = v76 >> 2;
                }
                if ((unint64_t)v76 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v77 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v77 = v75;
                }
                if (v77)
                {
                  uint64_t v78 = (char *)sub_227B8B8B4(v132, v77);
                  char v73 = *(char **)(a1 + 56);
                  unint64_t v71 = *(char **)(a1 + 64);
                }
                else
                {
                  uint64_t v78 = 0;
                }
                unint64_t v79 = &v78[8 * v74];
                *(void *)unint64_t v79 = 0;
                unint64_t v72 = v79 + 8;
                while (v71 != v73)
                {
                  uint64_t v80 = *((void *)v71 - 1);
                  v71 -= 8;
                  *((void *)v79 - 1) = v80;
                  v79 -= 8;
                }
                *(void *)(a1 + 56) = v79;
                *(void *)(a1 + 64) = v72;
                *(void *)(a1 + 72) = &v78[8 * v77];
                if (v73) {
                  operator delete(v73);
                }
              }
              else
              {
                *(void *)unint64_t v71 = 0;
                unint64_t v72 = v71 + 8;
              }
              *(void *)(a1 + 64) = v72;
              unint64_t v81 = *((void *)this + 1);
              if (v81 > 0xFFFFFFFFFFFFFFF7 || v81 + 8 > *((void *)this + 2))
              {
LABEL_136:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v72 - 1) = *(void *)(*(void *)this + v81);
              unint64_t v69 = *((void *)this + 2);
              unint64_t v68 = *((void *)this + 1) + 8;
              *((void *)this + 1) = v68;
            }
LABEL_137:
            PB::Reader::recallMark();
          }
          else
          {
            uint64_t v94 = *(char **)(a1 + 64);
            unint64_t v93 = *(void *)(a1 + 72);
            if ((unint64_t)v94 >= v93)
            {
              unint64_t v113 = (char *)*v8;
              uint64_t v114 = (v94 - (unsigned char *)*v8) >> 3;
              unint64_t v115 = v114 + 1;
              if ((unint64_t)(v114 + 1) >> 61) {
LABEL_222:
              }
                sub_227B8B89C();
              uint64_t v116 = v93 - (void)v113;
              if (v116 >> 2 > v115) {
                unint64_t v115 = v116 >> 2;
              }
              if ((unint64_t)v116 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v117 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v117 = v115;
              }
              if (v117)
              {
                unsigned int v118 = (char *)sub_227B8B8B4(v132, v117);
                unint64_t v113 = *(char **)(a1 + 56);
                uint64_t v94 = *(char **)(a1 + 64);
              }
              else
              {
                unsigned int v118 = 0;
              }
              unint64_t v125 = &v118[8 * v114];
              *(void *)unint64_t v125 = 0;
              unsigned int v88 = v125 + 8;
              while (v94 != v113)
              {
                uint64_t v126 = *((void *)v94 - 1);
                v94 -= 8;
                *((void *)v125 - 1) = v126;
                v125 -= 8;
              }
              *(void *)(a1 + 56) = v125;
              *(void *)(a1 + 64) = v88;
              *(void *)(a1 + 72) = &v118[8 * v117];
              if (v113) {
                operator delete(v113);
              }
            }
            else
            {
              *(void *)uint64_t v94 = 0;
              unsigned int v88 = v94 + 8;
            }
            *(void *)(a1 + 64) = v88;
LABEL_206:
            unint64_t v127 = *((void *)this + 1);
            if (v127 <= 0xFFFFFFFFFFFFFFF7 && v127 + 8 <= *((void *)this + 2))
            {
              *(v88 - 1) = *(void *)(*(void *)this + v127);
LABEL_210:
              *((void *)this + 1) += 8;
            }
            else
            {
LABEL_208:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_211:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || *((unsigned char *)this + 24)) {
            return v4 == 0;
          }
          break;
        case 6u:
          *(unsigned char *)(a1 + 144) |= 1u;
          unint64_t v82 = *((void *)this + 1);
          if (v82 > 0xFFFFFFFFFFFFFFF7 || v82 + 8 > *((void *)this + 2)) {
            goto LABEL_208;
          }
          *(void *)(a1 + 104) = *(void *)(*(void *)this + v82);
          goto LABEL_210;
        case 7u:
          *(unsigned char *)(a1 + 144) |= 2u;
          unint64_t v83 = *((void *)this + 1);
          if (v83 > 0xFFFFFFFFFFFFFFF7 || v83 + 8 > *((void *)this + 2)) {
            goto LABEL_208;
          }
          *(void *)(a1 + 112) = *(void *)(*(void *)this + v83);
          goto LABEL_210;
        case 8u:
          *(unsigned char *)(a1 + 144) |= 8u;
          unint64_t v84 = *((void *)this + 1);
          if (v84 > 0xFFFFFFFFFFFFFFF7 || v84 + 8 > *((void *)this + 2)) {
            goto LABEL_208;
          }
          *(void *)(a1 + 128) = *(void *)(*(void *)this + v84);
          goto LABEL_210;
        case 9u:
          *(unsigned char *)(a1 + 144) |= 0x10u;
          unint64_t v85 = *((void *)this + 1);
          if (v85 > 0xFFFFFFFFFFFFFFF7 || v85 + 8 > *((void *)this + 2)) {
            goto LABEL_208;
          }
          *(void *)(a1 + 136) = *(void *)(*(void *)this + v85);
          goto LABEL_210;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_211;
      }
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v15 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v21 = v2 + 1;
      char v22 = *(unsigned char *)(v12 + v2);
      *((void *)this + 1) = v21;
      v15 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0) {
        goto LABEL_21;
      }
      v19 += 7;
      unint64_t v2 = v21;
      if (v20++ >= 9)
      {
LABEL_20:
        unint64_t v15 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227BAC518(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  if ((*(unsigned char *)(result + 144) & 4) != 0) {
    double result = PB::Writer::write(this, *(double *)(result + 120));
  }
  int v4 = *(double **)(v3 + 32);
  double v5 = *(double **)(v3 + 40);
  while (v4 != v5)
  {
    double v6 = *v4++;
    double result = PB::Writer::write(this, v6);
  }
  double v7 = *(double **)(v3 + 80);
  uint64_t v8 = *(double **)(v3 + 88);
  while (v7 != v8)
  {
    double v9 = *v7++;
    double result = PB::Writer::write(this, v9);
  }
  double v10 = *(double **)(v3 + 8);
  uint64_t v11 = *(double **)(v3 + 16);
  while (v10 != v11)
  {
    double v12 = *v10++;
    double result = PB::Writer::write(this, v12);
  }
  char v13 = *(double **)(v3 + 56);
  unsigned int v14 = *(double **)(v3 + 64);
  while (v13 != v14)
  {
    double v15 = *v13++;
    double result = PB::Writer::write(this, v15);
  }
  char v16 = *(unsigned char *)(v3 + 144);
  if (v16)
  {
    double result = PB::Writer::write(this, *(double *)(v3 + 104));
    char v16 = *(unsigned char *)(v3 + 144);
    if ((v16 & 2) == 0)
    {
LABEL_17:
      if ((v16 & 8) == 0) {
        goto LABEL_18;
      }
LABEL_22:
      double result = PB::Writer::write(this, *(double *)(v3 + 128));
      if ((*(unsigned char *)(v3 + 144) & 0x10) == 0) {
        return result;
      }
      goto LABEL_23;
    }
  }
  else if ((*(unsigned char *)(v3 + 144) & 2) == 0)
  {
    goto LABEL_17;
  }
  double result = PB::Writer::write(this, *(double *)(v3 + 112));
  char v16 = *(unsigned char *)(v3 + 144);
  if ((v16 & 8) != 0) {
    goto LABEL_22;
  }
LABEL_18:
  if ((v16 & 0x10) == 0) {
    return result;
  }
LABEL_23:
  double v17 = *(double *)(v3 + 136);

  return PB::Writer::write(this, v17);
}

uint64_t sub_227BAC664(uint64_t result)
{
  *(void *)double result = &unk_26DC22CA8;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_227BAC68C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227BAC6C4(uint64_t result, uint64_t a2)
{
  *(void *)double result = &unk_26DC22CA8;
  *(_DWORD *)(result + 20) = 0;
  char v2 = *(unsigned char *)(a2 + 20);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 20) = 1;
    *(void *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 20);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
LABEL_5:
    char v5 = *(unsigned char *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(result + 20) = v3;
    *(unsigned char *)(result + 16) = v5;
    char v2 = *(unsigned char *)(a2 + 20);
  }
LABEL_6:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      return result;
    }
LABEL_10:
    char v7 = *(unsigned char *)(a2 + 18);
    *(unsigned char *)(result + 20) = v3 | 8;
    *(unsigned char *)(result + 18) = v7;
    return result;
  }
  char v6 = *(unsigned char *)(a2 + 17);
  v3 |= 4u;
  *(unsigned char *)(result + 20) = v3;
  *(unsigned char *)(result + 17) = v6;
  if ((*(unsigned char *)(a2 + 20) & 8) != 0) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_227BAC760(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if (v5)
  {
    PB::TextFormatter::format(this, "timestampEnd", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 20);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 20) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "updatedLinkLengthX");
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "updatedLinkLengthY");
  if ((*(unsigned char *)(a1 + 20) & 8) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "updatedLinkLengthZ");
LABEL_6:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BAC824(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          if (v10++ > 8) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 20) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_40;
            case 2u:
              *(unsigned char *)(a1 + 20) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v22 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v21 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v22 = v21 != 0;
              }
              *(unsigned char *)(a1 + 16) = v22;
              goto LABEL_40;
            case 3u:
              *(unsigned char *)(a1 + 20) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v24 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v23 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v24 = v23 != 0;
              }
              *(unsigned char *)(a1 + 17) = v24;
              goto LABEL_40;
            case 4u:
              *(unsigned char *)(a1 + 20) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v26 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v25 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v26 = v25 != 0;
              }
              *(unsigned char *)(a1 + 18) = v26;
              goto LABEL_40;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
LABEL_40:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || *((unsigned char *)this + 24)) {
                return v4 == 0;
              }
              continue;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227BACAC0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 20);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::write(this);
      if ((*(unsigned char *)(v3 + 20) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 20) & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this);
  char v4 = *(unsigned char *)(v3 + 20);
  if ((v4 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 8) == 0) {
    return result;
  }
LABEL_9:

  return PB::Writer::write(this);
}

double sub_227BACB68(uint64_t a1)
{
  *(void *)a1 = &unk_26DC22CE0;
  *(_DWORD *)(a1 + 144) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(void *)(a1 + 120) = 0;
  return result;
}

void sub_227BACBB0(PB::Base *this)
{
  *(void *)this = &unk_26DC22CE0;
  unint64_t v2 = (void *)*((void *)this + 13);
  if (v2)
  {
    *((void *)this + 14) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 10);
  if (v3)
  {
    *((void *)this + 11) = v3;
    operator delete(v3);
  }
  char v4 = (void *)*((void *)this + 7);
  if (v4)
  {
    *((void *)this + 8) = v4;
    operator delete(v4);
  }
  char v5 = (void *)*((void *)this + 4);
  if (v5)
  {
    *((void *)this + 5) = v5;
    operator delete(v5);
  }
  char v6 = (void *)*((void *)this + 1);
  if (v6)
  {
    *((void *)this + 2) = v6;
    operator delete(v6);
  }

  PB::Base::~Base(this);
}

void sub_227BACC54(PB::Base *a1)
{
  sub_227BACBB0(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227BACC8C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC22CE0;
  *(_OWORD *)(a1 + 8) = 0u;
  char v4 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_DWORD *)(a1 + 144) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(void *)(a1 + 120) = 0;
  if (a1 != a2)
  {
    sub_227B8B74C(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
    sub_227B8B74C((char *)(a1 + 56), *(char **)(a2 + 56), *(void *)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 3);
    sub_227B8B74C((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 3);
    sub_227B8B74C((char *)(a1 + 80), *(char **)(a2 + 80), *(void *)(a2 + 88), (uint64_t)(*(void *)(a2 + 88) - *(void *)(a2 + 80)) >> 3);
    sub_227B8B74C((char *)(a1 + 104), *(char **)(a2 + 104), *(void *)(a2 + 112), (uint64_t)(*(void *)(a2 + 112) - *(void *)(a2 + 104)) >> 3);
  }
  char v5 = *(unsigned char *)(a2 + 144);
  if ((v5 & 4) == 0)
  {
    if ((*(unsigned char *)(a2 + 144) & 1) == 0) {
      goto LABEL_5;
    }
LABEL_9:
    uint64_t v9 = *(void *)(a2 + 128);
    *(unsigned char *)(a1 + 144) |= 1u;
    *(void *)(a1 + 128) = v9;
    if ((*(unsigned char *)(a2 + 144) & 2) == 0) {
      return a1;
    }
    goto LABEL_6;
  }
  int v8 = *(_DWORD *)(a2 + 140);
  *(unsigned char *)(a1 + 144) |= 4u;
  *(_DWORD *)(a1 + 140) = v8;
  char v5 = *(unsigned char *)(a2 + 144);
  if (v5) {
    goto LABEL_9;
  }
LABEL_5:
  if ((v5 & 2) != 0)
  {
LABEL_6:
    int v6 = *(_DWORD *)(a2 + 136);
    *(unsigned char *)(a1 + 144) |= 2u;
    *(_DWORD *)(a1 + 136) = v6;
  }
  return a1;
}

uint64_t sub_227BACDD8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(double **)(a1 + 8);
  int v6 = *(double **)(a1 + 16);
  while (v5 != v6)
  {
    double v7 = *v5++;
    PB::TextFormatter::format(this, "attitude", v7);
  }
  if ((*(unsigned char *)(a1 + 144) & 2) != 0) {
    PB::TextFormatter::format(this, "modelType");
  }
  int v8 = *(double **)(a1 + 32);
  uint64_t v9 = *(double **)(a1 + 40);
  while (v8 != v9)
  {
    double v10 = *v8++;
    PB::TextFormatter::format(this, "rotationRate", v10);
  }
  char v11 = *(unsigned char *)(a1 + 144);
  if ((v11 & 4) != 0)
  {
    PB::TextFormatter::format(this, "status");
    char v11 = *(unsigned char *)(a1 + 144);
  }
  if (v11) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 128));
  }
  unint64_t v12 = *(double **)(a1 + 56);
  char v13 = *(double **)(a1 + 64);
  while (v12 != v13)
  {
    double v14 = *v12++;
    PB::TextFormatter::format(this, "translation", v14);
  }
  char v15 = *(double **)(a1 + 80);
  unsigned int v16 = *(double **)(a1 + 88);
  while (v15 != v16)
  {
    double v17 = *v15++;
    PB::TextFormatter::format(this, "userAcceleration", v17);
  }
  char v18 = *(double **)(a1 + 104);
  char v19 = *(double **)(a1 + 112);
  while (v18 != v19)
  {
    double v20 = *v18++;
    PB::TextFormatter::format(this, "velocity", v20);
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227BACF5C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    int v8 = (void **)(a1 + 104);
    uint64_t v9 = (void **)(a1 + 80);
    uint64_t v178 = a1 + 96;
    uint64_t v179 = a1 + 120;
    double v10 = (void **)(a1 + 32);
    char v11 = (void **)(a1 + 56);
    uint64_t v176 = a1 + 72;
    uint64_t v177 = a1 + 48;
    unint64_t v12 = (void **)(a1 + 8);
    uint64_t v175 = a1 + 24;
    while (1)
    {
      uint64_t v13 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v14 = 0;
      unsigned int v15 = 0;
      unint64_t v16 = 0;
      while (1)
      {
        unint64_t v17 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v18 = *(unsigned char *)(v13 + v2);
        v16 |= (unint64_t)(v18 & 0x7F) << v14;
        if ((v18 & 0x80) == 0) {
          break;
        }
        v14 += 7;
        unint64_t v2 = v17;
        BOOL v19 = v15++ > 8;
        if (v19) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v25 = v16 & 7;
      if (v25 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v16 >> 3))
      {
        case 1u:
          if (v25 != 2)
          {
            uint64_t v114 = *(char **)(a1 + 16);
            unint64_t v113 = *(void *)(a1 + 24);
            if ((unint64_t)v114 >= v113)
            {
              uint64_t v132 = (char *)*v12;
              uint64_t v133 = (v114 - (unsigned char *)*v12) >> 3;
              unint64_t v134 = v133 + 1;
              if ((unint64_t)(v133 + 1) >> 61) {
LABEL_286:
              }
                sub_227B8B89C();
              uint64_t v135 = v113 - (void)v132;
              if (v135 >> 2 > v134) {
                unint64_t v134 = v135 >> 2;
              }
              if ((unint64_t)v135 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v136 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v136 = v134;
              }
              if (v136)
              {
                unint64_t v137 = (char *)sub_227B8B8B4(v175, v136);
                uint64_t v132 = *(char **)(a1 + 8);
                uint64_t v114 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v137 = 0;
              }
              char v162 = &v137[8 * v133];
              *(void *)char v162 = 0;
              unint64_t v115 = v162 + 8;
              while (v114 != v132)
              {
                uint64_t v163 = *((void *)v114 - 1);
                v114 -= 8;
                *((void *)v162 - 1) = v163;
                v162 -= 8;
              }
              *(void *)(a1 + 8) = v162;
              *(void *)(a1 + 16) = v115;
              *(void *)(a1 + 24) = &v137[8 * v136];
              if (v132) {
                operator delete(v132);
              }
            }
            else
            {
              *(void *)uint64_t v114 = 0;
              unint64_t v115 = v114 + 8;
            }
            *(void *)(a1 + 16) = v115;
            goto LABEL_271;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v26 = *((void *)this + 1);
          unint64_t v27 = *((void *)this + 2);
          while (v26 < v27 && !*((unsigned char *)this + 24))
          {
            unint64_t v29 = *(char **)(a1 + 16);
            unint64_t v28 = *(void *)(a1 + 24);
            if ((unint64_t)v29 >= v28)
            {
              unint64_t v31 = (char *)*v12;
              uint64_t v32 = (v29 - (unsigned char *)*v12) >> 3;
              unint64_t v33 = v32 + 1;
              if ((unint64_t)(v32 + 1) >> 61) {
                goto LABEL_286;
              }
              uint64_t v34 = v28 - (void)v31;
              if (v34 >> 2 > v33) {
                unint64_t v33 = v34 >> 2;
              }
              if ((unint64_t)v34 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v35 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v35 = v33;
              }
              if (v35)
              {
                unint64_t v36 = (char *)sub_227B8B8B4(v175, v35);
                unint64_t v31 = *(char **)(a1 + 8);
                unint64_t v29 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v36 = 0;
              }
              unint64_t v37 = &v36[8 * v32];
              *(void *)unint64_t v37 = 0;
              uint64_t v30 = v37 + 8;
              while (v29 != v31)
              {
                uint64_t v38 = *((void *)v29 - 1);
                v29 -= 8;
                *((void *)v37 - 1) = v38;
                v37 -= 8;
              }
              *(void *)(a1 + 8) = v37;
              *(void *)(a1 + 16) = v30;
              *(void *)(a1 + 24) = &v36[8 * v35];
              if (v31) {
                operator delete(v31);
              }
            }
            else
            {
              *(void *)unint64_t v29 = 0;
              uint64_t v30 = v29 + 8;
            }
            *(void *)(a1 + 16) = v30;
            unint64_t v39 = *((void *)this + 1);
            if (v39 > 0xFFFFFFFFFFFFFFF7 || v39 + 8 > *((void *)this + 2)) {
              goto LABEL_162;
            }
            *(v30 - 1) = *(void *)(*(void *)this + v39);
            unint64_t v27 = *((void *)this + 2);
            unint64_t v26 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v26;
          }
          goto LABEL_163;
        case 2u:
          if (v25 != 2)
          {
            unint64_t v117 = *(char **)(a1 + 64);
            unint64_t v116 = *(void *)(a1 + 72);
            if ((unint64_t)v117 >= v116)
            {
              char v138 = (char *)*v11;
              uint64_t v139 = (v117 - (unsigned char *)*v11) >> 3;
              unint64_t v140 = v139 + 1;
              if ((unint64_t)(v139 + 1) >> 61) {
LABEL_287:
              }
                sub_227B8B89C();
              uint64_t v141 = v116 - (void)v138;
              if (v141 >> 2 > v140) {
                unint64_t v140 = v141 >> 2;
              }
              if ((unint64_t)v141 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v142 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v142 = v140;
              }
              if (v142)
              {
                unint64_t v143 = (char *)sub_227B8B8B4(v176, v142);
                char v138 = *(char **)(a1 + 56);
                unint64_t v117 = *(char **)(a1 + 64);
              }
              else
              {
                unint64_t v143 = 0;
              }
              uint64_t v164 = &v143[8 * v139];
              *(void *)uint64_t v164 = 0;
              unint64_t v115 = v164 + 8;
              while (v117 != v138)
              {
                uint64_t v165 = *((void *)v117 - 1);
                v117 -= 8;
                *((void *)v164 - 1) = v165;
                v164 -= 8;
              }
              *(void *)(a1 + 56) = v164;
              *(void *)(a1 + 64) = v115;
              *(void *)(a1 + 72) = &v143[8 * v142];
              if (v138) {
                operator delete(v138);
              }
            }
            else
            {
              *(void *)unint64_t v117 = 0;
              unint64_t v115 = v117 + 8;
            }
            *(void *)(a1 + 64) = v115;
            goto LABEL_271;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v40 = *((void *)this + 1);
          unint64_t v41 = *((void *)this + 2);
          while (v40 < v41 && !*((unsigned char *)this + 24))
          {
            char v43 = *(char **)(a1 + 64);
            unint64_t v42 = *(void *)(a1 + 72);
            if ((unint64_t)v43 >= v42)
            {
              uint64_t v45 = (char *)*v11;
              uint64_t v46 = (v43 - (unsigned char *)*v11) >> 3;
              unint64_t v47 = v46 + 1;
              if ((unint64_t)(v46 + 1) >> 61) {
                goto LABEL_287;
              }
              uint64_t v48 = v42 - (void)v45;
              if (v48 >> 2 > v47) {
                unint64_t v47 = v48 >> 2;
              }
              if ((unint64_t)v48 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v49 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v49 = v47;
              }
              if (v49)
              {
                char v50 = (char *)sub_227B8B8B4(v176, v49);
                uint64_t v45 = *(char **)(a1 + 56);
                char v43 = *(char **)(a1 + 64);
              }
              else
              {
                char v50 = 0;
              }
              uint64_t v51 = &v50[8 * v46];
              *(void *)uint64_t v51 = 0;
              unsigned int v44 = v51 + 8;
              while (v43 != v45)
              {
                uint64_t v52 = *((void *)v43 - 1);
                v43 -= 8;
                *((void *)v51 - 1) = v52;
                v51 -= 8;
              }
              *(void *)(a1 + 56) = v51;
              *(void *)(a1 + 64) = v44;
              *(void *)(a1 + 72) = &v50[8 * v49];
              if (v45) {
                operator delete(v45);
              }
            }
            else
            {
              *(void *)char v43 = 0;
              unsigned int v44 = v43 + 8;
            }
            *(void *)(a1 + 64) = v44;
            unint64_t v53 = *((void *)this + 1);
            if (v53 > 0xFFFFFFFFFFFFFFF7 || v53 + 8 > *((void *)this + 2)) {
              goto LABEL_162;
            }
            *(v44 - 1) = *(void *)(*(void *)this + v53);
            unint64_t v41 = *((void *)this + 2);
            unint64_t v40 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v40;
          }
          goto LABEL_163;
        case 3u:
          if (v25 != 2)
          {
            uint64_t v119 = *(char **)(a1 + 40);
            unint64_t v118 = *(void *)(a1 + 48);
            if ((unint64_t)v119 >= v118)
            {
              char v144 = (char *)*v10;
              uint64_t v145 = (v119 - (unsigned char *)*v10) >> 3;
              unint64_t v146 = v145 + 1;
              if ((unint64_t)(v145 + 1) >> 61) {
LABEL_288:
              }
                sub_227B8B89C();
              uint64_t v147 = v118 - (void)v144;
              if (v147 >> 2 > v146) {
                unint64_t v146 = v147 >> 2;
              }
              if ((unint64_t)v147 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v148 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v148 = v146;
              }
              if (v148)
              {
                unint64_t v149 = (char *)sub_227B8B8B4(v177, v148);
                char v144 = *(char **)(a1 + 32);
                uint64_t v119 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v149 = 0;
              }
              uint64_t v166 = &v149[8 * v145];
              *(void *)uint64_t v166 = 0;
              unint64_t v115 = v166 + 8;
              while (v119 != v144)
              {
                uint64_t v167 = *((void *)v119 - 1);
                v119 -= 8;
                *((void *)v166 - 1) = v167;
                v166 -= 8;
              }
              *(void *)(a1 + 32) = v166;
              *(void *)(a1 + 40) = v115;
              *(void *)(a1 + 48) = &v149[8 * v148];
              if (v144) {
                operator delete(v144);
              }
            }
            else
            {
              *(void *)uint64_t v119 = 0;
              unint64_t v115 = v119 + 8;
            }
            *(void *)(a1 + 40) = v115;
            goto LABEL_271;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v54 = *((void *)this + 1);
          unint64_t v55 = *((void *)this + 2);
          while (v54 < v55 && !*((unsigned char *)this + 24))
          {
            unint64_t v57 = *(char **)(a1 + 40);
            unint64_t v56 = *(void *)(a1 + 48);
            if ((unint64_t)v57 >= v56)
            {
              char v59 = (char *)*v10;
              uint64_t v60 = (v57 - (unsigned char *)*v10) >> 3;
              unint64_t v61 = v60 + 1;
              if ((unint64_t)(v60 + 1) >> 61) {
                goto LABEL_288;
              }
              uint64_t v62 = v56 - (void)v59;
              if (v62 >> 2 > v61) {
                unint64_t v61 = v62 >> 2;
              }
              if ((unint64_t)v62 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v63 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v63 = v61;
              }
              if (v63)
              {
                unsigned int v64 = (char *)sub_227B8B8B4(v177, v63);
                char v59 = *(char **)(a1 + 32);
                unint64_t v57 = *(char **)(a1 + 40);
              }
              else
              {
                unsigned int v64 = 0;
              }
              unint64_t v65 = &v64[8 * v60];
              *(void *)unint64_t v65 = 0;
              char v58 = v65 + 8;
              while (v57 != v59)
              {
                uint64_t v66 = *((void *)v57 - 1);
                v57 -= 8;
                *((void *)v65 - 1) = v66;
                v65 -= 8;
              }
              *(void *)(a1 + 32) = v65;
              *(void *)(a1 + 40) = v58;
              *(void *)(a1 + 48) = &v64[8 * v63];
              if (v59) {
                operator delete(v59);
              }
            }
            else
            {
              *(void *)unint64_t v57 = 0;
              char v58 = v57 + 8;
            }
            *(void *)(a1 + 40) = v58;
            unint64_t v67 = *((void *)this + 1);
            if (v67 > 0xFFFFFFFFFFFFFFF7 || v67 + 8 > *((void *)this + 2)) {
              goto LABEL_162;
            }
            *(v58 - 1) = *(void *)(*(void *)this + v67);
            unint64_t v55 = *((void *)this + 2);
            unint64_t v54 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v54;
          }
          goto LABEL_163;
        case 4u:
          if (v25 != 2)
          {
            char v121 = *(char **)(a1 + 88);
            unint64_t v120 = *(void *)(a1 + 96);
            if ((unint64_t)v121 >= v120)
            {
              unsigned int v150 = (char *)*v9;
              uint64_t v151 = (v121 - (unsigned char *)*v9) >> 3;
              unint64_t v152 = v151 + 1;
              if ((unint64_t)(v151 + 1) >> 61) {
LABEL_289:
              }
                sub_227B8B89C();
              uint64_t v153 = v120 - (void)v150;
              if (v153 >> 2 > v152) {
                unint64_t v152 = v153 >> 2;
              }
              if ((unint64_t)v153 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v154 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v154 = v152;
              }
              if (v154)
              {
                unint64_t v155 = (char *)sub_227B8B8B4(v178, v154);
                unsigned int v150 = *(char **)(a1 + 80);
                char v121 = *(char **)(a1 + 88);
              }
              else
              {
                unint64_t v155 = 0;
              }
              uint64_t v168 = &v155[8 * v151];
              *(void *)uint64_t v168 = 0;
              unint64_t v115 = v168 + 8;
              while (v121 != v150)
              {
                uint64_t v169 = *((void *)v121 - 1);
                v121 -= 8;
                *((void *)v168 - 1) = v169;
                v168 -= 8;
              }
              *(void *)(a1 + 80) = v168;
              *(void *)(a1 + 88) = v115;
              *(void *)(a1 + 96) = &v155[8 * v154];
              if (v150) {
                operator delete(v150);
              }
            }
            else
            {
              *(void *)char v121 = 0;
              unint64_t v115 = v121 + 8;
            }
            *(void *)(a1 + 88) = v115;
            goto LABEL_271;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v68 = *((void *)this + 1);
          unint64_t v69 = *((void *)this + 2);
          while (v68 < v69 && !*((unsigned char *)this + 24))
          {
            unint64_t v71 = *(char **)(a1 + 88);
            unint64_t v70 = *(void *)(a1 + 96);
            if ((unint64_t)v71 >= v70)
            {
              char v73 = (char *)*v9;
              uint64_t v74 = (v71 - (unsigned char *)*v9) >> 3;
              unint64_t v75 = v74 + 1;
              if ((unint64_t)(v74 + 1) >> 61) {
                goto LABEL_289;
              }
              uint64_t v76 = v70 - (void)v73;
              if (v76 >> 2 > v75) {
                unint64_t v75 = v76 >> 2;
              }
              if ((unint64_t)v76 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v77 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v77 = v75;
              }
              if (v77)
              {
                uint64_t v78 = (char *)sub_227B8B8B4(v178, v77);
                char v73 = *(char **)(a1 + 80);
                unint64_t v71 = *(char **)(a1 + 88);
              }
              else
              {
                uint64_t v78 = 0;
              }
              unint64_t v79 = &v78[8 * v74];
              *(void *)unint64_t v79 = 0;
              unint64_t v72 = v79 + 8;
              while (v71 != v73)
              {
                uint64_t v80 = *((void *)v71 - 1);
                v71 -= 8;
                *((void *)v79 - 1) = v80;
                v79 -= 8;
              }
              *(void *)(a1 + 80) = v79;
              *(void *)(a1 + 88) = v72;
              *(void *)(a1 + 96) = &v78[8 * v77];
              if (v73) {
                operator delete(v73);
              }
            }
            else
            {
              *(void *)unint64_t v71 = 0;
              unint64_t v72 = v71 + 8;
            }
            *(void *)(a1 + 88) = v72;
            unint64_t v81 = *((void *)this + 1);
            if (v81 > 0xFFFFFFFFFFFFFFF7 || v81 + 8 > *((void *)this + 2)) {
              goto LABEL_162;
            }
            *(v72 - 1) = *(void *)(*(void *)this + v81);
            unint64_t v69 = *((void *)this + 2);
            unint64_t v68 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v68;
          }
          goto LABEL_163;
        case 5u:
          if (v25 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v82 = *((void *)this + 1);
            unint64_t v83 = *((void *)this + 2);
            while (v82 < v83 && !*((unsigned char *)this + 24))
            {
              unint64_t v85 = *(char **)(a1 + 112);
              unint64_t v84 = *(void *)(a1 + 120);
              if ((unint64_t)v85 >= v84)
              {
                char v87 = (char *)*v8;
                uint64_t v88 = (v85 - (unsigned char *)*v8) >> 3;
                unint64_t v89 = v88 + 1;
                if ((unint64_t)(v88 + 1) >> 61) {
                  goto LABEL_290;
                }
                uint64_t v90 = v84 - (void)v87;
                if (v90 >> 2 > v89) {
                  unint64_t v89 = v90 >> 2;
                }
                if ((unint64_t)v90 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v91 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v91 = v89;
                }
                if (v91)
                {
                  unint64_t v92 = (char *)sub_227B8B8B4(v179, v91);
                  char v87 = *(char **)(a1 + 104);
                  unint64_t v85 = *(char **)(a1 + 112);
                }
                else
                {
                  unint64_t v92 = 0;
                }
                unint64_t v93 = &v92[8 * v88];
                *(void *)unint64_t v93 = 0;
                unint64_t v86 = v93 + 8;
                while (v85 != v87)
                {
                  uint64_t v94 = *((void *)v85 - 1);
                  v85 -= 8;
                  *((void *)v93 - 1) = v94;
                  v93 -= 8;
                }
                *(void *)(a1 + 104) = v93;
                *(void *)(a1 + 112) = v86;
                *(void *)(a1 + 120) = &v92[8 * v91];
                if (v87) {
                  operator delete(v87);
                }
              }
              else
              {
                *(void *)unint64_t v85 = 0;
                unint64_t v86 = v85 + 8;
              }
              *(void *)(a1 + 112) = v86;
              unint64_t v95 = *((void *)this + 1);
              if (v95 > 0xFFFFFFFFFFFFFFF7 || v95 + 8 > *((void *)this + 2))
              {
LABEL_162:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v86 - 1) = *(void *)(*(void *)this + v95);
              unint64_t v83 = *((void *)this + 2);
              unint64_t v82 = *((void *)this + 1) + 8;
              *((void *)this + 1) = v82;
            }
LABEL_163:
            PB::Reader::recallMark();
          }
          else
          {
            unint64_t v123 = *(char **)(a1 + 112);
            unint64_t v122 = *(void *)(a1 + 120);
            if ((unint64_t)v123 >= v122)
            {
              char v156 = (char *)*v8;
              uint64_t v157 = (v123 - (unsigned char *)*v8) >> 3;
              unint64_t v158 = v157 + 1;
              if ((unint64_t)(v157 + 1) >> 61) {
LABEL_290:
              }
                sub_227B8B89C();
              uint64_t v159 = v122 - (void)v156;
              if (v159 >> 2 > v158) {
                unint64_t v158 = v159 >> 2;
              }
              if ((unint64_t)v159 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v160 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v160 = v158;
              }
              if (v160)
              {
                unint64_t v161 = (char *)sub_227B8B8B4(v179, v160);
                char v156 = *(char **)(a1 + 104);
                unint64_t v123 = *(char **)(a1 + 112);
              }
              else
              {
                unint64_t v161 = 0;
              }
              uint64_t v170 = &v161[8 * v157];
              *(void *)uint64_t v170 = 0;
              unint64_t v115 = v170 + 8;
              while (v123 != v156)
              {
                uint64_t v171 = *((void *)v123 - 1);
                v123 -= 8;
                *((void *)v170 - 1) = v171;
                v170 -= 8;
              }
              *(void *)(a1 + 104) = v170;
              *(void *)(a1 + 112) = v115;
              *(void *)(a1 + 120) = &v161[8 * v160];
              if (v156) {
                operator delete(v156);
              }
            }
            else
            {
              *(void *)unint64_t v123 = 0;
              unint64_t v115 = v123 + 8;
            }
            *(void *)(a1 + 112) = v115;
LABEL_271:
            unint64_t v172 = *((void *)this + 1);
            if (v172 <= 0xFFFFFFFFFFFFFFF7 && v172 + 8 <= *((void *)this + 2))
            {
              *(v115 - 1) = *(void *)(*(void *)this + v172);
LABEL_275:
              *((void *)this + 1) += 8;
            }
            else
            {
LABEL_273:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_276:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        case 6u:
          *(unsigned char *)(a1 + 144) |= 4u;
          unint64_t v96 = *((void *)this + 1);
          unint64_t v97 = *((void *)this + 2);
          uint64_t v98 = *(void *)this;
          if (v96 <= 0xFFFFFFFFFFFFFFF5 && v96 + 10 <= v97)
          {
            char v99 = 0;
            unsigned int v100 = 0;
            uint64_t v101 = 0;
            do
            {
              unint64_t v102 = v96 + 1;
              *((void *)this + 1) = v96 + 1;
              char v103 = *(unsigned char *)(v98 + v96);
              v101 |= (unint64_t)(v103 & 0x7F) << v99;
              if ((v103 & 0x80) == 0) {
                goto LABEL_232;
              }
              v99 += 7;
              unint64_t v96 = v102;
              BOOL v19 = v100++ > 8;
            }
            while (!v19);
LABEL_180:
            LODWORD(v101) = 0;
            goto LABEL_232;
          }
          char v124 = 0;
          unsigned int v125 = 0;
          uint64_t v101 = 0;
          if (v97 <= v96) {
            unint64_t v97 = *((void *)this + 1);
          }
          while (2)
          {
            if (v97 == v96)
            {
              LODWORD(v101) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v126 = v96 + 1;
              char v127 = *(unsigned char *)(v98 + v96);
              *((void *)this + 1) = v126;
              v101 |= (unint64_t)(v127 & 0x7F) << v124;
              if (v127 < 0)
              {
                v124 += 7;
                unint64_t v96 = v126;
                BOOL v19 = v125++ > 8;
                if (v19) {
                  goto LABEL_180;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v101) = 0;
              }
            }
            break;
          }
LABEL_232:
          *(_DWORD *)(a1 + 140) = v101;
          goto LABEL_276;
        case 7u:
          *(unsigned char *)(a1 + 144) |= 1u;
          unint64_t v104 = *((void *)this + 1);
          if (v104 > 0xFFFFFFFFFFFFFFF7 || v104 + 8 > *((void *)this + 2)) {
            goto LABEL_273;
          }
          *(void *)(a1 + 128) = *(void *)(*(void *)this + v104);
          goto LABEL_275;
        case 8u:
          *(unsigned char *)(a1 + 144) |= 2u;
          unint64_t v105 = *((void *)this + 1);
          unint64_t v106 = *((void *)this + 2);
          uint64_t v107 = *(void *)this;
          if (v105 <= 0xFFFFFFFFFFFFFFF5 && v105 + 10 <= v106)
          {
            char v108 = 0;
            unsigned int v109 = 0;
            uint64_t v110 = 0;
            do
            {
              unint64_t v111 = v105 + 1;
              *((void *)this + 1) = v105 + 1;
              char v112 = *(unsigned char *)(v107 + v105);
              v110 |= (unint64_t)(v112 & 0x7F) << v108;
              if ((v112 & 0x80) == 0) {
                goto LABEL_235;
              }
              v108 += 7;
              unint64_t v105 = v111;
              BOOL v19 = v109++ > 8;
            }
            while (!v19);
LABEL_187:
            LODWORD(v110) = 0;
            goto LABEL_235;
          }
          char v128 = 0;
          unsigned int v129 = 0;
          uint64_t v110 = 0;
          if (v106 <= v105) {
            unint64_t v106 = *((void *)this + 1);
          }
          while (2)
          {
            if (v106 == v105)
            {
              LODWORD(v110) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v130 = v105 + 1;
              char v131 = *(unsigned char *)(v107 + v105);
              *((void *)this + 1) = v130;
              v110 |= (unint64_t)(v131 & 0x7F) << v128;
              if (v131 < 0)
              {
                v128 += 7;
                unint64_t v105 = v130;
                BOOL v19 = v129++ > 8;
                if (v19) {
                  goto LABEL_187;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v110) = 0;
              }
            }
            break;
          }
LABEL_235:
          *(_DWORD *)(a1 + 136) = v110;
          goto LABEL_276;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_276;
      }
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v16 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v22 = v2 + 1;
      char v23 = *(unsigned char *)(v13 + v2);
      *((void *)this + 1) = v22;
      v16 |= (unint64_t)(v23 & 0x7F) << v20;
      if ((v23 & 0x80) == 0) {
        goto LABEL_21;
      }
      v20 += 7;
      unint64_t v2 = v22;
      if (v21++ >= 9)
      {
LABEL_20:
        unint64_t v16 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227BADBF4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(double **)(result + 8);
  char v5 = *(double **)(result + 16);
  while (v4 != v5)
  {
    double v6 = *v4++;
    double result = PB::Writer::write(this, v6);
  }
  double v7 = *(double **)(v3 + 56);
  int v8 = *(double **)(v3 + 64);
  while (v7 != v8)
  {
    double v9 = *v7++;
    double result = PB::Writer::write(this, v9);
  }
  double v10 = *(double **)(v3 + 32);
  char v11 = *(double **)(v3 + 40);
  while (v10 != v11)
  {
    double v12 = *v10++;
    double result = PB::Writer::write(this, v12);
  }
  uint64_t v13 = *(double **)(v3 + 80);
  char v14 = *(double **)(v3 + 88);
  while (v13 != v14)
  {
    double v15 = *v13++;
    double result = PB::Writer::write(this, v15);
  }
  unint64_t v16 = *(double **)(v3 + 104);
  unint64_t v17 = *(double **)(v3 + 112);
  while (v16 != v17)
  {
    double v18 = *v16++;
    double result = PB::Writer::write(this, v18);
  }
  char v19 = *(unsigned char *)(v3 + 144);
  if ((v19 & 4) == 0)
  {
    if ((*(unsigned char *)(v3 + 144) & 1) == 0) {
      goto LABEL_18;
    }
LABEL_21:
    double result = PB::Writer::write(this, *(double *)(v3 + 128));
    if ((*(unsigned char *)(v3 + 144) & 2) == 0) {
      return result;
    }
    goto LABEL_22;
  }
  double result = PB::Writer::writeVarInt(this);
  char v19 = *(unsigned char *)(v3 + 144);
  if (v19) {
    goto LABEL_21;
  }
LABEL_18:
  if ((v19 & 2) == 0) {
    return result;
  }
LABEL_22:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227BADD2C(uint64_t result)
{
  *(void *)double result = &unk_26DC22D18;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

void sub_227BADD50(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC22D18;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227BADDD0(PB::Base *a1)
{
  sub_227BADD50(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227BADE08(uint64_t result, uint64_t a2)
{
  *(void *)double result = &unk_26DC22D18;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 28) = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  char v2 = *(unsigned char *)(a2 + 28);
  if (v2)
  {
    uint64_t v3 = *(void *)(a2 + 16);
    *(unsigned char *)(result + 28) |= 1u;
    *(void *)(result + 16) = v3;
    char v2 = *(unsigned char *)(a2 + 28);
  }
  if ((v2 & 2) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 24);
    *(unsigned char *)(result + 28) |= 2u;
    *(_DWORD *)(result + 24) = v4;
  }
  return result;
}

uint64_t sub_227BADEEC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if ((*(unsigned char *)(a1 + 28) & 2) != 0) {
    PB::TextFormatter::format(this, "modelType");
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "state");
  }
  if (*(unsigned char *)(a1 + 28)) {
    PB::TextFormatter::format(this, "targetTimestamp", *(double *)(a1 + 16));
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BADFA0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 3)
      {
        *(unsigned char *)(a1 + 28) |= 2u;
        unint64_t v21 = *((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        uint64_t v23 = *(void *)this;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v22)
        {
          char v31 = 0;
          unsigned int v32 = 0;
          uint64_t v26 = 0;
          if (v22 <= v21) {
            unint64_t v22 = *((void *)this + 1);
          }
          while (1)
          {
            if (v22 == v21)
            {
              LODWORD(v26) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_48;
            }
            unint64_t v33 = v21 + 1;
            char v34 = *(unsigned char *)(v23 + v21);
            *((void *)this + 1) = v33;
            v26 |= (unint64_t)(v34 & 0x7F) << v31;
            if ((v34 & 0x80) == 0) {
              break;
            }
            v31 += 7;
            unint64_t v21 = v33;
            BOOL v14 = v32++ > 8;
            if (v14)
            {
LABEL_43:
              LODWORD(v26) = 0;
              goto LABEL_48;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v26) = 0;
          }
        }
        else
        {
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v26 = 0;
          while (1)
          {
            unint64_t v27 = v21 + 1;
            *((void *)this + 1) = v21 + 1;
            char v28 = *(unsigned char *)(v23 + v21);
            v26 |= (unint64_t)(v28 & 0x7F) << v24;
            if ((v28 & 0x80) == 0) {
              break;
            }
            v24 += 7;
            unint64_t v21 = v27;
            BOOL v14 = v25++ > 8;
            if (v14) {
              goto LABEL_43;
            }
          }
        }
LABEL_48:
        *(_DWORD *)(a1 + 24) = v26;
      }
      else if (v20 == 2)
      {
        *(unsigned char *)(a1 + 28) |= 1u;
        unint64_t v29 = *((void *)this + 1);
        if (v29 <= 0xFFFFFFFFFFFFFFF7 && v29 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v29);
          *((void *)this + 1) += 8;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        if (v20 == 1) {
          operator new();
        }
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227BAE2E0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(const PB::Base **)(result + 8);
  if (v4) {
    uint64_t result = PB::Writer::writeSubmessage(this, v4);
  }
  char v5 = *(unsigned char *)(v3 + 28);
  if (v5)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
    char v5 = *(unsigned char *)(v3 + 28);
  }
  if ((v5 & 2) != 0)
  {
    return PB::Writer::writeVarInt(this);
  }
  return result;
}

void *sub_227BAE360(void *result)
{
  *uint64_t result = &unk_26DC22D50;
  result[1] = 0;
  return result;
}

void sub_227BAE380(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC22D50;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227BAE400(PB::Base *a1)
{
  sub_227BAE380(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227BAE438(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC22D50;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227BAE4E0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BAE55C(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227BAE758(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

uint64_t sub_227BAE774(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC22D88;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_227BAE798(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC22D88;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227BAE818(PB::Base *a1)
{
  sub_227BAE798(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227BAE850(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC22D88;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 20) = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  if (*(unsigned char *)(a2 + 20))
  {
    char v2 = *(unsigned char *)(a2 + 16);
    *(unsigned char *)(result + 20) |= 1u;
    *(unsigned char *)(result + 16) = v2;
  }
  return result;
}

uint64_t sub_227BAE918(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "correction");
  }
  if (*(unsigned char *)(a1 + 20)) {
    PB::TextFormatter::format(this, "withAnchoredStaticPose");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BAE9B0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v20 = *((void *)this + 1);
        if (v20 >= *((void *)this + 2))
        {
          BOOL v23 = 0;
          *((unsigned char *)this + 24) = 1;
        }
        else
        {
          unint64_t v21 = v20 + 1;
          int v22 = *(unsigned __int8 *)(*(void *)this + v20);
          *((void *)this + 1) = v21;
          BOOL v23 = v22 != 0;
        }
        *(unsigned char *)(a1 + 16) = v23;
      }
      else
      {
        if ((v11 >> 3) == 1) {
          operator new();
        }
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227BAEC40(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(const PB::Base **)(result + 8);
  if (v4) {
    uint64_t result = PB::Writer::writeSubmessage(this, v4);
  }
  if (*(unsigned char *)(v3 + 20))
  {
    return PB::Writer::write(this);
  }
  return result;
}

uint64_t sub_227BAECA8(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC22DC0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

void sub_227BAECD0(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227BAED08(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC22DC0;
  *(_DWORD *)(a1 + 64) = 0;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x10) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 24);
    __int16 v3 = 16;
    *(_WORD *)(a1 + 64) = 16;
    *(_DWORD *)(a1 + 24) = v4;
    __int16 v2 = *(_WORD *)(a2 + 64);
    if ((v2 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 0x20) != 0)
  {
LABEL_5:
    float result = *(float *)(a2 + 28);
    v3 |= 0x20u;
    *(_WORD *)(a1 + 64) = v3;
    *(float *)(a1 + 28) = result;
    __int16 v2 = *(_WORD *)(a2 + 64);
  }
LABEL_6:
  if ((v2 & 0x1000) != 0)
  {
    float result = *(float *)(a2 + 56);
    v3 |= 0x1000u;
    *(_WORD *)(a1 + 64) = v3;
    *(float *)(a1 + 56) = result;
    __int16 v2 = *(_WORD *)(a2 + 64);
    if ((v2 & 0x800) == 0)
    {
LABEL_8:
      if ((v2 & 2) == 0) {
        goto LABEL_9;
      }
      goto LABEL_21;
    }
  }
  else if ((v2 & 0x800) == 0)
  {
    goto LABEL_8;
  }
  float result = *(float *)(a2 + 52);
  v3 |= 0x800u;
  *(_WORD *)(a1 + 64) = v3;
  *(float *)(a1 + 52) = result;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 2) == 0)
  {
LABEL_9:
    if ((v2 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  float result = *(float *)(a2 + 12);
  v3 |= 2u;
  *(_WORD *)(a1 + 64) = v3;
  *(float *)(a1 + 12) = result;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x80) == 0)
  {
LABEL_10:
    if ((v2 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  float result = *(float *)(a2 + 36);
  v3 |= 0x80u;
  *(_WORD *)(a1 + 64) = v3;
  *(float *)(a1 + 36) = result;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x40) == 0)
  {
LABEL_11:
    if ((v2 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_24;
  }
LABEL_23:
  float result = *(float *)(a2 + 32);
  v3 |= 0x40u;
  *(_WORD *)(a1 + 64) = v3;
  *(float *)(a1 + 32) = result;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x100) == 0)
  {
LABEL_12:
    if ((v2 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_25;
  }
LABEL_24:
  float result = *(float *)(a2 + 40);
  v3 |= 0x100u;
  *(_WORD *)(a1 + 64) = v3;
  *(float *)(a1 + 40) = result;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x200) == 0)
  {
LABEL_13:
    if ((v2 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_26;
  }
LABEL_25:
  float result = *(float *)(a2 + 44);
  v3 |= 0x200u;
  *(_WORD *)(a1 + 64) = v3;
  *(float *)(a1 + 44) = result;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 8) == 0)
  {
LABEL_14:
    if ((v2 & 0x400) == 0) {
      goto LABEL_15;
    }
    goto LABEL_27;
  }
LABEL_26:
  int v6 = *(_DWORD *)(a2 + 20);
  v3 |= 8u;
  *(_WORD *)(a1 + 64) = v3;
  *(_DWORD *)(a1 + 20) = v6;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x400) == 0)
  {
LABEL_15:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_28;
  }
LABEL_27:
  float result = *(float *)(a2 + 48);
  v3 |= 0x400u;
  *(_WORD *)(a1 + 64) = v3;
  *(float *)(a1 + 48) = result;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x2000) == 0)
  {
LABEL_16:
    if ((v2 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_29;
  }
LABEL_28:
  char v7 = *(unsigned char *)(a2 + 60);
  v3 |= 0x2000u;
  *(_WORD *)(a1 + 64) = v3;
  *(unsigned char *)(a1 + 60) = v7;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 4) == 0)
  {
LABEL_17:
    if ((v2 & 1) == 0) {
      return result;
    }
LABEL_30:
    float result = *(float *)(a2 + 8);
    *(_WORD *)(a1 + 64) = v3 | 1;
    *(float *)(a1 + 8) = result;
    return result;
  }
LABEL_29:
  int v8 = *(_DWORD *)(a2 + 16);
  v3 |= 4u;
  *(_WORD *)(a1 + 64) = v3;
  *(_DWORD *)(a1 + 16) = v8;
  if (*(_WORD *)(a2 + 64)) {
    goto LABEL_30;
  }
  return result;
}

uint64_t sub_227BAEEBC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 64);
  if (v5)
  {
    PB::TextFormatter::format(this, "adaptiveExerciseMinuteThreshold", *(float *)(a1 + 8));
    __int16 v5 = *(_WORD *)(a1 + 64);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 0x2000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_21;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "age", *(float *)(a1 + 12));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x2000) == 0)
  {
LABEL_4:
    if ((v5 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "betaBlockerUse");
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 4) == 0)
  {
LABEL_5:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "biologicalSex");
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 8) == 0)
  {
LABEL_6:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "condition");
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x10) == 0)
  {
LABEL_7:
    if ((v5 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "gender");
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x20) == 0)
  {
LABEL_8:
    if ((v5 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "heightM", *(float *)(a1 + 28));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x40) == 0)
  {
LABEL_9:
    if ((v5 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "hrmax", *(float *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x80) == 0)
  {
LABEL_10:
    if ((v5 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "hrmin", *(float *)(a1 + 36));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x100) == 0)
  {
LABEL_11:
    if ((v5 & 0x200) == 0) {
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "hronset", *(float *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x200) == 0)
  {
LABEL_12:
    if ((v5 & 0x400) == 0) {
      goto LABEL_13;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(this, "pal", *(float *)(a1 + 44));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x400) == 0)
  {
LABEL_13:
    if ((v5 & 0x800) == 0) {
      goto LABEL_14;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "runVo2max", *(float *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x800) == 0)
  {
LABEL_14:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_31:
  PB::TextFormatter::format(this, "vo2max", *(float *)(a1 + 52));
  if ((*(_WORD *)(a1 + 64) & 0x1000) != 0) {
LABEL_15:
  }
    PB::TextFormatter::format(this, "weightKG", *(float *)(a1 + 56));
LABEL_16:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BAF0C0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 64) |= 0x10u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v41 = 0;
                unsigned int v42 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    LODWORD(v24) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_106;
                  }
                  unint64_t v43 = v20++;
                  char v44 = *(unsigned char *)(v21 + v43);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v44 & 0x7F) << v41;
                  if ((v44 & 0x80) == 0) {
                    break;
                  }
                  v41 += 7;
                  BOOL v14 = v42++ > 8;
                  if (v14)
                  {
                    LODWORD(v24) = 0;
                    goto LABEL_105;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v24) = 0;
                }
LABEL_105:
                unint64_t v2 = v43 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_106;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                LODWORD(v24) = 0;
              }
LABEL_106:
              *(_DWORD *)(a1 + 24) = v24;
              goto LABEL_117;
            case 2u:
              *(_WORD *)(a1 + 64) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_76;
              }
              *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_101;
            case 3u:
              *(_WORD *)(a1 + 64) |= 0x1000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_76;
              }
              *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_101;
            case 4u:
              *(_WORD *)(a1 + 64) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_76;
              }
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_101;
            case 5u:
              *(_WORD *)(a1 + 64) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_76;
              }
              *(_DWORD *)(a1 + 12) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_101;
            case 6u:
              *(_WORD *)(a1 + 64) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_76;
              }
              *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_101;
            case 7u:
              *(_WORD *)(a1 + 64) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_76;
              }
              *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_101;
            case 8u:
              *(_WORD *)(a1 + 64) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_76;
              }
              *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_101;
            case 9u:
              *(_WORD *)(a1 + 64) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_76;
              }
              *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_101;
            case 0xAu:
              *(_WORD *)(a1 + 64) |= 8u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v45 = 0;
                unsigned int v46 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_111;
                  }
                  unint64_t v47 = v27++;
                  char v48 = *(unsigned char *)(v28 + v47);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v48 & 0x7F) << v45;
                  if ((v48 & 0x80) == 0) {
                    break;
                  }
                  v45 += 7;
                  BOOL v14 = v46++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_110:
                    unint64_t v2 = v47 + 1;
                    goto LABEL_111;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_110;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_111;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_111:
              *(_DWORD *)(a1 + 20) = v31;
              goto LABEL_117;
            case 0xBu:
              *(_WORD *)(a1 + 64) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_76;
              }
              *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_101;
            case 0xCu:
              *(_WORD *)(a1 + 64) |= 0x2000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v34 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v33 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v34 = v33 != 0;
              }
              *(unsigned char *)(a1 + 60) = v34;
              goto LABEL_117;
            case 0xDu:
              *(_WORD *)(a1 + 64) |= 4u;
              unint64_t v35 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v36 = *(void *)this;
              if (v35 > 0xFFFFFFFFFFFFFFF5 || v35 + 10 > v2)
              {
                char v49 = 0;
                unsigned int v50 = 0;
                uint64_t v39 = 0;
                if (v2 <= v35) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v35)
                  {
                    LODWORD(v39) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_116;
                  }
                  unint64_t v51 = v35++;
                  char v52 = *(unsigned char *)(v36 + v51);
                  *((void *)this + 1) = v35;
                  v39 |= (unint64_t)(v52 & 0x7F) << v49;
                  if ((v52 & 0x80) == 0) {
                    break;
                  }
                  v49 += 7;
                  BOOL v14 = v50++ > 8;
                  if (v14)
                  {
                    LODWORD(v39) = 0;
LABEL_115:
                    unint64_t v2 = v51 + 1;
                    goto LABEL_116;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v39) = 0;
                }
                goto LABEL_115;
              }
              char v37 = 0;
              unsigned int v38 = 0;
              uint64_t v39 = 0;
              do
              {
                unint64_t v2 = v35 + 1;
                *((void *)this + 1) = v35 + 1;
                char v40 = *(unsigned char *)(v36 + v35);
                v39 |= (unint64_t)(v40 & 0x7F) << v37;
                if ((v40 & 0x80) == 0) {
                  goto LABEL_116;
                }
                v37 += 7;
                unint64_t v35 = v2;
                BOOL v14 = v38++ > 8;
              }
              while (!v14);
              LODWORD(v39) = 0;
LABEL_116:
              *(_DWORD *)(a1 + 16) = v39;
LABEL_117:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 0xEu:
              *(_WORD *)(a1 + 64) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 8) = *(_DWORD *)(*(void *)this + v2);
LABEL_101:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_76:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_117;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_117;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227BAF7B8(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 64);
  if ((v4 & 0x10) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    __int16 v4 = *(_WORD *)(v3 + 64);
    if ((v4 & 0x20) == 0)
    {
LABEL_3:
      if ((v4 & 0x1000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v4 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x1000) == 0)
  {
LABEL_4:
    if ((v4 & 0x800) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x800) == 0)
  {
LABEL_5:
    if ((v4 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 2) == 0)
  {
LABEL_6:
    if ((v4 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 12));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x80) == 0)
  {
LABEL_7:
    if ((v4 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x40) == 0)
  {
LABEL_8:
    if ((v4 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x100) == 0)
  {
LABEL_9:
    if ((v4 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x200) == 0)
  {
LABEL_10:
    if ((v4 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 8) == 0)
  {
LABEL_11:
    if ((v4 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x400) == 0)
  {
LABEL_12:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x2000) == 0)
  {
LABEL_13:
    if ((v4 & 4) == 0) {
      goto LABEL_14;
    }
LABEL_28:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(_WORD *)(v3 + 64) & 1) == 0) {
      return result;
    }
    goto LABEL_29;
  }
LABEL_27:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 4) != 0) {
    goto LABEL_28;
  }
LABEL_14:
  if ((v4 & 1) == 0) {
    return result;
  }
LABEL_29:
  float v5 = *(float *)(v3 + 8);

  return PB::Writer::write(this, v5);
}

void *sub_227BAF978(void *result)
{
  *uint64_t result = &unk_26DC22DF8;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void sub_227BAF99C(void **a1)
{
  *a1 = &unk_26DC22DF8;
  unint64_t v2 = a1 + 1;
  sub_227B8B5D0(&v2);
  PB::Base::~Base((PB::Base *)a1);
}

uint64_t sub_227BAF9F8(void **a1)
{
  *a1 = &unk_26DC22DF8;
  uint64_t v3 = a1 + 1;
  sub_227B8B5D0(&v3);
  PB::Base::~Base((PB::Base *)a1);
  return MEMORY[0x22A6850E0]();
}

void *sub_227BAFA68(void *result, uint64_t a2)
{
  result[1] = 0;
  *uint64_t result = &unk_26DC22DF8;
  result[2] = 0;
  result[3] = 0;
  if (*(void *)(a2 + 8) != *(void *)(a2 + 16)) {
    sub_227BAFAE0();
  }
  return result;
}

void sub_227BAFAE0()
{
}

void sub_227BAFBE4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_227B8BDA0((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_227BAFC2C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  float v5 = *(uint64_t **)(a1 + 8);
  int v6 = *(uint64_t **)(a1 + 16);
  while (v5 != v6)
  {
    uint64_t v7 = *v5++;
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v7 + 32))(v7, this, "accel");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BAFCC4(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        sub_227BAFE80();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

void sub_227BAFE80()
{
}

void sub_227BAFF98(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_227B8BDA0((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_227BAFFDC(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base ***)(result + 8);
  for (i = *(const PB::Base ***)(result + 16); v2 != i; uint64_t result = PB::Writer::writeSubmessage(this, v5))
    float v5 = *v2++;
  return result;
}

void *sub_227BB0028(void *result)
{
  *uint64_t result = &unk_26DC22E30;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void sub_227BB004C(void **a1)
{
  *a1 = &unk_26DC22E30;
  unint64_t v2 = a1 + 1;
  sub_227B8B5D0(&v2);
  PB::Base::~Base((PB::Base *)a1);
}

uint64_t sub_227BB00A8(void **a1)
{
  *a1 = &unk_26DC22E30;
  unint64_t v3 = a1 + 1;
  sub_227B8B5D0(&v3);
  PB::Base::~Base((PB::Base *)a1);
  return MEMORY[0x22A6850E0]();
}

void *sub_227BB0118(void *result, uint64_t a2)
{
  result[1] = 0;
  *uint64_t result = &unk_26DC22E30;
  result[2] = 0;
  result[3] = 0;
  if (*(void *)(a2 + 8) != *(void *)(a2 + 16)) {
    sub_227BB0190();
  }
  return result;
}

void sub_227BB0190()
{
}

void sub_227BB0294(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_227B8BDA0((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_227BB02DC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  float v5 = *(uint64_t **)(a1 + 8);
  int v6 = *(uint64_t **)(a1 + 16);
  while (v5 != v6)
  {
    uint64_t v7 = *v5++;
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v7 + 32))(v7, this, "deviceMotion");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BB0374(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        sub_227BB0530();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

void sub_227BB0530()
{
}

void sub_227BB0648(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_227B8BDA0((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_227BB068C(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base ***)(result + 8);
  for (i = *(const PB::Base ***)(result + 16); v2 != i; uint64_t result = PB::Writer::writeSubmessage(this, v5))
    float v5 = *v2++;
  return result;
}

uint64_t sub_227BB06D8(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC22E68;
  *(_DWORD *)(result + 44) = 0;
  return result;
}

void sub_227BB0700(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227BB0738(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC22E68;
  *(_DWORD *)(result + 44) = 0;
  char v2 = *(unsigned char *)(a2 + 44);
  if ((v2 & 8) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 32);
    char v3 = 8;
    *(unsigned char *)(result + 44) = 8;
    *(void *)(result + 32) = v4;
    char v2 = *(unsigned char *)(a2 + 44);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 44) & 2) != 0)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(result + 44) = v3;
    *(void *)(result + 16) = v5;
    char v2 = *(unsigned char *)(a2 + 44);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    uint64_t v6 = *(void *)(a2 + 24);
    v3 |= 4u;
    *(unsigned char *)(result + 44) = v3;
    *(void *)(result + 24) = v6;
    char v2 = *(unsigned char *)(a2 + 44);
    if ((v2 & 1) == 0)
    {
LABEL_8:
      if ((v2 & 0x10) == 0) {
        return result;
      }
LABEL_12:
      int v8 = *(_DWORD *)(a2 + 40);
      *(unsigned char *)(result + 44) = v3 | 0x10;
      *(_DWORD *)(result + 40) = v8;
      return result;
    }
  }
  else if ((v2 & 1) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(unsigned char *)(result + 44) = v3;
  *(void *)(result + 8) = v7;
  if ((*(unsigned char *)(a2 + 44) & 0x10) != 0) {
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_227BB07F0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 44);
  if (v5)
  {
    PB::TextFormatter::format(this, "basalNatalies", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 44);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 44) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "mets", *(double *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(this, "natalies", *(double *)(a1 + 24));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(this, "session");
  if ((*(unsigned char *)(a1 + 44) & 8) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "startDate", *(double *)(a1 + 32));
LABEL_7:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BB08D4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 44) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_35;
              }
              *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
              goto LABEL_51;
            case 2u:
              *(unsigned char *)(a1 + 44) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_35;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_51;
            case 3u:
              *(unsigned char *)(a1 + 44) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_35;
              }
              *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
              goto LABEL_51;
            case 4u:
              *(unsigned char *)(a1 + 44) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
LABEL_51:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_35:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_57;
            case 5u:
              *(unsigned char *)(a1 + 44) |= 0x10u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v27 = 0;
                unsigned int v28 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_56;
                  }
                  unint64_t v29 = v21++;
                  char v30 = *(unsigned char *)(v22 + v29);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v30 & 0x7F) << v27;
                  if ((v30 & 0x80) == 0) {
                    break;
                  }
                  v27 += 7;
                  BOOL v14 = v28++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_55:
                    unint64_t v2 = v29 + 1;
                    goto LABEL_56;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_55;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_56;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_56:
              *(_DWORD *)(a1 + 40) = v25;
LABEL_57:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_57;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227BB0C3C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 44);
  if ((v4 & 8) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 32));
    char v4 = *(unsigned char *)(v3 + 44);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 44) & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 1) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
    if ((*(unsigned char *)(v3 + 44) & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24));
  char v4 = *(unsigned char *)(v3 + 44);
  if (v4) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 0x10) == 0) {
    return result;
  }
LABEL_11:

  return PB::Writer::writeVarInt(this);
}

void *sub_227BB0D00(void *result)
{
  *uint64_t result = &unk_26DC22EA0;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void sub_227BB0D24(void **a1)
{
  *a1 = &unk_26DC22EA0;
  unint64_t v2 = a1 + 1;
  sub_227B8B5D0(&v2);
  PB::Base::~Base((PB::Base *)a1);
}

uint64_t sub_227BB0D80(void **a1)
{
  *a1 = &unk_26DC22EA0;
  uint64_t v3 = a1 + 1;
  sub_227B8B5D0(&v3);
  PB::Base::~Base((PB::Base *)a1);
  return MEMORY[0x22A6850E0]();
}

void *sub_227BB0DF0(void *result, uint64_t a2)
{
  result[1] = 0;
  *uint64_t result = &unk_26DC22EA0;
  result[2] = 0;
  result[3] = 0;
  if (*(void *)(a2 + 8) != *(void *)(a2 + 16)) {
    sub_227BB0E68();
  }
  return result;
}

void sub_227BB0E68()
{
}

void sub_227BB0F6C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_227B8BDA0((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_227BB0FB4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(uint64_t **)(a1 + 8);
  uint64_t v6 = *(uint64_t **)(a1 + 16);
  while (v5 != v6)
  {
    uint64_t v7 = *v5++;
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v7 + 32))(v7, this, "vo2MaxInput");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BB104C(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        sub_227BB1208();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

void sub_227BB1208()
{
}

void sub_227BB1304(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_227B8BDA0((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_227BB1348(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base ***)(result + 8);
  for (i = *(const PB::Base ***)(result + 16); v2 != i; uint64_t result = PB::Writer::writeSubmessage(this, v5))
    char v5 = *v2++;
  return result;
}

uint64_t sub_227BB1394(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC22ED8;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void sub_227BB13BC(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227BB13F4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC22ED8;
  *(_DWORD *)(a1 + 24) = 0;
  char v2 = *(unsigned char *)(a2 + 24);
  if ((v2 & 4) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 20);
    char v3 = 4;
    *(unsigned char *)(a1 + 24) = 4;
    *(_DWORD *)(a1 + 20) = v4;
    char v2 = *(unsigned char *)(a2 + 24);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 24) & 2) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(a1 + 24) = v3;
    *(_DWORD *)(a1 + 16) = v5;
    char v2 = *(unsigned char *)(a2 + 24);
  }
LABEL_6:
  if (v2)
  {
    double result = *(double *)(a2 + 8);
    *(unsigned char *)(a1 + 24) = v3 | 1;
    *(double *)(a1 + 8) = result;
  }
  return result;
}

uint64_t sub_227BB1474(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 24);
  if (v5)
  {
    PB::TextFormatter::format(this, "eventTime", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 24);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((*(unsigned char *)(a1 + 24) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "eventType");
  if ((*(unsigned char *)(a1 + 24) & 4) != 0) {
LABEL_4:
  }
    PB::TextFormatter::format(this, "workoutType");
LABEL_5:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BB1518(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 3)
      {
        *(unsigned char *)(a1 + 24) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else if (v20 == 2)
      {
        *(unsigned char *)(a1 + 24) |= 2u;
        unint64_t v27 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v28 = *(void *)this;
        if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
        {
          char v38 = 0;
          unsigned int v39 = 0;
          uint64_t v31 = 0;
          if (v2 <= v27) {
            unint64_t v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v27)
            {
              LODWORD(v31) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_67;
            }
            unint64_t v40 = v27++;
            char v41 = *(unsigned char *)(v28 + v40);
            *((void *)this + 1) = v27;
            v31 |= (unint64_t)(v41 & 0x7F) << v38;
            if ((v41 & 0x80) == 0) {
              break;
            }
            v38 += 7;
            BOOL v14 = v39++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              goto LABEL_66;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v31) = 0;
          }
LABEL_66:
          unint64_t v2 = v40 + 1;
        }
        else
        {
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v31 = 0;
          while (1)
          {
            unint64_t v2 = v27 + 1;
            *((void *)this + 1) = v27 + 1;
            char v32 = *(unsigned char *)(v28 + v27);
            v31 |= (unint64_t)(v32 & 0x7F) << v29;
            if ((v32 & 0x80) == 0) {
              break;
            }
            v29 += 7;
            unint64_t v27 = v2;
            BOOL v14 = v30++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              break;
            }
          }
        }
LABEL_67:
        *(_DWORD *)(a1 + 16) = v31;
      }
      else if (v20 == 1)
      {
        *(unsigned char *)(a1 + 24) |= 4u;
        unint64_t v21 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v22 = *(void *)this;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
        {
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v25 = 0;
          if (v2 <= v21) {
            unint64_t v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v21)
            {
              LODWORD(v25) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_62;
            }
            unint64_t v36 = v21++;
            char v37 = *(unsigned char *)(v22 + v36);
            *((void *)this + 1) = v21;
            v25 |= (unint64_t)(v37 & 0x7F) << v34;
            if ((v37 & 0x80) == 0) {
              break;
            }
            v34 += 7;
            BOOL v14 = v35++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              goto LABEL_61;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v25) = 0;
          }
LABEL_61:
          unint64_t v2 = v36 + 1;
        }
        else
        {
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          while (1)
          {
            unint64_t v2 = v21 + 1;
            *((void *)this + 1) = v21 + 1;
            char v26 = *(unsigned char *)(v22 + v21);
            v25 |= (unint64_t)(v26 & 0x7F) << v23;
            if ((v26 & 0x80) == 0) {
              break;
            }
            v23 += 7;
            unint64_t v21 = v2;
            BOOL v14 = v24++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              break;
            }
          }
        }
LABEL_62:
        *(_DWORD *)(a1 + 20) = v25;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227BB189C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 24);
  if ((v4 & 4) == 0)
  {
    if ((*(unsigned char *)(result + 24) & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(unsigned char *)(v3 + 24) & 1) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 24);
  if ((v4 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v4 & 1) == 0) {
    return result;
  }
LABEL_7:
  double v5 = *(double *)(v3 + 8);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227BB1928(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC22F10;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_227BB1950(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227BB1988(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC22F10;
  *(_DWORD *)(result + 20) = 0;
  if (*(unsigned char *)(a2 + 20))
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 20) = 1;
    *(void *)(result + 8) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 20) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
LABEL_5:
    int v4 = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(result + 20) = v2;
    *(_DWORD *)(result + 16) = v4;
  }
  return result;
}

uint64_t sub_227BB19EC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "state");
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if (v5) {
    PB::TextFormatter::format(this, "timestamp");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BB1A68(uint64_t a1, PB::Reader *this)
{
  unint64_t v3 = *((void *)this + 1);
  unint64_t v2 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v3 < v2 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v3 > 0xFFFFFFFFFFFFFFF5 || v3 + 10 > v2) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v3 + 1;
        *((void *)this + 1) = v3 + 1;
        char v13 = *(unsigned char *)(v8 + v3);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v3 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v26 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v27 = *(void *)this;
        if (v26 > 0xFFFFFFFFFFFFFFF5 || v26 + 10 > v2)
        {
          char v37 = 0;
          unsigned int v38 = 0;
          uint64_t v30 = 0;
          if (v2 <= v26) {
            unint64_t v3 = *((void *)this + 1);
          }
          else {
            unint64_t v3 = *((void *)this + 2);
          }
          while (1)
          {
            if (v3 == v26)
            {
              LODWORD(v30) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_64;
            }
            unint64_t v39 = v26++;
            char v40 = *(unsigned char *)(v27 + v39);
            *((void *)this + 1) = v26;
            v30 |= (unint64_t)(v40 & 0x7F) << v37;
            if ((v40 & 0x80) == 0) {
              break;
            }
            v37 += 7;
            BOOL v14 = v38++ > 8;
            if (v14)
            {
              LODWORD(v30) = 0;
              goto LABEL_63;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v30) = 0;
          }
LABEL_63:
          unint64_t v3 = v39 + 1;
        }
        else
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v30 = 0;
          while (1)
          {
            unint64_t v3 = v26 + 1;
            *((void *)this + 1) = v26 + 1;
            char v31 = *(unsigned char *)(v27 + v26);
            v30 |= (unint64_t)(v31 & 0x7F) << v28;
            if ((v31 & 0x80) == 0) {
              break;
            }
            v28 += 7;
            unint64_t v26 = v3;
            BOOL v14 = v29++ > 8;
            if (v14)
            {
              LODWORD(v30) = 0;
              break;
            }
          }
        }
LABEL_64:
        *(_DWORD *)(a1 + 16) = v30;
      }
      else if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v20 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v21 = *(void *)this;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
        {
          char v33 = 0;
          unsigned int v34 = 0;
          uint64_t v24 = 0;
          if (v2 <= v20) {
            unint64_t v3 = *((void *)this + 1);
          }
          else {
            unint64_t v3 = *((void *)this + 2);
          }
          while (1)
          {
            if (v3 == v20)
            {
              uint64_t v24 = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_60;
            }
            unint64_t v35 = v20++;
            char v36 = *(unsigned char *)(v21 + v35);
            *((void *)this + 1) = v20;
            v24 |= (unint64_t)(v36 & 0x7F) << v33;
            if ((v36 & 0x80) == 0) {
              break;
            }
            v33 += 7;
            BOOL v14 = v34++ > 8;
            if (v14)
            {
              uint64_t v24 = 0;
              goto LABEL_59;
            }
          }
          if (*((unsigned char *)this + 24)) {
            uint64_t v24 = 0;
          }
LABEL_59:
          unint64_t v3 = v35 + 1;
        }
        else
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          while (1)
          {
            unint64_t v3 = v20 + 1;
            *((void *)this + 1) = v20 + 1;
            char v25 = *(unsigned char *)(v21 + v20);
            v24 |= (unint64_t)(v25 & 0x7F) << v22;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v22 += 7;
            unint64_t v20 = v3;
            BOOL v14 = v23++ > 8;
            if (v14)
            {
              uint64_t v24 = 0;
              break;
            }
          }
        }
LABEL_60:
        *(void *)(a1 + 8) = v24;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v3 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v3 >= v2 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v3 > v2) {
      unint64_t v2 = v3;
    }
    while (v2 != v3)
    {
      unint64_t v17 = v3 + 1;
      char v18 = *(unsigned char *)(v8 + v3);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v3 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227BB1D94(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    return PB::Writer::writeVarInt(this);
  }
  return result;
}

double sub_227BB1E00(uint64_t a1)
{
  *(void *)a1 = &unk_26DC22F48;
  *(_DWORD *)(a1 + 72) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return result;
}

void sub_227BB1E34(PB::Base *this)
{
  *(void *)this = &unk_26DC22F48;
  unint64_t v2 = (void *)*((void *)this + 4);
  if (v2)
  {
    *((void *)this + 5) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 2) = v3;
    operator delete(v3);
  }

  PB::Base::~Base(this);
}

void sub_227BB1EA8(PB::Base *a1)
{
  sub_227BB1E34(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227BB1EE0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC22F48;
  *(_OWORD *)(a1 + 8) = 0u;
  char v4 = (char *)(a1 + 8);
  *(_DWORD *)(a1 + 72) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  if ((*(unsigned char *)(a2 + 72) & 2) != 0)
  {
    uint64_t v5 = *(void *)(a2 + 64);
    *(unsigned char *)(a1 + 72) = 2;
    *(void *)(a1 + 64) = v5;
  }
  if (a1 != a2)
  {
    sub_227B8B74C(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
    sub_227B8B74C((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 3);
  }
  if (*(unsigned char *)(a2 + 72))
  {
    uint64_t v6 = *(void *)(a2 + 56);
    *(unsigned char *)(a1 + 72) |= 1u;
    *(void *)(a1 + 56) = v6;
  }
  return a1;
}

uint64_t sub_227BB1FA0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(double **)(a1 + 8);
  uint64_t v6 = *(double **)(a1 + 16);
  while (v5 != v6)
  {
    double v7 = *v5++;
    PB::TextFormatter::format(this, "rotationMatrix", v7);
  }
  char v8 = *(unsigned char *)(a1 + 72);
  if (v8)
  {
    PB::TextFormatter::format(this, "targetTimestamp", *(double *)(a1 + 56));
    char v8 = *(unsigned char *)(a1 + 72);
  }
  if ((v8 & 2) != 0) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 64));
  }
  char v9 = *(double **)(a1 + 32);
  unsigned int v10 = *(double **)(a1 + 40);
  while (v9 != v10)
  {
    double v11 = *v9++;
    PB::TextFormatter::format(this, "translation", v11);
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227BB2084(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    char v8 = (void **)(a1 + 32);
    uint64_t v9 = a1 + 48;
    unsigned int v10 = (void **)(a1 + 8);
    uint64_t v11 = a1 + 24;
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        if (v14++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v24 = v15 & 7;
      if (v24 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v15 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 72) |= 2u;
          unint64_t v25 = *((void *)this + 1);
          if (v25 > 0xFFFFFFFFFFFFFFF7 || v25 + 8 > *((void *)this + 2)) {
            goto LABEL_117;
          }
          *(void *)(a1 + 64) = *(void *)(*(void *)this + v25);
          goto LABEL_119;
        case 2u:
          if (v24 != 2)
          {
            unint64_t v56 = *(char **)(a1 + 16);
            unint64_t v55 = *(void *)(a1 + 24);
            if ((unint64_t)v56 >= v55)
            {
              uint64_t v60 = (char *)*v10;
              uint64_t v61 = (v56 - (unsigned char *)*v10) >> 3;
              unint64_t v62 = v61 + 1;
              if ((unint64_t)(v61 + 1) >> 61) {
LABEL_129:
              }
                sub_227B8B89C();
              uint64_t v63 = v55 - (void)v60;
              if (v63 >> 2 > v62) {
                unint64_t v62 = v63 >> 2;
              }
              if ((unint64_t)v63 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v64 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v64 = v62;
              }
              if (v64)
              {
                unint64_t v65 = (char *)sub_227B8B8B4(v11, v64);
                uint64_t v60 = *(char **)(a1 + 8);
                unint64_t v56 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v65 = 0;
              }
              unint64_t v72 = &v65[8 * v61];
              *(void *)unint64_t v72 = 0;
              unint64_t v57 = v72 + 8;
              while (v56 != v60)
              {
                uint64_t v73 = *((void *)v56 - 1);
                v56 -= 8;
                *((void *)v72 - 1) = v73;
                v72 -= 8;
              }
              *(void *)(a1 + 8) = v72;
              *(void *)(a1 + 16) = v57;
              *(void *)(a1 + 24) = &v65[8 * v64];
              if (v60) {
                operator delete(v60);
              }
            }
            else
            {
              *(void *)unint64_t v56 = 0;
              unint64_t v57 = v56 + 8;
            }
            *(void *)(a1 + 16) = v57;
            goto LABEL_115;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v26 = *((void *)this + 1);
          unint64_t v27 = *((void *)this + 2);
          while (v26 < v27 && !*((unsigned char *)this + 24))
          {
            unsigned int v29 = *(char **)(a1 + 16);
            unint64_t v28 = *(void *)(a1 + 24);
            if ((unint64_t)v29 >= v28)
            {
              char v31 = (char *)*v10;
              uint64_t v32 = (v29 - (unsigned char *)*v10) >> 3;
              unint64_t v33 = v32 + 1;
              if ((unint64_t)(v32 + 1) >> 61) {
                goto LABEL_129;
              }
              uint64_t v34 = v28 - (void)v31;
              if (v34 >> 2 > v33) {
                unint64_t v33 = v34 >> 2;
              }
              if ((unint64_t)v34 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v35 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v35 = v33;
              }
              if (v35)
              {
                char v36 = (char *)sub_227B8B8B4(v11, v35);
                char v31 = *(char **)(a1 + 8);
                unsigned int v29 = *(char **)(a1 + 16);
              }
              else
              {
                char v36 = 0;
              }
              char v37 = &v36[8 * v32];
              *(void *)char v37 = 0;
              uint64_t v30 = v37 + 8;
              while (v29 != v31)
              {
                uint64_t v38 = *((void *)v29 - 1);
                v29 -= 8;
                *((void *)v37 - 1) = v38;
                v37 -= 8;
              }
              *(void *)(a1 + 8) = v37;
              *(void *)(a1 + 16) = v30;
              *(void *)(a1 + 24) = &v36[8 * v35];
              if (v31) {
                operator delete(v31);
              }
            }
            else
            {
              *(void *)unsigned int v29 = 0;
              uint64_t v30 = v29 + 8;
            }
            *(void *)(a1 + 16) = v30;
            unint64_t v39 = *((void *)this + 1);
            if (v39 > 0xFFFFFFFFFFFFFFF7 || v39 + 8 > *((void *)this + 2)) {
              goto LABEL_83;
            }
            *(v30 - 1) = *(void *)(*(void *)this + v39);
            unint64_t v27 = *((void *)this + 2);
            unint64_t v26 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v26;
          }
          goto LABEL_84;
        case 3u:
          if (v24 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v40 = *((void *)this + 1);
            unint64_t v41 = *((void *)this + 2);
            while (v40 < v41 && !*((unsigned char *)this + 24))
            {
              unint64_t v43 = *(char **)(a1 + 40);
              unint64_t v42 = *(void *)(a1 + 48);
              if ((unint64_t)v43 >= v42)
              {
                char v45 = (char *)*v8;
                uint64_t v46 = (v43 - (unsigned char *)*v8) >> 3;
                unint64_t v47 = v46 + 1;
                if ((unint64_t)(v46 + 1) >> 61) {
                  goto LABEL_128;
                }
                uint64_t v48 = v42 - (void)v45;
                if (v48 >> 2 > v47) {
                  unint64_t v47 = v48 >> 2;
                }
                if ((unint64_t)v48 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v49 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v49 = v47;
                }
                if (v49)
                {
                  unsigned int v50 = (char *)sub_227B8B8B4(v9, v49);
                  char v45 = *(char **)(a1 + 32);
                  unint64_t v43 = *(char **)(a1 + 40);
                }
                else
                {
                  unsigned int v50 = 0;
                }
                unint64_t v51 = &v50[8 * v46];
                *(void *)unint64_t v51 = 0;
                char v44 = v51 + 8;
                while (v43 != v45)
                {
                  uint64_t v52 = *((void *)v43 - 1);
                  v43 -= 8;
                  *((void *)v51 - 1) = v52;
                  v51 -= 8;
                }
                *(void *)(a1 + 32) = v51;
                *(void *)(a1 + 40) = v44;
                *(void *)(a1 + 48) = &v50[8 * v49];
                if (v45) {
                  operator delete(v45);
                }
              }
              else
              {
                *(void *)unint64_t v43 = 0;
                char v44 = v43 + 8;
              }
              *(void *)(a1 + 40) = v44;
              unint64_t v53 = *((void *)this + 1);
              if (v53 > 0xFFFFFFFFFFFFFFF7 || v53 + 8 > *((void *)this + 2))
              {
LABEL_83:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v44 - 1) = *(void *)(*(void *)this + v53);
              unint64_t v41 = *((void *)this + 2);
              unint64_t v40 = *((void *)this + 1) + 8;
              *((void *)this + 1) = v40;
            }
LABEL_84:
            PB::Reader::recallMark();
          }
          else
          {
            char v59 = *(char **)(a1 + 40);
            unint64_t v58 = *(void *)(a1 + 48);
            if ((unint64_t)v59 >= v58)
            {
              uint64_t v66 = (char *)*v8;
              uint64_t v67 = (v59 - (unsigned char *)*v8) >> 3;
              unint64_t v68 = v67 + 1;
              if ((unint64_t)(v67 + 1) >> 61) {
LABEL_128:
              }
                sub_227B8B89C();
              uint64_t v69 = v58 - (void)v66;
              if (v69 >> 2 > v68) {
                unint64_t v68 = v69 >> 2;
              }
              if ((unint64_t)v69 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v70 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v70 = v68;
              }
              if (v70)
              {
                unint64_t v71 = (char *)sub_227B8B8B4(v9, v70);
                uint64_t v66 = *(char **)(a1 + 32);
                char v59 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v71 = 0;
              }
              uint64_t v74 = &v71[8 * v67];
              *(void *)uint64_t v74 = 0;
              unint64_t v57 = v74 + 8;
              while (v59 != v66)
              {
                uint64_t v75 = *((void *)v59 - 1);
                v59 -= 8;
                *((void *)v74 - 1) = v75;
                v74 -= 8;
              }
              *(void *)(a1 + 32) = v74;
              *(void *)(a1 + 40) = v57;
              *(void *)(a1 + 48) = &v71[8 * v70];
              if (v66) {
                operator delete(v66);
              }
            }
            else
            {
              *(void *)char v59 = 0;
              unint64_t v57 = v59 + 8;
            }
            *(void *)(a1 + 40) = v57;
LABEL_115:
            unint64_t v76 = *((void *)this + 1);
            if (v76 <= 0xFFFFFFFFFFFFFFF7 && v76 + 8 <= *((void *)this + 2))
            {
              *(v57 - 1) = *(void *)(*(void *)this + v76);
LABEL_119:
              *((void *)this + 1) += 8;
            }
            else
            {
LABEL_117:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_120:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || *((unsigned char *)this + 24)) {
            return v4 == 0;
          }
          break;
        case 4u:
          *(unsigned char *)(a1 + 72) |= 1u;
          unint64_t v54 = *((void *)this + 1);
          if (v54 > 0xFFFFFFFFFFFFFFF7 || v54 + 8 > *((void *)this + 2)) {
            goto LABEL_117;
          }
          *(void *)(a1 + 56) = *(void *)(*(void *)this + v54);
          goto LABEL_119;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_120;
      }
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v15 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v21 = v2 + 1;
      char v22 = *(unsigned char *)(v12 + v2);
      *((void *)this + 1) = v21;
      v15 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0) {
        goto LABEL_21;
      }
      v19 += 7;
      unint64_t v2 = v21;
      if (v20++ >= 9)
      {
LABEL_20:
        unint64_t v15 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227BB2654(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  if ((*(unsigned char *)(result + 72) & 2) != 0) {
    double result = PB::Writer::write(this, *(double *)(result + 64));
  }
  int v4 = *(double **)(v3 + 8);
  uint64_t v5 = *(double **)(v3 + 16);
  while (v4 != v5)
  {
    double v6 = *v4++;
    double result = PB::Writer::write(this, v6);
  }
  double v7 = *(double **)(v3 + 32);
  char v8 = *(double **)(v3 + 40);
  while (v7 != v8)
  {
    double v9 = *v7++;
    double result = PB::Writer::write(this, v9);
  }
  if (*(unsigned char *)(v3 + 72))
  {
    double v10 = *(double *)(v3 + 56);
    return PB::Writer::write(this, v10);
  }
  return result;
}

void sub_227BB270C(PB::Base *this)
{
  *(void *)this = &unk_26DC22F80;
  unint64_t v2 = (void *)*((void *)this + 7);
  if (v2)
  {
    *((void *)this + 8) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 4);
  if (v3)
  {
    *((void *)this + 5) = v3;
    operator delete(v3);
  }
  int v4 = (void *)*((void *)this + 1);
  if (v4)
  {
    *((void *)this + 2) = v4;
    operator delete(v4);
  }

  PB::Base::~Base(this);
}

void sub_227BB2790(PB::Base *a1)
{
  sub_227BB270C(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227BB27C8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 8) = 0u;
  int v4 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)a1 = &unk_26DC22F80;
  *(_DWORD *)(a1 + 88) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 72) = 0;
  if (*(unsigned char *)(a2 + 88))
  {
    uint64_t v5 = *(void *)(a2 + 80);
    *(unsigned char *)(a1 + 88) = 1;
    *(void *)(a1 + 80) = v5;
  }
  if (a1 != a2)
  {
    sub_227B8B74C(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
    sub_227B8B74C((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 3);
    sub_227B8B74C((char *)(a1 + 56), *(char **)(a2 + 56), *(void *)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 3);
  }
  return a1;
}

uint64_t sub_227BB2890(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(double **)(a1 + 8);
  double v6 = *(double **)(a1 + 16);
  while (v5 != v6)
  {
    double v7 = *v5++;
    PB::TextFormatter::format(this, "rotationMatrix", v7);
  }
  if (*(unsigned char *)(a1 + 88)) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 80));
  }
  char v8 = *(double **)(a1 + 32);
  double v9 = *(double **)(a1 + 40);
  while (v8 != v9)
  {
    double v10 = *v8++;
    PB::TextFormatter::format(this, "translation", v10);
  }
  uint64_t v11 = *(double **)(a1 + 56);
  uint64_t v12 = *(double **)(a1 + 64);
  while (v11 != v12)
  {
    double v13 = *v11++;
    PB::TextFormatter::format(this, "velocity", v13);
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227BB2984(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    char v8 = (void **)(a1 + 56);
    uint64_t v102 = a1 + 72;
    double v9 = (void **)(a1 + 32);
    uint64_t v10 = a1 + 48;
    uint64_t v11 = (void **)(a1 + 8);
    uint64_t v12 = a1 + 24;
    while (1)
    {
      uint64_t v13 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v14 = 0;
      unsigned int v15 = 0;
      unint64_t v16 = 0;
      while (1)
      {
        unint64_t v17 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v18 = *(unsigned char *)(v13 + v2);
        v16 |= (unint64_t)(v18 & 0x7F) << v14;
        if ((v18 & 0x80) == 0) {
          break;
        }
        v14 += 7;
        unint64_t v2 = v17;
        if (v15++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v25 = v16 & 7;
      if (v25 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v16 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 88) |= 1u;
          unint64_t v26 = *((void *)this + 1);
          if (v26 > 0xFFFFFFFFFFFFFFF7 || v26 + 8 > *((void *)this + 2)) {
            goto LABEL_155;
          }
          *(void *)(a1 + 80) = *(void *)(*(void *)this + v26);
          goto LABEL_157;
        case 2u:
          if (v25 != 2)
          {
            unint64_t v70 = *(char **)(a1 + 16);
            unint64_t v69 = *(void *)(a1 + 24);
            if ((unint64_t)v70 >= v69)
            {
              unint64_t v76 = (char *)*v11;
              uint64_t v77 = (v70 - (unsigned char *)*v11) >> 3;
              unint64_t v78 = v77 + 1;
              if ((unint64_t)(v77 + 1) >> 61) {
LABEL_166:
              }
                sub_227B8B89C();
              uint64_t v79 = v69 - (void)v76;
              if (v79 >> 2 > v78) {
                unint64_t v78 = v79 >> 2;
              }
              if ((unint64_t)v79 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v80 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v80 = v78;
              }
              if (v80)
              {
                unint64_t v81 = (char *)sub_227B8B8B4(v12, v80);
                unint64_t v76 = *(char **)(a1 + 8);
                unint64_t v70 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v81 = 0;
              }
              uint64_t v94 = &v81[8 * v77];
              *(void *)uint64_t v94 = 0;
              unint64_t v71 = v94 + 8;
              while (v70 != v76)
              {
                uint64_t v95 = *((void *)v70 - 1);
                v70 -= 8;
                *((void *)v94 - 1) = v95;
                v94 -= 8;
              }
              *(void *)(a1 + 8) = v94;
              *(void *)(a1 + 16) = v71;
              *(void *)(a1 + 24) = &v81[8 * v80];
              if (v76) {
                operator delete(v76);
              }
            }
            else
            {
              *(void *)unint64_t v70 = 0;
              unint64_t v71 = v70 + 8;
            }
            *(void *)(a1 + 16) = v71;
            goto LABEL_153;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v27 = *((void *)this + 1);
          unint64_t v28 = *((void *)this + 2);
          while (v27 < v28 && !*((unsigned char *)this + 24))
          {
            uint64_t v30 = *(char **)(a1 + 16);
            unint64_t v29 = *(void *)(a1 + 24);
            if ((unint64_t)v30 >= v29)
            {
              uint64_t v32 = (char *)*v11;
              uint64_t v33 = (v30 - (unsigned char *)*v11) >> 3;
              unint64_t v34 = v33 + 1;
              if ((unint64_t)(v33 + 1) >> 61) {
                goto LABEL_166;
              }
              uint64_t v35 = v29 - (void)v32;
              if (v35 >> 2 > v34) {
                unint64_t v34 = v35 >> 2;
              }
              if ((unint64_t)v35 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v36 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v36 = v34;
              }
              if (v36)
              {
                char v37 = (char *)sub_227B8B8B4(v12, v36);
                uint64_t v32 = *(char **)(a1 + 8);
                uint64_t v30 = *(char **)(a1 + 16);
              }
              else
              {
                char v37 = 0;
              }
              uint64_t v38 = &v37[8 * v33];
              *(void *)uint64_t v38 = 0;
              char v31 = v38 + 8;
              while (v30 != v32)
              {
                uint64_t v39 = *((void *)v30 - 1);
                v30 -= 8;
                *((void *)v38 - 1) = v39;
                v38 -= 8;
              }
              *(void *)(a1 + 8) = v38;
              *(void *)(a1 + 16) = v31;
              *(void *)(a1 + 24) = &v37[8 * v36];
              if (v32) {
                operator delete(v32);
              }
            }
            else
            {
              *(void *)uint64_t v30 = 0;
              char v31 = v30 + 8;
            }
            *(void *)(a1 + 16) = v31;
            unint64_t v40 = *((void *)this + 1);
            if (v40 > 0xFFFFFFFFFFFFFFF7 || v40 + 8 > *((void *)this + 2)) {
              goto LABEL_106;
            }
            *(v31 - 1) = *(void *)(*(void *)this + v40);
            unint64_t v28 = *((void *)this + 2);
            unint64_t v27 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v27;
          }
          goto LABEL_107;
        case 3u:
          if (v25 != 2)
          {
            uint64_t v73 = *(char **)(a1 + 40);
            unint64_t v72 = *(void *)(a1 + 48);
            if ((unint64_t)v73 >= v72)
            {
              unint64_t v82 = (char *)*v9;
              uint64_t v83 = (v73 - (unsigned char *)*v9) >> 3;
              unint64_t v84 = v83 + 1;
              if ((unint64_t)(v83 + 1) >> 61) {
LABEL_167:
              }
                sub_227B8B89C();
              uint64_t v85 = v72 - (void)v82;
              if (v85 >> 2 > v84) {
                unint64_t v84 = v85 >> 2;
              }
              if ((unint64_t)v85 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v86 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v86 = v84;
              }
              if (v86)
              {
                char v87 = (char *)sub_227B8B8B4(v10, v86);
                unint64_t v82 = *(char **)(a1 + 32);
                uint64_t v73 = *(char **)(a1 + 40);
              }
              else
              {
                char v87 = 0;
              }
              unint64_t v96 = &v87[8 * v83];
              *(void *)unint64_t v96 = 0;
              unint64_t v71 = v96 + 8;
              while (v73 != v82)
              {
                uint64_t v97 = *((void *)v73 - 1);
                v73 -= 8;
                *((void *)v96 - 1) = v97;
                v96 -= 8;
              }
              *(void *)(a1 + 32) = v96;
              *(void *)(a1 + 40) = v71;
              *(void *)(a1 + 48) = &v87[8 * v86];
              if (v82) {
                operator delete(v82);
              }
            }
            else
            {
              *(void *)uint64_t v73 = 0;
              unint64_t v71 = v73 + 8;
            }
            *(void *)(a1 + 40) = v71;
            goto LABEL_153;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v41 = *((void *)this + 1);
          unint64_t v42 = *((void *)this + 2);
          while (v41 < v42 && !*((unsigned char *)this + 24))
          {
            char v44 = *(char **)(a1 + 40);
            unint64_t v43 = *(void *)(a1 + 48);
            if ((unint64_t)v44 >= v43)
            {
              uint64_t v46 = (char *)*v9;
              uint64_t v47 = (v44 - (unsigned char *)*v9) >> 3;
              unint64_t v48 = v47 + 1;
              if ((unint64_t)(v47 + 1) >> 61) {
                goto LABEL_167;
              }
              uint64_t v49 = v43 - (void)v46;
              if (v49 >> 2 > v48) {
                unint64_t v48 = v49 >> 2;
              }
              if ((unint64_t)v49 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v50 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v50 = v48;
              }
              if (v50)
              {
                unint64_t v51 = (char *)sub_227B8B8B4(v10, v50);
                uint64_t v46 = *(char **)(a1 + 32);
                char v44 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v51 = 0;
              }
              uint64_t v52 = &v51[8 * v47];
              *(void *)uint64_t v52 = 0;
              char v45 = v52 + 8;
              while (v44 != v46)
              {
                uint64_t v53 = *((void *)v44 - 1);
                v44 -= 8;
                *((void *)v52 - 1) = v53;
                v52 -= 8;
              }
              *(void *)(a1 + 32) = v52;
              *(void *)(a1 + 40) = v45;
              *(void *)(a1 + 48) = &v51[8 * v50];
              if (v46) {
                operator delete(v46);
              }
            }
            else
            {
              *(void *)char v44 = 0;
              char v45 = v44 + 8;
            }
            *(void *)(a1 + 40) = v45;
            unint64_t v54 = *((void *)this + 1);
            if (v54 > 0xFFFFFFFFFFFFFFF7 || v54 + 8 > *((void *)this + 2)) {
              goto LABEL_106;
            }
            *(v45 - 1) = *(void *)(*(void *)this + v54);
            unint64_t v42 = *((void *)this + 2);
            unint64_t v41 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v41;
          }
          goto LABEL_107;
        case 4u:
          if (v25 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v55 = *((void *)this + 1);
            unint64_t v56 = *((void *)this + 2);
            while (v55 < v56 && !*((unsigned char *)this + 24))
            {
              unint64_t v58 = *(char **)(a1 + 64);
              unint64_t v57 = *(void *)(a1 + 72);
              if ((unint64_t)v58 >= v57)
              {
                uint64_t v60 = (char *)*v8;
                uint64_t v61 = (v58 - (unsigned char *)*v8) >> 3;
                unint64_t v62 = v61 + 1;
                if ((unint64_t)(v61 + 1) >> 61) {
                  goto LABEL_168;
                }
                uint64_t v63 = v57 - (void)v60;
                if (v63 >> 2 > v62) {
                  unint64_t v62 = v63 >> 2;
                }
                if ((unint64_t)v63 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v64 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v64 = v62;
                }
                if (v64)
                {
                  unint64_t v65 = (char *)sub_227B8B8B4(v102, v64);
                  uint64_t v60 = *(char **)(a1 + 56);
                  unint64_t v58 = *(char **)(a1 + 64);
                }
                else
                {
                  unint64_t v65 = 0;
                }
                uint64_t v66 = &v65[8 * v61];
                *(void *)uint64_t v66 = 0;
                char v59 = v66 + 8;
                while (v58 != v60)
                {
                  uint64_t v67 = *((void *)v58 - 1);
                  v58 -= 8;
                  *((void *)v66 - 1) = v67;
                  v66 -= 8;
                }
                *(void *)(a1 + 56) = v66;
                *(void *)(a1 + 64) = v59;
                *(void *)(a1 + 72) = &v65[8 * v64];
                if (v60) {
                  operator delete(v60);
                }
              }
              else
              {
                *(void *)unint64_t v58 = 0;
                char v59 = v58 + 8;
              }
              *(void *)(a1 + 64) = v59;
              unint64_t v68 = *((void *)this + 1);
              if (v68 > 0xFFFFFFFFFFFFFFF7 || v68 + 8 > *((void *)this + 2))
              {
LABEL_106:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v59 - 1) = *(void *)(*(void *)this + v68);
              unint64_t v56 = *((void *)this + 2);
              unint64_t v55 = *((void *)this + 1) + 8;
              *((void *)this + 1) = v55;
            }
LABEL_107:
            PB::Reader::recallMark();
          }
          else
          {
            uint64_t v75 = *(char **)(a1 + 64);
            unint64_t v74 = *(void *)(a1 + 72);
            if ((unint64_t)v75 >= v74)
            {
              uint64_t v88 = (char *)*v8;
              uint64_t v89 = (v75 - (unsigned char *)*v8) >> 3;
              unint64_t v90 = v89 + 1;
              if ((unint64_t)(v89 + 1) >> 61) {
LABEL_168:
              }
                sub_227B8B89C();
              uint64_t v91 = v74 - (void)v88;
              if (v91 >> 2 > v90) {
                unint64_t v90 = v91 >> 2;
              }
              if ((unint64_t)v91 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v92 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v92 = v90;
              }
              if (v92)
              {
                unint64_t v93 = (char *)sub_227B8B8B4(v102, v92);
                uint64_t v88 = *(char **)(a1 + 56);
                uint64_t v75 = *(char **)(a1 + 64);
              }
              else
              {
                unint64_t v93 = 0;
              }
              uint64_t v98 = &v93[8 * v89];
              *(void *)uint64_t v98 = 0;
              unint64_t v71 = v98 + 8;
              while (v75 != v88)
              {
                uint64_t v99 = *((void *)v75 - 1);
                v75 -= 8;
                *((void *)v98 - 1) = v99;
                v98 -= 8;
              }
              *(void *)(a1 + 56) = v98;
              *(void *)(a1 + 64) = v71;
              *(void *)(a1 + 72) = &v93[8 * v92];
              if (v88) {
                operator delete(v88);
              }
            }
            else
            {
              *(void *)uint64_t v75 = 0;
              unint64_t v71 = v75 + 8;
            }
            *(void *)(a1 + 64) = v71;
LABEL_153:
            unint64_t v100 = *((void *)this + 1);
            if (v100 <= 0xFFFFFFFFFFFFFFF7 && v100 + 8 <= *((void *)this + 2))
            {
              *(v71 - 1) = *(void *)(*(void *)this + v100);
LABEL_157:
              *((void *)this + 1) += 8;
            }
            else
            {
LABEL_155:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_158:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || *((unsigned char *)this + 24)) {
            return v4 == 0;
          }
          break;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_158;
      }
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v16 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v22 = v2 + 1;
      char v23 = *(unsigned char *)(v13 + v2);
      *((void *)this + 1) = v22;
      v16 |= (unint64_t)(v23 & 0x7F) << v20;
      if ((v23 & 0x80) == 0) {
        goto LABEL_21;
      }
      v20 += 7;
      unint64_t v2 = v22;
      if (v21++ >= 9)
      {
LABEL_20:
        unint64_t v16 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227BB30D4(uint64_t result, PB::Writer *this)
{
  unint64_t v3 = (void *)result;
  if (*(unsigned char *)(result + 88)) {
    double result = PB::Writer::write(this, *(double *)(result + 80));
  }
  int v4 = (double *)v3[1];
  uint64_t v5 = (double *)v3[2];
  while (v4 != v5)
  {
    double v6 = *v4++;
    double result = PB::Writer::write(this, v6);
  }
  double v7 = (double *)v3[4];
  char v8 = (double *)v3[5];
  while (v7 != v8)
  {
    double v9 = *v7++;
    double result = PB::Writer::write(this, v9);
  }
  uint64_t v11 = (double *)v3[7];
  uint64_t v10 = (double *)v3[8];
  while (v11 != v10)
  {
    double v12 = *v11++;
    double result = PB::Writer::write(this, v12);
  }
  return result;
}

uint64_t sub_227BB3178(uint64_t result)
{
  *(void *)double result = &unk_26DC22FB8;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

void sub_227BB31A0(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227BB31D8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC22FB8;
  *(_DWORD *)(a1 + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 28);
  if ((v2 & 4) != 0)
  {
    LODWORD(result) = *(_DWORD *)(a2 + 24);
    char v3 = 4;
    *(unsigned char *)(a1 + 28) = 4;
    *(_DWORD *)(a1 + 24) = LODWORD(result);
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 28) & 2) != 0)
  {
LABEL_5:
    double result = *(double *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(a1 + 28) = v3;
    *(double *)(a1 + 16) = result;
    char v2 = *(unsigned char *)(a2 + 28);
  }
LABEL_6:
  if (v2)
  {
    double result = *(double *)(a2 + 8);
    *(unsigned char *)(a1 + 28) = v3 | 1;
    *(double *)(a1 + 8) = result;
  }
  return result;
}

uint64_t sub_227BB3258(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "calories_kCal", *(float *)(a1 + 24));
    char v5 = *(unsigned char *)(a1 + 28);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((*(unsigned char *)(a1 + 28) & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "globalMachtime", *(double *)(a1 + 8));
  if ((*(unsigned char *)(a1 + 28) & 2) != 0) {
LABEL_4:
  }
    PB::TextFormatter::format(this, "localMachtime", *(double *)(a1 + 16));
LABEL_5:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BB32FC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
        return v4 == 0;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 3) {
        break;
      }
      if (v20 == 2)
      {
        *(unsigned char *)(a1 + 28) |= 2u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
          goto LABEL_32;
        }
        *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
LABEL_36:
        unint64_t v2 = *((void *)this + 1) + 8;
        goto LABEL_37;
      }
      if (v20 != 1)
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
        goto LABEL_38;
      }
      *(unsigned char *)(a1 + 28) |= 4u;
      unint64_t v2 = *((void *)this + 1);
      if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2))
      {
LABEL_32:
        *((unsigned char *)this + 24) = 1;
        goto LABEL_38;
      }
      *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
      unint64_t v2 = *((void *)this + 1) + 4;
LABEL_37:
      *((void *)this + 1) = v2;
LABEL_38:
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    *(unsigned char *)(a1 + 28) |= 1u;
    unint64_t v2 = *((void *)this + 1);
    if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
      goto LABEL_32;
    }
    *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
    goto LABEL_36;
  }
  return v4 == 0;
}

uint64_t sub_227BB3520(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if ((v4 & 4) == 0)
  {
    if ((*(unsigned char *)(result + 28) & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
    if ((*(unsigned char *)(v3 + 28) & 1) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(result + 24));
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v4 & 1) == 0) {
    return result;
  }
LABEL_7:
  double v5 = *(double *)(v3 + 8);

  return PB::Writer::write(this, v5);
}

void *sub_227BB35AC(void *result)
{
  *uint64_t result = &unk_26DC22FF0;
  *(void *)((char *)result + 164) = 0;
  return result;
}

void sub_227BB35D4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227BB360C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC22FF0;
  *(void *)(a1 + 164) = 0;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x2000000) != 0)
  {
    LODWORD(v4) = *(_DWORD *)(a2 + 120);
    uint64_t v3 = 0x2000000;
    *(void *)(a1 + 164) = 0x2000000;
    *(_DWORD *)(a1 + 120) = v4;
    uint64_t v2 = *(void *)(a2 + 164);
    if ((v2 & 0x80) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v3 = 0;
  if ((v2 & 0x80) != 0)
  {
LABEL_5:
    LODWORD(v4) = *(_DWORD *)(a2 + 48);
    v3 |= 0x80uLL;
    *(void *)(a1 + 164) = v3;
    *(_DWORD *)(a1 + 48) = v4;
    uint64_t v2 = *(void *)(a2 + 164);
  }
LABEL_6:
  if ((v2 & 0x10000) != 0)
  {
    LODWORD(v4) = *(_DWORD *)(a2 + 84);
    v3 |= 0x10000uLL;
    *(void *)(a1 + 164) = v3;
    *(_DWORD *)(a1 + 84) = v4;
    uint64_t v2 = *(void *)(a2 + 164);
    if ((v2 & 8) == 0)
    {
LABEL_8:
      if ((v2 & 0x40000000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_45;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_8;
  }
  int v5 = *(_DWORD *)(a2 + 32);
  v3 |= 8uLL;
  *(void *)(a1 + 164) = v3;
  *(_DWORD *)(a1 + 32) = v5;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x40000000) == 0)
  {
LABEL_9:
    if ((v2 & 0x400000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_46;
  }
LABEL_45:
  LODWORD(v4) = *(_DWORD *)(a2 + 140);
  v3 |= 0x40000000uLL;
  *(void *)(a1 + 164) = v3;
  *(_DWORD *)(a1 + 140) = v4;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x400000000) == 0)
  {
LABEL_10:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_47;
  }
LABEL_46:
  LODWORD(v4) = *(_DWORD *)(a2 + 156);
  v3 |= 0x400000000uLL;
  *(void *)(a1 + 164) = v3;
  *(_DWORD *)(a1 + 156) = v4;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x400000) == 0)
  {
LABEL_11:
    if ((v2 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_48;
  }
LABEL_47:
  LODWORD(v4) = *(_DWORD *)(a2 + 108);
  v3 |= 0x400000uLL;
  *(void *)(a1 + 164) = v3;
  *(_DWORD *)(a1 + 108) = v4;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x20) == 0)
  {
LABEL_12:
    if ((v2 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_49;
  }
LABEL_48:
  LODWORD(v4) = *(_DWORD *)(a2 + 40);
  v3 |= 0x20uLL;
  *(void *)(a1 + 164) = v3;
  *(_DWORD *)(a1 + 40) = v4;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x40) == 0)
  {
LABEL_13:
    if ((v2 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_50;
  }
LABEL_49:
  LODWORD(v4) = *(_DWORD *)(a2 + 44);
  v3 |= 0x40uLL;
  *(void *)(a1 + 164) = v3;
  *(_DWORD *)(a1 + 44) = v4;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 2) == 0)
  {
LABEL_14:
    if ((v2 & 0x2000000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t v4 = *(void *)(a2 + 16);
  v3 |= 2uLL;
  *(void *)(a1 + 164) = v3;
  *(void *)(a1 + 16) = v4;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x2000000000) == 0)
  {
LABEL_15:
    if ((v2 & 0x800) == 0) {
      goto LABEL_16;
    }
    goto LABEL_52;
  }
LABEL_51:
  char v6 = *(unsigned char *)(a2 + 162);
  v3 |= 0x2000000000uLL;
  *(void *)(a1 + 164) = v3;
  *(unsigned char *)(a1 + 162) = v6;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x800) == 0)
  {
LABEL_16:
    if ((v2 & 0x10000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_53;
  }
LABEL_52:
  LODWORD(v4) = *(_DWORD *)(a2 + 64);
  v3 |= 0x800uLL;
  *(void *)(a1 + 164) = v3;
  *(_DWORD *)(a1 + 64) = v4;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_17:
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_54;
  }
LABEL_53:
  LODWORD(v4) = *(_DWORD *)(a2 + 132);
  v3 |= 0x10000000uLL;
  *(void *)(a1 + 164) = v3;
  *(_DWORD *)(a1 + 132) = v4;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x8000000) == 0)
  {
LABEL_18:
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_55;
  }
LABEL_54:
  int v7 = *(_DWORD *)(a2 + 128);
  v3 |= 0x8000000uLL;
  *(void *)(a1 + 164) = v3;
  *(_DWORD *)(a1 + 128) = v7;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_19:
    if ((v2 & 0x20000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_56;
  }
LABEL_55:
  LODWORD(v4) = *(_DWORD *)(a2 + 124);
  v3 |= 0x4000000uLL;
  *(void *)(a1 + 164) = v3;
  *(_DWORD *)(a1 + 124) = v4;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x20000000) == 0)
  {
LABEL_20:
    if ((v2 & 0x200) == 0) {
      goto LABEL_21;
    }
    goto LABEL_57;
  }
LABEL_56:
  LODWORD(v4) = *(_DWORD *)(a2 + 136);
  v3 |= 0x20000000uLL;
  *(void *)(a1 + 164) = v3;
  *(_DWORD *)(a1 + 136) = v4;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x200) == 0)
  {
LABEL_21:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_58;
  }
LABEL_57:
  LODWORD(v4) = *(_DWORD *)(a2 + 56);
  v3 |= 0x200uLL;
  *(void *)(a1 + 164) = v3;
  *(_DWORD *)(a1 + 56) = v4;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_22:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_59;
  }
LABEL_58:
  LODWORD(v4) = *(_DWORD *)(a2 + 116);
  v3 |= 0x1000000uLL;
  *(void *)(a1 + 164) = v3;
  *(_DWORD *)(a1 + 116) = v4;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x2000) == 0)
  {
LABEL_23:
    if ((v2 & 0x200000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_60;
  }
LABEL_59:
  int v8 = *(_DWORD *)(a2 + 72);
  v3 |= 0x2000uLL;
  *(void *)(a1 + 164) = v3;
  *(_DWORD *)(a1 + 72) = v8;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x200000000) == 0)
  {
LABEL_24:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_61;
  }
LABEL_60:
  LODWORD(v4) = *(_DWORD *)(a2 + 152);
  v3 |= 0x200000000uLL;
  *(void *)(a1 + 164) = v3;
  *(_DWORD *)(a1 + 152) = v4;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x4000) == 0)
  {
LABEL_25:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_62;
  }
LABEL_61:
  LODWORD(v4) = *(_DWORD *)(a2 + 76);
  v3 |= 0x4000uLL;
  *(void *)(a1 + 164) = v3;
  *(_DWORD *)(a1 + 76) = v4;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x8000) == 0)
  {
LABEL_26:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_63;
  }
LABEL_62:
  LODWORD(v4) = *(_DWORD *)(a2 + 80);
  v3 |= 0x8000uLL;
  *(void *)(a1 + 164) = v3;
  *(_DWORD *)(a1 + 80) = v4;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x1000) == 0)
  {
LABEL_27:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_64;
  }
LABEL_63:
  int v9 = *(_DWORD *)(a2 + 68);
  v3 |= 0x1000uLL;
  *(void *)(a1 + 164) = v3;
  *(_DWORD *)(a1 + 68) = v9;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x200000) == 0)
  {
LABEL_28:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_65;
  }
LABEL_64:
  LODWORD(v4) = *(_DWORD *)(a2 + 104);
  v3 |= 0x200000uLL;
  *(void *)(a1 + 164) = v3;
  *(_DWORD *)(a1 + 104) = v4;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x100000) == 0)
  {
LABEL_29:
    if ((v2 & 4) == 0) {
      goto LABEL_30;
    }
    goto LABEL_66;
  }
LABEL_65:
  LODWORD(v4) = *(_DWORD *)(a2 + 100);
  v3 |= 0x100000uLL;
  *(void *)(a1 + 164) = v3;
  *(_DWORD *)(a1 + 100) = v4;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 4) == 0)
  {
LABEL_30:
    if ((v2 & 1) == 0) {
      goto LABEL_31;
    }
    goto LABEL_67;
  }
LABEL_66:
  uint64_t v10 = *(void *)(a2 + 24);
  v3 |= 4uLL;
  *(void *)(a1 + 164) = v3;
  *(void *)(a1 + 24) = v10;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 1) == 0)
  {
LABEL_31:
    if ((v2 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_68;
  }
LABEL_67:
  uint64_t v11 = *(void *)(a2 + 8);
  v3 |= 1uLL;
  *(void *)(a1 + 164) = v3;
  *(void *)(a1 + 8) = v11;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x80000000) == 0)
  {
LABEL_32:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_69;
  }
LABEL_68:
  LODWORD(v4) = *(_DWORD *)(a2 + 144);
  v3 |= 0x80000000uLL;
  *(void *)(a1 + 164) = v3;
  *(_DWORD *)(a1 + 144) = v4;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x80000) == 0)
  {
LABEL_33:
    if ((v2 & 0x10) == 0) {
      goto LABEL_34;
    }
    goto LABEL_70;
  }
LABEL_69:
  int v12 = *(_DWORD *)(a2 + 96);
  v3 |= 0x80000uLL;
  *(void *)(a1 + 164) = v3;
  *(_DWORD *)(a1 + 96) = v12;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x10) == 0)
  {
LABEL_34:
    if ((v2 & 0x1000000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_71;
  }
LABEL_70:
  int v13 = *(_DWORD *)(a2 + 36);
  v3 |= 0x10uLL;
  *(void *)(a1 + 164) = v3;
  *(_DWORD *)(a1 + 36) = v13;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x1000000000) == 0)
  {
LABEL_35:
    if ((v2 & 0x800000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_72;
  }
LABEL_71:
  char v14 = *(unsigned char *)(a2 + 161);
  v3 |= 0x1000000000uLL;
  *(void *)(a1 + 164) = v3;
  *(unsigned char *)(a1 + 161) = v14;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x800000000) == 0)
  {
LABEL_36:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_73;
  }
LABEL_72:
  char v15 = *(unsigned char *)(a2 + 160);
  v3 |= 0x800000000uLL;
  *(void *)(a1 + 164) = v3;
  *(unsigned char *)(a1 + 160) = v15;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x800000) == 0)
  {
LABEL_37:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_74;
  }
LABEL_73:
  LODWORD(v4) = *(_DWORD *)(a2 + 112);
  v3 |= 0x800000uLL;
  *(void *)(a1 + 164) = v3;
  *(_DWORD *)(a1 + 112) = v4;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x20000) == 0)
  {
LABEL_38:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_75;
  }
LABEL_74:
  LODWORD(v4) = *(_DWORD *)(a2 + 88);
  v3 |= 0x20000uLL;
  *(void *)(a1 + 164) = v3;
  *(_DWORD *)(a1 + 88) = v4;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x40000) == 0)
  {
LABEL_39:
    if ((v2 & 0x400) == 0) {
      goto LABEL_40;
    }
    goto LABEL_76;
  }
LABEL_75:
  LODWORD(v4) = *(_DWORD *)(a2 + 92);
  v3 |= 0x40000uLL;
  *(void *)(a1 + 164) = v3;
  *(_DWORD *)(a1 + 92) = v4;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x400) == 0)
  {
LABEL_40:
    if ((v2 & 0x100) == 0) {
      goto LABEL_41;
    }
    goto LABEL_77;
  }
LABEL_76:
  int v16 = *(_DWORD *)(a2 + 60);
  v3 |= 0x400uLL;
  *(void *)(a1 + 164) = v3;
  *(_DWORD *)(a1 + 60) = v16;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x100) == 0)
  {
LABEL_41:
    if ((v2 & 0x100000000) == 0) {
      return *(float *)&v4;
    }
    goto LABEL_78;
  }
LABEL_77:
  LODWORD(v4) = *(_DWORD *)(a2 + 52);
  v3 |= 0x100uLL;
  *(void *)(a1 + 164) = v3;
  *(_DWORD *)(a1 + 52) = v4;
  if ((*(void *)(a2 + 164) & 0x100000000) == 0) {
    return *(float *)&v4;
  }
LABEL_78:
  LODWORD(v4) = *(_DWORD *)(a2 + 148);
  *(void *)(a1 + 164) = v3 | 0x100000000;
  *(_DWORD *)(a1 + 148) = v4;
  return *(float *)&v4;
}

uint64_t sub_227BB3A60(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 8) != 0)
  {
    PB::TextFormatter::format(this, "activity");
    uint64_t v5 = *(void *)(a1 + 164);
    if ((v5 & 0x10) == 0)
    {
LABEL_3:
      if ((v5 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_45;
    }
  }
  else if ((v5 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "activityTypeWithoutOverride");
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x20) == 0)
  {
LABEL_4:
    if ((v5 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_46;
  }
LABEL_45:
  PB::TextFormatter::format(this, "avgTruthMets", *(float *)(a1 + 40));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 1) == 0)
  {
LABEL_5:
    if ((v5 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_47;
  }
LABEL_46:
  PB::TextFormatter::format(this, "basalCalories");
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x40) == 0)
  {
LABEL_6:
    if ((v5 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(this, "basalMets", *(float *)(a1 + 44));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x80) == 0)
  {
LABEL_7:
    if ((v5 & 0x100) == 0) {
      goto LABEL_8;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(this, "computeTime", *(float *)(a1 + 48));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x100) == 0)
  {
LABEL_8:
    if ((v5 & 0x200) == 0) {
      goto LABEL_9;
    }
    goto LABEL_50;
  }
LABEL_49:
  PB::TextFormatter::format(this, "currentPace", *(float *)(a1 + 52));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x200) == 0)
  {
LABEL_9:
    if ((v5 & 0x400) == 0) {
      goto LABEL_10;
    }
    goto LABEL_51;
  }
LABEL_50:
  PB::TextFormatter::format(this, "distance", *(float *)(a1 + 56));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x400) == 0)
  {
LABEL_10:
    if ((v5 & 0x800) == 0) {
      goto LABEL_11;
    }
    goto LABEL_52;
  }
LABEL_51:
  PB::TextFormatter::format(this, "distanceSource");
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x800) == 0)
  {
LABEL_11:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_53;
  }
LABEL_52:
  PB::TextFormatter::format(this, "duration", *(float *)(a1 + 64));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x1000) == 0)
  {
LABEL_12:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(this, "elevationAscended");
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x2000) == 0)
  {
LABEL_13:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(this, "gradeType");
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x4000) == 0)
  {
LABEL_14:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_56;
  }
LABEL_55:
  PB::TextFormatter::format(this, "heartRate", *(float *)(a1 + 76));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x8000) == 0)
  {
LABEL_15:
    if ((v5 & 0x800000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_57;
  }
LABEL_56:
  PB::TextFormatter::format(this, "heartRateConfidence", *(float *)(a1 + 80));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x800000000) == 0)
  {
LABEL_16:
    if ((v5 & 0x1000000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_58;
  }
LABEL_57:
  PB::TextFormatter::format(this, "isMotionOverrideSet");
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x1000000000) == 0)
  {
LABEL_17:
    if ((v5 & 0x2000000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_59;
  }
LABEL_58:
  PB::TextFormatter::format(this, "isStanding");
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x2000000000) == 0)
  {
LABEL_18:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_60;
  }
LABEL_59:
  PB::TextFormatter::format(this, "isStored");
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x10000) == 0)
  {
LABEL_19:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_61;
  }
LABEL_60:
  PB::TextFormatter::format(this, "now", *(float *)(a1 + 84));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x20000) == 0)
  {
LABEL_20:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_62;
  }
LABEL_61:
  PB::TextFormatter::format(this, "pedDistance", *(float *)(a1 + 88));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x40000) == 0)
  {
LABEL_21:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_63;
  }
LABEL_62:
  PB::TextFormatter::format(this, "pedRawDistance", *(float *)(a1 + 92));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x80000) == 0)
  {
LABEL_22:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_64;
  }
LABEL_63:
  PB::TextFormatter::format(this, "pushCount");
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x100000) == 0)
  {
LABEL_23:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_65;
  }
LABEL_64:
  PB::TextFormatter::format(this, "rawFMMets", *(float *)(a1 + 100));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x200000) == 0)
  {
LABEL_24:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_66;
  }
LABEL_65:
  PB::TextFormatter::format(this, "rawHRMets", *(float *)(a1 + 104));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x400000) == 0)
  {
LABEL_25:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_67;
  }
LABEL_66:
  PB::TextFormatter::format(this, "rawTruthMets", *(float *)(a1 + 108));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x800000) == 0)
  {
LABEL_26:
    if ((v5 & 2) == 0) {
      goto LABEL_27;
    }
    goto LABEL_68;
  }
LABEL_67:
  PB::TextFormatter::format(this, "rawWRMets", *(float *)(a1 + 112));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 2) == 0)
  {
LABEL_27:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_69;
  }
LABEL_68:
  PB::TextFormatter::format(this, "recordInterval", *(double *)(a1 + 16));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_28:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_70;
  }
LABEL_69:
  PB::TextFormatter::format(this, "speed", *(float *)(a1 + 116));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_29:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_71;
  }
LABEL_70:
  PB::TextFormatter::format(this, "startTime", *(float *)(a1 + 120));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_30:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_72;
  }
LABEL_71:
  PB::TextFormatter::format(this, "stepBegin", *(float *)(a1 + 124));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_31:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_73;
  }
LABEL_72:
  PB::TextFormatter::format(this, "stepCount");
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_32:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_74;
  }
LABEL_73:
  PB::TextFormatter::format(this, "stepDuration", *(float *)(a1 + 132));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x20000000) == 0)
  {
LABEL_33:
    if ((v5 & 4) == 0) {
      goto LABEL_34;
    }
    goto LABEL_75;
  }
LABEL_74:
  PB::TextFormatter::format(this, "stepEnd", *(float *)(a1 + 136));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 4) == 0)
  {
LABEL_34:
    if ((v5 & 0x40000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_76;
  }
LABEL_75:
  PB::TextFormatter::format(this, "totalCalories");
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x40000000) == 0)
  {
LABEL_35:
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_77;
  }
LABEL_76:
  PB::TextFormatter::format(this, "userMets", *(float *)(a1 + 140));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x80000000) == 0)
  {
LABEL_36:
    if ((v5 & 0x100000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_78;
  }
LABEL_77:
  PB::TextFormatter::format(this, "vectorMag", *(float *)(a1 + 144));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x100000000) == 0)
  {
LABEL_37:
    if ((v5 & 0x200000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_79;
  }
LABEL_78:
  PB::TextFormatter::format(this, "vectorMagCmSimOnly", *(float *)(a1 + 148));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x200000000) == 0)
  {
LABEL_38:
    if ((v5 & 0x400000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_39;
  }
LABEL_79:
  PB::TextFormatter::format(this, "verticalSpeed", *(float *)(a1 + 152));
  if ((*(void *)(a1 + 164) & 0x400000000) != 0) {
LABEL_39:
  }
    PB::TextFormatter::format(this, "wrMets", *(float *)(a1 + 156));
LABEL_40:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BB3F64(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(void *)(a1 + 164) |= 0x2000000uLL;
          unint64_t v20 = *((void *)this + 1);
          if (v20 > 0xFFFFFFFFFFFFFFFBLL || v20 + 4 > *((void *)this + 2)) {
            goto LABEL_170;
          }
          *(_DWORD *)(a1 + 120) = *(_DWORD *)(*(void *)this + v20);
          goto LABEL_241;
        case 2u:
          *(void *)(a1 + 164) |= 0x80uLL;
          unint64_t v22 = *((void *)this + 1);
          if (v22 > 0xFFFFFFFFFFFFFFFBLL || v22 + 4 > *((void *)this + 2)) {
            goto LABEL_170;
          }
          *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v22);
          goto LABEL_241;
        case 3u:
          *(void *)(a1 + 164) |= 0x10000uLL;
          unint64_t v23 = *((void *)this + 1);
          if (v23 > 0xFFFFFFFFFFFFFFFBLL || v23 + 4 > *((void *)this + 2)) {
            goto LABEL_170;
          }
          *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v23);
          goto LABEL_241;
        case 4u:
          *(void *)(a1 + 164) |= 8uLL;
          unint64_t v24 = *((void *)this + 1);
          unint64_t v25 = *((void *)this + 2);
          uint64_t v26 = *(void *)this;
          if (v24 <= 0xFFFFFFFFFFFFFFF5 && v24 + 10 <= v25)
          {
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v29 = 0;
            do
            {
              unint64_t v30 = v24 + 1;
              *((void *)this + 1) = v24 + 1;
              char v31 = *(unsigned char *)(v26 + v24);
              v29 |= (unint64_t)(v31 & 0x7F) << v27;
              if ((v31 & 0x80) == 0) {
                goto LABEL_251;
              }
              v27 += 7;
              unint64_t v24 = v30;
              BOOL v14 = v28++ > 8;
            }
            while (!v14);
LABEL_177:
            LODWORD(v29) = 0;
            goto LABEL_251;
          }
          char v132 = 0;
          unsigned int v133 = 0;
          uint64_t v29 = 0;
          if (v25 <= v24) {
            unint64_t v25 = *((void *)this + 1);
          }
          while (2)
          {
            if (v25 == v24)
            {
              LODWORD(v29) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v134 = v24 + 1;
              char v135 = *(unsigned char *)(v26 + v24);
              *((void *)this + 1) = v134;
              v29 |= (unint64_t)(v135 & 0x7F) << v132;
              if (v135 < 0)
              {
                v132 += 7;
                unint64_t v24 = v134;
                BOOL v14 = v133++ > 8;
                if (v14) {
                  goto LABEL_177;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v29) = 0;
              }
            }
            break;
          }
LABEL_251:
          *(_DWORD *)(a1 + 32) = v29;
          goto LABEL_243;
        case 5u:
          *(void *)(a1 + 164) |= 0x40000000uLL;
          unint64_t v32 = *((void *)this + 1);
          if (v32 > 0xFFFFFFFFFFFFFFFBLL || v32 + 4 > *((void *)this + 2)) {
            goto LABEL_170;
          }
          *(_DWORD *)(a1 + 140) = *(_DWORD *)(*(void *)this + v32);
          goto LABEL_241;
        case 6u:
          *(void *)(a1 + 164) |= 0x400000000uLL;
          unint64_t v33 = *((void *)this + 1);
          if (v33 > 0xFFFFFFFFFFFFFFFBLL || v33 + 4 > *((void *)this + 2)) {
            goto LABEL_170;
          }
          *(_DWORD *)(a1 + 156) = *(_DWORD *)(*(void *)this + v33);
          goto LABEL_241;
        case 7u:
          *(void *)(a1 + 164) |= 0x400000uLL;
          unint64_t v34 = *((void *)this + 1);
          if (v34 > 0xFFFFFFFFFFFFFFFBLL || v34 + 4 > *((void *)this + 2)) {
            goto LABEL_170;
          }
          *(_DWORD *)(a1 + 108) = *(_DWORD *)(*(void *)this + v34);
          goto LABEL_241;
        case 8u:
          *(void *)(a1 + 164) |= 0x20uLL;
          unint64_t v35 = *((void *)this + 1);
          if (v35 > 0xFFFFFFFFFFFFFFFBLL || v35 + 4 > *((void *)this + 2)) {
            goto LABEL_170;
          }
          *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v35);
          goto LABEL_241;
        case 9u:
          *(void *)(a1 + 164) |= 0x40uLL;
          unint64_t v36 = *((void *)this + 1);
          if (v36 > 0xFFFFFFFFFFFFFFFBLL || v36 + 4 > *((void *)this + 2)) {
            goto LABEL_170;
          }
          *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v36);
          goto LABEL_241;
        case 0xAu:
          *(void *)(a1 + 164) |= 2uLL;
          unint64_t v37 = *((void *)this + 1);
          if (v37 > 0xFFFFFFFFFFFFFFF7 || v37 + 8 > *((void *)this + 2)) {
            goto LABEL_170;
          }
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v37);
          uint64_t v38 = *((void *)this + 1) + 8;
          goto LABEL_242;
        case 0xBu:
          *(void *)(a1 + 164) |= 0x2000000000uLL;
          unint64_t v39 = *((void *)this + 1);
          if (v39 >= *((void *)this + 2))
          {
            BOOL v42 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v40 = v39 + 1;
            int v41 = *(unsigned __int8 *)(*(void *)this + v39);
            *((void *)this + 1) = v40;
            BOOL v42 = v41 != 0;
          }
          *(unsigned char *)(a1 + 162) = v42;
          goto LABEL_243;
        case 0xCu:
          *(void *)(a1 + 164) |= 0x800uLL;
          unint64_t v43 = *((void *)this + 1);
          if (v43 > 0xFFFFFFFFFFFFFFFBLL || v43 + 4 > *((void *)this + 2)) {
            goto LABEL_170;
          }
          *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v43);
          goto LABEL_241;
        case 0xDu:
          *(void *)(a1 + 164) |= 0x10000000uLL;
          unint64_t v44 = *((void *)this + 1);
          if (v44 > 0xFFFFFFFFFFFFFFFBLL || v44 + 4 > *((void *)this + 2)) {
            goto LABEL_170;
          }
          *(_DWORD *)(a1 + 132) = *(_DWORD *)(*(void *)this + v44);
          goto LABEL_241;
        case 0xEu:
          *(void *)(a1 + 164) |= 0x8000000uLL;
          unint64_t v45 = *((void *)this + 1);
          unint64_t v46 = *((void *)this + 2);
          uint64_t v47 = *(void *)this;
          if (v45 <= 0xFFFFFFFFFFFFFFF5 && v45 + 10 <= v46)
          {
            char v48 = 0;
            unsigned int v49 = 0;
            uint64_t v50 = 0;
            do
            {
              unint64_t v51 = v45 + 1;
              *((void *)this + 1) = v45 + 1;
              char v52 = *(unsigned char *)(v47 + v45);
              v50 |= (unint64_t)(v52 & 0x7F) << v48;
              if ((v52 & 0x80) == 0) {
                goto LABEL_255;
              }
              v48 += 7;
              unint64_t v45 = v51;
              BOOL v14 = v49++ > 8;
            }
            while (!v14);
LABEL_186:
            LODWORD(v50) = 0;
            goto LABEL_255;
          }
          char v136 = 0;
          unsigned int v137 = 0;
          uint64_t v50 = 0;
          if (v46 <= v45) {
            unint64_t v46 = *((void *)this + 1);
          }
          while (2)
          {
            if (v46 == v45)
            {
              LODWORD(v50) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v138 = v45 + 1;
              char v139 = *(unsigned char *)(v47 + v45);
              *((void *)this + 1) = v138;
              v50 |= (unint64_t)(v139 & 0x7F) << v136;
              if (v139 < 0)
              {
                v136 += 7;
                unint64_t v45 = v138;
                BOOL v14 = v137++ > 8;
                if (v14) {
                  goto LABEL_186;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v50) = 0;
              }
            }
            break;
          }
LABEL_255:
          *(_DWORD *)(a1 + 128) = v50;
          goto LABEL_243;
        case 0xFu:
          *(void *)(a1 + 164) |= 0x4000000uLL;
          unint64_t v53 = *((void *)this + 1);
          if (v53 > 0xFFFFFFFFFFFFFFFBLL || v53 + 4 > *((void *)this + 2)) {
            goto LABEL_170;
          }
          *(_DWORD *)(a1 + 124) = *(_DWORD *)(*(void *)this + v53);
          goto LABEL_241;
        case 0x10u:
          *(void *)(a1 + 164) |= 0x20000000uLL;
          unint64_t v54 = *((void *)this + 1);
          if (v54 > 0xFFFFFFFFFFFFFFFBLL || v54 + 4 > *((void *)this + 2)) {
            goto LABEL_170;
          }
          *(_DWORD *)(a1 + 136) = *(_DWORD *)(*(void *)this + v54);
          goto LABEL_241;
        case 0x11u:
          *(void *)(a1 + 164) |= 0x200uLL;
          unint64_t v55 = *((void *)this + 1);
          if (v55 > 0xFFFFFFFFFFFFFFFBLL || v55 + 4 > *((void *)this + 2)) {
            goto LABEL_170;
          }
          *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v55);
          goto LABEL_241;
        case 0x12u:
          *(void *)(a1 + 164) |= 0x1000000uLL;
          unint64_t v56 = *((void *)this + 1);
          if (v56 > 0xFFFFFFFFFFFFFFFBLL || v56 + 4 > *((void *)this + 2)) {
            goto LABEL_170;
          }
          *(_DWORD *)(a1 + 116) = *(_DWORD *)(*(void *)this + v56);
          goto LABEL_241;
        case 0x13u:
          *(void *)(a1 + 164) |= 0x2000uLL;
          unint64_t v57 = *((void *)this + 1);
          unint64_t v58 = *((void *)this + 2);
          uint64_t v59 = *(void *)this;
          if (v57 <= 0xFFFFFFFFFFFFFFF5 && v57 + 10 <= v58)
          {
            char v60 = 0;
            unsigned int v61 = 0;
            uint64_t v62 = 0;
            do
            {
              unint64_t v63 = v57 + 1;
              *((void *)this + 1) = v57 + 1;
              char v64 = *(unsigned char *)(v59 + v57);
              v62 |= (unint64_t)(v64 & 0x7F) << v60;
              if ((v64 & 0x80) == 0) {
                goto LABEL_259;
              }
              v60 += 7;
              unint64_t v57 = v63;
              BOOL v14 = v61++ > 8;
            }
            while (!v14);
LABEL_193:
            LODWORD(v62) = 0;
            goto LABEL_259;
          }
          char v140 = 0;
          unsigned int v141 = 0;
          uint64_t v62 = 0;
          if (v58 <= v57) {
            unint64_t v58 = *((void *)this + 1);
          }
          while (2)
          {
            if (v58 == v57)
            {
              LODWORD(v62) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v142 = v57 + 1;
              char v143 = *(unsigned char *)(v59 + v57);
              *((void *)this + 1) = v142;
              v62 |= (unint64_t)(v143 & 0x7F) << v140;
              if (v143 < 0)
              {
                v140 += 7;
                unint64_t v57 = v142;
                BOOL v14 = v141++ > 8;
                if (v14) {
                  goto LABEL_193;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v62) = 0;
              }
            }
            break;
          }
LABEL_259:
          *(_DWORD *)(a1 + 72) = v62;
          goto LABEL_243;
        case 0x14u:
          *(void *)(a1 + 164) |= 0x200000000uLL;
          unint64_t v65 = *((void *)this + 1);
          if (v65 > 0xFFFFFFFFFFFFFFFBLL || v65 + 4 > *((void *)this + 2)) {
            goto LABEL_170;
          }
          *(_DWORD *)(a1 + 152) = *(_DWORD *)(*(void *)this + v65);
          goto LABEL_241;
        case 0x15u:
          *(void *)(a1 + 164) |= 0x4000uLL;
          unint64_t v66 = *((void *)this + 1);
          if (v66 > 0xFFFFFFFFFFFFFFFBLL || v66 + 4 > *((void *)this + 2)) {
            goto LABEL_170;
          }
          *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v66);
          goto LABEL_241;
        case 0x16u:
          *(void *)(a1 + 164) |= 0x8000uLL;
          unint64_t v67 = *((void *)this + 1);
          if (v67 > 0xFFFFFFFFFFFFFFFBLL || v67 + 4 > *((void *)this + 2)) {
            goto LABEL_170;
          }
          *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v67);
          goto LABEL_241;
        case 0x17u:
          *(void *)(a1 + 164) |= 0x1000uLL;
          unint64_t v68 = *((void *)this + 1);
          unint64_t v69 = *((void *)this + 2);
          uint64_t v70 = *(void *)this;
          if (v68 <= 0xFFFFFFFFFFFFFFF5 && v68 + 10 <= v69)
          {
            char v71 = 0;
            unsigned int v72 = 0;
            uint64_t v73 = 0;
            do
            {
              unint64_t v74 = v68 + 1;
              *((void *)this + 1) = v68 + 1;
              char v75 = *(unsigned char *)(v70 + v68);
              v73 |= (unint64_t)(v75 & 0x7F) << v71;
              if ((v75 & 0x80) == 0) {
                goto LABEL_263;
              }
              v71 += 7;
              unint64_t v68 = v74;
              BOOL v14 = v72++ > 8;
            }
            while (!v14);
LABEL_200:
            LODWORD(v73) = 0;
            goto LABEL_263;
          }
          char v144 = 0;
          unsigned int v145 = 0;
          uint64_t v73 = 0;
          if (v69 <= v68) {
            unint64_t v69 = *((void *)this + 1);
          }
          while (2)
          {
            if (v69 == v68)
            {
              LODWORD(v73) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v146 = v68 + 1;
              char v147 = *(unsigned char *)(v70 + v68);
              *((void *)this + 1) = v146;
              v73 |= (unint64_t)(v147 & 0x7F) << v144;
              if (v147 < 0)
              {
                v144 += 7;
                unint64_t v68 = v146;
                BOOL v14 = v145++ > 8;
                if (v14) {
                  goto LABEL_200;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v73) = 0;
              }
            }
            break;
          }
LABEL_263:
          *(_DWORD *)(a1 + 68) = v73;
          goto LABEL_243;
        case 0x18u:
          *(void *)(a1 + 164) |= 0x200000uLL;
          unint64_t v76 = *((void *)this + 1);
          if (v76 > 0xFFFFFFFFFFFFFFFBLL || v76 + 4 > *((void *)this + 2)) {
            goto LABEL_170;
          }
          *(_DWORD *)(a1 + 104) = *(_DWORD *)(*(void *)this + v76);
          goto LABEL_241;
        case 0x19u:
          *(void *)(a1 + 164) |= 0x100000uLL;
          unint64_t v77 = *((void *)this + 1);
          if (v77 > 0xFFFFFFFFFFFFFFFBLL || v77 + 4 > *((void *)this + 2)) {
            goto LABEL_170;
          }
          *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v77);
          goto LABEL_241;
        case 0x1Au:
          *(void *)(a1 + 164) |= 4uLL;
          unint64_t v78 = *((void *)this + 1);
          unint64_t v79 = *((void *)this + 2);
          uint64_t v80 = *(void *)this;
          if (v78 <= 0xFFFFFFFFFFFFFFF5 && v78 + 10 <= v79)
          {
            char v81 = 0;
            unsigned int v82 = 0;
            uint64_t v83 = 0;
            do
            {
              unint64_t v84 = v78 + 1;
              *((void *)this + 1) = v78 + 1;
              char v85 = *(unsigned char *)(v80 + v78);
              v83 |= (unint64_t)(v85 & 0x7F) << v81;
              if ((v85 & 0x80) == 0) {
                goto LABEL_267;
              }
              v81 += 7;
              unint64_t v78 = v84;
              BOOL v14 = v82++ > 8;
            }
            while (!v14);
LABEL_207:
            uint64_t v83 = 0;
            goto LABEL_267;
          }
          char v148 = 0;
          unsigned int v149 = 0;
          uint64_t v83 = 0;
          if (v79 <= v78) {
            unint64_t v79 = *((void *)this + 1);
          }
          while (2)
          {
            if (v79 == v78)
            {
              uint64_t v83 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v150 = v78 + 1;
              char v151 = *(unsigned char *)(v80 + v78);
              *((void *)this + 1) = v150;
              v83 |= (unint64_t)(v151 & 0x7F) << v148;
              if (v151 < 0)
              {
                v148 += 7;
                unint64_t v78 = v150;
                BOOL v14 = v149++ > 8;
                if (v14) {
                  goto LABEL_207;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v83 = 0;
              }
            }
            break;
          }
LABEL_267:
          *(void *)(a1 + 24) = v83;
          goto LABEL_243;
        case 0x1Bu:
          *(void *)(a1 + 164) |= 1uLL;
          unint64_t v86 = *((void *)this + 1);
          unint64_t v87 = *((void *)this + 2);
          uint64_t v88 = *(void *)this;
          if (v86 <= 0xFFFFFFFFFFFFFFF5 && v86 + 10 <= v87)
          {
            char v89 = 0;
            unsigned int v90 = 0;
            uint64_t v91 = 0;
            do
            {
              unint64_t v92 = v86 + 1;
              *((void *)this + 1) = v86 + 1;
              char v93 = *(unsigned char *)(v88 + v86);
              v91 |= (unint64_t)(v93 & 0x7F) << v89;
              if ((v93 & 0x80) == 0) {
                goto LABEL_271;
              }
              v89 += 7;
              unint64_t v86 = v92;
              BOOL v14 = v90++ > 8;
            }
            while (!v14);
LABEL_214:
            uint64_t v91 = 0;
            goto LABEL_271;
          }
          char v152 = 0;
          unsigned int v153 = 0;
          uint64_t v91 = 0;
          if (v87 <= v86) {
            unint64_t v87 = *((void *)this + 1);
          }
          while (2)
          {
            if (v87 == v86)
            {
              uint64_t v91 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v154 = v86 + 1;
              char v155 = *(unsigned char *)(v88 + v86);
              *((void *)this + 1) = v154;
              v91 |= (unint64_t)(v155 & 0x7F) << v152;
              if (v155 < 0)
              {
                v152 += 7;
                unint64_t v86 = v154;
                BOOL v14 = v153++ > 8;
                if (v14) {
                  goto LABEL_214;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v91 = 0;
              }
            }
            break;
          }
LABEL_271:
          *(void *)(a1 + 8) = v91;
          goto LABEL_243;
        case 0x1Cu:
          *(void *)(a1 + 164) |= 0x80000000uLL;
          unint64_t v94 = *((void *)this + 1);
          if (v94 > 0xFFFFFFFFFFFFFFFBLL || v94 + 4 > *((void *)this + 2)) {
            goto LABEL_170;
          }
          *(_DWORD *)(a1 + 144) = *(_DWORD *)(*(void *)this + v94);
          goto LABEL_241;
        case 0x1Du:
          *(void *)(a1 + 164) |= 0x80000uLL;
          unint64_t v95 = *((void *)this + 1);
          unint64_t v96 = *((void *)this + 2);
          uint64_t v97 = *(void *)this;
          if (v95 <= 0xFFFFFFFFFFFFFFF5 && v95 + 10 <= v96)
          {
            char v98 = 0;
            unsigned int v99 = 0;
            uint64_t v100 = 0;
            do
            {
              unint64_t v101 = v95 + 1;
              *((void *)this + 1) = v95 + 1;
              char v102 = *(unsigned char *)(v97 + v95);
              v100 |= (unint64_t)(v102 & 0x7F) << v98;
              if ((v102 & 0x80) == 0) {
                goto LABEL_275;
              }
              v98 += 7;
              unint64_t v95 = v101;
              BOOL v14 = v99++ > 8;
            }
            while (!v14);
LABEL_221:
            LODWORD(v100) = 0;
            goto LABEL_275;
          }
          char v156 = 0;
          unsigned int v157 = 0;
          uint64_t v100 = 0;
          if (v96 <= v95) {
            unint64_t v96 = *((void *)this + 1);
          }
          while (2)
          {
            if (v96 == v95)
            {
              LODWORD(v100) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v158 = v95 + 1;
              char v159 = *(unsigned char *)(v97 + v95);
              *((void *)this + 1) = v158;
              v100 |= (unint64_t)(v159 & 0x7F) << v156;
              if (v159 < 0)
              {
                v156 += 7;
                unint64_t v95 = v158;
                BOOL v14 = v157++ > 8;
                if (v14) {
                  goto LABEL_221;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v100) = 0;
              }
            }
            break;
          }
LABEL_275:
          *(_DWORD *)(a1 + 96) = v100;
          goto LABEL_243;
        case 0x1Eu:
          *(void *)(a1 + 164) |= 0x10uLL;
          unint64_t v103 = *((void *)this + 1);
          unint64_t v104 = *((void *)this + 2);
          uint64_t v105 = *(void *)this;
          if (v103 <= 0xFFFFFFFFFFFFFFF5 && v103 + 10 <= v104)
          {
            char v106 = 0;
            unsigned int v107 = 0;
            uint64_t v108 = 0;
            do
            {
              unint64_t v109 = v103 + 1;
              *((void *)this + 1) = v103 + 1;
              char v110 = *(unsigned char *)(v105 + v103);
              v108 |= (unint64_t)(v110 & 0x7F) << v106;
              if ((v110 & 0x80) == 0) {
                goto LABEL_279;
              }
              v106 += 7;
              unint64_t v103 = v109;
              BOOL v14 = v107++ > 8;
            }
            while (!v14);
LABEL_228:
            LODWORD(v108) = 0;
            goto LABEL_279;
          }
          char v160 = 0;
          unsigned int v161 = 0;
          uint64_t v108 = 0;
          if (v104 <= v103) {
            unint64_t v104 = *((void *)this + 1);
          }
          while (2)
          {
            if (v104 == v103)
            {
              LODWORD(v108) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v162 = v103 + 1;
              char v163 = *(unsigned char *)(v105 + v103);
              *((void *)this + 1) = v162;
              v108 |= (unint64_t)(v163 & 0x7F) << v160;
              if (v163 < 0)
              {
                v160 += 7;
                unint64_t v103 = v162;
                BOOL v14 = v161++ > 8;
                if (v14) {
                  goto LABEL_228;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v108) = 0;
              }
            }
            break;
          }
LABEL_279:
          *(_DWORD *)(a1 + 36) = v108;
          goto LABEL_243;
        case 0x1Fu:
          *(void *)(a1 + 164) |= 0x1000000000uLL;
          unint64_t v111 = *((void *)this + 1);
          if (v111 >= *((void *)this + 2))
          {
            BOOL v114 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v112 = v111 + 1;
            int v113 = *(unsigned __int8 *)(*(void *)this + v111);
            *((void *)this + 1) = v112;
            BOOL v114 = v113 != 0;
          }
          *(unsigned char *)(a1 + 161) = v114;
          goto LABEL_243;
        case 0x20u:
          *(void *)(a1 + 164) |= 0x800000000uLL;
          unint64_t v115 = *((void *)this + 1);
          if (v115 >= *((void *)this + 2))
          {
            BOOL v118 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v116 = v115 + 1;
            int v117 = *(unsigned __int8 *)(*(void *)this + v115);
            *((void *)this + 1) = v116;
            BOOL v118 = v117 != 0;
          }
          *(unsigned char *)(a1 + 160) = v118;
          goto LABEL_243;
        case 0x21u:
          *(void *)(a1 + 164) |= 0x800000uLL;
          unint64_t v119 = *((void *)this + 1);
          if (v119 > 0xFFFFFFFFFFFFFFFBLL || v119 + 4 > *((void *)this + 2)) {
            goto LABEL_170;
          }
          *(_DWORD *)(a1 + 112) = *(_DWORD *)(*(void *)this + v119);
          goto LABEL_241;
        case 0x22u:
          *(void *)(a1 + 164) |= 0x20000uLL;
          unint64_t v120 = *((void *)this + 1);
          if (v120 > 0xFFFFFFFFFFFFFFFBLL || v120 + 4 > *((void *)this + 2)) {
            goto LABEL_170;
          }
          *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v120);
          goto LABEL_241;
        case 0x23u:
          *(void *)(a1 + 164) |= 0x40000uLL;
          unint64_t v121 = *((void *)this + 1);
          if (v121 > 0xFFFFFFFFFFFFFFFBLL || v121 + 4 > *((void *)this + 2)) {
            goto LABEL_170;
          }
          *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v121);
          goto LABEL_241;
        case 0x24u:
          *(void *)(a1 + 164) |= 0x400uLL;
          unint64_t v122 = *((void *)this + 1);
          unint64_t v123 = *((void *)this + 2);
          uint64_t v124 = *(void *)this;
          if (v122 <= 0xFFFFFFFFFFFFFFF5 && v122 + 10 <= v123)
          {
            char v125 = 0;
            unsigned int v126 = 0;
            uint64_t v127 = 0;
            do
            {
              unint64_t v128 = v122 + 1;
              *((void *)this + 1) = v122 + 1;
              char v129 = *(unsigned char *)(v124 + v122);
              v127 |= (unint64_t)(v129 & 0x7F) << v125;
              if ((v129 & 0x80) == 0) {
                goto LABEL_283;
              }
              v125 += 7;
              unint64_t v122 = v128;
              BOOL v14 = v126++ > 8;
            }
            while (!v14);
LABEL_239:
            LODWORD(v127) = 0;
            goto LABEL_283;
          }
          char v164 = 0;
          unsigned int v165 = 0;
          uint64_t v127 = 0;
          if (v123 <= v122) {
            unint64_t v123 = *((void *)this + 1);
          }
          break;
        case 0x25u:
          *(void *)(a1 + 164) |= 0x100uLL;
          unint64_t v130 = *((void *)this + 1);
          if (v130 > 0xFFFFFFFFFFFFFFFBLL || v130 + 4 > *((void *)this + 2)) {
            goto LABEL_170;
          }
          *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v130);
          goto LABEL_241;
        case 0x26u:
          *(void *)(a1 + 164) |= 0x100000000uLL;
          unint64_t v131 = *((void *)this + 1);
          if (v131 <= 0xFFFFFFFFFFFFFFFBLL && v131 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 148) = *(_DWORD *)(*(void *)this + v131);
LABEL_241:
            uint64_t v38 = *((void *)this + 1) + 4;
LABEL_242:
            *((void *)this + 1) = v38;
          }
          else
          {
LABEL_170:
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_243;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          goto LABEL_243;
      }
      while (1)
      {
        if (v123 == v122)
        {
          LODWORD(v127) = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_283;
        }
        unint64_t v166 = v122 + 1;
        char v167 = *(unsigned char *)(v124 + v122);
        *((void *)this + 1) = v166;
        v127 |= (unint64_t)(v167 & 0x7F) << v164;
        if ((v167 & 0x80) == 0) {
          break;
        }
        v164 += 7;
        unint64_t v122 = v166;
        BOOL v14 = v165++ > 8;
        if (v14) {
          goto LABEL_239;
        }
      }
      if (*((unsigned char *)this + 24)) {
        LODWORD(v127) = 0;
      }
LABEL_283:
      *(_DWORD *)(a1 + 60) = v127;
LABEL_243:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227BB5030(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(result + 164);
  if ((v4 & 0x2000000) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(result + 120));
    uint64_t v4 = *(void *)(v3 + 164);
    if ((v4 & 0x80) == 0)
    {
LABEL_3:
      if ((v4 & 0x10000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_42;
    }
  }
  else if ((v4 & 0x80) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x10000) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x40000000) == 0)
  {
LABEL_6:
    if ((v4 & 0x400000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 140));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x400000000) == 0)
  {
LABEL_7:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 156));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x400000) == 0)
  {
LABEL_8:
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 108));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x20) == 0)
  {
LABEL_9:
    if ((v4 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x40) == 0)
  {
LABEL_10:
    if ((v4 & 2) == 0) {
      goto LABEL_11;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 2) == 0)
  {
LABEL_11:
    if ((v4 & 0x2000000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x2000000000) == 0)
  {
LABEL_12:
    if ((v4 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x800) == 0)
  {
LABEL_13:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_14:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 132));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_15:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_16:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 124));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_17:
    if ((v4 & 0x200) == 0) {
      goto LABEL_18;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 136));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x200) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 116));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x2000) == 0)
  {
LABEL_20:
    if ((v4 & 0x200000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x200000000) == 0)
  {
LABEL_21:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_60;
  }
LABEL_59:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 152));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x4000) == 0)
  {
LABEL_22:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x8000) == 0)
  {
LABEL_23:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x1000) == 0)
  {
LABEL_24:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x200000) == 0)
  {
LABEL_25:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_64;
  }
LABEL_63:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 104));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x100000) == 0)
  {
LABEL_26:
    if ((v4 & 4) == 0) {
      goto LABEL_27;
    }
    goto LABEL_65;
  }
LABEL_64:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 100));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 4) == 0)
  {
LABEL_27:
    if ((v4 & 1) == 0) {
      goto LABEL_28;
    }
    goto LABEL_66;
  }
LABEL_65:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 1) == 0)
  {
LABEL_28:
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_67;
  }
LABEL_66:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x80000000) == 0)
  {
LABEL_29:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_68;
  }
LABEL_67:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 144));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x80000) == 0)
  {
LABEL_30:
    if ((v4 & 0x10) == 0) {
      goto LABEL_31;
    }
    goto LABEL_69;
  }
LABEL_68:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x10) == 0)
  {
LABEL_31:
    if ((v4 & 0x1000000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_70;
  }
LABEL_69:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x1000000000) == 0)
  {
LABEL_32:
    if ((v4 & 0x800000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_71;
  }
LABEL_70:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x800000000) == 0)
  {
LABEL_33:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_72;
  }
LABEL_71:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x800000) == 0)
  {
LABEL_34:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_73;
  }
LABEL_72:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 112));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x20000) == 0)
  {
LABEL_35:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_74;
  }
LABEL_73:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 88));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x40000) == 0)
  {
LABEL_36:
    if ((v4 & 0x400) == 0) {
      goto LABEL_37;
    }
    goto LABEL_75;
  }
LABEL_74:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 92));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x400) == 0)
  {
LABEL_37:
    if ((v4 & 0x100) == 0) {
      goto LABEL_38;
    }
LABEL_76:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
    if ((*(void *)(v3 + 164) & 0x100000000) == 0) {
      return result;
    }
    goto LABEL_77;
  }
LABEL_75:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x100) != 0) {
    goto LABEL_76;
  }
LABEL_38:
  if ((v4 & 0x100000000) == 0) {
    return result;
  }
LABEL_77:
  float v5 = *(float *)(v3 + 148);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227BB5490(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC23028;
  *(_DWORD *)(result + 12) = 0;
  return result;
}

void sub_227BB54B8(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227BB54F0(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC23028;
  *(_DWORD *)(result + 12) = 0;
  if (*(unsigned char *)(a2 + 12))
  {
    char v2 = *(unsigned char *)(a2 + 8);
    *(unsigned char *)(result + 12) = 1;
    *(unsigned char *)(result + 8) = v2;
  }
  return result;
}

uint64_t sub_227BB552C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 12)) {
    PB::TextFormatter::format(this, "pause");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BB558C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 12) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
        if (v2 >= v3)
        {
          BOOL v21 = 0;
          *((unsigned char *)this + 24) = 1;
        }
        else
        {
          int v20 = *(unsigned __int8 *)(*(void *)this + v2++);
          *((void *)this + 1) = v2;
          BOOL v21 = v20 != 0;
        }
        *(unsigned char *)(a1 + 8) = v21;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227BB571C(uint64_t result, PB::Writer *this)
{
  if (*(unsigned char *)(result + 12)) {
    return PB::Writer::write(this);
  }
  return result;
}

uint64_t sub_227BB573C(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC23060;
  *(_DWORD *)(result + 36) = 0;
  return result;
}

void sub_227BB5764(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227BB579C(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC23060;
  *(_DWORD *)(result + 36) = 0;
  char v2 = *(unsigned char *)(a2 + 36);
  if ((v2 & 4) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 24);
    char v3 = 4;
    *(unsigned char *)(result + 36) = 4;
    *(void *)(result + 24) = v4;
    char v2 = *(unsigned char *)(a2 + 36);
    if ((v2 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if (*(unsigned char *)(a2 + 36))
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 8);
    v3 |= 1u;
    *(unsigned char *)(result + 36) = v3;
    *(void *)(result + 8) = v5;
    char v2 = *(unsigned char *)(a2 + 36);
  }
LABEL_6:
  if ((v2 & 2) == 0)
  {
    if ((v2 & 8) == 0) {
      return result;
    }
LABEL_10:
    int v7 = *(_DWORD *)(a2 + 32);
    *(unsigned char *)(result + 36) = v3 | 8;
    *(_DWORD *)(result + 32) = v7;
    return result;
  }
  uint64_t v6 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(unsigned char *)(result + 36) = v3;
  *(void *)(result + 16) = v6;
  if ((*(unsigned char *)(a2 + 36) & 8) != 0) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_227BB5838(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 36);
  if (v5)
  {
    PB::TextFormatter::format(this, "endDate", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 36);
    if ((v5 & 8) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 36) & 8) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "hkType");
  char v5 = *(unsigned char *)(a1 + 36);
  if ((v5 & 2) == 0)
  {
LABEL_4:
    if ((v5 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "hr", *(double *)(a1 + 16));
  if ((*(unsigned char *)(a1 + 36) & 4) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "startDate", *(double *)(a1 + 24));
LABEL_6:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BB58FC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 36) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_32;
              }
              *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
              goto LABEL_48;
            case 2u:
              *(unsigned char *)(a1 + 36) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_32;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_48;
            case 3u:
              *(unsigned char *)(a1 + 36) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
LABEL_48:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_32:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_54;
            case 4u:
              *(unsigned char *)(a1 + 36) |= 8u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v27 = 0;
                unsigned int v28 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_53;
                  }
                  unint64_t v29 = v21++;
                  char v30 = *(unsigned char *)(v22 + v29);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v30 & 0x7F) << v27;
                  if ((v30 & 0x80) == 0) {
                    break;
                  }
                  v27 += 7;
                  BOOL v14 = v28++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_52:
                    unint64_t v2 = v29 + 1;
                    goto LABEL_53;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_52;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_53;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_53:
              *(_DWORD *)(a1 + 32) = v25;
LABEL_54:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_54;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227BB5C28(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 36);
  if ((v4 & 4) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 24));
    char v4 = *(unsigned char *)(v3 + 36);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
      if ((*(unsigned char *)(v3 + 36) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 36) & 1) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
  char v4 = *(unsigned char *)(v3 + 36);
  if ((v4 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 8) == 0) {
    return result;
  }
LABEL_9:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227BB5CD0(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC23098;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

void sub_227BB5CF8(void **a1)
{
  *a1 = &unk_26DC23098;
  unint64_t v2 = a1 + 1;
  sub_227B8B5D0(&v2);
  PB::Base::~Base((PB::Base *)a1);
}

uint64_t sub_227BB5D54(void **a1)
{
  *a1 = &unk_26DC23098;
  uint64_t v3 = a1 + 1;
  sub_227B8B5D0(&v3);
  PB::Base::~Base((PB::Base *)a1);
  return MEMORY[0x22A6850E0]();
}

uint64_t sub_227BB5DC4(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC23098;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 64) = 0;
  char v2 = *(unsigned char *)(a2 + 64);
  if ((v2 & 2) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 36);
    char v3 = 2;
    *(unsigned char *)(result + 64) = 2;
    *(_DWORD *)(result + 36) = v4;
    char v2 = *(unsigned char *)(a2 + 64);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 64) & 8) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 44);
    v3 |= 8u;
    *(unsigned char *)(result + 64) = v3;
    *(_DWORD *)(result + 44) = v5;
    char v2 = *(unsigned char *)(a2 + 64);
  }
LABEL_6:
  if (v2)
  {
    int v7 = *(_DWORD *)(a2 + 32);
    v3 |= 1u;
    *(unsigned char *)(result + 64) = v3;
    *(_DWORD *)(result + 32) = v7;
    char v2 = *(unsigned char *)(a2 + 64);
    if ((v2 & 4) == 0)
    {
LABEL_8:
      if ((v2 & 0x80) == 0) {
        goto LABEL_9;
      }
      goto LABEL_18;
    }
  }
  else if ((v2 & 4) == 0)
  {
    goto LABEL_8;
  }
  int v8 = *(_DWORD *)(a2 + 40);
  v3 |= 4u;
  *(unsigned char *)(result + 64) = v3;
  *(_DWORD *)(result + 40) = v8;
  char v2 = *(unsigned char *)(a2 + 64);
  if ((v2 & 0x80) == 0)
  {
LABEL_9:
    if ((v2 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_19;
  }
LABEL_18:
  char v9 = *(unsigned char *)(a2 + 60);
  v3 |= 0x80u;
  *(unsigned char *)(result + 64) = v3;
  *(unsigned char *)(result + 60) = v9;
  char v2 = *(unsigned char *)(a2 + 64);
  if ((v2 & 0x10) == 0)
  {
LABEL_10:
    if ((v2 & 0x20) == 0) {
      goto LABEL_11;
    }
    goto LABEL_20;
  }
LABEL_19:
  int v10 = *(_DWORD *)(a2 + 48);
  v3 |= 0x10u;
  *(unsigned char *)(result + 64) = v3;
  *(_DWORD *)(result + 48) = v10;
  char v2 = *(unsigned char *)(a2 + 64);
  if ((v2 & 0x20) == 0)
  {
LABEL_11:
    if ((v2 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_20:
  int v11 = *(_DWORD *)(a2 + 52);
  v3 |= 0x20u;
  *(unsigned char *)(result + 64) = v3;
  *(_DWORD *)(result + 52) = v11;
  if ((*(unsigned char *)(a2 + 64) & 0x40) != 0)
  {
LABEL_12:
    int v6 = *(_DWORD *)(a2 + 56);
    *(unsigned char *)(result + 64) = v3 | 0x40;
    *(_DWORD *)(result + 56) = v6;
  }
LABEL_13:
  if (*(void *)(a2 + 8) != *(void *)(a2 + 16)) {
    sub_227BB5F24();
  }
  return result;
}

void sub_227BB5F24()
{
}

void sub_227BB6028(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_227B8BDA0((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_227BB6070(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 64);
  if (v5)
  {
    PB::TextFormatter::format(this, "gain");
    char v5 = *(unsigned char *)(a1 + 64);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((*(unsigned char *)(a1 + 64) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "location");
  if ((*(unsigned char *)(a1 + 64) & 4) != 0) {
LABEL_4:
  }
    PB::TextFormatter::format(this, "offset");
LABEL_5:
  int v6 = *(uint64_t **)(a1 + 8);
  int v7 = *(uint64_t **)(a1 + 16);
  while (v6 != v7)
  {
    uint64_t v8 = *v6++;
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v8 + 32))(v8, this, "point");
  }
  char v9 = *(unsigned char *)(a1 + 64);
  if ((v9 & 8) != 0)
  {
    PB::TextFormatter::format(this, "sensor");
    char v9 = *(unsigned char *)(a1 + 64);
    if ((v9 & 0x10) == 0)
    {
LABEL_9:
      if ((v9 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_21;
    }
  }
  else if ((*(unsigned char *)(a1 + 64) & 0x10) == 0)
  {
    goto LABEL_9;
  }
  PB::TextFormatter::format(this, "tempCalA");
  char v9 = *(unsigned char *)(a1 + 64);
  if ((v9 & 0x20) == 0)
  {
LABEL_10:
    if ((v9 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "tempCalB");
  char v9 = *(unsigned char *)(a1 + 64);
  if ((v9 & 0x80) == 0)
  {
LABEL_11:
    if ((v9 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_22:
  PB::TextFormatter::format(this, "tempCalEnabled");
  if ((*(unsigned char *)(a1 + 64) & 0x40) != 0) {
LABEL_12:
  }
    PB::TextFormatter::format(this, "tempCalT0");
LABEL_13:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BB6210(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 64) |= 2u;
          unint64_t v20 = *((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
          uint64_t v22 = *(void *)this;
          if (v20 <= 0xFFFFFFFFFFFFFFF5 && v20 + 10 <= v21)
          {
            char v23 = 0;
            unsigned int v24 = 0;
            uint64_t v25 = 0;
            do
            {
              unint64_t v26 = v20 + 1;
              *((void *)this + 1) = v20 + 1;
              char v27 = *(unsigned char *)(v22 + v20);
              v25 |= (unint64_t)(v27 & 0x7F) << v23;
              if ((v27 & 0x80) == 0) {
                goto LABEL_136;
              }
              v23 += 7;
              unint64_t v20 = v26;
              BOOL v14 = v24++ > 8;
            }
            while (!v14);
LABEL_82:
            LODWORD(v25) = 0;
            goto LABEL_136;
          }
          char v81 = 0;
          unsigned int v82 = 0;
          uint64_t v25 = 0;
          if (v21 <= v20) {
            unint64_t v21 = *((void *)this + 1);
          }
          while (2)
          {
            if (v21 == v20)
            {
              LODWORD(v25) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v83 = v20 + 1;
              char v84 = *(unsigned char *)(v22 + v20);
              *((void *)this + 1) = v83;
              v25 |= (unint64_t)(v84 & 0x7F) << v81;
              if (v84 < 0)
              {
                v81 += 7;
                unint64_t v20 = v83;
                BOOL v14 = v82++ > 8;
                if (v14) {
                  goto LABEL_82;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v25) = 0;
              }
            }
            break;
          }
LABEL_136:
          *(_DWORD *)(a1 + 36) = v25;
          goto LABEL_155;
        case 2u:
          *(unsigned char *)(a1 + 64) |= 8u;
          unint64_t v29 = *((void *)this + 1);
          unint64_t v30 = *((void *)this + 2);
          uint64_t v31 = *(void *)this;
          if (v29 <= 0xFFFFFFFFFFFFFFF5 && v29 + 10 <= v30)
          {
            char v32 = 0;
            unsigned int v33 = 0;
            uint64_t v34 = 0;
            do
            {
              unint64_t v35 = v29 + 1;
              *((void *)this + 1) = v29 + 1;
              char v36 = *(unsigned char *)(v31 + v29);
              v34 |= (unint64_t)(v36 & 0x7F) << v32;
              if ((v36 & 0x80) == 0) {
                goto LABEL_139;
              }
              v32 += 7;
              unint64_t v29 = v35;
              BOOL v14 = v33++ > 8;
            }
            while (!v14);
LABEL_89:
            LODWORD(v34) = 0;
            goto LABEL_139;
          }
          char v85 = 0;
          unsigned int v86 = 0;
          uint64_t v34 = 0;
          if (v30 <= v29) {
            unint64_t v30 = *((void *)this + 1);
          }
          while (2)
          {
            if (v30 == v29)
            {
              LODWORD(v34) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v87 = v29 + 1;
              char v88 = *(unsigned char *)(v31 + v29);
              *((void *)this + 1) = v87;
              v34 |= (unint64_t)(v88 & 0x7F) << v85;
              if (v88 < 0)
              {
                v85 += 7;
                unint64_t v29 = v87;
                BOOL v14 = v86++ > 8;
                if (v14) {
                  goto LABEL_89;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v34) = 0;
              }
            }
            break;
          }
LABEL_139:
          *(_DWORD *)(a1 + 44) = v34;
          goto LABEL_155;
        case 3u:
          *(unsigned char *)(a1 + 64) |= 1u;
          unint64_t v37 = *((void *)this + 1);
          unint64_t v38 = *((void *)this + 2);
          uint64_t v39 = *(void *)this;
          if (v37 <= 0xFFFFFFFFFFFFFFF5 && v37 + 10 <= v38)
          {
            char v40 = 0;
            unsigned int v41 = 0;
            uint64_t v42 = 0;
            do
            {
              unint64_t v43 = v37 + 1;
              *((void *)this + 1) = v37 + 1;
              char v44 = *(unsigned char *)(v39 + v37);
              v42 |= (unint64_t)(v44 & 0x7F) << v40;
              if ((v44 & 0x80) == 0) {
                goto LABEL_142;
              }
              v40 += 7;
              unint64_t v37 = v43;
              BOOL v14 = v41++ > 8;
            }
            while (!v14);
LABEL_96:
            LODWORD(v42) = 0;
            goto LABEL_142;
          }
          char v89 = 0;
          unsigned int v90 = 0;
          uint64_t v42 = 0;
          if (v38 <= v37) {
            unint64_t v38 = *((void *)this + 1);
          }
          while (2)
          {
            if (v38 == v37)
            {
              LODWORD(v42) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v91 = v37 + 1;
              char v92 = *(unsigned char *)(v39 + v37);
              *((void *)this + 1) = v91;
              v42 |= (unint64_t)(v92 & 0x7F) << v89;
              if (v92 < 0)
              {
                v89 += 7;
                unint64_t v37 = v91;
                BOOL v14 = v90++ > 8;
                if (v14) {
                  goto LABEL_96;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v42) = 0;
              }
            }
            break;
          }
LABEL_142:
          *(_DWORD *)(a1 + 32) = v42;
          goto LABEL_155;
        case 4u:
          *(unsigned char *)(a1 + 64) |= 4u;
          unint64_t v45 = *((void *)this + 1);
          unint64_t v46 = *((void *)this + 2);
          uint64_t v47 = *(void *)this;
          if (v45 <= 0xFFFFFFFFFFFFFFF5 && v45 + 10 <= v46)
          {
            char v48 = 0;
            unsigned int v49 = 0;
            uint64_t v50 = 0;
            do
            {
              unint64_t v51 = v45 + 1;
              *((void *)this + 1) = v45 + 1;
              char v52 = *(unsigned char *)(v47 + v45);
              v50 |= (unint64_t)(v52 & 0x7F) << v48;
              if ((v52 & 0x80) == 0) {
                goto LABEL_145;
              }
              v48 += 7;
              unint64_t v45 = v51;
              BOOL v14 = v49++ > 8;
            }
            while (!v14);
LABEL_103:
            LODWORD(v50) = 0;
            goto LABEL_145;
          }
          char v93 = 0;
          unsigned int v94 = 0;
          uint64_t v50 = 0;
          if (v46 <= v45) {
            unint64_t v46 = *((void *)this + 1);
          }
          while (2)
          {
            if (v46 == v45)
            {
              LODWORD(v50) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v95 = v45 + 1;
              char v96 = *(unsigned char *)(v47 + v45);
              *((void *)this + 1) = v95;
              v50 |= (unint64_t)(v96 & 0x7F) << v93;
              if (v96 < 0)
              {
                v93 += 7;
                unint64_t v45 = v95;
                BOOL v14 = v94++ > 8;
                if (v14) {
                  goto LABEL_103;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v50) = 0;
              }
            }
            break;
          }
LABEL_145:
          *(_DWORD *)(a1 + 40) = v50;
          goto LABEL_155;
        case 5u:
          *(unsigned char *)(a1 + 64) |= 0x80u;
          unint64_t v53 = *((void *)this + 1);
          if (v53 >= *((void *)this + 2))
          {
            BOOL v56 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v54 = v53 + 1;
            int v55 = *(unsigned __int8 *)(*(void *)this + v53);
            *((void *)this + 1) = v54;
            BOOL v56 = v55 != 0;
          }
          *(unsigned char *)(a1 + 60) = v56;
          goto LABEL_155;
        case 6u:
          *(unsigned char *)(a1 + 64) |= 0x10u;
          unint64_t v57 = *((void *)this + 1);
          unint64_t v58 = *((void *)this + 2);
          uint64_t v59 = *(void *)this;
          if (v57 <= 0xFFFFFFFFFFFFFFF5 && v57 + 10 <= v58)
          {
            char v60 = 0;
            unsigned int v61 = 0;
            uint64_t v62 = 0;
            do
            {
              unint64_t v63 = v57 + 1;
              *((void *)this + 1) = v57 + 1;
              char v64 = *(unsigned char *)(v59 + v57);
              v62 |= (unint64_t)(v64 & 0x7F) << v60;
              if ((v64 & 0x80) == 0) {
                goto LABEL_148;
              }
              v60 += 7;
              unint64_t v57 = v63;
              BOOL v14 = v61++ > 8;
            }
            while (!v14);
LABEL_112:
            LODWORD(v62) = 0;
            goto LABEL_148;
          }
          char v97 = 0;
          unsigned int v98 = 0;
          uint64_t v62 = 0;
          if (v58 <= v57) {
            unint64_t v58 = *((void *)this + 1);
          }
          while (2)
          {
            if (v58 == v57)
            {
              LODWORD(v62) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v99 = v57 + 1;
              char v100 = *(unsigned char *)(v59 + v57);
              *((void *)this + 1) = v99;
              v62 |= (unint64_t)(v100 & 0x7F) << v97;
              if (v100 < 0)
              {
                v97 += 7;
                unint64_t v57 = v99;
                BOOL v14 = v98++ > 8;
                if (v14) {
                  goto LABEL_112;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v62) = 0;
              }
            }
            break;
          }
LABEL_148:
          *(_DWORD *)(a1 + 48) = v62;
          goto LABEL_155;
        case 7u:
          *(unsigned char *)(a1 + 64) |= 0x20u;
          unint64_t v65 = *((void *)this + 1);
          unint64_t v66 = *((void *)this + 2);
          uint64_t v67 = *(void *)this;
          if (v65 <= 0xFFFFFFFFFFFFFFF5 && v65 + 10 <= v66)
          {
            char v68 = 0;
            unsigned int v69 = 0;
            uint64_t v70 = 0;
            do
            {
              unint64_t v71 = v65 + 1;
              *((void *)this + 1) = v65 + 1;
              char v72 = *(unsigned char *)(v67 + v65);
              v70 |= (unint64_t)(v72 & 0x7F) << v68;
              if ((v72 & 0x80) == 0) {
                goto LABEL_151;
              }
              v68 += 7;
              unint64_t v65 = v71;
              BOOL v14 = v69++ > 8;
            }
            while (!v14);
LABEL_119:
            LODWORD(v70) = 0;
            goto LABEL_151;
          }
          char v101 = 0;
          unsigned int v102 = 0;
          uint64_t v70 = 0;
          if (v66 <= v65) {
            unint64_t v66 = *((void *)this + 1);
          }
          while (2)
          {
            if (v66 == v65)
            {
              LODWORD(v70) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v103 = v65 + 1;
              char v104 = *(unsigned char *)(v67 + v65);
              *((void *)this + 1) = v103;
              v70 |= (unint64_t)(v104 & 0x7F) << v101;
              if (v104 < 0)
              {
                v101 += 7;
                unint64_t v65 = v103;
                BOOL v14 = v102++ > 8;
                if (v14) {
                  goto LABEL_119;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v70) = 0;
              }
            }
            break;
          }
LABEL_151:
          *(_DWORD *)(a1 + 52) = v70;
          goto LABEL_155;
        case 8u:
          *(unsigned char *)(a1 + 64) |= 0x40u;
          unint64_t v73 = *((void *)this + 1);
          unint64_t v74 = *((void *)this + 2);
          uint64_t v75 = *(void *)this;
          if (v73 <= 0xFFFFFFFFFFFFFFF5 && v73 + 10 <= v74)
          {
            char v76 = 0;
            unsigned int v77 = 0;
            uint64_t v78 = 0;
            do
            {
              unint64_t v79 = v73 + 1;
              *((void *)this + 1) = v73 + 1;
              char v80 = *(unsigned char *)(v75 + v73);
              v78 |= (unint64_t)(v80 & 0x7F) << v76;
              if ((v80 & 0x80) == 0) {
                goto LABEL_154;
              }
              v76 += 7;
              unint64_t v73 = v79;
              BOOL v14 = v77++ > 8;
            }
            while (!v14);
LABEL_126:
            LODWORD(v78) = 0;
            goto LABEL_154;
          }
          char v105 = 0;
          unsigned int v106 = 0;
          uint64_t v78 = 0;
          if (v74 <= v73) {
            unint64_t v74 = *((void *)this + 1);
          }
          break;
        case 9u:
          sub_227BB6AA0();
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          goto LABEL_155;
      }
      while (1)
      {
        if (v74 == v73)
        {
          LODWORD(v78) = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_154;
        }
        unint64_t v107 = v73 + 1;
        char v108 = *(unsigned char *)(v75 + v73);
        *((void *)this + 1) = v107;
        v78 |= (unint64_t)(v108 & 0x7F) << v105;
        if ((v108 & 0x80) == 0) {
          break;
        }
        v105 += 7;
        unint64_t v73 = v107;
        BOOL v14 = v106++ > 8;
        if (v14) {
          goto LABEL_126;
        }
      }
      if (*((unsigned char *)this + 24)) {
        LODWORD(v78) = 0;
      }
LABEL_154:
      *(_DWORD *)(a1 + 56) = v78;
LABEL_155:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

void sub_227BB6AA0()
{
}

void sub_227BB6BB8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_227B8BDA0((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_227BB6BFC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 64);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 64);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((*(unsigned char *)(result + 64) & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 64);
  if ((v4 & 1) == 0)
  {
LABEL_4:
    if ((v4 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 64);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 0x80) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 64);
  if ((v4 & 0x80) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this);
  char v4 = *(unsigned char *)(v3 + 64);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_20:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(unsigned char *)(v3 + 64) & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_19:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 64);
  if ((v4 & 0x20) != 0) {
    goto LABEL_20;
  }
LABEL_8:
  if ((v4 & 0x40) != 0) {
LABEL_9:
  }
    uint64_t result = PB::Writer::writeVarInt(this);
LABEL_10:
  int v6 = *(const PB::Base ***)(v3 + 8);
  char v5 = *(const PB::Base ***)(v3 + 16);
  while (v6 != v5)
  {
    int v7 = *v6++;
    uint64_t result = PB::Writer::writeSubmessage(this, v7);
  }
  return result;
}

void sub_227BB6D2C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227BB6D64(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC230D0;
  *(_DWORD *)(result + 20) = 0;
  char v2 = *(unsigned char *)(a2 + 20);
  if (v2)
  {
    int v4 = *(_DWORD *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 20) = 1;
    *(_DWORD *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 20);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 20) & 4) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 16);
    v3 |= 4u;
    *(unsigned char *)(result + 20) = v3;
    *(_DWORD *)(result + 16) = v5;
    char v2 = *(unsigned char *)(a2 + 20);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 12);
    *(unsigned char *)(result + 20) = v3 | 2;
    *(_DWORD *)(result + 12) = v6;
  }
  return result;
}

uint64_t sub_227BB6DE0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if (v5)
  {
    PB::TextFormatter::format(this, "base");
    char v5 = *(unsigned char *)(a1 + 20);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((*(unsigned char *)(a1 + 20) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "distance");
  if ((*(unsigned char *)(a1 + 20) & 4) != 0) {
LABEL_4:
  }
    PB::TextFormatter::format(this, "peak");
LABEL_5:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BB6E84(uint64_t a1, PB::Reader *this)
{
  unint64_t v3 = *((void *)this + 1);
  unint64_t v2 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v3 < v2 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v3 > 0xFFFFFFFFFFFFFFF5 || v3 + 10 > v2) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v3 + 1;
        *((void *)this + 1) = v3 + 1;
        char v13 = *(unsigned char *)(v8 + v3);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v3 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 3)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v27 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v28 = *(void *)this;
        if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
        {
          char v44 = 0;
          unsigned int v45 = 0;
          uint64_t v31 = 0;
          if (v2 <= v27) {
            unint64_t v3 = *((void *)this + 1);
          }
          else {
            unint64_t v3 = *((void *)this + 2);
          }
          while (1)
          {
            if (v3 == v27)
            {
              LODWORD(v31) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_80;
            }
            unint64_t v46 = v27++;
            char v47 = *(unsigned char *)(v28 + v46);
            *((void *)this + 1) = v27;
            v31 |= (unint64_t)(v47 & 0x7F) << v44;
            if ((v47 & 0x80) == 0) {
              break;
            }
            v44 += 7;
            BOOL v14 = v45++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              goto LABEL_79;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v31) = 0;
          }
LABEL_79:
          unint64_t v3 = v46 + 1;
        }
        else
        {
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v31 = 0;
          while (1)
          {
            unint64_t v3 = v27 + 1;
            *((void *)this + 1) = v27 + 1;
            char v32 = *(unsigned char *)(v28 + v27);
            v31 |= (unint64_t)(v32 & 0x7F) << v29;
            if ((v32 & 0x80) == 0) {
              break;
            }
            v29 += 7;
            unint64_t v27 = v3;
            BOOL v14 = v30++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              break;
            }
          }
        }
LABEL_80:
        *(_DWORD *)(a1 + 12) = v31;
      }
      else if (v20 == 2)
      {
        *(unsigned char *)(a1 + 20) |= 4u;
        unint64_t v33 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v34 = *(void *)this;
        if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
        {
          char v48 = 0;
          unsigned int v49 = 0;
          uint64_t v37 = 0;
          if (v2 <= v33) {
            unint64_t v3 = *((void *)this + 1);
          }
          else {
            unint64_t v3 = *((void *)this + 2);
          }
          while (1)
          {
            if (v3 == v33)
            {
              LODWORD(v37) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_85;
            }
            unint64_t v50 = v33++;
            char v51 = *(unsigned char *)(v34 + v50);
            *((void *)this + 1) = v33;
            v37 |= (unint64_t)(v51 & 0x7F) << v48;
            if ((v51 & 0x80) == 0) {
              break;
            }
            v48 += 7;
            BOOL v14 = v49++ > 8;
            if (v14)
            {
              LODWORD(v37) = 0;
              goto LABEL_84;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v37) = 0;
          }
LABEL_84:
          unint64_t v3 = v50 + 1;
        }
        else
        {
          char v35 = 0;
          unsigned int v36 = 0;
          uint64_t v37 = 0;
          while (1)
          {
            unint64_t v3 = v33 + 1;
            *((void *)this + 1) = v33 + 1;
            char v38 = *(unsigned char *)(v34 + v33);
            v37 |= (unint64_t)(v38 & 0x7F) << v35;
            if ((v38 & 0x80) == 0) {
              break;
            }
            v35 += 7;
            unint64_t v33 = v3;
            BOOL v14 = v36++ > 8;
            if (v14)
            {
              LODWORD(v37) = 0;
              break;
            }
          }
        }
LABEL_85:
        *(_DWORD *)(a1 + 16) = v37;
      }
      else if (v20 == 1)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v21 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v22 = *(void *)this;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
        {
          char v40 = 0;
          unsigned int v41 = 0;
          uint64_t v25 = 0;
          if (v2 <= v21) {
            unint64_t v3 = *((void *)this + 1);
          }
          else {
            unint64_t v3 = *((void *)this + 2);
          }
          while (1)
          {
            if (v3 == v21)
            {
              LODWORD(v25) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_75;
            }
            unint64_t v42 = v21++;
            char v43 = *(unsigned char *)(v22 + v42);
            *((void *)this + 1) = v21;
            v25 |= (unint64_t)(v43 & 0x7F) << v40;
            if ((v43 & 0x80) == 0) {
              break;
            }
            v40 += 7;
            BOOL v14 = v41++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              goto LABEL_74;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v25) = 0;
          }
LABEL_74:
          unint64_t v3 = v42 + 1;
        }
        else
        {
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          while (1)
          {
            unint64_t v3 = v21 + 1;
            *((void *)this + 1) = v21 + 1;
            char v26 = *(unsigned char *)(v22 + v21);
            v25 |= (unint64_t)(v26 & 0x7F) << v23;
            if ((v26 & 0x80) == 0) {
              break;
            }
            v23 += 7;
            unint64_t v21 = v3;
            BOOL v14 = v24++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              break;
            }
          }
        }
LABEL_75:
        *(_DWORD *)(a1 + 8) = v25;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v3 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v3 >= v2 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v3 > v2) {
      unint64_t v2 = v3;
    }
    while (v2 != v3)
    {
      unint64_t v17 = v3 + 1;
      char v18 = *(unsigned char *)(v8 + v3);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v3 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227BB72A4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if ((v4 & 1) == 0)
  {
    if ((*(unsigned char *)(result + 20) & 4) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(unsigned char *)(v3 + 20) & 2) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 20);
  if ((v4 & 4) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_7:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227BB7330(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC23108;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void sub_227BB7358(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227BB7390(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC23108;
  *(_DWORD *)(a1 + 16) = 0;
  if (*(unsigned char *)(a2 + 16))
  {
    float result = *(float *)(a2 + 8);
    *(unsigned char *)(a1 + 16) = 1;
    *(float *)(a1 + 8) = result;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 16) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 16) & 2) != 0)
  {
LABEL_5:
    float result = *(float *)(a2 + 12);
    *(unsigned char *)(a1 + 16) = v2;
    *(float *)(a1 + 12) = result;
  }
  return result;
}

uint64_t sub_227BB73F4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 16);
  if (v5)
  {
    PB::TextFormatter::format(this, "concha", *(float *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 16);
  }
  if ((v5 & 2) != 0) {
    PB::TextFormatter::format(this, "tragus", *(float *)(a1 + 12));
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BB7470(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    do
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
        return v4 == 0;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 16) |= 2u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 12) = *(_DWORD *)(*(void *)this + v2);
      }
      else
      {
        if ((v11 >> 3) != 1)
        {
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          goto LABEL_33;
        }
        *(unsigned char *)(a1 + 16) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2))
        {
LABEL_28:
          *((unsigned char *)this + 24) = 1;
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(*(void *)this + v2);
      }
      unint64_t v2 = *((void *)this + 1) + 4;
      *((void *)this + 1) = v2;
LABEL_33:
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
    }
    while (v2 < v3 && !*((unsigned char *)this + 24));
  }
  return v4 == 0;
}

uint64_t sub_227BB764C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 16);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 16);
  }
  if ((v4 & 2) != 0)
  {
    float v5 = *(float *)(v3 + 12);
    return PB::Writer::write(this, v5);
  }
  return result;
}

uint64_t sub_227BB76B8(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC23140;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void sub_227BB76E0(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227BB7718(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC23140;
  *(_DWORD *)(result + 16) = 0;
  if (*(unsigned char *)(a2 + 16))
  {
    int v3 = *(_DWORD *)(a2 + 8);
    *(unsigned char *)(result + 16) = 1;
    *(_DWORD *)(result + 8) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 16) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 16) & 2) != 0)
  {
LABEL_5:
    int v4 = *(_DWORD *)(a2 + 12);
    *(unsigned char *)(result + 16) = v2;
    *(_DWORD *)(result + 12) = v4;
  }
  return result;
}

uint64_t sub_227BB777C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 16);
  if (v5)
  {
    PB::TextFormatter::format(this, "conchaTemp");
    char v5 = *(unsigned char *)(a1 + 16);
  }
  if ((v5 & 2) != 0) {
    PB::TextFormatter::format(this, "tragusTemp");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BB77F8(uint64_t a1, PB::Reader *this)
{
  unint64_t v3 = *((void *)this + 1);
  unint64_t v2 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v3 < v2 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v3 > 0xFFFFFFFFFFFFFFF5 || v3 + 10 > v2) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v3 + 1;
        *((void *)this + 1) = v3 + 1;
        char v13 = *(unsigned char *)(v8 + v3);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v3 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 16) |= 2u;
        unint64_t v26 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v27 = *(void *)this;
        if (v26 > 0xFFFFFFFFFFFFFFF5 || v26 + 10 > v2)
        {
          char v37 = 0;
          unsigned int v38 = 0;
          uint64_t v30 = 0;
          if (v2 <= v26) {
            unint64_t v3 = *((void *)this + 1);
          }
          else {
            unint64_t v3 = *((void *)this + 2);
          }
          while (1)
          {
            if (v3 == v26)
            {
              LODWORD(v30) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_64;
            }
            unint64_t v39 = v26++;
            char v40 = *(unsigned char *)(v27 + v39);
            *((void *)this + 1) = v26;
            v30 |= (unint64_t)(v40 & 0x7F) << v37;
            if ((v40 & 0x80) == 0) {
              break;
            }
            v37 += 7;
            BOOL v14 = v38++ > 8;
            if (v14)
            {
              LODWORD(v30) = 0;
              goto LABEL_63;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v30) = 0;
          }
LABEL_63:
          unint64_t v3 = v39 + 1;
        }
        else
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v30 = 0;
          while (1)
          {
            unint64_t v3 = v26 + 1;
            *((void *)this + 1) = v26 + 1;
            char v31 = *(unsigned char *)(v27 + v26);
            v30 |= (unint64_t)(v31 & 0x7F) << v28;
            if ((v31 & 0x80) == 0) {
              break;
            }
            v28 += 7;
            unint64_t v26 = v3;
            BOOL v14 = v29++ > 8;
            if (v14)
            {
              LODWORD(v30) = 0;
              break;
            }
          }
        }
LABEL_64:
        *(_DWORD *)(a1 + 12) = v30;
      }
      else if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 16) |= 1u;
        unint64_t v20 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v21 = *(void *)this;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
        {
          char v33 = 0;
          unsigned int v34 = 0;
          uint64_t v24 = 0;
          if (v2 <= v20) {
            unint64_t v3 = *((void *)this + 1);
          }
          else {
            unint64_t v3 = *((void *)this + 2);
          }
          while (1)
          {
            if (v3 == v20)
            {
              LODWORD(v24) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_60;
            }
            unint64_t v35 = v20++;
            char v36 = *(unsigned char *)(v21 + v35);
            *((void *)this + 1) = v20;
            v24 |= (unint64_t)(v36 & 0x7F) << v33;
            if ((v36 & 0x80) == 0) {
              break;
            }
            v33 += 7;
            BOOL v14 = v34++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              goto LABEL_59;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v24) = 0;
          }
LABEL_59:
          unint64_t v3 = v35 + 1;
        }
        else
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          while (1)
          {
            unint64_t v3 = v20 + 1;
            *((void *)this + 1) = v20 + 1;
            char v25 = *(unsigned char *)(v21 + v20);
            v24 |= (unint64_t)(v25 & 0x7F) << v22;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v22 += 7;
            unint64_t v20 = v3;
            BOOL v14 = v23++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              break;
            }
          }
        }
LABEL_60:
        *(_DWORD *)(a1 + 8) = v24;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v3 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v3 >= v2 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v3 > v2) {
      unint64_t v2 = v3;
    }
    while (v2 != v3)
    {
      unint64_t v17 = v3 + 1;
      char v18 = *(unsigned char *)(v8 + v3);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v3 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227BB7B24(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 16);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 16);
  }
  if ((v4 & 2) != 0)
  {
    return PB::Writer::writeVarInt(this);
  }
  return result;
}

uint64_t sub_227BB7B90(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC23178;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_227BB7BB8(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227BB7BF0(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC23178;
  *(_DWORD *)(result + 20) = 0;
  if (*(unsigned char *)(a2 + 20))
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 20) = 1;
    *(void *)(result + 8) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 20) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
LABEL_5:
    int v4 = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(result + 20) = v2;
    *(_DWORD *)(result + 16) = v4;
  }
  return result;
}

uint64_t sub_227BB7C54(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "elevationAscended");
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if (v5) {
    PB::TextFormatter::format(this, "startTime", *(double *)(a1 + 8));
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BB7CD0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v20 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v21 = *(void *)this;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v24 = 0;
          if (v2 <= v20) {
            unint64_t v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v20)
            {
              LODWORD(v24) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_47;
            }
            unint64_t v29 = v20++;
            char v30 = *(unsigned char *)(v21 + v29);
            *((void *)this + 1) = v20;
            v24 |= (unint64_t)(v30 & 0x7F) << v27;
            if ((v30 & 0x80) == 0) {
              break;
            }
            v27 += 7;
            BOOL v14 = v28++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              goto LABEL_46;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v24) = 0;
          }
LABEL_46:
          unint64_t v2 = v29 + 1;
        }
        else
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          while (1)
          {
            unint64_t v2 = v20 + 1;
            *((void *)this + 1) = v20 + 1;
            char v25 = *(unsigned char *)(v21 + v20);
            v24 |= (unint64_t)(v25 & 0x7F) << v22;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v22 += 7;
            unint64_t v20 = v2;
            BOOL v14 = v23++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              break;
            }
          }
        }
LABEL_47:
        *(_DWORD *)(a1 + 16) = v24;
      }
      else if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227BB7F60(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    return PB::Writer::writeVarInt(this);
  }
  return result;
}

uint64_t sub_227BB7FCC(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC231B0;
  *(_DWORD *)(result + 68) = 0;
  return result;
}

void sub_227BB7FF4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227BB802C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC231B0;
  *(_DWORD *)(a1 + 68) = 0;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    __int16 v3 = 1;
    *(_WORD *)(a1 + 68) = 1;
    *(void *)(a1 + 8) = v4;
    __int16 v2 = *(_WORD *)(a2 + 68);
    if ((v2 & 0x800) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((*(_WORD *)(a2 + 68) & 0x800) != 0)
  {
LABEL_5:
    LODWORD(v4) = *(_DWORD *)(a2 + 56);
    v3 |= 0x800u;
    *(_WORD *)(a1 + 68) = v3;
    *(_DWORD *)(a1 + 56) = v4;
    __int16 v2 = *(_WORD *)(a2 + 68);
  }
LABEL_6:
  if ((v2 & 0x2000) != 0)
  {
    LODWORD(v4) = *(_DWORD *)(a2 + 64);
    v3 |= 0x2000u;
    *(_WORD *)(a1 + 68) = v3;
    *(_DWORD *)(a1 + 64) = v4;
    __int16 v2 = *(_WORD *)(a2 + 68);
    if ((v2 & 2) == 0)
    {
LABEL_8:
      if ((v2 & 0x100) == 0) {
        goto LABEL_9;
      }
      goto LABEL_21;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_8;
  }
  LODWORD(v4) = *(_DWORD *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(a1 + 68) = v3;
  *(_DWORD *)(a1 + 16) = v4;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x100) == 0)
  {
LABEL_9:
    if ((v2 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  LODWORD(v4) = *(_DWORD *)(a2 + 44);
  v3 |= 0x100u;
  *(_WORD *)(a1 + 68) = v3;
  *(_DWORD *)(a1 + 44) = v4;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x200) == 0)
  {
LABEL_10:
    if ((v2 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  LODWORD(v4) = *(_DWORD *)(a2 + 48);
  v3 |= 0x200u;
  *(_WORD *)(a1 + 68) = v3;
  *(_DWORD *)(a1 + 48) = v4;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x400) == 0)
  {
LABEL_11:
    if ((v2 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_24;
  }
LABEL_23:
  LODWORD(v4) = *(_DWORD *)(a2 + 52);
  v3 |= 0x400u;
  *(_WORD *)(a1 + 68) = v3;
  *(_DWORD *)(a1 + 52) = v4;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 4) == 0)
  {
LABEL_12:
    if ((v2 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_25;
  }
LABEL_24:
  LODWORD(v4) = *(_DWORD *)(a2 + 20);
  v3 |= 4u;
  *(_WORD *)(a1 + 68) = v3;
  *(_DWORD *)(a1 + 20) = v4;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 8) == 0)
  {
LABEL_13:
    if ((v2 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_26;
  }
LABEL_25:
  LODWORD(v4) = *(_DWORD *)(a2 + 24);
  v3 |= 8u;
  *(_WORD *)(a1 + 68) = v3;
  *(_DWORD *)(a1 + 24) = v4;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x10) == 0)
  {
LABEL_14:
    if ((v2 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_27;
  }
LABEL_26:
  LODWORD(v4) = *(_DWORD *)(a2 + 28);
  v3 |= 0x10u;
  *(_WORD *)(a1 + 68) = v3;
  *(_DWORD *)(a1 + 28) = v4;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x20) == 0)
  {
LABEL_15:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_28;
  }
LABEL_27:
  int v5 = *(_DWORD *)(a2 + 32);
  v3 |= 0x20u;
  *(_WORD *)(a1 + 68) = v3;
  *(_DWORD *)(a1 + 32) = v5;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x1000) == 0)
  {
LABEL_16:
    if ((v2 & 0x80) == 0) {
      goto LABEL_17;
    }
    goto LABEL_29;
  }
LABEL_28:
  LODWORD(v4) = *(_DWORD *)(a2 + 60);
  v3 |= 0x1000u;
  *(_WORD *)(a1 + 68) = v3;
  *(_DWORD *)(a1 + 60) = v4;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x80) == 0)
  {
LABEL_17:
    if ((v2 & 0x40) == 0) {
      return *(float *)&v4;
    }
    goto LABEL_30;
  }
LABEL_29:
  LODWORD(v4) = *(_DWORD *)(a2 + 40);
  v3 |= 0x80u;
  *(_WORD *)(a1 + 68) = v3;
  *(_DWORD *)(a1 + 40) = v4;
  if ((*(_WORD *)(a2 + 68) & 0x40) == 0) {
    return *(float *)&v4;
  }
LABEL_30:
  LODWORD(v4) = *(_DWORD *)(a2 + 36);
  *(_WORD *)(a1 + 68) = v3 | 0x40;
  *(_DWORD *)(a1 + 36) = v4;
  return *(float *)&v4;
}

uint64_t sub_227BB81E0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "accuracy", *(float *)(a1 + 16));
    __int16 v5 = *(_WORD *)(a1 + 68);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_21;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "biasX", *(float *)(a1 + 20));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "biasY", *(float *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "biasZ", *(float *)(a1 + 28));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x20) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "calibrationLevel");
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "horizontal", *(float *)(a1 + 36));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x80) == 0)
  {
LABEL_8:
    if ((v5 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "inclination", *(float *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x100) == 0)
  {
LABEL_9:
    if ((v5 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "magneticFieldX", *(float *)(a1 + 44));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x200) == 0)
  {
LABEL_10:
    if ((v5 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "magneticFieldY", *(float *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x400) == 0)
  {
LABEL_11:
    if ((v5 & 0x800) == 0) {
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "magneticFieldZ", *(float *)(a1 + 52));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x800) == 0)
  {
LABEL_12:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(this, "magneticHeading", *(float *)(a1 + 56));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x1000) == 0)
  {
LABEL_13:
    if ((v5 & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "magnitude", *(float *)(a1 + 60));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 1) == 0)
  {
LABEL_14:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_31:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  if ((*(_WORD *)(a1 + 68) & 0x2000) != 0) {
LABEL_15:
  }
    PB::TextFormatter::format(this, "trueHeading", *(float *)(a1 + 64));
LABEL_16:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BB83E4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 68) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_69;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              unint64_t v2 = *((void *)this + 1) + 8;
              goto LABEL_79;
            case 2u:
              *(_WORD *)(a1 + 68) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_69;
              }
              *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_78;
            case 3u:
              *(_WORD *)(a1 + 68) |= 0x2000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_69;
              }
              *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_78;
            case 4u:
              *(_WORD *)(a1 + 68) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_69;
              }
              *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_78;
            case 5u:
              *(_WORD *)(a1 + 68) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_69;
              }
              *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_78;
            case 6u:
              *(_WORD *)(a1 + 68) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_69;
              }
              *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_78;
            case 7u:
              *(_WORD *)(a1 + 68) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_69;
              }
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_78;
            case 8u:
              *(_WORD *)(a1 + 68) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_69;
              }
              *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_78;
            case 9u:
              *(_WORD *)(a1 + 68) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_69;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_78;
            case 0xAu:
              *(_WORD *)(a1 + 68) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_69;
              }
              *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_78;
            case 0xBu:
              *(_WORD *)(a1 + 68) |= 0x20u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v27 = 0;
                unsigned int v28 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_84;
                  }
                  unint64_t v29 = v21++;
                  char v30 = *(unsigned char *)(v22 + v29);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v30 & 0x7F) << v27;
                  if ((v30 & 0x80) == 0) {
                    break;
                  }
                  v27 += 7;
                  BOOL v14 = v28++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_83:
                    unint64_t v2 = v29 + 1;
                    goto LABEL_84;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_83;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_84;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_84:
              *(_DWORD *)(a1 + 32) = v25;
LABEL_85:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 0xCu:
              *(_WORD *)(a1 + 68) |= 0x1000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_69;
              }
              *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_78;
            case 0xDu:
              *(_WORD *)(a1 + 68) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_69;
              }
              *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_78;
            case 0xEu:
              *(_WORD *)(a1 + 68) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
LABEL_78:
                unint64_t v2 = *((void *)this + 1) + 4;
LABEL_79:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_69:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_85;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_85;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227BB8970(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 68);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    __int16 v4 = *(_WORD *)(v3 + 68);
    if ((v4 & 0x800) == 0)
    {
LABEL_3:
      if ((v4 & 0x2000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((*(_WORD *)(result + 68) & 0x800) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x2000) == 0)
  {
LABEL_4:
    if ((v4 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 2) == 0)
  {
LABEL_5:
    if ((v4 & 0x100) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x100) == 0)
  {
LABEL_6:
    if ((v4 & 0x200) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x200) == 0)
  {
LABEL_7:
    if ((v4 & 0x400) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x400) == 0)
  {
LABEL_8:
    if ((v4 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 4) == 0)
  {
LABEL_9:
    if ((v4 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 8) == 0)
  {
LABEL_10:
    if ((v4 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x10) == 0)
  {
LABEL_11:
    if ((v4 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x20) == 0)
  {
LABEL_12:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x1000) == 0)
  {
LABEL_13:
    if ((v4 & 0x80) == 0) {
      goto LABEL_14;
    }
LABEL_28:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
    if ((*(_WORD *)(v3 + 68) & 0x40) == 0) {
      return result;
    }
    goto LABEL_29;
  }
LABEL_27:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 60));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x80) != 0) {
    goto LABEL_28;
  }
LABEL_14:
  if ((v4 & 0x40) == 0) {
    return result;
  }
LABEL_29:
  float v5 = *(float *)(v3 + 36);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227BB8B30(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC231E8;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_227BB8B58(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227BB8B90(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC231E8;
  *(_DWORD *)(result + 20) = 0;
  if (*(unsigned char *)(a2 + 20))
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 20) = 1;
    *(void *)(result + 8) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 20) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
LABEL_5:
    int v4 = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(result + 20) = v2;
    *(_DWORD *)(result + 16) = v4;
  }
  return result;
}

uint64_t sub_227BB8BF4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "compassJustAlignedToStableField");
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if (v5) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BB8C70(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v20 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v21 = *(void *)this;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v24 = 0;
          if (v2 <= v20) {
            unint64_t v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v20)
            {
              LODWORD(v24) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_47;
            }
            unint64_t v29 = v20++;
            char v30 = *(unsigned char *)(v21 + v29);
            *((void *)this + 1) = v20;
            v24 |= (unint64_t)(v30 & 0x7F) << v27;
            if ((v30 & 0x80) == 0) {
              break;
            }
            v27 += 7;
            BOOL v14 = v28++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              goto LABEL_46;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v24) = 0;
          }
LABEL_46:
          unint64_t v2 = v29 + 1;
        }
        else
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          while (1)
          {
            unint64_t v2 = v20 + 1;
            *((void *)this + 1) = v20 + 1;
            char v25 = *(unsigned char *)(v21 + v20);
            v24 |= (unint64_t)(v25 & 0x7F) << v22;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v22 += 7;
            unint64_t v20 = v2;
            BOOL v14 = v23++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              break;
            }
          }
        }
LABEL_47:
        *(_DWORD *)(a1 + 16) = v24;
      }
      else if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227BB8F00(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    return PB::Writer::writeVarInt(this);
  }
  return result;
}

uint64_t sub_227BB8F6C(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC23220;
  *(_DWORD *)(result + 80) = 0;
  return result;
}

void sub_227BB8F94(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227BB8FCC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC23220;
  *(_DWORD *)(a1 + 80) = 0;
  int v2 = *(_DWORD *)(a2 + 80);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    int v3 = 1;
    *(_DWORD *)(a1 + 80) = 1;
    *(void *)(a1 + 8) = v4;
    int v2 = *(_DWORD *)(a2 + 80);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_5:
    LODWORD(v4) = *(_DWORD *)(a2 + 16);
    v3 |= 2u;
    *(_DWORD *)(a1 + 80) = v3;
    *(_DWORD *)(a1 + 16) = v4;
    int v2 = *(_DWORD *)(a2 + 80);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    LODWORD(v4) = *(_DWORD *)(a2 + 20);
    v3 |= 4u;
    *(_DWORD *)(a1 + 80) = v3;
    *(_DWORD *)(a1 + 20) = v4;
    int v2 = *(_DWORD *)(a2 + 80);
    if ((v2 & 8) == 0)
    {
LABEL_8:
      if ((v2 & 0x2000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_25;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_8;
  }
  LODWORD(v4) = *(_DWORD *)(a2 + 24);
  v3 |= 8u;
  *(_DWORD *)(a1 + 80) = v3;
  *(_DWORD *)(a1 + 24) = v4;
  int v2 = *(_DWORD *)(a2 + 80);
  if ((v2 & 0x2000) == 0)
  {
LABEL_9:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_25:
  LODWORD(v4) = *(_DWORD *)(a2 + 64);
  v3 |= 0x2000u;
  *(_DWORD *)(a1 + 80) = v3;
  *(_DWORD *)(a1 + 64) = v4;
  int v2 = *(_DWORD *)(a2 + 80);
  if ((v2 & 0x4000) == 0)
  {
LABEL_10:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  LODWORD(v4) = *(_DWORD *)(a2 + 68);
  v3 |= 0x4000u;
  *(_DWORD *)(a1 + 80) = v3;
  *(_DWORD *)(a1 + 68) = v4;
  int v2 = *(_DWORD *)(a2 + 80);
  if ((v2 & 0x8000) == 0)
  {
LABEL_11:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_27:
  LODWORD(v4) = *(_DWORD *)(a2 + 72);
  v3 |= 0x8000u;
  *(_DWORD *)(a1 + 80) = v3;
  *(_DWORD *)(a1 + 72) = v4;
  int v2 = *(_DWORD *)(a2 + 80);
  if ((v2 & 0x1000) == 0)
  {
LABEL_12:
    if ((v2 & 0x20) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_28:
  LODWORD(v4) = *(_DWORD *)(a2 + 60);
  v3 |= 0x1000u;
  *(_DWORD *)(a1 + 80) = v3;
  *(_DWORD *)(a1 + 60) = v4;
  int v2 = *(_DWORD *)(a2 + 80);
  if ((v2 & 0x20) == 0)
  {
LABEL_13:
    if ((v2 & 0x40) == 0) {
      goto LABEL_14;
    }
    goto LABEL_30;
  }
LABEL_29:
  LODWORD(v4) = *(_DWORD *)(a2 + 32);
  v3 |= 0x20u;
  *(_DWORD *)(a1 + 80) = v3;
  *(_DWORD *)(a1 + 32) = v4;
  int v2 = *(_DWORD *)(a2 + 80);
  if ((v2 & 0x40) == 0)
  {
LABEL_14:
    if ((v2 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_31;
  }
LABEL_30:
  LODWORD(v4) = *(_DWORD *)(a2 + 36);
  v3 |= 0x40u;
  *(_DWORD *)(a1 + 80) = v3;
  *(_DWORD *)(a1 + 36) = v4;
  int v2 = *(_DWORD *)(a2 + 80);
  if ((v2 & 0x80) == 0)
  {
LABEL_15:
    if ((v2 & 0x200) == 0) {
      goto LABEL_16;
    }
    goto LABEL_32;
  }
LABEL_31:
  LODWORD(v4) = *(_DWORD *)(a2 + 40);
  v3 |= 0x80u;
  *(_DWORD *)(a1 + 80) = v3;
  *(_DWORD *)(a1 + 40) = v4;
  int v2 = *(_DWORD *)(a2 + 80);
  if ((v2 & 0x200) == 0)
  {
LABEL_16:
    if ((v2 & 0x400) == 0) {
      goto LABEL_17;
    }
    goto LABEL_33;
  }
LABEL_32:
  LODWORD(v4) = *(_DWORD *)(a2 + 48);
  v3 |= 0x200u;
  *(_DWORD *)(a1 + 80) = v3;
  *(_DWORD *)(a1 + 48) = v4;
  int v2 = *(_DWORD *)(a2 + 80);
  if ((v2 & 0x400) == 0)
  {
LABEL_17:
    if ((v2 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_34;
  }
LABEL_33:
  LODWORD(v4) = *(_DWORD *)(a2 + 52);
  v3 |= 0x400u;
  *(_DWORD *)(a1 + 80) = v3;
  *(_DWORD *)(a1 + 52) = v4;
  int v2 = *(_DWORD *)(a2 + 80);
  if ((v2 & 0x800) == 0)
  {
LABEL_18:
    if ((v2 & 0x10) == 0) {
      goto LABEL_19;
    }
    goto LABEL_35;
  }
LABEL_34:
  LODWORD(v4) = *(_DWORD *)(a2 + 56);
  v3 |= 0x800u;
  *(_DWORD *)(a1 + 80) = v3;
  *(_DWORD *)(a1 + 56) = v4;
  int v2 = *(_DWORD *)(a2 + 80);
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_36;
  }
LABEL_35:
  int v5 = *(_DWORD *)(a2 + 28);
  v3 |= 0x10u;
  *(_DWORD *)(a1 + 80) = v3;
  *(_DWORD *)(a1 + 28) = v5;
  int v2 = *(_DWORD *)(a2 + 80);
  if ((v2 & 0x20000) == 0)
  {
LABEL_20:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_37;
  }
LABEL_36:
  char v6 = *(unsigned char *)(a2 + 77);
  v3 |= 0x20000u;
  *(_DWORD *)(a1 + 80) = v3;
  *(unsigned char *)(a1 + 77) = v6;
  int v2 = *(_DWORD *)(a2 + 80);
  if ((v2 & 0x10000) == 0)
  {
LABEL_21:
    if ((v2 & 0x100) == 0) {
      return *(float *)&v4;
    }
    goto LABEL_38;
  }
LABEL_37:
  char v7 = *(unsigned char *)(a2 + 76);
  v3 |= 0x10000u;
  *(_DWORD *)(a1 + 80) = v3;
  *(unsigned char *)(a1 + 76) = v7;
  if ((*(_DWORD *)(a2 + 80) & 0x100) == 0) {
    return *(float *)&v4;
  }
LABEL_38:
  LODWORD(v4) = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 80) = v3 | 0x100;
  *(_DWORD *)(a1 + 44) = v4;
  return *(float *)&v4;
}

uint64_t sub_227BB91F0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 80);
  if ((v5 & 0x10000) != 0)
  {
    PB::TextFormatter::format(this, "apAwake");
    int v5 = *(_DWORD *)(a1 + 80);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_25;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "biasX", *(float *)(a1 + 16));
  int v5 = *(_DWORD *)(a1 + 80);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "biasY", *(float *)(a1 + 20));
  int v5 = *(_DWORD *)(a1 + 80);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "biasZ", *(float *)(a1 + 24));
  int v5 = *(_DWORD *)(a1 + 80);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "calibrationLevel");
  int v5 = *(_DWORD *)(a1 + 80);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "cost", *(float *)(a1 + 32));
  int v5 = *(_DWORD *)(a1 + 80);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(this, "coverage", *(float *)(a1 + 36));
  int v5 = *(_DWORD *)(a1 + 80);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "earthDiffRatio", *(float *)(a1 + 40));
  int v5 = *(_DWORD *)(a1 + 80);
  if ((v5 & 0x20000) == 0)
  {
LABEL_10:
    if ((v5 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(this, "hasConsistency");
  int v5 = *(_DWORD *)(a1 + 80);
  if ((v5 & 0x100) == 0)
  {
LABEL_11:
    if ((v5 & 0x200) == 0) {
      goto LABEL_12;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(this, "planarity", *(float *)(a1 + 44));
  int v5 = *(_DWORD *)(a1 + 80);
  if ((v5 & 0x200) == 0)
  {
LABEL_12:
    if ((v5 & 0x400) == 0) {
      goto LABEL_13;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(this, "poseX", *(float *)(a1 + 48));
  int v5 = *(_DWORD *)(a1 + 80);
  if ((v5 & 0x400) == 0)
  {
LABEL_13:
    if ((v5 & 0x800) == 0) {
      goto LABEL_14;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "poseY", *(float *)(a1 + 52));
  int v5 = *(_DWORD *)(a1 + 80);
  if ((v5 & 0x800) == 0)
  {
LABEL_14:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "poseZ", *(float *)(a1 + 56));
  int v5 = *(_DWORD *)(a1 + 80);
  if ((v5 & 0x1000) == 0)
  {
LABEL_15:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "quality", *(float *)(a1 + 60));
  int v5 = *(_DWORD *)(a1 + 80);
  if ((v5 & 0x2000) == 0)
  {
LABEL_16:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "scaleX", *(float *)(a1 + 64));
  int v5 = *(_DWORD *)(a1 + 80);
  if ((v5 & 0x4000) == 0)
  {
LABEL_17:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "scaleY", *(float *)(a1 + 68));
  int v5 = *(_DWORD *)(a1 + 80);
  if ((v5 & 0x8000) == 0)
  {
LABEL_18:
    if ((v5 & 1) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_39:
  PB::TextFormatter::format(this, "scaleZ", *(float *)(a1 + 72));
  if (*(_DWORD *)(a1 + 80)) {
LABEL_19:
  }
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
LABEL_20:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BB9474(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_DWORD *)(a1 + 80) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_79;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              unint64_t v2 = *((void *)this + 1) + 8;
              goto LABEL_93;
            case 2u:
              *(_DWORD *)(a1 + 80) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_79;
              }
              *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_92;
            case 3u:
              *(_DWORD *)(a1 + 80) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_79;
              }
              *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_92;
            case 4u:
              *(_DWORD *)(a1 + 80) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_79;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_92;
            case 5u:
              *(_DWORD *)(a1 + 80) |= 0x2000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_79;
              }
              *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_92;
            case 6u:
              *(_DWORD *)(a1 + 80) |= 0x4000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_79;
              }
              *(_DWORD *)(a1 + 68) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_92;
            case 7u:
              *(_DWORD *)(a1 + 80) |= 0x8000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_79;
              }
              *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_92;
            case 8u:
              *(_DWORD *)(a1 + 80) |= 0x1000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_79;
              }
              *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_92;
            case 9u:
              *(_DWORD *)(a1 + 80) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_79;
              }
              *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_92;
            case 0xAu:
              *(_DWORD *)(a1 + 80) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_79;
              }
              *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_92;
            case 0xBu:
              *(_DWORD *)(a1 + 80) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_79;
              }
              *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_92;
            case 0xCu:
              *(_DWORD *)(a1 + 80) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_79;
              }
              *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_92;
            case 0xDu:
              *(_DWORD *)(a1 + 80) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_79;
              }
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_92;
            case 0xEu:
              *(_DWORD *)(a1 + 80) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_79;
              }
              *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_92;
            case 0xFu:
              *(_DWORD *)(a1 + 80) |= 0x10u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v31 = 0;
                unsigned int v32 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_98;
                  }
                  unint64_t v33 = v21++;
                  char v34 = *(unsigned char *)(v22 + v33);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v34 & 0x7F) << v31;
                  if ((v34 & 0x80) == 0) {
                    break;
                  }
                  v31 += 7;
                  BOOL v14 = v32++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_97:
                    unint64_t v2 = v33 + 1;
                    goto LABEL_98;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_97;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_98;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_98:
              *(_DWORD *)(a1 + 28) = v25;
LABEL_99:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 0x10u:
              *(_DWORD *)(a1 + 80) |= 0x20000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v28 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v27 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v28 = v27 != 0;
              }
              *(unsigned char *)(a1 + 77) = v28;
              goto LABEL_99;
            case 0x11u:
              *(_DWORD *)(a1 + 80) |= 0x10000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v30 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v29 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v30 = v29 != 0;
              }
              *(unsigned char *)(a1 + 76) = v30;
              goto LABEL_99;
            case 0x12u:
              *(_DWORD *)(a1 + 80) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
LABEL_92:
                unint64_t v2 = *((void *)this + 1) + 4;
LABEL_93:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_79:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_99;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_99;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227BB9B08(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 80);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    int v4 = *(_DWORD *)(v3 + 80);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_22;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16));
  int v4 = *(_DWORD *)(v3 + 80);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
  int v4 = *(_DWORD *)(v3 + 80);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
  int v4 = *(_DWORD *)(v3 + 80);
  if ((v4 & 0x2000) == 0)
  {
LABEL_6:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64));
  int v4 = *(_DWORD *)(v3 + 80);
  if ((v4 & 0x4000) == 0)
  {
LABEL_7:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 68));
  int v4 = *(_DWORD *)(v3 + 80);
  if ((v4 & 0x8000) == 0)
  {
LABEL_8:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72));
  int v4 = *(_DWORD *)(v3 + 80);
  if ((v4 & 0x1000) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 60));
  int v4 = *(_DWORD *)(v3 + 80);
  if ((v4 & 0x20) == 0)
  {
LABEL_10:
    if ((v4 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
  int v4 = *(_DWORD *)(v3 + 80);
  if ((v4 & 0x40) == 0)
  {
LABEL_11:
    if ((v4 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36));
  int v4 = *(_DWORD *)(v3 + 80);
  if ((v4 & 0x80) == 0)
  {
LABEL_12:
    if ((v4 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
  int v4 = *(_DWORD *)(v3 + 80);
  if ((v4 & 0x200) == 0)
  {
LABEL_13:
    if ((v4 & 0x400) == 0) {
      goto LABEL_14;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48));
  int v4 = *(_DWORD *)(v3 + 80);
  if ((v4 & 0x400) == 0)
  {
LABEL_14:
    if ((v4 & 0x800) == 0) {
      goto LABEL_15;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
  int v4 = *(_DWORD *)(v3 + 80);
  if ((v4 & 0x800) == 0)
  {
LABEL_15:
    if ((v4 & 0x10) == 0) {
      goto LABEL_16;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56));
  int v4 = *(_DWORD *)(v3 + 80);
  if ((v4 & 0x10) == 0)
  {
LABEL_16:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 80);
  if ((v4 & 0x20000) == 0)
  {
LABEL_17:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_18;
    }
LABEL_36:
    uint64_t result = PB::Writer::write(this);
    if ((*(_DWORD *)(v3 + 80) & 0x100) == 0) {
      return result;
    }
    goto LABEL_37;
  }
LABEL_35:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 80);
  if ((v4 & 0x10000) != 0) {
    goto LABEL_36;
  }
LABEL_18:
  if ((v4 & 0x100) == 0) {
    return result;
  }
LABEL_37:
  float v5 = *(float *)(v3 + 44);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227BB9D38(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC23258;
  *(_DWORD *)(result + 80) = 0;
  return result;
}

void sub_227BB9D60(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227BB9D98(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC23258;
  *(_DWORD *)(a1 + 80) = 0;
  int v2 = *(_DWORD *)(a2 + 80);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    int v3 = 1;
    *(_DWORD *)(a1 + 80) = 1;
    *(void *)(a1 + 8) = v4;
    int v2 = *(_DWORD *)(a2 + 80);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_5:
    LODWORD(v4) = *(_DWORD *)(a2 + 16);
    v3 |= 2u;
    *(_DWORD *)(a1 + 80) = v3;
    *(_DWORD *)(a1 + 16) = v4;
    int v2 = *(_DWORD *)(a2 + 80);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    LODWORD(v4) = *(_DWORD *)(a2 + 20);
    v3 |= 4u;
    *(_DWORD *)(a1 + 80) = v3;
    *(_DWORD *)(a1 + 20) = v4;
    int v2 = *(_DWORD *)(a2 + 80);
    if ((v2 & 8) == 0)
    {
LABEL_8:
      if ((v2 & 0x800) == 0) {
        goto LABEL_9;
      }
      goto LABEL_24;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_8;
  }
  LODWORD(v4) = *(_DWORD *)(a2 + 24);
  v3 |= 8u;
  *(_DWORD *)(a1 + 80) = v3;
  *(_DWORD *)(a1 + 24) = v4;
  int v2 = *(_DWORD *)(a2 + 80);
  if ((v2 & 0x800) == 0)
  {
LABEL_9:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_25;
  }
LABEL_24:
  LODWORD(v4) = *(_DWORD *)(a2 + 56);
  v3 |= 0x800u;
  *(_DWORD *)(a1 + 80) = v3;
  *(_DWORD *)(a1 + 56) = v4;
  int v2 = *(_DWORD *)(a2 + 80);
  if ((v2 & 0x1000) == 0)
  {
LABEL_10:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_26;
  }
LABEL_25:
  LODWORD(v4) = *(_DWORD *)(a2 + 60);
  v3 |= 0x1000u;
  *(_DWORD *)(a1 + 80) = v3;
  *(_DWORD *)(a1 + 60) = v4;
  int v2 = *(_DWORD *)(a2 + 80);
  if ((v2 & 0x2000) == 0)
  {
LABEL_11:
    if ((v2 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_26:
  LODWORD(v4) = *(_DWORD *)(a2 + 64);
  v3 |= 0x2000u;
  *(_DWORD *)(a1 + 80) = v3;
  *(_DWORD *)(a1 + 64) = v4;
  int v2 = *(_DWORD *)(a2 + 80);
  if ((v2 & 0x400) == 0)
  {
LABEL_12:
    if ((v2 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_28;
  }
LABEL_27:
  LODWORD(v4) = *(_DWORD *)(a2 + 52);
  v3 |= 0x400u;
  *(_DWORD *)(a1 + 80) = v3;
  *(_DWORD *)(a1 + 52) = v4;
  int v2 = *(_DWORD *)(a2 + 80);
  if ((v2 & 0x10) == 0)
  {
LABEL_13:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_29;
  }
LABEL_28:
  LODWORD(v4) = *(_DWORD *)(a2 + 28);
  v3 |= 0x10u;
  *(_DWORD *)(a1 + 80) = v3;
  *(_DWORD *)(a1 + 28) = v4;
  int v2 = *(_DWORD *)(a2 + 80);
  if ((v2 & 0x8000) == 0)
  {
LABEL_14:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_30;
  }
LABEL_29:
  LODWORD(v4) = *(_DWORD *)(a2 + 72);
  v3 |= 0x8000u;
  *(_DWORD *)(a1 + 80) = v3;
  *(_DWORD *)(a1 + 72) = v4;
  int v2 = *(_DWORD *)(a2 + 80);
  if ((v2 & 0x10000) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_31;
  }
LABEL_30:
  char v5 = *(unsigned char *)(a2 + 76);
  v3 |= 0x10000u;
  *(_DWORD *)(a1 + 80) = v3;
  *(unsigned char *)(a1 + 76) = v5;
  int v2 = *(_DWORD *)(a2 + 80);
  if ((v2 & 0x20) == 0)
  {
LABEL_16:
    if ((v2 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_32;
  }
LABEL_31:
  LODWORD(v4) = *(_DWORD *)(a2 + 32);
  v3 |= 0x20u;
  *(_DWORD *)(a1 + 80) = v3;
  *(_DWORD *)(a1 + 32) = v4;
  int v2 = *(_DWORD *)(a2 + 80);
  if ((v2 & 0x40) == 0)
  {
LABEL_17:
    if ((v2 & 0x80) == 0) {
      goto LABEL_18;
    }
    goto LABEL_33;
  }
LABEL_32:
  LODWORD(v4) = *(_DWORD *)(a2 + 36);
  v3 |= 0x40u;
  *(_DWORD *)(a1 + 80) = v3;
  *(_DWORD *)(a1 + 36) = v4;
  int v2 = *(_DWORD *)(a2 + 80);
  if ((v2 & 0x80) == 0)
  {
LABEL_18:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_34;
  }
LABEL_33:
  LODWORD(v4) = *(_DWORD *)(a2 + 40);
  v3 |= 0x80u;
  *(_DWORD *)(a1 + 80) = v3;
  *(_DWORD *)(a1 + 40) = v4;
  int v2 = *(_DWORD *)(a2 + 80);
  if ((v2 & 0x4000) == 0)
  {
LABEL_19:
    if ((v2 & 0x100) == 0) {
      goto LABEL_20;
    }
    goto LABEL_35;
  }
LABEL_34:
  LODWORD(v4) = *(_DWORD *)(a2 + 68);
  v3 |= 0x4000u;
  *(_DWORD *)(a1 + 80) = v3;
  *(_DWORD *)(a1 + 68) = v4;
  int v2 = *(_DWORD *)(a2 + 80);
  if ((v2 & 0x100) == 0)
  {
LABEL_20:
    if ((v2 & 0x200) == 0) {
      return *(float *)&v4;
    }
    goto LABEL_36;
  }
LABEL_35:
  int v6 = *(_DWORD *)(a2 + 44);
  v3 |= 0x100u;
  *(_DWORD *)(a1 + 80) = v3;
  *(_DWORD *)(a1 + 44) = v6;
  if ((*(_DWORD *)(a2 + 80) & 0x200) == 0) {
    return *(float *)&v4;
  }
LABEL_36:
  LODWORD(v4) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 80) = v3 | 0x200;
  *(_DWORD *)(a1 + 48) = v4;
  return *(float *)&v4;
}

uint64_t sub_227BB9FA0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 80);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "biasX", *(float *)(a1 + 16));
    int v5 = *(_DWORD *)(a1 + 80);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_24;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "biasY", *(float *)(a1 + 20));
  int v5 = *(_DWORD *)(a1 + 80);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "biasZ", *(float *)(a1 + 24));
  int v5 = *(_DWORD *)(a1 + 80);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "cost", *(float *)(a1 + 28));
  int v5 = *(_DWORD *)(a1 + 80);
  if ((v5 & 0x20) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "coverage2d", *(float *)(a1 + 32));
  int v5 = *(_DWORD *)(a1 + 80);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "coverage3d", *(float *)(a1 + 36));
  int v5 = *(_DWORD *)(a1 + 80);
  if ((v5 & 0x80) == 0)
  {
LABEL_8:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "earthDiffRatio", *(float *)(a1 + 40));
  int v5 = *(_DWORD *)(a1 + 80);
  if ((v5 & 0x10000) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(this, "isPlanar");
  int v5 = *(_DWORD *)(a1 + 80);
  if ((v5 & 0x100) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "numberOfSamples");
  int v5 = *(_DWORD *)(a1 + 80);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(this, "planarity", *(float *)(a1 + 48));
  int v5 = *(_DWORD *)(a1 + 80);
  if ((v5 & 0x400) == 0)
  {
LABEL_12:
    if ((v5 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(this, "quality", *(float *)(a1 + 52));
  int v5 = *(_DWORD *)(a1 + 80);
  if ((v5 & 0x800) == 0)
  {
LABEL_13:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(this, "scaleX", *(float *)(a1 + 56));
  int v5 = *(_DWORD *)(a1 + 80);
  if ((v5 & 0x1000) == 0)
  {
LABEL_14:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "scaleY", *(float *)(a1 + 60));
  int v5 = *(_DWORD *)(a1 + 80);
  if ((v5 & 0x2000) == 0)
  {
LABEL_15:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "scaleZ", *(float *)(a1 + 64));
  int v5 = *(_DWORD *)(a1 + 80);
  if ((v5 & 0x4000) == 0)
  {
LABEL_16:
    if ((v5 & 1) == 0) {
      goto LABEL_17;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "timeSpan", *(float *)(a1 + 68));
  int v5 = *(_DWORD *)(a1 + 80);
  if ((v5 & 1) == 0)
  {
LABEL_17:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
LABEL_37:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  if ((*(_DWORD *)(a1 + 80) & 0x8000) != 0) {
LABEL_18:
  }
    PB::TextFormatter::format(this, "unitDistance", *(float *)(a1 + 72));
LABEL_19:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227BBA204(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_DWORD *)(a1 + 80) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_77;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              unint64_t v2 = *((void *)this + 1) + 8;
              goto LABEL_89;
            case 2u:
              *(_DWORD *)(a1 + 80) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_77;
              }
              *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_88;
            case 3u:
              *(_DWORD *)(a1 + 80) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_77;
              }
              *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_88;
            case 4u:
              *(_DWORD *)(a1 + 80) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_77;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_88;
            case 5u:
              *(_DWORD *)(a1 + 80) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_77;
              }
              *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_88;
            case 6u:
              *(_DWORD *)(a1 + 80) |= 0x1000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_77;
              }
              *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_88;
            case 7u:
              *(_DWORD *)(a1 + 80) |= 0x2000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_77;
              }
              *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_88;
            case 8u:
              *(_DWORD *)(a1 + 80) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_77;
              }
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_88;
            case 9u:
              *(_DWORD *)(a1 + 80) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_77;
              }
              *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_88;
            case 0xAu:
              *(_DWORD *)(a1 + 80) |= 0x8000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_77;
              }
              *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_88;
            case 0xBu:
              *(_DWORD *)(a1 + 80) |= 0x10000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v22 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v21 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v22 = v21 != 0;
              }
              *(unsigned char *)(a1 + 76) = v22;
              goto LABEL_95;
            case 0xCu:
              *(_DWORD *)(a1 + 80) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_77;
              }
              *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_88;
            case 0xDu:
              *(_DWORD *)(a1 + 80) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_77;
              }
              *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_88;
            case 0xEu:
              *(_DWORD *)(a1 + 80) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_77;
              }
              *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_88;
            case 0xFu:
              *(_DWORD *)(a1 + 80) |= 0x4000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_77;
              }
              *(_DWORD *)(a1 + 68) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_88;
            case 0x10u:
              *(_DWORD *)(a1 + 80) |= 0x100u;
              unint64_t v23 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v24 = *(void *)this;
              if (v23 > 0xFFFFFFFFFFFFFFF5 || v23 + 10 > v2)
              {
                char v29 = 0;
                unsigned int v30 = 0;
                uint64_t v27 = 0;
                if (v2 <= v23) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v23)
                  {
                    LODWORD(v27) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_94;
                  }
                  unint64_t v31 = v23++;
                  char v32 = *(unsigned char *)(v24 + v31);
                  *((void *)this + 1) = v23;
                  v27 |= (unint64_t)(v32 & 0x7F) << v29;
                  if ((v32 & 0x80) == 0) {
                    break;
                  }
                  v29 += 7;
                  BOOL v14 = v30++ > 8;
                  if (v14)
                  {
                    LODWORD(v27) = 0;
LABEL_93:
                    unint64_t v2 = v31 + 1;
                    goto LABEL_94;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v27) = 0;
                }
                goto LABEL_93;
              }
              char v25 = 0;
              unsigned int v26 = 0;
              uint64_t v27 = 0;
              do
              {
                unint64_t v2 = v23 + 1;
                *((void *)this + 1) = v23 + 1;
                char v28 = *(unsigned char *)(v24 + v23);
                v27 |= (unint64_t)(v28 & 0x7F) << v25;
                if ((v28 & 0x80) == 0) {
                  goto LABEL_94;
                }
                v25 += 7;
                unint64_t v23 = v2;
                BOOL v14 = v26++ > 8;
              }
              while (!v14);
              LODWORD(v27) = 0;
LABEL_94:
              *(_DWORD *)(a1 + 44) = v27;
LABEL_95:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 0x11u:
              *(_DWORD *)(a1 + 80) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
LABEL_88:
                unint64_t v2 = *((void *)this + 1) + 4;
LABEL_89:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_77:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_95;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_95;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227BBA850(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 80);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    int v4 = *(_DWORD *)(v3 + 80);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_21;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16));
  int v4 = *(_DWORD *)(v3 + 80);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
  int v4 = *(_DWORD *)(v3 + 80);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x800) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
  int v4 = *(_DWORD *)(v3 + 80);
  if ((v4 & 0x800) == 0)
  {
LABEL_6:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56));
  int v4 = *(_DWORD *)(v3 + 80);
  if ((v4 & 0x1000) == 0)
  {
LABEL_7:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 60));
  int v4 = *(_DWORD *)(v3 + 80);
  if ((v4 & 0x2000) == 0)
  {
LABEL_8:
    if ((v4 & 0x400) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64));
  int v4 = *(_DWORD *)(v3 + 80);
  if ((v4 & 0x400) == 0)
  {
LABEL_9:
    if ((v4 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
  int v4 = *(_DWORD *)(v3 + 80);
  if ((v4 & 0x10) == 0)
  {
LABEL_10:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
  int v4 = *(_DWORD *)(v3 + 80);
  if ((v4 & 0x8000) == 0)
  {
LABEL_11:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72));
  int v4 = *(_DWORD *)(v3 + 80);
  if ((v4 & 0x10000) == 0)
  {
LABEL_12:
    if ((v4 & 0x20) == 0) {
      goto LABEL_13;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 80);
  if ((v4 & 0x20) == 0)
  {
LABEL_13:
    if ((v4 & 0x40) == 0) {
      goto LABEL_14;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
  int v4 = *(_DWORD *)(v3 + 80);
  if ((v4 & 0x40) == 0)
  {
LABEL_14:
    if ((v4 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36));
  int v4 = *(_DWORD *)(v3 + 80);
  if ((v4 & 0x80) == 0)
  {
LABEL_15:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
  int v4 = *(_DWORD *)(v3 + 80);
  if ((v4 & 0x4000) == 0)
  {
LABEL_16:
    if ((v4 & 0x100) == 0) {
      goto LABEL_17;
    }
LABEL_34:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(_DWORD *)(v3 + 80) & 0x200) == 0) {
      return result;
    }
    goto LABEL_35;
  }
LABEL_33:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 68));
  int v4 = *(_DWORD *)(v3 + 80);
  if ((v4 & 0x100) != 0) {
    goto LABEL_34;
  }
LABEL_17:
  if ((v4 & 0x200) == 0) {
    return result;
  }
LABEL_35:
  float v5 = *(float *)(v3 + 48);

  return PB::Writer::write(this, v5);
}

double sub_227BBAA64(uint64_t a1)
{
  *(void *)a1 = &unk_26DC23290;
  *(_DWORD *)(a1 + 124) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return result;
}

void sub_227BBAA98(PB::Base *this)
{
  *(void *)this = &unk_26DC23290;
  unint64_t v2 = (void *)*((void *)this + 4);
  if (v2)
  {
    *((void *)this + 5) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 2) = v3;
    operator delete(v3);
  }

  PB::Base::~Base(this);
}

void sub_227BBAB0C(PB::Base *a1)
{
  sub_227BBAA98(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227BBAB44(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC23290;
  *(_OWORD *)(a1 + 8) = 0u;
  int v4 = (char *)(a1 + 8);
  *(_DWORD *)(a1 + 124) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  int v5 = *(_DWORD *)(a2 + 124);
  if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 56);
    int v6 = 1;
    *(_DWORD *)(a1 + 124) = 1;
    *(void *)(a1 + 56) = v7;
    int v5 = *(_DWORD *)(a2 + 124);
    if ((v5 & 0x80) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v6 = 0;
  if ((v5 & 0x80) != 0)
  {
LABEL_5:
    int v8 = *(_DWORD *)(a2 + 88);
    v6 |= 0x80u;
    *(_DWORD *)(a1 + 124) = v6;
    *(_DWORD *)(a1 + 88) = v8;
    int v5 = *(_DWORD *)(a2 + 124);
  }
LABEL_6:
  if ((v5 & 0x4000) != 0)
  {
    int v13 = *(_DWORD *)(a2 + 116);
    v6 |= 0x4000u;
    *(_DWORD *)(a1 + 124) = v6;
    *(_DWORD *)(a1 + 116) = v13;
    int v5 = *(_DWORD *)(a2 + 124);
    if ((v5 & 4) == 0)
    {
LABEL_8:
      if ((v5 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_9;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_8;
  }
  int v14 = *(_DWORD *)(a2 + 68);
  v6 |= 4u;
  *(_DWORD *)(a1 + 124) = v6;
  *(_DWORD *)(a1 + 68) = v14;
  if ((*(_DWORD *)(a2 + 124) & 0x20) != 0)
  {
LABEL_9:
    int v9 = *(_DWORD *)(a2 + 80);
    *(_DWORD *)(a1 + 124) = v6 | 0x20;
    *(_DWORD *)(a1 + 80) = v9;
  }
LABEL_10:
  if (a1 != a2)
  {
    sub_227B8BA68(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
    sub_227B8BA68((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
  }
  int v10 = *(_DWORD *)(a2 + 124);
  if ((v10 & 0x800) != 0)
  {
    int v15 = *(_DWORD *)(a2 + 104);
    *(_DWORD *)(a1 + 124) |= 0x800u;
    *(_DWORD *)(a1 + 104) = v15;
    int v10 = *(_DWORD *)(a2 + 124);
    if ((v10 & 0x100) == 0)
    {
LABEL_14:
      if ((v10 & 2) == 0) {
        goto LABEL_15;
      }
      goto LABEL_31;
    }
  }
  else if ((v10 & 0x100) == 0)
  {
    goto LABEL_14;
  }
  int v16 = *(_DWORD *)(a2 + 92);
  *(_DWORD *)(a1 + 124) |= 0x100u;
  *(_DWORD *)(a1 + 92) = v16;
  int v10 = *(_DWORD *)(a2 + 124);
  if ((v10 & 2) == 0)
  {
LABEL_15:
    if ((v10 & 0x10) == 0) {
      goto LABEL_16;
    }
    goto LABEL_32;
  }
LABEL_31:
  int v17 = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 124) |= 2u;
  *(_DWORD *)(a1 + 64) = v17;
  int v10 = *(_DWORD *)(a2 + 124);
  if ((v10 & 0x10) == 0)
  {
LABEL_16:
    if ((v10 & 8) == 0) {
      goto LABEL_17;
    }
    goto LABEL_33;
  }
LABEL_32:
  int v18 = *(_DWORD *)(a2 + 76);
  *(_DWORD *)(a1 + 124) |= 0x10u;
  *(_DWORD *)(a1 + 76) = v18;
  int v10 = *(_DWORD *)(a2 + 124);
  if ((v10 & 8) == 0)
  {
LABEL_17:
    if ((v10 & 0x400) == 0) {
      goto LABEL_18;
    }
    goto LABEL_34;
  }
LABEL_33:
  int v19 = *(_DWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 124) |= 8u;
  *(_DWORD *)(a1 + 72) = v19;
  int v10 = *(_DWORD *)(a2 + 124);
  if ((v10 & 0x400) == 0)
  {
LABEL_18:
    if ((v10 & 0x10000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_35;
  }
LABEL_34:
  int v20 = *(_DWORD *)(a2 + 100);
  *(_DWORD *)(a1 + 124) |= 0x400u;
  *(_DWORD *)(a1 + 100) = v20;
  int v10 = *(_DWORD *)(a2 + 124);
  if ((v10 & 0x10000) == 0)
  {
LABEL_19:
    if ((v10 & 0x8000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_36;
  }
LABEL_35:
  char v21 = *(unsigned char *)(a2 + 121);
  *(_DWORD *)(a1 + 124) |= 0x10000u;
  *(unsigned char *)(a1 + 121) = v21;
  int v10 = *(_DWORD *)(a2 + 124);
  if ((v10 & 0x8000) == 0)
  {
LABEL_20:
    if ((v10 & 0x200) == 0) {
      goto LABEL_21;
    }
    goto LABEL_37;
  }
LABEL_36:
  char v22 = *(unsigned char *)(a2 + 120);
  *(_DWORD *)(a1 + 124) |= 0x8000u;
  *(unsigned char *)(a1 + 120) = v22;
  int v10 = *(_DWORD *)(a2 + 124);
  if ((v10 & 0x200) == 0)
  {
LABEL_21:
    if ((v10 & 0x1000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_38;
  }
LABEL_37:
  int v23 = *(_DWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 124) |= 0x200u;
  *(_DWORD *)(a1 + 96) = v23;
  int v10 = *(_DWORD *)(a2 + 124);
  if ((v10 & 0x1000) == 0)
  {
LABEL_22:
    if ((v10 & 0x40) == 0) {
      goto LABEL_23;
    }
LABEL_39:
    int v25 = *(_DWORD *)(a2 + 84);
    *(_DWORD *)(a1 + 124) |= 0x40u;
    *(_DWORD *)(a1 + 84) = v25;
    if ((*(_DWORD *)(a2 + 124) & 0x2000) == 0) {
      return a1;
    }
    goto LABEL_24;
  }
LABEL_38:
  int v24 = *(_DWORD *)(a2 + 108);
  *(_DWORD *)(a1 + 124) |= 0x1000u;
  *(_DWORD *)(a1 + 108) = v24;
  int v10 = *(_DWORD *)(a2 + 124);
  if ((v10 & 0x40) != 0) {
    goto LABEL_39;
  }
LABEL_23:
  if ((v10 & 0x2000) != 0)
  {
LABEL_24:
    int v11 = *(_DWORD *)(a2 + 112);
    *(_DWORD *)(a1 + 124) |= 0x2000u;
    *(_DWORD *)(a1 + 112) = v11;
  }
  return a1;
}