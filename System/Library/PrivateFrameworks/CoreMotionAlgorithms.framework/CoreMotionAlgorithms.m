void sub_227B1AEE0(void *a1)
{
  __cxa_begin_catch(a1);
  std::terminate();
}

uint64_t sub_227B1AEF4(uint64_t result)
{
  *(void *)result = &unk_26DC1F9E0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void sub_227B1AF1C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227B1AF54(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC1F9E0;
  *(_DWORD *)(a1 + 32) = 0;
  char v2 = *(unsigned char *)(a2 + 32);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 32) = 1;
    *(void *)(a1 + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 32) & 0x10) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 28);
    v3 |= 0x10u;
    *(unsigned char *)(a1 + 32) = v3;
    *(_DWORD *)(a1 + 28) = v5;
    char v2 = *(unsigned char *)(a2 + 32);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(a1 + 32) = v3;
    *(_DWORD *)(a1 + 16) = v6;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 4) == 0)
    {
LABEL_8:
      if ((v2 & 8) == 0) {
        return result;
      }
LABEL_12:
      float result = *(float *)(a2 + 24);
      *(unsigned char *)(a1 + 32) = v3 | 8;
      *(float *)(a1 + 24) = result;
      return result;
    }
  }
  else if ((v2 & 4) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 20);
  v3 |= 4u;
  *(unsigned char *)(a1 + 32) = v3;
  *(_DWORD *)(a1 + 20) = v7;
  if ((*(unsigned char *)(a2 + 32) & 8) != 0) {
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_227B1B00C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "cyclingState");
    char v5 = *(unsigned char *)(a1 + 32);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 32) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "cyclingStateSummary");
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(this, "distanceTraveledOverTimeWindow", *(float *)(a1 + 24));
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(this, "motionType");
  if (*(unsigned char *)(a1 + 32)) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "timestamp");
LABEL_7:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B1B0F0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 32) |= 1u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v45 = 0;
                unsigned int v46 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_88;
                  }
                  unint64_t v47 = v20++;
                  char v48 = *(unsigned char *)(v21 + v47);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v48 & 0x7F) << v45;
                  if ((v48 & 0x80) == 0) {
                    break;
                  }
                  v45 += 7;
                  BOOL v14 = v46++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_87;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_87:
                unint64_t v2 = v47 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_88;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_88:
              *(void *)(a1 + 8) = v24;
              goto LABEL_104;
            case 2u:
              *(unsigned char *)(a1 + 32) |= 0x10u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v49 = 0;
                unsigned int v50 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_93;
                  }
                  unint64_t v51 = v27++;
                  char v52 = *(unsigned char *)(v28 + v51);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v52 & 0x7F) << v49;
                  if ((v52 & 0x80) == 0) {
                    break;
                  }
                  v49 += 7;
                  BOOL v14 = v50++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_92:
                    unint64_t v2 = v51 + 1;
                    goto LABEL_93;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_92;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_93;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_93:
              *(_DWORD *)(a1 + 28) = v31;
              goto LABEL_104;
            case 3u:
              *(unsigned char *)(a1 + 32) |= 2u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v53 = 0;
                unsigned int v54 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_98;
                  }
                  unint64_t v55 = v33++;
                  char v56 = *(unsigned char *)(v34 + v55);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v56 & 0x7F) << v53;
                  if ((v56 & 0x80) == 0) {
                    break;
                  }
                  v53 += 7;
                  BOOL v14 = v54++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_97:
                    unint64_t v2 = v55 + 1;
                    goto LABEL_98;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_97;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_98;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_98:
              *(_DWORD *)(a1 + 16) = v37;
              goto LABEL_104;
            case 4u:
              *(unsigned char *)(a1 + 32) |= 4u;
              unint64_t v39 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v40 = *(void *)this;
              if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
              {
                char v57 = 0;
                unsigned int v58 = 0;
                uint64_t v43 = 0;
                if (v2 <= v39) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v39)
                  {
                    LODWORD(v43) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_103;
                  }
                  unint64_t v59 = v39++;
                  char v60 = *(unsigned char *)(v40 + v59);
                  *((void *)this + 1) = v39;
                  v43 |= (unint64_t)(v60 & 0x7F) << v57;
                  if ((v60 & 0x80) == 0) {
                    break;
                  }
                  v57 += 7;
                  BOOL v14 = v58++ > 8;
                  if (v14)
                  {
                    LODWORD(v43) = 0;
LABEL_102:
                    unint64_t v2 = v59 + 1;
                    goto LABEL_103;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v43) = 0;
                }
                goto LABEL_102;
              }
              char v41 = 0;
              unsigned int v42 = 0;
              uint64_t v43 = 0;
              do
              {
                unint64_t v2 = v39 + 1;
                *((void *)this + 1) = v39 + 1;
                char v44 = *(unsigned char *)(v40 + v39);
                v43 |= (unint64_t)(v44 & 0x7F) << v41;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_103;
                }
                v41 += 7;
                unint64_t v39 = v2;
                BOOL v14 = v42++ > 8;
              }
              while (!v14);
              LODWORD(v43) = 0;
LABEL_103:
              *(_DWORD *)(a1 + 20) = v43;
LABEL_104:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 5u:
              *(unsigned char *)(a1 + 32) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_104;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_104;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B1B674(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 32);
    if ((v4 & 0x10) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 32) & 0x10) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 2) == 0)
  {
LABEL_4:
    if ((v4 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(unsigned char *)(v3 + 32) & 8) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 4) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 8) == 0) {
    return result;
  }
LABEL_11:
  float v5 = *(float *)(v3 + 24);

  return PB::Writer::write(this, v5);
}

void *sub_227B1B738(void *result)
{
  *uint64_t result = &unk_26DC1FA18;
  *(void *)((char *)result + 156) = 0;
  return result;
}

void sub_227B1B760(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227B1B798(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC1FA18;
  *(void *)(a1 + 156) = 0;
  uint64_t v2 = *(void *)(a2 + 156);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    uint64_t v3 = 1;
    *(void *)(a1 + 156) = 1;
    *(void *)(a1 + 8) = v4;
    uint64_t v2 = *(void *)(a2 + 156);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v3 = 0;
  if ((v2 & 4) != 0)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 24);
    v3 |= 4uLL;
    *(void *)(a1 + 156) = v3;
    *(void *)(a1 + 24) = v5;
    uint64_t v2 = *(void *)(a2 + 156);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    v3 |= 2uLL;
    *(void *)(a1 + 156) = v3;
    *(void *)(a1 + 16) = v6;
    uint64_t v2 = *(void *)(a2 + 156);
    if ((v2 & 0x40) == 0)
    {
LABEL_8:
      if ((v2 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_44;
    }
  }
  else if ((v2 & 0x40) == 0)
  {
    goto LABEL_8;
  }
  LODWORD(v4) = *(_DWORD *)(a2 + 44);
  v3 |= 0x40uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 44) = v4;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x20) == 0)
  {
LABEL_9:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_45;
  }
LABEL_44:
  LODWORD(v4) = *(_DWORD *)(a2 + 40);
  v3 |= 0x20uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 40) = v4;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x20000) == 0)
  {
LABEL_10:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_46;
  }
LABEL_45:
  LODWORD(v4) = *(_DWORD *)(a2 + 88);
  v3 |= 0x20000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 88) = v4;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x2000) == 0)
  {
LABEL_11:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_47;
  }
LABEL_46:
  LODWORD(v4) = *(_DWORD *)(a2 + 72);
  v3 |= 0x2000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 72) = v4;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x10000) == 0)
  {
LABEL_12:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_48;
  }
LABEL_47:
  LODWORD(v4) = *(_DWORD *)(a2 + 84);
  v3 |= 0x10000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 84) = v4;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x80000) == 0)
  {
LABEL_13:
    if ((v2 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_49;
  }
LABEL_48:
  LODWORD(v4) = *(_DWORD *)(a2 + 96);
  v3 |= 0x80000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 96) = v4;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x10) == 0)
  {
LABEL_14:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_50;
  }
LABEL_49:
  LODWORD(v4) = *(_DWORD *)(a2 + 36);
  v3 |= 0x10uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 36) = v4;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x8000) == 0)
  {
LABEL_15:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_51;
  }
LABEL_50:
  LODWORD(v4) = *(_DWORD *)(a2 + 80);
  v3 |= 0x8000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 80) = v4;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x4000) == 0)
  {
LABEL_16:
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_52;
  }
LABEL_51:
  LODWORD(v4) = *(_DWORD *)(a2 + 76);
  v3 |= 0x4000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 76) = v4;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_17:
    if ((v2 & 0x10000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_53;
  }
LABEL_52:
  LODWORD(v4) = *(_DWORD *)(a2 + 124);
  v3 |= 0x4000000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 124) = v4;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_18:
    if ((v2 & 0x40000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_54;
  }
LABEL_53:
  LODWORD(v4) = *(_DWORD *)(a2 + 132);
  v3 |= 0x10000000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 132) = v4;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x40000000) == 0)
  {
LABEL_19:
    if ((v2 & 0x20000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_55;
  }
LABEL_54:
  LODWORD(v4) = *(_DWORD *)(a2 + 140);
  v3 |= 0x40000000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 140) = v4;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x20000000) == 0)
  {
LABEL_20:
    if ((v2 & 0x80) == 0) {
      goto LABEL_21;
    }
    goto LABEL_56;
  }
LABEL_55:
  LODWORD(v4) = *(_DWORD *)(a2 + 136);
  v3 |= 0x20000000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 136) = v4;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x80) == 0)
  {
LABEL_21:
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_57;
  }
LABEL_56:
  int v7 = *(_DWORD *)(a2 + 48);
  v3 |= 0x80uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 48) = v7;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x8000000) == 0)
  {
LABEL_22:
    if ((v2 & 0x200000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_58;
  }
LABEL_57:
  LODWORD(v4) = *(_DWORD *)(a2 + 128);
  v3 |= 0x8000000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 128) = v4;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x200000000) == 0)
  {
LABEL_23:
    if ((v2 & 0x100000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_59;
  }
LABEL_58:
  char v8 = *(unsigned char *)(a2 + 152);
  v3 |= 0x200000000uLL;
  *(void *)(a1 + 156) = v3;
  *(unsigned char *)(a1 + 152) = v8;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x100000000) == 0)
  {
LABEL_24:
    if ((v2 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_60;
  }
LABEL_59:
  int v9 = *(_DWORD *)(a2 + 148);
  v3 |= 0x100000000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 148) = v9;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x80000000) == 0)
  {
LABEL_25:
    if ((v2 & 0x400) == 0) {
      goto LABEL_26;
    }
    goto LABEL_61;
  }
LABEL_60:
  LODWORD(v4) = *(_DWORD *)(a2 + 144);
  v3 |= 0x80000000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 144) = v4;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x400) == 0)
  {
LABEL_26:
    if ((v2 & 0x800) == 0) {
      goto LABEL_27;
    }
    goto LABEL_62;
  }
LABEL_61:
  LODWORD(v4) = *(_DWORD *)(a2 + 60);
  v3 |= 0x400uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 60) = v4;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x800) == 0)
  {
LABEL_27:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_63;
  }
LABEL_62:
  LODWORD(v4) = *(_DWORD *)(a2 + 64);
  v3 |= 0x800uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 64) = v4;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x1000) == 0)
  {
LABEL_28:
    if ((v2 & 0x400000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_64;
  }
LABEL_63:
  LODWORD(v4) = *(_DWORD *)(a2 + 68);
  v3 |= 0x1000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 68) = v4;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x400000000) == 0)
  {
LABEL_29:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_65;
  }
LABEL_64:
  char v10 = *(unsigned char *)(a2 + 153);
  v3 |= 0x400000000uLL;
  *(void *)(a1 + 156) = v3;
  *(unsigned char *)(a1 + 153) = v10;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x800000) == 0)
  {
LABEL_30:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_66;
  }
LABEL_65:
  LODWORD(v4) = *(_DWORD *)(a2 + 112);
  v3 |= 0x800000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 112) = v4;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x400000) == 0)
  {
LABEL_31:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_67;
  }
LABEL_66:
  LODWORD(v4) = *(_DWORD *)(a2 + 108);
  v3 |= 0x400000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 108) = v4;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_32:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_68;
  }
LABEL_67:
  LODWORD(v4) = *(_DWORD *)(a2 + 116);
  v3 |= 0x1000000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 116) = v4;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x200000) == 0)
  {
LABEL_33:
    if ((v2 & 0x1000000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_69;
  }
LABEL_68:
  LODWORD(v4) = *(_DWORD *)(a2 + 104);
  v3 |= 0x200000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 104) = v4;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x1000000000) == 0)
  {
LABEL_34:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_70;
  }
LABEL_69:
  char v11 = *(unsigned char *)(a2 + 155);
  v3 |= 0x1000000000uLL;
  *(void *)(a1 + 156) = v3;
  *(unsigned char *)(a1 + 155) = v11;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x100000) == 0)
  {
LABEL_35:
    if ((v2 & 0x2000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_71;
  }
LABEL_70:
  LODWORD(v4) = *(_DWORD *)(a2 + 100);
  v3 |= 0x100000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 100) = v4;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x2000000) == 0)
  {
LABEL_36:
    if ((v2 & 0x200) == 0) {
      goto LABEL_37;
    }
    goto LABEL_72;
  }
LABEL_71:
  int v12 = *(_DWORD *)(a2 + 120);
  v3 |= 0x2000000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 120) = v12;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x200) == 0)
  {
LABEL_37:
    if ((v2 & 0x100) == 0) {
      goto LABEL_38;
    }
    goto LABEL_73;
  }
LABEL_72:
  LODWORD(v4) = *(_DWORD *)(a2 + 56);
  v3 |= 0x200uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 56) = v4;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x100) == 0)
  {
LABEL_38:
    if ((v2 & 0x800000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_74;
  }
LABEL_73:
  LODWORD(v4) = *(_DWORD *)(a2 + 52);
  v3 |= 0x100uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 52) = v4;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x800000000) == 0)
  {
LABEL_39:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_75;
  }
LABEL_74:
  char v13 = *(unsigned char *)(a2 + 154);
  v3 |= 0x800000000uLL;
  *(void *)(a1 + 156) = v3;
  *(unsigned char *)(a1 + 154) = v13;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x40000) == 0)
  {
LABEL_40:
    if ((v2 & 8) == 0) {
      return *(float *)&v4;
    }
    goto LABEL_76;
  }
LABEL_75:
  LODWORD(v4) = *(_DWORD *)(a2 + 92);
  v3 |= 0x40000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 92) = v4;
  if ((*(void *)(a2 + 156) & 8) == 0) {
    return *(float *)&v4;
  }
LABEL_76:
  LODWORD(v4) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 156) = v3 | 8;
  *(_DWORD *)(a1 + 32) = v4;
  return *(float *)&v4;
}

uint64_t sub_227B1BBD0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 8) != 0)
  {
    PB::TextFormatter::format(this, "abruptGravityChangeAngle", *(float *)(a1 + 32));
    uint64_t v5 = *(void *)(a1 + 156);
    if ((v5 & 0x10) == 0)
    {
LABEL_3:
      if ((v5 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_44;
    }
  }
  else if ((v5 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "accelPathLength", *(float *)(a1 + 36));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x20) == 0)
  {
LABEL_4:
    if ((v5 & 0x40) == 0) {
      goto LABEL_5;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "angleChangePostImpact", *(float *)(a1 + 40));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x40) == 0)
  {
LABEL_5:
    if ((v5 & 0x80) == 0) {
      goto LABEL_6;
    }
    goto LABEL_46;
  }
LABEL_45:
  PB::TextFormatter::format(this, "angleChangePreImpact", *(float *)(a1 + 44));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x80) == 0)
  {
LABEL_6:
    if ((v5 & 0x100) == 0) {
      goto LABEL_7;
    }
    goto LABEL_47;
  }
LABEL_46:
  PB::TextFormatter::format(this, "crown");
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x100) == 0)
  {
LABEL_7:
    if ((v5 & 0x200) == 0) {
      goto LABEL_8;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(this, "crownVariance", *(float *)(a1 + 52));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x200) == 0)
  {
LABEL_8:
    if ((v5 & 1) == 0) {
      goto LABEL_9;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(this, "gravityVariance", *(float *)(a1 + 56));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 1) == 0)
  {
LABEL_9:
    if ((v5 & 0x200000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_50;
  }
LABEL_49:
  PB::TextFormatter::format(this, "iostime", *(double *)(a1 + 8));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x200000000) == 0)
  {
LABEL_10:
    if ((v5 & 0x400000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_51;
  }
LABEL_50:
  PB::TextFormatter::format(this, "isFall");
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x400000000) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_52;
  }
LABEL_51:
  PB::TextFormatter::format(this, "isNearFall");
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x400) == 0)
  {
LABEL_12:
    if ((v5 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_53;
  }
LABEL_52:
  PB::TextFormatter::format(this, "maxAbsX", *(float *)(a1 + 60));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x800) == 0)
  {
LABEL_13:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(this, "maxAbsY", *(float *)(a1 + 64));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x1000) == 0)
  {
LABEL_14:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(this, "maxAbsZ", *(float *)(a1 + 68));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x2000) == 0)
  {
LABEL_15:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_56;
  }
LABEL_55:
  PB::TextFormatter::format(this, "maxAccelNorm", *(float *)(a1 + 72));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x4000) == 0)
  {
LABEL_16:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_57;
  }
LABEL_56:
  PB::TextFormatter::format(this, "maxAngleChangePostImpact", *(float *)(a1 + 76));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x8000) == 0)
  {
LABEL_17:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_58;
  }
LABEL_57:
  PB::TextFormatter::format(this, "maxAngleChangePreImpact", *(float *)(a1 + 80));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x10000) == 0)
  {
LABEL_18:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_59;
  }
LABEL_58:
  PB::TextFormatter::format(this, "maxJerkVM", *(float *)(a1 + 84));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x20000) == 0)
  {
LABEL_19:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_60;
  }
LABEL_59:
  PB::TextFormatter::format(this, "maxMinusMin", *(float *)(a1 + 88));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x40000) == 0)
  {
LABEL_20:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_61;
  }
LABEL_60:
  PB::TextFormatter::format(this, "medianAbsGravityY", *(float *)(a1 + 92));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x80000) == 0)
  {
LABEL_21:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_62;
  }
LABEL_61:
  PB::TextFormatter::format(this, "minInertialZ", *(float *)(a1 + 96));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x100000) == 0)
  {
LABEL_22:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_63;
  }
LABEL_62:
  PB::TextFormatter::format(this, "minInertialZHighFreq", *(float *)(a1 + 100));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x200000) == 0)
  {
LABEL_23:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_64;
  }
LABEL_63:
  PB::TextFormatter::format(this, "multiPeakAccelPathLengthWithPeak", *(float *)(a1 + 104));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x400000) == 0)
  {
LABEL_24:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_65;
  }
LABEL_64:
  PB::TextFormatter::format(this, "multiPeakPathLengthDecorrelation", *(float *)(a1 + 108));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x800000) == 0)
  {
LABEL_25:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_66;
  }
LABEL_65:
  PB::TextFormatter::format(this, "multiPeakPathLengthDelaySpread", *(float *)(a1 + 112));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_67;
  }
LABEL_66:
  PB::TextFormatter::format(this, "multiPeakPathLengthHarmonicMean", *(float *)(a1 + 116));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v5 & 2) == 0) {
      goto LABEL_28;
    }
    goto LABEL_68;
  }
LABEL_67:
  PB::TextFormatter::format(this, "operatingMode");
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 2) == 0)
  {
LABEL_28:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_69;
  }
LABEL_68:
  PB::TextFormatter::format(this, "peakTimestamp");
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_29:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_70;
  }
LABEL_69:
  PB::TextFormatter::format(this, "poseAtImpact", *(float *)(a1 + 124));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_30:
    if ((v5 & 4) == 0) {
      goto LABEL_31;
    }
    goto LABEL_71;
  }
LABEL_70:
  PB::TextFormatter::format(this, "posteriorRatio", *(float *)(a1 + 128));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 4) == 0)
  {
LABEL_31:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_72;
  }
LABEL_71:
  PB::TextFormatter::format(this, "sensorTime");
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_32:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_73;
  }
LABEL_72:
  PB::TextFormatter::format(this, "sumDeltaAngles", *(float *)(a1 + 132));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x20000000) == 0)
  {
LABEL_33:
    if ((v5 & 0x40000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_74;
  }
LABEL_73:
  PB::TextFormatter::format(this, "swingAngle", *(float *)(a1 + 136));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x40000000) == 0)
  {
LABEL_34:
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_75;
  }
LABEL_74:
  PB::TextFormatter::format(this, "tiltAngle", *(float *)(a1 + 140));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x80000000) == 0)
  {
LABEL_35:
    if ((v5 & 0x100000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_76;
  }
LABEL_75:
  PB::TextFormatter::format(this, "timeto3rdZC", *(float *)(a1 + 144));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x100000000) == 0)
  {
LABEL_36:
    if ((v5 & 0x800000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_77;
  }
LABEL_76:
  PB::TextFormatter::format(this, "type");
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x800000000) == 0)
  {
LABEL_37:
    if ((v5 & 0x1000000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_38;
  }
LABEL_77:
  PB::TextFormatter::format(this, "withinCyclingImpactThresholds");
  if ((*(void *)(a1 + 156) & 0x1000000000) != 0) {
LABEL_38:
  }
    PB::TextFormatter::format(this, "withinHardThresholds");
LABEL_39:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B1C0B4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(void *)(a1 + 156) |= 1uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_150;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              unint64_t v2 = *((void *)this + 1) + 8;
              goto LABEL_196;
            case 2u:
              *(void *)(a1 + 156) |= 4uLL;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v59 = 0;
                unsigned int v60 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    uint64_t v25 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_206;
                  }
                  unint64_t v61 = v21++;
                  char v62 = *(unsigned char *)(v22 + v61);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v62 & 0x7F) << v59;
                  if ((v62 & 0x80) == 0) {
                    break;
                  }
                  v59 += 7;
                  BOOL v14 = v60++ > 8;
                  if (v14)
                  {
                    uint64_t v25 = 0;
LABEL_205:
                    unint64_t v2 = v61 + 1;
                    goto LABEL_206;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v25 = 0;
                }
                goto LABEL_205;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_206;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              uint64_t v25 = 0;
LABEL_206:
              *(void *)(a1 + 24) = v25;
              goto LABEL_197;
            case 3u:
              *(void *)(a1 + 156) |= 2uLL;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v63 = 0;
                unsigned int v64 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    uint64_t v31 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_211;
                  }
                  unint64_t v65 = v27++;
                  char v66 = *(unsigned char *)(v28 + v65);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v66 & 0x7F) << v63;
                  if ((v66 & 0x80) == 0) {
                    break;
                  }
                  v63 += 7;
                  BOOL v14 = v64++ > 8;
                  if (v14)
                  {
                    uint64_t v31 = 0;
LABEL_210:
                    unint64_t v2 = v65 + 1;
                    goto LABEL_211;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v31 = 0;
                }
                goto LABEL_210;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_211;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              uint64_t v31 = 0;
LABEL_211:
              *(void *)(a1 + 16) = v31;
              goto LABEL_197;
            case 4u:
              *(void *)(a1 + 156) |= 0x40uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_150;
              }
              *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_195;
            case 5u:
              *(void *)(a1 + 156) |= 0x20uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_150;
              }
              *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_195;
            case 6u:
              *(void *)(a1 + 156) |= 0x20000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_150;
              }
              *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_195;
            case 7u:
              *(void *)(a1 + 156) |= 0x2000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_150;
              }
              *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_195;
            case 8u:
              *(void *)(a1 + 156) |= 0x10000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_150;
              }
              *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_195;
            case 9u:
              *(void *)(a1 + 156) |= 0x80000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_150;
              }
              *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_195;
            case 0xAu:
              *(void *)(a1 + 156) |= 0x10uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_150;
              }
              *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_195;
            case 0xBu:
              *(void *)(a1 + 156) |= 0x8000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_150;
              }
              *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_195;
            case 0xCu:
              *(void *)(a1 + 156) |= 0x4000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_150;
              }
              *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_195;
            case 0xDu:
              *(void *)(a1 + 156) |= 0x4000000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_150;
              }
              *(_DWORD *)(a1 + 124) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_195;
            case 0xEu:
              *(void *)(a1 + 156) |= 0x10000000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_150;
              }
              *(_DWORD *)(a1 + 132) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_195;
            case 0xFu:
              *(void *)(a1 + 156) |= 0x40000000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_150;
              }
              *(_DWORD *)(a1 + 140) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_195;
            case 0x10u:
              *(void *)(a1 + 156) |= 0x20000000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_150;
              }
              *(_DWORD *)(a1 + 136) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_195;
            case 0x11u:
              *(void *)(a1 + 156) |= 0x80uLL;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v67 = 0;
                unsigned int v68 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_216;
                  }
                  unint64_t v69 = v33++;
                  char v70 = *(unsigned char *)(v34 + v69);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v70 & 0x7F) << v67;
                  if ((v70 & 0x80) == 0) {
                    break;
                  }
                  v67 += 7;
                  BOOL v14 = v68++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_215:
                    unint64_t v2 = v69 + 1;
                    goto LABEL_216;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_215;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_216;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_216:
              *(_DWORD *)(a1 + 48) = v37;
              goto LABEL_197;
            case 0x12u:
              *(void *)(a1 + 156) |= 0x8000000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_150;
              }
              *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_195;
            case 0x13u:
              *(void *)(a1 + 156) |= 0x200000000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v40 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v39 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v40 = v39 != 0;
              }
              *(unsigned char *)(a1 + 152) = v40;
              goto LABEL_197;
            case 0x14u:
              *(void *)(a1 + 156) |= 0x100000000uLL;
              unint64_t v41 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v42 = *(void *)this;
              if (v41 > 0xFFFFFFFFFFFFFFF5 || v41 + 10 > v2)
              {
                char v71 = 0;
                unsigned int v72 = 0;
                uint64_t v45 = 0;
                if (v2 <= v41) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v41)
                  {
                    LODWORD(v45) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_221;
                  }
                  unint64_t v73 = v41++;
                  char v74 = *(unsigned char *)(v42 + v73);
                  *((void *)this + 1) = v41;
                  v45 |= (unint64_t)(v74 & 0x7F) << v71;
                  if ((v74 & 0x80) == 0) {
                    break;
                  }
                  v71 += 7;
                  BOOL v14 = v72++ > 8;
                  if (v14)
                  {
                    LODWORD(v45) = 0;
LABEL_220:
                    unint64_t v2 = v73 + 1;
                    goto LABEL_221;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v45) = 0;
                }
                goto LABEL_220;
              }
              char v43 = 0;
              unsigned int v44 = 0;
              uint64_t v45 = 0;
              do
              {
                unint64_t v2 = v41 + 1;
                *((void *)this + 1) = v41 + 1;
                char v46 = *(unsigned char *)(v42 + v41);
                v45 |= (unint64_t)(v46 & 0x7F) << v43;
                if ((v46 & 0x80) == 0) {
                  goto LABEL_221;
                }
                v43 += 7;
                unint64_t v41 = v2;
                BOOL v14 = v44++ > 8;
              }
              while (!v14);
              LODWORD(v45) = 0;
LABEL_221:
              *(_DWORD *)(a1 + 148) = v45;
              goto LABEL_197;
            case 0x15u:
              *(void *)(a1 + 156) |= 0x80000000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_150;
              }
              *(_DWORD *)(a1 + 144) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_195;
            case 0x16u:
              *(void *)(a1 + 156) |= 0x400uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_150;
              }
              *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_195;
            case 0x17u:
              *(void *)(a1 + 156) |= 0x800uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_150;
              }
              *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_195;
            case 0x18u:
              *(void *)(a1 + 156) |= 0x1000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_150;
              }
              *(_DWORD *)(a1 + 68) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_195;
            case 0x19u:
              *(void *)(a1 + 156) |= 0x400000000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v48 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v47 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v48 = v47 != 0;
              }
              *(unsigned char *)(a1 + 153) = v48;
              goto LABEL_197;
            case 0x1Au:
              *(void *)(a1 + 156) |= 0x800000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_150;
              }
              *(_DWORD *)(a1 + 112) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_195;
            case 0x1Bu:
              *(void *)(a1 + 156) |= 0x400000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_150;
              }
              *(_DWORD *)(a1 + 108) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_195;
            case 0x1Cu:
              *(void *)(a1 + 156) |= 0x1000000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_150;
              }
              *(_DWORD *)(a1 + 116) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_195;
            case 0x1Du:
              *(void *)(a1 + 156) |= 0x200000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_150;
              }
              *(_DWORD *)(a1 + 104) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_195;
            case 0x1Eu:
              *(void *)(a1 + 156) |= 0x1000000000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v50 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v49 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v50 = v49 != 0;
              }
              *(unsigned char *)(a1 + 155) = v50;
              goto LABEL_197;
            case 0x1Fu:
              *(void *)(a1 + 156) |= 0x100000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_150;
              }
              *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_195;
            case 0x20u:
              *(void *)(a1 + 156) |= 0x2000000uLL;
              unint64_t v51 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v52 = *(void *)this;
              if (v51 > 0xFFFFFFFFFFFFFFF5 || v51 + 10 > v2)
              {
                char v75 = 0;
                unsigned int v76 = 0;
                uint64_t v55 = 0;
                if (v2 <= v51) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v51)
                  {
                    LODWORD(v55) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_226;
                  }
                  unint64_t v77 = v51++;
                  char v78 = *(unsigned char *)(v52 + v77);
                  *((void *)this + 1) = v51;
                  v55 |= (unint64_t)(v78 & 0x7F) << v75;
                  if ((v78 & 0x80) == 0) {
                    break;
                  }
                  v75 += 7;
                  BOOL v14 = v76++ > 8;
                  if (v14)
                  {
                    LODWORD(v55) = 0;
LABEL_225:
                    unint64_t v2 = v77 + 1;
                    goto LABEL_226;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v55) = 0;
                }
                goto LABEL_225;
              }
              char v53 = 0;
              unsigned int v54 = 0;
              uint64_t v55 = 0;
              do
              {
                unint64_t v2 = v51 + 1;
                *((void *)this + 1) = v51 + 1;
                char v56 = *(unsigned char *)(v52 + v51);
                v55 |= (unint64_t)(v56 & 0x7F) << v53;
                if ((v56 & 0x80) == 0) {
                  goto LABEL_226;
                }
                v53 += 7;
                unint64_t v51 = v2;
                BOOL v14 = v54++ > 8;
              }
              while (!v14);
              LODWORD(v55) = 0;
LABEL_226:
              *(_DWORD *)(a1 + 120) = v55;
LABEL_197:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 0x21u:
              *(void *)(a1 + 156) |= 0x200uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_150;
              }
              *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_195;
            case 0x22u:
              *(void *)(a1 + 156) |= 0x100uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_150;
              }
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_195;
            case 0x23u:
              *(void *)(a1 + 156) |= 0x800000000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v58 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v57 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v58 = v57 != 0;
              }
              *(unsigned char *)(a1 + 154) = v58;
              goto LABEL_197;
            case 0x24u:
              *(void *)(a1 + 156) |= 0x40000uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_150;
              }
              *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_195;
            case 0x25u:
              *(void *)(a1 + 156) |= 8uLL;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
LABEL_195:
                unint64_t v2 = *((void *)this + 1) + 4;
LABEL_196:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_150:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_197;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_197;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B1CEC0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(result + 156);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    uint64_t v4 = *(void *)(v3 + 156);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_41;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 2) == 0)
  {
LABEL_4:
    if ((v4 & 0x40) == 0) {
      goto LABEL_5;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x40) == 0)
  {
LABEL_5:
    if ((v4 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44));
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x20) == 0)
  {
LABEL_6:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x20000) == 0)
  {
LABEL_7:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 88));
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x2000) == 0)
  {
LABEL_8:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72));
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x10000) == 0)
  {
LABEL_9:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84));
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x80000) == 0)
  {
LABEL_10:
    if ((v4 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 96));
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x10) == 0)
  {
LABEL_11:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36));
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x8000) == 0)
  {
LABEL_12:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80));
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x4000) == 0)
  {
LABEL_13:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76));
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_14:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 124));
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_15:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 132));
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x40000000) == 0)
  {
LABEL_16:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 140));
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_17:
    if ((v4 & 0x80) == 0) {
      goto LABEL_18;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 136));
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x80) == 0)
  {
LABEL_18:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_19:
    if ((v4 & 0x200000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 128));
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x200000000) == 0)
  {
LABEL_20:
    if ((v4 & 0x100000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x100000000) == 0)
  {
LABEL_21:
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x80000000) == 0)
  {
LABEL_22:
    if ((v4 & 0x400) == 0) {
      goto LABEL_23;
    }
    goto LABEL_60;
  }
LABEL_59:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 144));
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x400) == 0)
  {
LABEL_23:
    if ((v4 & 0x800) == 0) {
      goto LABEL_24;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 60));
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x800) == 0)
  {
LABEL_24:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64));
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x1000) == 0)
  {
LABEL_25:
    if ((v4 & 0x400000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 68));
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x400000000) == 0)
  {
LABEL_26:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_64;
  }
LABEL_63:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x800000) == 0)
  {
LABEL_27:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_65;
  }
LABEL_64:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 112));
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x400000) == 0)
  {
LABEL_28:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_66;
  }
LABEL_65:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 108));
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_29:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_67;
  }
LABEL_66:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 116));
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x200000) == 0)
  {
LABEL_30:
    if ((v4 & 0x1000000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_68;
  }
LABEL_67:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 104));
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x1000000000) == 0)
  {
LABEL_31:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_69;
  }
LABEL_68:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x100000) == 0)
  {
LABEL_32:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_70;
  }
LABEL_69:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 100));
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_33:
    if ((v4 & 0x200) == 0) {
      goto LABEL_34;
    }
    goto LABEL_71;
  }
LABEL_70:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x200) == 0)
  {
LABEL_34:
    if ((v4 & 0x100) == 0) {
      goto LABEL_35;
    }
    goto LABEL_72;
  }
LABEL_71:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56));
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x100) == 0)
  {
LABEL_35:
    if ((v4 & 0x800000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_73;
  }
LABEL_72:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x800000000) == 0)
  {
LABEL_36:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_37;
    }
LABEL_74:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 92));
    if ((*(void *)(v3 + 156) & 8) == 0) {
      return result;
    }
    goto LABEL_75;
  }
LABEL_73:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x40000) != 0) {
    goto LABEL_74;
  }
LABEL_37:
  if ((v4 & 8) == 0) {
    return result;
  }
LABEL_75:
  float v5 = *(float *)(v3 + 32);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227B1D304(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC1FA50;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_227B1D32C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B1D364(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC1FA50;
  *(_DWORD *)(result + 20) = 0;
  if (*(unsigned char *)(a2 + 20))
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 20) = 1;
    *(void *)(result + 8) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 20) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
LABEL_5:
    char v4 = *(unsigned char *)(a2 + 16);
    *(unsigned char *)(result + 20) = v2;
    *(unsigned char *)(result + 16) = v4;
  }
  return result;
}

uint64_t sub_227B1D3C8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "gyroOn");
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if (v5) {
    PB::TextFormatter::format(this, "timestamp");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B1D444(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v2 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
        if (v2 >= v3)
        {
          BOOL v27 = 0;
          *((unsigned char *)this + 24) = 1;
        }
        else
        {
          int v26 = *(unsigned __int8 *)(*(void *)this + v2++);
          *((void *)this + 1) = v2;
          BOOL v27 = v26 != 0;
        }
        *(unsigned char *)(a1 + 16) = v27;
      }
      else if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v20 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
        uint64_t v21 = *(void *)this;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v3)
        {
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v24 = 0;
          if (v3 <= v20) {
            unint64_t v2 = *((void *)this + 1);
          }
          else {
            unint64_t v2 = *((void *)this + 2);
          }
          while (1)
          {
            if (v2 == v20)
            {
              uint64_t v24 = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_48;
            }
            unint64_t v31 = v20++;
            char v32 = *(unsigned char *)(v21 + v31);
            *((void *)this + 1) = v20;
            v24 |= (unint64_t)(v32 & 0x7F) << v29;
            if ((v32 & 0x80) == 0) {
              break;
            }
            v29 += 7;
            BOOL v14 = v30++ > 8;
            if (v14)
            {
              uint64_t v24 = 0;
              goto LABEL_47;
            }
          }
          if (*((unsigned char *)this + 24)) {
            uint64_t v24 = 0;
          }
LABEL_47:
          unint64_t v2 = v31 + 1;
        }
        else
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          while (1)
          {
            unint64_t v2 = v20 + 1;
            *((void *)this + 1) = v20 + 1;
            char v25 = *(unsigned char *)(v21 + v20);
            v24 |= (unint64_t)(v25 & 0x7F) << v22;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v22 += 7;
            unint64_t v20 = v2;
            BOOL v14 = v23++ > 8;
            if (v14)
            {
              uint64_t v24 = 0;
              break;
            }
          }
        }
LABEL_48:
        *(void *)(a1 + 8) = v24;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B1D6C8(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    return PB::Writer::write(this);
  }
  return result;
}

uint64_t sub_227B1D734(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC1FA88;
  *(_DWORD *)(result + 52) = 0;
  return result;
}

void sub_227B1D75C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B1D794(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC1FA88;
  *(_DWORD *)(result + 52) = 0;
  __int16 v2 = *(_WORD *)(a2 + 52);
  if ((v2 & 2) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 16);
    __int16 v3 = 2;
    *(_WORD *)(result + 52) = 2;
    *(void *)(result + 16) = v4;
    __int16 v2 = *(_WORD *)(a2 + 52);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 4) != 0)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 24);
    v3 |= 4u;
    *(_WORD *)(result + 52) = v3;
    *(void *)(result + 24) = v5;
    __int16 v2 = *(_WORD *)(a2 + 52);
  }
LABEL_6:
  if (v2)
  {
    uint64_t v6 = *(void *)(a2 + 8);
    v3 |= 1u;
    *(_WORD *)(result + 52) = v3;
    *(void *)(result + 8) = v6;
    __int16 v2 = *(_WORD *)(a2 + 52);
    if ((v2 & 8) == 0)
    {
LABEL_8:
      if ((v2 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_20;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 32);
  v3 |= 8u;
  *(_WORD *)(result + 52) = v3;
  *(_DWORD *)(result + 32) = v7;
  __int16 v2 = *(_WORD *)(a2 + 52);
  if ((v2 & 0x20) == 0)
  {
LABEL_9:
    if ((v2 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  int v8 = *(_DWORD *)(a2 + 40);
  v3 |= 0x20u;
  *(_WORD *)(result + 52) = v3;
  *(_DWORD *)(result + 40) = v8;
  __int16 v2 = *(_WORD *)(a2 + 52);
  if ((v2 & 0x10) == 0)
  {
LABEL_10:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  int v9 = *(_DWORD *)(a2 + 36);
  v3 |= 0x10u;
  *(_WORD *)(result + 52) = v3;
  *(_DWORD *)(result + 36) = v9;
  __int16 v2 = *(_WORD *)(a2 + 52);
  if ((v2 & 0x1000) == 0)
  {
LABEL_11:
    if ((v2 & 0x40) == 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_22:
  char v10 = *(unsigned char *)(a2 + 50);
  v3 |= 0x1000u;
  *(_WORD *)(result + 52) = v3;
  *(unsigned char *)(result + 50) = v10;
  __int16 v2 = *(_WORD *)(a2 + 52);
  if ((v2 & 0x40) == 0)
  {
LABEL_12:
    if ((v2 & 0x80) == 0) {
      goto LABEL_13;
    }
    goto LABEL_24;
  }
LABEL_23:
  char v11 = *(unsigned char *)(a2 + 44);
  v3 |= 0x40u;
  *(_WORD *)(result + 52) = v3;
  *(unsigned char *)(result + 44) = v11;
  __int16 v2 = *(_WORD *)(a2 + 52);
  if ((v2 & 0x80) == 0)
  {
LABEL_13:
    if ((v2 & 0x100) == 0) {
      goto LABEL_14;
    }
    goto LABEL_25;
  }
LABEL_24:
  char v12 = *(unsigned char *)(a2 + 45);
  v3 |= 0x80u;
  *(_WORD *)(result + 52) = v3;
  *(unsigned char *)(result + 45) = v12;
  __int16 v2 = *(_WORD *)(a2 + 52);
  if ((v2 & 0x100) == 0)
  {
LABEL_14:
    if ((v2 & 0x200) == 0) {
      goto LABEL_15;
    }
    goto LABEL_26;
  }
LABEL_25:
  char v13 = *(unsigned char *)(a2 + 46);
  v3 |= 0x100u;
  *(_WORD *)(result + 52) = v3;
  *(unsigned char *)(result + 46) = v13;
  __int16 v2 = *(_WORD *)(a2 + 52);
  if ((v2 & 0x200) == 0)
  {
LABEL_15:
    if ((v2 & 0x400) == 0) {
      goto LABEL_16;
    }
    goto LABEL_27;
  }
LABEL_26:
  char v14 = *(unsigned char *)(a2 + 47);
  v3 |= 0x200u;
  *(_WORD *)(result + 52) = v3;
  *(unsigned char *)(result + 47) = v14;
  __int16 v2 = *(_WORD *)(a2 + 52);
  if ((v2 & 0x400) == 0)
  {
LABEL_16:
    if ((v2 & 0x800) == 0) {
      return result;
    }
LABEL_28:
    char v16 = *(unsigned char *)(a2 + 49);
    *(_WORD *)(result + 52) = v3 | 0x800;
    *(unsigned char *)(result + 49) = v16;
    return result;
  }
LABEL_27:
  char v15 = *(unsigned char *)(a2 + 48);
  v3 |= 0x400u;
  *(_WORD *)(result + 52) = v3;
  *(unsigned char *)(result + 48) = v15;
  if ((*(_WORD *)(a2 + 52) & 0x800) != 0) {
    goto LABEL_28;
  }
  return result;
}

uint64_t sub_227B1D92C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 0x40) != 0)
  {
    PB::TextFormatter::format(this, "consideredAlert");
    __int16 v5 = *(_WORD *)(a1 + 52);
    if ((v5 & 0x80) == 0)
    {
LABEL_3:
      if ((v5 & 0x100) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v5 & 0x80) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "consideredRecovery");
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 0x100) == 0)
  {
LABEL_4:
    if ((v5 & 0x200) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "consideredSOS");
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 0x200) == 0)
  {
LABEL_5:
    if ((v5 & 0x400) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "droppedAlert");
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 0x400) == 0)
  {
LABEL_6:
    if ((v5 & 0x800) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "droppedRecovery");
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 0x800) == 0)
  {
LABEL_7:
    if ((v5 & 1) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "droppedSOS");
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 1) == 0)
  {
LABEL_8:
    if ((v5 & 8) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "fallTime");
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 8) == 0)
  {
LABEL_9:
    if ((v5 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "impactOperatingMode");
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 2) == 0)
  {
LABEL_10:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "iostime", *(double *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 0x1000) == 0)
  {
LABEL_11:
    if ((v5 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "isOtherStateMachineProcessingNearbyImpact");
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 0x10) == 0)
  {
LABEL_12:
    if ((v5 & 0x20) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "refereeCyclingStateDecision");
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 0x20) == 0)
  {
LABEL_13:
    if ((v5 & 4) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_29:
  PB::TextFormatter::format(this, "refereeOperatingMode");
  if ((*(_WORD *)(a1 + 52) & 4) != 0) {
LABEL_14:
  }
    PB::TextFormatter::format(this, "sensorTime");
LABEL_15:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B1DB10(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 52) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_151;
            case 2u:
              *(_WORD *)(a1 + 52) |= 4u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v65 = 0;
                unsigned int v66 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_130;
                  }
                  unint64_t v67 = v20++;
                  char v68 = *(unsigned char *)(v21 + v67);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v68 & 0x7F) << v65;
                  if ((v68 & 0x80) == 0) {
                    break;
                  }
                  v65 += 7;
                  BOOL v14 = v66++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
LABEL_129:
                    unint64_t v2 = v67 + 1;
                    goto LABEL_130;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
                goto LABEL_129;
              }
              char v22 = 0;
              unsigned int v23 = 0;
              uint64_t v24 = 0;
              do
              {
                unint64_t v2 = v20 + 1;
                *((void *)this + 1) = v20 + 1;
                char v25 = *(unsigned char *)(v21 + v20);
                v24 |= (unint64_t)(v25 & 0x7F) << v22;
                if ((v25 & 0x80) == 0) {
                  goto LABEL_130;
                }
                v22 += 7;
                unint64_t v20 = v2;
                BOOL v14 = v23++ > 8;
              }
              while (!v14);
              uint64_t v24 = 0;
LABEL_130:
              *(void *)(a1 + 24) = v24;
              goto LABEL_151;
            case 3u:
              *(_WORD *)(a1 + 52) |= 1u;
              unint64_t v26 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v27 = *(void *)this;
              if (v26 > 0xFFFFFFFFFFFFFFF5 || v26 + 10 > v2)
              {
                char v69 = 0;
                unsigned int v70 = 0;
                uint64_t v30 = 0;
                if (v2 <= v26) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v26)
                  {
                    uint64_t v30 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_135;
                  }
                  unint64_t v71 = v26++;
                  char v72 = *(unsigned char *)(v27 + v71);
                  *((void *)this + 1) = v26;
                  v30 |= (unint64_t)(v72 & 0x7F) << v69;
                  if ((v72 & 0x80) == 0) {
                    break;
                  }
                  v69 += 7;
                  BOOL v14 = v70++ > 8;
                  if (v14)
                  {
                    uint64_t v30 = 0;
LABEL_134:
                    unint64_t v2 = v71 + 1;
                    goto LABEL_135;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v30 = 0;
                }
                goto LABEL_134;
              }
              char v28 = 0;
              unsigned int v29 = 0;
              uint64_t v30 = 0;
              do
              {
                unint64_t v2 = v26 + 1;
                *((void *)this + 1) = v26 + 1;
                char v31 = *(unsigned char *)(v27 + v26);
                v30 |= (unint64_t)(v31 & 0x7F) << v28;
                if ((v31 & 0x80) == 0) {
                  goto LABEL_135;
                }
                v28 += 7;
                unint64_t v26 = v2;
                BOOL v14 = v29++ > 8;
              }
              while (!v14);
              uint64_t v30 = 0;
LABEL_135:
              *(void *)(a1 + 8) = v30;
              goto LABEL_151;
            case 4u:
              *(_WORD *)(a1 + 52) |= 8u;
              unint64_t v32 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v33 = *(void *)this;
              if (v32 > 0xFFFFFFFFFFFFFFF5 || v32 + 10 > v2)
              {
                char v73 = 0;
                unsigned int v74 = 0;
                uint64_t v36 = 0;
                if (v2 <= v32) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v32)
                  {
                    LODWORD(v36) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_140;
                  }
                  unint64_t v75 = v32++;
                  char v76 = *(unsigned char *)(v33 + v75);
                  *((void *)this + 1) = v32;
                  v36 |= (unint64_t)(v76 & 0x7F) << v73;
                  if ((v76 & 0x80) == 0) {
                    break;
                  }
                  v73 += 7;
                  BOOL v14 = v74++ > 8;
                  if (v14)
                  {
                    LODWORD(v36) = 0;
LABEL_139:
                    unint64_t v2 = v75 + 1;
                    goto LABEL_140;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v36) = 0;
                }
                goto LABEL_139;
              }
              char v34 = 0;
              unsigned int v35 = 0;
              uint64_t v36 = 0;
              do
              {
                unint64_t v2 = v32 + 1;
                *((void *)this + 1) = v32 + 1;
                char v37 = *(unsigned char *)(v33 + v32);
                v36 |= (unint64_t)(v37 & 0x7F) << v34;
                if ((v37 & 0x80) == 0) {
                  goto LABEL_140;
                }
                v34 += 7;
                unint64_t v32 = v2;
                BOOL v14 = v35++ > 8;
              }
              while (!v14);
              LODWORD(v36) = 0;
LABEL_140:
              *(_DWORD *)(a1 + 32) = v36;
              goto LABEL_151;
            case 5u:
              *(_WORD *)(a1 + 52) |= 0x20u;
              unint64_t v38 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v39 = *(void *)this;
              if (v38 > 0xFFFFFFFFFFFFFFF5 || v38 + 10 > v2)
              {
                char v77 = 0;
                unsigned int v78 = 0;
                uint64_t v42 = 0;
                if (v2 <= v38) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v38)
                  {
                    LODWORD(v42) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_145;
                  }
                  unint64_t v79 = v38++;
                  char v80 = *(unsigned char *)(v39 + v79);
                  *((void *)this + 1) = v38;
                  v42 |= (unint64_t)(v80 & 0x7F) << v77;
                  if ((v80 & 0x80) == 0) {
                    break;
                  }
                  v77 += 7;
                  BOOL v14 = v78++ > 8;
                  if (v14)
                  {
                    LODWORD(v42) = 0;
LABEL_144:
                    unint64_t v2 = v79 + 1;
                    goto LABEL_145;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v42) = 0;
                }
                goto LABEL_144;
              }
              char v40 = 0;
              unsigned int v41 = 0;
              uint64_t v42 = 0;
              do
              {
                unint64_t v2 = v38 + 1;
                *((void *)this + 1) = v38 + 1;
                char v43 = *(unsigned char *)(v39 + v38);
                v42 |= (unint64_t)(v43 & 0x7F) << v40;
                if ((v43 & 0x80) == 0) {
                  goto LABEL_145;
                }
                v40 += 7;
                unint64_t v38 = v2;
                BOOL v14 = v41++ > 8;
              }
              while (!v14);
              LODWORD(v42) = 0;
LABEL_145:
              *(_DWORD *)(a1 + 40) = v42;
              goto LABEL_151;
            case 6u:
              *(_WORD *)(a1 + 52) |= 0x10u;
              unint64_t v44 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v45 = *(void *)this;
              if (v44 > 0xFFFFFFFFFFFFFFF5 || v44 + 10 > v2)
              {
                char v81 = 0;
                unsigned int v82 = 0;
                uint64_t v48 = 0;
                if (v2 <= v44) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v44)
                  {
                    LODWORD(v48) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_150;
                  }
                  unint64_t v83 = v44++;
                  char v84 = *(unsigned char *)(v45 + v83);
                  *((void *)this + 1) = v44;
                  v48 |= (unint64_t)(v84 & 0x7F) << v81;
                  if ((v84 & 0x80) == 0) {
                    break;
                  }
                  v81 += 7;
                  BOOL v14 = v82++ > 8;
                  if (v14)
                  {
                    LODWORD(v48) = 0;
LABEL_149:
                    unint64_t v2 = v83 + 1;
                    goto LABEL_150;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v48) = 0;
                }
                goto LABEL_149;
              }
              char v46 = 0;
              unsigned int v47 = 0;
              uint64_t v48 = 0;
              do
              {
                unint64_t v2 = v44 + 1;
                *((void *)this + 1) = v44 + 1;
                char v49 = *(unsigned char *)(v45 + v44);
                v48 |= (unint64_t)(v49 & 0x7F) << v46;
                if ((v49 & 0x80) == 0) {
                  goto LABEL_150;
                }
                v46 += 7;
                unint64_t v44 = v2;
                BOOL v14 = v47++ > 8;
              }
              while (!v14);
              LODWORD(v48) = 0;
LABEL_150:
              *(_DWORD *)(a1 + 36) = v48;
LABEL_151:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 7u:
              *(_WORD *)(a1 + 52) |= 0x1000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v51 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v50 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v51 = v50 != 0;
              }
              *(unsigned char *)(a1 + 50) = v51;
              goto LABEL_151;
            case 0xBu:
              *(_WORD *)(a1 + 52) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v54 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v53 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v54 = v53 != 0;
              }
              *(unsigned char *)(a1 + 44) = v54;
              goto LABEL_151;
            case 0xCu:
              *(_WORD *)(a1 + 52) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v56 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v55 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v56 = v55 != 0;
              }
              *(unsigned char *)(a1 + 45) = v56;
              goto LABEL_151;
            case 0xDu:
              *(_WORD *)(a1 + 52) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v58 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v57 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v58 = v57 != 0;
              }
              *(unsigned char *)(a1 + 46) = v58;
              goto LABEL_151;
            case 0x15u:
              *(_WORD *)(a1 + 52) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v60 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v59 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v60 = v59 != 0;
              }
              *(unsigned char *)(a1 + 47) = v60;
              goto LABEL_151;
            case 0x16u:
              *(_WORD *)(a1 + 52) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v62 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v61 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v62 = v61 != 0;
              }
              *(unsigned char *)(a1 + 48) = v62;
              goto LABEL_151;
            case 0x17u:
              *(_WORD *)(a1 + 52) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v64 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v63 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v64 = v63 != 0;
              }
              *(unsigned char *)(a1 + 49) = v64;
              goto LABEL_151;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_151;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B1E3A4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 52);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 16));
    __int16 v4 = *(_WORD *)(v3 + 52);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 52);
  if ((v4 & 1) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 52);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 52);
  if ((v4 & 0x20) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 52);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 52);
  if ((v4 & 0x1000) == 0)
  {
LABEL_8:
    if ((v4 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 52);
  if ((v4 & 0x40) == 0)
  {
LABEL_9:
    if ((v4 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 52);
  if ((v4 & 0x80) == 0)
  {
LABEL_10:
    if ((v4 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 52);
  if ((v4 & 0x100) == 0)
  {
LABEL_11:
    if ((v4 & 0x200) == 0) {
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 52);
  if ((v4 & 0x200) == 0)
  {
LABEL_12:
    if ((v4 & 0x400) == 0) {
      goto LABEL_13;
    }
LABEL_26:
    uint64_t result = PB::Writer::write(this);
    if ((*(_WORD *)(v3 + 52) & 0x800) == 0) {
      return result;
    }
    goto LABEL_27;
  }
LABEL_25:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 52);
  if ((v4 & 0x400) != 0) {
    goto LABEL_26;
  }
LABEL_13:
  if ((v4 & 0x800) == 0) {
    return result;
  }
LABEL_27:

  return PB::Writer::write(this);
}

void *sub_227B1E548(void *result)
{
  *uint64_t result = &unk_26DC1FAC0;
  *(void *)((char *)result + 364) = 0;
  return result;
}

void sub_227B1E574(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227B1E5AC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC1FAC0;
  unint64_t v2 = (uint64_t *)(a1 + 364);
  *(void *)(a1 + 364) = 0;
  uint64_t v3 = (uint64_t *)(a2 + 364);
  uint64_t v4 = *(void *)(a2 + 364);
  if ((v4 & 0x40000000) != 0)
  {
    uint64_t v6 = *(void *)(a2 + 248);
    uint64_t v5 = 0x40000000;
    *unint64_t v2 = 0x40000000;
    *(void *)(a1 + 248) = v6;
    uint64_t v4 = *v3;
    if ((*v3 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v5 = 0;
  if ((v4 & 0x80000000) != 0)
  {
LABEL_5:
    uint64_t v7 = *(void *)(a2 + 256);
    v5 |= 0x80000000uLL;
    *unint64_t v2 = v5;
    *(void *)(a1 + 256) = v7;
    uint64_t v4 = *v3;
  }
LABEL_6:
  if ((v4 & 0x80000) != 0)
  {
    uint64_t v8 = *(void *)(a2 + 160);
    v5 |= 0x80000uLL;
    *unint64_t v2 = v5;
    *(void *)(a1 + 160) = v8;
    uint64_t v4 = *v3;
    if ((*v3 & 0x100000) == 0)
    {
LABEL_8:
      if ((v4 & 0x200000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_52;
    }
  }
  else if ((v4 & 0x100000) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(a2 + 168);
  v5 |= 0x100000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 168) = v9;
  uint64_t v4 = *v3;
  if ((*v3 & 0x200000) == 0)
  {
LABEL_9:
    if ((v4 & 0x8000000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t v10 = *(void *)(a2 + 176);
  v5 |= 0x200000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 176) = v10;
  uint64_t v4 = *v3;
  if ((*v3 & 0x8000000000) == 0)
  {
LABEL_10:
    if ((v4 & 0x40000000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t v11 = *(void *)(a2 + 320);
  v5 |= 0x8000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 320) = v11;
  uint64_t v4 = *v3;
  if ((*v3 & 0x40000000000) == 0)
  {
LABEL_11:
    if ((v4 & 0x10000000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t v12 = *(void *)(a2 + 344);
  v5 |= 0x40000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 344) = v12;
  uint64_t v4 = *v3;
  if ((*v3 & 0x10000000000) == 0)
  {
LABEL_12:
    if ((v4 & 0x20000000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t v13 = *(void *)(a2 + 328);
  v5 |= 0x10000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 328) = v13;
  uint64_t v4 = *v3;
  if ((*v3 & 0x20000000000) == 0)
  {
LABEL_13:
    if ((v4 & 0x80000000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t v14 = *(void *)(a2 + 336);
  v5 |= 0x20000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 336) = v14;
  uint64_t v4 = *v3;
  if ((*v3 & 0x80000000000) == 0)
  {
LABEL_14:
    if ((v4 & 0x100000000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t v15 = *(void *)(a2 + 352);
  v5 |= 0x80000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 352) = v15;
  uint64_t v4 = *v3;
  if ((*v3 & 0x100000000000) == 0)
  {
LABEL_15:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_59;
  }
LABEL_58:
  int v16 = *(_DWORD *)(a2 + 360);
  v5 |= 0x100000000000uLL;
  *unint64_t v2 = v5;
  *(_DWORD *)(a1 + 360) = v16;
  uint64_t v4 = *v3;
  if ((*v3 & 0x1000000) == 0)
  {
LABEL_16:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_60;
  }
LABEL_59:
  uint64_t v17 = *(void *)(a2 + 200);
  v5 |= 0x1000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 200) = v17;
  uint64_t v4 = *v3;
  if ((*v3 & 0x8000000) == 0)
  {
LABEL_17:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t v18 = *(void *)(a2 + 224);
  v5 |= 0x8000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 224) = v18;
  uint64_t v4 = *v3;
  if ((*v3 & 0x2000000) == 0)
  {
LABEL_18:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t v19 = *(void *)(a2 + 208);
  v5 |= 0x2000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 208) = v19;
  uint64_t v4 = *v3;
  if ((*v3 & 0x4000000) == 0)
  {
LABEL_19:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t v20 = *(void *)(a2 + 216);
  v5 |= 0x4000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 216) = v20;
  uint64_t v4 = *v3;
  if ((*v3 & 0x400000) == 0)
  {
LABEL_20:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_64;
  }
LABEL_63:
  uint64_t v21 = *(void *)(a2 + 184);
  v5 |= 0x400000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 184) = v21;
  uint64_t v4 = *v3;
  if ((*v3 & 0x800000) == 0)
  {
LABEL_21:
    if ((v4 & 0x20) == 0) {
      goto LABEL_22;
    }
    goto LABEL_65;
  }
LABEL_64:
  uint64_t v22 = *(void *)(a2 + 192);
  v5 |= 0x800000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 192) = v22;
  uint64_t v4 = *v3;
  if ((*v3 & 0x20) == 0)
  {
LABEL_22:
    if ((v4 & 8) == 0) {
      goto LABEL_23;
    }
    goto LABEL_66;
  }
LABEL_65:
  uint64_t v23 = *(void *)(a2 + 48);
  v5 |= 0x20uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 48) = v23;
  uint64_t v4 = *v3;
  if ((*v3 & 8) == 0)
  {
LABEL_23:
    if ((v4 & 1) == 0) {
      goto LABEL_24;
    }
    goto LABEL_67;
  }
LABEL_66:
  uint64_t v24 = *(void *)(a2 + 32);
  v5 |= 8uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 32) = v24;
  uint64_t v4 = *v3;
  if ((*v3 & 1) == 0)
  {
LABEL_24:
    if ((v4 & 0x40) == 0) {
      goto LABEL_25;
    }
    goto LABEL_68;
  }
LABEL_67:
  uint64_t v25 = *(void *)(a2 + 8);
  v5 |= 1uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 8) = v25;
  uint64_t v4 = *v3;
  if ((*v3 & 0x40) == 0)
  {
LABEL_25:
    if ((v4 & 0x100) == 0) {
      goto LABEL_26;
    }
    goto LABEL_69;
  }
LABEL_68:
  uint64_t v26 = *(void *)(a2 + 56);
  v5 |= 0x40uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 56) = v26;
  uint64_t v4 = *v3;
  if ((*v3 & 0x100) == 0)
  {
LABEL_26:
    if ((v4 & 0x10) == 0) {
      goto LABEL_27;
    }
    goto LABEL_70;
  }
LABEL_69:
  uint64_t v27 = *(void *)(a2 + 72);
  v5 |= 0x100uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 72) = v27;
  uint64_t v4 = *v3;
  if ((*v3 & 0x10) == 0)
  {
LABEL_27:
    if ((v4 & 0x200) == 0) {
      goto LABEL_28;
    }
    goto LABEL_71;
  }
LABEL_70:
  uint64_t v28 = *(void *)(a2 + 40);
  v5 |= 0x10uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 40) = v28;
  uint64_t v4 = *v3;
  if ((*v3 & 0x200) == 0)
  {
LABEL_28:
    if ((v4 & 0x400) == 0) {
      goto LABEL_29;
    }
    goto LABEL_72;
  }
LABEL_71:
  uint64_t v29 = *(void *)(a2 + 80);
  v5 |= 0x200uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 80) = v29;
  uint64_t v4 = *v3;
  if ((*v3 & 0x400) == 0)
  {
LABEL_29:
    if ((v4 & 0x800) == 0) {
      goto LABEL_30;
    }
    goto LABEL_73;
  }
LABEL_72:
  uint64_t v30 = *(void *)(a2 + 88);
  v5 |= 0x400uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 88) = v30;
  uint64_t v4 = *v3;
  if ((*v3 & 0x800) == 0)
  {
LABEL_30:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_74;
  }
LABEL_73:
  uint64_t v31 = *(void *)(a2 + 96);
  v5 |= 0x800uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 96) = v31;
  uint64_t v4 = *v3;
  if ((*v3 & 0x4000) == 0)
  {
LABEL_31:
    if ((v4 & 2) == 0) {
      goto LABEL_32;
    }
    goto LABEL_75;
  }
LABEL_74:
  uint64_t v32 = *(void *)(a2 + 120);
  v5 |= 0x4000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 120) = v32;
  uint64_t v4 = *v3;
  if ((*v3 & 2) == 0)
  {
LABEL_32:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_76;
  }
LABEL_75:
  uint64_t v33 = *(void *)(a2 + 16);
  v5 |= 2uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 16) = v33;
  uint64_t v4 = *v3;
  if ((*v3 & 0x8000) == 0)
  {
LABEL_33:
    if ((v4 & 0x800000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_77;
  }
LABEL_76:
  uint64_t v34 = *(void *)(a2 + 128);
  v5 |= 0x8000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 128) = v34;
  uint64_t v4 = *v3;
  if ((*v3 & 0x800000000) == 0)
  {
LABEL_34:
    if ((v4 & 0x400000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_78;
  }
LABEL_77:
  uint64_t v35 = *(void *)(a2 + 288);
  v5 |= 0x800000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 288) = v35;
  uint64_t v4 = *v3;
  if ((*v3 & 0x400000000) == 0)
  {
LABEL_35:
    if ((v4 & 0x200000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_79;
  }
LABEL_78:
  uint64_t v36 = *(void *)(a2 + 280);
  v5 |= 0x400000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 280) = v36;
  uint64_t v4 = *v3;
  if ((*v3 & 0x200000000) == 0)
  {
LABEL_36:
    if ((v4 & 0x100000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_80;
  }
LABEL_79:
  uint64_t v37 = *(void *)(a2 + 272);
  v5 |= 0x200000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 272) = v37;
  uint64_t v4 = *v3;
  if ((*v3 & 0x100000000) == 0)
  {
LABEL_37:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_81;
  }
LABEL_80:
  uint64_t v38 = *(void *)(a2 + 264);
  v5 |= 0x100000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 264) = v38;
  uint64_t v4 = *v3;
  if ((*v3 & 0x20000000) == 0)
  {
LABEL_38:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_82;
  }
LABEL_81:
  uint64_t v39 = *(void *)(a2 + 240);
  v5 |= 0x20000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 240) = v39;
  uint64_t v4 = *v3;
  if ((*v3 & 0x10000000) == 0)
  {
LABEL_39:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_83;
  }
LABEL_82:
  uint64_t v40 = *(void *)(a2 + 232);
  v5 |= 0x10000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 232) = v40;
  uint64_t v4 = *v3;
  if ((*v3 & 0x2000) == 0)
  {
LABEL_40:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_84;
  }
LABEL_83:
  uint64_t v41 = *(void *)(a2 + 112);
  v5 |= 0x2000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 112) = v41;
  uint64_t v4 = *v3;
  if ((*v3 & 0x10000) == 0)
  {
LABEL_41:
    if ((v4 & 4) == 0) {
      goto LABEL_42;
    }
    goto LABEL_85;
  }
LABEL_84:
  uint64_t v42 = *(void *)(a2 + 136);
  v5 |= 0x10000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 136) = v42;
  uint64_t v4 = *v3;
  if ((*v3 & 4) == 0)
  {
LABEL_42:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_86;
  }
LABEL_85:
  uint64_t v43 = *(void *)(a2 + 24);
  v5 |= 4uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 24) = v43;
  uint64_t v4 = *v3;
  if ((*v3 & 0x40000) == 0)
  {
LABEL_43:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_87;
  }
LABEL_86:
  uint64_t v44 = *(void *)(a2 + 152);
  v5 |= 0x40000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 152) = v44;
  uint64_t v4 = *v3;
  if ((*v3 & 0x20000) == 0)
  {
LABEL_44:
    if ((v4 & 0x80) == 0) {
      goto LABEL_45;
    }
    goto LABEL_88;
  }
LABEL_87:
  uint64_t v45 = *(void *)(a2 + 144);
  v5 |= 0x20000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 144) = v45;
  uint64_t v4 = *v3;
  if ((*v3 & 0x80) == 0)
  {
LABEL_45:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_89;
  }
LABEL_88:
  uint64_t v46 = *(void *)(a2 + 64);
  v5 |= 0x80uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 64) = v46;
  uint64_t v4 = *v3;
  if ((*v3 & 0x1000) == 0)
  {
LABEL_46:
    if ((v4 & 0x4000000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_90;
  }
LABEL_89:
  uint64_t v47 = *(void *)(a2 + 104);
  v5 |= 0x1000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 104) = v47;
  uint64_t v4 = *v3;
  if ((*v3 & 0x4000000000) == 0)
  {
LABEL_47:
    if ((v4 & 0x1000000000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_91;
  }
LABEL_90:
  uint64_t v48 = *(void *)(a2 + 312);
  v5 |= 0x4000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 312) = v48;
  uint64_t v4 = *v3;
  if ((*v3 & 0x1000000000) == 0)
  {
LABEL_48:
    if ((v4 & 0x2000000000) == 0) {
      return result;
    }
LABEL_92:
    double result = *(double *)(a2 + 304);
    *unint64_t v2 = v5 | 0x2000000000;
    *(double *)(a1 + 304) = result;
    return result;
  }
LABEL_91:
  uint64_t v49 = *(void *)(a2 + 296);
  v5 |= 0x1000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 296) = v49;
  if ((*v3 & 0x2000000000) != 0) {
    goto LABEL_92;
  }
  return result;
}

uint64_t sub_227B1EACC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = (uint64_t *)(a1 + 364);
  uint64_t v6 = *(void *)(a1 + 364);
  if (v6)
  {
    PB::TextFormatter::format(this, "alertCanceledBecauseOfAbsenceOfQuiessence");
    uint64_t v6 = *v5;
    if ((*v5 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_52;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "alertCanceledBecauseOfActive");
  uint64_t v6 = *v5;
  if ((*v5 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_53;
  }
LABEL_52:
  PB::TextFormatter::format(this, "alertCanceledBecauseOfChargerState");
  uint64_t v6 = *v5;
  if ((*v5 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(this, "alertCanceledBecauseOfCyclingPostImpact");
  uint64_t v6 = *v5;
  if ((*v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(this, "alertCanceledBecauseOfDecimatedLowFrequencyFFT");
  uint64_t v6 = *v5;
  if ((*v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_56;
  }
LABEL_55:
  PB::TextFormatter::format(this, "alertCanceledBecauseOfDistanceTraveledPostImpact");
  uint64_t v6 = *v5;
  if ((*v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_57;
  }
LABEL_56:
  PB::TextFormatter::format(this, "alertCanceledBecauseOfHighFrequencyFFT");
  uint64_t v6 = *v5;
  if ((*v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_58;
  }
LABEL_57:
  PB::TextFormatter::format(this, "alertCanceledBecauseOfLockedNoMotionPre");
  uint64_t v6 = *v5;
  if ((*v5 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_59;
  }
LABEL_58:
  PB::TextFormatter::format(this, "alertCanceledBecauseOfLowFrequencyFFT");
  uint64_t v6 = *v5;
  if ((*v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_60;
  }
LABEL_59:
  PB::TextFormatter::format(this, "alertCanceledBecauseOfNumberOfPeaksFFT");
  uint64_t v6 = *v5;
  if ((*v5 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_61;
  }
LABEL_60:
  PB::TextFormatter::format(this, "alertCanceledBecauseOfOffBody");
  uint64_t v6 = *v5;
  if ((*v5 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_62;
  }
LABEL_61:
  PB::TextFormatter::format(this, "alertCanceledBecauseOfRepetitiveMotion");
  uint64_t v6 = *v5;
  if ((*v5 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_63;
  }
LABEL_62:
  PB::TextFormatter::format(this, "alertCanceledBecauseOfRetraction");
  uint64_t v6 = *v5;
  if ((*v5 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_64;
  }
LABEL_63:
  PB::TextFormatter::format(this, "alertCanceledBecauseOfSimilarPeaks");
  uint64_t v6 = *v5;
  if ((*v5 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_65;
  }
LABEL_64:
  PB::TextFormatter::format(this, "alertCanceledBecauseOfStand");
  uint64_t v6 = *v5;
  if ((*v5 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_66;
  }
LABEL_65:
  PB::TextFormatter::format(this, "alertCanceledBecauseOfSteps");
  uint64_t v6 = *v5;
  if ((*v5 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_67;
  }
LABEL_66:
  PB::TextFormatter::format(this, "alertCanceledBecauseOfWristState");
  uint64_t v6 = *v5;
  if ((*v5 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_68;
  }
LABEL_67:
  PB::TextFormatter::format(this, "alertCanceledBecauseOfWristStatePost");
  uint64_t v6 = *v5;
  if ((*v5 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_69;
  }
LABEL_68:
  PB::TextFormatter::format(this, "alertCanceledBecauseOfWristStatePre");
  uint64_t v6 = *v5;
  if ((*v5 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_70;
  }
LABEL_69:
  PB::TextFormatter::format(this, "fallStatsDispatchResetOnAccelSensorTime");
  uint64_t v6 = *v5;
  if ((*v5 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_71;
  }
LABEL_70:
  PB::TextFormatter::format(this, "fallStatsDispatchRestoredOnAccelSensorTime");
  uint64_t v6 = *v5;
  if ((*v5 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_72;
  }
LABEL_71:
  PB::TextFormatter::format(this, "hkWorkoutId");
  uint64_t v6 = *v5;
  if ((*v5 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_73;
  }
LABEL_72:
  PB::TextFormatter::format(this, "impactCanceledBecauseOfExistingAlert");
  uint64_t v6 = *v5;
  if ((*v5 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_74;
  }
LABEL_73:
  PB::TextFormatter::format(this, "impactNotConsideredBecauseOfCyclingImpactThresholds");
  uint64_t v6 = *v5;
  if ((*v5 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_75;
  }
LABEL_74:
  PB::TextFormatter::format(this, "impactNotConsideredBecauseOfMaxAccelNormThreshold");
  uint64_t v6 = *v5;
  if ((*v5 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_76;
  }
LABEL_75:
  PB::TextFormatter::format(this, "impactNotConsideredBecauseOfMultiPeaks");
  uint64_t v6 = *v5;
  if ((*v5 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_77;
  }
LABEL_76:
  PB::TextFormatter::format(this, "impactNotConsideredBecauseOfNaiveBayesClassifier");
  uint64_t v6 = *v5;
  if ((*v5 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_78;
  }
LABEL_77:
  PB::TextFormatter::format(this, "impactNotConsideredBecauseOfOtherHardThresholds");
  uint64_t v6 = *v5;
  if ((*v5 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_79;
  }
LABEL_78:
  PB::TextFormatter::format(this, "leavingImpactBecauseOfNewImpactNewImpact");
  uint64_t v6 = *v5;
  if ((*v5 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x100000000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_80;
  }
LABEL_79:
  PB::TextFormatter::format(this, "leavingImpactBecauseOfNewImpactOldImpact");
  uint64_t v6 = *v5;
  if ((*v5 & 0x100000000000) == 0)
  {
LABEL_32:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_81;
  }
LABEL_80:
  PB::TextFormatter::format(this, "operatingMode");
  uint64_t v6 = *v5;
  if ((*v5 & 0x40000000) == 0)
  {
LABEL_33:
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_82;
  }
LABEL_81:
  PB::TextFormatter::format(this, "skippedFallStatsSensorTime");
  uint64_t v6 = *v5;
  if ((*v5 & 0x80000000) == 0)
  {
LABEL_34:
    if ((v6 & 0x100000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_83;
  }
LABEL_82:
  PB::TextFormatter::format(this, "skippedGyroSensorTime");
  uint64_t v6 = *v5;
  if ((*v5 & 0x100000000) == 0)
  {
LABEL_35:
    if ((v6 & 0x200000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_84;
  }
LABEL_83:
  PB::TextFormatter::format(this, "sosCanceledBecauseOfAbsenceOfLongLie");
  uint64_t v6 = *v5;
  if ((*v5 & 0x200000000) == 0)
  {
LABEL_36:
    if ((v6 & 0x400000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_85;
  }
LABEL_84:
  PB::TextFormatter::format(this, "sosCanceledBecauseOfActive");
  uint64_t v6 = *v5;
  if ((*v5 & 0x400000000) == 0)
  {
LABEL_37:
    if ((v6 & 0x800000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_86;
  }
LABEL_85:
  PB::TextFormatter::format(this, "sosCanceledBecauseOfStand");
  uint64_t v6 = *v5;
  if ((*v5 & 0x800000000) == 0)
  {
LABEL_38:
    if ((v6 & 0x1000000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_87;
  }
LABEL_86:
  PB::TextFormatter::format(this, "sosCanceledBecauseOfSteps");
  uint64_t v6 = *v5;
  if ((*v5 & 0x1000000000) == 0)
  {
LABEL_39:
    if ((v6 & 0x2000000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_88;
  }
LABEL_87:
  PB::TextFormatter::format(this, "sosConsideredFallTimestamp");
  uint64_t v6 = *v5;
  if ((*v5 & 0x2000000000) == 0)
  {
LABEL_40:
    if ((v6 & 0x4000000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_89;
  }
LABEL_88:
  PB::TextFormatter::format(this, "sosConsideredIOSTime", *(double *)(a1 + 304));
  uint64_t v6 = *v5;
  if ((*v5 & 0x4000000000) == 0)
  {
LABEL_41:
    if ((v6 & 0x8000000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_90;
  }
LABEL_89:
  PB::TextFormatter::format(this, "sosConsideredSensorTime");
  uint64_t v6 = *v5;
  if ((*v5 & 0x8000000000) == 0)
  {
LABEL_42:
    if ((v6 & 0x10000000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_91;
  }
LABEL_90:
  PB::TextFormatter::format(this, "workoutId");
  uint64_t v6 = *v5;
  if ((*v5 & 0x10000000000) == 0)
  {
LABEL_43:
    if ((v6 & 0x20000000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_92;
  }
LABEL_91:
  PB::TextFormatter::format(this, "workoutTransitionPause");
  uint64_t v6 = *v5;
  if ((*v5 & 0x20000000000) == 0)
  {
LABEL_44:
    if ((v6 & 0x40000000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_93;
  }
LABEL_92:
  PB::TextFormatter::format(this, "workoutTransitionResume");
  uint64_t v6 = *v5;
  if ((*v5 & 0x40000000000) == 0)
  {
LABEL_45:
    if ((v6 & 0x80000000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_46;
  }
LABEL_93:
  PB::TextFormatter::format(this, "workoutTransitionStart");
  if ((*v5 & 0x80000000000) != 0) {
LABEL_46:
  }
    PB::TextFormatter::format(this, "workoutTransitionStop");
LABEL_47:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B1F0BC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = (void *)(a1 + 364);
    while (1)
    {
      uint64_t v9 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v10 = 0;
      unsigned int v11 = 0;
      unint64_t v12 = 0;
      while (1)
      {
        unint64_t v13 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v14 = *(unsigned char *)(v9 + v2);
        v12 |= (unint64_t)(v14 & 0x7F) << v10;
        if ((v14 & 0x80) == 0) {
          break;
        }
        v10 += 7;
        unint64_t v2 = v13;
        BOOL v15 = v11++ > 8;
        if (v15) {
          goto LABEL_20;
        }
      }
LABEL_21:
      if ((v12 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v12 >> 3))
      {
        case 1u:
          *v8 |= 0x40000000uLL;
          unint64_t v21 = *((void *)this + 1);
          unint64_t v22 = *((void *)this + 2);
          uint64_t v23 = *(void *)this;
          if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v22)
          {
            char v375 = 0;
            unsigned int v376 = 0;
            uint64_t v26 = 0;
            if (v22 <= v21) {
              unint64_t v22 = *((void *)this + 1);
            }
            do
            {
              if (v22 == v21)
              {
                uint64_t v26 = 0;
                *((unsigned char *)this + 24) = 1;
                goto LABEL_648;
              }
              unint64_t v377 = v21 + 1;
              char v378 = *(unsigned char *)(v23 + v21);
              *((void *)this + 1) = v377;
              v26 |= (unint64_t)(v378 & 0x7F) << v375;
              if ((v378 & 0x80) == 0)
              {
                if (*((unsigned char *)this + 24)) {
                  uint64_t v26 = 0;
                }
                goto LABEL_648;
              }
              v375 += 7;
              unint64_t v21 = v377;
              BOOL v15 = v376++ > 8;
            }
            while (!v15);
LABEL_342:
            uint64_t v26 = 0;
          }
          else
          {
            char v24 = 0;
            unsigned int v25 = 0;
            uint64_t v26 = 0;
            while (1)
            {
              unint64_t v27 = v21 + 1;
              *((void *)this + 1) = v21 + 1;
              char v28 = *(unsigned char *)(v23 + v21);
              v26 |= (unint64_t)(v28 & 0x7F) << v24;
              if ((v28 & 0x80) == 0) {
                break;
              }
              v24 += 7;
              unint64_t v21 = v27;
              BOOL v15 = v25++ > 8;
              if (v15) {
                goto LABEL_342;
              }
            }
          }
LABEL_648:
          *(void *)(a1 + 248) = v26;
          goto LABEL_821;
        case 2u:
          *v8 |= 0x80000000uLL;
          unint64_t v29 = *((void *)this + 1);
          unint64_t v30 = *((void *)this + 2);
          uint64_t v31 = *(void *)this;
          if (v29 <= 0xFFFFFFFFFFFFFFF5 && v29 + 10 <= v30)
          {
            char v32 = 0;
            unsigned int v33 = 0;
            uint64_t v34 = 0;
            do
            {
              unint64_t v35 = v29 + 1;
              *((void *)this + 1) = v29 + 1;
              char v36 = *(unsigned char *)(v31 + v29);
              v34 |= (unint64_t)(v36 & 0x7F) << v32;
              if ((v36 & 0x80) == 0) {
                goto LABEL_652;
              }
              v32 += 7;
              unint64_t v29 = v35;
              BOOL v15 = v33++ > 8;
            }
            while (!v15);
LABEL_349:
            uint64_t v34 = 0;
            goto LABEL_652;
          }
          char v379 = 0;
          unsigned int v380 = 0;
          uint64_t v34 = 0;
          if (v30 <= v29) {
            unint64_t v30 = *((void *)this + 1);
          }
          while (2)
          {
            if (v30 == v29)
            {
              uint64_t v34 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v381 = v29 + 1;
              char v382 = *(unsigned char *)(v31 + v29);
              *((void *)this + 1) = v381;
              v34 |= (unint64_t)(v382 & 0x7F) << v379;
              if (v382 < 0)
              {
                v379 += 7;
                unint64_t v29 = v381;
                BOOL v15 = v380++ > 8;
                if (v15) {
                  goto LABEL_349;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v34 = 0;
              }
            }
            break;
          }
LABEL_652:
          *(void *)(a1 + 256) = v34;
          goto LABEL_821;
        case 0x15u:
          *v8 |= 0x80000uLL;
          unint64_t v38 = *((void *)this + 1);
          unint64_t v39 = *((void *)this + 2);
          uint64_t v40 = *(void *)this;
          if (v38 <= 0xFFFFFFFFFFFFFFF5 && v38 + 10 <= v39)
          {
            char v41 = 0;
            unsigned int v42 = 0;
            uint64_t v43 = 0;
            do
            {
              unint64_t v44 = v38 + 1;
              *((void *)this + 1) = v38 + 1;
              char v45 = *(unsigned char *)(v40 + v38);
              v43 |= (unint64_t)(v45 & 0x7F) << v41;
              if ((v45 & 0x80) == 0) {
                goto LABEL_656;
              }
              v41 += 7;
              unint64_t v38 = v44;
              BOOL v15 = v42++ > 8;
            }
            while (!v15);
LABEL_356:
            uint64_t v43 = 0;
            goto LABEL_656;
          }
          char v383 = 0;
          unsigned int v384 = 0;
          uint64_t v43 = 0;
          if (v39 <= v38) {
            unint64_t v39 = *((void *)this + 1);
          }
          while (2)
          {
            if (v39 == v38)
            {
              uint64_t v43 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v385 = v38 + 1;
              char v386 = *(unsigned char *)(v40 + v38);
              *((void *)this + 1) = v385;
              v43 |= (unint64_t)(v386 & 0x7F) << v383;
              if (v386 < 0)
              {
                v383 += 7;
                unint64_t v38 = v385;
                BOOL v15 = v384++ > 8;
                if (v15) {
                  goto LABEL_356;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v43 = 0;
              }
            }
            break;
          }
LABEL_656:
          *(void *)(a1 + 160) = v43;
          goto LABEL_821;
        case 0x16u:
          *v8 |= 0x100000uLL;
          unint64_t v46 = *((void *)this + 1);
          unint64_t v47 = *((void *)this + 2);
          uint64_t v48 = *(void *)this;
          if (v46 <= 0xFFFFFFFFFFFFFFF5 && v46 + 10 <= v47)
          {
            char v49 = 0;
            unsigned int v50 = 0;
            uint64_t v51 = 0;
            do
            {
              unint64_t v52 = v46 + 1;
              *((void *)this + 1) = v46 + 1;
              char v53 = *(unsigned char *)(v48 + v46);
              v51 |= (unint64_t)(v53 & 0x7F) << v49;
              if ((v53 & 0x80) == 0) {
                goto LABEL_660;
              }
              v49 += 7;
              unint64_t v46 = v52;
              BOOL v15 = v50++ > 8;
            }
            while (!v15);
LABEL_363:
            uint64_t v51 = 0;
            goto LABEL_660;
          }
          char v387 = 0;
          unsigned int v388 = 0;
          uint64_t v51 = 0;
          if (v47 <= v46) {
            unint64_t v47 = *((void *)this + 1);
          }
          while (2)
          {
            if (v47 == v46)
            {
              uint64_t v51 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v389 = v46 + 1;
              char v390 = *(unsigned char *)(v48 + v46);
              *((void *)this + 1) = v389;
              v51 |= (unint64_t)(v390 & 0x7F) << v387;
              if (v390 < 0)
              {
                v387 += 7;
                unint64_t v46 = v389;
                BOOL v15 = v388++ > 8;
                if (v15) {
                  goto LABEL_363;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v51 = 0;
              }
            }
            break;
          }
LABEL_660:
          *(void *)(a1 + 168) = v51;
          goto LABEL_821;
        case 0x2Cu:
          *v8 |= 0x200000uLL;
          unint64_t v54 = *((void *)this + 1);
          unint64_t v55 = *((void *)this + 2);
          uint64_t v56 = *(void *)this;
          if (v54 <= 0xFFFFFFFFFFFFFFF5 && v54 + 10 <= v55)
          {
            char v57 = 0;
            unsigned int v58 = 0;
            uint64_t v59 = 0;
            do
            {
              unint64_t v60 = v54 + 1;
              *((void *)this + 1) = v54 + 1;
              char v61 = *(unsigned char *)(v56 + v54);
              v59 |= (unint64_t)(v61 & 0x7F) << v57;
              if ((v61 & 0x80) == 0) {
                goto LABEL_664;
              }
              v57 += 7;
              unint64_t v54 = v60;
              BOOL v15 = v58++ > 8;
            }
            while (!v15);
LABEL_370:
            uint64_t v59 = 0;
            goto LABEL_664;
          }
          char v391 = 0;
          unsigned int v392 = 0;
          uint64_t v59 = 0;
          if (v55 <= v54) {
            unint64_t v55 = *((void *)this + 1);
          }
          while (2)
          {
            if (v55 == v54)
            {
              uint64_t v59 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v393 = v54 + 1;
              char v394 = *(unsigned char *)(v56 + v54);
              *((void *)this + 1) = v393;
              v59 |= (unint64_t)(v394 & 0x7F) << v391;
              if (v394 < 0)
              {
                v391 += 7;
                unint64_t v54 = v393;
                BOOL v15 = v392++ > 8;
                if (v15) {
                  goto LABEL_370;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v59 = 0;
              }
            }
            break;
          }
LABEL_664:
          *(void *)(a1 + 176) = v59;
          goto LABEL_821;
        case 0x2Du:
          *v8 |= 0x8000000000uLL;
          unint64_t v62 = *((void *)this + 1);
          unint64_t v63 = *((void *)this + 2);
          uint64_t v64 = *(void *)this;
          if (v62 <= 0xFFFFFFFFFFFFFFF5 && v62 + 10 <= v63)
          {
            char v65 = 0;
            unsigned int v66 = 0;
            uint64_t v67 = 0;
            do
            {
              unint64_t v68 = v62 + 1;
              *((void *)this + 1) = v62 + 1;
              char v69 = *(unsigned char *)(v64 + v62);
              v67 |= (unint64_t)(v69 & 0x7F) << v65;
              if ((v69 & 0x80) == 0) {
                goto LABEL_668;
              }
              v65 += 7;
              unint64_t v62 = v68;
              BOOL v15 = v66++ > 8;
            }
            while (!v15);
LABEL_377:
            uint64_t v67 = 0;
            goto LABEL_668;
          }
          char v395 = 0;
          unsigned int v396 = 0;
          uint64_t v67 = 0;
          if (v63 <= v62) {
            unint64_t v63 = *((void *)this + 1);
          }
          while (2)
          {
            if (v63 == v62)
            {
              uint64_t v67 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v397 = v62 + 1;
              char v398 = *(unsigned char *)(v64 + v62);
              *((void *)this + 1) = v397;
              v67 |= (unint64_t)(v398 & 0x7F) << v395;
              if (v398 < 0)
              {
                v395 += 7;
                unint64_t v62 = v397;
                BOOL v15 = v396++ > 8;
                if (v15) {
                  goto LABEL_377;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v67 = 0;
              }
            }
            break;
          }
LABEL_668:
          *(void *)(a1 + 320) = v67;
          goto LABEL_821;
        case 0x2Eu:
          *v8 |= 0x40000000000uLL;
          unint64_t v70 = *((void *)this + 1);
          unint64_t v71 = *((void *)this + 2);
          uint64_t v72 = *(void *)this;
          if (v70 <= 0xFFFFFFFFFFFFFFF5 && v70 + 10 <= v71)
          {
            char v73 = 0;
            unsigned int v74 = 0;
            uint64_t v75 = 0;
            do
            {
              unint64_t v76 = v70 + 1;
              *((void *)this + 1) = v70 + 1;
              char v77 = *(unsigned char *)(v72 + v70);
              v75 |= (unint64_t)(v77 & 0x7F) << v73;
              if ((v77 & 0x80) == 0) {
                goto LABEL_672;
              }
              v73 += 7;
              unint64_t v70 = v76;
              BOOL v15 = v74++ > 8;
            }
            while (!v15);
LABEL_384:
            uint64_t v75 = 0;
            goto LABEL_672;
          }
          char v399 = 0;
          unsigned int v400 = 0;
          uint64_t v75 = 0;
          if (v71 <= v70) {
            unint64_t v71 = *((void *)this + 1);
          }
          while (2)
          {
            if (v71 == v70)
            {
              uint64_t v75 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v401 = v70 + 1;
              char v402 = *(unsigned char *)(v72 + v70);
              *((void *)this + 1) = v401;
              v75 |= (unint64_t)(v402 & 0x7F) << v399;
              if (v402 < 0)
              {
                v399 += 7;
                unint64_t v70 = v401;
                BOOL v15 = v400++ > 8;
                if (v15) {
                  goto LABEL_384;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v75 = 0;
              }
            }
            break;
          }
LABEL_672:
          *(void *)(a1 + 344) = v75;
          goto LABEL_821;
        case 0x2Fu:
          *v8 |= 0x10000000000uLL;
          unint64_t v78 = *((void *)this + 1);
          unint64_t v79 = *((void *)this + 2);
          uint64_t v80 = *(void *)this;
          if (v78 <= 0xFFFFFFFFFFFFFFF5 && v78 + 10 <= v79)
          {
            char v81 = 0;
            unsigned int v82 = 0;
            uint64_t v83 = 0;
            do
            {
              unint64_t v84 = v78 + 1;
              *((void *)this + 1) = v78 + 1;
              char v85 = *(unsigned char *)(v80 + v78);
              v83 |= (unint64_t)(v85 & 0x7F) << v81;
              if ((v85 & 0x80) == 0) {
                goto LABEL_676;
              }
              v81 += 7;
              unint64_t v78 = v84;
              BOOL v15 = v82++ > 8;
            }
            while (!v15);
LABEL_391:
            uint64_t v83 = 0;
            goto LABEL_676;
          }
          char v403 = 0;
          unsigned int v404 = 0;
          uint64_t v83 = 0;
          if (v79 <= v78) {
            unint64_t v79 = *((void *)this + 1);
          }
          while (2)
          {
            if (v79 == v78)
            {
              uint64_t v83 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v405 = v78 + 1;
              char v406 = *(unsigned char *)(v80 + v78);
              *((void *)this + 1) = v405;
              v83 |= (unint64_t)(v406 & 0x7F) << v403;
              if (v406 < 0)
              {
                v403 += 7;
                unint64_t v78 = v405;
                BOOL v15 = v404++ > 8;
                if (v15) {
                  goto LABEL_391;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v83 = 0;
              }
            }
            break;
          }
LABEL_676:
          *(void *)(a1 + 328) = v83;
          goto LABEL_821;
        case 0x30u:
          *v8 |= 0x20000000000uLL;
          unint64_t v86 = *((void *)this + 1);
          unint64_t v87 = *((void *)this + 2);
          uint64_t v88 = *(void *)this;
          if (v86 <= 0xFFFFFFFFFFFFFFF5 && v86 + 10 <= v87)
          {
            char v89 = 0;
            unsigned int v90 = 0;
            uint64_t v91 = 0;
            do
            {
              unint64_t v92 = v86 + 1;
              *((void *)this + 1) = v86 + 1;
              char v93 = *(unsigned char *)(v88 + v86);
              v91 |= (unint64_t)(v93 & 0x7F) << v89;
              if ((v93 & 0x80) == 0) {
                goto LABEL_680;
              }
              v89 += 7;
              unint64_t v86 = v92;
              BOOL v15 = v90++ > 8;
            }
            while (!v15);
LABEL_398:
            uint64_t v91 = 0;
            goto LABEL_680;
          }
          char v407 = 0;
          unsigned int v408 = 0;
          uint64_t v91 = 0;
          if (v87 <= v86) {
            unint64_t v87 = *((void *)this + 1);
          }
          while (2)
          {
            if (v87 == v86)
            {
              uint64_t v91 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v409 = v86 + 1;
              char v410 = *(unsigned char *)(v88 + v86);
              *((void *)this + 1) = v409;
              v91 |= (unint64_t)(v410 & 0x7F) << v407;
              if (v410 < 0)
              {
                v407 += 7;
                unint64_t v86 = v409;
                BOOL v15 = v408++ > 8;
                if (v15) {
                  goto LABEL_398;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v91 = 0;
              }
            }
            break;
          }
LABEL_680:
          *(void *)(a1 + 336) = v91;
          goto LABEL_821;
        case 0x31u:
          *v8 |= 0x80000000000uLL;
          unint64_t v94 = *((void *)this + 1);
          unint64_t v95 = *((void *)this + 2);
          uint64_t v96 = *(void *)this;
          if (v94 <= 0xFFFFFFFFFFFFFFF5 && v94 + 10 <= v95)
          {
            char v97 = 0;
            unsigned int v98 = 0;
            uint64_t v99 = 0;
            do
            {
              unint64_t v100 = v94 + 1;
              *((void *)this + 1) = v94 + 1;
              char v101 = *(unsigned char *)(v96 + v94);
              v99 |= (unint64_t)(v101 & 0x7F) << v97;
              if ((v101 & 0x80) == 0) {
                goto LABEL_684;
              }
              v97 += 7;
              unint64_t v94 = v100;
              BOOL v15 = v98++ > 8;
            }
            while (!v15);
LABEL_405:
            uint64_t v99 = 0;
            goto LABEL_684;
          }
          char v411 = 0;
          unsigned int v412 = 0;
          uint64_t v99 = 0;
          if (v95 <= v94) {
            unint64_t v95 = *((void *)this + 1);
          }
          while (2)
          {
            if (v95 == v94)
            {
              uint64_t v99 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v413 = v94 + 1;
              char v414 = *(unsigned char *)(v96 + v94);
              *((void *)this + 1) = v413;
              v99 |= (unint64_t)(v414 & 0x7F) << v411;
              if (v414 < 0)
              {
                v411 += 7;
                unint64_t v94 = v413;
                BOOL v15 = v412++ > 8;
                if (v15) {
                  goto LABEL_405;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v99 = 0;
              }
            }
            break;
          }
LABEL_684:
          *(void *)(a1 + 352) = v99;
          goto LABEL_821;
        case 0x32u:
          *v8 |= 0x100000000000uLL;
          unint64_t v102 = *((void *)this + 1);
          unint64_t v103 = *((void *)this + 2);
          uint64_t v104 = *(void *)this;
          if (v102 <= 0xFFFFFFFFFFFFFFF5 && v102 + 10 <= v103)
          {
            char v105 = 0;
            unsigned int v106 = 0;
            uint64_t v107 = 0;
            do
            {
              unint64_t v108 = v102 + 1;
              *((void *)this + 1) = v102 + 1;
              char v109 = *(unsigned char *)(v104 + v102);
              v107 |= (unint64_t)(v109 & 0x7F) << v105;
              if ((v109 & 0x80) == 0) {
                goto LABEL_688;
              }
              v105 += 7;
              unint64_t v102 = v108;
              BOOL v15 = v106++ > 8;
            }
            while (!v15);
LABEL_412:
            LODWORD(v107) = 0;
            goto LABEL_688;
          }
          char v415 = 0;
          unsigned int v416 = 0;
          uint64_t v107 = 0;
          if (v103 <= v102) {
            unint64_t v103 = *((void *)this + 1);
          }
          while (2)
          {
            if (v103 == v102)
            {
              LODWORD(v107) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v417 = v102 + 1;
              char v418 = *(unsigned char *)(v104 + v102);
              *((void *)this + 1) = v417;
              v107 |= (unint64_t)(v418 & 0x7F) << v415;
              if (v418 < 0)
              {
                v415 += 7;
                unint64_t v102 = v417;
                BOOL v15 = v416++ > 8;
                if (v15) {
                  goto LABEL_412;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v107) = 0;
              }
            }
            break;
          }
LABEL_688:
          *(_DWORD *)(a1 + 360) = v107;
          goto LABEL_821;
        case 0x33u:
          *v8 |= 0x1000000uLL;
          unint64_t v110 = *((void *)this + 1);
          unint64_t v111 = *((void *)this + 2);
          uint64_t v112 = *(void *)this;
          if (v110 <= 0xFFFFFFFFFFFFFFF5 && v110 + 10 <= v111)
          {
            char v113 = 0;
            unsigned int v114 = 0;
            uint64_t v115 = 0;
            do
            {
              unint64_t v116 = v110 + 1;
              *((void *)this + 1) = v110 + 1;
              char v117 = *(unsigned char *)(v112 + v110);
              v115 |= (unint64_t)(v117 & 0x7F) << v113;
              if ((v117 & 0x80) == 0) {
                goto LABEL_692;
              }
              v113 += 7;
              unint64_t v110 = v116;
              BOOL v15 = v114++ > 8;
            }
            while (!v15);
LABEL_419:
            uint64_t v115 = 0;
            goto LABEL_692;
          }
          char v419 = 0;
          unsigned int v420 = 0;
          uint64_t v115 = 0;
          if (v111 <= v110) {
            unint64_t v111 = *((void *)this + 1);
          }
          while (2)
          {
            if (v111 == v110)
            {
              uint64_t v115 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v421 = v110 + 1;
              char v422 = *(unsigned char *)(v112 + v110);
              *((void *)this + 1) = v421;
              v115 |= (unint64_t)(v422 & 0x7F) << v419;
              if (v422 < 0)
              {
                v419 += 7;
                unint64_t v110 = v421;
                BOOL v15 = v420++ > 8;
                if (v15) {
                  goto LABEL_419;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v115 = 0;
              }
            }
            break;
          }
LABEL_692:
          *(void *)(a1 + 200) = v115;
          goto LABEL_821;
        case 0x34u:
          *v8 |= 0x8000000uLL;
          unint64_t v118 = *((void *)this + 1);
          unint64_t v119 = *((void *)this + 2);
          uint64_t v120 = *(void *)this;
          if (v118 <= 0xFFFFFFFFFFFFFFF5 && v118 + 10 <= v119)
          {
            char v121 = 0;
            unsigned int v122 = 0;
            uint64_t v123 = 0;
            do
            {
              unint64_t v124 = v118 + 1;
              *((void *)this + 1) = v118 + 1;
              char v125 = *(unsigned char *)(v120 + v118);
              v123 |= (unint64_t)(v125 & 0x7F) << v121;
              if ((v125 & 0x80) == 0) {
                goto LABEL_696;
              }
              v121 += 7;
              unint64_t v118 = v124;
              BOOL v15 = v122++ > 8;
            }
            while (!v15);
LABEL_426:
            uint64_t v123 = 0;
            goto LABEL_696;
          }
          char v423 = 0;
          unsigned int v424 = 0;
          uint64_t v123 = 0;
          if (v119 <= v118) {
            unint64_t v119 = *((void *)this + 1);
          }
          while (2)
          {
            if (v119 == v118)
            {
              uint64_t v123 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v425 = v118 + 1;
              char v426 = *(unsigned char *)(v120 + v118);
              *((void *)this + 1) = v425;
              v123 |= (unint64_t)(v426 & 0x7F) << v423;
              if (v426 < 0)
              {
                v423 += 7;
                unint64_t v118 = v425;
                BOOL v15 = v424++ > 8;
                if (v15) {
                  goto LABEL_426;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v123 = 0;
              }
            }
            break;
          }
LABEL_696:
          *(void *)(a1 + 224) = v123;
          goto LABEL_821;
        case 0x35u:
          *v8 |= 0x2000000uLL;
          unint64_t v126 = *((void *)this + 1);
          unint64_t v127 = *((void *)this + 2);
          uint64_t v128 = *(void *)this;
          if (v126 <= 0xFFFFFFFFFFFFFFF5 && v126 + 10 <= v127)
          {
            char v129 = 0;
            unsigned int v130 = 0;
            uint64_t v131 = 0;
            do
            {
              unint64_t v132 = v126 + 1;
              *((void *)this + 1) = v126 + 1;
              char v133 = *(unsigned char *)(v128 + v126);
              v131 |= (unint64_t)(v133 & 0x7F) << v129;
              if ((v133 & 0x80) == 0) {
                goto LABEL_700;
              }
              v129 += 7;
              unint64_t v126 = v132;
              BOOL v15 = v130++ > 8;
            }
            while (!v15);
LABEL_433:
            uint64_t v131 = 0;
            goto LABEL_700;
          }
          char v427 = 0;
          unsigned int v428 = 0;
          uint64_t v131 = 0;
          if (v127 <= v126) {
            unint64_t v127 = *((void *)this + 1);
          }
          while (2)
          {
            if (v127 == v126)
            {
              uint64_t v131 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v429 = v126 + 1;
              char v430 = *(unsigned char *)(v128 + v126);
              *((void *)this + 1) = v429;
              v131 |= (unint64_t)(v430 & 0x7F) << v427;
              if (v430 < 0)
              {
                v427 += 7;
                unint64_t v126 = v429;
                BOOL v15 = v428++ > 8;
                if (v15) {
                  goto LABEL_433;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v131 = 0;
              }
            }
            break;
          }
LABEL_700:
          *(void *)(a1 + 208) = v131;
          goto LABEL_821;
        case 0x36u:
          *v8 |= 0x4000000uLL;
          unint64_t v134 = *((void *)this + 1);
          unint64_t v135 = *((void *)this + 2);
          uint64_t v136 = *(void *)this;
          if (v134 <= 0xFFFFFFFFFFFFFFF5 && v134 + 10 <= v135)
          {
            char v137 = 0;
            unsigned int v138 = 0;
            uint64_t v139 = 0;
            do
            {
              unint64_t v140 = v134 + 1;
              *((void *)this + 1) = v134 + 1;
              char v141 = *(unsigned char *)(v136 + v134);
              v139 |= (unint64_t)(v141 & 0x7F) << v137;
              if ((v141 & 0x80) == 0) {
                goto LABEL_704;
              }
              v137 += 7;
              unint64_t v134 = v140;
              BOOL v15 = v138++ > 8;
            }
            while (!v15);
LABEL_440:
            uint64_t v139 = 0;
            goto LABEL_704;
          }
          char v431 = 0;
          unsigned int v432 = 0;
          uint64_t v139 = 0;
          if (v135 <= v134) {
            unint64_t v135 = *((void *)this + 1);
          }
          while (2)
          {
            if (v135 == v134)
            {
              uint64_t v139 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v433 = v134 + 1;
              char v434 = *(unsigned char *)(v136 + v134);
              *((void *)this + 1) = v433;
              v139 |= (unint64_t)(v434 & 0x7F) << v431;
              if (v434 < 0)
              {
                v431 += 7;
                unint64_t v134 = v433;
                BOOL v15 = v432++ > 8;
                if (v15) {
                  goto LABEL_440;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v139 = 0;
              }
            }
            break;
          }
LABEL_704:
          *(void *)(a1 + 216) = v139;
          goto LABEL_821;
        case 0x37u:
          *v8 |= 0x400000uLL;
          unint64_t v142 = *((void *)this + 1);
          unint64_t v143 = *((void *)this + 2);
          uint64_t v144 = *(void *)this;
          if (v142 <= 0xFFFFFFFFFFFFFFF5 && v142 + 10 <= v143)
          {
            char v145 = 0;
            unsigned int v146 = 0;
            uint64_t v147 = 0;
            do
            {
              unint64_t v148 = v142 + 1;
              *((void *)this + 1) = v142 + 1;
              char v149 = *(unsigned char *)(v144 + v142);
              v147 |= (unint64_t)(v149 & 0x7F) << v145;
              if ((v149 & 0x80) == 0) {
                goto LABEL_708;
              }
              v145 += 7;
              unint64_t v142 = v148;
              BOOL v15 = v146++ > 8;
            }
            while (!v15);
LABEL_447:
            uint64_t v147 = 0;
            goto LABEL_708;
          }
          char v435 = 0;
          unsigned int v436 = 0;
          uint64_t v147 = 0;
          if (v143 <= v142) {
            unint64_t v143 = *((void *)this + 1);
          }
          while (2)
          {
            if (v143 == v142)
            {
              uint64_t v147 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v437 = v142 + 1;
              char v438 = *(unsigned char *)(v144 + v142);
              *((void *)this + 1) = v437;
              v147 |= (unint64_t)(v438 & 0x7F) << v435;
              if (v438 < 0)
              {
                v435 += 7;
                unint64_t v142 = v437;
                BOOL v15 = v436++ > 8;
                if (v15) {
                  goto LABEL_447;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v147 = 0;
              }
            }
            break;
          }
LABEL_708:
          *(void *)(a1 + 184) = v147;
          goto LABEL_821;
        case 0x38u:
          *v8 |= 0x800000uLL;
          unint64_t v150 = *((void *)this + 1);
          unint64_t v151 = *((void *)this + 2);
          uint64_t v152 = *(void *)this;
          if (v150 <= 0xFFFFFFFFFFFFFFF5 && v150 + 10 <= v151)
          {
            char v153 = 0;
            unsigned int v154 = 0;
            uint64_t v155 = 0;
            do
            {
              unint64_t v156 = v150 + 1;
              *((void *)this + 1) = v150 + 1;
              char v157 = *(unsigned char *)(v152 + v150);
              v155 |= (unint64_t)(v157 & 0x7F) << v153;
              if ((v157 & 0x80) == 0) {
                goto LABEL_712;
              }
              v153 += 7;
              unint64_t v150 = v156;
              BOOL v15 = v154++ > 8;
            }
            while (!v15);
LABEL_454:
            uint64_t v155 = 0;
            goto LABEL_712;
          }
          char v439 = 0;
          unsigned int v440 = 0;
          uint64_t v155 = 0;
          if (v151 <= v150) {
            unint64_t v151 = *((void *)this + 1);
          }
          while (2)
          {
            if (v151 == v150)
            {
              uint64_t v155 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v441 = v150 + 1;
              char v442 = *(unsigned char *)(v152 + v150);
              *((void *)this + 1) = v441;
              v155 |= (unint64_t)(v442 & 0x7F) << v439;
              if (v442 < 0)
              {
                v439 += 7;
                unint64_t v150 = v441;
                BOOL v15 = v440++ > 8;
                if (v15) {
                  goto LABEL_454;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v155 = 0;
              }
            }
            break;
          }
LABEL_712:
          *(void *)(a1 + 192) = v155;
          goto LABEL_821;
        case 0x3Bu:
          *v8 |= 0x20uLL;
          unint64_t v158 = *((void *)this + 1);
          unint64_t v159 = *((void *)this + 2);
          uint64_t v160 = *(void *)this;
          if (v158 <= 0xFFFFFFFFFFFFFFF5 && v158 + 10 <= v159)
          {
            char v161 = 0;
            unsigned int v162 = 0;
            uint64_t v163 = 0;
            do
            {
              unint64_t v164 = v158 + 1;
              *((void *)this + 1) = v158 + 1;
              char v165 = *(unsigned char *)(v160 + v158);
              v163 |= (unint64_t)(v165 & 0x7F) << v161;
              if ((v165 & 0x80) == 0) {
                goto LABEL_716;
              }
              v161 += 7;
              unint64_t v158 = v164;
              BOOL v15 = v162++ > 8;
            }
            while (!v15);
LABEL_461:
            uint64_t v163 = 0;
            goto LABEL_716;
          }
          char v443 = 0;
          unsigned int v444 = 0;
          uint64_t v163 = 0;
          if (v159 <= v158) {
            unint64_t v159 = *((void *)this + 1);
          }
          while (2)
          {
            if (v159 == v158)
            {
              uint64_t v163 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v445 = v158 + 1;
              char v446 = *(unsigned char *)(v160 + v158);
              *((void *)this + 1) = v445;
              v163 |= (unint64_t)(v446 & 0x7F) << v443;
              if (v446 < 0)
              {
                v443 += 7;
                unint64_t v158 = v445;
                BOOL v15 = v444++ > 8;
                if (v15) {
                  goto LABEL_461;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v163 = 0;
              }
            }
            break;
          }
LABEL_716:
          *(void *)(a1 + 48) = v163;
          goto LABEL_821;
        case 0x3Cu:
          *v8 |= 8uLL;
          unint64_t v166 = *((void *)this + 1);
          unint64_t v167 = *((void *)this + 2);
          uint64_t v168 = *(void *)this;
          if (v166 <= 0xFFFFFFFFFFFFFFF5 && v166 + 10 <= v167)
          {
            char v169 = 0;
            unsigned int v170 = 0;
            uint64_t v171 = 0;
            do
            {
              unint64_t v172 = v166 + 1;
              *((void *)this + 1) = v166 + 1;
              char v173 = *(unsigned char *)(v168 + v166);
              v171 |= (unint64_t)(v173 & 0x7F) << v169;
              if ((v173 & 0x80) == 0) {
                goto LABEL_720;
              }
              v169 += 7;
              unint64_t v166 = v172;
              BOOL v15 = v170++ > 8;
            }
            while (!v15);
LABEL_468:
            uint64_t v171 = 0;
            goto LABEL_720;
          }
          char v447 = 0;
          unsigned int v448 = 0;
          uint64_t v171 = 0;
          if (v167 <= v166) {
            unint64_t v167 = *((void *)this + 1);
          }
          while (2)
          {
            if (v167 == v166)
            {
              uint64_t v171 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v449 = v166 + 1;
              char v450 = *(unsigned char *)(v168 + v166);
              *((void *)this + 1) = v449;
              v171 |= (unint64_t)(v450 & 0x7F) << v447;
              if (v450 < 0)
              {
                v447 += 7;
                unint64_t v166 = v449;
                BOOL v15 = v448++ > 8;
                if (v15) {
                  goto LABEL_468;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v171 = 0;
              }
            }
            break;
          }
LABEL_720:
          *(void *)(a1 + 32) = v171;
          goto LABEL_821;
        case 0x3Du:
          *v8 |= 1uLL;
          unint64_t v174 = *((void *)this + 1);
          unint64_t v175 = *((void *)this + 2);
          uint64_t v176 = *(void *)this;
          if (v174 <= 0xFFFFFFFFFFFFFFF5 && v174 + 10 <= v175)
          {
            char v177 = 0;
            unsigned int v178 = 0;
            uint64_t v179 = 0;
            do
            {
              unint64_t v180 = v174 + 1;
              *((void *)this + 1) = v174 + 1;
              char v181 = *(unsigned char *)(v176 + v174);
              v179 |= (unint64_t)(v181 & 0x7F) << v177;
              if ((v181 & 0x80) == 0) {
                goto LABEL_724;
              }
              v177 += 7;
              unint64_t v174 = v180;
              BOOL v15 = v178++ > 8;
            }
            while (!v15);
LABEL_475:
            uint64_t v179 = 0;
            goto LABEL_724;
          }
          char v451 = 0;
          unsigned int v452 = 0;
          uint64_t v179 = 0;
          if (v175 <= v174) {
            unint64_t v175 = *((void *)this + 1);
          }
          while (2)
          {
            if (v175 == v174)
            {
              uint64_t v179 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v453 = v174 + 1;
              char v454 = *(unsigned char *)(v176 + v174);
              *((void *)this + 1) = v453;
              v179 |= (unint64_t)(v454 & 0x7F) << v451;
              if (v454 < 0)
              {
                v451 += 7;
                unint64_t v174 = v453;
                BOOL v15 = v452++ > 8;
                if (v15) {
                  goto LABEL_475;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v179 = 0;
              }
            }
            break;
          }
LABEL_724:
          *(void *)(a1 + 8) = v179;
          goto LABEL_821;
        case 0x3Eu:
          *v8 |= 0x40uLL;
          unint64_t v182 = *((void *)this + 1);
          unint64_t v183 = *((void *)this + 2);
          uint64_t v184 = *(void *)this;
          if (v182 <= 0xFFFFFFFFFFFFFFF5 && v182 + 10 <= v183)
          {
            char v185 = 0;
            unsigned int v186 = 0;
            uint64_t v187 = 0;
            do
            {
              unint64_t v188 = v182 + 1;
              *((void *)this + 1) = v182 + 1;
              char v189 = *(unsigned char *)(v184 + v182);
              v187 |= (unint64_t)(v189 & 0x7F) << v185;
              if ((v189 & 0x80) == 0) {
                goto LABEL_728;
              }
              v185 += 7;
              unint64_t v182 = v188;
              BOOL v15 = v186++ > 8;
            }
            while (!v15);
LABEL_482:
            uint64_t v187 = 0;
            goto LABEL_728;
          }
          char v455 = 0;
          unsigned int v456 = 0;
          uint64_t v187 = 0;
          if (v183 <= v182) {
            unint64_t v183 = *((void *)this + 1);
          }
          while (2)
          {
            if (v183 == v182)
            {
              uint64_t v187 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v457 = v182 + 1;
              char v458 = *(unsigned char *)(v184 + v182);
              *((void *)this + 1) = v457;
              v187 |= (unint64_t)(v458 & 0x7F) << v455;
              if (v458 < 0)
              {
                v455 += 7;
                unint64_t v182 = v457;
                BOOL v15 = v456++ > 8;
                if (v15) {
                  goto LABEL_482;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v187 = 0;
              }
            }
            break;
          }
LABEL_728:
          *(void *)(a1 + 56) = v187;
          goto LABEL_821;
        case 0x3Fu:
          *v8 |= 0x100uLL;
          unint64_t v190 = *((void *)this + 1);
          unint64_t v191 = *((void *)this + 2);
          uint64_t v192 = *(void *)this;
          if (v190 <= 0xFFFFFFFFFFFFFFF5 && v190 + 10 <= v191)
          {
            char v193 = 0;
            unsigned int v194 = 0;
            uint64_t v195 = 0;
            do
            {
              unint64_t v196 = v190 + 1;
              *((void *)this + 1) = v190 + 1;
              char v197 = *(unsigned char *)(v192 + v190);
              v195 |= (unint64_t)(v197 & 0x7F) << v193;
              if ((v197 & 0x80) == 0) {
                goto LABEL_732;
              }
              v193 += 7;
              unint64_t v190 = v196;
              BOOL v15 = v194++ > 8;
            }
            while (!v15);
LABEL_489:
            uint64_t v195 = 0;
            goto LABEL_732;
          }
          char v459 = 0;
          unsigned int v460 = 0;
          uint64_t v195 = 0;
          if (v191 <= v190) {
            unint64_t v191 = *((void *)this + 1);
          }
          while (2)
          {
            if (v191 == v190)
            {
              uint64_t v195 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v461 = v190 + 1;
              char v462 = *(unsigned char *)(v192 + v190);
              *((void *)this + 1) = v461;
              v195 |= (unint64_t)(v462 & 0x7F) << v459;
              if (v462 < 0)
              {
                v459 += 7;
                unint64_t v190 = v461;
                BOOL v15 = v460++ > 8;
                if (v15) {
                  goto LABEL_489;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v195 = 0;
              }
            }
            break;
          }
LABEL_732:
          *(void *)(a1 + 72) = v195;
          goto LABEL_821;
        case 0x40u:
          *v8 |= 0x10uLL;
          unint64_t v198 = *((void *)this + 1);
          unint64_t v199 = *((void *)this + 2);
          uint64_t v200 = *(void *)this;
          if (v198 <= 0xFFFFFFFFFFFFFFF5 && v198 + 10 <= v199)
          {
            char v201 = 0;
            unsigned int v202 = 0;
            uint64_t v203 = 0;
            do
            {
              unint64_t v204 = v198 + 1;
              *((void *)this + 1) = v198 + 1;
              char v205 = *(unsigned char *)(v200 + v198);
              v203 |= (unint64_t)(v205 & 0x7F) << v201;
              if ((v205 & 0x80) == 0) {
                goto LABEL_736;
              }
              v201 += 7;
              unint64_t v198 = v204;
              BOOL v15 = v202++ > 8;
            }
            while (!v15);
LABEL_496:
            uint64_t v203 = 0;
            goto LABEL_736;
          }
          char v463 = 0;
          unsigned int v464 = 0;
          uint64_t v203 = 0;
          if (v199 <= v198) {
            unint64_t v199 = *((void *)this + 1);
          }
          while (2)
          {
            if (v199 == v198)
            {
              uint64_t v203 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v465 = v198 + 1;
              char v466 = *(unsigned char *)(v200 + v198);
              *((void *)this + 1) = v465;
              v203 |= (unint64_t)(v466 & 0x7F) << v463;
              if (v466 < 0)
              {
                v463 += 7;
                unint64_t v198 = v465;
                BOOL v15 = v464++ > 8;
                if (v15) {
                  goto LABEL_496;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v203 = 0;
              }
            }
            break;
          }
LABEL_736:
          *(void *)(a1 + 40) = v203;
          goto LABEL_821;
        case 0x41u:
          *v8 |= 0x200uLL;
          unint64_t v206 = *((void *)this + 1);
          unint64_t v207 = *((void *)this + 2);
          uint64_t v208 = *(void *)this;
          if (v206 <= 0xFFFFFFFFFFFFFFF5 && v206 + 10 <= v207)
          {
            char v209 = 0;
            unsigned int v210 = 0;
            uint64_t v211 = 0;
            do
            {
              unint64_t v212 = v206 + 1;
              *((void *)this + 1) = v206 + 1;
              char v213 = *(unsigned char *)(v208 + v206);
              v211 |= (unint64_t)(v213 & 0x7F) << v209;
              if ((v213 & 0x80) == 0) {
                goto LABEL_740;
              }
              v209 += 7;
              unint64_t v206 = v212;
              BOOL v15 = v210++ > 8;
            }
            while (!v15);
LABEL_503:
            uint64_t v211 = 0;
            goto LABEL_740;
          }
          char v467 = 0;
          unsigned int v468 = 0;
          uint64_t v211 = 0;
          if (v207 <= v206) {
            unint64_t v207 = *((void *)this + 1);
          }
          while (2)
          {
            if (v207 == v206)
            {
              uint64_t v211 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v469 = v206 + 1;
              char v470 = *(unsigned char *)(v208 + v206);
              *((void *)this + 1) = v469;
              v211 |= (unint64_t)(v470 & 0x7F) << v467;
              if (v470 < 0)
              {
                v467 += 7;
                unint64_t v206 = v469;
                BOOL v15 = v468++ > 8;
                if (v15) {
                  goto LABEL_503;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v211 = 0;
              }
            }
            break;
          }
LABEL_740:
          *(void *)(a1 + 80) = v211;
          goto LABEL_821;
        case 0x42u:
          *v8 |= 0x400uLL;
          unint64_t v214 = *((void *)this + 1);
          unint64_t v215 = *((void *)this + 2);
          uint64_t v216 = *(void *)this;
          if (v214 <= 0xFFFFFFFFFFFFFFF5 && v214 + 10 <= v215)
          {
            char v217 = 0;
            unsigned int v218 = 0;
            uint64_t v219 = 0;
            do
            {
              unint64_t v220 = v214 + 1;
              *((void *)this + 1) = v214 + 1;
              char v221 = *(unsigned char *)(v216 + v214);
              v219 |= (unint64_t)(v221 & 0x7F) << v217;
              if ((v221 & 0x80) == 0) {
                goto LABEL_744;
              }
              v217 += 7;
              unint64_t v214 = v220;
              BOOL v15 = v218++ > 8;
            }
            while (!v15);
LABEL_510:
            uint64_t v219 = 0;
            goto LABEL_744;
          }
          char v471 = 0;
          unsigned int v472 = 0;
          uint64_t v219 = 0;
          if (v215 <= v214) {
            unint64_t v215 = *((void *)this + 1);
          }
          while (2)
          {
            if (v215 == v214)
            {
              uint64_t v219 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v473 = v214 + 1;
              char v474 = *(unsigned char *)(v216 + v214);
              *((void *)this + 1) = v473;
              v219 |= (unint64_t)(v474 & 0x7F) << v471;
              if (v474 < 0)
              {
                v471 += 7;
                unint64_t v214 = v473;
                BOOL v15 = v472++ > 8;
                if (v15) {
                  goto LABEL_510;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v219 = 0;
              }
            }
            break;
          }
LABEL_744:
          *(void *)(a1 + 88) = v219;
          goto LABEL_821;
        case 0x43u:
          *v8 |= 0x800uLL;
          unint64_t v222 = *((void *)this + 1);
          unint64_t v223 = *((void *)this + 2);
          uint64_t v224 = *(void *)this;
          if (v222 <= 0xFFFFFFFFFFFFFFF5 && v222 + 10 <= v223)
          {
            char v225 = 0;
            unsigned int v226 = 0;
            uint64_t v227 = 0;
            do
            {
              unint64_t v228 = v222 + 1;
              *((void *)this + 1) = v222 + 1;
              char v229 = *(unsigned char *)(v224 + v222);
              v227 |= (unint64_t)(v229 & 0x7F) << v225;
              if ((v229 & 0x80) == 0) {
                goto LABEL_748;
              }
              v225 += 7;
              unint64_t v222 = v228;
              BOOL v15 = v226++ > 8;
            }
            while (!v15);
LABEL_517:
            uint64_t v227 = 0;
            goto LABEL_748;
          }
          char v475 = 0;
          unsigned int v476 = 0;
          uint64_t v227 = 0;
          if (v223 <= v222) {
            unint64_t v223 = *((void *)this + 1);
          }
          while (2)
          {
            if (v223 == v222)
            {
              uint64_t v227 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v477 = v222 + 1;
              char v478 = *(unsigned char *)(v224 + v222);
              *((void *)this + 1) = v477;
              v227 |= (unint64_t)(v478 & 0x7F) << v475;
              if (v478 < 0)
              {
                v475 += 7;
                unint64_t v222 = v477;
                BOOL v15 = v476++ > 8;
                if (v15) {
                  goto LABEL_517;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v227 = 0;
              }
            }
            break;
          }
LABEL_748:
          *(void *)(a1 + 96) = v227;
          goto LABEL_821;
        case 0x44u:
          *v8 |= 0x4000uLL;
          unint64_t v230 = *((void *)this + 1);
          unint64_t v231 = *((void *)this + 2);
          uint64_t v232 = *(void *)this;
          if (v230 <= 0xFFFFFFFFFFFFFFF5 && v230 + 10 <= v231)
          {
            char v233 = 0;
            unsigned int v234 = 0;
            uint64_t v235 = 0;
            do
            {
              unint64_t v236 = v230 + 1;
              *((void *)this + 1) = v230 + 1;
              char v237 = *(unsigned char *)(v232 + v230);
              v235 |= (unint64_t)(v237 & 0x7F) << v233;
              if ((v237 & 0x80) == 0) {
                goto LABEL_752;
              }
              v233 += 7;
              unint64_t v230 = v236;
              BOOL v15 = v234++ > 8;
            }
            while (!v15);
LABEL_524:
            uint64_t v235 = 0;
            goto LABEL_752;
          }
          char v479 = 0;
          unsigned int v480 = 0;
          uint64_t v235 = 0;
          if (v231 <= v230) {
            unint64_t v231 = *((void *)this + 1);
          }
          while (2)
          {
            if (v231 == v230)
            {
              uint64_t v235 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v481 = v230 + 1;
              char v482 = *(unsigned char *)(v232 + v230);
              *((void *)this + 1) = v481;
              v235 |= (unint64_t)(v482 & 0x7F) << v479;
              if (v482 < 0)
              {
                v479 += 7;
                unint64_t v230 = v481;
                BOOL v15 = v480++ > 8;
                if (v15) {
                  goto LABEL_524;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v235 = 0;
              }
            }
            break;
          }
LABEL_752:
          *(void *)(a1 + 120) = v235;
          goto LABEL_821;
        case 0x45u:
          *v8 |= 2uLL;
          unint64_t v238 = *((void *)this + 1);
          unint64_t v239 = *((void *)this + 2);
          uint64_t v240 = *(void *)this;
          if (v238 <= 0xFFFFFFFFFFFFFFF5 && v238 + 10 <= v239)
          {
            char v241 = 0;
            unsigned int v242 = 0;
            uint64_t v243 = 0;
            do
            {
              unint64_t v244 = v238 + 1;
              *((void *)this + 1) = v238 + 1;
              char v245 = *(unsigned char *)(v240 + v238);
              v243 |= (unint64_t)(v245 & 0x7F) << v241;
              if ((v245 & 0x80) == 0) {
                goto LABEL_756;
              }
              v241 += 7;
              unint64_t v238 = v244;
              BOOL v15 = v242++ > 8;
            }
            while (!v15);
LABEL_531:
            uint64_t v243 = 0;
            goto LABEL_756;
          }
          char v483 = 0;
          unsigned int v484 = 0;
          uint64_t v243 = 0;
          if (v239 <= v238) {
            unint64_t v239 = *((void *)this + 1);
          }
          while (2)
          {
            if (v239 == v238)
            {
              uint64_t v243 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v485 = v238 + 1;
              char v486 = *(unsigned char *)(v240 + v238);
              *((void *)this + 1) = v485;
              v243 |= (unint64_t)(v486 & 0x7F) << v483;
              if (v486 < 0)
              {
                v483 += 7;
                unint64_t v238 = v485;
                BOOL v15 = v484++ > 8;
                if (v15) {
                  goto LABEL_531;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v243 = 0;
              }
            }
            break;
          }
LABEL_756:
          *(void *)(a1 + 16) = v243;
          goto LABEL_821;
        case 0x46u:
          *v8 |= 0x8000uLL;
          unint64_t v246 = *((void *)this + 1);
          unint64_t v247 = *((void *)this + 2);
          uint64_t v248 = *(void *)this;
          if (v246 <= 0xFFFFFFFFFFFFFFF5 && v246 + 10 <= v247)
          {
            char v249 = 0;
            unsigned int v250 = 0;
            uint64_t v251 = 0;
            do
            {
              unint64_t v252 = v246 + 1;
              *((void *)this + 1) = v246 + 1;
              char v253 = *(unsigned char *)(v248 + v246);
              v251 |= (unint64_t)(v253 & 0x7F) << v249;
              if ((v253 & 0x80) == 0) {
                goto LABEL_760;
              }
              v249 += 7;
              unint64_t v246 = v252;
              BOOL v15 = v250++ > 8;
            }
            while (!v15);
LABEL_538:
            uint64_t v251 = 0;
            goto LABEL_760;
          }
          char v487 = 0;
          unsigned int v488 = 0;
          uint64_t v251 = 0;
          if (v247 <= v246) {
            unint64_t v247 = *((void *)this + 1);
          }
          while (2)
          {
            if (v247 == v246)
            {
              uint64_t v251 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v489 = v246 + 1;
              char v490 = *(unsigned char *)(v248 + v246);
              *((void *)this + 1) = v489;
              v251 |= (unint64_t)(v490 & 0x7F) << v487;
              if (v490 < 0)
              {
                v487 += 7;
                unint64_t v246 = v489;
                BOOL v15 = v488++ > 8;
                if (v15) {
                  goto LABEL_538;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v251 = 0;
              }
            }
            break;
          }
LABEL_760:
          *(void *)(a1 + 128) = v251;
          goto LABEL_821;
        case 0x47u:
          *v8 |= 0x800000000uLL;
          unint64_t v254 = *((void *)this + 1);
          unint64_t v255 = *((void *)this + 2);
          uint64_t v256 = *(void *)this;
          if (v254 <= 0xFFFFFFFFFFFFFFF5 && v254 + 10 <= v255)
          {
            char v257 = 0;
            unsigned int v258 = 0;
            uint64_t v259 = 0;
            do
            {
              unint64_t v260 = v254 + 1;
              *((void *)this + 1) = v254 + 1;
              char v261 = *(unsigned char *)(v256 + v254);
              v259 |= (unint64_t)(v261 & 0x7F) << v257;
              if ((v261 & 0x80) == 0) {
                goto LABEL_764;
              }
              v257 += 7;
              unint64_t v254 = v260;
              BOOL v15 = v258++ > 8;
            }
            while (!v15);
LABEL_545:
            uint64_t v259 = 0;
            goto LABEL_764;
          }
          char v491 = 0;
          unsigned int v492 = 0;
          uint64_t v259 = 0;
          if (v255 <= v254) {
            unint64_t v255 = *((void *)this + 1);
          }
          while (2)
          {
            if (v255 == v254)
            {
              uint64_t v259 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v493 = v254 + 1;
              char v494 = *(unsigned char *)(v256 + v254);
              *((void *)this + 1) = v493;
              v259 |= (unint64_t)(v494 & 0x7F) << v491;
              if (v494 < 0)
              {
                v491 += 7;
                unint64_t v254 = v493;
                BOOL v15 = v492++ > 8;
                if (v15) {
                  goto LABEL_545;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v259 = 0;
              }
            }
            break;
          }
LABEL_764:
          *(void *)(a1 + 288) = v259;
          goto LABEL_821;
        case 0x48u:
          *v8 |= 0x400000000uLL;
          unint64_t v262 = *((void *)this + 1);
          unint64_t v263 = *((void *)this + 2);
          uint64_t v264 = *(void *)this;
          if (v262 <= 0xFFFFFFFFFFFFFFF5 && v262 + 10 <= v263)
          {
            char v265 = 0;
            unsigned int v266 = 0;
            uint64_t v267 = 0;
            do
            {
              unint64_t v268 = v262 + 1;
              *((void *)this + 1) = v262 + 1;
              char v269 = *(unsigned char *)(v264 + v262);
              v267 |= (unint64_t)(v269 & 0x7F) << v265;
              if ((v269 & 0x80) == 0) {
                goto LABEL_768;
              }
              v265 += 7;
              unint64_t v262 = v268;
              BOOL v15 = v266++ > 8;
            }
            while (!v15);
LABEL_552:
            uint64_t v267 = 0;
            goto LABEL_768;
          }
          char v495 = 0;
          unsigned int v496 = 0;
          uint64_t v267 = 0;
          if (v263 <= v262) {
            unint64_t v263 = *((void *)this + 1);
          }
          while (2)
          {
            if (v263 == v262)
            {
              uint64_t v267 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v497 = v262 + 1;
              char v498 = *(unsigned char *)(v264 + v262);
              *((void *)this + 1) = v497;
              v267 |= (unint64_t)(v498 & 0x7F) << v495;
              if (v498 < 0)
              {
                v495 += 7;
                unint64_t v262 = v497;
                BOOL v15 = v496++ > 8;
                if (v15) {
                  goto LABEL_552;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v267 = 0;
              }
            }
            break;
          }
LABEL_768:
          *(void *)(a1 + 280) = v267;
          goto LABEL_821;
        case 0x49u:
          *v8 |= 0x200000000uLL;
          unint64_t v270 = *((void *)this + 1);
          unint64_t v271 = *((void *)this + 2);
          uint64_t v272 = *(void *)this;
          if (v270 <= 0xFFFFFFFFFFFFFFF5 && v270 + 10 <= v271)
          {
            char v273 = 0;
            unsigned int v274 = 0;
            uint64_t v275 = 0;
            do
            {
              unint64_t v276 = v270 + 1;
              *((void *)this + 1) = v270 + 1;
              char v277 = *(unsigned char *)(v272 + v270);
              v275 |= (unint64_t)(v277 & 0x7F) << v273;
              if ((v277 & 0x80) == 0) {
                goto LABEL_772;
              }
              v273 += 7;
              unint64_t v270 = v276;
              BOOL v15 = v274++ > 8;
            }
            while (!v15);
LABEL_559:
            uint64_t v275 = 0;
            goto LABEL_772;
          }
          char v499 = 0;
          unsigned int v500 = 0;
          uint64_t v275 = 0;
          if (v271 <= v270) {
            unint64_t v271 = *((void *)this + 1);
          }
          while (2)
          {
            if (v271 == v270)
            {
              uint64_t v275 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v501 = v270 + 1;
              char v502 = *(unsigned char *)(v272 + v270);
              *((void *)this + 1) = v501;
              v275 |= (unint64_t)(v502 & 0x7F) << v499;
              if (v502 < 0)
              {
                v499 += 7;
                unint64_t v270 = v501;
                BOOL v15 = v500++ > 8;
                if (v15) {
                  goto LABEL_559;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v275 = 0;
              }
            }
            break;
          }
LABEL_772:
          *(void *)(a1 + 272) = v275;
          goto LABEL_821;
        case 0x4Au:
          *v8 |= 0x100000000uLL;
          unint64_t v278 = *((void *)this + 1);
          unint64_t v279 = *((void *)this + 2);
          uint64_t v280 = *(void *)this;
          if (v278 <= 0xFFFFFFFFFFFFFFF5 && v278 + 10 <= v279)
          {
            char v281 = 0;
            unsigned int v282 = 0;
            uint64_t v283 = 0;
            do
            {
              unint64_t v284 = v278 + 1;
              *((void *)this + 1) = v278 + 1;
              char v285 = *(unsigned char *)(v280 + v278);
              v283 |= (unint64_t)(v285 & 0x7F) << v281;
              if ((v285 & 0x80) == 0) {
                goto LABEL_776;
              }
              v281 += 7;
              unint64_t v278 = v284;
              BOOL v15 = v282++ > 8;
            }
            while (!v15);
LABEL_566:
            uint64_t v283 = 0;
            goto LABEL_776;
          }
          char v503 = 0;
          unsigned int v504 = 0;
          uint64_t v283 = 0;
          if (v279 <= v278) {
            unint64_t v279 = *((void *)this + 1);
          }
          while (2)
          {
            if (v279 == v278)
            {
              uint64_t v283 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v505 = v278 + 1;
              char v506 = *(unsigned char *)(v280 + v278);
              *((void *)this + 1) = v505;
              v283 |= (unint64_t)(v506 & 0x7F) << v503;
              if (v506 < 0)
              {
                v503 += 7;
                unint64_t v278 = v505;
                BOOL v15 = v504++ > 8;
                if (v15) {
                  goto LABEL_566;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v283 = 0;
              }
            }
            break;
          }
LABEL_776:
          *(void *)(a1 + 264) = v283;
          goto LABEL_821;
        case 0x51u:
          *v8 |= 0x20000000uLL;
          unint64_t v286 = *((void *)this + 1);
          unint64_t v287 = *((void *)this + 2);
          uint64_t v288 = *(void *)this;
          if (v286 <= 0xFFFFFFFFFFFFFFF5 && v286 + 10 <= v287)
          {
            char v289 = 0;
            unsigned int v290 = 0;
            uint64_t v291 = 0;
            do
            {
              unint64_t v292 = v286 + 1;
              *((void *)this + 1) = v286 + 1;
              char v293 = *(unsigned char *)(v288 + v286);
              v291 |= (unint64_t)(v293 & 0x7F) << v289;
              if ((v293 & 0x80) == 0) {
                goto LABEL_780;
              }
              v289 += 7;
              unint64_t v286 = v292;
              BOOL v15 = v290++ > 8;
            }
            while (!v15);
LABEL_573:
            uint64_t v291 = 0;
            goto LABEL_780;
          }
          char v507 = 0;
          unsigned int v508 = 0;
          uint64_t v291 = 0;
          if (v287 <= v286) {
            unint64_t v287 = *((void *)this + 1);
          }
          while (2)
          {
            if (v287 == v286)
            {
              uint64_t v291 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v509 = v286 + 1;
              char v510 = *(unsigned char *)(v288 + v286);
              *((void *)this + 1) = v509;
              v291 |= (unint64_t)(v510 & 0x7F) << v507;
              if (v510 < 0)
              {
                v507 += 7;
                unint64_t v286 = v509;
                BOOL v15 = v508++ > 8;
                if (v15) {
                  goto LABEL_573;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v291 = 0;
              }
            }
            break;
          }
LABEL_780:
          *(void *)(a1 + 240) = v291;
          goto LABEL_821;
        case 0x52u:
          *v8 |= 0x10000000uLL;
          unint64_t v294 = *((void *)this + 1);
          unint64_t v295 = *((void *)this + 2);
          uint64_t v296 = *(void *)this;
          if (v294 <= 0xFFFFFFFFFFFFFFF5 && v294 + 10 <= v295)
          {
            char v297 = 0;
            unsigned int v298 = 0;
            uint64_t v299 = 0;
            do
            {
              unint64_t v300 = v294 + 1;
              *((void *)this + 1) = v294 + 1;
              char v301 = *(unsigned char *)(v296 + v294);
              v299 |= (unint64_t)(v301 & 0x7F) << v297;
              if ((v301 & 0x80) == 0) {
                goto LABEL_784;
              }
              v297 += 7;
              unint64_t v294 = v300;
              BOOL v15 = v298++ > 8;
            }
            while (!v15);
LABEL_580:
            uint64_t v299 = 0;
            goto LABEL_784;
          }
          char v511 = 0;
          unsigned int v512 = 0;
          uint64_t v299 = 0;
          if (v295 <= v294) {
            unint64_t v295 = *((void *)this + 1);
          }
          while (2)
          {
            if (v295 == v294)
            {
              uint64_t v299 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v513 = v294 + 1;
              char v514 = *(unsigned char *)(v296 + v294);
              *((void *)this + 1) = v513;
              v299 |= (unint64_t)(v514 & 0x7F) << v511;
              if (v514 < 0)
              {
                v511 += 7;
                unint64_t v294 = v513;
                BOOL v15 = v512++ > 8;
                if (v15) {
                  goto LABEL_580;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v299 = 0;
              }
            }
            break;
          }
LABEL_784:
          *(void *)(a1 + 232) = v299;
          goto LABEL_821;
        case 0x53u:
          *v8 |= 0x2000uLL;
          unint64_t v302 = *((void *)this + 1);
          unint64_t v303 = *((void *)this + 2);
          uint64_t v304 = *(void *)this;
          if (v302 <= 0xFFFFFFFFFFFFFFF5 && v302 + 10 <= v303)
          {
            char v305 = 0;
            unsigned int v306 = 0;
            uint64_t v307 = 0;
            do
            {
              unint64_t v308 = v302 + 1;
              *((void *)this + 1) = v302 + 1;
              char v309 = *(unsigned char *)(v304 + v302);
              v307 |= (unint64_t)(v309 & 0x7F) << v305;
              if ((v309 & 0x80) == 0) {
                goto LABEL_788;
              }
              v305 += 7;
              unint64_t v302 = v308;
              BOOL v15 = v306++ > 8;
            }
            while (!v15);
LABEL_587:
            uint64_t v307 = 0;
            goto LABEL_788;
          }
          char v515 = 0;
          unsigned int v516 = 0;
          uint64_t v307 = 0;
          if (v303 <= v302) {
            unint64_t v303 = *((void *)this + 1);
          }
          while (2)
          {
            if (v303 == v302)
            {
              uint64_t v307 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v517 = v302 + 1;
              char v518 = *(unsigned char *)(v304 + v302);
              *((void *)this + 1) = v517;
              v307 |= (unint64_t)(v518 & 0x7F) << v515;
              if (v518 < 0)
              {
                v515 += 7;
                unint64_t v302 = v517;
                BOOL v15 = v516++ > 8;
                if (v15) {
                  goto LABEL_587;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v307 = 0;
              }
            }
            break;
          }
LABEL_788:
          *(void *)(a1 + 112) = v307;
          goto LABEL_821;
        case 0x54u:
          *v8 |= 0x10000uLL;
          unint64_t v310 = *((void *)this + 1);
          unint64_t v311 = *((void *)this + 2);
          uint64_t v312 = *(void *)this;
          if (v310 <= 0xFFFFFFFFFFFFFFF5 && v310 + 10 <= v311)
          {
            char v313 = 0;
            unsigned int v314 = 0;
            uint64_t v315 = 0;
            do
            {
              unint64_t v316 = v310 + 1;
              *((void *)this + 1) = v310 + 1;
              char v317 = *(unsigned char *)(v312 + v310);
              v315 |= (unint64_t)(v317 & 0x7F) << v313;
              if ((v317 & 0x80) == 0) {
                goto LABEL_792;
              }
              v313 += 7;
              unint64_t v310 = v316;
              BOOL v15 = v314++ > 8;
            }
            while (!v15);
LABEL_594:
            uint64_t v315 = 0;
            goto LABEL_792;
          }
          char v519 = 0;
          unsigned int v520 = 0;
          uint64_t v315 = 0;
          if (v311 <= v310) {
            unint64_t v311 = *((void *)this + 1);
          }
          while (2)
          {
            if (v311 == v310)
            {
              uint64_t v315 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v521 = v310 + 1;
              char v522 = *(unsigned char *)(v312 + v310);
              *((void *)this + 1) = v521;
              v315 |= (unint64_t)(v522 & 0x7F) << v519;
              if (v522 < 0)
              {
                v519 += 7;
                unint64_t v310 = v521;
                BOOL v15 = v520++ > 8;
                if (v15) {
                  goto LABEL_594;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v315 = 0;
              }
            }
            break;
          }
LABEL_792:
          *(void *)(a1 + 136) = v315;
          goto LABEL_821;
        case 0x55u:
          *v8 |= 4uLL;
          unint64_t v318 = *((void *)this + 1);
          unint64_t v319 = *((void *)this + 2);
          uint64_t v320 = *(void *)this;
          if (v318 <= 0xFFFFFFFFFFFFFFF5 && v318 + 10 <= v319)
          {
            char v321 = 0;
            unsigned int v322 = 0;
            uint64_t v323 = 0;
            do
            {
              unint64_t v324 = v318 + 1;
              *((void *)this + 1) = v318 + 1;
              char v325 = *(unsigned char *)(v320 + v318);
              v323 |= (unint64_t)(v325 & 0x7F) << v321;
              if ((v325 & 0x80) == 0) {
                goto LABEL_796;
              }
              v321 += 7;
              unint64_t v318 = v324;
              BOOL v15 = v322++ > 8;
            }
            while (!v15);
LABEL_601:
            uint64_t v323 = 0;
            goto LABEL_796;
          }
          char v523 = 0;
          unsigned int v524 = 0;
          uint64_t v323 = 0;
          if (v319 <= v318) {
            unint64_t v319 = *((void *)this + 1);
          }
          while (2)
          {
            if (v319 == v318)
            {
              uint64_t v323 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v525 = v318 + 1;
              char v526 = *(unsigned char *)(v320 + v318);
              *((void *)this + 1) = v525;
              v323 |= (unint64_t)(v526 & 0x7F) << v523;
              if (v526 < 0)
              {
                v523 += 7;
                unint64_t v318 = v525;
                BOOL v15 = v524++ > 8;
                if (v15) {
                  goto LABEL_601;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v323 = 0;
              }
            }
            break;
          }
LABEL_796:
          *(void *)(a1 + 24) = v323;
          goto LABEL_821;
        case 0x56u:
          *v8 |= 0x40000uLL;
          unint64_t v326 = *((void *)this + 1);
          unint64_t v327 = *((void *)this + 2);
          uint64_t v328 = *(void *)this;
          if (v326 <= 0xFFFFFFFFFFFFFFF5 && v326 + 10 <= v327)
          {
            char v329 = 0;
            unsigned int v330 = 0;
            uint64_t v331 = 0;
            do
            {
              unint64_t v332 = v326 + 1;
              *((void *)this + 1) = v326 + 1;
              char v333 = *(unsigned char *)(v328 + v326);
              v331 |= (unint64_t)(v333 & 0x7F) << v329;
              if ((v333 & 0x80) == 0) {
                goto LABEL_800;
              }
              v329 += 7;
              unint64_t v326 = v332;
              BOOL v15 = v330++ > 8;
            }
            while (!v15);
LABEL_608:
            uint64_t v331 = 0;
            goto LABEL_800;
          }
          char v527 = 0;
          unsigned int v528 = 0;
          uint64_t v331 = 0;
          if (v327 <= v326) {
            unint64_t v327 = *((void *)this + 1);
          }
          while (2)
          {
            if (v327 == v326)
            {
              uint64_t v331 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v529 = v326 + 1;
              char v530 = *(unsigned char *)(v328 + v326);
              *((void *)this + 1) = v529;
              v331 |= (unint64_t)(v530 & 0x7F) << v527;
              if (v530 < 0)
              {
                v527 += 7;
                unint64_t v326 = v529;
                BOOL v15 = v528++ > 8;
                if (v15) {
                  goto LABEL_608;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v331 = 0;
              }
            }
            break;
          }
LABEL_800:
          *(void *)(a1 + 152) = v331;
          goto LABEL_821;
        case 0x57u:
          *v8 |= 0x20000uLL;
          unint64_t v334 = *((void *)this + 1);
          unint64_t v335 = *((void *)this + 2);
          uint64_t v336 = *(void *)this;
          if (v334 <= 0xFFFFFFFFFFFFFFF5 && v334 + 10 <= v335)
          {
            char v337 = 0;
            unsigned int v338 = 0;
            uint64_t v339 = 0;
            do
            {
              unint64_t v340 = v334 + 1;
              *((void *)this + 1) = v334 + 1;
              char v341 = *(unsigned char *)(v336 + v334);
              v339 |= (unint64_t)(v341 & 0x7F) << v337;
              if ((v341 & 0x80) == 0) {
                goto LABEL_804;
              }
              v337 += 7;
              unint64_t v334 = v340;
              BOOL v15 = v338++ > 8;
            }
            while (!v15);
LABEL_615:
            uint64_t v339 = 0;
            goto LABEL_804;
          }
          char v531 = 0;
          unsigned int v532 = 0;
          uint64_t v339 = 0;
          if (v335 <= v334) {
            unint64_t v335 = *((void *)this + 1);
          }
          while (2)
          {
            if (v335 == v334)
            {
              uint64_t v339 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v533 = v334 + 1;
              char v534 = *(unsigned char *)(v336 + v334);
              *((void *)this + 1) = v533;
              v339 |= (unint64_t)(v534 & 0x7F) << v531;
              if (v534 < 0)
              {
                v531 += 7;
                unint64_t v334 = v533;
                BOOL v15 = v532++ > 8;
                if (v15) {
                  goto LABEL_615;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v339 = 0;
              }
            }
            break;
          }
LABEL_804:
          *(void *)(a1 + 144) = v339;
          goto LABEL_821;
        case 0x58u:
          *v8 |= 0x80uLL;
          unint64_t v342 = *((void *)this + 1);
          unint64_t v343 = *((void *)this + 2);
          uint64_t v344 = *(void *)this;
          if (v342 <= 0xFFFFFFFFFFFFFFF5 && v342 + 10 <= v343)
          {
            char v345 = 0;
            unsigned int v346 = 0;
            uint64_t v347 = 0;
            do
            {
              unint64_t v348 = v342 + 1;
              *((void *)this + 1) = v342 + 1;
              char v349 = *(unsigned char *)(v344 + v342);
              v347 |= (unint64_t)(v349 & 0x7F) << v345;
              if ((v349 & 0x80) == 0) {
                goto LABEL_808;
              }
              v345 += 7;
              unint64_t v342 = v348;
              BOOL v15 = v346++ > 8;
            }
            while (!v15);
LABEL_622:
            uint64_t v347 = 0;
            goto LABEL_808;
          }
          char v535 = 0;
          unsigned int v536 = 0;
          uint64_t v347 = 0;
          if (v343 <= v342) {
            unint64_t v343 = *((void *)this + 1);
          }
          while (2)
          {
            if (v343 == v342)
            {
              uint64_t v347 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v537 = v342 + 1;
              char v538 = *(unsigned char *)(v344 + v342);
              *((void *)this + 1) = v537;
              v347 |= (unint64_t)(v538 & 0x7F) << v535;
              if (v538 < 0)
              {
                v535 += 7;
                unint64_t v342 = v537;
                BOOL v15 = v536++ > 8;
                if (v15) {
                  goto LABEL_622;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v347 = 0;
              }
            }
            break;
          }
LABEL_808:
          *(void *)(a1 + 64) = v347;
          goto LABEL_821;
        case 0x59u:
          *v8 |= 0x1000uLL;
          unint64_t v350 = *((void *)this + 1);
          unint64_t v351 = *((void *)this + 2);
          uint64_t v352 = *(void *)this;
          if (v350 <= 0xFFFFFFFFFFFFFFF5 && v350 + 10 <= v351)
          {
            char v353 = 0;
            unsigned int v354 = 0;
            uint64_t v355 = 0;
            do
            {
              unint64_t v356 = v350 + 1;
              *((void *)this + 1) = v350 + 1;
              char v357 = *(unsigned char *)(v352 + v350);
              v355 |= (unint64_t)(v357 & 0x7F) << v353;
              if ((v357 & 0x80) == 0) {
                goto LABEL_812;
              }
              v353 += 7;
              unint64_t v350 = v356;
              BOOL v15 = v354++ > 8;
            }
            while (!v15);
LABEL_629:
            uint64_t v355 = 0;
            goto LABEL_812;
          }
          char v539 = 0;
          unsigned int v540 = 0;
          uint64_t v355 = 0;
          if (v351 <= v350) {
            unint64_t v351 = *((void *)this + 1);
          }
          while (2)
          {
            if (v351 == v350)
            {
              uint64_t v355 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v541 = v350 + 1;
              char v542 = *(unsigned char *)(v352 + v350);
              *((void *)this + 1) = v541;
              v355 |= (unint64_t)(v542 & 0x7F) << v539;
              if (v542 < 0)
              {
                v539 += 7;
                unint64_t v350 = v541;
                BOOL v15 = v540++ > 8;
                if (v15) {
                  goto LABEL_629;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v355 = 0;
              }
            }
            break;
          }
LABEL_812:
          *(void *)(a1 + 104) = v355;
          goto LABEL_821;
        case 0x64u:
          *v8 |= 0x4000000000uLL;
          unint64_t v358 = *((void *)this + 1);
          unint64_t v359 = *((void *)this + 2);
          uint64_t v360 = *(void *)this;
          if (v358 <= 0xFFFFFFFFFFFFFFF5 && v358 + 10 <= v359)
          {
            char v361 = 0;
            unsigned int v362 = 0;
            uint64_t v363 = 0;
            do
            {
              unint64_t v364 = v358 + 1;
              *((void *)this + 1) = v358 + 1;
              char v365 = *(unsigned char *)(v360 + v358);
              v363 |= (unint64_t)(v365 & 0x7F) << v361;
              if ((v365 & 0x80) == 0) {
                goto LABEL_816;
              }
              v361 += 7;
              unint64_t v358 = v364;
              BOOL v15 = v362++ > 8;
            }
            while (!v15);
LABEL_636:
            uint64_t v363 = 0;
            goto LABEL_816;
          }
          char v543 = 0;
          unsigned int v544 = 0;
          uint64_t v363 = 0;
          if (v359 <= v358) {
            unint64_t v359 = *((void *)this + 1);
          }
          while (2)
          {
            if (v359 == v358)
            {
              uint64_t v363 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v545 = v358 + 1;
              char v546 = *(unsigned char *)(v360 + v358);
              *((void *)this + 1) = v545;
              v363 |= (unint64_t)(v546 & 0x7F) << v543;
              if (v546 < 0)
              {
                v543 += 7;
                unint64_t v358 = v545;
                BOOL v15 = v544++ > 8;
                if (v15) {
                  goto LABEL_636;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v363 = 0;
              }
            }
            break;
          }
LABEL_816:
          *(void *)(a1 + 312) = v363;
          goto LABEL_821;
        case 0x65u:
          *v8 |= 0x1000000000uLL;
          unint64_t v366 = *((void *)this + 1);
          unint64_t v367 = *((void *)this + 2);
          uint64_t v368 = *(void *)this;
          if (v366 <= 0xFFFFFFFFFFFFFFF5 && v366 + 10 <= v367)
          {
            char v369 = 0;
            unsigned int v370 = 0;
            uint64_t v371 = 0;
            do
            {
              unint64_t v372 = v366 + 1;
              *((void *)this + 1) = v366 + 1;
              char v373 = *(unsigned char *)(v368 + v366);
              v371 |= (unint64_t)(v373 & 0x7F) << v369;
              if ((v373 & 0x80) == 0) {
                goto LABEL_820;
              }
              v369 += 7;
              unint64_t v366 = v372;
              BOOL v15 = v370++ > 8;
            }
            while (!v15);
LABEL_643:
            uint64_t v371 = 0;
            goto LABEL_820;
          }
          char v547 = 0;
          unsigned int v548 = 0;
          uint64_t v371 = 0;
          if (v367 <= v366) {
            unint64_t v367 = *((void *)this + 1);
          }
          break;
        case 0x66u:
          *v8 |= 0x2000000000uLL;
          unint64_t v374 = *((void *)this + 1);
          if (v374 <= 0xFFFFFFFFFFFFFFF7 && v374 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 304) = *(void *)(*(void *)this + v374);
            *((void *)this + 1) += 8;
          }
          else
          {
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_821;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          goto LABEL_821;
      }
      while (1)
      {
        if (v367 == v366)
        {
          uint64_t v371 = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_820;
        }
        unint64_t v549 = v366 + 1;
        char v550 = *(unsigned char *)(v368 + v366);
        *((void *)this + 1) = v549;
        v371 |= (unint64_t)(v550 & 0x7F) << v547;
        if ((v550 & 0x80) == 0) {
          break;
        }
        v547 += 7;
        unint64_t v366 = v549;
        BOOL v15 = v548++ > 8;
        if (v15) {
          goto LABEL_643;
        }
      }
      if (*((unsigned char *)this + 24)) {
        uint64_t v371 = 0;
      }
LABEL_820:
      *(void *)(a1 + 296) = v371;
LABEL_821:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v16 = 0;
    unsigned int v17 = 0;
    unint64_t v12 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v18 = v2 + 1;
      char v19 = *(unsigned char *)(v9 + v2);
      *((void *)this + 1) = v18;
      v12 |= (unint64_t)(v19 & 0x7F) << v16;
      if ((v19 & 0x80) == 0) {
        goto LABEL_21;
      }
      v16 += 7;
      unint64_t v2 = v18;
      if (v17++ >= 9)
      {
LABEL_20:
        unint64_t v12 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B21BF4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = (uint64_t *)(result + 364);
  uint64_t v5 = *(void *)(result + 364);
  if ((v5 & 0x40000000) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    uint64_t v5 = *v4;
    if ((*v4 & 0x80000000) == 0)
    {
LABEL_3:
      if ((v5 & 0x80000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_49;
    }
  }
  else if ((v5 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x80000) == 0)
  {
LABEL_4:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x100000) == 0)
  {
LABEL_5:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x200000) == 0)
  {
LABEL_6:
    if ((v5 & 0x8000000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x8000000000) == 0)
  {
LABEL_7:
    if ((v5 & 0x40000000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x40000000000) == 0)
  {
LABEL_8:
    if ((v5 & 0x10000000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x10000000000) == 0)
  {
LABEL_9:
    if ((v5 & 0x20000000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x20000000000) == 0)
  {
LABEL_10:
    if ((v5 & 0x80000000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x80000000000) == 0)
  {
LABEL_11:
    if ((v5 & 0x100000000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x100000000000) == 0)
  {
LABEL_12:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x1000000) == 0)
  {
LABEL_13:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x8000000) == 0)
  {
LABEL_14:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_60;
  }
LABEL_59:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x2000000) == 0)
  {
LABEL_15:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x4000000) == 0)
  {
LABEL_16:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x400000) == 0)
  {
LABEL_17:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x800000) == 0)
  {
LABEL_18:
    if ((v5 & 0x20) == 0) {
      goto LABEL_19;
    }
    goto LABEL_64;
  }
LABEL_63:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x20) == 0)
  {
LABEL_19:
    if ((v5 & 8) == 0) {
      goto LABEL_20;
    }
    goto LABEL_65;
  }
LABEL_64:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 8) == 0)
  {
LABEL_20:
    if ((v5 & 1) == 0) {
      goto LABEL_21;
    }
    goto LABEL_66;
  }
LABEL_65:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 1) == 0)
  {
LABEL_21:
    if ((v5 & 0x40) == 0) {
      goto LABEL_22;
    }
    goto LABEL_67;
  }
LABEL_66:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x40) == 0)
  {
LABEL_22:
    if ((v5 & 0x100) == 0) {
      goto LABEL_23;
    }
    goto LABEL_68;
  }
LABEL_67:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x100) == 0)
  {
LABEL_23:
    if ((v5 & 0x10) == 0) {
      goto LABEL_24;
    }
    goto LABEL_69;
  }
LABEL_68:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x10) == 0)
  {
LABEL_24:
    if ((v5 & 0x200) == 0) {
      goto LABEL_25;
    }
    goto LABEL_70;
  }
LABEL_69:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x200) == 0)
  {
LABEL_25:
    if ((v5 & 0x400) == 0) {
      goto LABEL_26;
    }
    goto LABEL_71;
  }
LABEL_70:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x400) == 0)
  {
LABEL_26:
    if ((v5 & 0x800) == 0) {
      goto LABEL_27;
    }
    goto LABEL_72;
  }
LABEL_71:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x800) == 0)
  {
LABEL_27:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_73;
  }
LABEL_72:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x4000) == 0)
  {
LABEL_28:
    if ((v5 & 2) == 0) {
      goto LABEL_29;
    }
    goto LABEL_74;
  }
LABEL_73:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 2) == 0)
  {
LABEL_29:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_75;
  }
LABEL_74:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x8000) == 0)
  {
LABEL_30:
    if ((v5 & 0x800000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_76;
  }
LABEL_75:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x800000000) == 0)
  {
LABEL_31:
    if ((v5 & 0x400000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_77;
  }
LABEL_76:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x400000000) == 0)
  {
LABEL_32:
    if ((v5 & 0x200000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_78;
  }
LABEL_77:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x200000000) == 0)
  {
LABEL_33:
    if ((v5 & 0x100000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_79;
  }
LABEL_78:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x100000000) == 0)
  {
LABEL_34:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_80;
  }
LABEL_79:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x20000000) == 0)
  {
LABEL_35:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_81;
  }
LABEL_80:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x10000000) == 0)
  {
LABEL_36:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_82;
  }
LABEL_81:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x2000) == 0)
  {
LABEL_37:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_83;
  }
LABEL_82:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x10000) == 0)
  {
LABEL_38:
    if ((v5 & 4) == 0) {
      goto LABEL_39;
    }
    goto LABEL_84;
  }
LABEL_83:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 4) == 0)
  {
LABEL_39:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_85;
  }
LABEL_84:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x40000) == 0)
  {
LABEL_40:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_86;
  }
LABEL_85:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x20000) == 0)
  {
LABEL_41:
    if ((v5 & 0x80) == 0) {
      goto LABEL_42;
    }
    goto LABEL_87;
  }
LABEL_86:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x80) == 0)
  {
LABEL_42:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_88;
  }
LABEL_87:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x1000) == 0)
  {
LABEL_43:
    if ((v5 & 0x4000000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_89;
  }
LABEL_88:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x4000000000) == 0)
  {
LABEL_44:
    if ((v5 & 0x1000000000) == 0) {
      goto LABEL_45;
    }
LABEL_90:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*v4 & 0x2000000000) == 0) {
      return result;
    }
    goto LABEL_91;
  }
LABEL_89:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x1000000000) != 0) {
    goto LABEL_90;
  }
LABEL_45:
  if ((v5 & 0x2000000000) == 0) {
    return result;
  }
LABEL_91:
  double v6 = *(double *)(v3 + 304);

  return PB::Writer::write(this, v6);
}

void *sub_227B22128(void *result)
{
  *uint64_t result = &unk_26DC1FAF8;
  *(void *)((char *)result + 156) = 0;
  return result;
}

void sub_227B22150(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227B22188(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC1FAF8;
  *(void *)(a1 + 156) = 0;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 4) != 0)
  {
    double result = *(double *)(a2 + 24);
    uint64_t v3 = 4;
    *(void *)(a1 + 156) = 4;
    *(double *)(a1 + 24) = result;
    uint64_t v2 = *(void *)(a2 + 156);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v3 = 0;
  if ((v2 & 8) != 0)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 32);
    v3 |= 8uLL;
    *(void *)(a1 + 156) = v3;
    *(void *)(a1 + 32) = v5;
    uint64_t v2 = *(void *)(a2 + 156);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    v3 |= 2uLL;
    *(void *)(a1 + 156) = v3;
    *(void *)(a1 + 16) = v6;
    uint64_t v2 = *(void *)(a2 + 156);
    if ((v2 & 0x400) == 0)
    {
LABEL_8:
      if ((v2 & 0x200) == 0) {
        goto LABEL_9;
      }
      goto LABEL_43;
    }
  }
  else if ((v2 & 0x400) == 0)
  {
    goto LABEL_8;
  }
  LODWORD(result) = *(_DWORD *)(a2 + 64);
  v3 |= 0x400uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 64) = LODWORD(result);
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x200) == 0)
  {
LABEL_9:
    if ((v2 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_44;
  }
LABEL_43:
  LODWORD(result) = *(_DWORD *)(a2 + 60);
  v3 |= 0x200uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 60) = LODWORD(result);
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x100) == 0)
  {
LABEL_10:
    if ((v2 & 0x800) == 0) {
      goto LABEL_11;
    }
    goto LABEL_45;
  }
LABEL_44:
  LODWORD(result) = *(_DWORD *)(a2 + 56);
  v3 |= 0x100uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 56) = LODWORD(result);
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x800) == 0)
  {
LABEL_11:
    if ((v2 & 0x80000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_46;
  }
LABEL_45:
  int v7 = *(_DWORD *)(a2 + 68);
  v3 |= 0x800uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 68) = v7;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x80000000) == 0)
  {
LABEL_12:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_47;
  }
LABEL_46:
  int v8 = *(_DWORD *)(a2 + 148);
  v3 |= 0x80000000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 148) = v8;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x1000) == 0)
  {
LABEL_13:
    if ((v2 & 0x10000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_48;
  }
LABEL_47:
  int v9 = *(_DWORD *)(a2 + 72);
  v3 |= 0x1000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 72) = v9;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_14:
    if ((v2 & 0x20000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_49;
  }
LABEL_48:
  LODWORD(result) = *(_DWORD *)(a2 + 136);
  v3 |= 0x10000000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 136) = LODWORD(result);
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x20000000) == 0)
  {
LABEL_15:
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_50;
  }
LABEL_49:
  LODWORD(result) = *(_DWORD *)(a2 + 140);
  v3 |= 0x20000000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 140) = LODWORD(result);
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x8000000) == 0)
  {
LABEL_16:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_51;
  }
LABEL_50:
  LODWORD(result) = *(_DWORD *)(a2 + 132);
  v3 |= 0x8000000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 132) = LODWORD(result);
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x40000) == 0)
  {
LABEL_17:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_52;
  }
LABEL_51:
  int v10 = *(_DWORD *)(a2 + 96);
  v3 |= 0x40000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 96) = v10;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x4000) == 0)
  {
LABEL_18:
    if ((v2 & 0x20) == 0) {
      goto LABEL_19;
    }
    goto LABEL_53;
  }
LABEL_52:
  LODWORD(result) = *(_DWORD *)(a2 + 80);
  v3 |= 0x4000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 80) = LODWORD(result);
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x20) == 0)
  {
LABEL_19:
    if ((v2 & 0x400000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_54;
  }
LABEL_53:
  int v11 = *(_DWORD *)(a2 + 44);
  v3 |= 0x20uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 44) = v11;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x400000000) == 0)
  {
LABEL_20:
    if ((v2 & 0x200000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_55;
  }
LABEL_54:
  char v12 = *(unsigned char *)(a2 + 154);
  v3 |= 0x400000000uLL;
  *(void *)(a1 + 156) = v3;
  *(unsigned char *)(a1 + 154) = v12;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x200000000) == 0)
  {
LABEL_21:
    if ((v2 & 0x80) == 0) {
      goto LABEL_22;
    }
    goto LABEL_56;
  }
LABEL_55:
  char v13 = *(unsigned char *)(a2 + 153);
  v3 |= 0x200000000uLL;
  *(void *)(a1 + 156) = v3;
  *(unsigned char *)(a1 + 153) = v13;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x80) == 0)
  {
LABEL_22:
    if ((v2 & 0x40000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_57;
  }
LABEL_56:
  int v14 = *(_DWORD *)(a2 + 52);
  v3 |= 0x80uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 52) = v14;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x40000000) == 0)
  {
LABEL_23:
    if ((v2 & 0x2000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_58;
  }
LABEL_57:
  int v15 = *(_DWORD *)(a2 + 144);
  v3 |= 0x40000000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 144) = v15;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x2000000) == 0)
  {
LABEL_24:
    if ((v2 & 0x800000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_59;
  }
LABEL_58:
  int v16 = *(_DWORD *)(a2 + 124);
  v3 |= 0x2000000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 124) = v16;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x800000000) == 0)
  {
LABEL_25:
    if ((v2 & 0x100000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_60;
  }
LABEL_59:
  char v17 = *(unsigned char *)(a2 + 155);
  v3 |= 0x800000000uLL;
  *(void *)(a1 + 156) = v3;
  *(unsigned char *)(a1 + 155) = v17;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x100000000) == 0)
  {
LABEL_26:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_61;
  }
LABEL_60:
  char v18 = *(unsigned char *)(a2 + 152);
  v3 |= 0x100000000uLL;
  *(void *)(a1 + 156) = v3;
  *(unsigned char *)(a1 + 152) = v18;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x20000) == 0)
  {
LABEL_27:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_62;
  }
LABEL_61:
  int v19 = *(_DWORD *)(a2 + 92);
  v3 |= 0x20000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 92) = v19;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x200000) == 0)
  {
LABEL_28:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_63;
  }
LABEL_62:
  int v20 = *(_DWORD *)(a2 + 108);
  v3 |= 0x200000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 108) = v20;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x400000) == 0)
  {
LABEL_29:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_64;
  }
LABEL_63:
  int v21 = *(_DWORD *)(a2 + 112);
  v3 |= 0x400000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 112) = v21;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x80000) == 0)
  {
LABEL_30:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_65;
  }
LABEL_64:
  int v22 = *(_DWORD *)(a2 + 100);
  v3 |= 0x80000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 100) = v22;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x8000) == 0)
  {
LABEL_31:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_66;
  }
LABEL_65:
  int v23 = *(_DWORD *)(a2 + 84);
  v3 |= 0x8000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 84) = v23;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x800000) == 0)
  {
LABEL_32:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_67;
  }
LABEL_66:
  LODWORD(result) = *(_DWORD *)(a2 + 116);
  v3 |= 0x800000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 116) = LODWORD(result);
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x100000) == 0)
  {
LABEL_33:
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_68;
  }
LABEL_67:
  int v24 = *(_DWORD *)(a2 + 104);
  v3 |= 0x100000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 104) = v24;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_34:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_69;
  }
LABEL_68:
  LODWORD(result) = *(_DWORD *)(a2 + 128);
  v3 |= 0x4000000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 128) = LODWORD(result);
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_35:
    if ((v2 & 0x10) == 0) {
      goto LABEL_36;
    }
    goto LABEL_70;
  }
LABEL_69:
  int v25 = *(_DWORD *)(a2 + 120);
  v3 |= 0x1000000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 120) = v25;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x10) == 0)
  {
LABEL_36:
    if ((v2 & 0x40) == 0) {
      goto LABEL_37;
    }
    goto LABEL_71;
  }
LABEL_70:
  int v26 = *(_DWORD *)(a2 + 40);
  v3 |= 0x10uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 40) = v26;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x40) == 0)
  {
LABEL_37:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_72;
  }
LABEL_71:
  LODWORD(result) = *(_DWORD *)(a2 + 48);
  v3 |= 0x40uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 48) = LODWORD(result);
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x10000) == 0)
  {
LABEL_38:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_73;
  }
LABEL_72:
  int v27 = *(_DWORD *)(a2 + 88);
  v3 |= 0x10000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 88) = v27;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x2000) == 0)
  {
LABEL_39:
    if ((v2 & 1) == 0) {
      return result;
    }
LABEL_74:
    double result = *(double *)(a2 + 8);
    *(void *)(a1 + 156) = v3 | 1;
    *(double *)(a1 + 8) = result;
    return result;
  }
LABEL_73:
  int v28 = *(_DWORD *)(a2 + 76);
  v3 |= 0x2000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 76) = v28;
  if (*(void *)(a2 + 156)) {
    goto LABEL_74;
  }
  return result;
}

uint64_t sub_227B225A4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x10) != 0)
  {
    PB::TextFormatter::format(this, "conisderedSOS");
    uint64_t v5 = *(void *)(a1 + 156);
    if ((v5 & 0x20) == 0)
    {
LABEL_3:
      if ((v5 & 0x100000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_43;
    }
  }
  else if ((v5 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "deltaSteps");
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x100000000) == 0)
  {
LABEL_4:
    if ((v5 & 0x40) == 0) {
      goto LABEL_5;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "didCancelSOS");
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x40) == 0)
  {
LABEL_5:
    if ((v5 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "distanceTraveled", *(float *)(a1 + 48));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 1) == 0)
  {
LABEL_6:
    if ((v5 & 2) == 0) {
      goto LABEL_7;
    }
    goto LABEL_46;
  }
LABEL_45:
  PB::TextFormatter::format(this, "fallAlertUndelayedTimestamp", *(double *)(a1 + 8));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 2) == 0)
  {
LABEL_7:
    if ((v5 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_47;
  }
LABEL_46:
  PB::TextFormatter::format(this, "fallTime");
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x80) == 0)
  {
LABEL_8:
    if ((v5 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(this, "fromState");
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x100) == 0)
  {
LABEL_9:
    if ((v5 & 4) == 0) {
      goto LABEL_10;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(this, "gyroMaxMean", *(float *)(a1 + 56));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 4) == 0)
  {
LABEL_10:
    if ((v5 & 0x200000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_50;
  }
LABEL_49:
  PB::TextFormatter::format(this, "iostime", *(double *)(a1 + 24));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x200000000) == 0)
  {
LABEL_11:
    if ((v5 & 0x400000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_51;
  }
LABEL_50:
  PB::TextFormatter::format(this, "isActive");
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x400000000) == 0)
  {
LABEL_12:
    if ((v5 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_52;
  }
LABEL_51:
  PB::TextFormatter::format(this, "isStand");
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x200) == 0)
  {
LABEL_13:
    if ((v5 & 0x400) == 0) {
      goto LABEL_14;
    }
    goto LABEL_53;
  }
LABEL_52:
  PB::TextFormatter::format(this, "magnitudeDiffUnity", *(float *)(a1 + 60));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x400) == 0)
  {
LABEL_14:
    if ((v5 & 0x800) == 0) {
      goto LABEL_15;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(this, "maxAccelStdAxis", *(float *)(a1 + 64));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x800) == 0)
  {
LABEL_15:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(this, "maxNumQuiescentBins");
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x1000) == 0)
  {
LABEL_16:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_56;
  }
LABEL_55:
  PB::TextFormatter::format(this, "maxNumStaticBins");
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x2000) == 0)
  {
LABEL_17:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_57;
  }
LABEL_56:
  PB::TextFormatter::format(this, "nominalQuiescentThreshold");
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x4000) == 0)
  {
LABEL_18:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_58;
  }
LABEL_57:
  PB::TextFormatter::format(this, "normalizedIQR", *(float *)(a1 + 80));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x8000) == 0)
  {
LABEL_19:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_59;
  }
LABEL_58:
  PB::TextFormatter::format(this, "numActiveBins");
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x10000) == 0)
  {
LABEL_20:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_60;
  }
LABEL_59:
  PB::TextFormatter::format(this, "numCyclingEpochs");
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x20000) == 0)
  {
LABEL_21:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_61;
  }
LABEL_60:
  PB::TextFormatter::format(this, "numNonzeroStepEpochs");
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x40000) == 0)
  {
LABEL_22:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_62;
  }
LABEL_61:
  PB::TextFormatter::format(this, "numPeaks");
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x80000) == 0)
  {
LABEL_23:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_63;
  }
LABEL_62:
  PB::TextFormatter::format(this, "numQuiescentBins");
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x100000) == 0)
  {
LABEL_24:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_64;
  }
LABEL_63:
  PB::TextFormatter::format(this, "numSharpPeaks");
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x200000) == 0)
  {
LABEL_25:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_65;
  }
LABEL_64:
  PB::TextFormatter::format(this, "numStandBins");
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x400000) == 0)
  {
LABEL_26:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_66;
  }
LABEL_65:
  PB::TextFormatter::format(this, "numStaticBins");
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x800000) == 0)
  {
LABEL_27:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_67;
  }
LABEL_66:
  PB::TextFormatter::format(this, "onBodyFeature", *(float *)(a1 + 116));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_28:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_68;
  }
LABEL_67:
  PB::TextFormatter::format(this, "operatingMode");
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_29:
    if ((v5 & 8) == 0) {
      goto LABEL_30;
    }
    goto LABEL_69;
  }
LABEL_68:
  PB::TextFormatter::format(this, "quiescentThreshold");
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 8) == 0)
  {
LABEL_30:
    if ((v5 & 0x800000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_70;
  }
LABEL_69:
  PB::TextFormatter::format(this, "sensorTime");
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x800000000) == 0)
  {
LABEL_31:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_71;
  }
LABEL_70:
  PB::TextFormatter::format(this, "sentFallAlert");
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_32:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_72;
  }
LABEL_71:
  PB::TextFormatter::format(this, "sharpPeaksDelaySpread", *(float *)(a1 + 128));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_33:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_73;
  }
LABEL_72:
  PB::TextFormatter::format(this, "sumHighQPeaksInDecLowFreqFFT", *(float *)(a1 + 132));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_34:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_74;
  }
LABEL_73:
  PB::TextFormatter::format(this, "sumHighQPeaksInHighFreqFFT", *(float *)(a1 + 136));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x20000000) == 0)
  {
LABEL_35:
    if ((v5 & 0x40000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_75;
  }
LABEL_74:
  PB::TextFormatter::format(this, "sumHighQPeaksInLowFreqFFT", *(float *)(a1 + 140));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x40000000) == 0)
  {
LABEL_36:
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_37;
  }
LABEL_75:
  PB::TextFormatter::format(this, "toState");
  if ((*(void *)(a1 + 156) & 0x80000000) != 0) {
LABEL_37:
  }
    PB::TextFormatter::format(this, "totalNumStaticBins");
LABEL_38:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B22A68(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(void *)(a1 + 156) |= 4uLL;
          unint64_t v20 = *((void *)this + 1);
          if (v20 > 0xFFFFFFFFFFFFFFF7 || v20 + 8 > *((void *)this + 2)) {
            goto LABEL_209;
          }
          *(void *)(a1 + 24) = *(void *)(*(void *)this + v20);
          goto LABEL_364;
        case 2u:
          *(void *)(a1 + 156) |= 8uLL;
          unint64_t v22 = *((void *)this + 1);
          unint64_t v23 = *((void *)this + 2);
          uint64_t v24 = *(void *)this;
          if (v22 <= 0xFFFFFFFFFFFFFFF5 && v22 + 10 <= v23)
          {
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v27 = 0;
            do
            {
              unint64_t v28 = v22 + 1;
              *((void *)this + 1) = v22 + 1;
              char v29 = *(unsigned char *)(v24 + v22);
              v27 |= (unint64_t)(v29 & 0x7F) << v25;
              if ((v29 & 0x80) == 0) {
                goto LABEL_368;
              }
              v25 += 7;
              unint64_t v22 = v28;
              BOOL v14 = v26++ > 8;
            }
            while (!v14);
LABEL_221:
            uint64_t v27 = 0;
            goto LABEL_368;
          }
          char v211 = 0;
          unsigned int v212 = 0;
          uint64_t v27 = 0;
          if (v23 <= v22) {
            unint64_t v23 = *((void *)this + 1);
          }
          while (2)
          {
            if (v23 == v22)
            {
              uint64_t v27 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v213 = v22 + 1;
              char v214 = *(unsigned char *)(v24 + v22);
              *((void *)this + 1) = v213;
              v27 |= (unint64_t)(v214 & 0x7F) << v211;
              if (v214 < 0)
              {
                v211 += 7;
                unint64_t v22 = v213;
                BOOL v14 = v212++ > 8;
                if (v14) {
                  goto LABEL_221;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v27 = 0;
              }
            }
            break;
          }
LABEL_368:
          *(void *)(a1 + 32) = v27;
          goto LABEL_210;
        case 3u:
          *(void *)(a1 + 156) |= 2uLL;
          unint64_t v30 = *((void *)this + 1);
          unint64_t v31 = *((void *)this + 2);
          uint64_t v32 = *(void *)this;
          if (v30 <= 0xFFFFFFFFFFFFFFF5 && v30 + 10 <= v31)
          {
            char v33 = 0;
            unsigned int v34 = 0;
            uint64_t v35 = 0;
            do
            {
              unint64_t v36 = v30 + 1;
              *((void *)this + 1) = v30 + 1;
              char v37 = *(unsigned char *)(v32 + v30);
              v35 |= (unint64_t)(v37 & 0x7F) << v33;
              if ((v37 & 0x80) == 0) {
                goto LABEL_372;
              }
              v33 += 7;
              unint64_t v30 = v36;
              BOOL v14 = v34++ > 8;
            }
            while (!v14);
LABEL_228:
            uint64_t v35 = 0;
            goto LABEL_372;
          }
          char v215 = 0;
          unsigned int v216 = 0;
          uint64_t v35 = 0;
          if (v31 <= v30) {
            unint64_t v31 = *((void *)this + 1);
          }
          while (2)
          {
            if (v31 == v30)
            {
              uint64_t v35 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v217 = v30 + 1;
              char v218 = *(unsigned char *)(v32 + v30);
              *((void *)this + 1) = v217;
              v35 |= (unint64_t)(v218 & 0x7F) << v215;
              if (v218 < 0)
              {
                v215 += 7;
                unint64_t v30 = v217;
                BOOL v14 = v216++ > 8;
                if (v14) {
                  goto LABEL_228;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v35 = 0;
              }
            }
            break;
          }
LABEL_372:
          *(void *)(a1 + 16) = v35;
          goto LABEL_210;
        case 4u:
          *(void *)(a1 + 156) |= 0x400uLL;
          unint64_t v38 = *((void *)this + 1);
          if (v38 > 0xFFFFFFFFFFFFFFFBLL || v38 + 4 > *((void *)this + 2)) {
            goto LABEL_209;
          }
          *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v38);
          goto LABEL_191;
        case 5u:
          *(void *)(a1 + 156) |= 0x200uLL;
          unint64_t v39 = *((void *)this + 1);
          if (v39 > 0xFFFFFFFFFFFFFFFBLL || v39 + 4 > *((void *)this + 2)) {
            goto LABEL_209;
          }
          *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v39);
          goto LABEL_191;
        case 6u:
          *(void *)(a1 + 156) |= 0x100uLL;
          unint64_t v40 = *((void *)this + 1);
          if (v40 > 0xFFFFFFFFFFFFFFFBLL || v40 + 4 > *((void *)this + 2)) {
            goto LABEL_209;
          }
          *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v40);
          goto LABEL_191;
        case 7u:
          *(void *)(a1 + 156) |= 0x800uLL;
          unint64_t v41 = *((void *)this + 1);
          unint64_t v42 = *((void *)this + 2);
          uint64_t v43 = *(void *)this;
          if (v41 <= 0xFFFFFFFFFFFFFFF5 && v41 + 10 <= v42)
          {
            char v44 = 0;
            unsigned int v45 = 0;
            uint64_t v46 = 0;
            do
            {
              unint64_t v47 = v41 + 1;
              *((void *)this + 1) = v41 + 1;
              char v48 = *(unsigned char *)(v43 + v41);
              v46 |= (unint64_t)(v48 & 0x7F) << v44;
              if ((v48 & 0x80) == 0) {
                goto LABEL_376;
              }
              v44 += 7;
              unint64_t v41 = v47;
              BOOL v14 = v45++ > 8;
            }
            while (!v14);
LABEL_235:
            LODWORD(v46) = 0;
            goto LABEL_376;
          }
          char v219 = 0;
          unsigned int v220 = 0;
          uint64_t v46 = 0;
          if (v42 <= v41) {
            unint64_t v42 = *((void *)this + 1);
          }
          while (2)
          {
            if (v42 == v41)
            {
              LODWORD(v46) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v221 = v41 + 1;
              char v222 = *(unsigned char *)(v43 + v41);
              *((void *)this + 1) = v221;
              v46 |= (unint64_t)(v222 & 0x7F) << v219;
              if (v222 < 0)
              {
                v219 += 7;
                unint64_t v41 = v221;
                BOOL v14 = v220++ > 8;
                if (v14) {
                  goto LABEL_235;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v46) = 0;
              }
            }
            break;
          }
LABEL_376:
          *(_DWORD *)(a1 + 68) = v46;
          goto LABEL_210;
        case 8u:
          *(void *)(a1 + 156) |= 0x80000000uLL;
          unint64_t v49 = *((void *)this + 1);
          unint64_t v50 = *((void *)this + 2);
          uint64_t v51 = *(void *)this;
          if (v49 <= 0xFFFFFFFFFFFFFFF5 && v49 + 10 <= v50)
          {
            char v52 = 0;
            unsigned int v53 = 0;
            uint64_t v54 = 0;
            do
            {
              unint64_t v55 = v49 + 1;
              *((void *)this + 1) = v49 + 1;
              char v56 = *(unsigned char *)(v51 + v49);
              v54 |= (unint64_t)(v56 & 0x7F) << v52;
              if ((v56 & 0x80) == 0) {
                goto LABEL_380;
              }
              v52 += 7;
              unint64_t v49 = v55;
              BOOL v14 = v53++ > 8;
            }
            while (!v14);
LABEL_242:
            LODWORD(v54) = 0;
            goto LABEL_380;
          }
          char v223 = 0;
          unsigned int v224 = 0;
          uint64_t v54 = 0;
          if (v50 <= v49) {
            unint64_t v50 = *((void *)this + 1);
          }
          while (2)
          {
            if (v50 == v49)
            {
              LODWORD(v54) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v225 = v49 + 1;
              char v226 = *(unsigned char *)(v51 + v49);
              *((void *)this + 1) = v225;
              v54 |= (unint64_t)(v226 & 0x7F) << v223;
              if (v226 < 0)
              {
                v223 += 7;
                unint64_t v49 = v225;
                BOOL v14 = v224++ > 8;
                if (v14) {
                  goto LABEL_242;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v54) = 0;
              }
            }
            break;
          }
LABEL_380:
          *(_DWORD *)(a1 + 148) = v54;
          goto LABEL_210;
        case 9u:
          *(void *)(a1 + 156) |= 0x1000uLL;
          unint64_t v57 = *((void *)this + 1);
          unint64_t v58 = *((void *)this + 2);
          uint64_t v59 = *(void *)this;
          if (v57 <= 0xFFFFFFFFFFFFFFF5 && v57 + 10 <= v58)
          {
            char v60 = 0;
            unsigned int v61 = 0;
            uint64_t v62 = 0;
            do
            {
              unint64_t v63 = v57 + 1;
              *((void *)this + 1) = v57 + 1;
              char v64 = *(unsigned char *)(v59 + v57);
              v62 |= (unint64_t)(v64 & 0x7F) << v60;
              if ((v64 & 0x80) == 0) {
                goto LABEL_384;
              }
              v60 += 7;
              unint64_t v57 = v63;
              BOOL v14 = v61++ > 8;
            }
            while (!v14);
LABEL_249:
            LODWORD(v62) = 0;
            goto LABEL_384;
          }
          char v227 = 0;
          unsigned int v228 = 0;
          uint64_t v62 = 0;
          if (v58 <= v57) {
            unint64_t v58 = *((void *)this + 1);
          }
          while (2)
          {
            if (v58 == v57)
            {
              LODWORD(v62) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v229 = v57 + 1;
              char v230 = *(unsigned char *)(v59 + v57);
              *((void *)this + 1) = v229;
              v62 |= (unint64_t)(v230 & 0x7F) << v227;
              if (v230 < 0)
              {
                v227 += 7;
                unint64_t v57 = v229;
                BOOL v14 = v228++ > 8;
                if (v14) {
                  goto LABEL_249;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v62) = 0;
              }
            }
            break;
          }
LABEL_384:
          *(_DWORD *)(a1 + 72) = v62;
          goto LABEL_210;
        case 0xAu:
          *(void *)(a1 + 156) |= 0x10000000uLL;
          unint64_t v65 = *((void *)this + 1);
          if (v65 > 0xFFFFFFFFFFFFFFFBLL || v65 + 4 > *((void *)this + 2)) {
            goto LABEL_209;
          }
          *(_DWORD *)(a1 + 136) = *(_DWORD *)(*(void *)this + v65);
          goto LABEL_191;
        case 0xBu:
          *(void *)(a1 + 156) |= 0x20000000uLL;
          unint64_t v66 = *((void *)this + 1);
          if (v66 > 0xFFFFFFFFFFFFFFFBLL || v66 + 4 > *((void *)this + 2)) {
            goto LABEL_209;
          }
          *(_DWORD *)(a1 + 140) = *(_DWORD *)(*(void *)this + v66);
          goto LABEL_191;
        case 0xCu:
          *(void *)(a1 + 156) |= 0x8000000uLL;
          unint64_t v67 = *((void *)this + 1);
          if (v67 > 0xFFFFFFFFFFFFFFFBLL || v67 + 4 > *((void *)this + 2)) {
            goto LABEL_209;
          }
          *(_DWORD *)(a1 + 132) = *(_DWORD *)(*(void *)this + v67);
          goto LABEL_191;
        case 0xDu:
          *(void *)(a1 + 156) |= 0x40000uLL;
          unint64_t v68 = *((void *)this + 1);
          unint64_t v69 = *((void *)this + 2);
          uint64_t v70 = *(void *)this;
          if (v68 <= 0xFFFFFFFFFFFFFFF5 && v68 + 10 <= v69)
          {
            char v71 = 0;
            unsigned int v72 = 0;
            uint64_t v73 = 0;
            do
            {
              unint64_t v74 = v68 + 1;
              *((void *)this + 1) = v68 + 1;
              char v75 = *(unsigned char *)(v70 + v68);
              v73 |= (unint64_t)(v75 & 0x7F) << v71;
              if ((v75 & 0x80) == 0) {
                goto LABEL_388;
              }
              v71 += 7;
              unint64_t v68 = v74;
              BOOL v14 = v72++ > 8;
            }
            while (!v14);
LABEL_256:
            LODWORD(v73) = 0;
            goto LABEL_388;
          }
          char v231 = 0;
          unsigned int v232 = 0;
          uint64_t v73 = 0;
          if (v69 <= v68) {
            unint64_t v69 = *((void *)this + 1);
          }
          while (2)
          {
            if (v69 == v68)
            {
              LODWORD(v73) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v233 = v68 + 1;
              char v234 = *(unsigned char *)(v70 + v68);
              *((void *)this + 1) = v233;
              v73 |= (unint64_t)(v234 & 0x7F) << v231;
              if (v234 < 0)
              {
                v231 += 7;
                unint64_t v68 = v233;
                BOOL v14 = v232++ > 8;
                if (v14) {
                  goto LABEL_256;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v73) = 0;
              }
            }
            break;
          }
LABEL_388:
          *(_DWORD *)(a1 + 96) = v73;
          goto LABEL_210;
        case 0xEu:
          *(void *)(a1 + 156) |= 0x4000uLL;
          unint64_t v76 = *((void *)this + 1);
          if (v76 > 0xFFFFFFFFFFFFFFFBLL || v76 + 4 > *((void *)this + 2)) {
            goto LABEL_209;
          }
          *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v76);
          goto LABEL_191;
        case 0xFu:
          *(void *)(a1 + 156) |= 0x20uLL;
          unint64_t v77 = *((void *)this + 1);
          unint64_t v78 = *((void *)this + 2);
          uint64_t v79 = *(void *)this;
          if (v77 <= 0xFFFFFFFFFFFFFFF5 && v77 + 10 <= v78)
          {
            char v80 = 0;
            unsigned int v81 = 0;
            uint64_t v82 = 0;
            do
            {
              unint64_t v83 = v77 + 1;
              *((void *)this + 1) = v77 + 1;
              char v84 = *(unsigned char *)(v79 + v77);
              v82 |= (unint64_t)(v84 & 0x7F) << v80;
              if ((v84 & 0x80) == 0) {
                goto LABEL_392;
              }
              v80 += 7;
              unint64_t v77 = v83;
              BOOL v14 = v81++ > 8;
            }
            while (!v14);
LABEL_263:
            LODWORD(v82) = 0;
            goto LABEL_392;
          }
          char v235 = 0;
          unsigned int v236 = 0;
          uint64_t v82 = 0;
          if (v78 <= v77) {
            unint64_t v78 = *((void *)this + 1);
          }
          while (2)
          {
            if (v78 == v77)
            {
              LODWORD(v82) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v237 = v77 + 1;
              char v238 = *(unsigned char *)(v79 + v77);
              *((void *)this + 1) = v237;
              v82 |= (unint64_t)(v238 & 0x7F) << v235;
              if (v238 < 0)
              {
                v235 += 7;
                unint64_t v77 = v237;
                BOOL v14 = v236++ > 8;
                if (v14) {
                  goto LABEL_263;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v82) = 0;
              }
            }
            break;
          }
LABEL_392:
          *(_DWORD *)(a1 + 44) = v82;
          goto LABEL_210;
        case 0x10u:
          *(void *)(a1 + 156) |= 0x400000000uLL;
          unint64_t v85 = *((void *)this + 1);
          if (v85 >= *((void *)this + 2))
          {
            BOOL v88 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v86 = v85 + 1;
            int v87 = *(unsigned __int8 *)(*(void *)this + v85);
            *((void *)this + 1) = v86;
            BOOL v88 = v87 != 0;
          }
          *(unsigned char *)(a1 + 154) = v88;
          goto LABEL_210;
        case 0x11u:
          *(void *)(a1 + 156) |= 0x200000000uLL;
          unint64_t v89 = *((void *)this + 1);
          if (v89 >= *((void *)this + 2))
          {
            BOOL v92 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v90 = v89 + 1;
            int v91 = *(unsigned __int8 *)(*(void *)this + v89);
            *((void *)this + 1) = v90;
            BOOL v92 = v91 != 0;
          }
          *(unsigned char *)(a1 + 153) = v92;
          goto LABEL_210;
        case 0x12u:
          *(void *)(a1 + 156) |= 0x80uLL;
          unint64_t v93 = *((void *)this + 1);
          unint64_t v94 = *((void *)this + 2);
          uint64_t v95 = *(void *)this;
          if (v93 <= 0xFFFFFFFFFFFFFFF5 && v93 + 10 <= v94)
          {
            char v96 = 0;
            unsigned int v97 = 0;
            uint64_t v98 = 0;
            do
            {
              unint64_t v99 = v93 + 1;
              *((void *)this + 1) = v93 + 1;
              char v100 = *(unsigned char *)(v95 + v93);
              v98 |= (unint64_t)(v100 & 0x7F) << v96;
              if ((v100 & 0x80) == 0) {
                goto LABEL_396;
              }
              v96 += 7;
              unint64_t v93 = v99;
              BOOL v14 = v97++ > 8;
            }
            while (!v14);
LABEL_274:
            LODWORD(v98) = 0;
            goto LABEL_396;
          }
          char v239 = 0;
          unsigned int v240 = 0;
          uint64_t v98 = 0;
          if (v94 <= v93) {
            unint64_t v94 = *((void *)this + 1);
          }
          while (2)
          {
            if (v94 == v93)
            {
              LODWORD(v98) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v241 = v93 + 1;
              char v242 = *(unsigned char *)(v95 + v93);
              *((void *)this + 1) = v241;
              v98 |= (unint64_t)(v242 & 0x7F) << v239;
              if (v242 < 0)
              {
                v239 += 7;
                unint64_t v93 = v241;
                BOOL v14 = v240++ > 8;
                if (v14) {
                  goto LABEL_274;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v98) = 0;
              }
            }
            break;
          }
LABEL_396:
          *(_DWORD *)(a1 + 52) = v98;
          goto LABEL_210;
        case 0x13u:
          *(void *)(a1 + 156) |= 0x40000000uLL;
          unint64_t v101 = *((void *)this + 1);
          unint64_t v102 = *((void *)this + 2);
          uint64_t v103 = *(void *)this;
          if (v101 <= 0xFFFFFFFFFFFFFFF5 && v101 + 10 <= v102)
          {
            char v104 = 0;
            unsigned int v105 = 0;
            uint64_t v106 = 0;
            do
            {
              unint64_t v107 = v101 + 1;
              *((void *)this + 1) = v101 + 1;
              char v108 = *(unsigned char *)(v103 + v101);
              v106 |= (unint64_t)(v108 & 0x7F) << v104;
              if ((v108 & 0x80) == 0) {
                goto LABEL_400;
              }
              v104 += 7;
              unint64_t v101 = v107;
              BOOL v14 = v105++ > 8;
            }
            while (!v14);
LABEL_281:
            LODWORD(v106) = 0;
            goto LABEL_400;
          }
          char v243 = 0;
          unsigned int v244 = 0;
          uint64_t v106 = 0;
          if (v102 <= v101) {
            unint64_t v102 = *((void *)this + 1);
          }
          while (2)
          {
            if (v102 == v101)
            {
              LODWORD(v106) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v245 = v101 + 1;
              char v246 = *(unsigned char *)(v103 + v101);
              *((void *)this + 1) = v245;
              v106 |= (unint64_t)(v246 & 0x7F) << v243;
              if (v246 < 0)
              {
                v243 += 7;
                unint64_t v101 = v245;
                BOOL v14 = v244++ > 8;
                if (v14) {
                  goto LABEL_281;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v106) = 0;
              }
            }
            break;
          }
LABEL_400:
          *(_DWORD *)(a1 + 144) = v106;
          goto LABEL_210;
        case 0x14u:
          *(void *)(a1 + 156) |= 0x2000000uLL;
          unint64_t v109 = *((void *)this + 1);
          unint64_t v110 = *((void *)this + 2);
          uint64_t v111 = *(void *)this;
          if (v109 <= 0xFFFFFFFFFFFFFFF5 && v109 + 10 <= v110)
          {
            char v112 = 0;
            unsigned int v113 = 0;
            uint64_t v114 = 0;
            do
            {
              unint64_t v115 = v109 + 1;
              *((void *)this + 1) = v109 + 1;
              char v116 = *(unsigned char *)(v111 + v109);
              v114 |= (unint64_t)(v116 & 0x7F) << v112;
              if ((v116 & 0x80) == 0) {
                goto LABEL_404;
              }
              v112 += 7;
              unint64_t v109 = v115;
              BOOL v14 = v113++ > 8;
            }
            while (!v14);
LABEL_288:
            LODWORD(v114) = 0;
            goto LABEL_404;
          }
          char v247 = 0;
          unsigned int v248 = 0;
          uint64_t v114 = 0;
          if (v110 <= v109) {
            unint64_t v110 = *((void *)this + 1);
          }
          while (2)
          {
            if (v110 == v109)
            {
              LODWORD(v114) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v249 = v109 + 1;
              char v250 = *(unsigned char *)(v111 + v109);
              *((void *)this + 1) = v249;
              v114 |= (unint64_t)(v250 & 0x7F) << v247;
              if (v250 < 0)
              {
                v247 += 7;
                unint64_t v109 = v249;
                BOOL v14 = v248++ > 8;
                if (v14) {
                  goto LABEL_288;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v114) = 0;
              }
            }
            break;
          }
LABEL_404:
          *(_DWORD *)(a1 + 124) = v114;
          goto LABEL_210;
        case 0x15u:
          *(void *)(a1 + 156) |= 0x800000000uLL;
          unint64_t v117 = *((void *)this + 1);
          if (v117 >= *((void *)this + 2))
          {
            BOOL v120 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v118 = v117 + 1;
            int v119 = *(unsigned __int8 *)(*(void *)this + v117);
            *((void *)this + 1) = v118;
            BOOL v120 = v119 != 0;
          }
          *(unsigned char *)(a1 + 155) = v120;
          goto LABEL_210;
        case 0x16u:
          *(void *)(a1 + 156) |= 0x100000000uLL;
          unint64_t v121 = *((void *)this + 1);
          if (v121 >= *((void *)this + 2))
          {
            BOOL v124 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v122 = v121 + 1;
            int v123 = *(unsigned __int8 *)(*(void *)this + v121);
            *((void *)this + 1) = v122;
            BOOL v124 = v123 != 0;
          }
          *(unsigned char *)(a1 + 152) = v124;
          goto LABEL_210;
        case 0x17u:
          *(void *)(a1 + 156) |= 0x20000uLL;
          unint64_t v125 = *((void *)this + 1);
          unint64_t v126 = *((void *)this + 2);
          uint64_t v127 = *(void *)this;
          if (v125 <= 0xFFFFFFFFFFFFFFF5 && v125 + 10 <= v126)
          {
            char v128 = 0;
            unsigned int v129 = 0;
            uint64_t v130 = 0;
            do
            {
              unint64_t v131 = v125 + 1;
              *((void *)this + 1) = v125 + 1;
              char v132 = *(unsigned char *)(v127 + v125);
              v130 |= (unint64_t)(v132 & 0x7F) << v128;
              if ((v132 & 0x80) == 0) {
                goto LABEL_408;
              }
              v128 += 7;
              unint64_t v125 = v131;
              BOOL v14 = v129++ > 8;
            }
            while (!v14);
LABEL_299:
            LODWORD(v130) = 0;
            goto LABEL_408;
          }
          char v251 = 0;
          unsigned int v252 = 0;
          uint64_t v130 = 0;
          if (v126 <= v125) {
            unint64_t v126 = *((void *)this + 1);
          }
          while (2)
          {
            if (v126 == v125)
            {
              LODWORD(v130) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v253 = v125 + 1;
              char v254 = *(unsigned char *)(v127 + v125);
              *((void *)this + 1) = v253;
              v130 |= (unint64_t)(v254 & 0x7F) << v251;
              if (v254 < 0)
              {
                v251 += 7;
                unint64_t v125 = v253;
                BOOL v14 = v252++ > 8;
                if (v14) {
                  goto LABEL_299;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v130) = 0;
              }
            }
            break;
          }
LABEL_408:
          *(_DWORD *)(a1 + 92) = v130;
          goto LABEL_210;
        case 0x18u:
          *(void *)(a1 + 156) |= 0x200000uLL;
          unint64_t v133 = *((void *)this + 1);
          unint64_t v134 = *((void *)this + 2);
          uint64_t v135 = *(void *)this;
          if (v133 <= 0xFFFFFFFFFFFFFFF5 && v133 + 10 <= v134)
          {
            char v136 = 0;
            unsigned int v137 = 0;
            uint64_t v138 = 0;
            do
            {
              unint64_t v139 = v133 + 1;
              *((void *)this + 1) = v133 + 1;
              char v140 = *(unsigned char *)(v135 + v133);
              v138 |= (unint64_t)(v140 & 0x7F) << v136;
              if ((v140 & 0x80) == 0) {
                goto LABEL_412;
              }
              v136 += 7;
              unint64_t v133 = v139;
              BOOL v14 = v137++ > 8;
            }
            while (!v14);
LABEL_306:
            LODWORD(v138) = 0;
            goto LABEL_412;
          }
          char v255 = 0;
          unsigned int v256 = 0;
          uint64_t v138 = 0;
          if (v134 <= v133) {
            unint64_t v134 = *((void *)this + 1);
          }
          while (2)
          {
            if (v134 == v133)
            {
              LODWORD(v138) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v257 = v133 + 1;
              char v258 = *(unsigned char *)(v135 + v133);
              *((void *)this + 1) = v257;
              v138 |= (unint64_t)(v258 & 0x7F) << v255;
              if (v258 < 0)
              {
                v255 += 7;
                unint64_t v133 = v257;
                BOOL v14 = v256++ > 8;
                if (v14) {
                  goto LABEL_306;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v138) = 0;
              }
            }
            break;
          }
LABEL_412:
          *(_DWORD *)(a1 + 108) = v138;
          goto LABEL_210;
        case 0x19u:
          *(void *)(a1 + 156) |= 0x400000uLL;
          unint64_t v141 = *((void *)this + 1);
          unint64_t v142 = *((void *)this + 2);
          uint64_t v143 = *(void *)this;
          if (v141 <= 0xFFFFFFFFFFFFFFF5 && v141 + 10 <= v142)
          {
            char v144 = 0;
            unsigned int v145 = 0;
            uint64_t v146 = 0;
            do
            {
              unint64_t v147 = v141 + 1;
              *((void *)this + 1) = v141 + 1;
              char v148 = *(unsigned char *)(v143 + v141);
              v146 |= (unint64_t)(v148 & 0x7F) << v144;
              if ((v148 & 0x80) == 0) {
                goto LABEL_416;
              }
              v144 += 7;
              unint64_t v141 = v147;
              BOOL v14 = v145++ > 8;
            }
            while (!v14);
LABEL_313:
            LODWORD(v146) = 0;
            goto LABEL_416;
          }
          char v259 = 0;
          unsigned int v260 = 0;
          uint64_t v146 = 0;
          if (v142 <= v141) {
            unint64_t v142 = *((void *)this + 1);
          }
          while (2)
          {
            if (v142 == v141)
            {
              LODWORD(v146) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v261 = v141 + 1;
              char v262 = *(unsigned char *)(v143 + v141);
              *((void *)this + 1) = v261;
              v146 |= (unint64_t)(v262 & 0x7F) << v259;
              if (v262 < 0)
              {
                v259 += 7;
                unint64_t v141 = v261;
                BOOL v14 = v260++ > 8;
                if (v14) {
                  goto LABEL_313;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v146) = 0;
              }
            }
            break;
          }
LABEL_416:
          *(_DWORD *)(a1 + 112) = v146;
          goto LABEL_210;
        case 0x1Au:
          *(void *)(a1 + 156) |= 0x80000uLL;
          unint64_t v149 = *((void *)this + 1);
          unint64_t v150 = *((void *)this + 2);
          uint64_t v151 = *(void *)this;
          if (v149 <= 0xFFFFFFFFFFFFFFF5 && v149 + 10 <= v150)
          {
            char v152 = 0;
            unsigned int v153 = 0;
            uint64_t v154 = 0;
            do
            {
              unint64_t v155 = v149 + 1;
              *((void *)this + 1) = v149 + 1;
              char v156 = *(unsigned char *)(v151 + v149);
              v154 |= (unint64_t)(v156 & 0x7F) << v152;
              if ((v156 & 0x80) == 0) {
                goto LABEL_420;
              }
              v152 += 7;
              unint64_t v149 = v155;
              BOOL v14 = v153++ > 8;
            }
            while (!v14);
LABEL_320:
            LODWORD(v154) = 0;
            goto LABEL_420;
          }
          char v263 = 0;
          unsigned int v264 = 0;
          uint64_t v154 = 0;
          if (v150 <= v149) {
            unint64_t v150 = *((void *)this + 1);
          }
          while (2)
          {
            if (v150 == v149)
            {
              LODWORD(v154) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v265 = v149 + 1;
              char v266 = *(unsigned char *)(v151 + v149);
              *((void *)this + 1) = v265;
              v154 |= (unint64_t)(v266 & 0x7F) << v263;
              if (v266 < 0)
              {
                v263 += 7;
                unint64_t v149 = v265;
                BOOL v14 = v264++ > 8;
                if (v14) {
                  goto LABEL_320;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v154) = 0;
              }
            }
            break;
          }
LABEL_420:
          *(_DWORD *)(a1 + 100) = v154;
          goto LABEL_210;
        case 0x1Bu:
          *(void *)(a1 + 156) |= 0x8000uLL;
          unint64_t v157 = *((void *)this + 1);
          unint64_t v158 = *((void *)this + 2);
          uint64_t v159 = *(void *)this;
          if (v157 <= 0xFFFFFFFFFFFFFFF5 && v157 + 10 <= v158)
          {
            char v160 = 0;
            unsigned int v161 = 0;
            uint64_t v162 = 0;
            do
            {
              unint64_t v163 = v157 + 1;
              *((void *)this + 1) = v157 + 1;
              char v164 = *(unsigned char *)(v159 + v157);
              v162 |= (unint64_t)(v164 & 0x7F) << v160;
              if ((v164 & 0x80) == 0) {
                goto LABEL_424;
              }
              v160 += 7;
              unint64_t v157 = v163;
              BOOL v14 = v161++ > 8;
            }
            while (!v14);
LABEL_327:
            LODWORD(v162) = 0;
            goto LABEL_424;
          }
          char v267 = 0;
          unsigned int v268 = 0;
          uint64_t v162 = 0;
          if (v158 <= v157) {
            unint64_t v158 = *((void *)this + 1);
          }
          while (2)
          {
            if (v158 == v157)
            {
              LODWORD(v162) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v269 = v157 + 1;
              char v270 = *(unsigned char *)(v159 + v157);
              *((void *)this + 1) = v269;
              v162 |= (unint64_t)(v270 & 0x7F) << v267;
              if (v270 < 0)
              {
                v267 += 7;
                unint64_t v157 = v269;
                BOOL v14 = v268++ > 8;
                if (v14) {
                  goto LABEL_327;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v162) = 0;
              }
            }
            break;
          }
LABEL_424:
          *(_DWORD *)(a1 + 84) = v162;
          goto LABEL_210;
        case 0x1Cu:
          *(void *)(a1 + 156) |= 0x800000uLL;
          unint64_t v165 = *((void *)this + 1);
          if (v165 > 0xFFFFFFFFFFFFFFFBLL || v165 + 4 > *((void *)this + 2)) {
            goto LABEL_209;
          }
          *(_DWORD *)(a1 + 116) = *(_DWORD *)(*(void *)this + v165);
          goto LABEL_191;
        case 0x1Du:
          *(void *)(a1 + 156) |= 0x100000uLL;
          unint64_t v166 = *((void *)this + 1);
          unint64_t v167 = *((void *)this + 2);
          uint64_t v168 = *(void *)this;
          if (v166 <= 0xFFFFFFFFFFFFFFF5 && v166 + 10 <= v167)
          {
            char v169 = 0;
            unsigned int v170 = 0;
            uint64_t v171 = 0;
            do
            {
              unint64_t v172 = v166 + 1;
              *((void *)this + 1) = v166 + 1;
              char v173 = *(unsigned char *)(v168 + v166);
              v171 |= (unint64_t)(v173 & 0x7F) << v169;
              if ((v173 & 0x80) == 0) {
                goto LABEL_428;
              }
              v169 += 7;
              unint64_t v166 = v172;
              BOOL v14 = v170++ > 8;
            }
            while (!v14);
LABEL_334:
            LODWORD(v171) = 0;
            goto LABEL_428;
          }
          char v271 = 0;
          unsigned int v272 = 0;
          uint64_t v171 = 0;
          if (v167 <= v166) {
            unint64_t v167 = *((void *)this + 1);
          }
          while (2)
          {
            if (v167 == v166)
            {
              LODWORD(v171) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v273 = v166 + 1;
              char v274 = *(unsigned char *)(v168 + v166);
              *((void *)this + 1) = v273;
              v171 |= (unint64_t)(v274 & 0x7F) << v271;
              if (v274 < 0)
              {
                v271 += 7;
                unint64_t v166 = v273;
                BOOL v14 = v272++ > 8;
                if (v14) {
                  goto LABEL_334;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v171) = 0;
              }
            }
            break;
          }
LABEL_428:
          *(_DWORD *)(a1 + 104) = v171;
          goto LABEL_210;
        case 0x1Eu:
          *(void *)(a1 + 156) |= 0x4000000uLL;
          unint64_t v174 = *((void *)this + 1);
          if (v174 > 0xFFFFFFFFFFFFFFFBLL || v174 + 4 > *((void *)this + 2)) {
            goto LABEL_209;
          }
          *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v174);
          goto LABEL_191;
        case 0x1Fu:
          *(void *)(a1 + 156) |= 0x1000000uLL;
          unint64_t v175 = *((void *)this + 1);
          unint64_t v176 = *((void *)this + 2);
          uint64_t v177 = *(void *)this;
          if (v175 <= 0xFFFFFFFFFFFFFFF5 && v175 + 10 <= v176)
          {
            char v178 = 0;
            unsigned int v179 = 0;
            uint64_t v180 = 0;
            do
            {
              unint64_t v181 = v175 + 1;
              *((void *)this + 1) = v175 + 1;
              char v182 = *(unsigned char *)(v177 + v175);
              v180 |= (unint64_t)(v182 & 0x7F) << v178;
              if ((v182 & 0x80) == 0) {
                goto LABEL_432;
              }
              v178 += 7;
              unint64_t v175 = v181;
              BOOL v14 = v179++ > 8;
            }
            while (!v14);
LABEL_341:
            LODWORD(v180) = 0;
            goto LABEL_432;
          }
          char v275 = 0;
          unsigned int v276 = 0;
          uint64_t v180 = 0;
          if (v176 <= v175) {
            unint64_t v176 = *((void *)this + 1);
          }
          while (2)
          {
            if (v176 == v175)
            {
              LODWORD(v180) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v277 = v175 + 1;
              char v278 = *(unsigned char *)(v177 + v175);
              *((void *)this + 1) = v277;
              v180 |= (unint64_t)(v278 & 0x7F) << v275;
              if (v278 < 0)
              {
                v275 += 7;
                unint64_t v175 = v277;
                BOOL v14 = v276++ > 8;
                if (v14) {
                  goto LABEL_341;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v180) = 0;
              }
            }
            break;
          }
LABEL_432:
          *(_DWORD *)(a1 + 120) = v180;
          goto LABEL_210;
        case 0x20u:
          *(void *)(a1 + 156) |= 0x10uLL;
          unint64_t v183 = *((void *)this + 1);
          unint64_t v184 = *((void *)this + 2);
          uint64_t v185 = *(void *)this;
          if (v183 <= 0xFFFFFFFFFFFFFFF5 && v183 + 10 <= v184)
          {
            char v186 = 0;
            unsigned int v187 = 0;
            uint64_t v188 = 0;
            do
            {
              unint64_t v189 = v183 + 1;
              *((void *)this + 1) = v183 + 1;
              char v190 = *(unsigned char *)(v185 + v183);
              v188 |= (unint64_t)(v190 & 0x7F) << v186;
              if ((v190 & 0x80) == 0) {
                goto LABEL_436;
              }
              v186 += 7;
              unint64_t v183 = v189;
              BOOL v14 = v187++ > 8;
            }
            while (!v14);
LABEL_348:
            LODWORD(v188) = 0;
            goto LABEL_436;
          }
          char v279 = 0;
          unsigned int v280 = 0;
          uint64_t v188 = 0;
          if (v184 <= v183) {
            unint64_t v184 = *((void *)this + 1);
          }
          while (2)
          {
            if (v184 == v183)
            {
              LODWORD(v188) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v281 = v183 + 1;
              char v282 = *(unsigned char *)(v185 + v183);
              *((void *)this + 1) = v281;
              v188 |= (unint64_t)(v282 & 0x7F) << v279;
              if (v282 < 0)
              {
                v279 += 7;
                unint64_t v183 = v281;
                BOOL v14 = v280++ > 8;
                if (v14) {
                  goto LABEL_348;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v188) = 0;
              }
            }
            break;
          }
LABEL_436:
          *(_DWORD *)(a1 + 40) = v188;
          goto LABEL_210;
        case 0x21u:
          *(void *)(a1 + 156) |= 0x40uLL;
          unint64_t v191 = *((void *)this + 1);
          if (v191 > 0xFFFFFFFFFFFFFFFBLL || v191 + 4 > *((void *)this + 2)) {
            goto LABEL_209;
          }
          *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v191);
LABEL_191:
          uint64_t v192 = *((void *)this + 1) + 4;
          goto LABEL_192;
        case 0x22u:
          *(void *)(a1 + 156) |= 0x10000uLL;
          unint64_t v193 = *((void *)this + 1);
          unint64_t v194 = *((void *)this + 2);
          uint64_t v195 = *(void *)this;
          if (v193 <= 0xFFFFFFFFFFFFFFF5 && v193 + 10 <= v194)
          {
            char v196 = 0;
            unsigned int v197 = 0;
            uint64_t v198 = 0;
            do
            {
              unint64_t v199 = v193 + 1;
              *((void *)this + 1) = v193 + 1;
              char v200 = *(unsigned char *)(v195 + v193);
              v198 |= (unint64_t)(v200 & 0x7F) << v196;
              if ((v200 & 0x80) == 0) {
                goto LABEL_440;
              }
              v196 += 7;
              unint64_t v193 = v199;
              BOOL v14 = v197++ > 8;
            }
            while (!v14);
LABEL_355:
            LODWORD(v198) = 0;
            goto LABEL_440;
          }
          char v283 = 0;
          unsigned int v284 = 0;
          uint64_t v198 = 0;
          if (v194 <= v193) {
            unint64_t v194 = *((void *)this + 1);
          }
          while (2)
          {
            if (v194 == v193)
            {
              LODWORD(v198) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v285 = v193 + 1;
              char v286 = *(unsigned char *)(v195 + v193);
              *((void *)this + 1) = v285;
              v198 |= (unint64_t)(v286 & 0x7F) << v283;
              if (v286 < 0)
              {
                v283 += 7;
                unint64_t v193 = v285;
                BOOL v14 = v284++ > 8;
                if (v14) {
                  goto LABEL_355;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v198) = 0;
              }
            }
            break;
          }
LABEL_440:
          *(_DWORD *)(a1 + 88) = v198;
          goto LABEL_210;
        case 0x23u:
          *(void *)(a1 + 156) |= 0x2000uLL;
          unint64_t v201 = *((void *)this + 1);
          unint64_t v202 = *((void *)this + 2);
          uint64_t v203 = *(void *)this;
          if (v201 <= 0xFFFFFFFFFFFFFFF5 && v201 + 10 <= v202)
          {
            char v204 = 0;
            unsigned int v205 = 0;
            uint64_t v206 = 0;
            do
            {
              unint64_t v207 = v201 + 1;
              *((void *)this + 1) = v201 + 1;
              char v208 = *(unsigned char *)(v203 + v201);
              v206 |= (unint64_t)(v208 & 0x7F) << v204;
              if ((v208 & 0x80) == 0) {
                goto LABEL_444;
              }
              v204 += 7;
              unint64_t v201 = v207;
              BOOL v14 = v205++ > 8;
            }
            while (!v14);
LABEL_362:
            LODWORD(v206) = 0;
            goto LABEL_444;
          }
          char v287 = 0;
          unsigned int v288 = 0;
          uint64_t v206 = 0;
          if (v202 <= v201) {
            unint64_t v202 = *((void *)this + 1);
          }
          break;
        case 0x24u:
          *(void *)(a1 + 156) |= 1uLL;
          unint64_t v209 = *((void *)this + 1);
          if (v209 <= 0xFFFFFFFFFFFFFFF7 && v209 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 8) = *(void *)(*(void *)this + v209);
LABEL_364:
            uint64_t v192 = *((void *)this + 1) + 8;
LABEL_192:
            *((void *)this + 1) = v192;
          }
          else
          {
LABEL_209:
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_210;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          goto LABEL_210;
      }
      while (1)
      {
        if (v202 == v201)
        {
          LODWORD(v206) = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_444;
        }
        unint64_t v289 = v201 + 1;
        char v290 = *(unsigned char *)(v203 + v201);
        *((void *)this + 1) = v289;
        v206 |= (unint64_t)(v290 & 0x7F) << v287;
        if ((v290 & 0x80) == 0) {
          break;
        }
        v287 += 7;
        unint64_t v201 = v289;
        BOOL v14 = v288++ > 8;
        if (v14) {
          goto LABEL_362;
        }
      }
      if (*((unsigned char *)this + 24)) {
        LODWORD(v206) = 0;
      }
LABEL_444:
      *(_DWORD *)(a1 + 76) = v206;
LABEL_210:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B2425C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(result + 156);
  if ((v4 & 4) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 24));
    uint64_t v4 = *(void *)(v3 + 156);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_40;
    }
  }
  else if ((v4 & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 2) == 0)
  {
LABEL_4:
    if ((v4 & 0x400) == 0) {
      goto LABEL_5;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x400) == 0)
  {
LABEL_5:
    if ((v4 & 0x200) == 0) {
      goto LABEL_6;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64));
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x200) == 0)
  {
LABEL_6:
    if ((v4 & 0x100) == 0) {
      goto LABEL_7;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 60));
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x100) == 0)
  {
LABEL_7:
    if ((v4 & 0x800) == 0) {
      goto LABEL_8;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56));
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x800) == 0)
  {
LABEL_8:
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x80000000) == 0)
  {
LABEL_9:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x1000) == 0)
  {
LABEL_10:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_11:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 136));
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_12:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 140));
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_13:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 132));
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x40000) == 0)
  {
LABEL_14:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x4000) == 0)
  {
LABEL_15:
    if ((v4 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80));
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x20) == 0)
  {
LABEL_16:
    if ((v4 & 0x400000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x400000000) == 0)
  {
LABEL_17:
    if ((v4 & 0x200000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x200000000) == 0)
  {
LABEL_18:
    if ((v4 & 0x80) == 0) {
      goto LABEL_19;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x80) == 0)
  {
LABEL_19:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x40000000) == 0)
  {
LABEL_20:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_21:
    if ((v4 & 0x800000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x800000000) == 0)
  {
LABEL_22:
    if ((v4 & 0x100000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x100000000) == 0)
  {
LABEL_23:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_60;
  }
LABEL_59:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x20000) == 0)
  {
LABEL_24:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x200000) == 0)
  {
LABEL_25:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x400000) == 0)
  {
LABEL_26:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x80000) == 0)
  {
LABEL_27:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_64;
  }
LABEL_63:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x8000) == 0)
  {
LABEL_28:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_65;
  }
LABEL_64:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x800000) == 0)
  {
LABEL_29:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_66;
  }
LABEL_65:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 116));
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x100000) == 0)
  {
LABEL_30:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_67;
  }
LABEL_66:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_31:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_68;
  }
LABEL_67:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 128));
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_32:
    if ((v4 & 0x10) == 0) {
      goto LABEL_33;
    }
    goto LABEL_69;
  }
LABEL_68:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x10) == 0)
  {
LABEL_33:
    if ((v4 & 0x40) == 0) {
      goto LABEL_34;
    }
    goto LABEL_70;
  }
LABEL_69:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x40) == 0)
  {
LABEL_34:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_71;
  }
LABEL_70:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48));
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x10000) == 0)
  {
LABEL_35:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_36;
    }
LABEL_72:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(void *)(v3 + 156) & 1) == 0) {
      return result;
    }
    goto LABEL_73;
  }
LABEL_71:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x2000) != 0) {
    goto LABEL_72;
  }
LABEL_36:
  if ((v4 & 1) == 0) {
    return result;
  }
LABEL_73:
  double v5 = *(double *)(v3 + 8);

  return PB::Writer::write(this, v5);
}

double sub_227B24684(uint64_t a1)
{
  *(void *)a1 = &unk_26DC1FB30;
  *(_DWORD *)(a1 + 396) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(void *)(a1 + 216) = 0;
  return result;
}

void sub_227B246E4(PB::Base *this)
{
  *(void *)this = &unk_26DC1FB30;
  unint64_t v2 = (void *)*((void *)this + 25);
  if (v2)
  {
    *((void *)this + 26) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 22);
  if (v3)
  {
    *((void *)this + 23) = v3;
    operator delete(v3);
  }
  uint64_t v4 = (void *)*((void *)this + 19);
  if (v4)
  {
    *((void *)this + 20) = v4;
    operator delete(v4);
  }
  double v5 = (void *)*((void *)this + 16);
  if (v5)
  {
    *((void *)this + 17) = v5;
    operator delete(v5);
  }
  uint64_t v6 = (void *)*((void *)this + 13);
  if (v6)
  {
    *((void *)this + 14) = v6;
    operator delete(v6);
  }
  int v7 = (void *)*((void *)this + 10);
  if (v7)
  {
    *((void *)this + 11) = v7;
    operator delete(v7);
  }
  uint64_t v8 = (void *)*((void *)this + 7);
  if (v8)
  {
    *((void *)this + 8) = v8;
    operator delete(v8);
  }
  char v9 = (void *)*((void *)this + 4);
  if (v9)
  {
    *((void *)this + 5) = v9;
    operator delete(v9);
  }
  unsigned int v10 = (void *)*((void *)this + 1);
  if (v10)
  {
    *((void *)this + 2) = v10;
    operator delete(v10);
  }

  PB::Base::~Base(this);
}

void sub_227B247C8(PB::Base *a1)
{
  sub_227B246E4(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B24800(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 8) = 0u;
  uint64_t v4 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 56) = 0u;
  double v5 = (char *)(a1 + 56);
  *(_OWORD *)(a1 + 104) = 0u;
  uint64_t v6 = (char *)(a1 + 104);
  *(_OWORD *)(a1 + 152) = 0u;
  int v7 = (char *)(a1 + 152);
  *(_OWORD *)(a1 + 200) = 0u;
  uint64_t v8 = (char *)(a1 + 200);
  *(void *)a1 = &unk_26DC1FB30;
  *(_DWORD *)(a1 + 396) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(void *)(a1 + 216) = 0;
  int v9 = *(_DWORD *)(a2 + 396);
  if ((v9 & 0x80000) != 0)
  {
    uint64_t v11 = *(void *)(a2 + 376);
    int v10 = 0x80000;
    *(_DWORD *)(a1 + 396) = 0x80000;
    *(void *)(a1 + 376) = v11;
    int v9 = *(_DWORD *)(a2 + 396);
    if ((v9 & 0x1000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v10 = 0;
  if ((v9 & 0x1000000) != 0)
  {
LABEL_5:
    char v12 = *(unsigned char *)(a2 + 388);
    v10 |= 0x1000000u;
    *(_DWORD *)(a1 + 396) = v10;
    *(unsigned char *)(a1 + 388) = v12;
    int v9 = *(_DWORD *)(a2 + 396);
  }
LABEL_6:
  if (v9)
  {
    uint64_t v15 = *(void *)(a2 + 224);
    v10 |= 1u;
    *(_DWORD *)(a1 + 396) = v10;
    *(void *)(a1 + 224) = v15;
    int v9 = *(_DWORD *)(a2 + 396);
    if ((v9 & 0x40000) == 0)
    {
LABEL_8:
      if ((v9 & 2) == 0) {
        goto LABEL_9;
      }
      goto LABEL_42;
    }
  }
  else if ((v9 & 0x40000) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v16 = *(void *)(a2 + 368);
  v10 |= 0x40000u;
  *(_DWORD *)(a1 + 396) = v10;
  *(void *)(a1 + 368) = v16;
  int v9 = *(_DWORD *)(a2 + 396);
  if ((v9 & 2) == 0)
  {
LABEL_9:
    if ((v9 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t v17 = *(void *)(a2 + 232);
  v10 |= 2u;
  *(_DWORD *)(a1 + 396) = v10;
  *(void *)(a1 + 232) = v17;
  int v9 = *(_DWORD *)(a2 + 396);
  if ((v9 & 0x10) == 0)
  {
LABEL_10:
    if ((v9 & 0x20) == 0) {
      goto LABEL_11;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t v18 = *(void *)(a2 + 256);
  v10 |= 0x10u;
  *(_DWORD *)(a1 + 396) = v10;
  *(void *)(a1 + 256) = v18;
  int v9 = *(_DWORD *)(a2 + 396);
  if ((v9 & 0x20) == 0)
  {
LABEL_11:
    if ((v9 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t v19 = *(void *)(a2 + 264);
  v10 |= 0x20u;
  *(_DWORD *)(a1 + 396) = v10;
  *(void *)(a1 + 264) = v19;
  int v9 = *(_DWORD *)(a2 + 396);
  if ((v9 & 0x100) == 0)
  {
LABEL_12:
    if ((v9 & 0x400) == 0) {
      goto LABEL_13;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t v20 = *(void *)(a2 + 288);
  v10 |= 0x100u;
  *(_DWORD *)(a1 + 396) = v10;
  *(void *)(a1 + 288) = v20;
  int v9 = *(_DWORD *)(a2 + 396);
  if ((v9 & 0x400) == 0)
  {
LABEL_13:
    if ((v9 & 0x200) == 0) {
      goto LABEL_14;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t v21 = *(void *)(a2 + 304);
  v10 |= 0x400u;
  *(_DWORD *)(a1 + 396) = v10;
  *(void *)(a1 + 304) = v21;
  int v9 = *(_DWORD *)(a2 + 396);
  if ((v9 & 0x200) == 0)
  {
LABEL_14:
    if ((v9 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t v22 = *(void *)(a2 + 296);
  v10 |= 0x200u;
  *(_DWORD *)(a1 + 396) = v10;
  *(void *)(a1 + 296) = v22;
  int v9 = *(_DWORD *)(a2 + 396);
  if ((v9 & 0x80) == 0)
  {
LABEL_15:
    if ((v9 & 0x40) == 0) {
      goto LABEL_16;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t v23 = *(void *)(a2 + 280);
  v10 |= 0x80u;
  *(_DWORD *)(a1 + 396) = v10;
  *(void *)(a1 + 280) = v23;
  int v9 = *(_DWORD *)(a2 + 396);
  if ((v9 & 0x40) == 0)
  {
LABEL_16:
    if ((v9 & 0x1000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t v24 = *(void *)(a2 + 272);
  v10 |= 0x40u;
  *(_DWORD *)(a1 + 396) = v10;
  *(void *)(a1 + 272) = v24;
  int v9 = *(_DWORD *)(a2 + 396);
  if ((v9 & 0x1000) == 0)
  {
LABEL_17:
    if ((v9 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t v25 = *(void *)(a2 + 320);
  v10 |= 0x1000u;
  *(_DWORD *)(a1 + 396) = v10;
  *(void *)(a1 + 320) = v25;
  int v9 = *(_DWORD *)(a2 + 396);
  if ((v9 & 0x800) == 0)
  {
LABEL_18:
    if ((v9 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t v26 = *(void *)(a2 + 312);
  v10 |= 0x800u;
  *(_DWORD *)(a1 + 396) = v10;
  *(void *)(a1 + 312) = v26;
  int v9 = *(_DWORD *)(a2 + 396);
  if ((v9 & 0x20000) == 0)
  {
LABEL_19:
    if ((v9 & 0x10000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t v27 = *(void *)(a2 + 360);
  v10 |= 0x20000u;
  *(_DWORD *)(a1 + 396) = v10;
  *(void *)(a1 + 360) = v27;
  int v9 = *(_DWORD *)(a2 + 396);
  if ((v9 & 0x10000) == 0)
  {
LABEL_20:
    if ((v9 & 0x8000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t v28 = *(void *)(a2 + 352);
  v10 |= 0x10000u;
  *(_DWORD *)(a1 + 396) = v10;
  *(void *)(a1 + 352) = v28;
  int v9 = *(_DWORD *)(a2 + 396);
  if ((v9 & 0x8000) == 0)
  {
LABEL_21:
    if ((v9 & 0x4000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t v29 = *(void *)(a2 + 344);
  v10 |= 0x8000u;
  *(_DWORD *)(a1 + 396) = v10;
  *(void *)(a1 + 344) = v29;
  int v9 = *(_DWORD *)(a2 + 396);
  if ((v9 & 0x4000) == 0)
  {
LABEL_22:
    if ((v9 & 0x2000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t v30 = *(void *)(a2 + 336);
  v10 |= 0x4000u;
  *(_DWORD *)(a1 + 396) = v10;
  *(void *)(a1 + 336) = v30;
  int v9 = *(_DWORD *)(a2 + 396);
  if ((v9 & 0x2000) == 0)
  {
LABEL_23:
    if ((v9 & 0x80000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t v31 = *(void *)(a2 + 328);
  v10 |= 0x2000u;
  *(_DWORD *)(a1 + 396) = v10;
  *(void *)(a1 + 328) = v31;
  int v9 = *(_DWORD *)(a2 + 396);
  if ((v9 & 0x80000000) == 0)
  {
LABEL_24:
    if ((v9 & 4) == 0) {
      goto LABEL_25;
    }
    goto LABEL_58;
  }
LABEL_57:
  char v32 = *(unsigned char *)(a2 + 395);
  v10 |= 0x80000000;
  *(_DWORD *)(a1 + 396) = v10;
  *(unsigned char *)(a1 + 395) = v32;
  int v9 = *(_DWORD *)(a2 + 396);
  if ((v9 & 4) == 0)
  {
LABEL_25:
    if ((v9 & 8) == 0) {
      goto LABEL_26;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t v33 = *(void *)(a2 + 240);
  v10 |= 4u;
  *(_DWORD *)(a1 + 396) = v10;
  *(void *)(a1 + 240) = v33;
  int v9 = *(_DWORD *)(a2 + 396);
  if ((v9 & 8) == 0)
  {
LABEL_26:
    if ((v9 & 0x100000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_60;
  }
LABEL_59:
  uint64_t v34 = *(void *)(a2 + 248);
  v10 |= 8u;
  *(_DWORD *)(a1 + 396) = v10;
  *(void *)(a1 + 248) = v34;
  int v9 = *(_DWORD *)(a2 + 396);
  if ((v9 & 0x100000) == 0)
  {
LABEL_27:
    if ((v9 & 0x400000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_61;
  }
LABEL_60:
  char v35 = *(unsigned char *)(a2 + 384);
  v10 |= 0x100000u;
  *(_DWORD *)(a1 + 396) = v10;
  *(unsigned char *)(a1 + 384) = v35;
  int v9 = *(_DWORD *)(a2 + 396);
  if ((v9 & 0x400000) == 0)
  {
LABEL_28:
    if ((v9 & 0x40000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_62;
  }
LABEL_61:
  char v36 = *(unsigned char *)(a2 + 386);
  v10 |= 0x400000u;
  *(_DWORD *)(a1 + 396) = v10;
  *(unsigned char *)(a1 + 386) = v36;
  int v9 = *(_DWORD *)(a2 + 396);
  if ((v9 & 0x40000000) == 0)
  {
LABEL_29:
    if ((v9 & 0x200000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_63;
  }
LABEL_62:
  char v37 = *(unsigned char *)(a2 + 394);
  v10 |= 0x40000000u;
  *(_DWORD *)(a1 + 396) = v10;
  *(unsigned char *)(a1 + 394) = v37;
  int v9 = *(_DWORD *)(a2 + 396);
  if ((v9 & 0x200000) == 0)
  {
LABEL_30:
    if ((v9 & 0x800000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_64;
  }
LABEL_63:
  char v38 = *(unsigned char *)(a2 + 385);
  v10 |= 0x200000u;
  *(_DWORD *)(a1 + 396) = v10;
  *(unsigned char *)(a1 + 385) = v38;
  int v9 = *(_DWORD *)(a2 + 396);
  if ((v9 & 0x800000) == 0)
  {
LABEL_31:
    if ((v9 & 0x10000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_65;
  }
LABEL_64:
  char v39 = *(unsigned char *)(a2 + 387);
  v10 |= 0x800000u;
  *(_DWORD *)(a1 + 396) = v10;
  *(unsigned char *)(a1 + 387) = v39;
  int v9 = *(_DWORD *)(a2 + 396);
  if ((v9 & 0x10000000) == 0)
  {
LABEL_32:
    if ((v9 & 0x8000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_66;
  }
LABEL_65:
  char v40 = *(unsigned char *)(a2 + 392);
  v10 |= 0x10000000u;
  *(_DWORD *)(a1 + 396) = v10;
  *(unsigned char *)(a1 + 392) = v40;
  int v9 = *(_DWORD *)(a2 + 396);
  if ((v9 & 0x8000000) == 0)
  {
LABEL_33:
    if ((v9 & 0x20000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_67;
  }
LABEL_66:
  char v41 = *(unsigned char *)(a2 + 391);
  v10 |= 0x8000000u;
  *(_DWORD *)(a1 + 396) = v10;
  *(unsigned char *)(a1 + 391) = v41;
  int v9 = *(_DWORD *)(a2 + 396);
  if ((v9 & 0x20000000) == 0)
  {
LABEL_34:
    if ((v9 & 0x2000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_68;
  }
LABEL_67:
  char v42 = *(unsigned char *)(a2 + 393);
  v10 |= 0x20000000u;
  *(_DWORD *)(a1 + 396) = v10;
  *(unsigned char *)(a1 + 393) = v42;
  int v9 = *(_DWORD *)(a2 + 396);
  if ((v9 & 0x2000000) == 0)
  {
LABEL_35:
    if ((v9 & 0x4000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_36;
  }
LABEL_68:
  char v43 = *(unsigned char *)(a2 + 389);
  v10 |= 0x2000000u;
  *(_DWORD *)(a1 + 396) = v10;
  *(unsigned char *)(a1 + 389) = v43;
  if ((*(_DWORD *)(a2 + 396) & 0x4000000) != 0)
  {
LABEL_36:
    char v13 = *(unsigned char *)(a2 + 390);
    *(_DWORD *)(a1 + 396) = v10 | 0x4000000;
    *(unsigned char *)(a1 + 390) = v13;
  }
LABEL_37:
  if (a1 != a2)
  {
    sub_227B8B74C((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 3);
    sub_227B8B74C(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
    sub_227B8B74C(v5, *(char **)(a2 + 56), *(void *)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 3);
    sub_227B8B74C(v6, *(char **)(a2 + 104), *(void *)(a2 + 112), (uint64_t)(*(void *)(a2 + 112) - *(void *)(a2 + 104)) >> 3);
    sub_227B8B74C((char *)(a1 + 80), *(char **)(a2 + 80), *(void *)(a2 + 88), (uint64_t)(*(void *)(a2 + 88) - *(void *)(a2 + 80)) >> 3);
    sub_227B8B74C((char *)(a1 + 128), *(char **)(a2 + 128), *(void *)(a2 + 136), (uint64_t)(*(void *)(a2 + 136) - *(void *)(a2 + 128)) >> 3);
    sub_227B8B74C((char *)(a1 + 176), *(char **)(a2 + 176), *(void *)(a2 + 184), (uint64_t)(*(void *)(a2 + 184) - *(void *)(a2 + 176)) >> 3);
    sub_227B8B74C(v7, *(char **)(a2 + 152), *(void *)(a2 + 160), (uint64_t)(*(void *)(a2 + 160) - *(void *)(a2 + 152)) >> 3);
    sub_227B8B74C(v8, *(char **)(a2 + 200), *(void *)(a2 + 208), (uint64_t)(*(void *)(a2 + 208) - *(void *)(a2 + 200)) >> 3);
  }
  return a1;
}

uint64_t sub_227B24CF8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 396);
  if (v5)
  {
    PB::TextFormatter::format(this, "absoluteTimestampOfImpact", *(double *)(a1 + 224));
    int v5 = *(_DWORD *)(a1 + 396);
    if ((v5 & 0x100000) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_62;
    }
  }
  else if ((v5 & 0x100000) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "anyOffWristAfterImpact");
  int v5 = *(_DWORD *)(a1 + 396);
  if ((v5 & 2) == 0)
  {
LABEL_4:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_63;
  }
LABEL_62:
  PB::TextFormatter::format(this, "aopTimestampOfImpact");
  int v5 = *(_DWORD *)(a1 + 396);
  if ((v5 & 0x200000) == 0)
  {
LABEL_5:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_64;
  }
LABEL_63:
  PB::TextFormatter::format(this, "continuousLockedBeforeImpact");
  int v5 = *(_DWORD *)(a1 + 396);
  if ((v5 & 0x400000) == 0)
  {
LABEL_6:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_64:
  PB::TextFormatter::format(this, "continuousOffWristBeforeImpact");
  if ((*(_DWORD *)(a1 + 396) & 0x800000) != 0) {
LABEL_7:
  }
    PB::TextFormatter::format(this, "continuousStaticAndVerticalBeforeImpact");
LABEL_8:
  uint64_t v6 = *(double **)(a1 + 8);
  int v7 = *(double **)(a1 + 16);
  while (v6 != v7)
  {
    double v8 = *v6++;
    PB::TextFormatter::format(this, "coreMotionWristStateHistoryEndimestamp", v8);
  }
  int v9 = *(double **)(a1 + 32);
  int v10 = *(double **)(a1 + 40);
  while (v9 != v10)
  {
    double v11 = *v9++;
    PB::TextFormatter::format(this, "coreMotionWristStateHistoryStartTimestamp", v11);
  }
  char v12 = *(double **)(a1 + 56);
  char v13 = *(double **)(a1 + 64);
  while (v12 != v13)
  {
    double v14 = *v12++;
    PB::TextFormatter::format(this, "coreMotionWristStateHistoryState", v14);
  }
  int v15 = *(_DWORD *)(a1 + 396);
  if ((v15 & 0x1000000) != 0)
  {
    PB::TextFormatter::format(this, "gatingEnabled");
    int v15 = *(_DWORD *)(a1 + 396);
    if ((v15 & 0x2000000) == 0)
    {
LABEL_16:
      if ((v15 & 0x4000000) == 0) {
        goto LABEL_17;
      }
      goto LABEL_68;
    }
  }
  else if ((v15 & 0x2000000) == 0)
  {
    goto LABEL_16;
  }
  PB::TextFormatter::format(this, "gatingLockedNoMotionPreImpact");
  int v15 = *(_DWORD *)(a1 + 396);
  if ((v15 & 0x4000000) == 0)
  {
LABEL_17:
    if ((v15 & 0x8000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_69;
  }
LABEL_68:
  PB::TextFormatter::format(this, "gatingMotionPreImpact");
  int v15 = *(_DWORD *)(a1 + 396);
  if ((v15 & 0x8000000) == 0)
  {
LABEL_18:
    if ((v15 & 0x10000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_70;
  }
LABEL_69:
  PB::TextFormatter::format(this, "gatingOffWristPostImpact");
  int v15 = *(_DWORD *)(a1 + 396);
  if ((v15 & 0x10000000) == 0)
  {
LABEL_19:
    if ((v15 & 0x20000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_71;
  }
LABEL_70:
  PB::TextFormatter::format(this, "gatingOffWristPreImpact");
  int v15 = *(_DWORD *)(a1 + 396);
  if ((v15 & 0x20000000) == 0)
  {
LABEL_20:
    if ((v15 & 0x40000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_72;
  }
LABEL_71:
  PB::TextFormatter::format(this, "gatingOnCharger");
  int v15 = *(_DWORD *)(a1 + 396);
  if ((v15 & 0x40000000) == 0)
  {
LABEL_21:
    if ((v15 & 0x80000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_73;
  }
LABEL_72:
  PB::TextFormatter::format(this, "hasMotionBeforeImpact");
  int v15 = *(_DWORD *)(a1 + 396);
  if ((v15 & 0x80000000) == 0)
  {
LABEL_22:
    if ((v15 & 4) == 0) {
      goto LABEL_23;
    }
    goto LABEL_74;
  }
LABEL_73:
  PB::TextFormatter::format(this, "lastChargerState");
  int v15 = *(_DWORD *)(a1 + 396);
  if ((v15 & 4) == 0)
  {
LABEL_23:
    if ((v15 & 8) == 0) {
      goto LABEL_24;
    }
    goto LABEL_75;
  }
LABEL_74:
  PB::TextFormatter::format(this, "lastChargerStateDuration", *(double *)(a1 + 240));
  int v15 = *(_DWORD *)(a1 + 396);
  if ((v15 & 8) == 0)
  {
LABEL_24:
    if ((v15 & 0x10) == 0) {
      goto LABEL_25;
    }
    goto LABEL_76;
  }
LABEL_75:
  PB::TextFormatter::format(this, "lastChargerStateDurationThreshold", *(double *)(a1 + 248));
  int v15 = *(_DWORD *)(a1 + 396);
  if ((v15 & 0x10) == 0)
  {
LABEL_25:
    if ((v15 & 0x20) == 0) {
      goto LABEL_26;
    }
    goto LABEL_77;
  }
LABEL_76:
  PB::TextFormatter::format(this, "lastCoreMotionWristState");
  int v15 = *(_DWORD *)(a1 + 396);
  if ((v15 & 0x20) == 0)
  {
LABEL_26:
    if ((v15 & 0x40) == 0) {
      goto LABEL_27;
    }
    goto LABEL_78;
  }
LABEL_77:
  PB::TextFormatter::format(this, "lastCoreMotionWristStateDuration", *(double *)(a1 + 264));
  int v15 = *(_DWORD *)(a1 + 396);
  if ((v15 & 0x40) == 0)
  {
LABEL_27:
    if ((v15 & 0x80) == 0) {
      goto LABEL_28;
    }
    goto LABEL_79;
  }
LABEL_78:
  PB::TextFormatter::format(this, "lastCoreMotionWristStateDurationPostEnd", *(double *)(a1 + 272));
  int v15 = *(_DWORD *)(a1 + 396);
  if ((v15 & 0x80) == 0)
  {
LABEL_28:
    if ((v15 & 0x100) == 0) {
      goto LABEL_29;
    }
    goto LABEL_80;
  }
LABEL_79:
  PB::TextFormatter::format(this, "lastCoreMotionWristStateDurationPostStart", *(double *)(a1 + 280));
  int v15 = *(_DWORD *)(a1 + 396);
  if ((v15 & 0x100) == 0)
  {
LABEL_29:
    if ((v15 & 0x200) == 0) {
      goto LABEL_30;
    }
    goto LABEL_81;
  }
LABEL_80:
  PB::TextFormatter::format(this, "lastCoreMotionWristStateDurationPostThreshold", *(double *)(a1 + 288));
  int v15 = *(_DWORD *)(a1 + 396);
  if ((v15 & 0x200) == 0)
  {
LABEL_30:
    if ((v15 & 0x400) == 0) {
      goto LABEL_31;
    }
    goto LABEL_82;
  }
LABEL_81:
  PB::TextFormatter::format(this, "lastCoreMotionWristStateDurationPreEnd", *(double *)(a1 + 296));
  int v15 = *(_DWORD *)(a1 + 396);
  if ((v15 & 0x400) == 0)
  {
LABEL_31:
    if ((v15 & 0x800) == 0) {
      goto LABEL_32;
    }
    goto LABEL_83;
  }
LABEL_82:
  PB::TextFormatter::format(this, "lastCoreMotionWristStateDurationPreStart", *(double *)(a1 + 304));
  int v15 = *(_DWORD *)(a1 + 396);
  if ((v15 & 0x800) == 0)
  {
LABEL_32:
    if ((v15 & 0x1000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_84;
  }
LABEL_83:
  PB::TextFormatter::format(this, "lastLockedStateDurationPreEnd", *(double *)(a1 + 312));
  int v15 = *(_DWORD *)(a1 + 396);
  if ((v15 & 0x1000) == 0)
  {
LABEL_33:
    if ((v15 & 0x2000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_85;
  }
LABEL_84:
  PB::TextFormatter::format(this, "lastLockedStateDurationPreStart", *(double *)(a1 + 320));
  int v15 = *(_DWORD *)(a1 + 396);
  if ((v15 & 0x2000) == 0)
  {
LABEL_34:
    if ((v15 & 0x4000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_86;
  }
LABEL_85:
  PB::TextFormatter::format(this, "lastMotionState");
  int v15 = *(_DWORD *)(a1 + 396);
  if ((v15 & 0x4000) == 0)
  {
LABEL_35:
    if ((v15 & 0x8000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_36;
  }
LABEL_86:
  PB::TextFormatter::format(this, "lastMotionStateEndTime");
  if ((*(_DWORD *)(a1 + 396) & 0x8000) != 0) {
LABEL_36:
  }
    PB::TextFormatter::format(this, "lastMotionStateStartTime");
LABEL_37:
  uint64_t v16 = *(double **)(a1 + 80);
  uint64_t v17 = *(double **)(a1 + 88);
  while (v16 != v17)
  {
    double v18 = *v16++;
    PB::TextFormatter::format(this, "lockStateHistoryEndTimestamp", v18);
  }
  uint64_t v19 = *(double **)(a1 + 104);
  uint64_t v20 = *(double **)(a1 + 112);
  while (v19 != v20)
  {
    double v21 = *v19++;
    PB::TextFormatter::format(this, "lockStateHistoryStartTimestamp", v21);
  }
  uint64_t v22 = *(double **)(a1 + 128);
  uint64_t v23 = *(double **)(a1 + 136);
  while (v22 != v23)
  {
    double v24 = *v22++;
    PB::TextFormatter::format(this, "lockStateHistoryState", v24);
  }
  int v25 = *(_DWORD *)(a1 + 396);
  if ((v25 & 0x10000) != 0)
  {
    PB::TextFormatter::format(this, "motionLookbackBeforeImpactEndOfInterval");
    int v25 = *(_DWORD *)(a1 + 396);
  }
  if ((v25 & 0x20000) != 0) {
    PB::TextFormatter::format(this, "motionLookbackBeforeImpactStartOfInterval");
  }
  uint64_t v26 = *(double **)(a1 + 152);
  uint64_t v27 = *(double **)(a1 + 160);
  while (v26 != v27)
  {
    double v28 = *v26++;
    PB::TextFormatter::format(this, "motionStateHistoryEndTimestamp", v28);
  }
  uint64_t v29 = *(double **)(a1 + 176);
  uint64_t v30 = *(double **)(a1 + 184);
  while (v29 != v30)
  {
    double v31 = *v29++;
    PB::TextFormatter::format(this, "motionStateHistoryStartTimestamp", v31);
  }
  char v32 = *(double **)(a1 + 200);
  uint64_t v33 = *(double **)(a1 + 208);
  while (v32 != v33)
  {
    double v34 = *v32++;
    PB::TextFormatter::format(this, "motionStateHistoryState", v34);
  }
  int v35 = *(_DWORD *)(a1 + 396);
  if ((v35 & 0x40000) != 0)
  {
    PB::TextFormatter::format(this, "relativeTimestampToImpact", *(double *)(a1 + 368));
    int v35 = *(_DWORD *)(a1 + 396);
  }
  if ((v35 & 0x80000) != 0) {
    PB::TextFormatter::format(this, "timestamp");
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227B252C8(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v413 = a1 + 216;
    char v414 = (void **)(a1 + 152);
    char v415 = (void **)(a1 + 200);
    double v8 = (void **)(a1 + 176);
    uint64_t v411 = a1 + 192;
    uint64_t v412 = a1 + 168;
    int v9 = (void **)(a1 + 128);
    int v10 = (void **)(a1 + 80);
    uint64_t v409 = a1 + 96;
    uint64_t v410 = a1 + 144;
    double v11 = (void **)(a1 + 104);
    char v12 = (void **)(a1 + 56);
    uint64_t v407 = a1 + 72;
    uint64_t v408 = a1 + 120;
    char v13 = (void **)(a1 + 8);
    double v14 = (void **)(a1 + 32);
    uint64_t v405 = a1 + 48;
    uint64_t v406 = a1 + 24;
    while (1)
    {
      uint64_t v15 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v16 = 0;
      unsigned int v17 = 0;
      unint64_t v18 = 0;
      while (1)
      {
        unint64_t v19 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v20 = *(unsigned char *)(v15 + v2);
        v18 |= (unint64_t)(v20 & 0x7F) << v16;
        if ((v20 & 0x80) == 0) {
          break;
        }
        v16 += 7;
        unint64_t v2 = v19;
        BOOL v21 = v17++ > 8;
        if (v21) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v27 = v18 & 7;
      if (v27 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v28 = v18 >> 3;
      switch((v18 >> 3))
      {
        case 1u:
          *(_DWORD *)(a1 + 396) |= 0x80000u;
          unint64_t v29 = *((void *)this + 1);
          unint64_t v30 = *((void *)this + 2);
          uint64_t v31 = *(void *)this;
          if (v29 <= 0xFFFFFFFFFFFFFFF5 && v29 + 10 <= v30)
          {
            char v32 = 0;
            unsigned int v33 = 0;
            uint64_t v34 = 0;
            do
            {
              unint64_t v35 = v29 + 1;
              *((void *)this + 1) = v29 + 1;
              char v36 = *(unsigned char *)(v31 + v29);
              v34 |= (unint64_t)(v36 & 0x7F) << v32;
              if ((v36 & 0x80) == 0) {
                goto LABEL_541;
              }
              v32 += 7;
              unint64_t v29 = v35;
              BOOL v21 = v33++ > 8;
            }
            while (!v21);
LABEL_385:
            uint64_t v34 = 0;
            goto LABEL_541;
          }
          char v298 = 0;
          unsigned int v299 = 0;
          uint64_t v34 = 0;
          if (v30 <= v29) {
            unint64_t v30 = *((void *)this + 1);
          }
          while (2)
          {
            if (v30 == v29)
            {
              uint64_t v34 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v300 = v29 + 1;
              char v301 = *(unsigned char *)(v31 + v29);
              *((void *)this + 1) = v300;
              v34 |= (unint64_t)(v301 & 0x7F) << v298;
              if (v301 < 0)
              {
                v298 += 7;
                unint64_t v29 = v300;
                BOOL v21 = v299++ > 8;
                if (v21) {
                  goto LABEL_385;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v34 = 0;
              }
            }
            break;
          }
LABEL_541:
          *(void *)(a1 + 376) = v34;
          goto LABEL_631;
        case 2u:
          *(_DWORD *)(a1 + 396) |= 0x1000000u;
          unint64_t v167 = *((void *)this + 1);
          if (v167 >= *((void *)this + 2))
          {
            BOOL v170 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v168 = v167 + 1;
            int v169 = *(unsigned __int8 *)(*(void *)this + v167);
            *((void *)this + 1) = v168;
            BOOL v170 = v169 != 0;
          }
          *(unsigned char *)(a1 + 388) = v170;
          goto LABEL_631;
        case 3u:
          *(_DWORD *)(a1 + 396) |= 1u;
          unint64_t v171 = *((void *)this + 1);
          if (v171 > 0xFFFFFFFFFFFFFFF7 || v171 + 8 > *((void *)this + 2)) {
            goto LABEL_628;
          }
          *(void *)(a1 + 224) = *(void *)(*(void *)this + v171);
          goto LABEL_630;
        case 4u:
          *(_DWORD *)(a1 + 396) |= 0x40000u;
          unint64_t v172 = *((void *)this + 1);
          if (v172 > 0xFFFFFFFFFFFFFFF7 || v172 + 8 > *((void *)this + 2)) {
            goto LABEL_628;
          }
          *(void *)(a1 + 368) = *(void *)(*(void *)this + v172);
          goto LABEL_630;
        case 5u:
          *(_DWORD *)(a1 + 396) |= 2u;
          unint64_t v173 = *((void *)this + 1);
          unint64_t v174 = *((void *)this + 2);
          uint64_t v175 = *(void *)this;
          if (v173 <= 0xFFFFFFFFFFFFFFF5 && v173 + 10 <= v174)
          {
            char v176 = 0;
            unsigned int v177 = 0;
            uint64_t v178 = 0;
            do
            {
              unint64_t v179 = v173 + 1;
              *((void *)this + 1) = v173 + 1;
              char v180 = *(unsigned char *)(v175 + v173);
              v178 |= (unint64_t)(v180 & 0x7F) << v176;
              if ((v180 & 0x80) == 0) {
                goto LABEL_544;
              }
              v176 += 7;
              unint64_t v173 = v179;
              BOOL v21 = v177++ > 8;
            }
            while (!v21);
LABEL_394:
            uint64_t v178 = 0;
            goto LABEL_544;
          }
          char v302 = 0;
          unsigned int v303 = 0;
          uint64_t v178 = 0;
          if (v174 <= v173) {
            unint64_t v174 = *((void *)this + 1);
          }
          while (2)
          {
            if (v174 == v173)
            {
              uint64_t v178 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v304 = v173 + 1;
              char v305 = *(unsigned char *)(v175 + v173);
              *((void *)this + 1) = v304;
              v178 |= (unint64_t)(v305 & 0x7F) << v302;
              if (v305 < 0)
              {
                v302 += 7;
                unint64_t v173 = v304;
                BOOL v21 = v303++ > 8;
                if (v21) {
                  goto LABEL_394;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v178 = 0;
              }
            }
            break;
          }
LABEL_544:
          *(void *)(a1 + 232) = v178;
          goto LABEL_631;
        case 6u:
        case 7u:
        case 8u:
        case 9u:
        case 0xAu:
        case 0xBu:
        case 0xCu:
        case 0xDu:
        case 0xEu:
        case 0xFu:
        case 0x10u:
        case 0x11u:
        case 0x12u:
        case 0x13u:
        case 0x14u:
        case 0x23u:
        case 0x24u:
        case 0x25u:
        case 0x26u:
        case 0x27u:
        case 0x28u:
        case 0x2Cu:
        case 0x2Du:
        case 0x2Eu:
        case 0x2Fu:
        case 0x30u:
        case 0x31u:
        case 0x32u:
LABEL_58:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_631;
        case 0x15u:
          *(_DWORD *)(a1 + 396) |= 0x10u;
          unint64_t v181 = *((void *)this + 1);
          unint64_t v182 = *((void *)this + 2);
          uint64_t v183 = *(void *)this;
          if (v181 <= 0xFFFFFFFFFFFFFFF5 && v181 + 10 <= v182)
          {
            char v184 = 0;
            unsigned int v185 = 0;
            uint64_t v186 = 0;
            do
            {
              unint64_t v187 = v181 + 1;
              *((void *)this + 1) = v181 + 1;
              char v188 = *(unsigned char *)(v183 + v181);
              v186 |= (unint64_t)(v188 & 0x7F) << v184;
              if ((v188 & 0x80) == 0) {
                goto LABEL_547;
              }
              v184 += 7;
              unint64_t v181 = v187;
              BOOL v21 = v185++ > 8;
            }
            while (!v21);
LABEL_401:
            uint64_t v186 = 0;
            goto LABEL_547;
          }
          char v306 = 0;
          unsigned int v307 = 0;
          uint64_t v186 = 0;
          if (v182 <= v181) {
            unint64_t v182 = *((void *)this + 1);
          }
          while (2)
          {
            if (v182 == v181)
            {
              uint64_t v186 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v308 = v181 + 1;
              char v309 = *(unsigned char *)(v183 + v181);
              *((void *)this + 1) = v308;
              v186 |= (unint64_t)(v309 & 0x7F) << v306;
              if (v309 < 0)
              {
                v306 += 7;
                unint64_t v181 = v308;
                BOOL v21 = v307++ > 8;
                if (v21) {
                  goto LABEL_401;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v186 = 0;
              }
            }
            break;
          }
LABEL_547:
          *(void *)(a1 + 256) = v186;
          goto LABEL_631;
        case 0x16u:
          *(_DWORD *)(a1 + 396) |= 0x20u;
          unint64_t v189 = *((void *)this + 1);
          if (v189 > 0xFFFFFFFFFFFFFFF7 || v189 + 8 > *((void *)this + 2)) {
            goto LABEL_628;
          }
          *(void *)(a1 + 264) = *(void *)(*(void *)this + v189);
          goto LABEL_630;
        case 0x17u:
          *(_DWORD *)(a1 + 396) |= 0x100u;
          unint64_t v190 = *((void *)this + 1);
          if (v190 > 0xFFFFFFFFFFFFFFF7 || v190 + 8 > *((void *)this + 2)) {
            goto LABEL_628;
          }
          *(void *)(a1 + 288) = *(void *)(*(void *)this + v190);
          goto LABEL_630;
        case 0x18u:
          *(_DWORD *)(a1 + 396) |= 0x400u;
          unint64_t v191 = *((void *)this + 1);
          if (v191 > 0xFFFFFFFFFFFFFFF7 || v191 + 8 > *((void *)this + 2)) {
            goto LABEL_628;
          }
          *(void *)(a1 + 304) = *(void *)(*(void *)this + v191);
          goto LABEL_630;
        case 0x19u:
          *(_DWORD *)(a1 + 396) |= 0x200u;
          unint64_t v192 = *((void *)this + 1);
          if (v192 > 0xFFFFFFFFFFFFFFF7 || v192 + 8 > *((void *)this + 2)) {
            goto LABEL_628;
          }
          *(void *)(a1 + 296) = *(void *)(*(void *)this + v192);
          goto LABEL_630;
        case 0x1Au:
          *(_DWORD *)(a1 + 396) |= 0x80u;
          unint64_t v193 = *((void *)this + 1);
          if (v193 > 0xFFFFFFFFFFFFFFF7 || v193 + 8 > *((void *)this + 2)) {
            goto LABEL_628;
          }
          *(void *)(a1 + 280) = *(void *)(*(void *)this + v193);
          goto LABEL_630;
        case 0x1Bu:
          *(_DWORD *)(a1 + 396) |= 0x40u;
          unint64_t v194 = *((void *)this + 1);
          if (v194 > 0xFFFFFFFFFFFFFFF7 || v194 + 8 > *((void *)this + 2)) {
            goto LABEL_628;
          }
          *(void *)(a1 + 272) = *(void *)(*(void *)this + v194);
          goto LABEL_630;
        case 0x1Cu:
          *(_DWORD *)(a1 + 396) |= 0x1000u;
          unint64_t v195 = *((void *)this + 1);
          if (v195 > 0xFFFFFFFFFFFFFFF7 || v195 + 8 > *((void *)this + 2)) {
            goto LABEL_628;
          }
          *(void *)(a1 + 320) = *(void *)(*(void *)this + v195);
          goto LABEL_630;
        case 0x1Du:
          *(_DWORD *)(a1 + 396) |= 0x800u;
          unint64_t v196 = *((void *)this + 1);
          if (v196 > 0xFFFFFFFFFFFFFFF7 || v196 + 8 > *((void *)this + 2)) {
            goto LABEL_628;
          }
          *(void *)(a1 + 312) = *(void *)(*(void *)this + v196);
          goto LABEL_630;
        case 0x1Eu:
          *(_DWORD *)(a1 + 396) |= 0x20000u;
          unint64_t v197 = *((void *)this + 1);
          unint64_t v198 = *((void *)this + 2);
          uint64_t v199 = *(void *)this;
          if (v197 <= 0xFFFFFFFFFFFFFFF5 && v197 + 10 <= v198)
          {
            char v200 = 0;
            unsigned int v201 = 0;
            uint64_t v202 = 0;
            do
            {
              unint64_t v203 = v197 + 1;
              *((void *)this + 1) = v197 + 1;
              char v204 = *(unsigned char *)(v199 + v197);
              v202 |= (unint64_t)(v204 & 0x7F) << v200;
              if ((v204 & 0x80) == 0) {
                goto LABEL_550;
              }
              v200 += 7;
              unint64_t v197 = v203;
              BOOL v21 = v201++ > 8;
            }
            while (!v21);
LABEL_408:
            uint64_t v202 = 0;
            goto LABEL_550;
          }
          char v310 = 0;
          unsigned int v311 = 0;
          uint64_t v202 = 0;
          if (v198 <= v197) {
            unint64_t v198 = *((void *)this + 1);
          }
          while (2)
          {
            if (v198 == v197)
            {
              uint64_t v202 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v312 = v197 + 1;
              char v313 = *(unsigned char *)(v199 + v197);
              *((void *)this + 1) = v312;
              v202 |= (unint64_t)(v313 & 0x7F) << v310;
              if (v313 < 0)
              {
                v310 += 7;
                unint64_t v197 = v312;
                BOOL v21 = v311++ > 8;
                if (v21) {
                  goto LABEL_408;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v202 = 0;
              }
            }
            break;
          }
LABEL_550:
          *(void *)(a1 + 360) = v202;
          goto LABEL_631;
        case 0x1Fu:
          *(_DWORD *)(a1 + 396) |= 0x10000u;
          unint64_t v205 = *((void *)this + 1);
          unint64_t v206 = *((void *)this + 2);
          uint64_t v207 = *(void *)this;
          if (v205 <= 0xFFFFFFFFFFFFFFF5 && v205 + 10 <= v206)
          {
            char v208 = 0;
            unsigned int v209 = 0;
            uint64_t v210 = 0;
            do
            {
              unint64_t v211 = v205 + 1;
              *((void *)this + 1) = v205 + 1;
              char v212 = *(unsigned char *)(v207 + v205);
              v210 |= (unint64_t)(v212 & 0x7F) << v208;
              if ((v212 & 0x80) == 0) {
                goto LABEL_553;
              }
              v208 += 7;
              unint64_t v205 = v211;
              BOOL v21 = v209++ > 8;
            }
            while (!v21);
LABEL_415:
            uint64_t v210 = 0;
            goto LABEL_553;
          }
          char v314 = 0;
          unsigned int v315 = 0;
          uint64_t v210 = 0;
          if (v206 <= v205) {
            unint64_t v206 = *((void *)this + 1);
          }
          while (2)
          {
            if (v206 == v205)
            {
              uint64_t v210 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v316 = v205 + 1;
              char v317 = *(unsigned char *)(v207 + v205);
              *((void *)this + 1) = v316;
              v210 |= (unint64_t)(v317 & 0x7F) << v314;
              if (v317 < 0)
              {
                v314 += 7;
                unint64_t v205 = v316;
                BOOL v21 = v315++ > 8;
                if (v21) {
                  goto LABEL_415;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v210 = 0;
              }
            }
            break;
          }
LABEL_553:
          *(void *)(a1 + 352) = v210;
          goto LABEL_631;
        case 0x20u:
          *(_DWORD *)(a1 + 396) |= 0x8000u;
          unint64_t v213 = *((void *)this + 1);
          unint64_t v214 = *((void *)this + 2);
          uint64_t v215 = *(void *)this;
          if (v213 <= 0xFFFFFFFFFFFFFFF5 && v213 + 10 <= v214)
          {
            char v216 = 0;
            unsigned int v217 = 0;
            uint64_t v218 = 0;
            do
            {
              unint64_t v219 = v213 + 1;
              *((void *)this + 1) = v213 + 1;
              char v220 = *(unsigned char *)(v215 + v213);
              v218 |= (unint64_t)(v220 & 0x7F) << v216;
              if ((v220 & 0x80) == 0) {
                goto LABEL_556;
              }
              v216 += 7;
              unint64_t v213 = v219;
              BOOL v21 = v217++ > 8;
            }
            while (!v21);
LABEL_422:
            uint64_t v218 = 0;
            goto LABEL_556;
          }
          char v318 = 0;
          unsigned int v319 = 0;
          uint64_t v218 = 0;
          if (v214 <= v213) {
            unint64_t v214 = *((void *)this + 1);
          }
          while (2)
          {
            if (v214 == v213)
            {
              uint64_t v218 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v320 = v213 + 1;
              char v321 = *(unsigned char *)(v215 + v213);
              *((void *)this + 1) = v320;
              v218 |= (unint64_t)(v321 & 0x7F) << v318;
              if (v321 < 0)
              {
                v318 += 7;
                unint64_t v213 = v320;
                BOOL v21 = v319++ > 8;
                if (v21) {
                  goto LABEL_422;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v218 = 0;
              }
            }
            break;
          }
LABEL_556:
          *(void *)(a1 + 344) = v218;
          goto LABEL_631;
        case 0x21u:
          *(_DWORD *)(a1 + 396) |= 0x4000u;
          unint64_t v221 = *((void *)this + 1);
          unint64_t v222 = *((void *)this + 2);
          uint64_t v223 = *(void *)this;
          if (v221 <= 0xFFFFFFFFFFFFFFF5 && v221 + 10 <= v222)
          {
            char v224 = 0;
            unsigned int v225 = 0;
            uint64_t v226 = 0;
            do
            {
              unint64_t v227 = v221 + 1;
              *((void *)this + 1) = v221 + 1;
              char v228 = *(unsigned char *)(v223 + v221);
              v226 |= (unint64_t)(v228 & 0x7F) << v224;
              if ((v228 & 0x80) == 0) {
                goto LABEL_559;
              }
              v224 += 7;
              unint64_t v221 = v227;
              BOOL v21 = v225++ > 8;
            }
            while (!v21);
LABEL_429:
            uint64_t v226 = 0;
            goto LABEL_559;
          }
          char v322 = 0;
          unsigned int v323 = 0;
          uint64_t v226 = 0;
          if (v222 <= v221) {
            unint64_t v222 = *((void *)this + 1);
          }
          while (2)
          {
            if (v222 == v221)
            {
              uint64_t v226 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v324 = v221 + 1;
              char v325 = *(unsigned char *)(v223 + v221);
              *((void *)this + 1) = v324;
              v226 |= (unint64_t)(v325 & 0x7F) << v322;
              if (v325 < 0)
              {
                v322 += 7;
                unint64_t v221 = v324;
                BOOL v21 = v323++ > 8;
                if (v21) {
                  goto LABEL_429;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v226 = 0;
              }
            }
            break;
          }
LABEL_559:
          *(void *)(a1 + 336) = v226;
          goto LABEL_631;
        case 0x22u:
          *(_DWORD *)(a1 + 396) |= 0x2000u;
          unint64_t v229 = *((void *)this + 1);
          unint64_t v230 = *((void *)this + 2);
          uint64_t v231 = *(void *)this;
          if (v229 <= 0xFFFFFFFFFFFFFFF5 && v229 + 10 <= v230)
          {
            char v232 = 0;
            unsigned int v233 = 0;
            uint64_t v234 = 0;
            do
            {
              unint64_t v235 = v229 + 1;
              *((void *)this + 1) = v229 + 1;
              char v236 = *(unsigned char *)(v231 + v229);
              v234 |= (unint64_t)(v236 & 0x7F) << v232;
              if ((v236 & 0x80) == 0) {
                goto LABEL_562;
              }
              v232 += 7;
              unint64_t v229 = v235;
              BOOL v21 = v233++ > 8;
            }
            while (!v21);
LABEL_436:
            uint64_t v234 = 0;
            goto LABEL_562;
          }
          char v326 = 0;
          unsigned int v327 = 0;
          uint64_t v234 = 0;
          if (v230 <= v229) {
            unint64_t v230 = *((void *)this + 1);
          }
          while (2)
          {
            if (v230 == v229)
            {
              uint64_t v234 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v328 = v229 + 1;
              char v329 = *(unsigned char *)(v231 + v229);
              *((void *)this + 1) = v328;
              v234 |= (unint64_t)(v329 & 0x7F) << v326;
              if (v329 < 0)
              {
                v326 += 7;
                unint64_t v229 = v328;
                BOOL v21 = v327++ > 8;
                if (v21) {
                  goto LABEL_436;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v234 = 0;
              }
            }
            break;
          }
LABEL_562:
          *(void *)(a1 + 328) = v234;
          goto LABEL_631;
        case 0x29u:
          *(_DWORD *)(a1 + 396) |= 0x80000000;
          unint64_t v237 = *((void *)this + 1);
          if (v237 >= *((void *)this + 2))
          {
            BOOL v240 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v238 = v237 + 1;
            int v239 = *(unsigned __int8 *)(*(void *)this + v237);
            *((void *)this + 1) = v238;
            BOOL v240 = v239 != 0;
          }
          *(unsigned char *)(a1 + 395) = v240;
          goto LABEL_631;
        case 0x2Au:
          *(_DWORD *)(a1 + 396) |= 4u;
          unint64_t v241 = *((void *)this + 1);
          if (v241 > 0xFFFFFFFFFFFFFFF7 || v241 + 8 > *((void *)this + 2)) {
            goto LABEL_628;
          }
          *(void *)(a1 + 240) = *(void *)(*(void *)this + v241);
          goto LABEL_630;
        case 0x2Bu:
          *(_DWORD *)(a1 + 396) |= 8u;
          unint64_t v242 = *((void *)this + 1);
          if (v242 > 0xFFFFFFFFFFFFFFF7 || v242 + 8 > *((void *)this + 2)) {
            goto LABEL_628;
          }
          *(void *)(a1 + 248) = *(void *)(*(void *)this + v242);
          goto LABEL_630;
        case 0x33u:
          *(_DWORD *)(a1 + 396) |= 0x100000u;
          unint64_t v243 = *((void *)this + 1);
          if (v243 >= *((void *)this + 2))
          {
            BOOL v246 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v244 = v243 + 1;
            int v245 = *(unsigned __int8 *)(*(void *)this + v243);
            *((void *)this + 1) = v244;
            BOOL v246 = v245 != 0;
          }
          *(unsigned char *)(a1 + 384) = v246;
          goto LABEL_631;
        case 0x34u:
          *(_DWORD *)(a1 + 396) |= 0x400000u;
          unint64_t v247 = *((void *)this + 1);
          if (v247 >= *((void *)this + 2))
          {
            BOOL v250 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v248 = v247 + 1;
            int v249 = *(unsigned __int8 *)(*(void *)this + v247);
            *((void *)this + 1) = v248;
            BOOL v250 = v249 != 0;
          }
          *(unsigned char *)(a1 + 386) = v250;
          goto LABEL_631;
        case 0x35u:
          *(_DWORD *)(a1 + 396) |= 0x40000000u;
          unint64_t v251 = *((void *)this + 1);
          if (v251 >= *((void *)this + 2))
          {
            BOOL v254 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v252 = v251 + 1;
            int v253 = *(unsigned __int8 *)(*(void *)this + v251);
            *((void *)this + 1) = v252;
            BOOL v254 = v253 != 0;
          }
          *(unsigned char *)(a1 + 394) = v254;
          goto LABEL_631;
        case 0x36u:
          *(_DWORD *)(a1 + 396) |= 0x200000u;
          unint64_t v255 = *((void *)this + 1);
          if (v255 >= *((void *)this + 2))
          {
            BOOL v258 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v256 = v255 + 1;
            int v257 = *(unsigned __int8 *)(*(void *)this + v255);
            *((void *)this + 1) = v256;
            BOOL v258 = v257 != 0;
          }
          *(unsigned char *)(a1 + 385) = v258;
          goto LABEL_631;
        case 0x37u:
          *(_DWORD *)(a1 + 396) |= 0x800000u;
          unint64_t v259 = *((void *)this + 1);
          if (v259 >= *((void *)this + 2))
          {
            BOOL v262 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v260 = v259 + 1;
            int v261 = *(unsigned __int8 *)(*(void *)this + v259);
            *((void *)this + 1) = v260;
            BOOL v262 = v261 != 0;
          }
          *(unsigned char *)(a1 + 387) = v262;
          goto LABEL_631;
        default:
          switch((int)v28)
          {
            case 151:
              if (v27 != 2)
              {
                unsigned int v280 = *(char **)(a1 + 40);
                unint64_t v279 = *(void *)(a1 + 48);
                if ((unint64_t)v280 >= v279)
                {
                  unsigned int v330 = (char *)*v14;
                  uint64_t v331 = (v280 - (unsigned char *)*v14) >> 3;
                  unint64_t v332 = v331 + 1;
                  if ((unint64_t)(v331 + 1) >> 61) {
LABEL_641:
                  }
                    sub_227B8B89C();
                  uint64_t v333 = v279 - (void)v330;
                  if (v333 >> 2 > v332) {
                    unint64_t v332 = v333 >> 2;
                  }
                  if ((unint64_t)v333 >= 0x7FFFFFFFFFFFFFF8) {
                    unint64_t v334 = 0x1FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v334 = v332;
                  }
                  if (v334)
                  {
                    unint64_t v335 = (char *)sub_227B8B8B4(v405, v334);
                    unsigned int v330 = *(char **)(a1 + 32);
                    unsigned int v280 = *(char **)(a1 + 40);
                  }
                  else
                  {
                    unint64_t v335 = 0;
                  }
                  unsigned int v384 = &v335[8 * v331];
                  *(void *)unsigned int v384 = 0;
                  unint64_t v281 = v384 + 8;
                  while (v280 != v330)
                  {
                    uint64_t v385 = *((void *)v280 - 1);
                    v280 -= 8;
                    *((void *)v384 - 1) = v385;
                    v384 -= 8;
                  }
                  *(void *)(a1 + 32) = v384;
                  *(void *)(a1 + 40) = v281;
                  *(void *)(a1 + 48) = &v335[8 * v334];
                  if (v330) {
                    operator delete(v330);
                  }
                }
                else
                {
                  *(void *)unsigned int v280 = 0;
                  unint64_t v281 = v280 + 8;
                }
                *(void *)(a1 + 40) = v281;
                goto LABEL_626;
              }
              if (PB::Reader::placeMark()) {
                return 0;
              }
              unint64_t v37 = *((void *)this + 1);
              unint64_t v38 = *((void *)this + 2);
              while (v37 < v38 && !*((unsigned char *)this + 24))
              {
                char v40 = *(char **)(a1 + 40);
                unint64_t v39 = *(void *)(a1 + 48);
                if ((unint64_t)v40 >= v39)
                {
                  char v42 = (char *)*v14;
                  uint64_t v43 = (v40 - (unsigned char *)*v14) >> 3;
                  unint64_t v44 = v43 + 1;
                  if ((unint64_t)(v43 + 1) >> 61) {
                    goto LABEL_641;
                  }
                  uint64_t v45 = v39 - (void)v42;
                  if (v45 >> 2 > v44) {
                    unint64_t v44 = v45 >> 2;
                  }
                  if ((unint64_t)v45 >= 0x7FFFFFFFFFFFFFF8) {
                    unint64_t v46 = 0x1FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v46 = v44;
                  }
                  if (v46)
                  {
                    unint64_t v47 = (char *)sub_227B8B8B4(v405, v46);
                    char v42 = *(char **)(a1 + 32);
                    char v40 = *(char **)(a1 + 40);
                  }
                  else
                  {
                    unint64_t v47 = 0;
                  }
                  char v48 = &v47[8 * v43];
                  *(void *)char v48 = 0;
                  char v41 = v48 + 8;
                  while (v40 != v42)
                  {
                    uint64_t v49 = *((void *)v40 - 1);
                    v40 -= 8;
                    *((void *)v48 - 1) = v49;
                    v48 -= 8;
                  }
                  *(void *)(a1 + 32) = v48;
                  *(void *)(a1 + 40) = v41;
                  *(void *)(a1 + 48) = &v47[8 * v46];
                  if (v42) {
                    operator delete(v42);
                  }
                }
                else
                {
                  *(void *)char v40 = 0;
                  char v41 = v40 + 8;
                }
                *(void *)(a1 + 40) = v41;
                unint64_t v50 = *((void *)this + 1);
                if (v50 > 0xFFFFFFFFFFFFFFF7 || v50 + 8 > *((void *)this + 2)) {
                  goto LABEL_252;
                }
                *(v41 - 1) = *(void *)(*(void *)this + v50);
                unint64_t v38 = *((void *)this + 2);
                unint64_t v37 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v37;
              }
              goto LABEL_253;
            case 152:
              if (v27 != 2)
              {
                char v283 = *(char **)(a1 + 16);
                unint64_t v282 = *(void *)(a1 + 24);
                if ((unint64_t)v283 >= v282)
                {
                  uint64_t v336 = (char *)*v13;
                  uint64_t v337 = (v283 - (unsigned char *)*v13) >> 3;
                  unint64_t v338 = v337 + 1;
                  if ((unint64_t)(v337 + 1) >> 61) {
LABEL_642:
                  }
                    sub_227B8B89C();
                  uint64_t v339 = v282 - (void)v336;
                  if (v339 >> 2 > v338) {
                    unint64_t v338 = v339 >> 2;
                  }
                  if ((unint64_t)v339 >= 0x7FFFFFFFFFFFFFF8) {
                    unint64_t v340 = 0x1FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v340 = v338;
                  }
                  if (v340)
                  {
                    char v341 = (char *)sub_227B8B8B4(v406, v340);
                    uint64_t v336 = *(char **)(a1 + 8);
                    char v283 = *(char **)(a1 + 16);
                  }
                  else
                  {
                    char v341 = 0;
                  }
                  char v386 = &v341[8 * v337];
                  *(void *)char v386 = 0;
                  unint64_t v281 = v386 + 8;
                  while (v283 != v336)
                  {
                    uint64_t v387 = *((void *)v283 - 1);
                    v283 -= 8;
                    *((void *)v386 - 1) = v387;
                    v386 -= 8;
                  }
                  *(void *)(a1 + 8) = v386;
                  *(void *)(a1 + 16) = v281;
                  *(void *)(a1 + 24) = &v341[8 * v340];
                  if (v336) {
                    operator delete(v336);
                  }
                }
                else
                {
                  *(void *)char v283 = 0;
                  unint64_t v281 = v283 + 8;
                }
                *(void *)(a1 + 16) = v281;
                goto LABEL_626;
              }
              if (PB::Reader::placeMark()) {
                return 0;
              }
              unint64_t v55 = *((void *)this + 1);
              unint64_t v56 = *((void *)this + 2);
              while (v55 < v56 && !*((unsigned char *)this + 24))
              {
                unint64_t v58 = *(char **)(a1 + 16);
                unint64_t v57 = *(void *)(a1 + 24);
                if ((unint64_t)v58 >= v57)
                {
                  char v60 = (char *)*v13;
                  uint64_t v61 = (v58 - (unsigned char *)*v13) >> 3;
                  unint64_t v62 = v61 + 1;
                  if ((unint64_t)(v61 + 1) >> 61) {
                    goto LABEL_642;
                  }
                  uint64_t v63 = v57 - (void)v60;
                  if (v63 >> 2 > v62) {
                    unint64_t v62 = v63 >> 2;
                  }
                  if ((unint64_t)v63 >= 0x7FFFFFFFFFFFFFF8) {
                    unint64_t v64 = 0x1FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v64 = v62;
                  }
                  if (v64)
                  {
                    unint64_t v65 = (char *)sub_227B8B8B4(v406, v64);
                    char v60 = *(char **)(a1 + 8);
                    unint64_t v58 = *(char **)(a1 + 16);
                  }
                  else
                  {
                    unint64_t v65 = 0;
                  }
                  unint64_t v66 = &v65[8 * v61];
                  *(void *)unint64_t v66 = 0;
                  uint64_t v59 = v66 + 8;
                  while (v58 != v60)
                  {
                    uint64_t v67 = *((void *)v58 - 1);
                    v58 -= 8;
                    *((void *)v66 - 1) = v67;
                    v66 -= 8;
                  }
                  *(void *)(a1 + 8) = v66;
                  *(void *)(a1 + 16) = v59;
                  *(void *)(a1 + 24) = &v65[8 * v64];
                  if (v60) {
                    operator delete(v60);
                  }
                }
                else
                {
                  *(void *)unint64_t v58 = 0;
                  uint64_t v59 = v58 + 8;
                }
                *(void *)(a1 + 16) = v59;
                unint64_t v68 = *((void *)this + 1);
                if (v68 > 0xFFFFFFFFFFFFFFF7 || v68 + 8 > *((void *)this + 2)) {
                  goto LABEL_252;
                }
                *(v59 - 1) = *(void *)(*(void *)this + v68);
                unint64_t v56 = *((void *)this + 2);
                unint64_t v55 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v55;
              }
              goto LABEL_253;
            case 153:
              if (v27 != 2)
              {
                unint64_t v285 = *(char **)(a1 + 64);
                unint64_t v284 = *(void *)(a1 + 72);
                if ((unint64_t)v285 >= v284)
                {
                  unint64_t v342 = (char *)*v12;
                  uint64_t v343 = (v285 - (unsigned char *)*v12) >> 3;
                  unint64_t v344 = v343 + 1;
                  if ((unint64_t)(v343 + 1) >> 61) {
LABEL_643:
                  }
                    sub_227B8B89C();
                  uint64_t v345 = v284 - (void)v342;
                  if (v345 >> 2 > v344) {
                    unint64_t v344 = v345 >> 2;
                  }
                  if ((unint64_t)v345 >= 0x7FFFFFFFFFFFFFF8) {
                    unint64_t v346 = 0x1FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v346 = v344;
                  }
                  if (v346)
                  {
                    uint64_t v347 = (char *)sub_227B8B8B4(v407, v346);
                    unint64_t v342 = *(char **)(a1 + 56);
                    unint64_t v285 = *(char **)(a1 + 64);
                  }
                  else
                  {
                    uint64_t v347 = 0;
                  }
                  unsigned int v388 = &v347[8 * v343];
                  *(void *)unsigned int v388 = 0;
                  unint64_t v281 = v388 + 8;
                  while (v285 != v342)
                  {
                    uint64_t v389 = *((void *)v285 - 1);
                    v285 -= 8;
                    *((void *)v388 - 1) = v389;
                    v388 -= 8;
                  }
                  *(void *)(a1 + 56) = v388;
                  *(void *)(a1 + 64) = v281;
                  *(void *)(a1 + 72) = &v347[8 * v346];
                  if (v342) {
                    operator delete(v342);
                  }
                }
                else
                {
                  *(void *)unint64_t v285 = 0;
                  unint64_t v281 = v285 + 8;
                }
                *(void *)(a1 + 64) = v281;
                goto LABEL_626;
              }
              if (PB::Reader::placeMark()) {
                return 0;
              }
              unint64_t v69 = *((void *)this + 1);
              unint64_t v70 = *((void *)this + 2);
              while (v69 < v70 && !*((unsigned char *)this + 24))
              {
                unsigned int v72 = *(char **)(a1 + 64);
                unint64_t v71 = *(void *)(a1 + 72);
                if ((unint64_t)v72 >= v71)
                {
                  unint64_t v74 = (char *)*v12;
                  uint64_t v75 = (v72 - (unsigned char *)*v12) >> 3;
                  unint64_t v76 = v75 + 1;
                  if ((unint64_t)(v75 + 1) >> 61) {
                    goto LABEL_643;
                  }
                  uint64_t v77 = v71 - (void)v74;
                  if (v77 >> 2 > v76) {
                    unint64_t v76 = v77 >> 2;
                  }
                  if ((unint64_t)v77 >= 0x7FFFFFFFFFFFFFF8) {
                    unint64_t v78 = 0x1FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v78 = v76;
                  }
                  if (v78)
                  {
                    uint64_t v79 = (char *)sub_227B8B8B4(v407, v78);
                    unint64_t v74 = *(char **)(a1 + 56);
                    unsigned int v72 = *(char **)(a1 + 64);
                  }
                  else
                  {
                    uint64_t v79 = 0;
                  }
                  char v80 = &v79[8 * v75];
                  *(void *)char v80 = 0;
                  uint64_t v73 = v80 + 8;
                  while (v72 != v74)
                  {
                    uint64_t v81 = *((void *)v72 - 1);
                    v72 -= 8;
                    *((void *)v80 - 1) = v81;
                    v80 -= 8;
                  }
                  *(void *)(a1 + 56) = v80;
                  *(void *)(a1 + 64) = v73;
                  *(void *)(a1 + 72) = &v79[8 * v78];
                  if (v74) {
                    operator delete(v74);
                  }
                }
                else
                {
                  *(void *)unsigned int v72 = 0;
                  uint64_t v73 = v72 + 8;
                }
                *(void *)(a1 + 64) = v73;
                unint64_t v82 = *((void *)this + 1);
                if (v82 > 0xFFFFFFFFFFFFFFF7 || v82 + 8 > *((void *)this + 2)) {
                  goto LABEL_252;
                }
                *(v73 - 1) = *(void *)(*(void *)this + v82);
                unint64_t v70 = *((void *)this + 2);
                unint64_t v69 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v69;
              }
              goto LABEL_253;
            case 154:
            case 155:
            case 156:
            case 157:
            case 158:
            case 159:
            case 160:
              goto LABEL_58;
            case 161:
              if (v27 != 2)
              {
                char v287 = *(char **)(a1 + 112);
                unint64_t v286 = *(void *)(a1 + 120);
                if ((unint64_t)v287 >= v286)
                {
                  unint64_t v348 = (char *)*v11;
                  uint64_t v349 = (v287 - (unsigned char *)*v11) >> 3;
                  unint64_t v350 = v349 + 1;
                  if ((unint64_t)(v349 + 1) >> 61) {
LABEL_644:
                  }
                    sub_227B8B89C();
                  uint64_t v351 = v286 - (void)v348;
                  if (v351 >> 2 > v350) {
                    unint64_t v350 = v351 >> 2;
                  }
                  if ((unint64_t)v351 >= 0x7FFFFFFFFFFFFFF8) {
                    unint64_t v352 = 0x1FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v352 = v350;
                  }
                  if (v352)
                  {
                    char v353 = (char *)sub_227B8B8B4(v408, v352);
                    unint64_t v348 = *(char **)(a1 + 104);
                    char v287 = *(char **)(a1 + 112);
                  }
                  else
                  {
                    char v353 = 0;
                  }
                  char v390 = &v353[8 * v349];
                  *(void *)char v390 = 0;
                  unint64_t v281 = v390 + 8;
                  while (v287 != v348)
                  {
                    uint64_t v391 = *((void *)v287 - 1);
                    v287 -= 8;
                    *((void *)v390 - 1) = v391;
                    v390 -= 8;
                  }
                  *(void *)(a1 + 104) = v390;
                  *(void *)(a1 + 112) = v281;
                  *(void *)(a1 + 120) = &v353[8 * v352];
                  if (v348) {
                    operator delete(v348);
                  }
                }
                else
                {
                  *(void *)char v287 = 0;
                  unint64_t v281 = v287 + 8;
                }
                *(void *)(a1 + 112) = v281;
                goto LABEL_626;
              }
              if (PB::Reader::placeMark()) {
                return 0;
              }
              unint64_t v83 = *((void *)this + 1);
              unint64_t v84 = *((void *)this + 2);
              while (v83 < v84 && !*((unsigned char *)this + 24))
              {
                unint64_t v86 = *(char **)(a1 + 112);
                unint64_t v85 = *(void *)(a1 + 120);
                if ((unint64_t)v86 >= v85)
                {
                  BOOL v88 = (char *)*v11;
                  uint64_t v89 = (v86 - (unsigned char *)*v11) >> 3;
                  unint64_t v90 = v89 + 1;
                  if ((unint64_t)(v89 + 1) >> 61) {
                    goto LABEL_644;
                  }
                  uint64_t v91 = v85 - (void)v88;
                  if (v91 >> 2 > v90) {
                    unint64_t v90 = v91 >> 2;
                  }
                  if ((unint64_t)v91 >= 0x7FFFFFFFFFFFFFF8) {
                    unint64_t v92 = 0x1FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v92 = v90;
                  }
                  if (v92)
                  {
                    unint64_t v93 = (char *)sub_227B8B8B4(v408, v92);
                    BOOL v88 = *(char **)(a1 + 104);
                    unint64_t v86 = *(char **)(a1 + 112);
                  }
                  else
                  {
                    unint64_t v93 = 0;
                  }
                  unint64_t v94 = &v93[8 * v89];
                  *(void *)unint64_t v94 = 0;
                  int v87 = v94 + 8;
                  while (v86 != v88)
                  {
                    uint64_t v95 = *((void *)v86 - 1);
                    v86 -= 8;
                    *((void *)v94 - 1) = v95;
                    v94 -= 8;
                  }
                  *(void *)(a1 + 104) = v94;
                  *(void *)(a1 + 112) = v87;
                  *(void *)(a1 + 120) = &v93[8 * v92];
                  if (v88) {
                    operator delete(v88);
                  }
                }
                else
                {
                  *(void *)unint64_t v86 = 0;
                  int v87 = v86 + 8;
                }
                *(void *)(a1 + 112) = v87;
                unint64_t v96 = *((void *)this + 1);
                if (v96 > 0xFFFFFFFFFFFFFFF7 || v96 + 8 > *((void *)this + 2)) {
                  goto LABEL_252;
                }
                *(v87 - 1) = *(void *)(*(void *)this + v96);
                unint64_t v84 = *((void *)this + 2);
                unint64_t v83 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v83;
              }
              goto LABEL_253;
            case 162:
              if (v27 != 2)
              {
                unint64_t v289 = *(char **)(a1 + 88);
                unint64_t v288 = *(void *)(a1 + 96);
                if ((unint64_t)v289 >= v288)
                {
                  unsigned int v354 = (char *)*v10;
                  uint64_t v355 = (v289 - (unsigned char *)*v10) >> 3;
                  unint64_t v356 = v355 + 1;
                  if ((unint64_t)(v355 + 1) >> 61) {
LABEL_645:
                  }
                    sub_227B8B89C();
                  uint64_t v357 = v288 - (void)v354;
                  if (v357 >> 2 > v356) {
                    unint64_t v356 = v357 >> 2;
                  }
                  if ((unint64_t)v357 >= 0x7FFFFFFFFFFFFFF8) {
                    unint64_t v358 = 0x1FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v358 = v356;
                  }
                  if (v358)
                  {
                    unint64_t v359 = (char *)sub_227B8B8B4(v409, v358);
                    unsigned int v354 = *(char **)(a1 + 80);
                    unint64_t v289 = *(char **)(a1 + 88);
                  }
                  else
                  {
                    unint64_t v359 = 0;
                  }
                  unsigned int v392 = &v359[8 * v355];
                  *(void *)unsigned int v392 = 0;
                  unint64_t v281 = v392 + 8;
                  while (v289 != v354)
                  {
                    uint64_t v393 = *((void *)v289 - 1);
                    v289 -= 8;
                    *((void *)v392 - 1) = v393;
                    v392 -= 8;
                  }
                  *(void *)(a1 + 80) = v392;
                  *(void *)(a1 + 88) = v281;
                  *(void *)(a1 + 96) = &v359[8 * v358];
                  if (v354) {
                    operator delete(v354);
                  }
                }
                else
                {
                  *(void *)unint64_t v289 = 0;
                  unint64_t v281 = v289 + 8;
                }
                *(void *)(a1 + 88) = v281;
                goto LABEL_626;
              }
              if (PB::Reader::placeMark()) {
                return 0;
              }
              unint64_t v97 = *((void *)this + 1);
              unint64_t v98 = *((void *)this + 2);
              while (v97 < v98 && !*((unsigned char *)this + 24))
              {
                char v100 = *(char **)(a1 + 88);
                unint64_t v99 = *(void *)(a1 + 96);
                if ((unint64_t)v100 >= v99)
                {
                  unint64_t v102 = (char *)*v10;
                  uint64_t v103 = (v100 - (unsigned char *)*v10) >> 3;
                  unint64_t v104 = v103 + 1;
                  if ((unint64_t)(v103 + 1) >> 61) {
                    goto LABEL_645;
                  }
                  uint64_t v105 = v99 - (void)v102;
                  if (v105 >> 2 > v104) {
                    unint64_t v104 = v105 >> 2;
                  }
                  if ((unint64_t)v105 >= 0x7FFFFFFFFFFFFFF8) {
                    unint64_t v106 = 0x1FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v106 = v104;
                  }
                  if (v106)
                  {
                    unint64_t v107 = (char *)sub_227B8B8B4(v409, v106);
                    unint64_t v102 = *(char **)(a1 + 80);
                    char v100 = *(char **)(a1 + 88);
                  }
                  else
                  {
                    unint64_t v107 = 0;
                  }
                  char v108 = &v107[8 * v103];
                  *(void *)char v108 = 0;
                  unint64_t v101 = v108 + 8;
                  while (v100 != v102)
                  {
                    uint64_t v109 = *((void *)v100 - 1);
                    v100 -= 8;
                    *((void *)v108 - 1) = v109;
                    v108 -= 8;
                  }
                  *(void *)(a1 + 80) = v108;
                  *(void *)(a1 + 88) = v101;
                  *(void *)(a1 + 96) = &v107[8 * v106];
                  if (v102) {
                    operator delete(v102);
                  }
                }
                else
                {
                  *(void *)char v100 = 0;
                  unint64_t v101 = v100 + 8;
                }
                *(void *)(a1 + 88) = v101;
                unint64_t v110 = *((void *)this + 1);
                if (v110 > 0xFFFFFFFFFFFFFFF7 || v110 + 8 > *((void *)this + 2)) {
                  goto LABEL_252;
                }
                *(v101 - 1) = *(void *)(*(void *)this + v110);
                unint64_t v98 = *((void *)this + 2);
                unint64_t v97 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v97;
              }
              goto LABEL_253;
            case 163:
              if (v27 != 2)
              {
                uint64_t v291 = *(char **)(a1 + 136);
                unint64_t v290 = *(void *)(a1 + 144);
                if ((unint64_t)v291 >= v290)
                {
                  uint64_t v360 = (char *)*v9;
                  uint64_t v361 = (v291 - (unsigned char *)*v9) >> 3;
                  unint64_t v362 = v361 + 1;
                  if ((unint64_t)(v361 + 1) >> 61) {
LABEL_646:
                  }
                    sub_227B8B89C();
                  uint64_t v363 = v290 - (void)v360;
                  if (v363 >> 2 > v362) {
                    unint64_t v362 = v363 >> 2;
                  }
                  if ((unint64_t)v363 >= 0x7FFFFFFFFFFFFFF8) {
                    unint64_t v364 = 0x1FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v364 = v362;
                  }
                  if (v364)
                  {
                    char v365 = (char *)sub_227B8B8B4(v410, v364);
                    uint64_t v360 = *(char **)(a1 + 128);
                    uint64_t v291 = *(char **)(a1 + 136);
                  }
                  else
                  {
                    char v365 = 0;
                  }
                  char v394 = &v365[8 * v361];
                  *(void *)char v394 = 0;
                  unint64_t v281 = v394 + 8;
                  while (v291 != v360)
                  {
                    uint64_t v395 = *((void *)v291 - 1);
                    v291 -= 8;
                    *((void *)v394 - 1) = v395;
                    v394 -= 8;
                  }
                  *(void *)(a1 + 128) = v394;
                  *(void *)(a1 + 136) = v281;
                  *(void *)(a1 + 144) = &v365[8 * v364];
                  if (v360) {
                    operator delete(v360);
                  }
                }
                else
                {
                  *(void *)uint64_t v291 = 0;
                  unint64_t v281 = v291 + 8;
                }
                *(void *)(a1 + 136) = v281;
                goto LABEL_626;
              }
              if (PB::Reader::placeMark()) {
                return 0;
              }
              unint64_t v111 = *((void *)this + 1);
              unint64_t v112 = *((void *)this + 2);
              while (v111 < v112 && !*((unsigned char *)this + 24))
              {
                uint64_t v114 = *(char **)(a1 + 136);
                unint64_t v113 = *(void *)(a1 + 144);
                if ((unint64_t)v114 >= v113)
                {
                  char v116 = (char *)*v9;
                  uint64_t v117 = (v114 - (unsigned char *)*v9) >> 3;
                  unint64_t v118 = v117 + 1;
                  if ((unint64_t)(v117 + 1) >> 61) {
                    goto LABEL_646;
                  }
                  uint64_t v119 = v113 - (void)v116;
                  if (v119 >> 2 > v118) {
                    unint64_t v118 = v119 >> 2;
                  }
                  if ((unint64_t)v119 >= 0x7FFFFFFFFFFFFFF8) {
                    unint64_t v120 = 0x1FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v120 = v118;
                  }
                  if (v120)
                  {
                    unint64_t v121 = (char *)sub_227B8B8B4(v410, v120);
                    char v116 = *(char **)(a1 + 128);
                    uint64_t v114 = *(char **)(a1 + 136);
                  }
                  else
                  {
                    unint64_t v121 = 0;
                  }
                  unint64_t v122 = &v121[8 * v117];
                  *(void *)unint64_t v122 = 0;
                  unint64_t v115 = v122 + 8;
                  while (v114 != v116)
                  {
                    uint64_t v123 = *((void *)v114 - 1);
                    v114 -= 8;
                    *((void *)v122 - 1) = v123;
                    v122 -= 8;
                  }
                  *(void *)(a1 + 128) = v122;
                  *(void *)(a1 + 136) = v115;
                  *(void *)(a1 + 144) = &v121[8 * v120];
                  if (v116) {
                    operator delete(v116);
                  }
                }
                else
                {
                  *(void *)uint64_t v114 = 0;
                  unint64_t v115 = v114 + 8;
                }
                *(void *)(a1 + 136) = v115;
                unint64_t v124 = *((void *)this + 1);
                if (v124 > 0xFFFFFFFFFFFFFFF7 || v124 + 8 > *((void *)this + 2)) {
                  goto LABEL_252;
                }
                *(v115 - 1) = *(void *)(*(void *)this + v124);
                unint64_t v112 = *((void *)this + 2);
                unint64_t v111 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v111;
              }
              goto LABEL_253;
            case 164:
              if (v27 != 2)
              {
                char v293 = *(char **)(a1 + 184);
                unint64_t v292 = *(void *)(a1 + 192);
                if ((unint64_t)v293 >= v292)
                {
                  unint64_t v366 = (char *)*v8;
                  uint64_t v367 = (v293 - (unsigned char *)*v8) >> 3;
                  unint64_t v368 = v367 + 1;
                  if ((unint64_t)(v367 + 1) >> 61) {
LABEL_647:
                  }
                    sub_227B8B89C();
                  uint64_t v369 = v292 - (void)v366;
                  if (v369 >> 2 > v368) {
                    unint64_t v368 = v369 >> 2;
                  }
                  if ((unint64_t)v369 >= 0x7FFFFFFFFFFFFFF8) {
                    unint64_t v370 = 0x1FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v370 = v368;
                  }
                  if (v370)
                  {
                    uint64_t v371 = (char *)sub_227B8B8B4(v411, v370);
                    unint64_t v366 = *(char **)(a1 + 176);
                    char v293 = *(char **)(a1 + 184);
                  }
                  else
                  {
                    uint64_t v371 = 0;
                  }
                  unsigned int v396 = &v371[8 * v367];
                  *(void *)unsigned int v396 = 0;
                  unint64_t v281 = v396 + 8;
                  while (v293 != v366)
                  {
                    uint64_t v397 = *((void *)v293 - 1);
                    v293 -= 8;
                    *((void *)v396 - 1) = v397;
                    v396 -= 8;
                  }
                  *(void *)(a1 + 176) = v396;
                  *(void *)(a1 + 184) = v281;
                  *(void *)(a1 + 192) = &v371[8 * v370];
                  if (v366) {
                    operator delete(v366);
                  }
                }
                else
                {
                  *(void *)char v293 = 0;
                  unint64_t v281 = v293 + 8;
                }
                *(void *)(a1 + 184) = v281;
                goto LABEL_626;
              }
              if (PB::Reader::placeMark()) {
                return 0;
              }
              unint64_t v125 = *((void *)this + 1);
              unint64_t v126 = *((void *)this + 2);
              while (v125 < v126 && !*((unsigned char *)this + 24))
              {
                char v128 = *(char **)(a1 + 184);
                unint64_t v127 = *(void *)(a1 + 192);
                if ((unint64_t)v128 >= v127)
                {
                  uint64_t v130 = (char *)*v8;
                  uint64_t v131 = (v128 - (unsigned char *)*v8) >> 3;
                  unint64_t v132 = v131 + 1;
                  if ((unint64_t)(v131 + 1) >> 61) {
                    goto LABEL_647;
                  }
                  uint64_t v133 = v127 - (void)v130;
                  if (v133 >> 2 > v132) {
                    unint64_t v132 = v133 >> 2;
                  }
                  if ((unint64_t)v133 >= 0x7FFFFFFFFFFFFFF8) {
                    unint64_t v134 = 0x1FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v134 = v132;
                  }
                  if (v134)
                  {
                    uint64_t v135 = (char *)sub_227B8B8B4(v411, v134);
                    uint64_t v130 = *(char **)(a1 + 176);
                    char v128 = *(char **)(a1 + 184);
                  }
                  else
                  {
                    uint64_t v135 = 0;
                  }
                  char v136 = &v135[8 * v131];
                  *(void *)char v136 = 0;
                  unsigned int v129 = v136 + 8;
                  while (v128 != v130)
                  {
                    uint64_t v137 = *((void *)v128 - 1);
                    v128 -= 8;
                    *((void *)v136 - 1) = v137;
                    v136 -= 8;
                  }
                  *(void *)(a1 + 176) = v136;
                  *(void *)(a1 + 184) = v129;
                  *(void *)(a1 + 192) = &v135[8 * v134];
                  if (v130) {
                    operator delete(v130);
                  }
                }
                else
                {
                  *(void *)char v128 = 0;
                  unsigned int v129 = v128 + 8;
                }
                *(void *)(a1 + 184) = v129;
                unint64_t v138 = *((void *)this + 1);
                if (v138 > 0xFFFFFFFFFFFFFFF7 || v138 + 8 > *((void *)this + 2)) {
                  goto LABEL_252;
                }
                *(v129 - 1) = *(void *)(*(void *)this + v138);
                unint64_t v126 = *((void *)this + 2);
                unint64_t v125 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v125;
              }
              goto LABEL_253;
            case 165:
              if (v27 != 2)
              {
                unint64_t v295 = *(char **)(a1 + 160);
                unint64_t v294 = *(void *)(a1 + 168);
                if ((unint64_t)v295 >= v294)
                {
                  unint64_t v372 = (char *)*v414;
                  uint64_t v373 = (v295 - (unsigned char *)*v414) >> 3;
                  unint64_t v374 = v373 + 1;
                  if ((unint64_t)(v373 + 1) >> 61) {
LABEL_648:
                  }
                    sub_227B8B89C();
                  uint64_t v375 = v294 - (void)v372;
                  if (v375 >> 2 > v374) {
                    unint64_t v374 = v375 >> 2;
                  }
                  if ((unint64_t)v375 >= 0x7FFFFFFFFFFFFFF8) {
                    unint64_t v376 = 0x1FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v376 = v374;
                  }
                  if (v376)
                  {
                    unint64_t v377 = (char *)sub_227B8B8B4(v412, v376);
                    unint64_t v372 = *(char **)(a1 + 152);
                    unint64_t v295 = *(char **)(a1 + 160);
                  }
                  else
                  {
                    unint64_t v377 = 0;
                  }
                  char v398 = &v377[8 * v373];
                  *(void *)char v398 = 0;
                  unint64_t v281 = v398 + 8;
                  while (v295 != v372)
                  {
                    uint64_t v399 = *((void *)v295 - 1);
                    v295 -= 8;
                    *((void *)v398 - 1) = v399;
                    v398 -= 8;
                  }
                  *(void *)(a1 + 152) = v398;
                  *(void *)(a1 + 160) = v281;
                  *(void *)(a1 + 168) = &v377[8 * v376];
                  if (v372) {
                    operator delete(v372);
                  }
                }
                else
                {
                  *(void *)unint64_t v295 = 0;
                  unint64_t v281 = v295 + 8;
                }
                *(void *)(a1 + 160) = v281;
                goto LABEL_626;
              }
              if (PB::Reader::placeMark()) {
                return 0;
              }
              unint64_t v139 = *((void *)this + 1);
              unint64_t v140 = *((void *)this + 2);
              while (v139 < v140 && !*((unsigned char *)this + 24))
              {
                unint64_t v142 = *(char **)(a1 + 160);
                unint64_t v141 = *(void *)(a1 + 168);
                if ((unint64_t)v142 >= v141)
                {
                  char v144 = (char *)*v414;
                  uint64_t v145 = (v142 - (unsigned char *)*v414) >> 3;
                  unint64_t v146 = v145 + 1;
                  if ((unint64_t)(v145 + 1) >> 61) {
                    goto LABEL_648;
                  }
                  uint64_t v147 = v141 - (void)v144;
                  if (v147 >> 2 > v146) {
                    unint64_t v146 = v147 >> 2;
                  }
                  if ((unint64_t)v147 >= 0x7FFFFFFFFFFFFFF8) {
                    unint64_t v148 = 0x1FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v148 = v146;
                  }
                  if (v148)
                  {
                    unint64_t v149 = (char *)sub_227B8B8B4(v412, v148);
                    char v144 = *(char **)(a1 + 152);
                    unint64_t v142 = *(char **)(a1 + 160);
                  }
                  else
                  {
                    unint64_t v149 = 0;
                  }
                  unint64_t v150 = &v149[8 * v145];
                  *(void *)unint64_t v150 = 0;
                  uint64_t v143 = v150 + 8;
                  while (v142 != v144)
                  {
                    uint64_t v151 = *((void *)v142 - 1);
                    v142 -= 8;
                    *((void *)v150 - 1) = v151;
                    v150 -= 8;
                  }
                  *(void *)(a1 + 152) = v150;
                  *(void *)(a1 + 160) = v143;
                  *(void *)(a1 + 168) = &v149[8 * v148];
                  if (v144) {
                    operator delete(v144);
                  }
                }
                else
                {
                  *(void *)unint64_t v142 = 0;
                  uint64_t v143 = v142 + 8;
                }
                *(void *)(a1 + 160) = v143;
                unint64_t v152 = *((void *)this + 1);
                if (v152 > 0xFFFFFFFFFFFFFFF7 || v152 + 8 > *((void *)this + 2)) {
                  goto LABEL_252;
                }
                *(v143 - 1) = *(void *)(*(void *)this + v152);
                unint64_t v140 = *((void *)this + 2);
                unint64_t v139 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v139;
              }
              goto LABEL_253;
            case 166:
              if (v27 == 2)
              {
                if (PB::Reader::placeMark()) {
                  return 0;
                }
                unint64_t v153 = *((void *)this + 1);
                unint64_t v154 = *((void *)this + 2);
                while (v153 < v154 && !*((unsigned char *)this + 24))
                {
                  char v156 = *(char **)(a1 + 208);
                  unint64_t v155 = *(void *)(a1 + 216);
                  if ((unint64_t)v156 >= v155)
                  {
                    unint64_t v158 = (char *)*v415;
                    uint64_t v159 = (v156 - (unsigned char *)*v415) >> 3;
                    unint64_t v160 = v159 + 1;
                    if ((unint64_t)(v159 + 1) >> 61) {
                      goto LABEL_649;
                    }
                    uint64_t v161 = v155 - (void)v158;
                    if (v161 >> 2 > v160) {
                      unint64_t v160 = v161 >> 2;
                    }
                    if ((unint64_t)v161 >= 0x7FFFFFFFFFFFFFF8) {
                      unint64_t v162 = 0x1FFFFFFFFFFFFFFFLL;
                    }
                    else {
                      unint64_t v162 = v160;
                    }
                    if (v162)
                    {
                      unint64_t v163 = (char *)sub_227B8B8B4(v413, v162);
                      unint64_t v158 = *(char **)(a1 + 200);
                      char v156 = *(char **)(a1 + 208);
                    }
                    else
                    {
                      unint64_t v163 = 0;
                    }
                    char v164 = &v163[8 * v159];
                    *(void *)char v164 = 0;
                    unint64_t v157 = v164 + 8;
                    while (v156 != v158)
                    {
                      uint64_t v165 = *((void *)v156 - 1);
                      v156 -= 8;
                      *((void *)v164 - 1) = v165;
                      v164 -= 8;
                    }
                    *(void *)(a1 + 200) = v164;
                    *(void *)(a1 + 208) = v157;
                    *(void *)(a1 + 216) = &v163[8 * v162];
                    if (v158) {
                      operator delete(v158);
                    }
                  }
                  else
                  {
                    *(void *)char v156 = 0;
                    unint64_t v157 = v156 + 8;
                  }
                  *(void *)(a1 + 208) = v157;
                  unint64_t v166 = *((void *)this + 1);
                  if (v166 > 0xFFFFFFFFFFFFFFF7 || v166 + 8 > *((void *)this + 2))
                  {
LABEL_252:
                    *((unsigned char *)this + 24) = 1;
                    break;
                  }
                  *(v157 - 1) = *(void *)(*(void *)this + v166);
                  unint64_t v154 = *((void *)this + 2);
                  unint64_t v153 = *((void *)this + 1) + 8;
                  *((void *)this + 1) = v153;
                }
LABEL_253:
                PB::Reader::recallMark();
              }
              else
              {
                char v297 = *(char **)(a1 + 208);
                unint64_t v296 = *(void *)(a1 + 216);
                if ((unint64_t)v297 >= v296)
                {
                  char v378 = (char *)*v415;
                  uint64_t v379 = (v297 - (unsigned char *)*v415) >> 3;
                  unint64_t v380 = v379 + 1;
                  if ((unint64_t)(v379 + 1) >> 61) {
LABEL_649:
                  }
                    sub_227B8B89C();
                  uint64_t v381 = v296 - (void)v378;
                  if (v381 >> 2 > v380) {
                    unint64_t v380 = v381 >> 2;
                  }
                  if ((unint64_t)v381 >= 0x7FFFFFFFFFFFFFF8) {
                    unint64_t v382 = 0x1FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v382 = v380;
                  }
                  if (v382)
                  {
                    char v383 = (char *)sub_227B8B8B4(v413, v382);
                    char v378 = *(char **)(a1 + 200);
                    char v297 = *(char **)(a1 + 208);
                  }
                  else
                  {
                    char v383 = 0;
                  }
                  unsigned int v400 = &v383[8 * v379];
                  *(void *)unsigned int v400 = 0;
                  unint64_t v281 = v400 + 8;
                  while (v297 != v378)
                  {
                    uint64_t v401 = *((void *)v297 - 1);
                    v297 -= 8;
                    *((void *)v400 - 1) = v401;
                    v400 -= 8;
                  }
                  *(void *)(a1 + 200) = v400;
                  *(void *)(a1 + 208) = v281;
                  *(void *)(a1 + 216) = &v383[8 * v382];
                  if (v378) {
                    operator delete(v378);
                  }
                }
                else
                {
                  *(void *)char v297 = 0;
                  unint64_t v281 = v297 + 8;
                }
                *(void *)(a1 + 208) = v281;
LABEL_626:
                unint64_t v402 = *((void *)this + 1);
                if (v402 <= 0xFFFFFFFFFFFFFFF7 && v402 + 8 <= *((void *)this + 2))
                {
                  *(v281 - 1) = *(void *)(*(void *)this + v402);
LABEL_630:
                  *((void *)this + 1) += 8;
                }
                else
                {
LABEL_628:
                  *((unsigned char *)this + 24) = 1;
                }
              }
LABEL_631:
              unint64_t v2 = *((void *)this + 1);
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              break;
            default:
              switch((int)v28)
              {
                case 'e':
                  *(_DWORD *)(a1 + 396) |= 0x10000000u;
                  unint64_t v51 = *((void *)this + 1);
                  if (v51 >= *((void *)this + 2))
                  {
                    BOOL v54 = 0;
                    *((unsigned char *)this + 24) = 1;
                  }
                  else
                  {
                    unint64_t v52 = v51 + 1;
                    int v53 = *(unsigned __int8 *)(*(void *)this + v51);
                    *((void *)this + 1) = v52;
                    BOOL v54 = v53 != 0;
                  }
                  *(unsigned char *)(a1 + 392) = v54;
                  goto LABEL_631;
                case 'f':
                  *(_DWORD *)(a1 + 396) |= 0x8000000u;
                  unint64_t v263 = *((void *)this + 1);
                  if (v263 >= *((void *)this + 2))
                  {
                    BOOL v266 = 0;
                    *((unsigned char *)this + 24) = 1;
                  }
                  else
                  {
                    unint64_t v264 = v263 + 1;
                    int v265 = *(unsigned __int8 *)(*(void *)this + v263);
                    *((void *)this + 1) = v264;
                    BOOL v266 = v265 != 0;
                  }
                  *(unsigned char *)(a1 + 391) = v266;
                  goto LABEL_631;
                case 'g':
                  *(_DWORD *)(a1 + 396) |= 0x20000000u;
                  unint64_t v267 = *((void *)this + 1);
                  if (v267 >= *((void *)this + 2))
                  {
                    BOOL v270 = 0;
                    *((unsigned char *)this + 24) = 1;
                  }
                  else
                  {
                    unint64_t v268 = v267 + 1;
                    int v269 = *(unsigned __int8 *)(*(void *)this + v267);
                    *((void *)this + 1) = v268;
                    BOOL v270 = v269 != 0;
                  }
                  *(unsigned char *)(a1 + 393) = v270;
                  goto LABEL_631;
                case 'h':
                  *(_DWORD *)(a1 + 396) |= 0x2000000u;
                  unint64_t v271 = *((void *)this + 1);
                  if (v271 >= *((void *)this + 2))
                  {
                    BOOL v274 = 0;
                    *((unsigned char *)this + 24) = 1;
                  }
                  else
                  {
                    unint64_t v272 = v271 + 1;
                    int v273 = *(unsigned __int8 *)(*(void *)this + v271);
                    *((void *)this + 1) = v272;
                    BOOL v274 = v273 != 0;
                  }
                  *(unsigned char *)(a1 + 389) = v274;
                  goto LABEL_631;
                case 'i':
                  *(_DWORD *)(a1 + 396) |= 0x4000000u;
                  unint64_t v275 = *((void *)this + 1);
                  if (v275 >= *((void *)this + 2))
                  {
                    BOOL v278 = 0;
                    *((unsigned char *)this + 24) = 1;
                  }
                  else
                  {
                    unint64_t v276 = v275 + 1;
                    int v277 = *(unsigned __int8 *)(*(void *)this + v275);
                    *((void *)this + 1) = v276;
                    BOOL v278 = v277 != 0;
                  }
                  *(unsigned char *)(a1 + 390) = v278;
                  goto LABEL_631;
                default:
                  goto LABEL_58;
              }
          }
          break;
      }
    }
    char v22 = 0;
    unsigned int v23 = 0;
    unint64_t v18 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v24 = v2 + 1;
      char v25 = *(unsigned char *)(v15 + v2);
      *((void *)this + 1) = v24;
      v18 |= (unint64_t)(v25 & 0x7F) << v22;
      if ((v25 & 0x80) == 0) {
        goto LABEL_21;
      }
      v22 += 7;
      unint64_t v2 = v24;
      if (v23++ >= 9)
      {
LABEL_20:
        unint64_t v18 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B27364(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 396);
  if ((v4 & 0x80000) != 0)
  {
    double result = PB::Writer::writeVarInt(this);
    int v4 = *(_DWORD *)(v3 + 396);
    if ((v4 & 0x1000000) == 0)
    {
LABEL_3:
      if ((v4 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_64;
    }
  }
  else if ((v4 & 0x1000000) == 0)
  {
    goto LABEL_3;
  }
  double result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 396);
  if ((v4 & 1) == 0)
  {
LABEL_4:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_65;
  }
LABEL_64:
  double result = PB::Writer::write(this, *(double *)(v3 + 224));
  int v4 = *(_DWORD *)(v3 + 396);
  if ((v4 & 0x40000) == 0)
  {
LABEL_5:
    if ((v4 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_66;
  }
LABEL_65:
  double result = PB::Writer::write(this, *(double *)(v3 + 368));
  int v4 = *(_DWORD *)(v3 + 396);
  if ((v4 & 2) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_67;
  }
LABEL_66:
  double result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 396);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_68;
  }
LABEL_67:
  double result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 396);
  if ((v4 & 0x20) == 0)
  {
LABEL_8:
    if ((v4 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_69;
  }
LABEL_68:
  double result = PB::Writer::write(this, *(double *)(v3 + 264));
  int v4 = *(_DWORD *)(v3 + 396);
  if ((v4 & 0x100) == 0)
  {
LABEL_9:
    if ((v4 & 0x400) == 0) {
      goto LABEL_10;
    }
    goto LABEL_70;
  }
LABEL_69:
  double result = PB::Writer::write(this, *(double *)(v3 + 288));
  int v4 = *(_DWORD *)(v3 + 396);
  if ((v4 & 0x400) == 0)
  {
LABEL_10:
    if ((v4 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_71;
  }
LABEL_70:
  double result = PB::Writer::write(this, *(double *)(v3 + 304));
  int v4 = *(_DWORD *)(v3 + 396);
  if ((v4 & 0x200) == 0)
  {
LABEL_11:
    if ((v4 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_72;
  }
LABEL_71:
  double result = PB::Writer::write(this, *(double *)(v3 + 296));
  int v4 = *(_DWORD *)(v3 + 396);
  if ((v4 & 0x80) == 0)
  {
LABEL_12:
    if ((v4 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_73;
  }
LABEL_72:
  double result = PB::Writer::write(this, *(double *)(v3 + 280));
  int v4 = *(_DWORD *)(v3 + 396);
  if ((v4 & 0x40) == 0)
  {
LABEL_13:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_74;
  }
LABEL_73:
  double result = PB::Writer::write(this, *(double *)(v3 + 272));
  int v4 = *(_DWORD *)(v3 + 396);
  if ((v4 & 0x1000) == 0)
  {
LABEL_14:
    if ((v4 & 0x800) == 0) {
      goto LABEL_15;
    }
    goto LABEL_75;
  }
LABEL_74:
  double result = PB::Writer::write(this, *(double *)(v3 + 320));
  int v4 = *(_DWORD *)(v3 + 396);
  if ((v4 & 0x800) == 0)
  {
LABEL_15:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_76;
  }
LABEL_75:
  double result = PB::Writer::write(this, *(double *)(v3 + 312));
  int v4 = *(_DWORD *)(v3 + 396);
  if ((v4 & 0x20000) == 0)
  {
LABEL_16:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_77;
  }
LABEL_76:
  double result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 396);
  if ((v4 & 0x10000) == 0)
  {
LABEL_17:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_78;
  }
LABEL_77:
  double result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 396);
  if ((v4 & 0x8000) == 0)
  {
LABEL_18:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_79;
  }
LABEL_78:
  double result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 396);
  if ((v4 & 0x4000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_80;
  }
LABEL_79:
  double result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 396);
  if ((v4 & 0x2000) == 0)
  {
LABEL_20:
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_81;
  }
LABEL_80:
  double result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 396);
  if ((v4 & 0x80000000) == 0)
  {
LABEL_21:
    if ((v4 & 4) == 0) {
      goto LABEL_22;
    }
    goto LABEL_82;
  }
LABEL_81:
  double result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 396);
  if ((v4 & 4) == 0)
  {
LABEL_22:
    if ((v4 & 8) == 0) {
      goto LABEL_23;
    }
    goto LABEL_83;
  }
LABEL_82:
  double result = PB::Writer::write(this, *(double *)(v3 + 240));
  int v4 = *(_DWORD *)(v3 + 396);
  if ((v4 & 8) == 0)
  {
LABEL_23:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_84;
  }
LABEL_83:
  double result = PB::Writer::write(this, *(double *)(v3 + 248));
  int v4 = *(_DWORD *)(v3 + 396);
  if ((v4 & 0x100000) == 0)
  {
LABEL_24:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_85;
  }
LABEL_84:
  double result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 396);
  if ((v4 & 0x400000) == 0)
  {
LABEL_25:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_86;
  }
LABEL_85:
  double result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 396);
  if ((v4 & 0x40000000) == 0)
  {
LABEL_26:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_87;
  }
LABEL_86:
  double result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 396);
  if ((v4 & 0x200000) == 0)
  {
LABEL_27:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_88;
  }
LABEL_87:
  double result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 396);
  if ((v4 & 0x800000) == 0)
  {
LABEL_28:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_89;
  }
LABEL_88:
  double result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 396);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_29:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_90;
  }
LABEL_89:
  double result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 396);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_30:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_91;
  }
LABEL_90:
  double result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 396);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_32;
    }
LABEL_92:
    double result = PB::Writer::write(this);
    if ((*(_DWORD *)(v3 + 396) & 0x4000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_33;
  }
LABEL_91:
  double result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 396);
  if ((v4 & 0x2000000) != 0) {
    goto LABEL_92;
  }
LABEL_32:
  if ((v4 & 0x4000000) != 0) {
LABEL_33:
  }
    double result = PB::Writer::write(this);
LABEL_34:
  int v5 = *(double **)(v3 + 32);
  uint64_t v6 = *(double **)(v3 + 40);
  while (v5 != v6)
  {
    double v7 = *v5++;
    double result = PB::Writer::write(this, v7);
  }
  double v8 = *(double **)(v3 + 8);
  int v9 = *(double **)(v3 + 16);
  while (v8 != v9)
  {
    double v10 = *v8++;
    double result = PB::Writer::write(this, v10);
  }
  double v11 = *(double **)(v3 + 56);
  char v12 = *(double **)(v3 + 64);
  while (v11 != v12)
  {
    double v13 = *v11++;
    double result = PB::Writer::write(this, v13);
  }
  double v14 = *(double **)(v3 + 104);
  uint64_t v15 = *(double **)(v3 + 112);
  while (v14 != v15)
  {
    double v16 = *v14++;
    double result = PB::Writer::write(this, v16);
  }
  unsigned int v17 = *(double **)(v3 + 80);
  unint64_t v18 = *(double **)(v3 + 88);
  while (v17 != v18)
  {
    double v19 = *v17++;
    double result = PB::Writer::write(this, v19);
  }
  char v20 = *(double **)(v3 + 128);
  BOOL v21 = *(double **)(v3 + 136);
  while (v20 != v21)
  {
    double v22 = *v20++;
    double result = PB::Writer::write(this, v22);
  }
  unsigned int v23 = *(double **)(v3 + 176);
  unint64_t v24 = *(double **)(v3 + 184);
  while (v23 != v24)
  {
    double v25 = *v23++;
    double result = PB::Writer::write(this, v25);
  }
  uint64_t v26 = *(double **)(v3 + 152);
  int v27 = *(double **)(v3 + 160);
  while (v26 != v27)
  {
    double v28 = *v26++;
    double result = PB::Writer::write(this, v28);
  }
  unint64_t v30 = *(double **)(v3 + 200);
  unint64_t v29 = *(double **)(v3 + 208);
  while (v30 != v29)
  {
    double v31 = *v30++;
    double result = PB::Writer::write(this, v31);
  }
  return result;
}

uint64_t sub_227B27830(uint64_t result)
{
  *(void *)double result = &unk_26DC1FB68;
  *(_DWORD *)(result + 72) = 0;
  return result;
}

void sub_227B27858(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227B27890(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC1FB68;
  *(_DWORD *)(a1 + 72) = 0;
  __int16 v2 = *(_WORD *)(a2 + 72);
  if ((v2 & 4) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 24);
    __int16 v3 = 4;
    *(_WORD *)(a1 + 72) = 4;
    *(void *)(a1 + 24) = v4;
    __int16 v2 = *(_WORD *)(a2 + 72);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 8) != 0)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 32);
    v3 |= 8u;
    *(_WORD *)(a1 + 72) = v3;
    *(void *)(a1 + 32) = v5;
    __int16 v2 = *(_WORD *)(a2 + 72);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    v3 |= 2u;
    *(_WORD *)(a1 + 72) = v3;
    *(void *)(a1 + 16) = v6;
    __int16 v2 = *(_WORD *)(a2 + 72);
    if ((v2 & 0x200) == 0)
    {
LABEL_8:
      if ((v2 & 0x100) == 0) {
        goto LABEL_9;
      }
      goto LABEL_17;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 68);
  v3 |= 0x200u;
  *(_WORD *)(a1 + 72) = v3;
  *(_DWORD *)(a1 + 68) = v7;
  __int16 v2 = *(_WORD *)(a2 + 72);
  if ((v2 & 0x100) == 0)
  {
LABEL_9:
    if ((v2 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_18;
  }
LABEL_17:
  LODWORD(v4) = *(_DWORD *)(a2 + 64);
  v3 |= 0x100u;
  *(_WORD *)(a1 + 72) = v3;
  *(_DWORD *)(a1 + 64) = v4;
  __int16 v2 = *(_WORD *)(a2 + 72);
  if ((v2 & 0x10) == 0)
  {
LABEL_10:
    if ((v2 & 0x20) == 0) {
      goto LABEL_11;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t v8 = *(void *)(a2 + 40);
  v3 |= 0x10u;
  *(_WORD *)(a1 + 72) = v3;
  *(void *)(a1 + 40) = v8;
  __int16 v2 = *(_WORD *)(a2 + 72);
  if ((v2 & 0x20) == 0)
  {
LABEL_11:
    if ((v2 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v9 = *(void *)(a2 + 48);
  v3 |= 0x20u;
  *(_WORD *)(a1 + 72) = v3;
  *(void *)(a1 + 48) = v9;
  __int16 v2 = *(_WORD *)(a2 + 72);
  if ((v2 & 1) == 0)
  {
LABEL_12:
    if ((v2 & 0x80) == 0) {
      goto LABEL_13;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t v10 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(a1 + 72) = v3;
  *(void *)(a1 + 8) = v10;
  __int16 v2 = *(_WORD *)(a2 + 72);
  if ((v2 & 0x80) == 0)
  {
LABEL_13:
    if ((v2 & 0x40) == 0) {
      return *(float *)&v4;
    }
    goto LABEL_22;
  }
LABEL_21:
  LODWORD(v4) = *(_DWORD *)(a2 + 60);
  v3 |= 0x80u;
  *(_WORD *)(a1 + 72) = v3;
  *(_DWORD *)(a1 + 60) = v4;
  if ((*(_WORD *)(a2 + 72) & 0x40) == 0) {
    return *(float *)&v4;
  }
LABEL_22:
  LODWORD(v4) = *(_DWORD *)(a2 + 56);
  *(_WORD *)(a1 + 72) = v3 | 0x40;
  *(_DWORD *)(a1 + 56) = v4;
  return *(float *)&v4;
}

uint64_t sub_227B279D4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 72);
  if ((v5 & 0x40) != 0)
  {
    PB::TextFormatter::format(this, "afterElevationMedian", *(float *)(a1 + 56));
    __int16 v5 = *(_WORD *)(a1 + 72);
    if ((v5 & 0x80) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v5 & 0x80) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "beforeElevationMedian", *(float *)(a1 + 60));
  __int16 v5 = *(_WORD *)(a1 + 72);
  if ((v5 & 1) == 0)
  {
LABEL_4:
    if ((v5 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  PB::TextFormatter::format(this, "endTimestampOfWindow");
  __int16 v5 = *(_WORD *)(a1 + 72);
  if ((v5 & 2) == 0)
  {
LABEL_5:
    if ((v5 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "impactTimestamp");
  __int16 v5 = *(_WORD *)(a1 + 72);
  if ((v5 & 4) == 0)
  {
LABEL_6:
    if ((v5 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "iostime", *(double *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 72);
  if ((v5 & 8) == 0)
  {
LABEL_7:
    if ((v5 & 0x100) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "pressureTimestamp");
  __int16 v5 = *(_WORD *)(a1 + 72);
  if ((v5 & 0x100) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "rangeOfElevationInWindow", *(float *)(a1 + 64));
  __int16 v5 = *(_WORD *)(a1 + 72);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "startTimestampOfLastInspectedWindow");
  __int16 v5 = *(_WORD *)(a1 + 72);
  if ((v5 & 0x20) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_23:
  PB::TextFormatter::format(this, "startTimestampOfWindow");
  if ((*(_WORD *)(a1 + 72) & 0x200) != 0) {
LABEL_11:
  }
    PB::TextFormatter::format(this, "state");
LABEL_12:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B27B58(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 72) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_77;
              }
              *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
              unint64_t v2 = *((void *)this + 1) + 8;
              goto LABEL_122;
            case 2u:
              *(_WORD *)(a1 + 72) |= 8u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v57 = 0;
                unsigned int v58 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_127;
                  }
                  unint64_t v59 = v20++;
                  char v60 = *(unsigned char *)(v21 + v59);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v60 & 0x7F) << v57;
                  if ((v60 & 0x80) == 0) {
                    break;
                  }
                  v57 += 7;
                  BOOL v14 = v58++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
LABEL_126:
                    unint64_t v2 = v59 + 1;
                    goto LABEL_127;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
                goto LABEL_126;
              }
              char v22 = 0;
              unsigned int v23 = 0;
              uint64_t v24 = 0;
              do
              {
                unint64_t v2 = v20 + 1;
                *((void *)this + 1) = v20 + 1;
                char v25 = *(unsigned char *)(v21 + v20);
                v24 |= (unint64_t)(v25 & 0x7F) << v22;
                if ((v25 & 0x80) == 0) {
                  goto LABEL_127;
                }
                v22 += 7;
                unint64_t v20 = v2;
                BOOL v14 = v23++ > 8;
              }
              while (!v14);
              uint64_t v24 = 0;
LABEL_127:
              *(void *)(a1 + 32) = v24;
              goto LABEL_153;
            case 3u:
              *(_WORD *)(a1 + 72) |= 2u;
              unint64_t v26 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v27 = *(void *)this;
              if (v26 > 0xFFFFFFFFFFFFFFF5 || v26 + 10 > v2)
              {
                char v61 = 0;
                unsigned int v62 = 0;
                uint64_t v30 = 0;
                if (v2 <= v26) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v26)
                  {
                    uint64_t v30 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_132;
                  }
                  unint64_t v63 = v26++;
                  char v64 = *(unsigned char *)(v27 + v63);
                  *((void *)this + 1) = v26;
                  v30 |= (unint64_t)(v64 & 0x7F) << v61;
                  if ((v64 & 0x80) == 0) {
                    break;
                  }
                  v61 += 7;
                  BOOL v14 = v62++ > 8;
                  if (v14)
                  {
                    uint64_t v30 = 0;
LABEL_131:
                    unint64_t v2 = v63 + 1;
                    goto LABEL_132;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v30 = 0;
                }
                goto LABEL_131;
              }
              char v28 = 0;
              unsigned int v29 = 0;
              uint64_t v30 = 0;
              do
              {
                unint64_t v2 = v26 + 1;
                *((void *)this + 1) = v26 + 1;
                char v31 = *(unsigned char *)(v27 + v26);
                v30 |= (unint64_t)(v31 & 0x7F) << v28;
                if ((v31 & 0x80) == 0) {
                  goto LABEL_132;
                }
                v28 += 7;
                unint64_t v26 = v2;
                BOOL v14 = v29++ > 8;
              }
              while (!v14);
              uint64_t v30 = 0;
LABEL_132:
              *(void *)(a1 + 16) = v30;
              goto LABEL_153;
            case 4u:
              *(_WORD *)(a1 + 72) |= 0x200u;
              unint64_t v32 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v33 = *(void *)this;
              if (v32 > 0xFFFFFFFFFFFFFFF5 || v32 + 10 > v2)
              {
                char v65 = 0;
                unsigned int v66 = 0;
                uint64_t v36 = 0;
                if (v2 <= v32) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v32)
                  {
                    LODWORD(v36) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_137;
                  }
                  unint64_t v67 = v32++;
                  char v68 = *(unsigned char *)(v33 + v67);
                  *((void *)this + 1) = v32;
                  v36 |= (unint64_t)(v68 & 0x7F) << v65;
                  if ((v68 & 0x80) == 0) {
                    break;
                  }
                  v65 += 7;
                  BOOL v14 = v66++ > 8;
                  if (v14)
                  {
                    LODWORD(v36) = 0;
LABEL_136:
                    unint64_t v2 = v67 + 1;
                    goto LABEL_137;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v36) = 0;
                }
                goto LABEL_136;
              }
              char v34 = 0;
              unsigned int v35 = 0;
              uint64_t v36 = 0;
              do
              {
                unint64_t v2 = v32 + 1;
                *((void *)this + 1) = v32 + 1;
                char v37 = *(unsigned char *)(v33 + v32);
                v36 |= (unint64_t)(v37 & 0x7F) << v34;
                if ((v37 & 0x80) == 0) {
                  goto LABEL_137;
                }
                v34 += 7;
                unint64_t v32 = v2;
                BOOL v14 = v35++ > 8;
              }
              while (!v14);
              LODWORD(v36) = 0;
LABEL_137:
              *(_DWORD *)(a1 + 68) = v36;
              goto LABEL_153;
            case 0xAu:
              *(_WORD *)(a1 + 72) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_77;
              }
              *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_121;
            case 0xBu:
              *(_WORD *)(a1 + 72) |= 0x10u;
              unint64_t v39 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v40 = *(void *)this;
              if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
              {
                char v69 = 0;
                unsigned int v70 = 0;
                uint64_t v43 = 0;
                if (v2 <= v39) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v39)
                  {
                    uint64_t v43 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_142;
                  }
                  unint64_t v71 = v39++;
                  char v72 = *(unsigned char *)(v40 + v71);
                  *((void *)this + 1) = v39;
                  v43 |= (unint64_t)(v72 & 0x7F) << v69;
                  if ((v72 & 0x80) == 0) {
                    break;
                  }
                  v69 += 7;
                  BOOL v14 = v70++ > 8;
                  if (v14)
                  {
                    uint64_t v43 = 0;
LABEL_141:
                    unint64_t v2 = v71 + 1;
                    goto LABEL_142;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v43 = 0;
                }
                goto LABEL_141;
              }
              char v41 = 0;
              unsigned int v42 = 0;
              uint64_t v43 = 0;
              do
              {
                unint64_t v2 = v39 + 1;
                *((void *)this + 1) = v39 + 1;
                char v44 = *(unsigned char *)(v40 + v39);
                v43 |= (unint64_t)(v44 & 0x7F) << v41;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_142;
                }
                v41 += 7;
                unint64_t v39 = v2;
                BOOL v14 = v42++ > 8;
              }
              while (!v14);
              uint64_t v43 = 0;
LABEL_142:
              *(void *)(a1 + 40) = v43;
              goto LABEL_153;
            case 0xCu:
              *(_WORD *)(a1 + 72) |= 0x20u;
              unint64_t v45 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v46 = *(void *)this;
              if (v45 > 0xFFFFFFFFFFFFFFF5 || v45 + 10 > v2)
              {
                char v73 = 0;
                unsigned int v74 = 0;
                uint64_t v49 = 0;
                if (v2 <= v45) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v45)
                  {
                    uint64_t v49 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_147;
                  }
                  unint64_t v75 = v45++;
                  char v76 = *(unsigned char *)(v46 + v75);
                  *((void *)this + 1) = v45;
                  v49 |= (unint64_t)(v76 & 0x7F) << v73;
                  if ((v76 & 0x80) == 0) {
                    break;
                  }
                  v73 += 7;
                  BOOL v14 = v74++ > 8;
                  if (v14)
                  {
                    uint64_t v49 = 0;
LABEL_146:
                    unint64_t v2 = v75 + 1;
                    goto LABEL_147;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v49 = 0;
                }
                goto LABEL_146;
              }
              char v47 = 0;
              unsigned int v48 = 0;
              uint64_t v49 = 0;
              do
              {
                unint64_t v2 = v45 + 1;
                *((void *)this + 1) = v45 + 1;
                char v50 = *(unsigned char *)(v46 + v45);
                v49 |= (unint64_t)(v50 & 0x7F) << v47;
                if ((v50 & 0x80) == 0) {
                  goto LABEL_147;
                }
                v47 += 7;
                unint64_t v45 = v2;
                BOOL v14 = v48++ > 8;
              }
              while (!v14);
              uint64_t v49 = 0;
LABEL_147:
              *(void *)(a1 + 48) = v49;
              goto LABEL_153;
            case 0xDu:
              *(_WORD *)(a1 + 72) |= 1u;
              unint64_t v51 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v52 = *(void *)this;
              if (v51 > 0xFFFFFFFFFFFFFFF5 || v51 + 10 > v2)
              {
                char v77 = 0;
                unsigned int v78 = 0;
                uint64_t v55 = 0;
                if (v2 <= v51) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v51)
                  {
                    uint64_t v55 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_152;
                  }
                  unint64_t v79 = v51++;
                  char v80 = *(unsigned char *)(v52 + v79);
                  *((void *)this + 1) = v51;
                  v55 |= (unint64_t)(v80 & 0x7F) << v77;
                  if ((v80 & 0x80) == 0) {
                    break;
                  }
                  v77 += 7;
                  BOOL v14 = v78++ > 8;
                  if (v14)
                  {
                    uint64_t v55 = 0;
LABEL_151:
                    unint64_t v2 = v79 + 1;
                    goto LABEL_152;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v55 = 0;
                }
                goto LABEL_151;
              }
              char v53 = 0;
              unsigned int v54 = 0;
              uint64_t v55 = 0;
              do
              {
                unint64_t v2 = v51 + 1;
                *((void *)this + 1) = v51 + 1;
                char v56 = *(unsigned char *)(v52 + v51);
                v55 |= (unint64_t)(v56 & 0x7F) << v53;
                if ((v56 & 0x80) == 0) {
                  goto LABEL_152;
                }
                v53 += 7;
                unint64_t v51 = v2;
                BOOL v14 = v54++ > 8;
              }
              while (!v14);
              uint64_t v55 = 0;
LABEL_152:
              *(void *)(a1 + 8) = v55;
LABEL_153:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 0x14u:
              *(_WORD *)(a1 + 72) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_77;
              }
              *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_121;
            case 0x15u:
              *(_WORD *)(a1 + 72) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v2);
LABEL_121:
                unint64_t v2 = *((void *)this + 1) + 4;
LABEL_122:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_77:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_153;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_153;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B283A4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 72);
  if ((v4 & 4) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 24));
    __int16 v4 = *(_WORD *)(v3 + 72);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v4 & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 72);
  if ((v4 & 2) == 0)
  {
LABEL_4:
    if ((v4 & 0x200) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 72);
  if ((v4 & 0x200) == 0)
  {
LABEL_5:
    if ((v4 & 0x100) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 72);
  if ((v4 & 0x100) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64));
  __int16 v4 = *(_WORD *)(v3 + 72);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 72);
  if ((v4 & 0x20) == 0)
  {
LABEL_8:
    if ((v4 & 1) == 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 72);
  if ((v4 & 1) == 0)
  {
LABEL_9:
    if ((v4 & 0x80) == 0) {
      goto LABEL_10;
    }
LABEL_20:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 60));
    if ((*(_WORD *)(v3 + 72) & 0x40) == 0) {
      return result;
    }
    goto LABEL_21;
  }
LABEL_19:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 72);
  if ((v4 & 0x80) != 0) {
    goto LABEL_20;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    return result;
  }
LABEL_21:
  float v5 = *(float *)(v3 + 56);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227B284F4(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC1FBA0;
  *(_DWORD *)(result + 80) = 0;
  return result;
}

void sub_227B2851C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B28554(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC1FBA0;
  *(_DWORD *)(result + 80) = 0;
  __int16 v2 = *(_WORD *)(a2 + 80);
  if ((v2 & 4) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 24);
    __int16 v3 = 4;
    *(_WORD *)(result + 80) = 4;
    *(void *)(result + 24) = v4;
    __int16 v2 = *(_WORD *)(a2 + 80);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 16);
    v3 |= 2u;
    *(_WORD *)(result + 80) = v3;
    *(void *)(result + 16) = v5;
    __int16 v2 = *(_WORD *)(a2 + 80);
  }
LABEL_6:
  if (v2)
  {
    uint64_t v6 = *(void *)(a2 + 8);
    v3 |= 1u;
    *(_WORD *)(result + 80) = v3;
    *(void *)(result + 8) = v6;
    __int16 v2 = *(_WORD *)(a2 + 80);
    if ((v2 & 0x200) == 0)
    {
LABEL_8:
      if ((v2 & 0x800) == 0) {
        goto LABEL_9;
      }
      goto LABEL_20;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 64);
  v3 |= 0x200u;
  *(_WORD *)(result + 80) = v3;
  *(_DWORD *)(result + 64) = v7;
  __int16 v2 = *(_WORD *)(a2 + 80);
  if ((v2 & 0x800) == 0)
  {
LABEL_9:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  int v8 = *(_DWORD *)(a2 + 72);
  v3 |= 0x800u;
  *(_WORD *)(result + 80) = v3;
  *(_DWORD *)(result + 72) = v8;
  __int16 v2 = *(_WORD *)(a2 + 80);
  if ((v2 & 0x1000) == 0)
  {
LABEL_10:
    if ((v2 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  int v9 = *(_DWORD *)(a2 + 76);
  v3 |= 0x1000u;
  *(_WORD *)(result + 80) = v3;
  *(_DWORD *)(result + 76) = v9;
  __int16 v2 = *(_WORD *)(a2 + 80);
  if ((v2 & 0x400) == 0)
  {
LABEL_11:
    if ((v2 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v10 = *(_DWORD *)(a2 + 68);
  v3 |= 0x400u;
  *(_WORD *)(result + 80) = v3;
  *(_DWORD *)(result + 68) = v10;
  __int16 v2 = *(_WORD *)(a2 + 80);
  if ((v2 & 0x20) == 0)
  {
LABEL_12:
    if ((v2 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_24;
  }
LABEL_23:
  int v11 = *(_DWORD *)(a2 + 48);
  v3 |= 0x20u;
  *(_WORD *)(result + 80) = v3;
  *(_DWORD *)(result + 48) = v11;
  __int16 v2 = *(_WORD *)(a2 + 80);
  if ((v2 & 0x40) == 0)
  {
LABEL_13:
    if ((v2 & 0x100) == 0) {
      goto LABEL_14;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v12 = *(_DWORD *)(a2 + 52);
  v3 |= 0x40u;
  *(_WORD *)(result + 80) = v3;
  *(_DWORD *)(result + 52) = v12;
  __int16 v2 = *(_WORD *)(a2 + 80);
  if ((v2 & 0x100) == 0)
  {
LABEL_14:
    if ((v2 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_26;
  }
LABEL_25:
  int v13 = *(_DWORD *)(a2 + 60);
  v3 |= 0x100u;
  *(_WORD *)(result + 80) = v3;
  *(_DWORD *)(result + 60) = v13;
  __int16 v2 = *(_WORD *)(a2 + 80);
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v14 = *(void *)(a2 + 40);
  v3 |= 0x10u;
  *(_WORD *)(result + 80) = v3;
  *(void *)(result + 40) = v14;
  __int16 v2 = *(_WORD *)(a2 + 80);
  if ((v2 & 8) == 0)
  {
LABEL_16:
    if ((v2 & 0x80) == 0) {
      return result;
    }
LABEL_28:
    int v16 = *(_DWORD *)(a2 + 56);
    *(_WORD *)(result + 80) = v3 | 0x80;
    *(_DWORD *)(result + 56) = v16;
    return result;
  }
LABEL_27:
  uint64_t v15 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_WORD *)(result + 80) = v3;
  *(void *)(result + 32) = v15;
  if ((*(_WORD *)(a2 + 80) & 0x80) != 0) {
    goto LABEL_28;
  }
  return result;
}

uint64_t sub_227B286EC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 80);
  if (v5)
  {
    PB::TextFormatter::format(this, "aopTsImpact");
    __int16 v5 = *(_WORD *)(a1 + 80);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "aopTsNow");
  __int16 v5 = *(_WORD *)(a1 + 80);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "aopTsSensor");
  __int16 v5 = *(_WORD *)(a1 + 80);
  if ((v5 & 0x20) == 0)
  {
LABEL_5:
    if ((v5 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "nPeaks");
  __int16 v5 = *(_WORD *)(a1 + 80);
  if ((v5 & 0x40) == 0)
  {
LABEL_6:
    if ((v5 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "normalizedIQR", *(float *)(a1 + 52));
  __int16 v5 = *(_WORD *)(a1 + 80);
  if ((v5 & 0x80) == 0)
  {
LABEL_7:
    if ((v5 & 0x100) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "operatingMode");
  __int16 v5 = *(_WORD *)(a1 + 80);
  if ((v5 & 0x100) == 0)
  {
LABEL_8:
    if ((v5 & 8) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "repetitiveMotion");
  __int16 v5 = *(_WORD *)(a1 + 80);
  if ((v5 & 8) == 0)
  {
LABEL_9:
    if ((v5 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "repetitiveMotionEndTs");
  __int16 v5 = *(_WORD *)(a1 + 80);
  if ((v5 & 0x10) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "repetitiveMotionStartTs");
  __int16 v5 = *(_WORD *)(a1 + 80);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "seq");
  __int16 v5 = *(_WORD *)(a1 + 80);
  if ((v5 & 0x400) == 0)
  {
LABEL_12:
    if ((v5 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "sumHighQPeaksInDecLowFreqFFT", *(float *)(a1 + 68));
  __int16 v5 = *(_WORD *)(a1 + 80);
  if ((v5 & 0x800) == 0)
  {
LABEL_13:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_29:
  PB::TextFormatter::format(this, "sumHighQPeaksInHighFreqFFT", *(float *)(a1 + 72));
  if ((*(_WORD *)(a1 + 80) & 0x1000) != 0) {
LABEL_14:
  }
    PB::TextFormatter::format(this, "sumHighQPeaksInLowFreqFFT", *(float *)(a1 + 76));
LABEL_15:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B288D0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 80) |= 4u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v75 = 0;
                unsigned int v76 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_168;
                  }
                  unint64_t v77 = v20++;
                  char v78 = *(unsigned char *)(v21 + v77);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v78 & 0x7F) << v75;
                  if ((v78 & 0x80) == 0) {
                    break;
                  }
                  v75 += 7;
                  BOOL v14 = v76++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_167;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_167:
                unint64_t v2 = v77 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_168;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_168:
              *(void *)(a1 + 24) = v24;
              goto LABEL_209;
            case 2u:
              *(_WORD *)(a1 + 80) |= 2u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v79 = 0;
                unsigned int v80 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    uint64_t v31 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_173;
                  }
                  unint64_t v81 = v27++;
                  char v82 = *(unsigned char *)(v28 + v81);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v82 & 0x7F) << v79;
                  if ((v82 & 0x80) == 0) {
                    break;
                  }
                  v79 += 7;
                  BOOL v14 = v80++ > 8;
                  if (v14)
                  {
                    uint64_t v31 = 0;
LABEL_172:
                    unint64_t v2 = v81 + 1;
                    goto LABEL_173;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v31 = 0;
                }
                goto LABEL_172;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_173;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              uint64_t v31 = 0;
LABEL_173:
              *(void *)(a1 + 16) = v31;
              goto LABEL_209;
            case 3u:
              *(_WORD *)(a1 + 80) |= 1u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v83 = 0;
                unsigned int v84 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    uint64_t v37 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_178;
                  }
                  unint64_t v85 = v33++;
                  char v86 = *(unsigned char *)(v34 + v85);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v86 & 0x7F) << v83;
                  if ((v86 & 0x80) == 0) {
                    break;
                  }
                  v83 += 7;
                  BOOL v14 = v84++ > 8;
                  if (v14)
                  {
                    uint64_t v37 = 0;
LABEL_177:
                    unint64_t v2 = v85 + 1;
                    goto LABEL_178;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v37 = 0;
                }
                goto LABEL_177;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_178;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              uint64_t v37 = 0;
LABEL_178:
              *(void *)(a1 + 8) = v37;
              goto LABEL_209;
            case 4u:
              *(_WORD *)(a1 + 80) |= 0x200u;
              unint64_t v39 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v40 = *(void *)this;
              if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
              {
                char v87 = 0;
                unsigned int v88 = 0;
                uint64_t v43 = 0;
                if (v2 <= v39) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v39)
                  {
                    LODWORD(v43) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_183;
                  }
                  unint64_t v89 = v39++;
                  char v90 = *(unsigned char *)(v40 + v89);
                  *((void *)this + 1) = v39;
                  v43 |= (unint64_t)(v90 & 0x7F) << v87;
                  if ((v90 & 0x80) == 0) {
                    break;
                  }
                  v87 += 7;
                  BOOL v14 = v88++ > 8;
                  if (v14)
                  {
                    LODWORD(v43) = 0;
LABEL_182:
                    unint64_t v2 = v89 + 1;
                    goto LABEL_183;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v43) = 0;
                }
                goto LABEL_182;
              }
              char v41 = 0;
              unsigned int v42 = 0;
              uint64_t v43 = 0;
              do
              {
                unint64_t v2 = v39 + 1;
                *((void *)this + 1) = v39 + 1;
                char v44 = *(unsigned char *)(v40 + v39);
                v43 |= (unint64_t)(v44 & 0x7F) << v41;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_183;
                }
                v41 += 7;
                unint64_t v39 = v2;
                BOOL v14 = v42++ > 8;
              }
              while (!v14);
              LODWORD(v43) = 0;
LABEL_183:
              *(_DWORD *)(a1 + 64) = v43;
              goto LABEL_209;
            case 5u:
              *(_WORD *)(a1 + 80) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_70;
              }
              *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_163;
            case 6u:
              *(_WORD *)(a1 + 80) |= 0x1000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_70;
              }
              *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_163;
            case 7u:
              *(_WORD *)(a1 + 80) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_70;
              }
              *(_DWORD *)(a1 + 68) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_163;
            case 8u:
              *(_WORD *)(a1 + 80) |= 0x20u;
              unint64_t v45 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v46 = *(void *)this;
              if (v45 > 0xFFFFFFFFFFFFFFF5 || v45 + 10 > v2)
              {
                char v91 = 0;
                unsigned int v92 = 0;
                uint64_t v49 = 0;
                if (v2 <= v45) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v45)
                  {
                    LODWORD(v49) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_188;
                  }
                  unint64_t v93 = v45++;
                  char v94 = *(unsigned char *)(v46 + v93);
                  *((void *)this + 1) = v45;
                  v49 |= (unint64_t)(v94 & 0x7F) << v91;
                  if ((v94 & 0x80) == 0) {
                    break;
                  }
                  v91 += 7;
                  BOOL v14 = v92++ > 8;
                  if (v14)
                  {
                    LODWORD(v49) = 0;
LABEL_187:
                    unint64_t v2 = v93 + 1;
                    goto LABEL_188;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v49) = 0;
                }
                goto LABEL_187;
              }
              char v47 = 0;
              unsigned int v48 = 0;
              uint64_t v49 = 0;
              do
              {
                unint64_t v2 = v45 + 1;
                *((void *)this + 1) = v45 + 1;
                char v50 = *(unsigned char *)(v46 + v45);
                v49 |= (unint64_t)(v50 & 0x7F) << v47;
                if ((v50 & 0x80) == 0) {
                  goto LABEL_188;
                }
                v47 += 7;
                unint64_t v45 = v2;
                BOOL v14 = v48++ > 8;
              }
              while (!v14);
              LODWORD(v49) = 0;
LABEL_188:
              *(_DWORD *)(a1 + 48) = v49;
              goto LABEL_209;
            case 9u:
              *(_WORD *)(a1 + 80) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
LABEL_163:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_70:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_209;
            case 0xAu:
              *(_WORD *)(a1 + 80) |= 0x100u;
              unint64_t v51 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v52 = *(void *)this;
              if (v51 > 0xFFFFFFFFFFFFFFF5 || v51 + 10 > v2)
              {
                char v95 = 0;
                unsigned int v96 = 0;
                uint64_t v55 = 0;
                if (v2 <= v51) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v51)
                  {
                    LODWORD(v55) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_193;
                  }
                  unint64_t v97 = v51++;
                  char v98 = *(unsigned char *)(v52 + v97);
                  *((void *)this + 1) = v51;
                  v55 |= (unint64_t)(v98 & 0x7F) << v95;
                  if ((v98 & 0x80) == 0) {
                    break;
                  }
                  v95 += 7;
                  BOOL v14 = v96++ > 8;
                  if (v14)
                  {
                    LODWORD(v55) = 0;
LABEL_192:
                    unint64_t v2 = v97 + 1;
                    goto LABEL_193;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v55) = 0;
                }
                goto LABEL_192;
              }
              char v53 = 0;
              unsigned int v54 = 0;
              uint64_t v55 = 0;
              do
              {
                unint64_t v2 = v51 + 1;
                *((void *)this + 1) = v51 + 1;
                char v56 = *(unsigned char *)(v52 + v51);
                v55 |= (unint64_t)(v56 & 0x7F) << v53;
                if ((v56 & 0x80) == 0) {
                  goto LABEL_193;
                }
                v53 += 7;
                unint64_t v51 = v2;
                BOOL v14 = v54++ > 8;
              }
              while (!v14);
              LODWORD(v55) = 0;
LABEL_193:
              *(_DWORD *)(a1 + 60) = v55;
              goto LABEL_209;
            case 0xBu:
              *(_WORD *)(a1 + 80) |= 0x10u;
              unint64_t v57 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v58 = *(void *)this;
              if (v57 > 0xFFFFFFFFFFFFFFF5 || v57 + 10 > v2)
              {
                char v99 = 0;
                unsigned int v100 = 0;
                uint64_t v61 = 0;
                if (v2 <= v57) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v57)
                  {
                    uint64_t v61 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_198;
                  }
                  unint64_t v101 = v57++;
                  char v102 = *(unsigned char *)(v58 + v101);
                  *((void *)this + 1) = v57;
                  v61 |= (unint64_t)(v102 & 0x7F) << v99;
                  if ((v102 & 0x80) == 0) {
                    break;
                  }
                  v99 += 7;
                  BOOL v14 = v100++ > 8;
                  if (v14)
                  {
                    uint64_t v61 = 0;
LABEL_197:
                    unint64_t v2 = v101 + 1;
                    goto LABEL_198;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v61 = 0;
                }
                goto LABEL_197;
              }
              char v59 = 0;
              unsigned int v60 = 0;
              uint64_t v61 = 0;
              do
              {
                unint64_t v2 = v57 + 1;
                *((void *)this + 1) = v57 + 1;
                char v62 = *(unsigned char *)(v58 + v57);
                v61 |= (unint64_t)(v62 & 0x7F) << v59;
                if ((v62 & 0x80) == 0) {
                  goto LABEL_198;
                }
                v59 += 7;
                unint64_t v57 = v2;
                BOOL v14 = v60++ > 8;
              }
              while (!v14);
              uint64_t v61 = 0;
LABEL_198:
              *(void *)(a1 + 40) = v61;
              goto LABEL_209;
            case 0xCu:
              *(_WORD *)(a1 + 80) |= 8u;
              unint64_t v63 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v64 = *(void *)this;
              if (v63 > 0xFFFFFFFFFFFFFFF5 || v63 + 10 > v2)
              {
                char v103 = 0;
                unsigned int v104 = 0;
                uint64_t v67 = 0;
                if (v2 <= v63) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v63)
                  {
                    uint64_t v67 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_203;
                  }
                  unint64_t v105 = v63++;
                  char v106 = *(unsigned char *)(v64 + v105);
                  *((void *)this + 1) = v63;
                  v67 |= (unint64_t)(v106 & 0x7F) << v103;
                  if ((v106 & 0x80) == 0) {
                    break;
                  }
                  v103 += 7;
                  BOOL v14 = v104++ > 8;
                  if (v14)
                  {
                    uint64_t v67 = 0;
LABEL_202:
                    unint64_t v2 = v105 + 1;
                    goto LABEL_203;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v67 = 0;
                }
                goto LABEL_202;
              }
              char v65 = 0;
              unsigned int v66 = 0;
              uint64_t v67 = 0;
              do
              {
                unint64_t v2 = v63 + 1;
                *((void *)this + 1) = v63 + 1;
                char v68 = *(unsigned char *)(v64 + v63);
                v67 |= (unint64_t)(v68 & 0x7F) << v65;
                if ((v68 & 0x80) == 0) {
                  goto LABEL_203;
                }
                v65 += 7;
                unint64_t v63 = v2;
                BOOL v14 = v66++ > 8;
              }
              while (!v14);
              uint64_t v67 = 0;
LABEL_203:
              *(void *)(a1 + 32) = v67;
              goto LABEL_209;
            case 0xDu:
              *(_WORD *)(a1 + 80) |= 0x80u;
              unint64_t v69 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v70 = *(void *)this;
              if (v69 > 0xFFFFFFFFFFFFFFF5 || v69 + 10 > v2)
              {
                char v107 = 0;
                unsigned int v108 = 0;
                uint64_t v73 = 0;
                if (v2 <= v69) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v69)
                  {
                    LODWORD(v73) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_208;
                  }
                  unint64_t v109 = v69++;
                  char v110 = *(unsigned char *)(v70 + v109);
                  *((void *)this + 1) = v69;
                  v73 |= (unint64_t)(v110 & 0x7F) << v107;
                  if ((v110 & 0x80) == 0) {
                    break;
                  }
                  v107 += 7;
                  BOOL v14 = v108++ > 8;
                  if (v14)
                  {
                    LODWORD(v73) = 0;
LABEL_207:
                    unint64_t v2 = v109 + 1;
                    goto LABEL_208;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v73) = 0;
                }
                goto LABEL_207;
              }
              char v71 = 0;
              unsigned int v72 = 0;
              uint64_t v73 = 0;
              do
              {
                unint64_t v2 = v69 + 1;
                *((void *)this + 1) = v69 + 1;
                char v74 = *(unsigned char *)(v70 + v69);
                v73 |= (unint64_t)(v74 & 0x7F) << v71;
                if ((v74 & 0x80) == 0) {
                  goto LABEL_208;
                }
                v71 += 7;
                unint64_t v69 = v2;
                BOOL v14 = v72++ > 8;
              }
              while (!v14);
              LODWORD(v73) = 0;
LABEL_208:
              *(_DWORD *)(a1 + 56) = v73;
LABEL_209:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_209;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B293B8(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 80);
  if ((v4 & 4) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    __int16 v4 = *(_WORD *)(v3 + 80);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 1) == 0)
  {
LABEL_4:
    if ((v4 & 0x200) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 0x200) == 0)
  {
LABEL_5:
    if ((v4 & 0x800) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 0x800) == 0)
  {
LABEL_6:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72));
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 0x1000) == 0)
  {
LABEL_7:
    if ((v4 & 0x400) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76));
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 0x400) == 0)
  {
LABEL_8:
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 68));
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 0x20) == 0)
  {
LABEL_9:
    if ((v4 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 0x40) == 0)
  {
LABEL_10:
    if ((v4 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 0x100) == 0)
  {
LABEL_11:
    if ((v4 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 0x10) == 0)
  {
LABEL_12:
    if ((v4 & 8) == 0) {
      goto LABEL_13;
    }
LABEL_26:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(_WORD *)(v3 + 80) & 0x80) == 0) {
      return result;
    }
    goto LABEL_27;
  }
LABEL_25:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 8) != 0) {
    goto LABEL_26;
  }
LABEL_13:
  if ((v4 & 0x80) == 0) {
    return result;
  }
LABEL_27:

  return PB::Writer::writeVarInt(this);
}

void sub_227B29560(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B29598(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC1FBD8;
  *(_DWORD *)(result + 72) = 0;
  int v2 = *(_DWORD *)(a2 + 72);
  if (v2)
  {
    int v4 = *(_DWORD *)(a2 + 8);
    int v3 = 1;
    *(_DWORD *)(result + 72) = 1;
    *(_DWORD *)(result + 8) = v4;
    int v2 = *(_DWORD *)(a2 + 72);
    if ((v2 & 0x20000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 0x20000) != 0)
  {
LABEL_5:
    char v5 = *(unsigned char *)(a2 + 70);
    v3 |= 0x20000u;
    *(_DWORD *)(result + 72) = v3;
    *(unsigned char *)(result + 70) = v5;
    int v2 = *(_DWORD *)(a2 + 72);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 12);
    v3 |= 2u;
    *(_DWORD *)(result + 72) = v3;
    *(_DWORD *)(result + 12) = v6;
    int v2 = *(_DWORD *)(a2 + 72);
    if ((v2 & 0x2000) == 0)
    {
LABEL_8:
      if ((v2 & 0x4000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_25;
    }
  }
  else if ((v2 & 0x2000) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 60);
  v3 |= 0x2000u;
  *(_DWORD *)(result + 72) = v3;
  *(_DWORD *)(result + 60) = v7;
  int v2 = *(_DWORD *)(a2 + 72);
  if ((v2 & 0x4000) == 0)
  {
LABEL_9:
    if ((v2 & 4) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_25:
  int v8 = *(_DWORD *)(a2 + 64);
  v3 |= 0x4000u;
  *(_DWORD *)(result + 72) = v3;
  *(_DWORD *)(result + 64) = v8;
  int v2 = *(_DWORD *)(a2 + 72);
  if ((v2 & 4) == 0)
  {
LABEL_10:
    if ((v2 & 0x20) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  int v9 = *(_DWORD *)(a2 + 16);
  v3 |= 4u;
  *(_DWORD *)(result + 72) = v3;
  *(_DWORD *)(result + 16) = v9;
  int v2 = *(_DWORD *)(a2 + 72);
  if ((v2 & 0x20) == 0)
  {
LABEL_11:
    if ((v2 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_27:
  int v10 = *(_DWORD *)(a2 + 28);
  v3 |= 0x20u;
  *(_DWORD *)(result + 72) = v3;
  *(_DWORD *)(result + 28) = v10;
  int v2 = *(_DWORD *)(a2 + 72);
  if ((v2 & 8) == 0)
  {
LABEL_12:
    if ((v2 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_28:
  int v11 = *(_DWORD *)(a2 + 20);
  v3 |= 8u;
  *(_DWORD *)(result + 72) = v3;
  *(_DWORD *)(result + 20) = v11;
  int v2 = *(_DWORD *)(a2 + 72);
  if ((v2 & 0x10) == 0)
  {
LABEL_13:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_30;
  }
LABEL_29:
  int v12 = *(_DWORD *)(a2 + 24);
  v3 |= 0x10u;
  *(_DWORD *)(result + 72) = v3;
  *(_DWORD *)(result + 24) = v12;
  int v2 = *(_DWORD *)(a2 + 72);
  if ((v2 & 0x1000) == 0)
  {
LABEL_14:
    if ((v2 & 0x800) == 0) {
      goto LABEL_15;
    }
    goto LABEL_31;
  }
LABEL_30:
  int v13 = *(_DWORD *)(a2 + 56);
  v3 |= 0x1000u;
  *(_DWORD *)(result + 72) = v3;
  *(_DWORD *)(result + 56) = v13;
  int v2 = *(_DWORD *)(a2 + 72);
  if ((v2 & 0x800) == 0)
  {
LABEL_15:
    if ((v2 & 0x400) == 0) {
      goto LABEL_16;
    }
    goto LABEL_32;
  }
LABEL_31:
  int v14 = *(_DWORD *)(a2 + 52);
  v3 |= 0x800u;
  *(_DWORD *)(result + 72) = v3;
  *(_DWORD *)(result + 52) = v14;
  int v2 = *(_DWORD *)(a2 + 72);
  if ((v2 & 0x400) == 0)
  {
LABEL_16:
    if ((v2 & 0x200) == 0) {
      goto LABEL_17;
    }
    goto LABEL_33;
  }
LABEL_32:
  int v15 = *(_DWORD *)(a2 + 48);
  v3 |= 0x400u;
  *(_DWORD *)(result + 72) = v3;
  *(_DWORD *)(result + 48) = v15;
  int v2 = *(_DWORD *)(a2 + 72);
  if ((v2 & 0x200) == 0)
  {
LABEL_17:
    if ((v2 & 0x40) == 0) {
      goto LABEL_18;
    }
    goto LABEL_34;
  }
LABEL_33:
  int v16 = *(_DWORD *)(a2 + 44);
  v3 |= 0x200u;
  *(_DWORD *)(result + 72) = v3;
  *(_DWORD *)(result + 44) = v16;
  int v2 = *(_DWORD *)(a2 + 72);
  if ((v2 & 0x40) == 0)
  {
LABEL_18:
    if ((v2 & 0x80) == 0) {
      goto LABEL_19;
    }
    goto LABEL_35;
  }
LABEL_34:
  int v17 = *(_DWORD *)(a2 + 32);
  v3 |= 0x40u;
  *(_DWORD *)(result + 72) = v3;
  *(_DWORD *)(result + 32) = v17;
  int v2 = *(_DWORD *)(a2 + 72);
  if ((v2 & 0x80) == 0)
  {
LABEL_19:
    if ((v2 & 0x100) == 0) {
      goto LABEL_20;
    }
    goto LABEL_36;
  }
LABEL_35:
  int v18 = *(_DWORD *)(a2 + 36);
  v3 |= 0x80u;
  *(_DWORD *)(result + 72) = v3;
  *(_DWORD *)(result + 36) = v18;
  int v2 = *(_DWORD *)(a2 + 72);
  if ((v2 & 0x100) == 0)
  {
LABEL_20:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_37;
  }
LABEL_36:
  int v19 = *(_DWORD *)(a2 + 40);
  v3 |= 0x100u;
  *(_DWORD *)(result + 72) = v3;
  *(_DWORD *)(result + 40) = v19;
  int v2 = *(_DWORD *)(a2 + 72);
  if ((v2 & 0x10000) == 0)
  {
LABEL_21:
    if ((v2 & 0x8000) == 0) {
      return result;
    }
LABEL_38:
    char v21 = *(unsigned char *)(a2 + 68);
    *(_DWORD *)(result + 72) = v3 | 0x8000;
    *(unsigned char *)(result + 68) = v21;
    return result;
  }
LABEL_37:
  char v20 = *(unsigned char *)(a2 + 69);
  v3 |= 0x10000u;
  *(_DWORD *)(result + 72) = v3;
  *(unsigned char *)(result + 69) = v20;
  if ((*(_DWORD *)(a2 + 72) & 0x8000) != 0) {
    goto LABEL_38;
  }
  return result;
}

uint64_t sub_227B297B8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 72);
  if (v5)
  {
    PB::TextFormatter::format(this, "crownUpDown");
    int v5 = *(_DWORD *)(a1 + 72);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_25;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "fallType");
  int v5 = *(_DWORD *)(a1 + 72);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "impactMaxAccelNormAlertThreshold", *(float *)(a1 + 16));
  int v5 = *(_DWORD *)(a1 + 72);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "impactMaxAccelNormLoggingHeartRateThreshold", *(float *)(a1 + 20));
  int v5 = *(_DWORD *)(a1 + 72);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "impactMaxAccelNormLoggingHighResolutionSensorDataThreshold", *(float *)(a1 + 24));
  int v5 = *(_DWORD *)(a1 + 72);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "impactMaxAccelNormLoggingStatsThreshold", *(float *)(a1 + 28));
  int v5 = *(_DWORD *)(a1 + 72);
  if ((v5 & 0x8000) == 0)
  {
LABEL_8:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(this, "isADLImpact");
  int v5 = *(_DWORD *)(a1 + 72);
  if ((v5 & 0x10000) == 0)
  {
LABEL_9:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "isFallDetectionFeatureEnabled");
  int v5 = *(_DWORD *)(a1 + 72);
  if ((v5 & 0x20000) == 0)
  {
LABEL_10:
    if ((v5 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(this, "isNearFall");
  int v5 = *(_DWORD *)(a1 + 72);
  if ((v5 & 0x40) == 0)
  {
LABEL_11:
    if ((v5 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(this, "metMinutePercentile90", *(float *)(a1 + 32));
  int v5 = *(_DWORD *)(a1 + 72);
  if ((v5 & 0x80) == 0)
  {
LABEL_12:
    if ((v5 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(this, "metMinutePercentile95", *(float *)(a1 + 36));
  int v5 = *(_DWORD *)(a1 + 72);
  if ((v5 & 0x100) == 0)
  {
LABEL_13:
    if ((v5 & 0x200) == 0) {
      goto LABEL_14;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "metMinutePercentile98", *(float *)(a1 + 40));
  int v5 = *(_DWORD *)(a1 + 72);
  if ((v5 & 0x200) == 0)
  {
LABEL_14:
    if ((v5 & 0x400) == 0) {
      goto LABEL_15;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "metMinutePercentileActual", *(float *)(a1 + 44));
  int v5 = *(_DWORD *)(a1 + 72);
  if ((v5 & 0x400) == 0)
  {
LABEL_15:
    if ((v5 & 0x800) == 0) {
      goto LABEL_16;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "otherFallPosteriorRatioDetectionThreshold", *(float *)(a1 + 48));
  int v5 = *(_DWORD *)(a1 + 72);
  if ((v5 & 0x800) == 0)
  {
LABEL_16:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "slipFallPosteriorRatioDetectionThreshold", *(float *)(a1 + 52));
  int v5 = *(_DWORD *)(a1 + 72);
  if ((v5 & 0x1000) == 0)
  {
LABEL_17:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "tripFallPosteriorRatioDetectionThreshold", *(float *)(a1 + 56));
  int v5 = *(_DWORD *)(a1 + 72);
  if ((v5 & 0x2000) == 0)
  {
LABEL_18:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_39:
  PB::TextFormatter::format(this, "userAgeBucket");
  if ((*(_DWORD *)(a1 + 72) & 0x4000) != 0) {
LABEL_19:
  }
    PB::TextFormatter::format(this, "workoutType");
LABEL_20:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B29A3C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_DWORD *)(a1 + 72) |= 1u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v51 = 0;
                unsigned int v52 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    LODWORD(v24) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_131;
                  }
                  unint64_t v53 = v20++;
                  char v54 = *(unsigned char *)(v21 + v53);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v54 & 0x7F) << v51;
                  if ((v54 & 0x80) == 0) {
                    break;
                  }
                  v51 += 7;
                  BOOL v14 = v52++ > 8;
                  if (v14)
                  {
                    LODWORD(v24) = 0;
                    goto LABEL_130;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v24) = 0;
                }
LABEL_130:
                unint64_t v2 = v53 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_131;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                LODWORD(v24) = 0;
              }
LABEL_131:
              *(_DWORD *)(a1 + 8) = v24;
              goto LABEL_147;
            case 2u:
              *(_DWORD *)(a1 + 72) |= 0x20000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v28 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v27 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v28 = v27 != 0;
              }
              *(unsigned char *)(a1 + 70) = v28;
              goto LABEL_147;
            case 3u:
              *(_DWORD *)(a1 + 72) |= 2u;
              unint64_t v29 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v30 = *(void *)this;
              if (v29 > 0xFFFFFFFFFFFFFFF5 || v29 + 10 > v2)
              {
                char v55 = 0;
                unsigned int v56 = 0;
                uint64_t v33 = 0;
                if (v2 <= v29) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v29)
                  {
                    LODWORD(v33) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_136;
                  }
                  unint64_t v57 = v29++;
                  char v58 = *(unsigned char *)(v30 + v57);
                  *((void *)this + 1) = v29;
                  v33 |= (unint64_t)(v58 & 0x7F) << v55;
                  if ((v58 & 0x80) == 0) {
                    break;
                  }
                  v55 += 7;
                  BOOL v14 = v56++ > 8;
                  if (v14)
                  {
                    LODWORD(v33) = 0;
LABEL_135:
                    unint64_t v2 = v57 + 1;
                    goto LABEL_136;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v33) = 0;
                }
                goto LABEL_135;
              }
              char v31 = 0;
              unsigned int v32 = 0;
              uint64_t v33 = 0;
              do
              {
                unint64_t v2 = v29 + 1;
                *((void *)this + 1) = v29 + 1;
                char v34 = *(unsigned char *)(v30 + v29);
                v33 |= (unint64_t)(v34 & 0x7F) << v31;
                if ((v34 & 0x80) == 0) {
                  goto LABEL_136;
                }
                v31 += 7;
                unint64_t v29 = v2;
                BOOL v14 = v32++ > 8;
              }
              while (!v14);
              LODWORD(v33) = 0;
LABEL_136:
              *(_DWORD *)(a1 + 12) = v33;
              goto LABEL_147;
            case 4u:
              *(_DWORD *)(a1 + 72) |= 0x2000u;
              unint64_t v35 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v36 = *(void *)this;
              if (v35 > 0xFFFFFFFFFFFFFFF5 || v35 + 10 > v2)
              {
                char v59 = 0;
                unsigned int v60 = 0;
                uint64_t v39 = 0;
                if (v2 <= v35) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v35)
                  {
                    LODWORD(v39) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_141;
                  }
                  unint64_t v61 = v35++;
                  char v62 = *(unsigned char *)(v36 + v61);
                  *((void *)this + 1) = v35;
                  v39 |= (unint64_t)(v62 & 0x7F) << v59;
                  if ((v62 & 0x80) == 0) {
                    break;
                  }
                  v59 += 7;
                  BOOL v14 = v60++ > 8;
                  if (v14)
                  {
                    LODWORD(v39) = 0;
LABEL_140:
                    unint64_t v2 = v61 + 1;
                    goto LABEL_141;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v39) = 0;
                }
                goto LABEL_140;
              }
              char v37 = 0;
              unsigned int v38 = 0;
              uint64_t v39 = 0;
              do
              {
                unint64_t v2 = v35 + 1;
                *((void *)this + 1) = v35 + 1;
                char v40 = *(unsigned char *)(v36 + v35);
                v39 |= (unint64_t)(v40 & 0x7F) << v37;
                if ((v40 & 0x80) == 0) {
                  goto LABEL_141;
                }
                v37 += 7;
                unint64_t v35 = v2;
                BOOL v14 = v38++ > 8;
              }
              while (!v14);
              LODWORD(v39) = 0;
LABEL_141:
              *(_DWORD *)(a1 + 60) = v39;
              goto LABEL_147;
            case 5u:
              *(_DWORD *)(a1 + 72) |= 0x4000u;
              unint64_t v41 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v42 = *(void *)this;
              if (v41 > 0xFFFFFFFFFFFFFFF5 || v41 + 10 > v2)
              {
                char v63 = 0;
                unsigned int v64 = 0;
                uint64_t v45 = 0;
                if (v2 <= v41) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v41)
                  {
                    LODWORD(v45) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_146;
                  }
                  unint64_t v65 = v41++;
                  char v66 = *(unsigned char *)(v42 + v65);
                  *((void *)this + 1) = v41;
                  v45 |= (unint64_t)(v66 & 0x7F) << v63;
                  if ((v66 & 0x80) == 0) {
                    break;
                  }
                  v63 += 7;
                  BOOL v14 = v64++ > 8;
                  if (v14)
                  {
                    LODWORD(v45) = 0;
LABEL_145:
                    unint64_t v2 = v65 + 1;
                    goto LABEL_146;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v45) = 0;
                }
                goto LABEL_145;
              }
              char v43 = 0;
              unsigned int v44 = 0;
              uint64_t v45 = 0;
              do
              {
                unint64_t v2 = v41 + 1;
                *((void *)this + 1) = v41 + 1;
                char v46 = *(unsigned char *)(v42 + v41);
                v45 |= (unint64_t)(v46 & 0x7F) << v43;
                if ((v46 & 0x80) == 0) {
                  goto LABEL_146;
                }
                v43 += 7;
                unint64_t v41 = v2;
                BOOL v14 = v44++ > 8;
              }
              while (!v14);
              LODWORD(v45) = 0;
LABEL_146:
              *(_DWORD *)(a1 + 64) = v45;
LABEL_147:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 6u:
              *(_DWORD *)(a1 + 72) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_86;
              }
              *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_126;
            case 7u:
              *(_DWORD *)(a1 + 72) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_86;
              }
              *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_126;
            case 8u:
              *(_DWORD *)(a1 + 72) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_86;
              }
              *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_126;
            case 9u:
              *(_DWORD *)(a1 + 72) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_86;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_126;
            case 0xAu:
              *(_DWORD *)(a1 + 72) |= 0x1000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_86;
              }
              *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_126;
            case 0xBu:
              *(_DWORD *)(a1 + 72) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_86;
              }
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_126;
            case 0xCu:
              *(_DWORD *)(a1 + 72) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_86;
              }
              *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_126;
            case 0xDu:
              *(_DWORD *)(a1 + 72) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_86;
              }
              *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_126;
            case 0xEu:
              *(_DWORD *)(a1 + 72) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_86;
              }
              *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_126;
            case 0xFu:
              *(_DWORD *)(a1 + 72) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_86;
              }
              *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_126;
            case 0x10u:
              *(_DWORD *)(a1 + 72) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
LABEL_126:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_86:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_147;
            case 0x11u:
              *(_DWORD *)(a1 + 72) |= 0x10000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v48 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v47 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v48 = v47 != 0;
              }
              *(unsigned char *)(a1 + 69) = v48;
              goto LABEL_147;
            case 0x12u:
              *(_DWORD *)(a1 + 72) |= 0x8000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v50 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v49 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v50 = v49 != 0;
              }
              *(unsigned char *)(a1 + 68) = v50;
              goto LABEL_147;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_147;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B2A2F0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 72);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    int v4 = *(_DWORD *)(v3 + 72);
    if ((v4 & 0x20000) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_22;
    }
  }
  else if ((v4 & 0x20000) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 72);
  if ((v4 & 2) == 0)
  {
LABEL_4:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 72);
  if ((v4 & 0x2000) == 0)
  {
LABEL_5:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 72);
  if ((v4 & 0x4000) == 0)
  {
LABEL_6:
    if ((v4 & 4) == 0) {
      goto LABEL_7;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 72);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16));
  int v4 = *(_DWORD *)(v3 + 72);
  if ((v4 & 0x20) == 0)
  {
LABEL_8:
    if ((v4 & 8) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
  int v4 = *(_DWORD *)(v3 + 72);
  if ((v4 & 8) == 0)
  {
LABEL_9:
    if ((v4 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
  int v4 = *(_DWORD *)(v3 + 72);
  if ((v4 & 0x10) == 0)
  {
LABEL_10:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
  int v4 = *(_DWORD *)(v3 + 72);
  if ((v4 & 0x1000) == 0)
  {
LABEL_11:
    if ((v4 & 0x800) == 0) {
      goto LABEL_12;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56));
  int v4 = *(_DWORD *)(v3 + 72);
  if ((v4 & 0x800) == 0)
  {
LABEL_12:
    if ((v4 & 0x400) == 0) {
      goto LABEL_13;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
  int v4 = *(_DWORD *)(v3 + 72);
  if ((v4 & 0x400) == 0)
  {
LABEL_13:
    if ((v4 & 0x200) == 0) {
      goto LABEL_14;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48));
  int v4 = *(_DWORD *)(v3 + 72);
  if ((v4 & 0x200) == 0)
  {
LABEL_14:
    if ((v4 & 0x40) == 0) {
      goto LABEL_15;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44));
  int v4 = *(_DWORD *)(v3 + 72);
  if ((v4 & 0x40) == 0)
  {
LABEL_15:
    if ((v4 & 0x80) == 0) {
      goto LABEL_16;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
  int v4 = *(_DWORD *)(v3 + 72);
  if ((v4 & 0x80) == 0)
  {
LABEL_16:
    if ((v4 & 0x100) == 0) {
      goto LABEL_17;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36));
  int v4 = *(_DWORD *)(v3 + 72);
  if ((v4 & 0x100) == 0)
  {
LABEL_17:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_18;
    }
LABEL_36:
    uint64_t result = PB::Writer::write(this);
    if ((*(_DWORD *)(v3 + 72) & 0x8000) == 0) {
      return result;
    }
    goto LABEL_37;
  }
LABEL_35:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
  int v4 = *(_DWORD *)(v3 + 72);
  if ((v4 & 0x10000) != 0) {
    goto LABEL_36;
  }
LABEL_18:
  if ((v4 & 0x8000) == 0) {
    return result;
  }
LABEL_37:

  return PB::Writer::write(this);
}

double sub_227B2A520(uint64_t a1)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_26DC1FC10;
  double result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_DWORD *)(a1 + 128) = 0;
  return result;
}

void sub_227B2A558(PB::Base *this)
{
  *(void *)this = &unk_26DC1FC10;
  uint64_t v2 = *((void *)this + 15);
  *((void *)this + 15) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *((void *)this + 14);
  *((void *)this + 14) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  uint64_t v4 = *((void *)this + 13);
  *((void *)this + 13) = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  uint64_t v5 = *((void *)this + 12);
  *((void *)this + 12) = 0;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  uint64_t v6 = *((void *)this + 11);
  *((void *)this + 11) = 0;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  uint64_t v7 = *((void *)this + 10);
  *((void *)this + 10) = 0;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  uint64_t v8 = *((void *)this + 9);
  *((void *)this + 9) = 0;
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
  }
  uint64_t v9 = *((void *)this + 8);
  *((void *)this + 8) = 0;
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
  }
  uint64_t v10 = *((void *)this + 7);
  *((void *)this + 7) = 0;
  if (v10) {
    (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
  }
  uint64_t v11 = *((void *)this + 6);
  *((void *)this + 6) = 0;
  if (v11) {
    (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
  }
  uint64_t v12 = *((void *)this + 5);
  *((void *)this + 5) = 0;
  if (v12) {
    (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
  }
  uint64_t v13 = *((void *)this + 4);
  *((void *)this + 4) = 0;
  if (v13) {
    (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
  }
  uint64_t v14 = *((void *)this + 2);
  *((void *)this + 2) = 0;
  if (v14) {
    (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
  }
  uint64_t v15 = *((void *)this + 1);
  *((void *)this + 1) = 0;
  if (v15) {
    (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
  }

  PB::Base::~Base(this);
}

void sub_227B2A84C(PB::Base *a1)
{
  sub_227B2A558(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B2A884(uint64_t result, uint64_t a2)
{
  *(void *)double result = &unk_26DC1FC10;
  *(void *)(result + 8) = 0;
  *(_OWORD *)(result + 32) = 0u;
  *(void *)(result + 16) = 0;
  *(_OWORD *)(result + 48) = 0u;
  *(_OWORD *)(result + 64) = 0u;
  *(_OWORD *)(result + 80) = 0u;
  *(_OWORD *)(result + 96) = 0u;
  *(_OWORD *)(result + 112) = 0u;
  *(_DWORD *)(result + 128) = 0;
  if (*(unsigned char *)(a2 + 128))
  {
    uint64_t v2 = *(void *)(a2 + 24);
    *(unsigned char *)(result + 128) = 1;
    *(void *)(result + 24) = v2;
  }
  if (*(void *)(a2 + 88)) {
    operator new();
  }
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  if (*(void *)(a2 + 16)) {
    operator new();
  }
  if (*(void *)(a2 + 64)) {
    operator new();
  }
  if (*(void *)(a2 + 72)) {
    operator new();
  }
  if (*(void *)(a2 + 32)) {
    operator new();
  }
  if (*(void *)(a2 + 104)) {
    operator new();
  }
  if (*(void *)(a2 + 80)) {
    operator new();
  }
  if (*(void *)(a2 + 120)) {
    operator new();
  }
  if (*(void *)(a2 + 48)) {
    operator new();
  }
  if (*(void *)(a2 + 56)) {
    operator new();
  }
  if (*(void *)(a2 + 112)) {
    operator new();
  }
  if (*(void *)(a2 + 40)) {
    operator new();
  }
  if (*(void *)(a2 + 96)) {
    operator new();
  }
  return result;
}

uint64_t sub_227B2AE28(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "accel100");
  }
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v6 + 32))(v6, this, "accel800");
  }
  if (*(unsigned char *)(a1 + 128)) {
    PB::TextFormatter::format(this, "aopTimestamp");
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v7 + 32))(v7, this, "dm");
  }
  uint64_t v8 = *(void *)(a1 + 40);
  if (v8) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v8 + 32))(v8, this, "dmAlwaysOn");
  }
  uint64_t v9 = *(void *)(a1 + 48);
  if (v9) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v9 + 32))(v9, this, "fallState");
  }
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v10 + 32))(v10, this, "fallStats");
  }
  uint64_t v11 = *(void *)(a1 + 64);
  if (v11) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v11 + 32))(v11, this, "gyro100");
  }
  uint64_t v12 = *(void *)(a1 + 72);
  if (v12) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v12 + 32))(v12, this, "gyro200");
  }
  uint64_t v13 = *(void *)(a1 + 80);
  if (v13) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v13 + 32))(v13, this, "heartRate");
  }
  uint64_t v14 = *(void *)(a1 + 88);
  if (v14) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v14 + 32))(v14, this, "meta");
  }
  uint64_t v15 = *(void *)(a1 + 96);
  if (v15) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v15 + 32))(v15, this, "odometerEntry");
  }
  uint64_t v16 = *(void *)(a1 + 104);
  if (v16) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v16 + 32))(v16, this, "pressure");
  }
  uint64_t v17 = *(void *)(a1 + 112);
  if (v17) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v17 + 32))(v17, this, "suppressionFeatures");
  }
  uint64_t v18 = *(void *)(a1 + 120);
  if (v18) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v18 + 32))(v18, this, "wristState");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B2B198(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 2u:
          *(unsigned char *)(a1 + 128) |= 1u;
          unint64_t v20 = *((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
          uint64_t v22 = *(void *)this;
          if (v20 <= 0xFFFFFFFFFFFFFFF5 && v20 + 10 <= v21)
          {
            char v23 = 0;
            unsigned int v24 = 0;
            uint64_t v25 = 0;
            do
            {
              unint64_t v26 = v20 + 1;
              *((void *)this + 1) = v20 + 1;
              char v27 = *(unsigned char *)(v22 + v20);
              v25 |= (unint64_t)(v27 & 0x7F) << v23;
              if ((v27 & 0x80) == 0) {
                goto LABEL_60;
              }
              v23 += 7;
              unint64_t v20 = v26;
              BOOL v14 = v24++ > 8;
            }
            while (!v14);
LABEL_56:
            uint64_t v25 = 0;
            goto LABEL_60;
          }
          char v30 = 0;
          unsigned int v31 = 0;
          uint64_t v25 = 0;
          if (v21 <= v20) {
            unint64_t v21 = *((void *)this + 1);
          }
          break;
        case 3u:
          operator new();
        case 4u:
          operator new();
        case 5u:
          operator new();
        case 6u:
          operator new();
        case 7u:
          operator new();
        case 8u:
          operator new();
        case 9u:
          operator new();
        case 0xAu:
          operator new();
        case 0xBu:
          operator new();
        case 0xCu:
          operator new();
        case 0xDu:
          operator new();
        case 0xEu:
          operator new();
        case 0xFu:
          operator new();
        case 0x10u:
          operator new();
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          goto LABEL_45;
      }
      while (1)
      {
        if (v21 == v20)
        {
          uint64_t v25 = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_60;
        }
        unint64_t v32 = v20 + 1;
        char v33 = *(unsigned char *)(v22 + v20);
        *((void *)this + 1) = v32;
        v25 |= (unint64_t)(v33 & 0x7F) << v30;
        if ((v33 & 0x80) == 0) {
          break;
        }
        v30 += 7;
        unint64_t v20 = v32;
        BOOL v14 = v31++ > 8;
        if (v14) {
          goto LABEL_56;
        }
      }
      if (*((unsigned char *)this + 24)) {
        uint64_t v25 = 0;
      }
LABEL_60:
      *(void *)(a1 + 24) = v25;
LABEL_45:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B2B9FC(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC20038;
  *(_DWORD *)(result + 44) = 0;
  return result;
}

void *sub_227B2BA20(void *result)
{
  *uint64_t result = &unk_26DC1FC80;
  result[27] = 0;
  return result;
}

uint64_t sub_227B2BA44(uint64_t result, PB::Writer *this)
{
  unint64_t v3 = (void *)result;
  if (*(unsigned char *)(result + 128)) {
    uint64_t result = PB::Writer::writeVarInt(this);
  }
  int v4 = (const PB::Base *)v3[11];
  if (v4) {
    uint64_t result = PB::Writer::writeSubmessage(this, v4);
  }
  uint64_t v5 = (const PB::Base *)v3[1];
  if (v5) {
    uint64_t result = PB::Writer::writeSubmessage(this, v5);
  }
  uint64_t v6 = (const PB::Base *)v3[2];
  if (v6) {
    uint64_t result = PB::Writer::writeSubmessage(this, v6);
  }
  uint64_t v7 = (const PB::Base *)v3[8];
  if (v7) {
    uint64_t result = PB::Writer::writeSubmessage(this, v7);
  }
  uint64_t v8 = (const PB::Base *)v3[9];
  if (v8) {
    uint64_t result = PB::Writer::writeSubmessage(this, v8);
  }
  char v9 = (const PB::Base *)v3[4];
  if (v9) {
    uint64_t result = PB::Writer::writeSubmessage(this, v9);
  }
  unsigned int v10 = (const PB::Base *)v3[13];
  if (v10) {
    uint64_t result = PB::Writer::writeSubmessage(this, v10);
  }
  unint64_t v11 = (const PB::Base *)v3[10];
  if (v11) {
    uint64_t result = PB::Writer::writeSubmessage(this, v11);
  }
  unint64_t v12 = (const PB::Base *)v3[15];
  if (v12) {
    uint64_t result = PB::Writer::writeSubmessage(this, v12);
  }
  char v13 = (const PB::Base *)v3[6];
  if (v13) {
    uint64_t result = PB::Writer::writeSubmessage(this, v13);
  }
  BOOL v14 = (const PB::Base *)v3[7];
  if (v14) {
    uint64_t result = PB::Writer::writeSubmessage(this, v14);
  }
  char v15 = (const PB::Base *)v3[14];
  if (v15) {
    uint64_t result = PB::Writer::writeSubmessage(this, v15);
  }
  unsigned int v16 = (const PB::Base *)v3[5];
  if (v16) {
    uint64_t result = PB::Writer::writeSubmessage(this, v16);
  }
  unint64_t v17 = (const PB::Base *)v3[12];
  if (v17)
  {
    return PB::Writer::writeSubmessage(this, v17);
  }
  return result;
}

void sub_227B2BBB4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B2BBEC(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC1FC48;
  *(_DWORD *)(result + 48) = 0;
  char v2 = *(unsigned char *)(a2 + 48);
  if ((v2 & 2) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 16);
    char v3 = 2;
    *(unsigned char *)(result + 48) = 2;
    *(void *)(result + 16) = v4;
    char v2 = *(unsigned char *)(a2 + 48);
    if ((v2 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if (*(unsigned char *)(a2 + 48))
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 8);
    v3 |= 1u;
    *(unsigned char *)(result + 48) = v3;
    *(void *)(result + 8) = v5;
    char v2 = *(unsigned char *)(a2 + 48);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 24);
    v3 |= 4u;
    *(unsigned char *)(result + 48) = v3;
    *(_DWORD *)(result + 24) = v6;
    char v2 = *(unsigned char *)(a2 + 48);
    if ((v2 & 0x40) == 0)
    {
LABEL_8:
      if ((v2 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_15;
    }
  }
  else if ((v2 & 0x40) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 40);
  v3 |= 0x40u;
  *(unsigned char *)(result + 48) = v3;
  *(_DWORD *)(result + 40) = v7;
  char v2 = *(unsigned char *)(a2 + 48);
  if ((v2 & 0x20) == 0)
  {
LABEL_9:
    if ((v2 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_16;
  }
LABEL_15:
  int v8 = *(_DWORD *)(a2 + 36);
  v3 |= 0x20u;
  *(unsigned char *)(result + 48) = v3;
  *(_DWORD *)(result + 36) = v8;
  char v2 = *(unsigned char *)(a2 + 48);
  if ((v2 & 0x10) == 0)
  {
LABEL_10:
    if ((v2 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_17;
  }
LABEL_16:
  int v9 = *(_DWORD *)(a2 + 32);
  v3 |= 0x10u;
  *(unsigned char *)(result + 48) = v3;
  *(_DWORD *)(result + 32) = v9;
  char v2 = *(unsigned char *)(a2 + 48);
  if ((v2 & 8) == 0)
  {
LABEL_11:
    if ((v2 & 0x80) == 0) {
      return result;
    }
LABEL_18:
    char v11 = *(unsigned char *)(a2 + 44);
    *(unsigned char *)(result + 48) = v3 | 0x80;
    *(unsigned char *)(result + 44) = v11;
    return result;
  }
LABEL_17:
  int v10 = *(_DWORD *)(a2 + 28);
  v3 |= 8u;
  *(unsigned char *)(result + 48) = v3;
  *(_DWORD *)(result + 28) = v10;
  if ((*(unsigned char *)(a2 + 48) & 0x80) != 0) {
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_227B2BCF4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 48);
  if (v5)
  {
    PB::TextFormatter::format(this, "aopTsNow");
    char v5 = *(unsigned char *)(a1 + 48);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 0x80) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((*(unsigned char *)(a1 + 48) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "aopTsSensor");
  char v5 = *(unsigned char *)(a1 + 48);
  if ((v5 & 0x80) == 0)
  {
LABEL_4:
    if ((v5 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  PB::TextFormatter::format(this, "fallAlertSentFromReferee");
  char v5 = *(unsigned char *)(a1 + 48);
  if ((v5 & 4) == 0)
  {
LABEL_5:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "isFall");
  char v5 = *(unsigned char *)(a1 + 48);
  if ((v5 & 8) == 0)
  {
LABEL_6:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  PB::TextFormatter::format(this, "operatingMode");
  char v5 = *(unsigned char *)(a1 + 48);
  if ((v5 & 0x10) == 0)
  {
LABEL_7:
    if ((v5 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "resolution");
  char v5 = *(unsigned char *)(a1 + 48);
  if ((v5 & 0x20) == 0)
  {
LABEL_8:
    if ((v5 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_19:
  PB::TextFormatter::format(this, "response");
  if ((*(unsigned char *)(a1 + 48) & 0x40) != 0) {
LABEL_9:
  }
    PB::TextFormatter::format(this, "state");
LABEL_10:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B2BE38(uint64_t a1, PB::Reader *this)
{
  unint64_t v3 = *((void *)this + 1);
  unint64_t v2 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v3 < v2 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v3 > 0xFFFFFFFFFFFFFFF5 || v3 + 10 > v2)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v3 > v2) {
          unint64_t v2 = v3;
        }
        while (v2 != v3)
        {
          unint64_t v17 = v3 + 1;
          char v18 = *(unsigned char *)(v8 + v3);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v3 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v3 + 1;
          *((void *)this + 1) = v3 + 1;
          char v13 = *(unsigned char *)(v8 + v3);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v3 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 48) |= 2u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v65 = 0;
                unsigned int v66 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v3 = *((void *)this + 1);
                }
                else {
                  unint64_t v3 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v3 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_137;
                  }
                  unint64_t v67 = v20++;
                  char v68 = *(unsigned char *)(v21 + v67);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v68 & 0x7F) << v65;
                  if ((v68 & 0x80) == 0) {
                    break;
                  }
                  v65 += 7;
                  BOOL v14 = v66++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_136;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_136:
                unint64_t v3 = v67 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v3 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_137;
                  }
                  v22 += 7;
                  unint64_t v20 = v3;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_137:
              *(void *)(a1 + 16) = v24;
              goto LABEL_168;
            case 2u:
              *(unsigned char *)(a1 + 48) |= 1u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v69 = 0;
                unsigned int v70 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v3 = *((void *)this + 1);
                }
                else {
                  unint64_t v3 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v3 == v27)
                  {
                    uint64_t v31 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_142;
                  }
                  unint64_t v71 = v27++;
                  char v72 = *(unsigned char *)(v28 + v71);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v72 & 0x7F) << v69;
                  if ((v72 & 0x80) == 0) {
                    break;
                  }
                  v69 += 7;
                  BOOL v14 = v70++ > 8;
                  if (v14)
                  {
                    uint64_t v31 = 0;
LABEL_141:
                    unint64_t v3 = v71 + 1;
                    goto LABEL_142;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v31 = 0;
                }
                goto LABEL_141;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v3 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_142;
                }
                v29 += 7;
                unint64_t v27 = v3;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              uint64_t v31 = 0;
LABEL_142:
              *(void *)(a1 + 8) = v31;
              goto LABEL_168;
            case 3u:
              *(unsigned char *)(a1 + 48) |= 4u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v73 = 0;
                unsigned int v74 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v3 = *((void *)this + 1);
                }
                else {
                  unint64_t v3 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v3 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_147;
                  }
                  unint64_t v75 = v33++;
                  char v76 = *(unsigned char *)(v34 + v75);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v76 & 0x7F) << v73;
                  if ((v76 & 0x80) == 0) {
                    break;
                  }
                  v73 += 7;
                  BOOL v14 = v74++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_146:
                    unint64_t v3 = v75 + 1;
                    goto LABEL_147;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_146;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v3 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_147;
                }
                v35 += 7;
                unint64_t v33 = v3;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_147:
              *(_DWORD *)(a1 + 24) = v37;
              goto LABEL_168;
            case 4u:
              *(unsigned char *)(a1 + 48) |= 0x40u;
              unint64_t v39 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v40 = *(void *)this;
              if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
              {
                char v77 = 0;
                unsigned int v78 = 0;
                uint64_t v43 = 0;
                if (v2 <= v39) {
                  unint64_t v3 = *((void *)this + 1);
                }
                else {
                  unint64_t v3 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v3 == v39)
                  {
                    LODWORD(v43) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_152;
                  }
                  unint64_t v79 = v39++;
                  char v80 = *(unsigned char *)(v40 + v79);
                  *((void *)this + 1) = v39;
                  v43 |= (unint64_t)(v80 & 0x7F) << v77;
                  if ((v80 & 0x80) == 0) {
                    break;
                  }
                  v77 += 7;
                  BOOL v14 = v78++ > 8;
                  if (v14)
                  {
                    LODWORD(v43) = 0;
LABEL_151:
                    unint64_t v3 = v79 + 1;
                    goto LABEL_152;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v43) = 0;
                }
                goto LABEL_151;
              }
              char v41 = 0;
              unsigned int v42 = 0;
              uint64_t v43 = 0;
              do
              {
                unint64_t v3 = v39 + 1;
                *((void *)this + 1) = v39 + 1;
                char v44 = *(unsigned char *)(v40 + v39);
                v43 |= (unint64_t)(v44 & 0x7F) << v41;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_152;
                }
                v41 += 7;
                unint64_t v39 = v3;
                BOOL v14 = v42++ > 8;
              }
              while (!v14);
              LODWORD(v43) = 0;
LABEL_152:
              *(_DWORD *)(a1 + 40) = v43;
              goto LABEL_168;
            case 5u:
              *(unsigned char *)(a1 + 48) |= 0x20u;
              unint64_t v45 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v46 = *(void *)this;
              if (v45 > 0xFFFFFFFFFFFFFFF5 || v45 + 10 > v2)
              {
                char v81 = 0;
                unsigned int v82 = 0;
                uint64_t v49 = 0;
                if (v2 <= v45) {
                  unint64_t v3 = *((void *)this + 1);
                }
                else {
                  unint64_t v3 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v3 == v45)
                  {
                    LODWORD(v49) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_157;
                  }
                  unint64_t v83 = v45++;
                  char v84 = *(unsigned char *)(v46 + v83);
                  *((void *)this + 1) = v45;
                  v49 |= (unint64_t)(v84 & 0x7F) << v81;
                  if ((v84 & 0x80) == 0) {
                    break;
                  }
                  v81 += 7;
                  BOOL v14 = v82++ > 8;
                  if (v14)
                  {
                    LODWORD(v49) = 0;
LABEL_156:
                    unint64_t v3 = v83 + 1;
                    goto LABEL_157;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v49) = 0;
                }
                goto LABEL_156;
              }
              char v47 = 0;
              unsigned int v48 = 0;
              uint64_t v49 = 0;
              do
              {
                unint64_t v3 = v45 + 1;
                *((void *)this + 1) = v45 + 1;
                char v50 = *(unsigned char *)(v46 + v45);
                v49 |= (unint64_t)(v50 & 0x7F) << v47;
                if ((v50 & 0x80) == 0) {
                  goto LABEL_157;
                }
                v47 += 7;
                unint64_t v45 = v3;
                BOOL v14 = v48++ > 8;
              }
              while (!v14);
              LODWORD(v49) = 0;
LABEL_157:
              *(_DWORD *)(a1 + 36) = v49;
              goto LABEL_168;
            case 6u:
              *(unsigned char *)(a1 + 48) |= 0x10u;
              unint64_t v51 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v52 = *(void *)this;
              if (v51 > 0xFFFFFFFFFFFFFFF5 || v51 + 10 > v2)
              {
                char v85 = 0;
                unsigned int v86 = 0;
                uint64_t v55 = 0;
                if (v2 <= v51) {
                  unint64_t v3 = *((void *)this + 1);
                }
                else {
                  unint64_t v3 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v3 == v51)
                  {
                    LODWORD(v55) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_162;
                  }
                  unint64_t v87 = v51++;
                  char v88 = *(unsigned char *)(v52 + v87);
                  *((void *)this + 1) = v51;
                  v55 |= (unint64_t)(v88 & 0x7F) << v85;
                  if ((v88 & 0x80) == 0) {
                    break;
                  }
                  v85 += 7;
                  BOOL v14 = v86++ > 8;
                  if (v14)
                  {
                    LODWORD(v55) = 0;
LABEL_161:
                    unint64_t v3 = v87 + 1;
                    goto LABEL_162;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v55) = 0;
                }
                goto LABEL_161;
              }
              char v53 = 0;
              unsigned int v54 = 0;
              uint64_t v55 = 0;
              do
              {
                unint64_t v3 = v51 + 1;
                *((void *)this + 1) = v51 + 1;
                char v56 = *(unsigned char *)(v52 + v51);
                v55 |= (unint64_t)(v56 & 0x7F) << v53;
                if ((v56 & 0x80) == 0) {
                  goto LABEL_162;
                }
                v53 += 7;
                unint64_t v51 = v3;
                BOOL v14 = v54++ > 8;
              }
              while (!v14);
              LODWORD(v55) = 0;
LABEL_162:
              *(_DWORD *)(a1 + 32) = v55;
              goto LABEL_168;
            case 7u:
              *(unsigned char *)(a1 + 48) |= 8u;
              unint64_t v57 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v58 = *(void *)this;
              if (v57 > 0xFFFFFFFFFFFFFFF5 || v57 + 10 > v2)
              {
                char v89 = 0;
                unsigned int v90 = 0;
                uint64_t v61 = 0;
                if (v2 <= v57) {
                  unint64_t v3 = *((void *)this + 1);
                }
                else {
                  unint64_t v3 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v3 == v57)
                  {
                    LODWORD(v61) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_167;
                  }
                  unint64_t v91 = v57++;
                  char v92 = *(unsigned char *)(v58 + v91);
                  *((void *)this + 1) = v57;
                  v61 |= (unint64_t)(v92 & 0x7F) << v89;
                  if ((v92 & 0x80) == 0) {
                    break;
                  }
                  v89 += 7;
                  BOOL v14 = v90++ > 8;
                  if (v14)
                  {
                    LODWORD(v61) = 0;
LABEL_166:
                    unint64_t v3 = v91 + 1;
                    goto LABEL_167;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v61) = 0;
                }
                goto LABEL_166;
              }
              char v59 = 0;
              unsigned int v60 = 0;
              uint64_t v61 = 0;
              do
              {
                unint64_t v3 = v57 + 1;
                *((void *)this + 1) = v57 + 1;
                char v62 = *(unsigned char *)(v58 + v57);
                v61 |= (unint64_t)(v62 & 0x7F) << v59;
                if ((v62 & 0x80) == 0) {
                  goto LABEL_167;
                }
                v59 += 7;
                unint64_t v57 = v3;
                BOOL v14 = v60++ > 8;
              }
              while (!v14);
              LODWORD(v61) = 0;
LABEL_167:
              *(_DWORD *)(a1 + 28) = v61;
LABEL_168:
              int v4 = *((unsigned __int8 *)this + 24);
              if (v3 >= v2 || *((unsigned char *)this + 24)) {
                return v4 == 0;
              }
              continue;
            case 8u:
              *(unsigned char *)(a1 + 48) |= 0x80u;
              unint64_t v3 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              if (v3 >= v2)
              {
                BOOL v64 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v63 = *(unsigned __int8 *)(*(void *)this + v3++);
                *((void *)this + 1) = v3;
                BOOL v64 = v63 != 0;
              }
              *(unsigned char *)(a1 + 44) = v64;
              goto LABEL_168;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v3 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              goto LABEL_168;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B2C680(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 48);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 48);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(result + 48) & 1) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 48);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 0x40) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 48);
  if ((v4 & 0x40) == 0)
  {
LABEL_5:
    if ((v4 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 48);
  if ((v4 & 0x20) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 48);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
LABEL_16:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(unsigned char *)(v3 + 48) & 0x80) == 0) {
      return result;
    }
    goto LABEL_17;
  }
LABEL_15:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 48);
  if ((v4 & 8) != 0) {
    goto LABEL_16;
  }
LABEL_8:
  if ((v4 & 0x80) == 0) {
    return result;
  }
LABEL_17:

  return PB::Writer::write(this);
}

void sub_227B2C79C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227B2C7D4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC1FC80;
  *(void *)(a1 + 216) = 0;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x80000000) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 144);
    uint64_t v3 = 0x80000000;
    *(void *)(a1 + 216) = 0x80000000;
    *(_DWORD *)(a1 + 144) = v4;
    uint64_t v2 = *(void *)(a2 + 216);
    if ((v2 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v3 = 0;
  if (v2)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 8);
    v3 |= 1uLL;
    *(void *)(a1 + 216) = v3;
    *(void *)(a1 + 8) = v5;
    uint64_t v2 = *(void *)(a2 + 216);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    v3 |= 2uLL;
    *(void *)(a1 + 216) = v3;
    *(void *)(a1 + 16) = v6;
    uint64_t v2 = *(void *)(a2 + 216);
    if ((v2 & 0x20000) == 0)
    {
LABEL_8:
      if ((v2 & 0x8000000000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_56;
    }
  }
  else if ((v2 & 0x20000) == 0)
  {
    goto LABEL_8;
  }
  float result = *(float *)(a2 + 88);
  v3 |= 0x20000uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 88) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x8000000000) == 0)
  {
LABEL_9:
    if ((v2 & 0x4000000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_57;
  }
LABEL_56:
  float result = *(float *)(a2 + 176);
  v3 |= 0x8000000000uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 176) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x4000000000) == 0)
  {
LABEL_10:
    if ((v2 & 0x80000000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_58;
  }
LABEL_57:
  float result = *(float *)(a2 + 172);
  v3 |= 0x4000000000uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 172) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x80000000000) == 0)
  {
LABEL_11:
    if ((v2 & 0x40000000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_59;
  }
LABEL_58:
  float result = *(float *)(a2 + 192);
  v3 |= 0x80000000000uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 192) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x40000000000) == 0)
  {
LABEL_12:
    if ((v2 & 0x800000000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_60;
  }
LABEL_59:
  float result = *(float *)(a2 + 188);
  v3 |= 0x40000000000uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 188) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x800000000000) == 0)
  {
LABEL_13:
    if ((v2 & 0x400000000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_61;
  }
LABEL_60:
  float result = *(float *)(a2 + 208);
  v3 |= 0x800000000000uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 208) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x400000000000) == 0)
  {
LABEL_14:
    if ((v2 & 0x10000000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_62;
  }
LABEL_61:
  float result = *(float *)(a2 + 204);
  v3 |= 0x400000000000uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 204) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x10000000000) == 0)
  {
LABEL_15:
    if ((v2 & 0x100000000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_63;
  }
LABEL_62:
  float result = *(float *)(a2 + 180);
  v3 |= 0x10000000000uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 180) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x100000000000) == 0)
  {
LABEL_16:
    if ((v2 & 0x1000000000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_64;
  }
LABEL_63:
  float result = *(float *)(a2 + 196);
  v3 |= 0x100000000000uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 196) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x1000000000000) == 0)
  {
LABEL_17:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_65;
  }
LABEL_64:
  float result = *(float *)(a2 + 212);
  v3 |= 0x1000000000000uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 212) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x10000) == 0)
  {
LABEL_18:
    if ((v2 & 0x2000000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_66;
  }
LABEL_65:
  float result = *(float *)(a2 + 84);
  v3 |= 0x10000uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 84) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x2000000000) == 0)
  {
LABEL_19:
    if ((v2 & 0x20000000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_67;
  }
LABEL_66:
  float result = *(float *)(a2 + 168);
  v3 |= 0x2000000000uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 168) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x20000000000) == 0)
  {
LABEL_20:
    if ((v2 & 0x200000000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_68;
  }
LABEL_67:
  float result = *(float *)(a2 + 184);
  v3 |= 0x20000000000uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 184) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x200000000000) == 0)
  {
LABEL_21:
    if ((v2 & 4) == 0) {
      goto LABEL_22;
    }
    goto LABEL_69;
  }
LABEL_68:
  float result = *(float *)(a2 + 200);
  v3 |= 0x200000000000uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 200) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 4) == 0)
  {
LABEL_22:
    if ((v2 & 0x10) == 0) {
      goto LABEL_23;
    }
    goto LABEL_70;
  }
LABEL_69:
  uint64_t v8 = *(void *)(a2 + 24);
  v3 |= 4uLL;
  *(void *)(a1 + 216) = v3;
  *(void *)(a1 + 24) = v8;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x10) == 0)
  {
LABEL_23:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_71;
  }
LABEL_70:
  float result = *(float *)(a2 + 36);
  v3 |= 0x10uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 36) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x800000) == 0)
  {
LABEL_24:
    if ((v2 & 0x80) == 0) {
      goto LABEL_25;
    }
    goto LABEL_72;
  }
LABEL_71:
  float result = *(float *)(a2 + 112);
  v3 |= 0x800000uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 112) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x80) == 0)
  {
LABEL_25:
    if ((v2 & 0x40) == 0) {
      goto LABEL_26;
    }
    goto LABEL_73;
  }
LABEL_72:
  float result = *(float *)(a2 + 48);
  v3 |= 0x80uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 48) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x40) == 0)
  {
LABEL_26:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_74;
  }
LABEL_73:
  float result = *(float *)(a2 + 44);
  v3 |= 0x40uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 44) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x100000) == 0)
  {
LABEL_27:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_75;
  }
LABEL_74:
  float result = *(float *)(a2 + 100);
  v3 |= 0x100000uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 100) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x80000) == 0)
  {
LABEL_28:
    if ((v2 & 0x40000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_76;
  }
LABEL_75:
  float result = *(float *)(a2 + 96);
  v3 |= 0x80000uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 96) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x40000000) == 0)
  {
LABEL_29:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_77;
  }
LABEL_76:
  float result = *(float *)(a2 + 140);
  v3 |= 0x40000000uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 140) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x1000) == 0)
  {
LABEL_30:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_78;
  }
LABEL_77:
  int v9 = *(_DWORD *)(a2 + 68);
  v3 |= 0x1000uLL;
  *(void *)(a1 + 216) = v3;
  *(_DWORD *)(a1 + 68) = v9;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x4000) == 0)
  {
LABEL_31:
    if ((v2 & 0x100000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_79;
  }
LABEL_78:
  int v10 = *(_DWORD *)(a2 + 76);
  v3 |= 0x4000uLL;
  *(void *)(a1 + 216) = v3;
  *(_DWORD *)(a1 + 76) = v10;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x100000000) == 0)
  {
LABEL_32:
    if ((v2 & 0x1000000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_80;
  }
LABEL_79:
  int v11 = *(_DWORD *)(a2 + 148);
  v3 |= 0x100000000uLL;
  *(void *)(a1 + 216) = v3;
  *(_DWORD *)(a1 + 148) = v11;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x1000000000) == 0)
  {
LABEL_33:
    if ((v2 & 0x100) == 0) {
      goto LABEL_34;
    }
    goto LABEL_81;
  }
LABEL_80:
  int v12 = *(_DWORD *)(a2 + 164);
  v3 |= 0x1000000000uLL;
  *(void *)(a1 + 216) = v3;
  *(_DWORD *)(a1 + 164) = v12;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x100) == 0)
  {
LABEL_34:
    if ((v2 & 0x200000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_82;
  }
LABEL_81:
  int v13 = *(_DWORD *)(a2 + 52);
  v3 |= 0x100uLL;
  *(void *)(a1 + 216) = v3;
  *(_DWORD *)(a1 + 52) = v13;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x200000000) == 0)
  {
LABEL_35:
    if ((v2 & 0x800) == 0) {
      goto LABEL_36;
    }
    goto LABEL_83;
  }
LABEL_82:
  float result = *(float *)(a2 + 152);
  v3 |= 0x200000000uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 152) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x800) == 0)
  {
LABEL_36:
    if ((v2 & 0x400) == 0) {
      goto LABEL_37;
    }
    goto LABEL_84;
  }
LABEL_83:
  float result = *(float *)(a2 + 64);
  v3 |= 0x800uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 64) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x400) == 0)
  {
LABEL_37:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_85;
  }
LABEL_84:
  float result = *(float *)(a2 + 60);
  v3 |= 0x400uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 60) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x200000) == 0)
  {
LABEL_38:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_86;
  }
LABEL_85:
  float result = *(float *)(a2 + 104);
  v3 |= 0x200000uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 104) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x40000) == 0)
  {
LABEL_39:
    if ((v2 & 0x20000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_87;
  }
LABEL_86:
  float result = *(float *)(a2 + 92);
  v3 |= 0x40000uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 92) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x20000000) == 0)
  {
LABEL_40:
    if ((v2 & 0x800000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_88;
  }
LABEL_87:
  float result = *(float *)(a2 + 136);
  v3 |= 0x20000000uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 136) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x800000000) == 0)
  {
LABEL_41:
    if ((v2 & 0x400000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_89;
  }
LABEL_88:
  float result = *(float *)(a2 + 160);
  v3 |= 0x800000000uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 160) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x400000000) == 0)
  {
LABEL_42:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_90;
  }
LABEL_89:
  float result = *(float *)(a2 + 156);
  v3 |= 0x400000000uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 156) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x8000) == 0)
  {
LABEL_43:
    if ((v2 & 0x10000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_91;
  }
LABEL_90:
  int v14 = *(_DWORD *)(a2 + 80);
  v3 |= 0x8000uLL;
  *(void *)(a1 + 216) = v3;
  *(_DWORD *)(a1 + 80) = v14;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_44:
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_92;
  }
LABEL_91:
  float result = *(float *)(a2 + 132);
  v3 |= 0x10000000uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 132) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_45:
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_93;
  }
LABEL_92:
  float result = *(float *)(a2 + 124);
  v3 |= 0x4000000uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 124) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x8000000) == 0)
  {
LABEL_46:
    if ((v2 & 0x20) == 0) {
      goto LABEL_47;
    }
    goto LABEL_94;
  }
LABEL_93:
  float result = *(float *)(a2 + 128);
  v3 |= 0x8000000uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 128) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x20) == 0)
  {
LABEL_47:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_95;
  }
LABEL_94:
  float result = *(float *)(a2 + 40);
  v3 |= 0x20uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 40) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_48:
    if ((v2 & 0x2000000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_96;
  }
LABEL_95:
  float result = *(float *)(a2 + 116);
  v3 |= 0x1000000uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 116) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x2000000) == 0)
  {
LABEL_49:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_97;
  }
LABEL_96:
  int v15 = *(_DWORD *)(a2 + 120);
  v3 |= 0x2000000uLL;
  *(void *)(a1 + 216) = v3;
  *(_DWORD *)(a1 + 120) = v15;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x2000) == 0)
  {
LABEL_50:
    if ((v2 & 0x200) == 0) {
      goto LABEL_51;
    }
    goto LABEL_98;
  }
LABEL_97:
  float result = *(float *)(a2 + 72);
  v3 |= 0x2000uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 72) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x200) == 0)
  {
LABEL_51:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_99;
  }
LABEL_98:
  float result = *(float *)(a2 + 56);
  v3 |= 0x200uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 56) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x400000) == 0)
  {
LABEL_52:
    if ((v2 & 8) == 0) {
      return result;
    }
LABEL_100:
    float result = *(float *)(a2 + 32);
    *(void *)(a1 + 216) = v3 | 8;
    *(float *)(a1 + 32) = result;
    return result;
  }
LABEL_99:
  float result = *(float *)(a2 + 108);
  v3 |= 0x400000uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 108) = result;
  if ((*(void *)(a2 + 216) & 8) != 0) {
    goto LABEL_100;
  }
  return result;
}

uint64_t sub_227B2CD58(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 8) != 0)
  {
    PB::TextFormatter::format(this, "abruptGravityChangeAngle", *(float *)(a1 + 32));
    uint64_t v5 = *(void *)(a1 + 216);
    if ((v5 & 0x10) == 0)
    {
LABEL_3:
      if ((v5 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_56;
    }
  }
  else if ((v5 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "accelPathLength", *(float *)(a1 + 36));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x20) == 0)
  {
LABEL_4:
    if ((v5 & 0x40) == 0) {
      goto LABEL_5;
    }
    goto LABEL_57;
  }
LABEL_56:
  PB::TextFormatter::format(this, "accelPathLengthWithPeak", *(float *)(a1 + 40));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x40) == 0)
  {
LABEL_5:
    if ((v5 & 0x80) == 0) {
      goto LABEL_6;
    }
    goto LABEL_58;
  }
LABEL_57:
  PB::TextFormatter::format(this, "angleChangePostImpact", *(float *)(a1 + 44));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x80) == 0)
  {
LABEL_6:
    if ((v5 & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_59;
  }
LABEL_58:
  PB::TextFormatter::format(this, "angleChangePreImpact", *(float *)(a1 + 48));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 1) == 0)
  {
LABEL_7:
    if ((v5 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_60;
  }
LABEL_59:
  PB::TextFormatter::format(this, "aopTsNow");
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 2) == 0)
  {
LABEL_8:
    if ((v5 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_61;
  }
LABEL_60:
  PB::TextFormatter::format(this, "aopTsSensor");
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x100) == 0)
  {
LABEL_9:
    if ((v5 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_62;
  }
LABEL_61:
  PB::TextFormatter::format(this, "crown");
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x200) == 0)
  {
LABEL_10:
    if ((v5 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_63;
  }
LABEL_62:
  PB::TextFormatter::format(this, "crownVariance", *(float *)(a1 + 56));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x400) == 0)
  {
LABEL_11:
    if ((v5 & 0x800) == 0) {
      goto LABEL_12;
    }
    goto LABEL_64;
  }
LABEL_63:
  PB::TextFormatter::format(this, "extrapolatedMaxAccelNorm", *(float *)(a1 + 60));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x800) == 0)
  {
LABEL_12:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_65;
  }
LABEL_64:
  PB::TextFormatter::format(this, "extrapolatedMaxMinusMin", *(float *)(a1 + 64));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x1000) == 0)
  {
LABEL_13:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_66;
  }
LABEL_65:
  PB::TextFormatter::format(this, "fallType");
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x2000) == 0)
  {
LABEL_14:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_67;
  }
LABEL_66:
  PB::TextFormatter::format(this, "gravityVariance", *(float *)(a1 + 72));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x4000) == 0)
  {
LABEL_15:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_68;
  }
LABEL_67:
  PB::TextFormatter::format(this, "isFall");
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x8000) == 0)
  {
LABEL_16:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_69;
  }
LABEL_68:
  PB::TextFormatter::format(this, "isNearFall");
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x10000) == 0)
  {
LABEL_17:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_70;
  }
LABEL_69:
  PB::TextFormatter::format(this, "jerkVectorMagMax", *(float *)(a1 + 84));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x20000) == 0)
  {
LABEL_18:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_71;
  }
LABEL_70:
  PB::TextFormatter::format(this, "magMax", *(float *)(a1 + 88));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x40000) == 0)
  {
LABEL_19:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_72;
  }
LABEL_71:
  PB::TextFormatter::format(this, "maxAccelNorm", *(float *)(a1 + 92));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x80000) == 0)
  {
LABEL_20:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_73;
  }
LABEL_72:
  PB::TextFormatter::format(this, "maxAngleChangePostImpact", *(float *)(a1 + 96));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x100000) == 0)
  {
LABEL_21:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_74;
  }
LABEL_73:
  PB::TextFormatter::format(this, "maxAngleChangePreImpact", *(float *)(a1 + 100));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x200000) == 0)
  {
LABEL_22:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_75;
  }
LABEL_74:
  PB::TextFormatter::format(this, "maxMinusMin", *(float *)(a1 + 104));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x400000) == 0)
  {
LABEL_23:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_76;
  }
LABEL_75:
  PB::TextFormatter::format(this, "medianAbsGravityY", *(float *)(a1 + 108));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x800000) == 0)
  {
LABEL_24:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_77;
  }
LABEL_76:
  PB::TextFormatter::format(this, "minInertialZ", *(float *)(a1 + 112));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_25:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_78;
  }
LABEL_77:
  PB::TextFormatter::format(this, "minInertialZHighFreq", *(float *)(a1 + 116));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_26:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_79;
  }
LABEL_78:
  PB::TextFormatter::format(this, "operatingMode");
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_27:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_80;
  }
LABEL_79:
  PB::TextFormatter::format(this, "pathLengthDecorrelation", *(float *)(a1 + 124));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_28:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_81;
  }
LABEL_80:
  PB::TextFormatter::format(this, "pathLengthDelaySpread", *(float *)(a1 + 128));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_29:
    if ((v5 & 4) == 0) {
      goto LABEL_30;
    }
    goto LABEL_82;
  }
LABEL_81:
  PB::TextFormatter::format(this, "pathLengthHarmonicMean", *(float *)(a1 + 132));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 4) == 0)
  {
LABEL_30:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_83;
  }
LABEL_82:
  PB::TextFormatter::format(this, "peakTimestamp");
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v5 & 0x40000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_84;
  }
LABEL_83:
  PB::TextFormatter::format(this, "poseAtImpact", *(float *)(a1 + 136));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x40000000) == 0)
  {
LABEL_32:
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_85;
  }
LABEL_84:
  PB::TextFormatter::format(this, "posteriorRatio", *(float *)(a1 + 140));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x80000000) == 0)
  {
LABEL_33:
    if ((v5 & 0x100000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_86;
  }
LABEL_85:
  PB::TextFormatter::format(this, "seq");
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x100000000) == 0)
  {
LABEL_34:
    if ((v5 & 0x200000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_87;
  }
LABEL_86:
  PB::TextFormatter::format(this, "simulated");
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x200000000) == 0)
  {
LABEL_35:
    if ((v5 & 0x400000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_88;
  }
LABEL_87:
  PB::TextFormatter::format(this, "sumDeltaAngles", *(float *)(a1 + 152));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x400000000) == 0)
  {
LABEL_36:
    if ((v5 & 0x800000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_89;
  }
LABEL_88:
  PB::TextFormatter::format(this, "swingAngle", *(float *)(a1 + 156));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x800000000) == 0)
  {
LABEL_37:
    if ((v5 & 0x1000000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_90;
  }
LABEL_89:
  PB::TextFormatter::format(this, "tiltAngle", *(float *)(a1 + 160));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x1000000000) == 0)
  {
LABEL_38:
    if ((v5 & 0x2000000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_91;
  }
LABEL_90:
  PB::TextFormatter::format(this, "trialCount");
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x2000000000) == 0)
  {
LABEL_39:
    if ((v5 & 0x4000000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_92;
  }
LABEL_91:
  PB::TextFormatter::format(this, "xJerkScalarMagMax", *(float *)(a1 + 168));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x4000000000) == 0)
  {
LABEL_40:
    if ((v5 & 0x8000000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_93;
  }
LABEL_92:
  PB::TextFormatter::format(this, "xMax", *(float *)(a1 + 172));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x8000000000) == 0)
  {
LABEL_41:
    if ((v5 & 0x10000000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_94;
  }
LABEL_93:
  PB::TextFormatter::format(this, "xMin", *(float *)(a1 + 176));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x10000000000) == 0)
  {
LABEL_42:
    if ((v5 & 0x20000000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_95;
  }
LABEL_94:
  PB::TextFormatter::format(this, "xZCTime", *(float *)(a1 + 180));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x20000000000) == 0)
  {
LABEL_43:
    if ((v5 & 0x40000000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_96;
  }
LABEL_95:
  PB::TextFormatter::format(this, "yJerkScalarMagMax", *(float *)(a1 + 184));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x40000000000) == 0)
  {
LABEL_44:
    if ((v5 & 0x80000000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_97;
  }
LABEL_96:
  PB::TextFormatter::format(this, "yMax", *(float *)(a1 + 188));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x80000000000) == 0)
  {
LABEL_45:
    if ((v5 & 0x100000000000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_98;
  }
LABEL_97:
  PB::TextFormatter::format(this, "yMin", *(float *)(a1 + 192));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x100000000000) == 0)
  {
LABEL_46:
    if ((v5 & 0x200000000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_99;
  }
LABEL_98:
  PB::TextFormatter::format(this, "yZCTime", *(float *)(a1 + 196));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x200000000000) == 0)
  {
LABEL_47:
    if ((v5 & 0x400000000000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_100;
  }
LABEL_99:
  PB::TextFormatter::format(this, "zJerkScalarMagMax", *(float *)(a1 + 200));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x400000000000) == 0)
  {
LABEL_48:
    if ((v5 & 0x800000000000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_101;
  }
LABEL_100:
  PB::TextFormatter::format(this, "zMax", *(float *)(a1 + 204));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x800000000000) == 0)
  {
LABEL_49:
    if ((v5 & 0x1000000000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_50;
  }
LABEL_101:
  PB::TextFormatter::format(this, "zMin", *(float *)(a1 + 208));
  if ((*(void *)(a1 + 216) & 0x1000000000000) != 0) {
LABEL_50:
  }
    PB::TextFormatter::format(this, "zZCTime", *(float *)(a1 + 212));
LABEL_51:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B2D3BC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(void *)(a1 + 216) |= 0x80000000uLL;
          unint64_t v20 = *((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
          uint64_t v22 = *(void *)this;
          if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v21)
          {
            char v147 = 0;
            unsigned int v148 = 0;
            uint64_t v25 = 0;
            if (v21 <= v20) {
              unint64_t v21 = *((void *)this + 1);
            }
            do
            {
              if (v21 == v20)
              {
                LODWORD(v25) = 0;
                *((unsigned char *)this + 24) = 1;
                goto LABEL_302;
              }
              unint64_t v149 = v20 + 1;
              char v150 = *(unsigned char *)(v22 + v20);
              *((void *)this + 1) = v149;
              v25 |= (unint64_t)(v150 & 0x7F) << v147;
              if ((v150 & 0x80) == 0)
              {
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_302;
              }
              v147 += 7;
              unint64_t v20 = v149;
              BOOL v14 = v148++ > 8;
            }
            while (!v14);
LABEL_221:
            LODWORD(v25) = 0;
          }
          else
          {
            char v23 = 0;
            unsigned int v24 = 0;
            uint64_t v25 = 0;
            while (1)
            {
              unint64_t v26 = v20 + 1;
              *((void *)this + 1) = v20 + 1;
              char v27 = *(unsigned char *)(v22 + v20);
              v25 |= (unint64_t)(v27 & 0x7F) << v23;
              if ((v27 & 0x80) == 0) {
                break;
              }
              v23 += 7;
              unint64_t v20 = v26;
              BOOL v14 = v24++ > 8;
              if (v14) {
                goto LABEL_221;
              }
            }
          }
LABEL_302:
          *(_DWORD *)(a1 + 144) = v25;
          goto LABEL_294;
        case 2u:
          *(void *)(a1 + 216) |= 1uLL;
          unint64_t v29 = *((void *)this + 1);
          unint64_t v30 = *((void *)this + 2);
          uint64_t v31 = *(void *)this;
          if (v29 <= 0xFFFFFFFFFFFFFFF5 && v29 + 10 <= v30)
          {
            char v32 = 0;
            unsigned int v33 = 0;
            uint64_t v34 = 0;
            do
            {
              unint64_t v35 = v29 + 1;
              *((void *)this + 1) = v29 + 1;
              char v36 = *(unsigned char *)(v31 + v29);
              v34 |= (unint64_t)(v36 & 0x7F) << v32;
              if ((v36 & 0x80) == 0) {
                goto LABEL_306;
              }
              v32 += 7;
              unint64_t v29 = v35;
              BOOL v14 = v33++ > 8;
            }
            while (!v14);
LABEL_228:
            uint64_t v34 = 0;
            goto LABEL_306;
          }
          char v151 = 0;
          unsigned int v152 = 0;
          uint64_t v34 = 0;
          if (v30 <= v29) {
            unint64_t v30 = *((void *)this + 1);
          }
          while (2)
          {
            if (v30 == v29)
            {
              uint64_t v34 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v153 = v29 + 1;
              char v154 = *(unsigned char *)(v31 + v29);
              *((void *)this + 1) = v153;
              v34 |= (unint64_t)(v154 & 0x7F) << v151;
              if (v154 < 0)
              {
                v151 += 7;
                unint64_t v29 = v153;
                BOOL v14 = v152++ > 8;
                if (v14) {
                  goto LABEL_228;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v34 = 0;
              }
            }
            break;
          }
LABEL_306:
          *(void *)(a1 + 8) = v34;
          goto LABEL_294;
        case 3u:
          *(void *)(a1 + 216) |= 2uLL;
          unint64_t v37 = *((void *)this + 1);
          unint64_t v38 = *((void *)this + 2);
          uint64_t v39 = *(void *)this;
          if (v37 <= 0xFFFFFFFFFFFFFFF5 && v37 + 10 <= v38)
          {
            char v40 = 0;
            unsigned int v41 = 0;
            uint64_t v42 = 0;
            do
            {
              unint64_t v43 = v37 + 1;
              *((void *)this + 1) = v37 + 1;
              char v44 = *(unsigned char *)(v39 + v37);
              v42 |= (unint64_t)(v44 & 0x7F) << v40;
              if ((v44 & 0x80) == 0) {
                goto LABEL_310;
              }
              v40 += 7;
              unint64_t v37 = v43;
              BOOL v14 = v41++ > 8;
            }
            while (!v14);
LABEL_235:
            uint64_t v42 = 0;
            goto LABEL_310;
          }
          char v155 = 0;
          unsigned int v156 = 0;
          uint64_t v42 = 0;
          if (v38 <= v37) {
            unint64_t v38 = *((void *)this + 1);
          }
          while (2)
          {
            if (v38 == v37)
            {
              uint64_t v42 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v157 = v37 + 1;
              char v158 = *(unsigned char *)(v39 + v37);
              *((void *)this + 1) = v157;
              v42 |= (unint64_t)(v158 & 0x7F) << v155;
              if (v158 < 0)
              {
                v155 += 7;
                unint64_t v37 = v157;
                BOOL v14 = v156++ > 8;
                if (v14) {
                  goto LABEL_235;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v42 = 0;
              }
            }
            break;
          }
LABEL_310:
          *(void *)(a1 + 16) = v42;
          goto LABEL_294;
        case 4u:
          *(void *)(a1 + 216) |= 0x20000uLL;
          unint64_t v45 = *((void *)this + 1);
          if (v45 > 0xFFFFFFFFFFFFFFFBLL || v45 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v45);
          goto LABEL_293;
        case 5u:
          *(void *)(a1 + 216) |= 0x8000000000uLL;
          unint64_t v46 = *((void *)this + 1);
          if (v46 > 0xFFFFFFFFFFFFFFFBLL || v46 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 176) = *(_DWORD *)(*(void *)this + v46);
          goto LABEL_293;
        case 6u:
          *(void *)(a1 + 216) |= 0x4000000000uLL;
          unint64_t v47 = *((void *)this + 1);
          if (v47 > 0xFFFFFFFFFFFFFFFBLL || v47 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 172) = *(_DWORD *)(*(void *)this + v47);
          goto LABEL_293;
        case 7u:
          *(void *)(a1 + 216) |= 0x80000000000uLL;
          unint64_t v48 = *((void *)this + 1);
          if (v48 > 0xFFFFFFFFFFFFFFFBLL || v48 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 192) = *(_DWORD *)(*(void *)this + v48);
          goto LABEL_293;
        case 8u:
          *(void *)(a1 + 216) |= 0x40000000000uLL;
          unint64_t v49 = *((void *)this + 1);
          if (v49 > 0xFFFFFFFFFFFFFFFBLL || v49 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 188) = *(_DWORD *)(*(void *)this + v49);
          goto LABEL_293;
        case 9u:
          *(void *)(a1 + 216) |= 0x800000000000uLL;
          unint64_t v50 = *((void *)this + 1);
          if (v50 > 0xFFFFFFFFFFFFFFFBLL || v50 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 208) = *(_DWORD *)(*(void *)this + v50);
          goto LABEL_293;
        case 0xAu:
          *(void *)(a1 + 216) |= 0x400000000000uLL;
          unint64_t v51 = *((void *)this + 1);
          if (v51 > 0xFFFFFFFFFFFFFFFBLL || v51 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 204) = *(_DWORD *)(*(void *)this + v51);
          goto LABEL_293;
        case 0xBu:
          *(void *)(a1 + 216) |= 0x10000000000uLL;
          unint64_t v52 = *((void *)this + 1);
          if (v52 > 0xFFFFFFFFFFFFFFFBLL || v52 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 180) = *(_DWORD *)(*(void *)this + v52);
          goto LABEL_293;
        case 0xCu:
          *(void *)(a1 + 216) |= 0x100000000000uLL;
          unint64_t v53 = *((void *)this + 1);
          if (v53 > 0xFFFFFFFFFFFFFFFBLL || v53 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 196) = *(_DWORD *)(*(void *)this + v53);
          goto LABEL_293;
        case 0xDu:
          *(void *)(a1 + 216) |= 0x1000000000000uLL;
          unint64_t v54 = *((void *)this + 1);
          if (v54 > 0xFFFFFFFFFFFFFFFBLL || v54 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 212) = *(_DWORD *)(*(void *)this + v54);
          goto LABEL_293;
        case 0xEu:
          *(void *)(a1 + 216) |= 0x10000uLL;
          unint64_t v55 = *((void *)this + 1);
          if (v55 > 0xFFFFFFFFFFFFFFFBLL || v55 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v55);
          goto LABEL_293;
        case 0xFu:
          *(void *)(a1 + 216) |= 0x2000000000uLL;
          unint64_t v56 = *((void *)this + 1);
          if (v56 > 0xFFFFFFFFFFFFFFFBLL || v56 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 168) = *(_DWORD *)(*(void *)this + v56);
          goto LABEL_293;
        case 0x10u:
          *(void *)(a1 + 216) |= 0x20000000000uLL;
          unint64_t v57 = *((void *)this + 1);
          if (v57 > 0xFFFFFFFFFFFFFFFBLL || v57 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 184) = *(_DWORD *)(*(void *)this + v57);
          goto LABEL_293;
        case 0x11u:
          *(void *)(a1 + 216) |= 0x200000000000uLL;
          unint64_t v58 = *((void *)this + 1);
          if (v58 > 0xFFFFFFFFFFFFFFFBLL || v58 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 200) = *(_DWORD *)(*(void *)this + v58);
          goto LABEL_293;
        case 0x12u:
          *(void *)(a1 + 216) |= 4uLL;
          unint64_t v59 = *((void *)this + 1);
          unint64_t v60 = *((void *)this + 2);
          uint64_t v61 = *(void *)this;
          if (v59 <= 0xFFFFFFFFFFFFFFF5 && v59 + 10 <= v60)
          {
            char v62 = 0;
            unsigned int v63 = 0;
            uint64_t v64 = 0;
            do
            {
              unint64_t v65 = v59 + 1;
              *((void *)this + 1) = v59 + 1;
              char v66 = *(unsigned char *)(v61 + v59);
              v64 |= (unint64_t)(v66 & 0x7F) << v62;
              if ((v66 & 0x80) == 0) {
                goto LABEL_314;
              }
              v62 += 7;
              unint64_t v59 = v65;
              BOOL v14 = v63++ > 8;
            }
            while (!v14);
LABEL_242:
            uint64_t v64 = 0;
            goto LABEL_314;
          }
          char v159 = 0;
          unsigned int v160 = 0;
          uint64_t v64 = 0;
          if (v60 <= v59) {
            unint64_t v60 = *((void *)this + 1);
          }
          while (2)
          {
            if (v60 == v59)
            {
              uint64_t v64 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v161 = v59 + 1;
              char v162 = *(unsigned char *)(v61 + v59);
              *((void *)this + 1) = v161;
              v64 |= (unint64_t)(v162 & 0x7F) << v159;
              if (v162 < 0)
              {
                v159 += 7;
                unint64_t v59 = v161;
                BOOL v14 = v160++ > 8;
                if (v14) {
                  goto LABEL_242;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v64 = 0;
              }
            }
            break;
          }
LABEL_314:
          *(void *)(a1 + 24) = v64;
          goto LABEL_294;
        case 0x13u:
          *(void *)(a1 + 216) |= 0x10uLL;
          unint64_t v67 = *((void *)this + 1);
          if (v67 > 0xFFFFFFFFFFFFFFFBLL || v67 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v67);
          goto LABEL_293;
        case 0x14u:
          *(void *)(a1 + 216) |= 0x800000uLL;
          unint64_t v68 = *((void *)this + 1);
          if (v68 > 0xFFFFFFFFFFFFFFFBLL || v68 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 112) = *(_DWORD *)(*(void *)this + v68);
          goto LABEL_293;
        case 0x15u:
          *(void *)(a1 + 216) |= 0x80uLL;
          unint64_t v69 = *((void *)this + 1);
          if (v69 > 0xFFFFFFFFFFFFFFFBLL || v69 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v69);
          goto LABEL_293;
        case 0x16u:
          *(void *)(a1 + 216) |= 0x40uLL;
          unint64_t v70 = *((void *)this + 1);
          if (v70 > 0xFFFFFFFFFFFFFFFBLL || v70 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v70);
          goto LABEL_293;
        case 0x17u:
          *(void *)(a1 + 216) |= 0x100000uLL;
          unint64_t v71 = *((void *)this + 1);
          if (v71 > 0xFFFFFFFFFFFFFFFBLL || v71 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v71);
          goto LABEL_293;
        case 0x18u:
          *(void *)(a1 + 216) |= 0x80000uLL;
          unint64_t v72 = *((void *)this + 1);
          if (v72 > 0xFFFFFFFFFFFFFFFBLL || v72 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v72);
          goto LABEL_293;
        case 0x19u:
          *(void *)(a1 + 216) |= 0x40000000uLL;
          unint64_t v73 = *((void *)this + 1);
          if (v73 > 0xFFFFFFFFFFFFFFFBLL || v73 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 140) = *(_DWORD *)(*(void *)this + v73);
          goto LABEL_293;
        case 0x1Au:
          *(void *)(a1 + 216) |= 0x1000uLL;
          unint64_t v74 = *((void *)this + 1);
          unint64_t v75 = *((void *)this + 2);
          uint64_t v76 = *(void *)this;
          if (v74 <= 0xFFFFFFFFFFFFFFF5 && v74 + 10 <= v75)
          {
            char v77 = 0;
            unsigned int v78 = 0;
            uint64_t v79 = 0;
            do
            {
              unint64_t v80 = v74 + 1;
              *((void *)this + 1) = v74 + 1;
              char v81 = *(unsigned char *)(v76 + v74);
              v79 |= (unint64_t)(v81 & 0x7F) << v77;
              if ((v81 & 0x80) == 0) {
                goto LABEL_318;
              }
              v77 += 7;
              unint64_t v74 = v80;
              BOOL v14 = v78++ > 8;
            }
            while (!v14);
LABEL_249:
            LODWORD(v79) = 0;
            goto LABEL_318;
          }
          char v163 = 0;
          unsigned int v164 = 0;
          uint64_t v79 = 0;
          if (v75 <= v74) {
            unint64_t v75 = *((void *)this + 1);
          }
          while (2)
          {
            if (v75 == v74)
            {
              LODWORD(v79) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v165 = v74 + 1;
              char v166 = *(unsigned char *)(v76 + v74);
              *((void *)this + 1) = v165;
              v79 |= (unint64_t)(v166 & 0x7F) << v163;
              if (v166 < 0)
              {
                v163 += 7;
                unint64_t v74 = v165;
                BOOL v14 = v164++ > 8;
                if (v14) {
                  goto LABEL_249;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v79) = 0;
              }
            }
            break;
          }
LABEL_318:
          *(_DWORD *)(a1 + 68) = v79;
          goto LABEL_294;
        case 0x1Bu:
          *(void *)(a1 + 216) |= 0x4000uLL;
          unint64_t v82 = *((void *)this + 1);
          unint64_t v83 = *((void *)this + 2);
          uint64_t v84 = *(void *)this;
          if (v82 <= 0xFFFFFFFFFFFFFFF5 && v82 + 10 <= v83)
          {
            char v85 = 0;
            unsigned int v86 = 0;
            uint64_t v87 = 0;
            do
            {
              unint64_t v88 = v82 + 1;
              *((void *)this + 1) = v82 + 1;
              char v89 = *(unsigned char *)(v84 + v82);
              v87 |= (unint64_t)(v89 & 0x7F) << v85;
              if ((v89 & 0x80) == 0) {
                goto LABEL_322;
              }
              v85 += 7;
              unint64_t v82 = v88;
              BOOL v14 = v86++ > 8;
            }
            while (!v14);
LABEL_256:
            LODWORD(v87) = 0;
            goto LABEL_322;
          }
          char v167 = 0;
          unsigned int v168 = 0;
          uint64_t v87 = 0;
          if (v83 <= v82) {
            unint64_t v83 = *((void *)this + 1);
          }
          while (2)
          {
            if (v83 == v82)
            {
              LODWORD(v87) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v169 = v82 + 1;
              char v170 = *(unsigned char *)(v84 + v82);
              *((void *)this + 1) = v169;
              v87 |= (unint64_t)(v170 & 0x7F) << v167;
              if (v170 < 0)
              {
                v167 += 7;
                unint64_t v82 = v169;
                BOOL v14 = v168++ > 8;
                if (v14) {
                  goto LABEL_256;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v87) = 0;
              }
            }
            break;
          }
LABEL_322:
          *(_DWORD *)(a1 + 76) = v87;
          goto LABEL_294;
        case 0x1Cu:
          *(void *)(a1 + 216) |= 0x100000000uLL;
          unint64_t v90 = *((void *)this + 1);
          unint64_t v91 = *((void *)this + 2);
          uint64_t v92 = *(void *)this;
          if (v90 <= 0xFFFFFFFFFFFFFFF5 && v90 + 10 <= v91)
          {
            char v93 = 0;
            unsigned int v94 = 0;
            uint64_t v95 = 0;
            do
            {
              unint64_t v96 = v90 + 1;
              *((void *)this + 1) = v90 + 1;
              char v97 = *(unsigned char *)(v92 + v90);
              v95 |= (unint64_t)(v97 & 0x7F) << v93;
              if ((v97 & 0x80) == 0) {
                goto LABEL_326;
              }
              v93 += 7;
              unint64_t v90 = v96;
              BOOL v14 = v94++ > 8;
            }
            while (!v14);
LABEL_263:
            LODWORD(v95) = 0;
            goto LABEL_326;
          }
          char v171 = 0;
          unsigned int v172 = 0;
          uint64_t v95 = 0;
          if (v91 <= v90) {
            unint64_t v91 = *((void *)this + 1);
          }
          while (2)
          {
            if (v91 == v90)
            {
              LODWORD(v95) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v173 = v90 + 1;
              char v174 = *(unsigned char *)(v92 + v90);
              *((void *)this + 1) = v173;
              v95 |= (unint64_t)(v174 & 0x7F) << v171;
              if (v174 < 0)
              {
                v171 += 7;
                unint64_t v90 = v173;
                BOOL v14 = v172++ > 8;
                if (v14) {
                  goto LABEL_263;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v95) = 0;
              }
            }
            break;
          }
LABEL_326:
          *(_DWORD *)(a1 + 148) = v95;
          goto LABEL_294;
        case 0x1Du:
          *(void *)(a1 + 216) |= 0x1000000000uLL;
          unint64_t v98 = *((void *)this + 1);
          unint64_t v99 = *((void *)this + 2);
          uint64_t v100 = *(void *)this;
          if (v98 <= 0xFFFFFFFFFFFFFFF5 && v98 + 10 <= v99)
          {
            char v101 = 0;
            unsigned int v102 = 0;
            uint64_t v103 = 0;
            do
            {
              unint64_t v104 = v98 + 1;
              *((void *)this + 1) = v98 + 1;
              char v105 = *(unsigned char *)(v100 + v98);
              v103 |= (unint64_t)(v105 & 0x7F) << v101;
              if ((v105 & 0x80) == 0) {
                goto LABEL_330;
              }
              v101 += 7;
              unint64_t v98 = v104;
              BOOL v14 = v102++ > 8;
            }
            while (!v14);
LABEL_270:
            LODWORD(v103) = 0;
            goto LABEL_330;
          }
          char v175 = 0;
          unsigned int v176 = 0;
          uint64_t v103 = 0;
          if (v99 <= v98) {
            unint64_t v99 = *((void *)this + 1);
          }
          while (2)
          {
            if (v99 == v98)
            {
              LODWORD(v103) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v177 = v98 + 1;
              char v178 = *(unsigned char *)(v100 + v98);
              *((void *)this + 1) = v177;
              v103 |= (unint64_t)(v178 & 0x7F) << v175;
              if (v178 < 0)
              {
                v175 += 7;
                unint64_t v98 = v177;
                BOOL v14 = v176++ > 8;
                if (v14) {
                  goto LABEL_270;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v103) = 0;
              }
            }
            break;
          }
LABEL_330:
          *(_DWORD *)(a1 + 164) = v103;
          goto LABEL_294;
        case 0x1Eu:
          *(void *)(a1 + 216) |= 0x100uLL;
          unint64_t v106 = *((void *)this + 1);
          unint64_t v107 = *((void *)this + 2);
          uint64_t v108 = *(void *)this;
          if (v106 <= 0xFFFFFFFFFFFFFFF5 && v106 + 10 <= v107)
          {
            char v109 = 0;
            unsigned int v110 = 0;
            uint64_t v111 = 0;
            do
            {
              unint64_t v112 = v106 + 1;
              *((void *)this + 1) = v106 + 1;
              char v113 = *(unsigned char *)(v108 + v106);
              v111 |= (unint64_t)(v113 & 0x7F) << v109;
              if ((v113 & 0x80) == 0) {
                goto LABEL_334;
              }
              v109 += 7;
              unint64_t v106 = v112;
              BOOL v14 = v110++ > 8;
            }
            while (!v14);
LABEL_277:
            LODWORD(v111) = 0;
            goto LABEL_334;
          }
          char v179 = 0;
          unsigned int v180 = 0;
          uint64_t v111 = 0;
          if (v107 <= v106) {
            unint64_t v107 = *((void *)this + 1);
          }
          while (2)
          {
            if (v107 == v106)
            {
              LODWORD(v111) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v181 = v106 + 1;
              char v182 = *(unsigned char *)(v108 + v106);
              *((void *)this + 1) = v181;
              v111 |= (unint64_t)(v182 & 0x7F) << v179;
              if (v182 < 0)
              {
                v179 += 7;
                unint64_t v106 = v181;
                BOOL v14 = v180++ > 8;
                if (v14) {
                  goto LABEL_277;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v111) = 0;
              }
            }
            break;
          }
LABEL_334:
          *(_DWORD *)(a1 + 52) = v111;
          goto LABEL_294;
        case 0x1Fu:
          *(void *)(a1 + 216) |= 0x200000000uLL;
          unint64_t v114 = *((void *)this + 1);
          if (v114 > 0xFFFFFFFFFFFFFFFBLL || v114 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 152) = *(_DWORD *)(*(void *)this + v114);
          goto LABEL_293;
        case 0x20u:
          *(void *)(a1 + 216) |= 0x800uLL;
          unint64_t v115 = *((void *)this + 1);
          if (v115 > 0xFFFFFFFFFFFFFFFBLL || v115 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v115);
          goto LABEL_293;
        case 0x21u:
          *(void *)(a1 + 216) |= 0x400uLL;
          unint64_t v116 = *((void *)this + 1);
          if (v116 > 0xFFFFFFFFFFFFFFFBLL || v116 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v116);
          goto LABEL_293;
        case 0x22u:
          *(void *)(a1 + 216) |= 0x200000uLL;
          unint64_t v117 = *((void *)this + 1);
          if (v117 > 0xFFFFFFFFFFFFFFFBLL || v117 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 104) = *(_DWORD *)(*(void *)this + v117);
          goto LABEL_293;
        case 0x23u:
          *(void *)(a1 + 216) |= 0x40000uLL;
          unint64_t v118 = *((void *)this + 1);
          if (v118 > 0xFFFFFFFFFFFFFFFBLL || v118 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v118);
          goto LABEL_293;
        case 0x24u:
          *(void *)(a1 + 216) |= 0x20000000uLL;
          unint64_t v119 = *((void *)this + 1);
          if (v119 > 0xFFFFFFFFFFFFFFFBLL || v119 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 136) = *(_DWORD *)(*(void *)this + v119);
          goto LABEL_293;
        case 0x25u:
          *(void *)(a1 + 216) |= 0x800000000uLL;
          unint64_t v120 = *((void *)this + 1);
          if (v120 > 0xFFFFFFFFFFFFFFFBLL || v120 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 160) = *(_DWORD *)(*(void *)this + v120);
          goto LABEL_293;
        case 0x26u:
          *(void *)(a1 + 216) |= 0x400000000uLL;
          unint64_t v121 = *((void *)this + 1);
          if (v121 > 0xFFFFFFFFFFFFFFFBLL || v121 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 156) = *(_DWORD *)(*(void *)this + v121);
          goto LABEL_293;
        case 0x27u:
          *(void *)(a1 + 216) |= 0x8000uLL;
          unint64_t v122 = *((void *)this + 1);
          unint64_t v123 = *((void *)this + 2);
          uint64_t v124 = *(void *)this;
          if (v122 <= 0xFFFFFFFFFFFFFFF5 && v122 + 10 <= v123)
          {
            char v125 = 0;
            unsigned int v126 = 0;
            uint64_t v127 = 0;
            do
            {
              unint64_t v128 = v122 + 1;
              *((void *)this + 1) = v122 + 1;
              char v129 = *(unsigned char *)(v124 + v122);
              v127 |= (unint64_t)(v129 & 0x7F) << v125;
              if ((v129 & 0x80) == 0) {
                goto LABEL_338;
              }
              v125 += 7;
              unint64_t v122 = v128;
              BOOL v14 = v126++ > 8;
            }
            while (!v14);
LABEL_284:
            LODWORD(v127) = 0;
            goto LABEL_338;
          }
          char v183 = 0;
          unsigned int v184 = 0;
          uint64_t v127 = 0;
          if (v123 <= v122) {
            unint64_t v123 = *((void *)this + 1);
          }
          while (2)
          {
            if (v123 == v122)
            {
              LODWORD(v127) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v185 = v122 + 1;
              char v186 = *(unsigned char *)(v124 + v122);
              *((void *)this + 1) = v185;
              v127 |= (unint64_t)(v186 & 0x7F) << v183;
              if (v186 < 0)
              {
                v183 += 7;
                unint64_t v122 = v185;
                BOOL v14 = v184++ > 8;
                if (v14) {
                  goto LABEL_284;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v127) = 0;
              }
            }
            break;
          }
LABEL_338:
          *(_DWORD *)(a1 + 80) = v127;
          goto LABEL_294;
        case 0x28u:
          *(void *)(a1 + 216) |= 0x10000000uLL;
          unint64_t v130 = *((void *)this + 1);
          if (v130 > 0xFFFFFFFFFFFFFFFBLL || v130 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 132) = *(_DWORD *)(*(void *)this + v130);
          goto LABEL_293;
        case 0x29u:
          *(void *)(a1 + 216) |= 0x4000000uLL;
          unint64_t v131 = *((void *)this + 1);
          if (v131 > 0xFFFFFFFFFFFFFFFBLL || v131 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 124) = *(_DWORD *)(*(void *)this + v131);
          goto LABEL_293;
        case 0x2Au:
          *(void *)(a1 + 216) |= 0x8000000uLL;
          unint64_t v132 = *((void *)this + 1);
          if (v132 > 0xFFFFFFFFFFFFFFFBLL || v132 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v132);
          goto LABEL_293;
        case 0x2Bu:
          *(void *)(a1 + 216) |= 0x20uLL;
          unint64_t v133 = *((void *)this + 1);
          if (v133 > 0xFFFFFFFFFFFFFFFBLL || v133 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v133);
          goto LABEL_293;
        case 0x2Cu:
          *(void *)(a1 + 216) |= 0x1000000uLL;
          unint64_t v134 = *((void *)this + 1);
          if (v134 > 0xFFFFFFFFFFFFFFFBLL || v134 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 116) = *(_DWORD *)(*(void *)this + v134);
          goto LABEL_293;
        case 0x2Du:
          *(void *)(a1 + 216) |= 0x2000000uLL;
          unint64_t v135 = *((void *)this + 1);
          unint64_t v136 = *((void *)this + 2);
          uint64_t v137 = *(void *)this;
          if (v135 <= 0xFFFFFFFFFFFFFFF5 && v135 + 10 <= v136)
          {
            char v138 = 0;
            unsigned int v139 = 0;
            uint64_t v140 = 0;
            do
            {
              unint64_t v141 = v135 + 1;
              *((void *)this + 1) = v135 + 1;
              char v142 = *(unsigned char *)(v137 + v135);
              v140 |= (unint64_t)(v142 & 0x7F) << v138;
              if ((v142 & 0x80) == 0) {
                goto LABEL_342;
              }
              v138 += 7;
              unint64_t v135 = v141;
              BOOL v14 = v139++ > 8;
            }
            while (!v14);
LABEL_291:
            LODWORD(v140) = 0;
            goto LABEL_342;
          }
          char v187 = 0;
          unsigned int v188 = 0;
          uint64_t v140 = 0;
          if (v136 <= v135) {
            unint64_t v136 = *((void *)this + 1);
          }
          break;
        case 0x2Eu:
          *(void *)(a1 + 216) |= 0x2000uLL;
          unint64_t v143 = *((void *)this + 1);
          if (v143 > 0xFFFFFFFFFFFFFFFBLL || v143 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v143);
          goto LABEL_293;
        case 0x2Fu:
          *(void *)(a1 + 216) |= 0x200uLL;
          unint64_t v144 = *((void *)this + 1);
          if (v144 > 0xFFFFFFFFFFFFFFFBLL || v144 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v144);
          goto LABEL_293;
        case 0x30u:
          *(void *)(a1 + 216) |= 0x400000uLL;
          unint64_t v145 = *((void *)this + 1);
          if (v145 > 0xFFFFFFFFFFFFFFFBLL || v145 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 108) = *(_DWORD *)(*(void *)this + v145);
          goto LABEL_293;
        case 0x31u:
          *(void *)(a1 + 216) |= 8uLL;
          unint64_t v146 = *((void *)this + 1);
          if (v146 <= 0xFFFFFFFFFFFFFFFBLL && v146 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v146);
LABEL_293:
            *((void *)this + 1) += 4;
          }
          else
          {
LABEL_214:
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_294;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          goto LABEL_294;
      }
      while (1)
      {
        if (v136 == v135)
        {
          LODWORD(v140) = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_342;
        }
        unint64_t v189 = v135 + 1;
        char v190 = *(unsigned char *)(v137 + v135);
        *((void *)this + 1) = v189;
        v140 |= (unint64_t)(v190 & 0x7F) << v187;
        if ((v190 & 0x80) == 0) {
          break;
        }
        v187 += 7;
        unint64_t v135 = v189;
        BOOL v14 = v188++ > 8;
        if (v14) {
          goto LABEL_291;
        }
      }
      if (*((unsigned char *)this + 24)) {
        LODWORD(v140) = 0;
      }
LABEL_342:
      *(_DWORD *)(a1 + 120) = v140;
LABEL_294:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B2E844(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(result + 216);
  if ((v4 & 0x80000000) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    uint64_t v4 = *(void *)(v3 + 216);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_53;
    }
  }
  else if ((v4 & 1) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 2) == 0)
  {
LABEL_4:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x20000) == 0)
  {
LABEL_5:
    if ((v4 & 0x8000000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 88));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x8000000000) == 0)
  {
LABEL_6:
    if ((v4 & 0x4000000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 176));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x4000000000) == 0)
  {
LABEL_7:
    if ((v4 & 0x80000000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 172));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x80000000000) == 0)
  {
LABEL_8:
    if ((v4 & 0x40000000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 192));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x40000000000) == 0)
  {
LABEL_9:
    if ((v4 & 0x800000000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 188));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x800000000000) == 0)
  {
LABEL_10:
    if ((v4 & 0x400000000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_60;
  }
LABEL_59:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 208));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x400000000000) == 0)
  {
LABEL_11:
    if ((v4 & 0x10000000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 204));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x10000000000) == 0)
  {
LABEL_12:
    if ((v4 & 0x100000000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 180));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x100000000000) == 0)
  {
LABEL_13:
    if ((v4 & 0x1000000000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 196));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x1000000000000) == 0)
  {
LABEL_14:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_64;
  }
LABEL_63:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 212));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x10000) == 0)
  {
LABEL_15:
    if ((v4 & 0x2000000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_65;
  }
LABEL_64:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x2000000000) == 0)
  {
LABEL_16:
    if ((v4 & 0x20000000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_66;
  }
LABEL_65:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 168));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x20000000000) == 0)
  {
LABEL_17:
    if ((v4 & 0x200000000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_67;
  }
LABEL_66:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 184));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x200000000000) == 0)
  {
LABEL_18:
    if ((v4 & 4) == 0) {
      goto LABEL_19;
    }
    goto LABEL_68;
  }
LABEL_67:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 200));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 4) == 0)
  {
LABEL_19:
    if ((v4 & 0x10) == 0) {
      goto LABEL_20;
    }
    goto LABEL_69;
  }
LABEL_68:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x10) == 0)
  {
LABEL_20:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_70;
  }
LABEL_69:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x800000) == 0)
  {
LABEL_21:
    if ((v4 & 0x80) == 0) {
      goto LABEL_22;
    }
    goto LABEL_71;
  }
LABEL_70:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 112));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x80) == 0)
  {
LABEL_22:
    if ((v4 & 0x40) == 0) {
      goto LABEL_23;
    }
    goto LABEL_72;
  }
LABEL_71:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x40) == 0)
  {
LABEL_23:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_73;
  }
LABEL_72:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x100000) == 0)
  {
LABEL_24:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_74;
  }
LABEL_73:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 100));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x80000) == 0)
  {
LABEL_25:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_75;
  }
LABEL_74:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 96));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x40000000) == 0)
  {
LABEL_26:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_76;
  }
LABEL_75:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 140));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x1000) == 0)
  {
LABEL_27:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_77;
  }
LABEL_76:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x4000) == 0)
  {
LABEL_28:
    if ((v4 & 0x100000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_78;
  }
LABEL_77:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x100000000) == 0)
  {
LABEL_29:
    if ((v4 & 0x1000000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_79;
  }
LABEL_78:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x1000000000) == 0)
  {
LABEL_30:
    if ((v4 & 0x100) == 0) {
      goto LABEL_31;
    }
    goto LABEL_80;
  }
LABEL_79:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x100) == 0)
  {
LABEL_31:
    if ((v4 & 0x200000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_81;
  }
LABEL_80:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x200000000) == 0)
  {
LABEL_32:
    if ((v4 & 0x800) == 0) {
      goto LABEL_33;
    }
    goto LABEL_82;
  }
LABEL_81:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 152));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x800) == 0)
  {
LABEL_33:
    if ((v4 & 0x400) == 0) {
      goto LABEL_34;
    }
    goto LABEL_83;
  }
LABEL_82:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x400) == 0)
  {
LABEL_34:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_84;
  }
LABEL_83:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 60));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x200000) == 0)
  {
LABEL_35:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_85;
  }
LABEL_84:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 104));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x40000) == 0)
  {
LABEL_36:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_86;
  }
LABEL_85:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 92));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_37:
    if ((v4 & 0x800000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_87;
  }
LABEL_86:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 136));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x800000000) == 0)
  {
LABEL_38:
    if ((v4 & 0x400000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_88;
  }
LABEL_87:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 160));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x400000000) == 0)
  {
LABEL_39:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_89;
  }
LABEL_88:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 156));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x8000) == 0)
  {
LABEL_40:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_90;
  }
LABEL_89:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_41:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_91;
  }
LABEL_90:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 132));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_42:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_92;
  }
LABEL_91:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 124));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_43:
    if ((v4 & 0x20) == 0) {
      goto LABEL_44;
    }
    goto LABEL_93;
  }
LABEL_92:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 128));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x20) == 0)
  {
LABEL_44:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_94;
  }
LABEL_93:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_45:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_95;
  }
LABEL_94:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 116));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_46:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_96;
  }
LABEL_95:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x2000) == 0)
  {
LABEL_47:
    if ((v4 & 0x200) == 0) {
      goto LABEL_48;
    }
    goto LABEL_97;
  }
LABEL_96:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x200) == 0)
  {
LABEL_48:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_49;
    }
LABEL_98:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 108));
    if ((*(void *)(v3 + 216) & 8) == 0) {
      return result;
    }
    goto LABEL_99;
  }
LABEL_97:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56));
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x400000) != 0) {
    goto LABEL_98;
  }
LABEL_49:
  if ((v4 & 8) == 0) {
    return result;
  }
LABEL_99:
  float v5 = *(float *)(v3 + 32);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227B2EDD8(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC1FCB8;
  *(_DWORD *)(result + 44) = 0;
  return result;
}

void sub_227B2EE00(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B2EE38(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC1FCB8;
  *(_DWORD *)(result + 44) = 0;
  char v2 = *(unsigned char *)(a2 + 44);
  if ((v2 & 2) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 16);
    char v3 = 2;
    *(unsigned char *)(result + 44) = 2;
    *(void *)(result + 16) = v4;
    char v2 = *(unsigned char *)(a2 + 44);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 44) & 4) != 0)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 24);
    v3 |= 4u;
    *(unsigned char *)(result + 44) = v3;
    *(void *)(result + 24) = v5;
    char v2 = *(unsigned char *)(a2 + 44);
  }
LABEL_6:
  if ((v2 & 8) != 0)
  {
    uint64_t v6 = *(void *)(a2 + 32);
    v3 |= 8u;
    *(unsigned char *)(result + 44) = v3;
    *(void *)(result + 32) = v6;
    char v2 = *(unsigned char *)(a2 + 44);
    if ((v2 & 1) == 0)
    {
LABEL_8:
      if ((v2 & 0x10) == 0) {
        return result;
      }
LABEL_12:
      int v8 = *(_DWORD *)(a2 + 40);
      *(unsigned char *)(result + 44) = v3 | 0x10;
      *(_DWORD *)(result + 40) = v8;
      return result;
    }
  }
  else if ((v2 & 1) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(unsigned char *)(result + 44) = v3;
  *(void *)(result + 8) = v7;
  if ((*(unsigned char *)(a2 + 44) & 0x10) != 0) {
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_227B2EEF0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 44);
  if (v5)
  {
    PB::TextFormatter::format(this, "aggAccelZDelta", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 44);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 44) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "arcLength", *(double *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(this, "curveDistance", *(double *)(a1 + 24));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(this, "firstLoftAngleDeg", *(double *)(a1 + 32));
  if ((*(unsigned char *)(a1 + 44) & 0x10) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "stepResult");
LABEL_7:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B2EFD4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 44) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_35;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_51;
            case 2u:
              *(unsigned char *)(a1 + 44) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_35;
              }
              *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
              goto LABEL_51;
            case 3u:
              *(unsigned char *)(a1 + 44) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_35;
              }
              *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
              goto LABEL_51;
            case 4u:
              *(unsigned char *)(a1 + 44) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
LABEL_51:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_35:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_57;
            case 5u:
              *(unsigned char *)(a1 + 44) |= 0x10u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v27 = 0;
                unsigned int v28 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_56;
                  }
                  unint64_t v29 = v21++;
                  char v30 = *(unsigned char *)(v22 + v29);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v30 & 0x7F) << v27;
                  if ((v30 & 0x80) == 0) {
                    break;
                  }
                  v27 += 7;
                  BOOL v14 = v28++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_55:
                    unint64_t v2 = v29 + 1;
                    goto LABEL_56;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_55;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_56;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_56:
              *(_DWORD *)(a1 + 40) = v25;
LABEL_57:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_57;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B2F33C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 44);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 16));
    char v4 = *(unsigned char *)(v3 + 44);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 44) & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24));
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 8) == 0)
  {
LABEL_4:
    if ((v4 & 1) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
    if ((*(unsigned char *)(v3 + 44) & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32));
  char v4 = *(unsigned char *)(v3 + 44);
  if (v4) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 0x10) == 0) {
    return result;
  }
LABEL_11:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227B2F400(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC1FCF0;
  *(_DWORD *)(result + 176) = 0;
  return result;
}

void sub_227B2F428(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227B2F460(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC1FCF0;
  *(_DWORD *)(a1 + 176) = 0;
  int v2 = *(_DWORD *)(a2 + 176);
  if ((v2 & 8) != 0)
  {
    double result = *(double *)(a2 + 32);
    int v3 = 8;
    *(_DWORD *)(a1 + 176) = 8;
    *(double *)(a1 + 32) = result;
    int v2 = *(_DWORD *)(a2 + 176);
    if ((v2 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 0x10) != 0)
  {
LABEL_5:
    double result = *(double *)(a2 + 40);
    v3 |= 0x10u;
    *(_DWORD *)(a1 + 176) = v3;
    *(double *)(a1 + 40) = result;
    int v2 = *(_DWORD *)(a2 + 176);
  }
LABEL_6:
  if ((v2 & 0x20) != 0)
  {
    double result = *(double *)(a2 + 48);
    v3 |= 0x20u;
    *(_DWORD *)(a1 + 176) = v3;
    *(double *)(a1 + 48) = result;
    int v2 = *(_DWORD *)(a2 + 176);
    if ((v2 & 0x40) == 0)
    {
LABEL_8:
      if ((v2 & 0x100) == 0) {
        goto LABEL_9;
      }
      goto LABEL_29;
    }
  }
  else if ((v2 & 0x40) == 0)
  {
    goto LABEL_8;
  }
  double result = *(double *)(a2 + 56);
  v3 |= 0x40u;
  *(_DWORD *)(a1 + 176) = v3;
  *(double *)(a1 + 56) = result;
  int v2 = *(_DWORD *)(a2 + 176);
  if ((v2 & 0x100) == 0)
  {
LABEL_9:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_30;
  }
LABEL_29:
  double result = *(double *)(a2 + 72);
  v3 |= 0x100u;
  *(_DWORD *)(a1 + 176) = v3;
  *(double *)(a1 + 72) = result;
  int v2 = *(_DWORD *)(a2 + 176);
  if ((v2 & 0x1000) == 0)
  {
LABEL_10:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_31;
  }
LABEL_30:
  double result = *(double *)(a2 + 104);
  v3 |= 0x1000u;
  *(_DWORD *)(a1 + 176) = v3;
  *(double *)(a1 + 104) = result;
  int v2 = *(_DWORD *)(a2 + 176);
  if ((v2 & 0x4000) == 0)
  {
LABEL_11:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_32;
  }
LABEL_31:
  double result = *(double *)(a2 + 120);
  v3 |= 0x4000u;
  *(_DWORD *)(a1 + 176) = v3;
  *(double *)(a1 + 120) = result;
  int v2 = *(_DWORD *)(a2 + 176);
  if ((v2 & 0x8000) == 0)
  {
LABEL_12:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_33;
  }
LABEL_32:
  double result = *(double *)(a2 + 128);
  v3 |= 0x8000u;
  *(_DWORD *)(a1 + 176) = v3;
  *(double *)(a1 + 128) = result;
  int v2 = *(_DWORD *)(a2 + 176);
  if ((v2 & 0x2000) == 0)
  {
LABEL_13:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_34;
  }
LABEL_33:
  double result = *(double *)(a2 + 112);
  v3 |= 0x2000u;
  *(_DWORD *)(a1 + 176) = v3;
  *(double *)(a1 + 112) = result;
  int v2 = *(_DWORD *)(a2 + 176);
  if ((v2 & 0x10000) == 0)
  {
LABEL_14:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t v5 = *(void *)(a2 + 136);
  v3 |= 0x10000u;
  *(_DWORD *)(a1 + 176) = v3;
  *(void *)(a1 + 136) = v5;
  int v2 = *(_DWORD *)(a2 + 176);
  if ((v2 & 0x20000) == 0)
  {
LABEL_15:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t v6 = *(void *)(a2 + 144);
  v3 |= 0x20000u;
  *(_DWORD *)(a1 + 176) = v3;
  *(void *)(a1 + 144) = v6;
  int v2 = *(_DWORD *)(a2 + 176);
  if ((v2 & 0x40000) == 0)
  {
LABEL_16:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t v7 = *(void *)(a2 + 152);
  v3 |= 0x40000u;
  *(_DWORD *)(a1 + 176) = v3;
  *(void *)(a1 + 152) = v7;
  int v2 = *(_DWORD *)(a2 + 176);
  if ((v2 & 0x80000) == 0)
  {
LABEL_17:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_38;
  }
LABEL_37:
  double result = *(double *)(a2 + 160);
  v3 |= 0x80000u;
  *(_DWORD *)(a1 + 176) = v3;
  *(double *)(a1 + 160) = result;
  int v2 = *(_DWORD *)(a2 + 176);
  if ((v2 & 0x100000) == 0)
  {
LABEL_18:
    if ((v2 & 0x400) == 0) {
      goto LABEL_19;
    }
    goto LABEL_39;
  }
LABEL_38:
  int v8 = *(_DWORD *)(a2 + 168);
  v3 |= 0x100000u;
  *(_DWORD *)(a1 + 176) = v3;
  *(_DWORD *)(a1 + 168) = v8;
  int v2 = *(_DWORD *)(a2 + 176);
  if ((v2 & 0x400) == 0)
  {
LABEL_19:
    if ((v2 & 2) == 0) {
      goto LABEL_20;
    }
    goto LABEL_40;
  }
LABEL_39:
  double result = *(double *)(a2 + 88);
  v3 |= 0x400u;
  *(_DWORD *)(a1 + 176) = v3;
  *(double *)(a1 + 88) = result;
  int v2 = *(_DWORD *)(a2 + 176);
  if ((v2 & 2) == 0)
  {
LABEL_20:
    if ((v2 & 4) == 0) {
      goto LABEL_21;
    }
    goto LABEL_41;
  }
LABEL_40:
  double result = *(double *)(a2 + 16);
  v3 |= 2u;
  *(_DWORD *)(a1 + 176) = v3;
  *(double *)(a1 + 16) = result;
  int v2 = *(_DWORD *)(a2 + 176);
  if ((v2 & 4) == 0)
  {
LABEL_21:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_42;
  }
LABEL_41:
  double result = *(double *)(a2 + 24);
  v3 |= 4u;
  *(_DWORD *)(a1 + 176) = v3;
  *(double *)(a1 + 24) = result;
  int v2 = *(_DWORD *)(a2 + 176);
  if ((v2 & 0x200000) == 0)
  {
LABEL_22:
    if ((v2 & 0x80) == 0) {
      goto LABEL_23;
    }
    goto LABEL_43;
  }
LABEL_42:
  v3 |= 0x200000u;
  *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
  *(_DWORD *)(a1 + 176) = v3;
  int v2 = *(_DWORD *)(a2 + 176);
  if ((v2 & 0x80) == 0)
  {
LABEL_23:
    if ((v2 & 0x200) == 0) {
      goto LABEL_24;
    }
    goto LABEL_44;
  }
LABEL_43:
  double result = *(double *)(a2 + 64);
  v3 |= 0x80u;
  *(_DWORD *)(a1 + 176) = v3;
  *(double *)(a1 + 64) = result;
  int v2 = *(_DWORD *)(a2 + 176);
  if ((v2 & 0x200) == 0)
  {
LABEL_24:
    if ((v2 & 1) == 0) {
      goto LABEL_25;
    }
    goto LABEL_45;
  }
LABEL_44:
  double result = *(double *)(a2 + 80);
  v3 |= 0x200u;
  *(_DWORD *)(a1 + 176) = v3;
  *(double *)(a1 + 80) = result;
  int v2 = *(_DWORD *)(a2 + 176);
  if ((v2 & 1) == 0)
  {
LABEL_25:
    if ((v2 & 0x800) == 0) {
      return result;
    }
LABEL_46:
    double result = *(double *)(a2 + 96);
    *(_DWORD *)(a1 + 176) = v3 | 0x800;
    *(double *)(a1 + 96) = result;
    return result;
  }
LABEL_45:
  double result = *(double *)(a2 + 8);
  v3 |= 1u;
  *(_DWORD *)(a1 + 176) = v3;
  *(double *)(a1 + 8) = result;
  if ((*(_DWORD *)(a2 + 176) & 0x800) != 0) {
    goto LABEL_46;
  }
  return result;
}

uint64_t sub_227B2F6F0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 176);
  if (v5)
  {
    PB::TextFormatter::format(this, "cadenceDeviceIdentification", *(double *)(a1 + 8));
    int v5 = *(_DWORD *)(a1 + 176);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_29;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "cadenceUpdateTime", *(double *)(a1 + 16));
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(this, "elapsedTime", *(double *)(a1 + 24));
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 0x100000) == 0)
  {
LABEL_5:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "externalMachineType");
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 8) == 0)
  {
LABEL_6:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(this, "inclination", *(double *)(a1 + 32));
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 0x10) == 0)
  {
LABEL_7:
    if ((v5 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(this, "instantaneousCadence", *(double *)(a1 + 40));
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 0x20) == 0)
  {
LABEL_8:
    if ((v5 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(this, "instantaneousPower", *(double *)(a1 + 48));
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 0x40) == 0)
  {
LABEL_9:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "instantaneousSpeed", *(double *)(a1 + 56));
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 0x200000) == 0)
  {
LABEL_10:
    if ((v5 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "powerMeterIdentification");
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 0x80) == 0)
  {
LABEL_11:
    if ((v5 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "powerUpdateTime", *(double *)(a1 + 64));
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 0x100) == 0)
  {
LABEL_12:
    if ((v5 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "resistanceLevel", *(double *)(a1 + 72));
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 0x200) == 0)
  {
LABEL_13:
    if ((v5 & 0x400) == 0) {
      goto LABEL_14;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "speedDeviceIdentification", *(double *)(a1 + 80));
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 0x400) == 0)
  {
LABEL_14:
    if ((v5 & 0x800) == 0) {
      goto LABEL_15;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "speedUpdateTime", *(double *)(a1 + 88));
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 0x800) == 0)
  {
LABEL_15:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "startTime", *(double *)(a1 + 96));
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 0x1000) == 0)
  {
LABEL_16:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 104));
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 0x2000) == 0)
  {
LABEL_17:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "totalDistance", *(double *)(a1 + 112));
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 0x4000) == 0)
  {
LABEL_18:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "totalElevationAscended", *(double *)(a1 + 120));
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 0x8000) == 0)
  {
LABEL_19:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "totalEnergy", *(double *)(a1 + 128));
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 0x10000) == 0)
  {
LABEL_20:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_46;
  }
LABEL_45:
  PB::TextFormatter::format(this, "totalFloorsClimbed");
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 0x20000) == 0)
  {
LABEL_21:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_47;
  }
LABEL_46:
  PB::TextFormatter::format(this, "totalStrideCount");
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 0x40000) == 0)
  {
LABEL_22:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_23;
  }
LABEL_47:
  PB::TextFormatter::format(this, "totalStrokeCount");
  if ((*(_DWORD *)(a1 + 176) & 0x80000) != 0) {
LABEL_23:
  }
    PB::TextFormatter::format(this, "verticalSpeed", *(double *)(a1 + 160));
LABEL_24:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B2F9F4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_DWORD *)(a1 + 176) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_109;
              }
              *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
              goto LABEL_146;
            case 2u:
              *(_DWORD *)(a1 + 176) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_109;
              }
              *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
              goto LABEL_146;
            case 3u:
              *(_DWORD *)(a1 + 176) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_109;
              }
              *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
              goto LABEL_146;
            case 4u:
              *(_DWORD *)(a1 + 176) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_109;
              }
              *(void *)(a1 + 56) = *(void *)(*(void *)this + v2);
              goto LABEL_146;
            case 5u:
              *(_DWORD *)(a1 + 176) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_109;
              }
              *(void *)(a1 + 72) = *(void *)(*(void *)this + v2);
              goto LABEL_146;
            case 6u:
              *(_DWORD *)(a1 + 176) |= 0x1000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_109;
              }
              *(void *)(a1 + 104) = *(void *)(*(void *)this + v2);
              goto LABEL_146;
            case 7u:
              *(_DWORD *)(a1 + 176) |= 0x4000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_109;
              }
              *(void *)(a1 + 120) = *(void *)(*(void *)this + v2);
              goto LABEL_146;
            case 8u:
              *(_DWORD *)(a1 + 176) |= 0x8000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_109;
              }
              *(void *)(a1 + 128) = *(void *)(*(void *)this + v2);
              goto LABEL_146;
            case 9u:
              *(_DWORD *)(a1 + 176) |= 0x2000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_109;
              }
              *(void *)(a1 + 112) = *(void *)(*(void *)this + v2);
              goto LABEL_146;
            case 0xAu:
              *(_DWORD *)(a1 + 176) |= 0x10000u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v51 = 0;
                unsigned int v52 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    uint64_t v25 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_156;
                  }
                  unint64_t v53 = v21++;
                  char v54 = *(unsigned char *)(v22 + v53);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v54 & 0x7F) << v51;
                  if ((v54 & 0x80) == 0) {
                    break;
                  }
                  v51 += 7;
                  BOOL v14 = v52++ > 8;
                  if (v14)
                  {
                    uint64_t v25 = 0;
LABEL_155:
                    unint64_t v2 = v53 + 1;
                    goto LABEL_156;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v25 = 0;
                }
                goto LABEL_155;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_156;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              uint64_t v25 = 0;
LABEL_156:
              *(void *)(a1 + 136) = v25;
              goto LABEL_147;
            case 0xBu:
              *(_DWORD *)(a1 + 176) |= 0x20000u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v55 = 0;
                unsigned int v56 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    uint64_t v31 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_161;
                  }
                  unint64_t v57 = v27++;
                  char v58 = *(unsigned char *)(v28 + v57);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v58 & 0x7F) << v55;
                  if ((v58 & 0x80) == 0) {
                    break;
                  }
                  v55 += 7;
                  BOOL v14 = v56++ > 8;
                  if (v14)
                  {
                    uint64_t v31 = 0;
LABEL_160:
                    unint64_t v2 = v57 + 1;
                    goto LABEL_161;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v31 = 0;
                }
                goto LABEL_160;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_161;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              uint64_t v31 = 0;
LABEL_161:
              *(void *)(a1 + 144) = v31;
              goto LABEL_147;
            case 0xCu:
              *(_DWORD *)(a1 + 176) |= 0x40000u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v59 = 0;
                unsigned int v60 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    uint64_t v37 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_166;
                  }
                  unint64_t v61 = v33++;
                  char v62 = *(unsigned char *)(v34 + v61);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v62 & 0x7F) << v59;
                  if ((v62 & 0x80) == 0) {
                    break;
                  }
                  v59 += 7;
                  BOOL v14 = v60++ > 8;
                  if (v14)
                  {
                    uint64_t v37 = 0;
LABEL_165:
                    unint64_t v2 = v61 + 1;
                    goto LABEL_166;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v37 = 0;
                }
                goto LABEL_165;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_166;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              uint64_t v37 = 0;
LABEL_166:
              *(void *)(a1 + 152) = v37;
              goto LABEL_147;
            case 0xDu:
              *(_DWORD *)(a1 + 176) |= 0x80000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_109;
              }
              *(void *)(a1 + 160) = *(void *)(*(void *)this + v2);
              goto LABEL_146;
            case 0xEu:
              *(_DWORD *)(a1 + 176) |= 0x100000u;
              unint64_t v39 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v40 = *(void *)this;
              if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
              {
                char v63 = 0;
                unsigned int v64 = 0;
                uint64_t v43 = 0;
                if (v2 <= v39) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v39)
                  {
                    LODWORD(v43) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_171;
                  }
                  unint64_t v65 = v39++;
                  char v66 = *(unsigned char *)(v40 + v65);
                  *((void *)this + 1) = v39;
                  v43 |= (unint64_t)(v66 & 0x7F) << v63;
                  if ((v66 & 0x80) == 0) {
                    break;
                  }
                  v63 += 7;
                  BOOL v14 = v64++ > 8;
                  if (v14)
                  {
                    LODWORD(v43) = 0;
LABEL_170:
                    unint64_t v2 = v65 + 1;
                    goto LABEL_171;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v43) = 0;
                }
                goto LABEL_170;
              }
              char v41 = 0;
              unsigned int v42 = 0;
              uint64_t v43 = 0;
              do
              {
                unint64_t v2 = v39 + 1;
                *((void *)this + 1) = v39 + 1;
                char v44 = *(unsigned char *)(v40 + v39);
                v43 |= (unint64_t)(v44 & 0x7F) << v41;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_171;
                }
                v41 += 7;
                unint64_t v39 = v2;
                BOOL v14 = v42++ > 8;
              }
              while (!v14);
              LODWORD(v43) = 0;
LABEL_171:
              *(_DWORD *)(a1 + 168) = v43;
              goto LABEL_147;
            case 0xFu:
              *(_DWORD *)(a1 + 176) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_109;
              }
              *(void *)(a1 + 88) = *(void *)(*(void *)this + v2);
              goto LABEL_146;
            case 0x10u:
              *(_DWORD *)(a1 + 176) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_109;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_146;
            case 0x11u:
              *(_DWORD *)(a1 + 176) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_109;
              }
              *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
              goto LABEL_146;
            case 0x12u:
              *(_DWORD *)(a1 + 176) |= 0x200000u;
              unint64_t v45 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v46 = *(void *)this;
              if (v45 > 0xFFFFFFFFFFFFFFF5 || v45 + 10 > v2)
              {
                char v67 = 0;
                unsigned int v68 = 0;
                uint64_t v49 = 0;
                if (v2 <= v45) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v45)
                  {
                    LODWORD(v49) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_176;
                  }
                  unint64_t v69 = v45++;
                  char v70 = *(unsigned char *)(v46 + v69);
                  *((void *)this + 1) = v45;
                  v49 |= (unint64_t)(v70 & 0x7F) << v67;
                  if ((v70 & 0x80) == 0) {
                    break;
                  }
                  v67 += 7;
                  BOOL v14 = v68++ > 8;
                  if (v14)
                  {
                    LODWORD(v49) = 0;
LABEL_175:
                    unint64_t v2 = v69 + 1;
                    goto LABEL_176;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v49) = 0;
                }
                goto LABEL_175;
              }
              char v47 = 0;
              unsigned int v48 = 0;
              uint64_t v49 = 0;
              do
              {
                unint64_t v2 = v45 + 1;
                *((void *)this + 1) = v45 + 1;
                char v50 = *(unsigned char *)(v46 + v45);
                v49 |= (unint64_t)(v50 & 0x7F) << v47;
                if ((v50 & 0x80) == 0) {
                  goto LABEL_176;
                }
                v47 += 7;
                unint64_t v45 = v2;
                BOOL v14 = v48++ > 8;
              }
              while (!v14);
              LODWORD(v49) = 0;
LABEL_176:
              *(_DWORD *)(a1 + 172) = v49;
LABEL_147:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 0x13u:
              *(_DWORD *)(a1 + 176) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_109;
              }
              *(void *)(a1 + 64) = *(void *)(*(void *)this + v2);
              goto LABEL_146;
            case 0x14u:
              *(_DWORD *)(a1 + 176) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_109;
              }
              *(void *)(a1 + 80) = *(void *)(*(void *)this + v2);
              goto LABEL_146;
            case 0x15u:
              *(_DWORD *)(a1 + 176) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_109;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_146;
            case 0x16u:
              *(_DWORD *)(a1 + 176) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 96) = *(void *)(*(void *)this + v2);
LABEL_146:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_109:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_147;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_147;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B30428(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 176);
  if ((v4 & 8) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 32));
    int v4 = *(_DWORD *)(v3 + 176);
    if ((v4 & 0x10) == 0)
    {
LABEL_3:
      if ((v4 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_26;
    }
  }
  else if ((v4 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40));
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 0x20) == 0)
  {
LABEL_4:
    if ((v4 & 0x40) == 0) {
      goto LABEL_5;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48));
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 0x40) == 0)
  {
LABEL_5:
    if ((v4 & 0x100) == 0) {
      goto LABEL_6;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 56));
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 0x100) == 0)
  {
LABEL_6:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 72));
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 0x1000) == 0)
  {
LABEL_7:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 104));
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 0x4000) == 0)
  {
LABEL_8:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 120));
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 0x8000) == 0)
  {
LABEL_9:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 128));
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 0x2000) == 0)
  {
LABEL_10:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 112));
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 0x10000) == 0)
  {
LABEL_11:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 0x20000) == 0)
  {
LABEL_12:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 0x40000) == 0)
  {
LABEL_13:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 0x80000) == 0)
  {
LABEL_14:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 160));
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 0x100000) == 0)
  {
LABEL_15:
    if ((v4 & 0x400) == 0) {
      goto LABEL_16;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 0x400) == 0)
  {
LABEL_16:
    if ((v4 & 2) == 0) {
      goto LABEL_17;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 88));
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 2) == 0)
  {
LABEL_17:
    if ((v4 & 4) == 0) {
      goto LABEL_18;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 4) == 0)
  {
LABEL_18:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24));
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 0x200000) == 0)
  {
LABEL_19:
    if ((v4 & 0x80) == 0) {
      goto LABEL_20;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 0x80) == 0)
  {
LABEL_20:
    if ((v4 & 0x200) == 0) {
      goto LABEL_21;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 64));
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 0x200) == 0)
  {
LABEL_21:
    if ((v4 & 1) == 0) {
      goto LABEL_22;
    }
LABEL_44:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
    if ((*(_DWORD *)(v3 + 176) & 0x800) == 0) {
      return result;
    }
    goto LABEL_45;
  }
LABEL_43:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 80));
  int v4 = *(_DWORD *)(v3 + 176);
  if (v4) {
    goto LABEL_44;
  }
LABEL_22:
  if ((v4 & 0x800) == 0) {
    return result;
  }
LABEL_45:
  double v5 = *(double *)(v3 + 96);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227B306C8(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC1FD28;
  *(_DWORD *)(result + 112) = 0;
  return result;
}

void sub_227B306F0(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227B30728(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC1FD28;
  *(_DWORD *)(a1 + 112) = 0;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 4) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 24);
    int v3 = 4;
    *(_DWORD *)(a1 + 112) = 4;
    *(void *)(a1 + 24) = v4;
    int v2 = *(_DWORD *)(a2 + 112);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_5:
    uint64_t v4 = *(void *)(a2 + 16);
    v3 |= 2u;
    *(_DWORD *)(a1 + 112) = v3;
    *(void *)(a1 + 16) = v4;
    int v2 = *(_DWORD *)(a2 + 112);
  }
LABEL_6:
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    v3 |= 1u;
    *(_DWORD *)(a1 + 112) = v3;
    *(void *)(a1 + 8) = v4;
    int v2 = *(_DWORD *)(a2 + 112);
    if ((v2 & 0x400) == 0)
    {
LABEL_8:
      if ((v2 & 0x400000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_30;
    }
  }
  else if ((v2 & 0x400) == 0)
  {
    goto LABEL_8;
  }
  LODWORD(v4) = *(_DWORD *)(a2 + 60);
  v3 |= 0x400u;
  *(_DWORD *)(a1 + 112) = v3;
  *(_DWORD *)(a1 + 60) = v4;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x400000) == 0)
  {
LABEL_9:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_31;
  }
LABEL_30:
  LODWORD(v4) = *(_DWORD *)(a2 + 108);
  v3 |= 0x400000u;
  *(_DWORD *)(a1 + 112) = v3;
  *(_DWORD *)(a1 + 108) = v4;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x2000) == 0)
  {
LABEL_10:
    if ((v2 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_32;
  }
LABEL_31:
  LODWORD(v4) = *(_DWORD *)(a2 + 72);
  v3 |= 0x2000u;
  *(_DWORD *)(a1 + 112) = v3;
  *(_DWORD *)(a1 + 72) = v4;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x100) == 0)
  {
LABEL_11:
    if ((v2 & 0x800) == 0) {
      goto LABEL_12;
    }
    goto LABEL_33;
  }
LABEL_32:
  LODWORD(v4) = *(_DWORD *)(a2 + 52);
  v3 |= 0x100u;
  *(_DWORD *)(a1 + 112) = v3;
  *(_DWORD *)(a1 + 52) = v4;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x800) == 0)
  {
LABEL_12:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_34;
  }
LABEL_33:
  int v5 = *(_DWORD *)(a2 + 64);
  v3 |= 0x800u;
  *(_DWORD *)(a1 + 112) = v3;
  *(_DWORD *)(a1 + 64) = v5;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x100000) == 0)
  {
LABEL_13:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_35;
  }
LABEL_34:
  int v6 = *(_DWORD *)(a2 + 100);
  v3 |= 0x100000u;
  *(_DWORD *)(a1 + 112) = v3;
  *(_DWORD *)(a1 + 100) = v6;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x200000) == 0)
  {
LABEL_14:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_36;
  }
LABEL_35:
  LODWORD(v4) = *(_DWORD *)(a2 + 104);
  v3 |= 0x200000u;
  *(_DWORD *)(a1 + 112) = v3;
  *(_DWORD *)(a1 + 104) = v4;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x40000) == 0)
  {
LABEL_15:
    if ((v2 & 0x80) == 0) {
      goto LABEL_16;
    }
    goto LABEL_37;
  }
LABEL_36:
  LODWORD(v4) = *(_DWORD *)(a2 + 92);
  v3 |= 0x40000u;
  *(_DWORD *)(a1 + 112) = v3;
  *(_DWORD *)(a1 + 92) = v4;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x80) == 0)
  {
LABEL_16:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_38;
  }
LABEL_37:
  LODWORD(v4) = *(_DWORD *)(a2 + 48);
  v3 |= 0x80u;
  *(_DWORD *)(a1 + 112) = v3;
  *(_DWORD *)(a1 + 48) = v4;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x10000) == 0)
  {
LABEL_17:
    if ((v2 & 0x20) == 0) {
      goto LABEL_18;
    }
    goto LABEL_39;
  }
LABEL_38:
  LODWORD(v4) = *(_DWORD *)(a2 + 84);
  v3 |= 0x10000u;
  *(_DWORD *)(a1 + 112) = v3;
  *(_DWORD *)(a1 + 84) = v4;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x20) == 0)
  {
LABEL_18:
    if ((v2 & 0x200) == 0) {
      goto LABEL_19;
    }
    goto LABEL_40;
  }
LABEL_39:
  LODWORD(v4) = *(_DWORD *)(a2 + 40);
  v3 |= 0x20u;
  *(_DWORD *)(a1 + 112) = v3;
  *(_DWORD *)(a1 + 40) = v4;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x200) == 0)
  {
LABEL_19:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_41;
  }
LABEL_40:
  LODWORD(v4) = *(_DWORD *)(a2 + 56);
  v3 |= 0x200u;
  *(_DWORD *)(a1 + 112) = v3;
  *(_DWORD *)(a1 + 56) = v4;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x1000) == 0)
  {
LABEL_20:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_42;
  }
LABEL_41:
  LODWORD(v4) = *(_DWORD *)(a2 + 68);
  v3 |= 0x1000u;
  *(_DWORD *)(a1 + 112) = v3;
  *(_DWORD *)(a1 + 68) = v4;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x80000) == 0)
  {
LABEL_21:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_43;
  }
LABEL_42:
  LODWORD(v4) = *(_DWORD *)(a2 + 96);
  v3 |= 0x80000u;
  *(_DWORD *)(a1 + 112) = v3;
  *(_DWORD *)(a1 + 96) = v4;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x20000) == 0)
  {
LABEL_22:
    if ((v2 & 0x40) == 0) {
      goto LABEL_23;
    }
    goto LABEL_44;
  }
LABEL_43:
  LODWORD(v4) = *(_DWORD *)(a2 + 88);
  v3 |= 0x20000u;
  *(_DWORD *)(a1 + 112) = v3;
  *(_DWORD *)(a1 + 88) = v4;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x40) == 0)
  {
LABEL_23:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_45;
  }
LABEL_44:
  LODWORD(v4) = *(_DWORD *)(a2 + 44);
  v3 |= 0x40u;
  *(_DWORD *)(a1 + 112) = v3;
  *(_DWORD *)(a1 + 44) = v4;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x4000) == 0)
  {
LABEL_24:
    if ((v2 & 8) == 0) {
      goto LABEL_25;
    }
    goto LABEL_46;
  }
LABEL_45:
  LODWORD(v4) = *(_DWORD *)(a2 + 76);
  v3 |= 0x4000u;
  *(_DWORD *)(a1 + 112) = v3;
  *(_DWORD *)(a1 + 76) = v4;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 8) == 0)
  {
LABEL_25:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_47;
  }
LABEL_46:
  LODWORD(v4) = *(_DWORD *)(a2 + 32);
  v3 |= 8u;
  *(_DWORD *)(a1 + 112) = v3;
  *(_DWORD *)(a1 + 32) = v4;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x8000) == 0)
  {
LABEL_26:
    if ((v2 & 0x10) == 0) {
      return *(float *)&v4;
    }
    goto LABEL_48;
  }
LABEL_47:
  LODWORD(v4) = *(_DWORD *)(a2 + 80);
  v3 |= 0x8000u;
  *(_DWORD *)(a1 + 112) = v3;
  *(_DWORD *)(a1 + 80) = v4;
  if ((*(_DWORD *)(a2 + 112) & 0x10) == 0) {
    return *(float *)&v4;
  }
LABEL_48:
  LODWORD(v4) = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 112) = v3 | 0x10;
  *(_DWORD *)(a1 + 36) = v4;
  return *(float *)&v4;
}

uint64_t sub_227B309D8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 8) != 0)
  {
    PB::TextFormatter::format(this, "averageCadence", *(float *)(a1 + 32));
    int v5 = *(_DWORD *)(a1 + 112);
    if ((v5 & 0x10) == 0)
    {
LABEL_3:
      if ((v5 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_30;
    }
  }
  else if ((v5 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "averageHeartRate", *(float *)(a1 + 36));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x20) == 0)
  {
LABEL_4:
    if ((v5 & 0x40) == 0) {
      goto LABEL_5;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "averagePace", *(float *)(a1 + 40));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x40) == 0)
  {
LABEL_5:
    if ((v5 & 0x80) == 0) {
      goto LABEL_6;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(this, "averagePower", *(float *)(a1 + 44));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x80) == 0)
  {
LABEL_6:
    if ((v5 & 0x100) == 0) {
      goto LABEL_7;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(this, "averageSpeed", *(float *)(a1 + 48));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x100) == 0)
  {
LABEL_7:
    if ((v5 & 1) == 0) {
      goto LABEL_8;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(this, "crossTrainerDistance", *(float *)(a1 + 52));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 1) == 0)
  {
LABEL_8:
    if ((v5 & 0x200) == 0) {
      goto LABEL_9;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "elapsedTime", *(double *)(a1 + 8));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x200) == 0)
  {
LABEL_9:
    if ((v5 & 0x400) == 0) {
      goto LABEL_10;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "elevationGain", *(float *)(a1 + 56));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x400) == 0)
  {
LABEL_10:
    if ((v5 & 0x800) == 0) {
      goto LABEL_11;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "energy", *(float *)(a1 + 60));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x800) == 0)
  {
LABEL_11:
    if ((v5 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "floors");
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 2) == 0)
  {
LABEL_12:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "globalMachtime", *(double *)(a1 + 16));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x1000) == 0)
  {
LABEL_13:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "inclination", *(float *)(a1 + 68));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x2000) == 0)
  {
LABEL_14:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "indoorBikeDistance", *(float *)(a1 + 72));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x4000) == 0)
  {
LABEL_15:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "instantaneousCadence", *(float *)(a1 + 76));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x8000) == 0)
  {
LABEL_16:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "instantaneousHeartRate", *(float *)(a1 + 80));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x10000) == 0)
  {
LABEL_17:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "instantaneousPace", *(float *)(a1 + 84));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x20000) == 0)
  {
LABEL_18:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "instantaneousPower", *(float *)(a1 + 88));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x40000) == 0)
  {
LABEL_19:
    if ((v5 & 4) == 0) {
      goto LABEL_20;
    }
    goto LABEL_46;
  }
LABEL_45:
  PB::TextFormatter::format(this, "instantaneousSpeed", *(float *)(a1 + 92));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 4) == 0)
  {
LABEL_20:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_47;
  }
LABEL_46:
  PB::TextFormatter::format(this, "localMachtime", *(double *)(a1 + 24));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x80000) == 0)
  {
LABEL_21:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(this, "resistanceLevel", *(float *)(a1 + 96));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x100000) == 0)
  {
LABEL_22:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(this, "stepCount");
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x200000) == 0)
  {
LABEL_23:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
LABEL_49:
  PB::TextFormatter::format(this, "strideCount", *(float *)(a1 + 104));
  if ((*(_DWORD *)(a1 + 112) & 0x400000) != 0) {
LABEL_24:
  }
    PB::TextFormatter::format(this, "treadmillDistance", *(float *)(a1 + 108));
LABEL_25:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B30CFC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_DWORD *)(a1 + 112) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_101;
              }
              *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
              goto LABEL_33;
            case 2u:
              *(_DWORD *)(a1 + 112) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_101;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_33;
            case 3u:
              *(_DWORD *)(a1 + 112) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_101;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
LABEL_33:
              unint64_t v2 = *((void *)this + 1) + 8;
              goto LABEL_118;
            case 4u:
              *(_DWORD *)(a1 + 112) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_101;
              }
              *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_117;
            case 5u:
              *(_DWORD *)(a1 + 112) |= 0x400000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_101;
              }
              *(_DWORD *)(a1 + 108) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_117;
            case 6u:
              *(_DWORD *)(a1 + 112) |= 0x2000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_101;
              }
              *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_117;
            case 7u:
              *(_DWORD *)(a1 + 112) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_101;
              }
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_117;
            case 8u:
              *(_DWORD *)(a1 + 112) |= 0x800u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v33 = 0;
                unsigned int v34 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_128;
                  }
                  unint64_t v35 = v21++;
                  char v36 = *(unsigned char *)(v22 + v35);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v36 & 0x7F) << v33;
                  if ((v36 & 0x80) == 0) {
                    break;
                  }
                  v33 += 7;
                  BOOL v14 = v34++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_127:
                    unint64_t v2 = v35 + 1;
                    goto LABEL_128;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_127;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_128;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_128:
              *(_DWORD *)(a1 + 64) = v25;
              goto LABEL_119;
            case 9u:
              *(_DWORD *)(a1 + 112) |= 0x100000u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v37 = 0;
                unsigned int v38 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_133;
                  }
                  unint64_t v39 = v27++;
                  char v40 = *(unsigned char *)(v28 + v39);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v40 & 0x7F) << v37;
                  if ((v40 & 0x80) == 0) {
                    break;
                  }
                  v37 += 7;
                  BOOL v14 = v38++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_132:
                    unint64_t v2 = v39 + 1;
                    goto LABEL_133;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_132;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_133;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_133:
              *(_DWORD *)(a1 + 100) = v31;
LABEL_119:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 0xAu:
              *(_DWORD *)(a1 + 112) |= 0x200000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_101;
              }
              *(_DWORD *)(a1 + 104) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_117;
            case 0xBu:
              *(_DWORD *)(a1 + 112) |= 0x40000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_101;
              }
              *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_117;
            case 0xCu:
              *(_DWORD *)(a1 + 112) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_101;
              }
              *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_117;
            case 0xDu:
              *(_DWORD *)(a1 + 112) |= 0x10000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_101;
              }
              *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_117;
            case 0xEu:
              *(_DWORD *)(a1 + 112) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_101;
              }
              *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_117;
            case 0xFu:
              *(_DWORD *)(a1 + 112) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_101;
              }
              *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_117;
            case 0x10u:
              *(_DWORD *)(a1 + 112) |= 0x1000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_101;
              }
              *(_DWORD *)(a1 + 68) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_117;
            case 0x11u:
              *(_DWORD *)(a1 + 112) |= 0x80000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_101;
              }
              *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_117;
            case 0x12u:
              *(_DWORD *)(a1 + 112) |= 0x20000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_101;
              }
              *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_117;
            case 0x13u:
              *(_DWORD *)(a1 + 112) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_101;
              }
              *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_117;
            case 0x14u:
              *(_DWORD *)(a1 + 112) |= 0x4000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_101;
              }
              *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_117;
            case 0x15u:
              *(_DWORD *)(a1 + 112) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_101;
              }
              *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_117;
            case 0x16u:
              *(_DWORD *)(a1 + 112) |= 0x8000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_101;
              }
              *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_117;
            case 0x17u:
              *(_DWORD *)(a1 + 112) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
LABEL_117:
                unint64_t v2 = *((void *)this + 1) + 4;
LABEL_118:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_101:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_119;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_119;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B31558(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 112);
  if ((v4 & 4) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 24));
    int v4 = *(_DWORD *)(v3 + 112);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_27;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 1) == 0)
  {
LABEL_4:
    if ((v4 & 0x400) == 0) {
      goto LABEL_5;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x400) == 0)
  {
LABEL_5:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 60));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x400000) == 0)
  {
LABEL_6:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 108));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x2000) == 0)
  {
LABEL_7:
    if ((v4 & 0x100) == 0) {
      goto LABEL_8;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x100) == 0)
  {
LABEL_8:
    if ((v4 & 0x800) == 0) {
      goto LABEL_9;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x800) == 0)
  {
LABEL_9:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x100000) == 0)
  {
LABEL_10:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x200000) == 0)
  {
LABEL_11:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 104));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x40000) == 0)
  {
LABEL_12:
    if ((v4 & 0x80) == 0) {
      goto LABEL_13;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 92));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x80) == 0)
  {
LABEL_13:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x10000) == 0)
  {
LABEL_14:
    if ((v4 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x20) == 0)
  {
LABEL_15:
    if ((v4 & 0x200) == 0) {
      goto LABEL_16;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x200) == 0)
  {
LABEL_16:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x1000) == 0)
  {
LABEL_17:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 68));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x80000) == 0)
  {
LABEL_18:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 96));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x20000) == 0)
  {
LABEL_19:
    if ((v4 & 0x40) == 0) {
      goto LABEL_20;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 88));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x40) == 0)
  {
LABEL_20:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x4000) == 0)
  {
LABEL_21:
    if ((v4 & 8) == 0) {
      goto LABEL_22;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 8) == 0)
  {
LABEL_22:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_23;
    }
LABEL_46:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80));
    if ((*(_DWORD *)(v3 + 112) & 0x10) == 0) {
      return result;
    }
    goto LABEL_47;
  }
LABEL_45:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x8000) != 0) {
    goto LABEL_46;
  }
LABEL_23:
  if ((v4 & 0x10) == 0) {
    return result;
  }
LABEL_47:
  float v5 = *(float *)(v3 + 36);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227B31814(uint64_t result)
{
  *(_DWORD *)(result + 48) = 0;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)uint64_t result = &unk_26DC1FD60;
  return result;
}

void sub_227B3183C(PB::Base *this)
{
  *(void *)this = &unk_26DC1FD60;
  uint64_t v4 = *((void *)this + 2);
  unint64_t v2 = (void *)((char *)this + 16);
  uint64_t v3 = v4;
  *unint64_t v2 = 0;
  if (v4) {
    sub_227B8B690((uint64_t)v2, v3);
  }
  uint64_t v5 = *((void *)this + 1);
  *((void *)this + 1) = 0;
  if (v5) {
    sub_227B8B690((uint64_t)this + 8, v5);
  }

  PB::Base::~Base(this);
}

void sub_227B318B4(PB::Base *a1)
{
  sub_227B3183C(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B318EC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 8) = 0;
  *(void *)uint64_t result = &unk_26DC1FD60;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 48) = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  if (*(void *)(a2 + 16)) {
    operator new();
  }
  char v2 = *(unsigned char *)(a2 + 48);
  if ((v2 & 4) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 36);
    *(unsigned char *)(result + 48) |= 4u;
    *(_DWORD *)(result + 36) = v4;
    char v2 = *(unsigned char *)(a2 + 48);
    if ((v2 & 2) == 0)
    {
LABEL_7:
      if ((v2 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(a2 + 48) & 2) == 0)
  {
    goto LABEL_7;
  }
  int v5 = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(result + 48) |= 2u;
  *(_DWORD *)(result + 32) = v5;
  char v2 = *(unsigned char *)(a2 + 48);
  if ((v2 & 8) == 0)
  {
LABEL_8:
    if ((v2 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_15;
  }
LABEL_14:
  int v6 = *(_DWORD *)(a2 + 40);
  *(unsigned char *)(result + 48) |= 8u;
  *(_DWORD *)(result + 40) = v6;
  char v2 = *(unsigned char *)(a2 + 48);
  if ((v2 & 0x10) == 0)
  {
LABEL_9:
    if ((v2 & 1) == 0) {
      return result;
    }
    goto LABEL_10;
  }
LABEL_15:
  char v7 = *(unsigned char *)(a2 + 44);
  *(unsigned char *)(result + 48) |= 0x10u;
  *(unsigned char *)(result + 44) = v7;
  if ((*(unsigned char *)(a2 + 48) & 1) == 0) {
    return result;
  }
LABEL_10:
  uint64_t v3 = *(void *)(a2 + 24);
  *(unsigned char *)(result + 48) |= 1u;
  *(void *)(result + 24) = v3;
  return result;
}

uint64_t sub_227B31AC4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(void *)(a1 + 8)) {
    PB::TextFormatter::format();
  }
  char v5 = *(unsigned char *)(a1 + 48);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "modeSemanticType");
    char v5 = *(unsigned char *)(a1 + 48);
    if ((v5 & 4) == 0)
    {
LABEL_5:
      if ((v5 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
  }
  else if ((*(unsigned char *)(a1 + 48) & 4) == 0)
  {
    goto LABEL_5;
  }
  PB::TextFormatter::format(this, "modeUpdateReason");
  if ((*(unsigned char *)(a1 + 48) & 8) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "modeUpdateSource");
LABEL_7:
  if (*(void *)(a1 + 16)) {
    PB::TextFormatter::format();
  }
  char v6 = *(unsigned char *)(a1 + 48);
  if ((v6 & 0x10) != 0)
  {
    PB::TextFormatter::format(this, "starting");
    char v6 = *(unsigned char *)(a1 + 48);
  }
  if (v6) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 24));
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B31BD0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          operator new();
        case 2u:
          operator new();
        case 3u:
          *(unsigned char *)(a1 + 48) |= 4u;
          unint64_t v21 = *((void *)this + 1);
          unint64_t v22 = *((void *)this + 2);
          uint64_t v23 = *(void *)this;
          if (v21 <= 0xFFFFFFFFFFFFFFF5 && v21 + 10 <= v22)
          {
            char v24 = 0;
            unsigned int v25 = 0;
            uint64_t v26 = 0;
            do
            {
              unint64_t v27 = v21 + 1;
              *((void *)this + 1) = v21 + 1;
              char v28 = *(unsigned char *)(v23 + v21);
              v26 |= (unint64_t)(v28 & 0x7F) << v24;
              if ((v28 & 0x80) == 0) {
                goto LABEL_79;
              }
              v24 += 7;
              unint64_t v21 = v27;
              BOOL v14 = v25++ > 8;
            }
            while (!v14);
LABEL_58:
            LODWORD(v26) = 0;
            goto LABEL_79;
          }
          char v50 = 0;
          unsigned int v51 = 0;
          uint64_t v26 = 0;
          if (v22 <= v21) {
            unint64_t v22 = *((void *)this + 1);
          }
          while (2)
          {
            if (v22 == v21)
            {
              LODWORD(v26) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v52 = v21 + 1;
              char v53 = *(unsigned char *)(v23 + v21);
              *((void *)this + 1) = v52;
              v26 |= (unint64_t)(v53 & 0x7F) << v50;
              if (v53 < 0)
              {
                v50 += 7;
                unint64_t v21 = v52;
                BOOL v14 = v51++ > 8;
                if (v14) {
                  goto LABEL_58;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v26) = 0;
              }
            }
            break;
          }
LABEL_79:
          *(_DWORD *)(a1 + 36) = v26;
          goto LABEL_88;
        case 4u:
          *(unsigned char *)(a1 + 48) |= 2u;
          unint64_t v29 = *((void *)this + 1);
          unint64_t v30 = *((void *)this + 2);
          uint64_t v31 = *(void *)this;
          if (v29 <= 0xFFFFFFFFFFFFFFF5 && v29 + 10 <= v30)
          {
            char v32 = 0;
            unsigned int v33 = 0;
            uint64_t v34 = 0;
            do
            {
              unint64_t v35 = v29 + 1;
              *((void *)this + 1) = v29 + 1;
              char v36 = *(unsigned char *)(v31 + v29);
              v34 |= (unint64_t)(v36 & 0x7F) << v32;
              if ((v36 & 0x80) == 0) {
                goto LABEL_83;
              }
              v32 += 7;
              unint64_t v29 = v35;
              BOOL v14 = v33++ > 8;
            }
            while (!v14);
LABEL_65:
            LODWORD(v34) = 0;
            goto LABEL_83;
          }
          char v54 = 0;
          unsigned int v55 = 0;
          uint64_t v34 = 0;
          if (v30 <= v29) {
            unint64_t v30 = *((void *)this + 1);
          }
          while (2)
          {
            if (v30 == v29)
            {
              LODWORD(v34) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v56 = v29 + 1;
              char v57 = *(unsigned char *)(v31 + v29);
              *((void *)this + 1) = v56;
              v34 |= (unint64_t)(v57 & 0x7F) << v54;
              if (v57 < 0)
              {
                v54 += 7;
                unint64_t v29 = v56;
                BOOL v14 = v55++ > 8;
                if (v14) {
                  goto LABEL_65;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v34) = 0;
              }
            }
            break;
          }
LABEL_83:
          *(_DWORD *)(a1 + 32) = v34;
          goto LABEL_88;
        case 5u:
          *(unsigned char *)(a1 + 48) |= 8u;
          unint64_t v37 = *((void *)this + 1);
          unint64_t v38 = *((void *)this + 2);
          uint64_t v39 = *(void *)this;
          if (v37 <= 0xFFFFFFFFFFFFFFF5 && v37 + 10 <= v38)
          {
            char v40 = 0;
            unsigned int v41 = 0;
            uint64_t v42 = 0;
            do
            {
              unint64_t v43 = v37 + 1;
              *((void *)this + 1) = v37 + 1;
              char v44 = *(unsigned char *)(v39 + v37);
              v42 |= (unint64_t)(v44 & 0x7F) << v40;
              if ((v44 & 0x80) == 0) {
                goto LABEL_87;
              }
              v40 += 7;
              unint64_t v37 = v43;
              BOOL v14 = v41++ > 8;
            }
            while (!v14);
LABEL_72:
            LODWORD(v42) = 0;
            goto LABEL_87;
          }
          char v58 = 0;
          unsigned int v59 = 0;
          uint64_t v42 = 0;
          if (v38 <= v37) {
            unint64_t v38 = *((void *)this + 1);
          }
          break;
        case 6u:
          *(unsigned char *)(a1 + 48) |= 0x10u;
          unint64_t v45 = *((void *)this + 1);
          if (v45 >= *((void *)this + 2))
          {
            BOOL v48 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v46 = v45 + 1;
            int v47 = *(unsigned __int8 *)(*(void *)this + v45);
            *((void *)this + 1) = v46;
            BOOL v48 = v47 != 0;
          }
          *(unsigned char *)(a1 + 44) = v48;
          goto LABEL_88;
        case 7u:
          *(unsigned char *)(a1 + 48) |= 1u;
          unint64_t v49 = *((void *)this + 1);
          if (v49 <= 0xFFFFFFFFFFFFFFF7 && v49 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 24) = *(void *)(*(void *)this + v49);
            *((void *)this + 1) += 8;
          }
          else
          {
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_88;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          goto LABEL_88;
      }
      while (1)
      {
        if (v38 == v37)
        {
          LODWORD(v42) = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_87;
        }
        unint64_t v60 = v37 + 1;
        char v61 = *(unsigned char *)(v39 + v37);
        *((void *)this + 1) = v60;
        v42 |= (unint64_t)(v61 & 0x7F) << v58;
        if ((v61 & 0x80) == 0) {
          break;
        }
        v58 += 7;
        unint64_t v37 = v60;
        BOOL v14 = v59++ > 8;
        if (v14) {
          goto LABEL_72;
        }
      }
      if (*((unsigned char *)this + 24)) {
        LODWORD(v42) = 0;
      }
LABEL_87:
      *(_DWORD *)(a1 + 40) = v42;
LABEL_88:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B32160(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  if (*(void *)(result + 8)) {
    uint64_t result = PB::Writer::write();
  }
  if (*(void *)(v3 + 16)) {
    uint64_t result = PB::Writer::write();
  }
  char v4 = *(unsigned char *)(v3 + 48);
  if ((v4 & 4) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 48);
    if ((v4 & 2) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
  }
  else if ((*(unsigned char *)(v3 + 48) & 2) == 0)
  {
    goto LABEL_7;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 48);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
LABEL_14:
    uint64_t result = PB::Writer::write(this);
    if ((*(unsigned char *)(v3 + 48) & 1) == 0) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_13:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 48);
  if ((v4 & 0x10) != 0) {
    goto LABEL_14;
  }
LABEL_9:
  if ((v4 & 1) == 0) {
    return result;
  }
LABEL_15:
  double v5 = *(double *)(v3 + 24);

  return PB::Writer::write(this, v5);
}

double sub_227B3224C(uint64_t a1)
{
  *(void *)a1 = &unk_26DC1FD98;
  *(_DWORD *)(a1 + 64) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return result;
}

void sub_227B32280(PB::Base *this)
{
  *(void *)this = &unk_26DC1FD98;
  unint64_t v2 = (void *)*((void *)this + 4);
  if (v2)
  {
    *((void *)this + 5) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 2) = v3;
    operator delete(v3);
  }

  PB::Base::~Base(this);
}

void sub_227B322F4(PB::Base *a1)
{
  sub_227B32280(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B3232C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC1FD98;
  *(_OWORD *)(a1 + 8) = 0u;
  char v4 = (char *)(a1 + 8);
  *(_DWORD *)(a1 + 64) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  if (*(unsigned char *)(a2 + 64))
  {
    uint64_t v5 = *(void *)(a2 + 56);
    *(unsigned char *)(a1 + 64) = 1;
    *(void *)(a1 + 56) = v5;
  }
  if (a1 != a2)
  {
    sub_227B8BA68(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
    sub_227B8BA68((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
  }
  return a1;
}

uint64_t sub_227B323D0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(float **)(a1 + 8);
  char v6 = *(float **)(a1 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    PB::TextFormatter::format(this, "freq", v7);
  }
  uint64_t v8 = *(float **)(a1 + 32);
  char v9 = *(float **)(a1 + 40);
  while (v8 != v9)
  {
    float v10 = *v8++;
    PB::TextFormatter::format(this, "mag", v10);
  }
  if (*(unsigned char *)(a1 + 64)) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 56));
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227B32498(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = (void **)(a1 + 32);
    uint64_t v9 = a1 + 48;
    float v10 = (void **)(a1 + 8);
    uint64_t v11 = a1 + 24;
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        unint64_t v15 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v21 = v2 + 1;
          char v22 = *(unsigned char *)(v12 + v2);
          *((void *)this + 1) = v21;
          v15 |= (unint64_t)(v22 & 0x7F) << v19;
          if ((v22 & 0x80) == 0) {
            goto LABEL_21;
          }
          v19 += 7;
          unint64_t v2 = v21;
          if (v20++ >= 9)
          {
LABEL_20:
            unint64_t v15 = 0;
            goto LABEL_21;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
        return v4 == 0;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        if (v14++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v24 = v15 & 7;
      if (v24 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v25 = v15 >> 3;
      if ((v15 >> 3) == 3) {
        break;
      }
      if (v25 == 2)
      {
        if (v24 == 2)
        {
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v42 = *((void *)this + 1);
          unint64_t v43 = *((void *)this + 2);
          while (v42 < v43 && !*((unsigned char *)this + 24))
          {
            unint64_t v45 = *(char **)(a1 + 16);
            unint64_t v44 = *(void *)(a1 + 24);
            if ((unint64_t)v45 >= v44)
            {
              int v47 = (char *)*v10;
              uint64_t v48 = (v45 - (unsigned char *)*v10) >> 2;
              unint64_t v49 = v48 + 1;
              if ((unint64_t)(v48 + 1) >> 62) {
                goto LABEL_128;
              }
              uint64_t v50 = v44 - (void)v47;
              if (v50 >> 1 > v49) {
                unint64_t v49 = v50 >> 1;
              }
              if ((unint64_t)v50 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v51 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v51 = v49;
              }
              if (v51)
              {
                unint64_t v52 = (char *)sub_227B8BBB8(v11, v51);
                int v47 = *(char **)(a1 + 8);
                unint64_t v45 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v52 = 0;
              }
              char v53 = &v52[4 * v48];
              *(_DWORD *)char v53 = 0;
              unint64_t v46 = v53 + 4;
              while (v45 != v47)
              {
                int v54 = *((_DWORD *)v45 - 1);
                v45 -= 4;
                *((_DWORD *)v53 - 1) = v54;
                v53 -= 4;
              }
              *(void *)(a1 + 8) = v53;
              *(void *)(a1 + 16) = v46;
              *(void *)(a1 + 24) = &v52[4 * v51];
              if (v47) {
                operator delete(v47);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v45 = 0;
              unint64_t v46 = v45 + 4;
            }
            *(void *)(a1 + 16) = v46;
            unint64_t v55 = *((void *)this + 1);
            if (v55 > 0xFFFFFFFFFFFFFFFBLL || v55 + 4 > *((void *)this + 2)) {
              goto LABEL_82;
            }
            *(v46 - 1) = *(_DWORD *)(*(void *)this + v55);
            unint64_t v43 = *((void *)this + 2);
            unint64_t v42 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v42;
          }
          goto LABEL_83;
        }
        unint64_t v60 = *(char **)(a1 + 16);
        unint64_t v59 = *(void *)(a1 + 24);
        if ((unint64_t)v60 >= v59)
        {
          char v67 = (char *)*v10;
          uint64_t v68 = (v60 - (unsigned char *)*v10) >> 2;
          unint64_t v69 = v68 + 1;
          if ((unint64_t)(v68 + 1) >> 62) {
LABEL_128:
          }
            sub_227B8B89C();
          uint64_t v70 = v59 - (void)v67;
          if (v70 >> 1 > v69) {
            unint64_t v69 = v70 >> 1;
          }
          if ((unint64_t)v70 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v71 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v71 = v69;
          }
          if (v71)
          {
            unint64_t v72 = (char *)sub_227B8BBB8(v11, v71);
            char v67 = *(char **)(a1 + 8);
            unint64_t v60 = *(char **)(a1 + 16);
          }
          else
          {
            unint64_t v72 = 0;
          }
          unint64_t v75 = &v72[4 * v68];
          *(_DWORD *)unint64_t v75 = 0;
          char v58 = v75 + 4;
          while (v60 != v67)
          {
            int v76 = *((_DWORD *)v60 - 1);
            v60 -= 4;
            *((_DWORD *)v75 - 1) = v76;
            v75 -= 4;
          }
          *(void *)(a1 + 8) = v75;
          *(void *)(a1 + 16) = v58;
          *(void *)(a1 + 24) = &v72[4 * v71];
          if (v67) {
            operator delete(v67);
          }
        }
        else
        {
          *(_DWORD *)unint64_t v60 = 0;
          char v58 = v60 + 4;
        }
        *(void *)(a1 + 16) = v58;
LABEL_114:
        unint64_t v77 = *((void *)this + 1);
        if (v77 > 0xFFFFFFFFFFFFFFFBLL || v77 + 4 > *((void *)this + 2))
        {
LABEL_116:
          *((unsigned char *)this + 24) = 1;
          goto LABEL_119;
        }
        *(v58 - 1) = *(_DWORD *)(*(void *)this + v77);
        uint64_t v27 = *((void *)this + 1) + 4;
        goto LABEL_118;
      }
      if (v25 == 1)
      {
        *(unsigned char *)(a1 + 64) |= 1u;
        unint64_t v26 = *((void *)this + 1);
        if (v26 > 0xFFFFFFFFFFFFFFF7 || v26 + 8 > *((void *)this + 2)) {
          goto LABEL_116;
        }
        *(void *)(a1 + 56) = *(void *)(*(void *)this + v26);
        uint64_t v27 = *((void *)this + 1) + 8;
LABEL_118:
        *((void *)this + 1) = v27;
        goto LABEL_119;
      }
      if ((PB::Reader::skip(this) & 1) == 0) {
        return 0;
      }
LABEL_119:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    if (v24 == 2)
    {
      if (PB::Reader::placeMark()) {
        return 0;
      }
      unint64_t v28 = *((void *)this + 1);
      unint64_t v29 = *((void *)this + 2);
      while (v28 < v29 && !*((unsigned char *)this + 24))
      {
        uint64_t v31 = *(char **)(a1 + 40);
        unint64_t v30 = *(void *)(a1 + 48);
        if ((unint64_t)v31 >= v30)
        {
          unsigned int v33 = (char *)*v8;
          uint64_t v34 = (v31 - (unsigned char *)*v8) >> 2;
          unint64_t v35 = v34 + 1;
          if ((unint64_t)(v34 + 1) >> 62) {
            goto LABEL_127;
          }
          uint64_t v36 = v30 - (void)v33;
          if (v36 >> 1 > v35) {
            unint64_t v35 = v36 >> 1;
          }
          if ((unint64_t)v36 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v37 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v37 = v35;
          }
          if (v37)
          {
            unint64_t v38 = (char *)sub_227B8BBB8(v9, v37);
            unsigned int v33 = *(char **)(a1 + 32);
            uint64_t v31 = *(char **)(a1 + 40);
          }
          else
          {
            unint64_t v38 = 0;
          }
          uint64_t v39 = &v38[4 * v34];
          *(_DWORD *)uint64_t v39 = 0;
          char v32 = v39 + 4;
          while (v31 != v33)
          {
            int v40 = *((_DWORD *)v31 - 1);
            v31 -= 4;
            *((_DWORD *)v39 - 1) = v40;
            v39 -= 4;
          }
          *(void *)(a1 + 32) = v39;
          *(void *)(a1 + 40) = v32;
          *(void *)(a1 + 48) = &v38[4 * v37];
          if (v33) {
            operator delete(v33);
          }
        }
        else
        {
          *(_DWORD *)uint64_t v31 = 0;
          char v32 = v31 + 4;
        }
        *(void *)(a1 + 40) = v32;
        unint64_t v41 = *((void *)this + 1);
        if (v41 > 0xFFFFFFFFFFFFFFFBLL || v41 + 4 > *((void *)this + 2))
        {
LABEL_82:
          *((unsigned char *)this + 24) = 1;
          break;
        }
        *(v32 - 1) = *(_DWORD *)(*(void *)this + v41);
        unint64_t v29 = *((void *)this + 2);
        unint64_t v28 = *((void *)this + 1) + 4;
        *((void *)this + 1) = v28;
      }
LABEL_83:
      PB::Reader::recallMark();
      goto LABEL_119;
    }
    char v57 = *(char **)(a1 + 40);
    unint64_t v56 = *(void *)(a1 + 48);
    if ((unint64_t)v57 >= v56)
    {
      char v61 = (char *)*v8;
      uint64_t v62 = (v57 - (unsigned char *)*v8) >> 2;
      unint64_t v63 = v62 + 1;
      if ((unint64_t)(v62 + 1) >> 62) {
LABEL_127:
      }
        sub_227B8B89C();
      uint64_t v64 = v56 - (void)v61;
      if (v64 >> 1 > v63) {
        unint64_t v63 = v64 >> 1;
      }
      if ((unint64_t)v64 >= 0x7FFFFFFFFFFFFFFCLL) {
        unint64_t v65 = 0x3FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v65 = v63;
      }
      if (v65)
      {
        char v66 = (char *)sub_227B8BBB8(v9, v65);
        char v61 = *(char **)(a1 + 32);
        char v57 = *(char **)(a1 + 40);
      }
      else
      {
        char v66 = 0;
      }
      unint64_t v73 = &v66[4 * v62];
      *(_DWORD *)unint64_t v73 = 0;
      char v58 = v73 + 4;
      while (v57 != v61)
      {
        int v74 = *((_DWORD *)v57 - 1);
        v57 -= 4;
        *((_DWORD *)v73 - 1) = v74;
        v73 -= 4;
      }
      *(void *)(a1 + 32) = v73;
      *(void *)(a1 + 40) = v58;
      *(void *)(a1 + 48) = &v66[4 * v65];
      if (v61) {
        operator delete(v61);
      }
    }
    else
    {
      *(_DWORD *)char v57 = 0;
      char v58 = v57 + 4;
    }
    *(void *)(a1 + 40) = v58;
    goto LABEL_114;
  }
  return v4 == 0;
}

uint64_t sub_227B32A14(uint64_t result, PB::Writer *this)
{
  unint64_t v3 = (void *)result;
  if (*(unsigned char *)(result + 64)) {
    double result = PB::Writer::write(this, *(double *)(result + 56));
  }
  int v4 = (float *)v3[1];
  uint64_t v5 = (float *)v3[2];
  while (v4 != v5)
  {
    float v6 = *v4++;
    double result = PB::Writer::write(this, v6);
  }
  uint64_t v8 = (float *)v3[4];
  float v7 = (float *)v3[5];
  while (v8 != v7)
  {
    float v9 = *v8++;
    double result = PB::Writer::write(this, v9);
  }
  return result;
}

void *sub_227B32A98(void *result)
{
  *double result = &unk_26DC1FDD0;
  result[1] = 0;
  return result;
}

void sub_227B32AB8(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC1FDD0;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227B32B38(PB::Base *a1)
{
  sub_227B32AB8(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227B32B70(void *result, uint64_t a2)
{
  *double result = &unk_26DC1FDD0;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227B32C18(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B32C94(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B32E90(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

uint64_t sub_227B32EAC(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC1FE08;
  *(_DWORD *)(result + 100) = 0;
  return result;
}

void sub_227B32ED4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227B32F0C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC1FE08;
  *(_DWORD *)(a1 + 100) = 0;
  int v2 = *(_DWORD *)(a2 + 100);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    int v3 = 1;
    *(_DWORD *)(a1 + 100) = 1;
    *(void *)(a1 + 8) = v4;
    int v2 = *(_DWORD *)(a2 + 100);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 4) != 0)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 24);
    v3 |= 4u;
    *(_DWORD *)(a1 + 100) = v3;
    *(void *)(a1 + 24) = v5;
    int v2 = *(_DWORD *)(a2 + 100);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    v3 |= 2u;
    *(_DWORD *)(a1 + 100) = v3;
    *(void *)(a1 + 16) = v6;
    int v2 = *(_DWORD *)(a2 + 100);
    if ((v2 & 0x200) == 0)
    {
LABEL_8:
      if ((v2 & 0x10000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_31;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_8;
  }
  float result = *(float *)(a2 + 60);
  v3 |= 0x200u;
  *(_DWORD *)(a1 + 100) = v3;
  *(float *)(a1 + 60) = result;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x10000) == 0)
  {
LABEL_9:
    if ((v2 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_32;
  }
LABEL_31:
  float result = *(float *)(a2 + 88);
  v3 |= 0x10000u;
  *(_DWORD *)(a1 + 100) = v3;
  *(float *)(a1 + 88) = result;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x40) == 0)
  {
LABEL_10:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_33;
  }
LABEL_32:
  float result = *(float *)(a2 + 48);
  v3 |= 0x40u;
  *(_DWORD *)(a1 + 100) = v3;
  *(float *)(a1 + 48) = result;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x4000) == 0)
  {
LABEL_11:
    if ((v2 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_34;
  }
LABEL_33:
  float result = *(float *)(a2 + 80);
  v3 |= 0x4000u;
  *(_DWORD *)(a1 + 100) = v3;
  *(float *)(a1 + 80) = result;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x100) == 0)
  {
LABEL_12:
    if ((v2 & 0x80) == 0) {
      goto LABEL_13;
    }
    goto LABEL_35;
  }
LABEL_34:
  float result = *(float *)(a2 + 56);
  v3 |= 0x100u;
  *(_DWORD *)(a1 + 100) = v3;
  *(float *)(a1 + 56) = result;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x80) == 0)
  {
LABEL_13:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_36;
  }
LABEL_35:
  float result = *(float *)(a2 + 52);
  v3 |= 0x80u;
  *(_DWORD *)(a1 + 100) = v3;
  *(float *)(a1 + 52) = result;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x2000) == 0)
  {
LABEL_14:
    if ((v2 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_37;
  }
LABEL_36:
  float result = *(float *)(a2 + 76);
  v3 |= 0x2000u;
  *(_DWORD *)(a1 + 100) = v3;
  *(float *)(a1 + 76) = result;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x20) == 0)
  {
LABEL_15:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_38;
  }
LABEL_37:
  float result = *(float *)(a2 + 44);
  v3 |= 0x20u;
  *(_DWORD *)(a1 + 100) = v3;
  *(float *)(a1 + 44) = result;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x8000) == 0)
  {
LABEL_16:
    if ((v2 & 0x400) == 0) {
      goto LABEL_17;
    }
    goto LABEL_39;
  }
LABEL_38:
  float result = *(float *)(a2 + 84);
  v3 |= 0x8000u;
  *(_DWORD *)(a1 + 100) = v3;
  *(float *)(a1 + 84) = result;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x400) == 0)
  {
LABEL_17:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_40;
  }
LABEL_39:
  float result = *(float *)(a2 + 64);
  v3 |= 0x400u;
  *(_DWORD *)(a1 + 100) = v3;
  *(float *)(a1 + 64) = result;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x800000) == 0)
  {
LABEL_18:
    if ((v2 & 0x800) == 0) {
      goto LABEL_19;
    }
    goto LABEL_41;
  }
LABEL_40:
  char v8 = *(unsigned char *)(a2 + 98);
  v3 |= 0x800000u;
  *(_DWORD *)(a1 + 100) = v3;
  *(unsigned char *)(a1 + 98) = v8;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x800) == 0)
  {
LABEL_19:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_42;
  }
LABEL_41:
  float result = *(float *)(a2 + 68);
  v3 |= 0x800u;
  *(_DWORD *)(a1 + 100) = v3;
  *(float *)(a1 + 68) = result;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x400000) == 0)
  {
LABEL_20:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_43;
  }
LABEL_42:
  char v9 = *(unsigned char *)(a2 + 97);
  v3 |= 0x400000u;
  *(_DWORD *)(a1 + 100) = v3;
  *(unsigned char *)(a1 + 97) = v9;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x80000) == 0)
  {
LABEL_21:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_44;
  }
LABEL_43:
  char v10 = *(unsigned char *)(a2 + 94);
  v3 |= 0x80000u;
  *(_DWORD *)(a1 + 100) = v3;
  *(unsigned char *)(a1 + 94) = v10;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x40000) == 0)
  {
LABEL_22:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_45;
  }
LABEL_44:
  char v11 = *(unsigned char *)(a2 + 93);
  v3 |= 0x40000u;
  *(_DWORD *)(a1 + 100) = v3;
  *(unsigned char *)(a1 + 93) = v11;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x100000) == 0)
  {
LABEL_23:
    if ((v2 & 0x10) == 0) {
      goto LABEL_24;
    }
    goto LABEL_46;
  }
LABEL_45:
  char v12 = *(unsigned char *)(a2 + 95);
  v3 |= 0x100000u;
  *(_DWORD *)(a1 + 100) = v3;
  *(unsigned char *)(a1 + 95) = v12;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x10) == 0)
  {
LABEL_24:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_47;
  }
LABEL_46:
  float result = *(float *)(a2 + 40);
  v3 |= 0x10u;
  *(_DWORD *)(a1 + 100) = v3;
  *(float *)(a1 + 40) = result;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x200000) == 0)
  {
LABEL_25:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_48;
  }
LABEL_47:
  char v13 = *(unsigned char *)(a2 + 96);
  v3 |= 0x200000u;
  *(_DWORD *)(a1 + 100) = v3;
  *(unsigned char *)(a1 + 96) = v13;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x20000) == 0)
  {
LABEL_26:
    if ((v2 & 8) == 0) {
      goto LABEL_27;
    }
    goto LABEL_49;
  }
LABEL_48:
  char v14 = *(unsigned char *)(a2 + 92);
  v3 |= 0x20000u;
  *(_DWORD *)(a1 + 100) = v3;
  *(unsigned char *)(a1 + 92) = v14;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 8) == 0)
  {
LABEL_27:
    if ((v2 & 0x1000) == 0) {
      return result;
    }
LABEL_50:
    float result = *(float *)(a2 + 72);
    *(_DWORD *)(a1 + 100) = v3 | 0x1000;
    *(float *)(a1 + 72) = result;
    return result;
  }
LABEL_49:
  uint64_t v15 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_DWORD *)(a1 + 100) = v3;
  *(void *)(a1 + 32) = v15;
  if ((*(_DWORD *)(a2 + 100) & 0x1000) != 0) {
    goto LABEL_50;
  }
  return result;
}

uint64_t sub_227B331D8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x10) != 0)
  {
    PB::TextFormatter::format(this, "asymmetryProbabilityEstimate", *(float *)(a1 + 40));
    int v5 = *(_DWORD *)(a1 + 100);
    if ((v5 & 0x20) == 0)
    {
LABEL_3:
      if ((v5 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_31;
    }
  }
  else if ((v5 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "cadence", *(float *)(a1 + 44));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x40) == 0)
  {
LABEL_4:
    if ((v5 & 0x80) == 0) {
      goto LABEL_5;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(this, "doubleSupportEstimate", *(float *)(a1 + 48));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x80) == 0)
  {
LABEL_5:
    if ((v5 & 0x100) == 0) {
      goto LABEL_6;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(this, "horizontalRotationRateMax", *(float *)(a1 + 52));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x100) == 0)
  {
LABEL_6:
    if ((v5 & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(this, "impulseMagnitude", *(float *)(a1 + 56));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 1) == 0)
  {
LABEL_7:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "impulseStartTime");
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x20000) == 0)
  {
LABEL_8:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "isCadenceConcordant");
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x40000) == 0)
  {
LABEL_9:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "isFeasibleWalkingSpeed");
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x80000) == 0)
  {
LABEL_10:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "isNotRunning");
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x100000) == 0)
  {
LABEL_11:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "isPendular");
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x200000) == 0)
  {
LABEL_12:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "isSufficientVerticalTwist");
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x400000) == 0)
  {
LABEL_13:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "isSwingStanceCycle");
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x800000) == 0)
  {
LABEL_14:
    if ((v5 & 2) == 0) {
      goto LABEL_15;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "isValid");
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 2) == 0)
  {
LABEL_15:
    if ((v5 & 0x200) == 0) {
      goto LABEL_16;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "loftEndTime");
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x200) == 0)
  {
LABEL_16:
    if ((v5 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "loftMagnitude", *(float *)(a1 + 60));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 4) == 0)
  {
LABEL_17:
    if ((v5 & 0x400) == 0) {
      goto LABEL_18;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "loftStartTime");
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x400) == 0)
  {
LABEL_18:
    if ((v5 & 8) == 0) {
      goto LABEL_19;
    }
    goto LABEL_46;
  }
LABEL_45:
  PB::TextFormatter::format(this, "pendulumResidual", *(float *)(a1 + 64));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 8) == 0)
  {
LABEL_19:
    if ((v5 & 0x800) == 0) {
      goto LABEL_20;
    }
    goto LABEL_47;
  }
LABEL_46:
  PB::TextFormatter::format(this, "previousImpulseStartTime");
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x800) == 0)
  {
LABEL_20:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(this, "rawLoftSpeed", *(float *)(a1 + 68));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x1000) == 0)
  {
LABEL_21:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(this, "sqrtMaxAbsLoftAccel", *(float *)(a1 + 72));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x2000) == 0)
  {
LABEL_22:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_50;
  }
LABEL_49:
  PB::TextFormatter::format(this, "stanceProbability", *(float *)(a1 + 76));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x4000) == 0)
  {
LABEL_23:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_51;
  }
LABEL_50:
  PB::TextFormatter::format(this, "stepLengthEstimate", *(float *)(a1 + 80));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x8000) == 0)
  {
LABEL_24:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }
LABEL_51:
  PB::TextFormatter::format(this, "verticalRotationRateMean", *(float *)(a1 + 84));
  if ((*(_DWORD *)(a1 + 100) & 0x10000) != 0) {
LABEL_25:
  }
    PB::TextFormatter::format(this, "walkSpeedEstimate", *(float *)(a1 + 88));
LABEL_26:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B3351C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_DWORD *)(a1 + 100) |= 1u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v59 = 0;
                unsigned int v60 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_153;
                  }
                  unint64_t v61 = v20++;
                  char v62 = *(unsigned char *)(v21 + v61);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v62 & 0x7F) << v59;
                  if ((v62 & 0x80) == 0) {
                    break;
                  }
                  v59 += 7;
                  BOOL v14 = v60++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_152;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_152:
                unint64_t v2 = v61 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_153;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_153:
              *(void *)(a1 + 8) = v24;
              goto LABEL_169;
            case 2u:
              *(_DWORD *)(a1 + 100) |= 4u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v63 = 0;
                unsigned int v64 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    uint64_t v31 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_158;
                  }
                  unint64_t v65 = v27++;
                  char v66 = *(unsigned char *)(v28 + v65);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v66 & 0x7F) << v63;
                  if ((v66 & 0x80) == 0) {
                    break;
                  }
                  v63 += 7;
                  BOOL v14 = v64++ > 8;
                  if (v14)
                  {
                    uint64_t v31 = 0;
LABEL_157:
                    unint64_t v2 = v65 + 1;
                    goto LABEL_158;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v31 = 0;
                }
                goto LABEL_157;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_158;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              uint64_t v31 = 0;
LABEL_158:
              *(void *)(a1 + 24) = v31;
              goto LABEL_169;
            case 3u:
              *(_DWORD *)(a1 + 100) |= 2u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v67 = 0;
                unsigned int v68 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    uint64_t v37 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_163;
                  }
                  unint64_t v69 = v33++;
                  char v70 = *(unsigned char *)(v34 + v69);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v70 & 0x7F) << v67;
                  if ((v70 & 0x80) == 0) {
                    break;
                  }
                  v67 += 7;
                  BOOL v14 = v68++ > 8;
                  if (v14)
                  {
                    uint64_t v37 = 0;
LABEL_162:
                    unint64_t v2 = v69 + 1;
                    goto LABEL_163;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v37 = 0;
                }
                goto LABEL_162;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_163;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              uint64_t v37 = 0;
LABEL_163:
              *(void *)(a1 + 16) = v37;
              goto LABEL_169;
            case 4u:
              *(_DWORD *)(a1 + 100) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_104;
              }
              *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_148;
            case 5u:
              *(_DWORD *)(a1 + 100) |= 0x10000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_104;
              }
              *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_148;
            case 6u:
              *(_DWORD *)(a1 + 100) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_104;
              }
              *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_148;
            case 7u:
              *(_DWORD *)(a1 + 100) |= 0x4000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_104;
              }
              *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_148;
            case 8u:
              *(_DWORD *)(a1 + 100) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_104;
              }
              *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_148;
            case 9u:
              *(_DWORD *)(a1 + 100) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_104;
              }
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_148;
            case 0xAu:
              *(_DWORD *)(a1 + 100) |= 0x2000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_104;
              }
              *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_148;
            case 0xBu:
              *(_DWORD *)(a1 + 100) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_104;
              }
              *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_148;
            case 0xCu:
              *(_DWORD *)(a1 + 100) |= 0x8000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_104;
              }
              *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_148;
            case 0xDu:
              *(_DWORD *)(a1 + 100) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_104;
              }
              *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_148;
            case 0xEu:
              *(_DWORD *)(a1 + 100) |= 0x800000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v40 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v39 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v40 = v39 != 0;
              }
              *(unsigned char *)(a1 + 98) = v40;
              goto LABEL_169;
            case 0xFu:
              *(_DWORD *)(a1 + 100) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_104;
              }
              *(_DWORD *)(a1 + 68) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_148;
            case 0x10u:
              *(_DWORD *)(a1 + 100) |= 0x400000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v42 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v41 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v42 = v41 != 0;
              }
              *(unsigned char *)(a1 + 97) = v42;
              goto LABEL_169;
            case 0x11u:
              *(_DWORD *)(a1 + 100) |= 0x80000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v44 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v43 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v44 = v43 != 0;
              }
              *(unsigned char *)(a1 + 94) = v44;
              goto LABEL_169;
            case 0x12u:
              *(_DWORD *)(a1 + 100) |= 0x40000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v46 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v45 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v46 = v45 != 0;
              }
              *(unsigned char *)(a1 + 93) = v46;
              goto LABEL_169;
            case 0x13u:
              *(_DWORD *)(a1 + 100) |= 0x100000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v48 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v47 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v48 = v47 != 0;
              }
              *(unsigned char *)(a1 + 95) = v48;
              goto LABEL_169;
            case 0x14u:
              *(_DWORD *)(a1 + 100) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_104;
              }
              *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_148;
            case 0x15u:
              *(_DWORD *)(a1 + 100) |= 0x200000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v50 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v49 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v50 = v49 != 0;
              }
              *(unsigned char *)(a1 + 96) = v50;
              goto LABEL_169;
            case 0x16u:
              *(_DWORD *)(a1 + 100) |= 0x20000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v52 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v51 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v52 = v51 != 0;
              }
              *(unsigned char *)(a1 + 92) = v52;
              goto LABEL_169;
            case 0x17u:
              *(_DWORD *)(a1 + 100) |= 8u;
              unint64_t v53 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v54 = *(void *)this;
              if (v53 > 0xFFFFFFFFFFFFFFF5 || v53 + 10 > v2)
              {
                char v71 = 0;
                unsigned int v72 = 0;
                uint64_t v57 = 0;
                if (v2 <= v53) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v53)
                  {
                    uint64_t v57 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_168;
                  }
                  unint64_t v73 = v53++;
                  char v74 = *(unsigned char *)(v54 + v73);
                  *((void *)this + 1) = v53;
                  v57 |= (unint64_t)(v74 & 0x7F) << v71;
                  if ((v74 & 0x80) == 0) {
                    break;
                  }
                  v71 += 7;
                  BOOL v14 = v72++ > 8;
                  if (v14)
                  {
                    uint64_t v57 = 0;
LABEL_167:
                    unint64_t v2 = v73 + 1;
                    goto LABEL_168;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v57 = 0;
                }
                goto LABEL_167;
              }
              char v55 = 0;
              unsigned int v56 = 0;
              uint64_t v57 = 0;
              do
              {
                unint64_t v2 = v53 + 1;
                *((void *)this + 1) = v53 + 1;
                char v58 = *(unsigned char *)(v54 + v53);
                v57 |= (unint64_t)(v58 & 0x7F) << v55;
                if ((v58 & 0x80) == 0) {
                  goto LABEL_168;
                }
                v55 += 7;
                unint64_t v53 = v2;
                BOOL v14 = v56++ > 8;
              }
              while (!v14);
              uint64_t v57 = 0;
LABEL_168:
              *(void *)(a1 + 32) = v57;
LABEL_169:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 0x18u:
              *(_DWORD *)(a1 + 100) |= 0x1000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v2);
LABEL_148:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_104:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_169;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_169;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B33F68(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 100);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    int v4 = *(_DWORD *)(v3 + 100);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_28;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 2) == 0)
  {
LABEL_4:
    if ((v4 & 0x200) == 0) {
      goto LABEL_5;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x200) == 0)
  {
LABEL_5:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 60));
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x10000) == 0)
  {
LABEL_6:
    if ((v4 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 88));
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x40) == 0)
  {
LABEL_7:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48));
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x4000) == 0)
  {
LABEL_8:
    if ((v4 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80));
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x100) == 0)
  {
LABEL_9:
    if ((v4 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56));
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x80) == 0)
  {
LABEL_10:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x2000) == 0)
  {
LABEL_11:
    if ((v4 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76));
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x20) == 0)
  {
LABEL_12:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44));
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x8000) == 0)
  {
LABEL_13:
    if ((v4 & 0x400) == 0) {
      goto LABEL_14;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84));
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x400) == 0)
  {
LABEL_14:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64));
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x800000) == 0)
  {
LABEL_15:
    if ((v4 & 0x800) == 0) {
      goto LABEL_16;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x800) == 0)
  {
LABEL_16:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 68));
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x400000) == 0)
  {
LABEL_17:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x80000) == 0)
  {
LABEL_18:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x40000) == 0)
  {
LABEL_19:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x100000) == 0)
  {
LABEL_20:
    if ((v4 & 0x10) == 0) {
      goto LABEL_21;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x10) == 0)
  {
LABEL_21:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x200000) == 0)
  {
LABEL_22:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x20000) == 0)
  {
LABEL_23:
    if ((v4 & 8) == 0) {
      goto LABEL_24;
    }
LABEL_48:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(_DWORD *)(v3 + 100) & 0x1000) == 0) {
      return result;
    }
    goto LABEL_49;
  }
LABEL_47:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 8) != 0) {
    goto LABEL_48;
  }
LABEL_24:
  if ((v4 & 0x1000) == 0) {
    return result;
  }
LABEL_49:
  float v5 = *(float *)(v3 + 72);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227B34240(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC1FE40;
  *(_DWORD *)(result + 116) = 0;
  return result;
}

void sub_227B34268(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B342A0(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC1FE40;
  *(_DWORD *)(result + 116) = 0;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x80) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 64);
    int v3 = 128;
    *(_DWORD *)(result + 116) = 128;
    *(void *)(result + 64) = v4;
    int v2 = *(_DWORD *)(a2 + 116);
    if ((v2 & 0x100000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 0x100000) != 0)
  {
LABEL_5:
    char v5 = *(unsigned char *)(a2 + 114);
    v3 |= 0x100000u;
    *(_DWORD *)(result + 116) = v3;
    *(unsigned char *)(result + 114) = v5;
    int v2 = *(_DWORD *)(a2 + 116);
  }
LABEL_6:
  if ((v2 & 0x80000) != 0)
  {
    char v6 = *(unsigned char *)(a2 + 113);
    v3 |= 0x80000u;
    *(_DWORD *)(result + 116) = v3;
    *(unsigned char *)(result + 113) = v6;
    int v2 = *(_DWORD *)(a2 + 116);
    if ((v2 & 0x200000) == 0)
    {
LABEL_8:
      if ((v2 & 0x40000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_29;
    }
  }
  else if ((v2 & 0x200000) == 0)
  {
    goto LABEL_8;
  }
  char v7 = *(unsigned char *)(a2 + 115);
  v3 |= 0x200000u;
  *(_DWORD *)(result + 116) = v3;
  *(unsigned char *)(result + 115) = v7;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x40000) == 0)
  {
LABEL_9:
    if ((v2 & 4) == 0) {
      goto LABEL_10;
    }
    goto LABEL_30;
  }
LABEL_29:
  char v8 = *(unsigned char *)(a2 + 112);
  v3 |= 0x40000u;
  *(_DWORD *)(result + 116) = v3;
  *(unsigned char *)(result + 112) = v8;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 4) == 0)
  {
LABEL_10:
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t v9 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(_DWORD *)(result + 116) = v3;
  *(void *)(result + 24) = v9;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 2) == 0)
  {
LABEL_11:
    if ((v2 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t v10 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_DWORD *)(result + 116) = v3;
  *(void *)(result + 16) = v10;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 1) == 0)
  {
LABEL_12:
    if ((v2 & 0x20) == 0) {
      goto LABEL_13;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t v11 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_DWORD *)(result + 116) = v3;
  *(void *)(result + 8) = v11;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x20) == 0)
  {
LABEL_13:
    if ((v2 & 0x40) == 0) {
      goto LABEL_14;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t v12 = *(void *)(a2 + 48);
  v3 |= 0x20u;
  *(_DWORD *)(result + 116) = v3;
  *(void *)(result + 48) = v12;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x40) == 0)
  {
LABEL_14:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t v13 = *(void *)(a2 + 56);
  v3 |= 0x40u;
  *(_DWORD *)(result + 116) = v3;
  *(void *)(result + 56) = v13;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x2000) == 0)
  {
LABEL_15:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_36;
  }
LABEL_35:
  int v14 = *(_DWORD *)(a2 + 92);
  v3 |= 0x2000u;
  *(_DWORD *)(result + 116) = v3;
  *(_DWORD *)(result + 92) = v14;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x10000) == 0)
  {
LABEL_16:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_37;
  }
LABEL_36:
  int v15 = *(_DWORD *)(a2 + 104);
  v3 |= 0x10000u;
  *(_DWORD *)(result + 116) = v3;
  *(_DWORD *)(result + 104) = v15;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x1000) == 0)
  {
LABEL_17:
    if ((v2 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_38;
  }
LABEL_37:
  int v16 = *(_DWORD *)(a2 + 88);
  v3 |= 0x1000u;
  *(_DWORD *)(result + 116) = v3;
  *(_DWORD *)(result + 88) = v16;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x800) == 0)
  {
LABEL_18:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_39;
  }
LABEL_38:
  int v17 = *(_DWORD *)(a2 + 84);
  v3 |= 0x800u;
  *(_DWORD *)(result + 116) = v3;
  *(_DWORD *)(result + 84) = v17;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x8000) == 0)
  {
LABEL_19:
    if ((v2 & 0x200) == 0) {
      goto LABEL_20;
    }
    goto LABEL_40;
  }
LABEL_39:
  int v18 = *(_DWORD *)(a2 + 100);
  v3 |= 0x8000u;
  *(_DWORD *)(result + 116) = v3;
  *(_DWORD *)(result + 100) = v18;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x200) == 0)
  {
LABEL_20:
    if ((v2 & 0x400) == 0) {
      goto LABEL_21;
    }
    goto LABEL_41;
  }
LABEL_40:
  int v19 = *(_DWORD *)(a2 + 76);
  v3 |= 0x200u;
  *(_DWORD *)(result + 116) = v3;
  *(_DWORD *)(result + 76) = v19;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x400) == 0)
  {
LABEL_21:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_42;
  }
LABEL_41:
  int v20 = *(_DWORD *)(a2 + 80);
  v3 |= 0x400u;
  *(_DWORD *)(result + 116) = v3;
  *(_DWORD *)(result + 80) = v20;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x4000) == 0)
  {
LABEL_22:
    if ((v2 & 0x100) == 0) {
      goto LABEL_23;
    }
    goto LABEL_43;
  }
LABEL_42:
  int v21 = *(_DWORD *)(a2 + 96);
  v3 |= 0x4000u;
  *(_DWORD *)(result + 116) = v3;
  *(_DWORD *)(result + 96) = v21;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x100) == 0)
  {
LABEL_23:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_44;
  }
LABEL_43:
  int v22 = *(_DWORD *)(a2 + 72);
  v3 |= 0x100u;
  *(_DWORD *)(result + 116) = v3;
  *(_DWORD *)(result + 72) = v22;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x20000) == 0)
  {
LABEL_24:
    if ((v2 & 8) == 0) {
      goto LABEL_25;
    }
    goto LABEL_45;
  }
LABEL_44:
  int v23 = *(_DWORD *)(a2 + 108);
  v3 |= 0x20000u;
  *(_DWORD *)(result + 116) = v3;
  *(_DWORD *)(result + 108) = v23;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 8) == 0)
  {
LABEL_25:
    if ((v2 & 0x10) == 0) {
      return result;
    }
LABEL_46:
    uint64_t v25 = *(void *)(a2 + 40);
    *(_DWORD *)(result + 116) = v3 | 0x10;
    *(void *)(result + 40) = v25;
    return result;
  }
LABEL_45:
  uint64_t v24 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_DWORD *)(result + 116) = v3;
  *(void *)(result + 32) = v24;
  if ((*(_DWORD *)(a2 + 116) & 0x10) != 0) {
    goto LABEL_46;
  }
  return result;
}

uint64_t sub_227B34534(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 116);
  if (v5)
  {
    PB::TextFormatter::format(this, "curImpulseStartTime");
    int v5 = *(_DWORD *)(a1 + 116);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_29;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "curLoftEndTime");
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 0x100) == 0) {
      goto LABEL_5;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(this, "curLoftStartTime");
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x100) == 0)
  {
LABEL_5:
    if ((v5 & 0x200) == 0) {
      goto LABEL_6;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "currentCadence", *(float *)(a1 + 72));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x200) == 0)
  {
LABEL_6:
    if ((v5 & 0x400) == 0) {
      goto LABEL_7;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(this, "currentHorzRotRateMax", *(float *)(a1 + 76));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x400) == 0)
  {
LABEL_7:
    if ((v5 & 0x800) == 0) {
      goto LABEL_8;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(this, "currentImpulseMagnitude", *(float *)(a1 + 80));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x800) == 0)
  {
LABEL_8:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(this, "currentLoftMagnitude", *(float *)(a1 + 84));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x1000) == 0)
  {
LABEL_9:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "currentMax", *(float *)(a1 + 88));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x2000) == 0)
  {
LABEL_10:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "currentMin", *(float *)(a1 + 92));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x4000) == 0)
  {
LABEL_11:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "currentWalkSpeedEstimate", *(float *)(a1 + 96));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x40000) == 0)
  {
LABEL_12:
    if ((v5 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "firstLoft");
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 8) == 0)
  {
LABEL_13:
    if ((v5 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "impulseStartTimeWalkingSpeed");
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x10) == 0)
  {
LABEL_14:
    if ((v5 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "impulseStopTimeWalkingSpeed");
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x20) == 0)
  {
LABEL_15:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "lastZeroTime");
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x80000) == 0)
  {
LABEL_16:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "loftEndDetected");
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x100000) == 0)
  {
LABEL_17:
    if ((v5 & 0x40) == 0) {
      goto LABEL_18;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "loftStartDetected");
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x40) == 0)
  {
LABEL_18:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "prevLoftStartTime");
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x8000) == 0)
  {
LABEL_19:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "previousHorzRotRateMax", *(float *)(a1 + 100));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x10000) == 0)
  {
LABEL_20:
    if ((v5 & 0x80) == 0) {
      goto LABEL_21;
    }
    goto LABEL_46;
  }
LABEL_45:
  PB::TextFormatter::format(this, "previousMax", *(float *)(a1 + 104));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x80) == 0)
  {
LABEL_21:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_47;
  }
LABEL_46:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 64));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x20000) == 0)
  {
LABEL_22:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_23;
  }
LABEL_47:
  PB::TextFormatter::format(this, "vertRotationRateMean", *(float *)(a1 + 108));
  if ((*(_DWORD *)(a1 + 116) & 0x200000) != 0) {
LABEL_23:
  }
    PB::TextFormatter::format(this, "waitingToConfirmLoft");
LABEL_24:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B34838(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_DWORD *)(a1 + 116) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_99;
              }
              *(void *)(a1 + 64) = *(void *)(*(void *)this + v2);
              unint64_t v2 = *((void *)this + 1) + 8;
              goto LABEL_173;
            case 2u:
              *(_DWORD *)(a1 + 116) |= 0x100000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v22 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v21 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v22 = v21 != 0;
              }
              *(unsigned char *)(a1 + 114) = v22;
              goto LABEL_209;
            case 3u:
              *(_DWORD *)(a1 + 116) |= 0x80000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v24 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v23 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v24 = v23 != 0;
              }
              *(unsigned char *)(a1 + 113) = v24;
              goto LABEL_209;
            case 4u:
              *(_DWORD *)(a1 + 116) |= 0x200000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v26 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v25 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v26 = v25 != 0;
              }
              *(unsigned char *)(a1 + 115) = v26;
              goto LABEL_209;
            case 5u:
              *(_DWORD *)(a1 + 116) |= 0x40000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v28 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v27 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v28 = v27 != 0;
              }
              *(unsigned char *)(a1 + 112) = v28;
              goto LABEL_209;
            case 6u:
              *(_DWORD *)(a1 + 116) |= 4u;
              unint64_t v29 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v30 = *(void *)this;
              if (v29 > 0xFFFFFFFFFFFFFFF5 || v29 + 10 > v2)
              {
                char v71 = 0;
                unsigned int v72 = 0;
                uint64_t v33 = 0;
                if (v2 <= v29) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v29)
                  {
                    uint64_t v33 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_178;
                  }
                  unint64_t v73 = v29++;
                  char v74 = *(unsigned char *)(v30 + v73);
                  *((void *)this + 1) = v29;
                  v33 |= (unint64_t)(v74 & 0x7F) << v71;
                  if ((v74 & 0x80) == 0) {
                    break;
                  }
                  v71 += 7;
                  BOOL v14 = v72++ > 8;
                  if (v14)
                  {
                    uint64_t v33 = 0;
LABEL_177:
                    unint64_t v2 = v73 + 1;
                    goto LABEL_178;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v33 = 0;
                }
                goto LABEL_177;
              }
              char v31 = 0;
              unsigned int v32 = 0;
              uint64_t v33 = 0;
              do
              {
                unint64_t v2 = v29 + 1;
                *((void *)this + 1) = v29 + 1;
                char v34 = *(unsigned char *)(v30 + v29);
                v33 |= (unint64_t)(v34 & 0x7F) << v31;
                if ((v34 & 0x80) == 0) {
                  goto LABEL_178;
                }
                v31 += 7;
                unint64_t v29 = v2;
                BOOL v14 = v32++ > 8;
              }
              while (!v14);
              uint64_t v33 = 0;
LABEL_178:
              *(void *)(a1 + 24) = v33;
              goto LABEL_209;
            case 7u:
              *(_DWORD *)(a1 + 116) |= 2u;
              unint64_t v35 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v36 = *(void *)this;
              if (v35 > 0xFFFFFFFFFFFFFFF5 || v35 + 10 > v2)
              {
                char v75 = 0;
                unsigned int v76 = 0;
                uint64_t v39 = 0;
                if (v2 <= v35) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v35)
                  {
                    uint64_t v39 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_183;
                  }
                  unint64_t v77 = v35++;
                  char v78 = *(unsigned char *)(v36 + v77);
                  *((void *)this + 1) = v35;
                  v39 |= (unint64_t)(v78 & 0x7F) << v75;
                  if ((v78 & 0x80) == 0) {
                    break;
                  }
                  v75 += 7;
                  BOOL v14 = v76++ > 8;
                  if (v14)
                  {
                    uint64_t v39 = 0;
LABEL_182:
                    unint64_t v2 = v77 + 1;
                    goto LABEL_183;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v39 = 0;
                }
                goto LABEL_182;
              }
              char v37 = 0;
              unsigned int v38 = 0;
              uint64_t v39 = 0;
              do
              {
                unint64_t v2 = v35 + 1;
                *((void *)this + 1) = v35 + 1;
                char v40 = *(unsigned char *)(v36 + v35);
                v39 |= (unint64_t)(v40 & 0x7F) << v37;
                if ((v40 & 0x80) == 0) {
                  goto LABEL_183;
                }
                v37 += 7;
                unint64_t v35 = v2;
                BOOL v14 = v38++ > 8;
              }
              while (!v14);
              uint64_t v39 = 0;
LABEL_183:
              *(void *)(a1 + 16) = v39;
              goto LABEL_209;
            case 8u:
              *(_DWORD *)(a1 + 116) |= 1u;
              unint64_t v41 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v42 = *(void *)this;
              if (v41 > 0xFFFFFFFFFFFFFFF5 || v41 + 10 > v2)
              {
                char v79 = 0;
                unsigned int v80 = 0;
                uint64_t v45 = 0;
                if (v2 <= v41) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v41)
                  {
                    uint64_t v45 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_188;
                  }
                  unint64_t v81 = v41++;
                  char v82 = *(unsigned char *)(v42 + v81);
                  *((void *)this + 1) = v41;
                  v45 |= (unint64_t)(v82 & 0x7F) << v79;
                  if ((v82 & 0x80) == 0) {
                    break;
                  }
                  v79 += 7;
                  BOOL v14 = v80++ > 8;
                  if (v14)
                  {
                    uint64_t v45 = 0;
LABEL_187:
                    unint64_t v2 = v81 + 1;
                    goto LABEL_188;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v45 = 0;
                }
                goto LABEL_187;
              }
              char v43 = 0;
              unsigned int v44 = 0;
              uint64_t v45 = 0;
              do
              {
                unint64_t v2 = v41 + 1;
                *((void *)this + 1) = v41 + 1;
                char v46 = *(unsigned char *)(v42 + v41);
                v45 |= (unint64_t)(v46 & 0x7F) << v43;
                if ((v46 & 0x80) == 0) {
                  goto LABEL_188;
                }
                v43 += 7;
                unint64_t v41 = v2;
                BOOL v14 = v44++ > 8;
              }
              while (!v14);
              uint64_t v45 = 0;
LABEL_188:
              *(void *)(a1 + 8) = v45;
              goto LABEL_209;
            case 9u:
              *(_DWORD *)(a1 + 116) |= 0x20u;
              unint64_t v47 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v48 = *(void *)this;
              if (v47 > 0xFFFFFFFFFFFFFFF5 || v47 + 10 > v2)
              {
                char v83 = 0;
                unsigned int v84 = 0;
                uint64_t v51 = 0;
                if (v2 <= v47) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v47)
                  {
                    uint64_t v51 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_193;
                  }
                  unint64_t v85 = v47++;
                  char v86 = *(unsigned char *)(v48 + v85);
                  *((void *)this + 1) = v47;
                  v51 |= (unint64_t)(v86 & 0x7F) << v83;
                  if ((v86 & 0x80) == 0) {
                    break;
                  }
                  v83 += 7;
                  BOOL v14 = v84++ > 8;
                  if (v14)
                  {
                    uint64_t v51 = 0;
LABEL_192:
                    unint64_t v2 = v85 + 1;
                    goto LABEL_193;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v51 = 0;
                }
                goto LABEL_192;
              }
              char v49 = 0;
              unsigned int v50 = 0;
              uint64_t v51 = 0;
              do
              {
                unint64_t v2 = v47 + 1;
                *((void *)this + 1) = v47 + 1;
                char v52 = *(unsigned char *)(v48 + v47);
                v51 |= (unint64_t)(v52 & 0x7F) << v49;
                if ((v52 & 0x80) == 0) {
                  goto LABEL_193;
                }
                v49 += 7;
                unint64_t v47 = v2;
                BOOL v14 = v50++ > 8;
              }
              while (!v14);
              uint64_t v51 = 0;
LABEL_193:
              *(void *)(a1 + 48) = v51;
              goto LABEL_209;
            case 0xAu:
              *(_DWORD *)(a1 + 116) |= 0x40u;
              unint64_t v53 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v54 = *(void *)this;
              if (v53 > 0xFFFFFFFFFFFFFFF5 || v53 + 10 > v2)
              {
                char v87 = 0;
                unsigned int v88 = 0;
                uint64_t v57 = 0;
                if (v2 <= v53) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v53)
                  {
                    uint64_t v57 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_198;
                  }
                  unint64_t v89 = v53++;
                  char v90 = *(unsigned char *)(v54 + v89);
                  *((void *)this + 1) = v53;
                  v57 |= (unint64_t)(v90 & 0x7F) << v87;
                  if ((v90 & 0x80) == 0) {
                    break;
                  }
                  v87 += 7;
                  BOOL v14 = v88++ > 8;
                  if (v14)
                  {
                    uint64_t v57 = 0;
LABEL_197:
                    unint64_t v2 = v89 + 1;
                    goto LABEL_198;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v57 = 0;
                }
                goto LABEL_197;
              }
              char v55 = 0;
              unsigned int v56 = 0;
              uint64_t v57 = 0;
              do
              {
                unint64_t v2 = v53 + 1;
                *((void *)this + 1) = v53 + 1;
                char v58 = *(unsigned char *)(v54 + v53);
                v57 |= (unint64_t)(v58 & 0x7F) << v55;
                if ((v58 & 0x80) == 0) {
                  goto LABEL_198;
                }
                v55 += 7;
                unint64_t v53 = v2;
                BOOL v14 = v56++ > 8;
              }
              while (!v14);
              uint64_t v57 = 0;
LABEL_198:
              *(void *)(a1 + 56) = v57;
              goto LABEL_209;
            case 0xBu:
              *(_DWORD *)(a1 + 116) |= 0x2000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_99;
              }
              *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_172;
            case 0xCu:
              *(_DWORD *)(a1 + 116) |= 0x10000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_99;
              }
              *(_DWORD *)(a1 + 104) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_172;
            case 0xDu:
              *(_DWORD *)(a1 + 116) |= 0x1000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_99;
              }
              *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_172;
            case 0xEu:
              *(_DWORD *)(a1 + 116) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_99;
              }
              *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_172;
            case 0xFu:
              *(_DWORD *)(a1 + 116) |= 0x8000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_99;
              }
              *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_172;
            case 0x10u:
              *(_DWORD *)(a1 + 116) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_99;
              }
              *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_172;
            case 0x11u:
              *(_DWORD *)(a1 + 116) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_99;
              }
              *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_172;
            case 0x12u:
              *(_DWORD *)(a1 + 116) |= 0x4000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_99;
              }
              *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_172;
            case 0x13u:
              *(_DWORD *)(a1 + 116) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_99;
              }
              *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_172;
            case 0x14u:
              *(_DWORD *)(a1 + 116) |= 0x20000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 108) = *(_DWORD *)(*(void *)this + v2);
LABEL_172:
                unint64_t v2 = *((void *)this + 1) + 4;
LABEL_173:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_99:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_209;
            case 0x15u:
              *(_DWORD *)(a1 + 116) |= 8u;
              unint64_t v59 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v60 = *(void *)this;
              if (v59 > 0xFFFFFFFFFFFFFFF5 || v59 + 10 > v2)
              {
                char v91 = 0;
                unsigned int v92 = 0;
                uint64_t v63 = 0;
                if (v2 <= v59) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v59)
                  {
                    uint64_t v63 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_203;
                  }
                  unint64_t v93 = v59++;
                  char v94 = *(unsigned char *)(v60 + v93);
                  *((void *)this + 1) = v59;
                  v63 |= (unint64_t)(v94 & 0x7F) << v91;
                  if ((v94 & 0x80) == 0) {
                    break;
                  }
                  v91 += 7;
                  BOOL v14 = v92++ > 8;
                  if (v14)
                  {
                    uint64_t v63 = 0;
LABEL_202:
                    unint64_t v2 = v93 + 1;
                    goto LABEL_203;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v63 = 0;
                }
                goto LABEL_202;
              }
              char v61 = 0;
              unsigned int v62 = 0;
              uint64_t v63 = 0;
              do
              {
                unint64_t v2 = v59 + 1;
                *((void *)this + 1) = v59 + 1;
                char v64 = *(unsigned char *)(v60 + v59);
                v63 |= (unint64_t)(v64 & 0x7F) << v61;
                if ((v64 & 0x80) == 0) {
                  goto LABEL_203;
                }
                v61 += 7;
                unint64_t v59 = v2;
                BOOL v14 = v62++ > 8;
              }
              while (!v14);
              uint64_t v63 = 0;
LABEL_203:
              *(void *)(a1 + 32) = v63;
              goto LABEL_209;
            case 0x16u:
              *(_DWORD *)(a1 + 116) |= 0x10u;
              unint64_t v65 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v66 = *(void *)this;
              if (v65 > 0xFFFFFFFFFFFFFFF5 || v65 + 10 > v2)
              {
                char v95 = 0;
                unsigned int v96 = 0;
                uint64_t v69 = 0;
                if (v2 <= v65) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v65)
                  {
                    uint64_t v69 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_208;
                  }
                  unint64_t v97 = v65++;
                  char v98 = *(unsigned char *)(v66 + v97);
                  *((void *)this + 1) = v65;
                  v69 |= (unint64_t)(v98 & 0x7F) << v95;
                  if ((v98 & 0x80) == 0) {
                    break;
                  }
                  v95 += 7;
                  BOOL v14 = v96++ > 8;
                  if (v14)
                  {
                    uint64_t v69 = 0;
LABEL_207:
                    unint64_t v2 = v97 + 1;
                    goto LABEL_208;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v69 = 0;
                }
                goto LABEL_207;
              }
              char v67 = 0;
              unsigned int v68 = 0;
              uint64_t v69 = 0;
              do
              {
                unint64_t v2 = v65 + 1;
                *((void *)this + 1) = v65 + 1;
                char v70 = *(unsigned char *)(v66 + v65);
                v69 |= (unint64_t)(v70 & 0x7F) << v67;
                if ((v70 & 0x80) == 0) {
                  goto LABEL_208;
                }
                v67 += 7;
                unint64_t v65 = v2;
                BOOL v14 = v68++ > 8;
              }
              while (!v14);
              uint64_t v69 = 0;
LABEL_208:
              *(void *)(a1 + 40) = v69;
LABEL_209:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_209;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B3540C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 116);
  if ((v4 & 0x80) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 64));
    int v4 = *(_DWORD *)(v3 + 116);
    if ((v4 & 0x100000) == 0)
    {
LABEL_3:
      if ((v4 & 0x80000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_26;
    }
  }
  else if ((v4 & 0x100000) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x80000) == 0)
  {
LABEL_4:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x200000) == 0)
  {
LABEL_5:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x40000) == 0)
  {
LABEL_6:
    if ((v4 & 4) == 0) {
      goto LABEL_7;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 2) == 0)
  {
LABEL_8:
    if ((v4 & 1) == 0) {
      goto LABEL_9;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 1) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x20) == 0)
  {
LABEL_10:
    if ((v4 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x40) == 0)
  {
LABEL_11:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x2000) == 0)
  {
LABEL_12:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 92));
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x10000) == 0)
  {
LABEL_13:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 104));
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x1000) == 0)
  {
LABEL_14:
    if ((v4 & 0x800) == 0) {
      goto LABEL_15;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 88));
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x800) == 0)
  {
LABEL_15:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84));
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x8000) == 0)
  {
LABEL_16:
    if ((v4 & 0x200) == 0) {
      goto LABEL_17;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 100));
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x200) == 0)
  {
LABEL_17:
    if ((v4 & 0x400) == 0) {
      goto LABEL_18;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76));
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x400) == 0)
  {
LABEL_18:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80));
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x4000) == 0)
  {
LABEL_19:
    if ((v4 & 0x100) == 0) {
      goto LABEL_20;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 96));
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x100) == 0)
  {
LABEL_20:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72));
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x20000) == 0)
  {
LABEL_21:
    if ((v4 & 8) == 0) {
      goto LABEL_22;
    }
LABEL_44:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(_DWORD *)(v3 + 116) & 0x10) == 0) {
      return result;
    }
    goto LABEL_45;
  }
LABEL_43:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 108));
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 8) != 0) {
    goto LABEL_44;
  }
LABEL_22:
  if ((v4 & 0x10) == 0) {
    return result;
  }
LABEL_45:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227B356AC(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC1FE78;
  *(_DWORD *)(result + 76) = 0;
  return result;
}

void sub_227B356D4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227B3570C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC1FE78;
  *(_DWORD *)(a1 + 76) = 0;
  __int16 v2 = *(_WORD *)(a2 + 76);
  if ((v2 & 4) != 0)
  {
    double result = *(double *)(a2 + 24);
    __int16 v3 = 4;
    *(_WORD *)(a1 + 76) = 4;
    *(double *)(a1 + 24) = result;
    __int16 v2 = *(_WORD *)(a2 + 76);
    if ((v2 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 0x10) != 0)
  {
LABEL_5:
    double result = *(double *)(a2 + 40);
    v3 |= 0x10u;
    *(_WORD *)(a1 + 76) = v3;
    *(double *)(a1 + 40) = result;
    __int16 v2 = *(_WORD *)(a2 + 76);
  }
LABEL_6:
  if ((v2 & 8) != 0)
  {
    double result = *(double *)(a2 + 32);
    v3 |= 8u;
    *(_WORD *)(a1 + 76) = v3;
    *(double *)(a1 + 32) = result;
    __int16 v2 = *(_WORD *)(a2 + 76);
    if ((v2 & 0x20) == 0)
    {
LABEL_8:
      if ((v2 & 1) == 0) {
        goto LABEL_9;
      }
      goto LABEL_17;
    }
  }
  else if ((v2 & 0x20) == 0)
  {
    goto LABEL_8;
  }
  double result = *(double *)(a2 + 48);
  v3 |= 0x20u;
  *(_WORD *)(a1 + 76) = v3;
  *(double *)(a1 + 48) = result;
  __int16 v2 = *(_WORD *)(a2 + 76);
  if ((v2 & 1) == 0)
  {
LABEL_9:
    if ((v2 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_18;
  }
LABEL_17:
  double result = *(double *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(a1 + 76) = v3;
  *(double *)(a1 + 8) = result;
  __int16 v2 = *(_WORD *)(a2 + 76);
  if ((v2 & 0x80) == 0)
  {
LABEL_10:
    if ((v2 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_19;
  }
LABEL_18:
  double result = *(double *)(a2 + 64);
  v3 |= 0x80u;
  *(_WORD *)(a1 + 76) = v3;
  *(double *)(a1 + 64) = result;
  __int16 v2 = *(_WORD *)(a2 + 76);
  if ((v2 & 0x40) == 0)
  {
LABEL_11:
    if ((v2 & 0x200) == 0) {
      goto LABEL_12;
    }
    goto LABEL_20;
  }
LABEL_19:
  double result = *(double *)(a2 + 56);
  v3 |= 0x40u;
  *(_WORD *)(a1 + 76) = v3;
  *(double *)(a1 + 56) = result;
  __int16 v2 = *(_WORD *)(a2 + 76);
  if ((v2 & 0x200) == 0)
  {
LABEL_12:
    if ((v2 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_21;
  }
LABEL_20:
  char v5 = *(unsigned char *)(a2 + 73);
  v3 |= 0x200u;
  *(_WORD *)(a1 + 76) = v3;
  *(unsigned char *)(a1 + 73) = v5;
  __int16 v2 = *(_WORD *)(a2 + 76);
  if ((v2 & 0x100) == 0)
  {
LABEL_13:
    if ((v2 & 2) == 0) {
      return result;
    }
LABEL_22:
    double result = *(double *)(a2 + 16);
    *(_WORD *)(a1 + 76) = v3 | 2;
    *(double *)(a1 + 16) = result;
    return result;
  }
LABEL_21:
  char v6 = *(unsigned char *)(a2 + 72);
  v3 |= 0x100u;
  *(_WORD *)(a1 + 76) = v3;
  *(unsigned char *)(a1 + 72) = v6;
  if ((*(_WORD *)(a2 + 76) & 2) != 0) {
    goto LABEL_22;
  }
  return result;
}

uint64_t sub_227B35850(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 76);
  if (v5)
  {
    PB::TextFormatter::format(this, "emptyField2", *(double *)(a1 + 8));
    __int16 v5 = *(_WORD *)(a1 + 76);
    if ((v5 & 0x100) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((*(_WORD *)(a1 + 76) & 0x100) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "emptyField3");
  __int16 v5 = *(_WORD *)(a1 + 76);
  if ((v5 & 2) == 0)
  {
LABEL_4:
    if ((v5 & 0x200) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  PB::TextFormatter::format(this, "groundContactTime", *(double *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 76);
  if ((v5 & 0x200) == 0)
  {
LABEL_5:
    if ((v5 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "hasValidGroundContactTime");
  __int16 v5 = *(_WORD *)(a1 + 76);
  if ((v5 & 4) == 0)
  {
LABEL_6:
    if ((v5 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "leftGroundContactTime", *(double *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 76);
  if ((v5 & 8) == 0)
  {
LABEL_7:
    if ((v5 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "leftGroundContactTimePercentage", *(double *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 76);
  if ((v5 & 0x10) == 0)
  {
LABEL_8:
    if ((v5 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "rightGroundContactTime", *(double *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 76);
  if ((v5 & 0x20) == 0)
  {
LABEL_9:
    if ((v5 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "rightGroundContactTimePercentage", *(double *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 76);
  if ((v5 & 0x40) == 0)
  {
LABEL_10:
    if ((v5 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_23:
  PB::TextFormatter::format(this, "windowEndTime", *(double *)(a1 + 56));
  if ((*(_WORD *)(a1 + 76) & 0x80) != 0) {
LABEL_11:
  }
    PB::TextFormatter::format(this, "windowStartTime", *(double *)(a1 + 64));
LABEL_12:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B359D4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(_WORD *)(a1 + 76) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_49;
          }
          *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
          goto LABEL_57;
        case 2u:
          *(_WORD *)(a1 + 76) |= 0x10u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_49;
          }
          *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
          goto LABEL_57;
        case 3u:
          *(_WORD *)(a1 + 76) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_49;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
          goto LABEL_57;
        case 4u:
          *(_WORD *)(a1 + 76) |= 0x20u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_49;
          }
          *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
          goto LABEL_57;
        case 5u:
          *(_WORD *)(a1 + 76) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_49;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          goto LABEL_57;
        case 6u:
          *(_WORD *)(a1 + 76) |= 0x80u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_49;
          }
          *(void *)(a1 + 64) = *(void *)(*(void *)this + v2);
          goto LABEL_57;
        case 7u:
          *(_WORD *)(a1 + 76) |= 0x40u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_49;
          }
          *(void *)(a1 + 56) = *(void *)(*(void *)this + v2);
          goto LABEL_57;
        case 8u:
          *(_WORD *)(a1 + 76) |= 0x200u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 >= *((void *)this + 2))
          {
            BOOL v21 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            int v20 = *(unsigned __int8 *)(*(void *)this + v2++);
            *((void *)this + 1) = v2;
            BOOL v21 = v20 != 0;
          }
          *(unsigned char *)(a1 + 73) = v21;
          break;
        case 9u:
          *(_WORD *)(a1 + 76) |= 0x100u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 >= *((void *)this + 2))
          {
            BOOL v24 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            int v23 = *(unsigned __int8 *)(*(void *)this + v2++);
            *((void *)this + 1) = v2;
            BOOL v24 = v23 != 0;
          }
          *(unsigned char *)(a1 + 72) = v24;
          break;
        case 0xAu:
          *(_WORD *)(a1 + 76) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2))
          {
LABEL_49:
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
LABEL_57:
            unint64_t v2 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v2;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B35DCC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 76);
  if ((v4 & 4) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 24));
    __int16 v4 = *(_WORD *)(v3 + 76);
    if ((v4 & 0x10) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v4 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40));
  __int16 v4 = *(_WORD *)(v3 + 76);
  if ((v4 & 8) == 0)
  {
LABEL_4:
    if ((v4 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32));
  __int16 v4 = *(_WORD *)(v3 + 76);
  if ((v4 & 0x20) == 0)
  {
LABEL_5:
    if ((v4 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48));
  __int16 v4 = *(_WORD *)(v3 + 76);
  if ((v4 & 1) == 0)
  {
LABEL_6:
    if ((v4 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
  __int16 v4 = *(_WORD *)(v3 + 76);
  if ((v4 & 0x80) == 0)
  {
LABEL_7:
    if ((v4 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 64));
  __int16 v4 = *(_WORD *)(v3 + 76);
  if ((v4 & 0x40) == 0)
  {
LABEL_8:
    if ((v4 & 0x200) == 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 56));
  __int16 v4 = *(_WORD *)(v3 + 76);
  if ((v4 & 0x200) == 0)
  {
LABEL_9:
    if ((v4 & 0x100) == 0) {
      goto LABEL_10;
    }
LABEL_20:
    uint64_t result = PB::Writer::write(this);
    if ((*(_WORD *)(v3 + 76) & 2) == 0) {
      return result;
    }
    goto LABEL_21;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 76);
  if ((v4 & 0x100) != 0) {
    goto LABEL_20;
  }
LABEL_10:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_21:
  double v5 = *(double *)(v3 + 16);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227B35F1C(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC1FEB0;
  *(_DWORD *)(result + 88) = 0;
  return result;
}

void sub_227B35F44(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227B35F7C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC1FEB0;
  *(_DWORD *)(a1 + 88) = 0;
  __int16 v2 = *(_WORD *)(a2 + 88);
  if ((v2 & 0x800) != 0)
  {
    char v4 = *(unsigned char *)(a2 + 84);
    __int16 v3 = 2048;
    *(_WORD *)(a1 + 88) = 2048;
    *(unsigned char *)(a1 + 84) = v4;
    __int16 v2 = *(_WORD *)(a2 + 88);
    if ((v2 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if (v2)
  {
LABEL_5:
    double result = *(double *)(a2 + 8);
    v3 |= 1u;
    *(_WORD *)(a1 + 88) = v3;
    *(double *)(a1 + 8) = result;
    __int16 v2 = *(_WORD *)(a2 + 88);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    double result = *(double *)(a2 + 16);
    v3 |= 2u;
    *(_WORD *)(a1 + 88) = v3;
    *(double *)(a1 + 16) = result;
    __int16 v2 = *(_WORD *)(a2 + 88);
    if ((v2 & 0x20) == 0)
    {
LABEL_8:
      if ((v2 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_21;
    }
  }
  else if ((v2 & 0x20) == 0)
  {
    goto LABEL_8;
  }
  double result = *(double *)(a2 + 48);
  v3 |= 0x20u;
  *(_WORD *)(a1 + 88) = v3;
  *(double *)(a1 + 48) = result;
  __int16 v2 = *(_WORD *)(a2 + 88);
  if ((v2 & 8) == 0)
  {
LABEL_9:
    if ((v2 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  double result = *(double *)(a2 + 32);
  v3 |= 8u;
  *(_WORD *)(a1 + 88) = v3;
  *(double *)(a1 + 32) = result;
  __int16 v2 = *(_WORD *)(a2 + 88);
  if ((v2 & 0x10) == 0)
  {
LABEL_10:
    if ((v2 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  double result = *(double *)(a2 + 40);
  v3 |= 0x10u;
  *(_WORD *)(a1 + 88) = v3;
  *(double *)(a1 + 40) = result;
  __int16 v2 = *(_WORD *)(a2 + 88);
  if ((v2 & 0x80) == 0)
  {
LABEL_11:
    if ((v2 & 0x40) == 0) {
      goto LABEL_12;
    }
    goto LABEL_24;
  }
LABEL_23:
  double result = *(double *)(a2 + 64);
  v3 |= 0x80u;
  *(_WORD *)(a1 + 88) = v3;
  *(double *)(a1 + 64) = result;
  __int16 v2 = *(_WORD *)(a2 + 88);
  if ((v2 & 0x40) == 0)
  {
LABEL_12:
    if ((v2 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_25;
  }
LABEL_24:
  double result = *(double *)(a2 + 56);
  v3 |= 0x40u;
  *(_WORD *)(a1 + 88) = v3;
  *(double *)(a1 + 56) = result;
  __int16 v2 = *(_WORD *)(a2 + 88);
  if ((v2 & 0x200) == 0)
  {
LABEL_13:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_26;
  }
LABEL_25:
  int v6 = *(_DWORD *)(a2 + 76);
  v3 |= 0x200u;
  *(_WORD *)(a1 + 88) = v3;
  *(_DWORD *)(a1 + 76) = v6;
  __int16 v2 = *(_WORD *)(a2 + 88);
  if ((v2 & 0x1000) == 0)
  {
LABEL_14:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_27;
  }
LABEL_26:
  char v7 = *(unsigned char *)(a2 + 85);
  v3 |= 0x1000u;
  *(_WORD *)(a1 + 88) = v3;
  *(unsigned char *)(a1 + 85) = v7;
  __int16 v2 = *(_WORD *)(a2 + 88);
  if ((v2 & 0x2000) == 0)
  {
LABEL_15:
    if ((v2 & 0x400) == 0) {
      goto LABEL_16;
    }
    goto LABEL_28;
  }
LABEL_27:
  char v8 = *(unsigned char *)(a2 + 86);
  v3 |= 0x2000u;
  *(_WORD *)(a1 + 88) = v3;
  *(unsigned char *)(a1 + 86) = v8;
  __int16 v2 = *(_WORD *)(a2 + 88);
  if ((v2 & 0x400) == 0)
  {
LABEL_16:
    if ((v2 & 0x100) == 0) {
      goto LABEL_17;
    }
    goto LABEL_29;
  }
LABEL_28:
  int v9 = *(_DWORD *)(a2 + 80);
  v3 |= 0x400u;
  *(_WORD *)(a1 + 88) = v3;
  *(_DWORD *)(a1 + 80) = v9;
  __int16 v2 = *(_WORD *)(a2 + 88);
  if ((v2 & 0x100) == 0)
  {
LABEL_17:
    if ((v2 & 4) == 0) {
      return result;
    }
LABEL_30:
    double result = *(double *)(a2 + 24);
    *(_WORD *)(a1 + 88) = v3 | 4;
    *(double *)(a1 + 24) = result;
    return result;
  }
LABEL_29:
  int v10 = *(_DWORD *)(a2 + 72);
  v3 |= 0x100u;
  *(_WORD *)(a1 + 88) = v3;
  *(_DWORD *)(a1 + 72) = v10;
  if ((*(_WORD *)(a2 + 88) & 4) != 0) {
    goto LABEL_30;
  }
  return result;
}

uint64_t sub_227B36130(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 0x100) != 0)
  {
    PB::TextFormatter::format(this, "crownOrientation");
    __int16 v5 = *(_WORD *)(a1 + 88);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_21;
    }
  }
  else if ((v5 & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "groundContactTime", *(double *)(a1 + 8));
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 2) == 0)
  {
LABEL_4:
    if ((v5 & 0x800) == 0) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "initialContactTime", *(double *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 0x800) == 0)
  {
LABEL_5:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "isSuccessful");
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 0x1000) == 0)
  {
LABEL_6:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "isValidSide");
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 0x2000) == 0)
  {
LABEL_7:
    if ((v5 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "isValidToeOff");
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 4) == 0)
  {
LABEL_8:
    if ((v5 & 8) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "meanRotationZ", *(double *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 8) == 0)
  {
LABEL_9:
    if ((v5 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "relativeInitialContactTime", *(double *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 0x10) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "relativeToeOffTime", *(double *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "stepSide");
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 0x20) == 0)
  {
LABEL_12:
    if ((v5 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(this, "toeOffTime", *(double *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 0x40) == 0)
  {
LABEL_13:
    if ((v5 & 0x80) == 0) {
      goto LABEL_14;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "windowEndTime", *(double *)(a1 + 56));
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 0x80) == 0)
  {
LABEL_14:
    if ((v5 & 0x400) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_31:
  PB::TextFormatter::format(this, "windowStartTime", *(double *)(a1 + 64));
  if ((*(_WORD *)(a1 + 88) & 0x400) != 0) {
LABEL_15:
  }
    PB::TextFormatter::format(this, "wristOrientation");
LABEL_16:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B36334(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 88) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v21 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v20 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v21 = v20 != 0;
              }
              *(unsigned char *)(a1 + 84) = v21;
              goto LABEL_119;
            case 2u:
              *(_WORD *)(a1 + 88) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_74;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_103;
            case 3u:
              *(_WORD *)(a1 + 88) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_74;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_103;
            case 4u:
              *(_WORD *)(a1 + 88) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_74;
              }
              *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
              goto LABEL_103;
            case 5u:
              *(_WORD *)(a1 + 88) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_74;
              }
              *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
              goto LABEL_103;
            case 6u:
              *(_WORD *)(a1 + 88) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_74;
              }
              *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
              goto LABEL_103;
            case 7u:
              *(_WORD *)(a1 + 88) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_74;
              }
              *(void *)(a1 + 64) = *(void *)(*(void *)this + v2);
              goto LABEL_103;
            case 8u:
              *(_WORD *)(a1 + 88) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_74;
              }
              *(void *)(a1 + 56) = *(void *)(*(void *)this + v2);
              goto LABEL_103;
            case 9u:
              *(_WORD *)(a1 + 88) |= 0x200u;
              unint64_t v23 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v24 = *(void *)this;
              if (v23 > 0xFFFFFFFFFFFFFFF5 || v23 + 10 > v2)
              {
                char v45 = 0;
                unsigned int v46 = 0;
                uint64_t v27 = 0;
                if (v2 <= v23) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v23)
                  {
                    LODWORD(v27) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_108;
                  }
                  unint64_t v47 = v23++;
                  char v48 = *(unsigned char *)(v24 + v47);
                  *((void *)this + 1) = v23;
                  v27 |= (unint64_t)(v48 & 0x7F) << v45;
                  if ((v48 & 0x80) == 0) {
                    break;
                  }
                  v45 += 7;
                  BOOL v14 = v46++ > 8;
                  if (v14)
                  {
                    LODWORD(v27) = 0;
LABEL_107:
                    unint64_t v2 = v47 + 1;
                    goto LABEL_108;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v27) = 0;
                }
                goto LABEL_107;
              }
              char v25 = 0;
              unsigned int v26 = 0;
              uint64_t v27 = 0;
              do
              {
                unint64_t v2 = v23 + 1;
                *((void *)this + 1) = v23 + 1;
                char v28 = *(unsigned char *)(v24 + v23);
                v27 |= (unint64_t)(v28 & 0x7F) << v25;
                if ((v28 & 0x80) == 0) {
                  goto LABEL_108;
                }
                v25 += 7;
                unint64_t v23 = v2;
                BOOL v14 = v26++ > 8;
              }
              while (!v14);
              LODWORD(v27) = 0;
LABEL_108:
              *(_DWORD *)(a1 + 76) = v27;
              goto LABEL_119;
            case 0xAu:
              *(_WORD *)(a1 + 88) |= 0x1000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v30 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v29 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v30 = v29 != 0;
              }
              *(unsigned char *)(a1 + 85) = v30;
              goto LABEL_119;
            case 0xBu:
              *(_WORD *)(a1 + 88) |= 0x2000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v32 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v31 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v32 = v31 != 0;
              }
              *(unsigned char *)(a1 + 86) = v32;
              goto LABEL_119;
            case 0xCu:
              *(_WORD *)(a1 + 88) |= 0x400u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v49 = 0;
                unsigned int v50 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_113;
                  }
                  unint64_t v51 = v33++;
                  char v52 = *(unsigned char *)(v34 + v51);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v52 & 0x7F) << v49;
                  if ((v52 & 0x80) == 0) {
                    break;
                  }
                  v49 += 7;
                  BOOL v14 = v50++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_112:
                    unint64_t v2 = v51 + 1;
                    goto LABEL_113;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_112;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_113;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_113:
              *(_DWORD *)(a1 + 80) = v37;
              goto LABEL_119;
            case 0xDu:
              *(_WORD *)(a1 + 88) |= 0x100u;
              unint64_t v39 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v40 = *(void *)this;
              if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
              {
                char v53 = 0;
                unsigned int v54 = 0;
                uint64_t v43 = 0;
                if (v2 <= v39) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v39)
                  {
                    LODWORD(v43) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_118;
                  }
                  unint64_t v55 = v39++;
                  char v56 = *(unsigned char *)(v40 + v55);
                  *((void *)this + 1) = v39;
                  v43 |= (unint64_t)(v56 & 0x7F) << v53;
                  if ((v56 & 0x80) == 0) {
                    break;
                  }
                  v53 += 7;
                  BOOL v14 = v54++ > 8;
                  if (v14)
                  {
                    LODWORD(v43) = 0;
LABEL_117:
                    unint64_t v2 = v55 + 1;
                    goto LABEL_118;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v43) = 0;
                }
                goto LABEL_117;
              }
              char v41 = 0;
              unsigned int v42 = 0;
              uint64_t v43 = 0;
              do
              {
                unint64_t v2 = v39 + 1;
                *((void *)this + 1) = v39 + 1;
                char v44 = *(unsigned char *)(v40 + v39);
                v43 |= (unint64_t)(v44 & 0x7F) << v41;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_118;
                }
                v41 += 7;
                unint64_t v39 = v2;
                BOOL v14 = v42++ > 8;
              }
              while (!v14);
              LODWORD(v43) = 0;
LABEL_118:
              *(_DWORD *)(a1 + 72) = v43;
LABEL_119:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 0xEu:
              *(_WORD *)(a1 + 88) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
LABEL_103:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_74:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_119;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_119;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B36A44(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 88);
  if ((v4 & 0x800) != 0)
  {
    uint64_t result = PB::Writer::write(this);
    __int16 v4 = *(_WORD *)(v3 + 88);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v4 & 1) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 2) == 0)
  {
LABEL_4:
    if ((v4 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 0x20) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48));
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32));
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40));
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 0x80) == 0)
  {
LABEL_8:
    if ((v4 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 64));
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 0x40) == 0)
  {
LABEL_9:
    if ((v4 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 56));
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 0x200) == 0)
  {
LABEL_10:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 0x1000) == 0)
  {
LABEL_11:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 0x2000) == 0)
  {
LABEL_12:
    if ((v4 & 0x400) == 0) {
      goto LABEL_13;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 0x400) == 0)
  {
LABEL_13:
    if ((v4 & 0x100) == 0) {
      goto LABEL_14;
    }
LABEL_28:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(_WORD *)(v3 + 88) & 4) == 0) {
      return result;
    }
    goto LABEL_29;
  }
LABEL_27:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 0x100) != 0) {
    goto LABEL_28;
  }
LABEL_14:
  if ((v4 & 4) == 0) {
    return result;
  }
LABEL_29:
  double v5 = *(double *)(v3 + 24);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227B36C04(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC1FEE8;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

void sub_227B36C2C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227B36C64(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC1FEE8;
  *(_DWORD *)(a1 + 48) = 0;
  char v2 = *(unsigned char *)(a2 + 48);
  if ((v2 & 0x20) != 0)
  {
    char v4 = *(unsigned char *)(a2 + 44);
    char v3 = 32;
    *(unsigned char *)(a1 + 48) = 32;
    *(unsigned char *)(a1 + 44) = v4;
    char v2 = *(unsigned char *)(a2 + 48);
    if ((v2 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if (*(unsigned char *)(a2 + 48))
  {
LABEL_5:
    double result = *(double *)(a2 + 8);
    v3 |= 1u;
    *(unsigned char *)(a1 + 48) = v3;
    *(double *)(a1 + 8) = result;
    char v2 = *(unsigned char *)(a2 + 48);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    double result = *(double *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(a1 + 48) = v3;
    *(double *)(a1 + 16) = result;
    char v2 = *(unsigned char *)(a2 + 48);
    if ((v2 & 4) == 0)
    {
LABEL_8:
      if ((v2 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_13;
    }
  }
  else if ((v2 & 4) == 0)
  {
    goto LABEL_8;
  }
  double result = *(double *)(a2 + 24);
  v3 |= 4u;
  *(unsigned char *)(a1 + 48) = v3;
  *(double *)(a1 + 24) = result;
  char v2 = *(unsigned char *)(a2 + 48);
  if ((v2 & 0x10) == 0)
  {
LABEL_9:
    if ((v2 & 8) == 0) {
      return result;
    }
LABEL_14:
    double result = *(double *)(a2 + 32);
    *(unsigned char *)(a1 + 48) = v3 | 8;
    *(double *)(a1 + 32) = result;
    return result;
  }
LABEL_13:
  int v6 = *(_DWORD *)(a2 + 40);
  v3 |= 0x10u;
  *(unsigned char *)(a1 + 48) = v3;
  *(_DWORD *)(a1 + 40) = v6;
  if ((*(unsigned char *)(a2 + 48) & 8) != 0) {
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_227B36D38(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 48);
  if (v5)
  {
    PB::TextFormatter::format(this, "groundContactTime", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 48);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((*(unsigned char *)(a1 + 48) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "initialContactTime", *(double *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 48);
  if ((v5 & 0x20) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  PB::TextFormatter::format(this, "isSuccessful");
  char v5 = *(unsigned char *)(a1 + 48);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(this, "stepSide");
  char v5 = *(unsigned char *)(a1 + 48);
  if ((v5 & 4) == 0)
  {
LABEL_6:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_15:
  PB::TextFormatter::format(this, "toeOffTime", *(double *)(a1 + 24));
  if ((*(unsigned char *)(a1 + 48) & 8) != 0) {
LABEL_7:
  }
    PB::TextFormatter::format(this, "windowStartTime", *(double *)(a1 + 32));
LABEL_8:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B36E3C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 48) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v21 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v20 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v21 = v20 != 0;
              }
              *(unsigned char *)(a1 + 44) = v21;
              goto LABEL_61;
            case 2u:
              *(unsigned char *)(a1 + 48) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_44;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_55;
            case 3u:
              *(unsigned char *)(a1 + 48) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_44;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_55;
            case 4u:
              *(unsigned char *)(a1 + 48) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_44;
              }
              *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
              goto LABEL_55;
            case 5u:
              *(unsigned char *)(a1 + 48) |= 0x10u;
              unint64_t v23 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v24 = *(void *)this;
              if (v23 > 0xFFFFFFFFFFFFFFF5 || v23 + 10 > v2)
              {
                char v29 = 0;
                unsigned int v30 = 0;
                uint64_t v27 = 0;
                if (v2 <= v23) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v23)
                  {
                    LODWORD(v27) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_60;
                  }
                  unint64_t v31 = v23++;
                  char v32 = *(unsigned char *)(v24 + v31);
                  *((void *)this + 1) = v23;
                  v27 |= (unint64_t)(v32 & 0x7F) << v29;
                  if ((v32 & 0x80) == 0) {
                    break;
                  }
                  v29 += 7;
                  BOOL v14 = v30++ > 8;
                  if (v14)
                  {
                    LODWORD(v27) = 0;
LABEL_59:
                    unint64_t v2 = v31 + 1;
                    goto LABEL_60;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v27) = 0;
                }
                goto LABEL_59;
              }
              char v25 = 0;
              unsigned int v26 = 0;
              uint64_t v27 = 0;
              do
              {
                unint64_t v2 = v23 + 1;
                *((void *)this + 1) = v23 + 1;
                char v28 = *(unsigned char *)(v24 + v23);
                v27 |= (unint64_t)(v28 & 0x7F) << v25;
                if ((v28 & 0x80) == 0) {
                  goto LABEL_60;
                }
                v25 += 7;
                unint64_t v23 = v2;
                BOOL v14 = v26++ > 8;
              }
              while (!v14);
              LODWORD(v27) = 0;
LABEL_60:
              *(_DWORD *)(a1 + 40) = v27;
LABEL_61:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 6u:
              *(unsigned char *)(a1 + 48) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
LABEL_55:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_44:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_61;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_61;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B371EC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 48);
  if ((v4 & 0x20) != 0)
  {
    uint64_t result = PB::Writer::write(this);
    char v4 = *(unsigned char *)(v3 + 48);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((*(unsigned char *)(result + 48) & 1) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
  char v4 = *(unsigned char *)(v3 + 48);
  if ((v4 & 2) == 0)
  {
LABEL_4:
    if ((v4 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  char v4 = *(unsigned char *)(v3 + 48);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(unsigned char *)(v3 + 48) & 8) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_11:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24));
  char v4 = *(unsigned char *)(v3 + 48);
  if ((v4 & 0x10) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v4 & 8) == 0) {
    return result;
  }
LABEL_13:
  double v5 = *(double *)(v3 + 32);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227B372CC(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC1FF20;
  *(_DWORD *)(result + 52) = 0;
  return result;
}

void sub_227B372F4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227B3732C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC1FF20;
  *(_DWORD *)(a1 + 52) = 0;
  __int16 v2 = *(_WORD *)(a2 + 52);
  if ((v2 & 0x20) != 0)
  {
    float result = *(float *)(a2 + 28);
    __int16 v3 = 32;
    *(_WORD *)(a1 + 52) = 32;
    *(float *)(a1 + 28) = result;
    __int16 v2 = *(_WORD *)(a2 + 52);
    if ((v2 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 0x40) != 0)
  {
LABEL_5:
    float result = *(float *)(a2 + 32);
    v3 |= 0x40u;
    *(_WORD *)(a1 + 52) = v3;
    *(float *)(a1 + 32) = result;
    __int16 v2 = *(_WORD *)(a2 + 52);
  }
LABEL_6:
  if (v2)
  {
    float result = *(float *)(a2 + 8);
    v3 |= 1u;
    *(_WORD *)(a1 + 52) = v3;
    *(float *)(a1 + 8) = result;
    __int16 v2 = *(_WORD *)(a2 + 52);
    if ((v2 & 2) == 0)
    {
LABEL_8:
      if ((v2 & 0x100) == 0) {
        goto LABEL_9;
      }
      goto LABEL_18;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_8;
  }
  float result = *(float *)(a2 + 12);
  v3 |= 2u;
  *(_WORD *)(a1 + 52) = v3;
  *(float *)(a1 + 12) = result;
  __int16 v2 = *(_WORD *)(a2 + 52);
  if ((v2 & 0x100) == 0)
  {
LABEL_9:
    if ((v2 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_19;
  }
LABEL_18:
  float result = *(float *)(a2 + 40);
  v3 |= 0x100u;
  *(_WORD *)(a1 + 52) = v3;
  *(float *)(a1 + 40) = result;
  __int16 v2 = *(_WORD *)(a2 + 52);
  if ((v2 & 0x200) == 0)
  {
LABEL_10:
    if ((v2 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_20;
  }
LABEL_19:
  float result = *(float *)(a2 + 44);
  v3 |= 0x200u;
  *(_WORD *)(a1 + 52) = v3;
  *(float *)(a1 + 44) = result;
  __int16 v2 = *(_WORD *)(a2 + 52);
  if ((v2 & 0x400) == 0)
  {
LABEL_11:
    if ((v2 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_21;
  }
LABEL_20:
  float result = *(float *)(a2 + 48);
  v3 |= 0x400u;
  *(_WORD *)(a1 + 52) = v3;
  *(float *)(a1 + 48) = result;
  __int16 v2 = *(_WORD *)(a2 + 52);
  if ((v2 & 0x80) == 0)
  {
LABEL_12:
    if ((v2 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_22;
  }
LABEL_21:
  float result = *(float *)(a2 + 36);
  v3 |= 0x80u;
  *(_WORD *)(a1 + 52) = v3;
  *(float *)(a1 + 36) = result;
  __int16 v2 = *(_WORD *)(a2 + 52);
  if ((v2 & 8) == 0)
  {
LABEL_13:
    if ((v2 & 4) == 0) {
      goto LABEL_14;
    }
    goto LABEL_23;
  }
LABEL_22:
  float result = *(float *)(a2 + 20);
  v3 |= 8u;
  *(_WORD *)(a1 + 52) = v3;
  *(float *)(a1 + 20) = result;
  __int16 v2 = *(_WORD *)(a2 + 52);
  if ((v2 & 4) == 0)
  {
LABEL_14:
    if ((v2 & 0x10) == 0) {
      return result;
    }
LABEL_24:
    float result = *(float *)(a2 + 24);
    *(_WORD *)(a1 + 52) = v3 | 0x10;
    *(float *)(a1 + 24) = result;
    return result;
  }
LABEL_23:
  float result = *(float *)(a2 + 16);
  v3 |= 4u;
  *(_WORD *)(a1 + 52) = v3;
  *(float *)(a1 + 16) = result;
  if ((*(_WORD *)(a2 + 52) & 0x10) != 0) {
    goto LABEL_24;
  }
  return result;
}

uint64_t sub_227B3748C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 52);
  if (v5)
  {
    PB::TextFormatter::format(this, "altitude", *(float *)(a1 + 8));
    __int16 v5 = *(_WORD *)(a1 + 52);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "decimalYear", *(float *)(a1 + 12));
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "declination", *(float *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "horizontal", *(float *)(a1 + 20));
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "inclination", *(float *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "latitude", *(float *)(a1 + 28));
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "longitude", *(float *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "magnitude", *(float *)(a1 + 36));
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 0x100) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "x", *(float *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_25:
  PB::TextFormatter::format(this, "y", *(float *)(a1 + 44));
  if ((*(_WORD *)(a1 + 52) & 0x400) != 0) {
LABEL_12:
  }
    PB::TextFormatter::format(this, "z", *(float *)(a1 + 48));
LABEL_13:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B37630(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(_WORD *)(a1 + 52) |= 0x20u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_54;
          }
          *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_58;
        case 2u:
          *(_WORD *)(a1 + 52) |= 0x40u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_54;
          }
          *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_58;
        case 3u:
          *(_WORD *)(a1 + 52) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_54;
          }
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_58;
        case 4u:
          *(_WORD *)(a1 + 52) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_54;
          }
          *(_DWORD *)(a1 + 12) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_58;
        case 5u:
          *(_WORD *)(a1 + 52) |= 0x100u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_54;
          }
          *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_58;
        case 6u:
          *(_WORD *)(a1 + 52) |= 0x200u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_54;
          }
          *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_58;
        case 7u:
          *(_WORD *)(a1 + 52) |= 0x400u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_54;
          }
          *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_58;
        case 8u:
          *(_WORD *)(a1 + 52) |= 0x80u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_54;
          }
          *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_58;
        case 9u:
          *(_WORD *)(a1 + 52) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_54;
          }
          *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_58;
        case 0xAu:
          *(_WORD *)(a1 + 52) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_54;
          }
          *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_58;
        case 0xBu:
          *(_WORD *)(a1 + 52) |= 0x10u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
LABEL_58:
            unint64_t v2 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_54:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B37A4C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 52);
  if ((v4 & 0x20) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(result + 28));
    __int16 v4 = *(_WORD *)(v3 + 52);
    if ((v4 & 0x40) == 0)
    {
LABEL_3:
      if ((v4 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v4 & 0x40) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
  __int16 v4 = *(_WORD *)(v3 + 52);
  if ((v4 & 1) == 0)
  {
LABEL_4:
    if ((v4 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 8));
  __int16 v4 = *(_WORD *)(v3 + 52);
  if ((v4 & 2) == 0)
  {
LABEL_5:
    if ((v4 & 0x100) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 12));
  __int16 v4 = *(_WORD *)(v3 + 52);
  if ((v4 & 0x100) == 0)
  {
LABEL_6:
    if ((v4 & 0x200) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
  __int16 v4 = *(_WORD *)(v3 + 52);
  if ((v4 & 0x200) == 0)
  {
LABEL_7:
    if ((v4 & 0x400) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44));
  __int16 v4 = *(_WORD *)(v3 + 52);
  if ((v4 & 0x400) == 0)
  {
LABEL_8:
    if ((v4 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48));
  __int16 v4 = *(_WORD *)(v3 + 52);
  if ((v4 & 0x80) == 0)
  {
LABEL_9:
    if ((v4 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36));
  __int16 v4 = *(_WORD *)(v3 + 52);
  if ((v4 & 8) == 0)
  {
LABEL_10:
    if ((v4 & 4) == 0) {
      goto LABEL_11;
    }
LABEL_22:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16));
    if ((*(_WORD *)(v3 + 52) & 0x10) == 0) {
      return result;
    }
    goto LABEL_23;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
  __int16 v4 = *(_WORD *)(v3 + 52);
  if ((v4 & 4) != 0) {
    goto LABEL_22;
  }
LABEL_11:
  if ((v4 & 0x10) == 0) {
    return result;
  }
LABEL_23:
  float v5 = *(float *)(v3 + 24);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227B37BB8(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC1FF58;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void sub_227B37BE4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227B37C1C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC1FF58;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  char v2 = *(unsigned char *)(a2 + 32);
  if ((v2 & 2) != 0)
  {
    double result = *(double *)(a2 + 16);
    char v3 = 2;
    *(unsigned char *)(a1 + 32) = 2;
    *(double *)(a1 + 16) = result;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 32) & 8) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 28);
    v3 |= 8u;
    *(unsigned char *)(a1 + 32) = v3;
    *(_DWORD *)(a1 + 28) = v5;
    char v2 = *(unsigned char *)(a2 + 32);
  }
LABEL_6:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 1) == 0) {
      return result;
    }
LABEL_10:
    double result = *(double *)(a2 + 8);
    *(unsigned char *)(a1 + 32) = v3 | 1;
    *(double *)(a1 + 8) = result;
    return result;
  }
  int v6 = *(_DWORD *)(a2 + 24);
  v3 |= 4u;
  *(unsigned char *)(a1 + 32) = v3;
  *(_DWORD *)(a1 + 24) = v6;
  if (*(unsigned char *)(a2 + 32)) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_227B37CBC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "measSource");
    char v5 = *(unsigned char *)(a1 + 32);
    if ((v5 & 8) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 32) & 8) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "state");
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 1) == 0)
  {
LABEL_4:
    if ((v5 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "stateProbability", *(double *)(a1 + 8));
  if ((*(unsigned char *)(a1 + 32) & 2) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 16));
LABEL_6:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B37D80(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 32) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_43;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_59;
            case 2u:
              *(unsigned char *)(a1 + 32) |= 8u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v33 = 0;
                unsigned int v34 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_64;
                  }
                  unint64_t v35 = v21++;
                  char v36 = *(unsigned char *)(v22 + v35);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v36 & 0x7F) << v33;
                  if ((v36 & 0x80) == 0) {
                    break;
                  }
                  v33 += 7;
                  BOOL v14 = v34++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_63:
                    unint64_t v2 = v35 + 1;
                    goto LABEL_64;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_63;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_64;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_64:
              *(_DWORD *)(a1 + 28) = v25;
              goto LABEL_70;
            case 3u:
              *(unsigned char *)(a1 + 32) |= 4u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v37 = 0;
                unsigned int v38 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_69;
                  }
                  unint64_t v39 = v27++;
                  char v40 = *(unsigned char *)(v28 + v39);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v40 & 0x7F) << v37;
                  if ((v40 & 0x80) == 0) {
                    break;
                  }
                  v37 += 7;
                  BOOL v14 = v38++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_68:
                    unint64_t v2 = v39 + 1;
                    goto LABEL_69;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_68;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_69;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_69:
              *(_DWORD *)(a1 + 24) = v31;
LABEL_70:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 4u:
              *(unsigned char *)(a1 + 32) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
LABEL_59:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_43:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_70;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_70;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B38160(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 16));
    char v4 = *(unsigned char *)(v3 + 32);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::writeVarInt(this);
      if ((*(unsigned char *)(v3 + 32) & 1) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 32) & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 1) == 0) {
    return result;
  }
LABEL_9:
  double v5 = *(double *)(v3 + 8);

  return PB::Writer::write(this, v5);
}

double sub_227B38208(uint64_t a1)
{
  *(void *)a1 = &unk_26DC1FF90;
  *(_DWORD *)(a1 + 152) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(void *)(a1 + 136) = 0;
  return result;
}

void sub_227B38250(void **a1)
{
  *a1 = &unk_26DC1FF90;
  unint64_t v2 = a1 + 3;
  uint64_t v3 = a1 + 15;
  sub_227B8B5D0(&v3);
  uint64_t v3 = a1 + 12;
  sub_227B8B5D0(&v3);
  uint64_t v3 = a1 + 9;
  sub_227B8B5D0(&v3);
  uint64_t v3 = a1 + 6;
  sub_227B8B5D0(&v3);
  uint64_t v3 = v2;
  sub_227B8B5D0(&v3);
  PB::Base::~Base((PB::Base *)a1);
}

void sub_227B382F0(void **a1)
{
  sub_227B38250(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B38328(uint64_t result, uint64_t a2)
{
  *(void *)double result = &unk_26DC1FF90;
  *(_OWORD *)(result + 24) = 0u;
  *(_OWORD *)(result + 72) = 0u;
  *(_OWORD *)(result + 120) = 0u;
  *(_DWORD *)(result + 152) = 0;
  *(_OWORD *)(result + 40) = 0u;
  *(_OWORD *)(result + 56) = 0u;
  *(_OWORD *)(result + 88) = 0u;
  *(_OWORD *)(result + 104) = 0u;
  *(void *)(result + 136) = 0;
  if ((*(unsigned char *)(a2 + 152) & 4) != 0)
  {
    uint64_t v2 = *(void *)(a2 + 144);
    *(unsigned char *)(result + 152) = 4;
    *(void *)(result + 144) = v2;
  }
  if (*(void *)(a2 + 96) != *(void *)(a2 + 104)) {
    sub_227B384CC();
  }
  if (*(void *)(a2 + 72) != *(void *)(a2 + 80)) {
    sub_227B384CC();
  }
  if (*(void *)(a2 + 120) != *(void *)(a2 + 128)) {
    sub_227B384CC();
  }
  if (*(void *)(a2 + 48) != *(void *)(a2 + 56)) {
    sub_227B384CC();
  }
  if (*(void *)(a2 + 24) != *(void *)(a2 + 32)) {
    sub_227B384CC();
  }
  char v3 = *(unsigned char *)(a2 + 152);
  if ((v3 & 2) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 16);
    *(unsigned char *)(result + 152) |= 2u;
    *(void *)(result + 16) = v4;
    char v3 = *(unsigned char *)(a2 + 152);
  }
  if (v3)
  {
    uint64_t v5 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 152) |= 1u;
    *(void *)(result + 8) = v5;
  }
  return result;
}

void sub_227B384CC()
{
}

void sub_227B385D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_227B8BDA0((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_227B38618(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 152);
  if (v5)
  {
    PB::TextFormatter::format(this, "lifespan", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 152);
  }
  if ((v5 & 2) != 0) {
    PB::TextFormatter::format(this, "machTime", *(double *)(a1 + 16));
  }
  int v6 = *(uint64_t **)(a1 + 24);
  char v7 = *(uint64_t **)(a1 + 32);
  while (v6 != v7)
  {
    uint64_t v8 = *v6++;
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v8 + 32))(v8, this, "satInfoBeidou");
  }
  char v9 = *(uint64_t **)(a1 + 48);
  unsigned int v10 = *(uint64_t **)(a1 + 56);
  while (v9 != v10)
  {
    uint64_t v11 = *v9++;
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v11 + 32))(v11, this, "satInfoGalileo");
  }
  unint64_t v12 = *(uint64_t **)(a1 + 72);
  char v13 = *(uint64_t **)(a1 + 80);
  while (v12 != v13)
  {
    uint64_t v14 = *v12++;
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v14 + 32))(v14, this, "satInfoGlonass");
  }
  char v15 = *(uint64_t **)(a1 + 96);
  unsigned int v16 = *(uint64_t **)(a1 + 104);
  while (v15 != v16)
  {
    uint64_t v17 = *v15++;
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v17 + 32))(v17, this, "satInfoGps");
  }
  char v18 = *(uint64_t **)(a1 + 120);
  int v19 = *(uint64_t **)(a1 + 128);
  while (v18 != v19)
  {
    uint64_t v20 = *v18++;
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v20 + 32))(v20, this, "satInfoQzss");
  }
  if ((*(unsigned char *)(a1 + 152) & 4) != 0) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 144));
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B3883C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          if (v10++ > 8) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 152) |= 4u;
              unint64_t v20 = *((void *)this + 1);
              if (v20 > 0xFFFFFFFFFFFFFFF7 || v20 + 8 > *((void *)this + 2)) {
                goto LABEL_37;
              }
              *(void *)(a1 + 144) = *(void *)(*(void *)this + v20);
              goto LABEL_39;
            case 2u:
              sub_227B38B64();
            case 3u:
              sub_227B38B64();
            case 4u:
              sub_227B38B64();
            case 5u:
              sub_227B38B64();
            case 6u:
              sub_227B38B64();
            case 7u:
              *(unsigned char *)(a1 + 152) |= 2u;
              unint64_t v23 = *((void *)this + 1);
              if (v23 > 0xFFFFFFFFFFFFFFF7 || v23 + 8 > *((void *)this + 2)) {
                goto LABEL_37;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v23);
              goto LABEL_39;
            case 8u:
              *(unsigned char *)(a1 + 152) |= 1u;
              unint64_t v21 = *((void *)this + 1);
              if (v21 > 0xFFFFFFFFFFFFFFF7 || v21 + 8 > *((void *)this + 2))
              {
LABEL_37:
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                *(void *)(a1 + 8) = *(void *)(*(void *)this + v21);
LABEL_39:
                *((void *)this + 1) += 8;
              }
LABEL_40:
              unint64_t v2 = *((void *)this + 1);
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || *((unsigned char *)this + 24)) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              goto LABEL_40;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

void sub_227B38B64()
{
}

void sub_227B38C60(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_227B8BDA0((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_227B38CA4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  if ((*(unsigned char *)(result + 152) & 4) != 0) {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 144));
  }
  int v4 = *(const PB::Base ***)(v3 + 96);
  char v5 = *(const PB::Base ***)(v3 + 104);
  while (v4 != v5)
  {
    int v6 = *v4++;
    uint64_t result = PB::Writer::writeSubmessage(this, v6);
  }
  char v7 = *(const PB::Base ***)(v3 + 72);
  uint64_t v8 = *(const PB::Base ***)(v3 + 80);
  while (v7 != v8)
  {
    char v9 = *v7++;
    uint64_t result = PB::Writer::writeSubmessage(this, v9);
  }
  unsigned int v10 = *(const PB::Base ***)(v3 + 120);
  unint64_t v11 = *(const PB::Base ***)(v3 + 128);
  while (v10 != v11)
  {
    unint64_t v12 = *v10++;
    uint64_t result = PB::Writer::writeSubmessage(this, v12);
  }
  char v13 = *(const PB::Base ***)(v3 + 48);
  uint64_t v14 = *(const PB::Base ***)(v3 + 56);
  while (v13 != v14)
  {
    char v15 = *v13++;
    uint64_t result = PB::Writer::writeSubmessage(this, v15);
  }
  unsigned int v16 = *(const PB::Base ***)(v3 + 24);
  unint64_t v17 = *(const PB::Base ***)(v3 + 32);
  while (v16 != v17)
  {
    char v18 = *v16++;
    uint64_t result = PB::Writer::writeSubmessage(this, v18);
  }
  char v19 = *(unsigned char *)(v3 + 152);
  if ((v19 & 2) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
    char v19 = *(unsigned char *)(v3 + 152);
  }
  if (v19)
  {
    double v20 = *(double *)(v3 + 8);
    return PB::Writer::write(this, v20);
  }
  return result;
}

uint64_t sub_227B38DD4(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC1FFC8;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void sub_227B38DFC(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227B38E34(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC1FFC8;
  *(_DWORD *)(a1 + 32) = 0;
  char v2 = *(unsigned char *)(a2 + 32);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 32) = 1;
    *(void *)(a1 + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 32) & 0x10) != 0)
  {
LABEL_5:
    LODWORD(v4) = *(_DWORD *)(a2 + 28);
    v3 |= 0x10u;
    *(unsigned char *)(a1 + 32) = v3;
    *(_DWORD *)(a1 + 28) = v4;
    char v2 = *(unsigned char *)(a2 + 32);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    LODWORD(v4) = *(_DWORD *)(a2 + 20);
    v3 |= 4u;
    *(unsigned char *)(a1 + 32) = v3;
    *(_DWORD *)(a1 + 20) = v4;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 2) == 0)
    {
LABEL_8:
      if ((v2 & 8) == 0) {
        return *(float *)&v4;
      }
      goto LABEL_12;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_8;
  }
  LODWORD(v4) = *(_DWORD *)(a2 + 16);
  v3 |= 2u;
  *(unsigned char *)(a1 + 32) = v3;
  *(_DWORD *)(a1 + 16) = v4;
  if ((*(unsigned char *)(a2 + 32) & 8) == 0) {
    return *(float *)&v4;
  }
LABEL_12:
  LODWORD(v4) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = v3 | 8;
  *(_DWORD *)(a1 + 24) = v4;
  return *(float *)&v4;
}

uint64_t sub_227B38EEC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "gyroMaxMean", *(float *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 32);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 32) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "magnitudeDiffUnity", *(float *)(a1 + 20));
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(this, "magnitudeVar", *(float *)(a1 + 24));
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(this, "maxAccelStdAxis", *(float *)(a1 + 28));
  if (*(unsigned char *)(a1 + 32)) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
LABEL_7:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B38FD0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 32) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_38;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          goto LABEL_41;
        case 2u:
          *(unsigned char *)(a1 + 32) |= 0x10u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_38;
          }
          *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_40;
        case 3u:
          *(unsigned char *)(a1 + 32) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_38;
          }
          *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_40;
        case 4u:
          *(unsigned char *)(a1 + 32) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_38;
          }
          *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_40;
        case 5u:
          *(unsigned char *)(a1 + 32) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
LABEL_40:
            unint64_t v2 = *((void *)this + 1) + 4;
LABEL_41:
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_38:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B3928C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 32);
    if ((v4 & 0x10) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 32) & 0x10) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 2) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16));
    if ((*(unsigned char *)(v3 + 32) & 8) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 8) == 0) {
    return result;
  }
LABEL_11:
  float v5 = *(float *)(v3 + 24);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227B39350(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC20000;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_227B39374(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC20000;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227B393F4(PB::Base *a1)
{
  sub_227B39374(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B3942C(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC20000;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 20) = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  if (*(unsigned char *)(a2 + 20))
  {
    char v2 = *(unsigned char *)(a2 + 16);
    *(unsigned char *)(result + 20) |= 1u;
    *(unsigned char *)(result + 16) = v2;
  }
  return result;
}

uint64_t sub_227B394F4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "correction");
  }
  if (*(unsigned char *)(a1 + 20)) {
    PB::TextFormatter::format(this, "isAvgGrav");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B3958C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v20 = *((void *)this + 1);
        if (v20 >= *((void *)this + 2))
        {
          BOOL v23 = 0;
          *((unsigned char *)this + 24) = 1;
        }
        else
        {
          unint64_t v21 = v20 + 1;
          int v22 = *(unsigned __int8 *)(*(void *)this + v20);
          *((void *)this + 1) = v21;
          BOOL v23 = v22 != 0;
        }
        *(unsigned char *)(a1 + 16) = v23;
      }
      else
      {
        if ((v11 >> 3) == 1) {
          operator new();
        }
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B397D8(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(const PB::Base **)(result + 8);
  if (v4) {
    uint64_t result = PB::Writer::writeSubmessage(this, v4);
  }
  if (*(unsigned char *)(v3 + 20))
  {
    return PB::Writer::write(this);
  }
  return result;
}

void sub_227B39844(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B3987C(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC20038;
  *(_DWORD *)(result + 44) = 0;
  __int16 v2 = *(_WORD *)(a2 + 44);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    __int16 v3 = 1;
    *(_WORD *)(result + 44) = 1;
    *(void *)(result + 8) = v4;
    __int16 v2 = *(_WORD *)(a2 + 44);
    if ((v2 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 0x10) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 28);
    v3 |= 0x10u;
    *(_WORD *)(result + 44) = v3;
    *(_DWORD *)(result + 28) = v5;
    __int16 v2 = *(_WORD *)(a2 + 44);
  }
LABEL_6:
  if ((v2 & 0x20) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 32);
    v3 |= 0x20u;
    *(_WORD *)(result + 44) = v3;
    *(_DWORD *)(result + 32) = v6;
    __int16 v2 = *(_WORD *)(a2 + 44);
    if ((v2 & 0x40) == 0)
    {
LABEL_8:
      if ((v2 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_16;
    }
  }
  else if ((v2 & 0x40) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 36);
  v3 |= 0x40u;
  *(_WORD *)(result + 44) = v3;
  *(_DWORD *)(result + 36) = v7;
  __int16 v2 = *(_WORD *)(a2 + 44);
  if ((v2 & 8) == 0)
  {
LABEL_9:
    if ((v2 & 4) == 0) {
      goto LABEL_10;
    }
    goto LABEL_17;
  }
LABEL_16:
  int v8 = *(_DWORD *)(a2 + 24);
  v3 |= 8u;
  *(_WORD *)(result + 44) = v3;
  *(_DWORD *)(result + 24) = v8;
  __int16 v2 = *(_WORD *)(a2 + 44);
  if ((v2 & 4) == 0)
  {
LABEL_10:
    if ((v2 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_18;
  }
LABEL_17:
  int v9 = *(_DWORD *)(a2 + 20);
  v3 |= 4u;
  *(_WORD *)(result + 44) = v3;
  *(_DWORD *)(result + 20) = v9;
  __int16 v2 = *(_WORD *)(a2 + 44);
  if ((v2 & 0x80) == 0)
  {
LABEL_11:
    if ((v2 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_19;
  }
LABEL_18:
  char v10 = *(unsigned char *)(a2 + 40);
  v3 |= 0x80u;
  *(_WORD *)(result + 44) = v3;
  *(unsigned char *)(result + 40) = v10;
  __int16 v2 = *(_WORD *)(a2 + 44);
  if ((v2 & 0x100) == 0)
  {
LABEL_12:
    if ((v2 & 2) == 0) {
      return result;
    }
LABEL_20:
    int v12 = *(_DWORD *)(a2 + 16);
    *(_WORD *)(result + 44) = v3 | 2;
    *(_DWORD *)(result + 16) = v12;
    return result;
  }
LABEL_19:
  char v11 = *(unsigned char *)(a2 + 41);
  v3 |= 0x100u;
  *(_WORD *)(result + 44) = v3;
  *(unsigned char *)(result + 41) = v11;
  if ((*(_WORD *)(a2 + 44) & 2) != 0) {
    goto LABEL_20;
  }
  return result;
}

uint64_t sub_227B399A0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 44);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "location");
    __int16 v5 = *(_WORD *)(a1 + 44);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "sampleNumMod3");
  __int16 v5 = *(_WORD *)(a1 + 44);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "subType");
  __int16 v5 = *(_WORD *)(a1 + 44);
  if ((v5 & 1) == 0)
  {
LABEL_5:
    if ((v5 & 0x80) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  __int16 v5 = *(_WORD *)(a1 + 44);
  if ((v5 & 0x80) == 0)
  {
LABEL_6:
    if ((v5 & 0x100) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "triggerEnabled");
  __int16 v5 = *(_WORD *)(a1 + 44);
  if ((v5 & 0x100) == 0)
  {
LABEL_7:
    if ((v5 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "triggerOn");
  __int16 v5 = *(_WORD *)(a1 + 44);
  if ((v5 & 0x10) == 0)
  {
LABEL_8:
    if ((v5 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "x", *(float *)(a1 + 28));
  __int16 v5 = *(_WORD *)(a1 + 44);
  if ((v5 & 0x20) == 0)
  {
LABEL_9:
    if ((v5 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_21:
  PB::TextFormatter::format(this, "y", *(float *)(a1 + 32));
  if ((*(_WORD *)(a1 + 44) & 0x40) != 0) {
LABEL_10:
  }
    PB::TextFormatter::format(this, "z", *(float *)(a1 + 36));
LABEL_11:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B39B04(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 44) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_35;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              unint64_t v2 = *((void *)this + 1) + 8;
              goto LABEL_88;
            case 2u:
              *(_WORD *)(a1 + 44) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_35;
              }
              *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_87;
            case 3u:
              *(_WORD *)(a1 + 44) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_35;
              }
              *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_87;
            case 4u:
              *(_WORD *)(a1 + 44) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
LABEL_87:
                unint64_t v2 = *((void *)this + 1) + 4;
LABEL_88:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_35:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_104;
            case 5u:
              *(_WORD *)(a1 + 44) |= 8u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v43 = 0;
                unsigned int v44 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_93;
                  }
                  unint64_t v45 = v21++;
                  char v46 = *(unsigned char *)(v22 + v45);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v46 & 0x7F) << v43;
                  if ((v46 & 0x80) == 0) {
                    break;
                  }
                  v43 += 7;
                  BOOL v14 = v44++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_92:
                    unint64_t v2 = v45 + 1;
                    goto LABEL_93;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_92;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_93;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_93:
              *(_DWORD *)(a1 + 24) = v25;
              goto LABEL_104;
            case 6u:
              *(_WORD *)(a1 + 44) |= 4u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v47 = 0;
                unsigned int v48 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_98;
                  }
                  unint64_t v49 = v27++;
                  char v50 = *(unsigned char *)(v28 + v49);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v50 & 0x7F) << v47;
                  if ((v50 & 0x80) == 0) {
                    break;
                  }
                  v47 += 7;
                  BOOL v14 = v48++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_97:
                    unint64_t v2 = v49 + 1;
                    goto LABEL_98;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_97;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_98;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_98:
              *(_DWORD *)(a1 + 20) = v31;
              goto LABEL_104;
            case 7u:
              *(_WORD *)(a1 + 44) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v34 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v33 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v34 = v33 != 0;
              }
              *(unsigned char *)(a1 + 40) = v34;
              goto LABEL_104;
            case 8u:
              *(_WORD *)(a1 + 44) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v36 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v35 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v36 = v35 != 0;
              }
              *(unsigned char *)(a1 + 41) = v36;
              goto LABEL_104;
            case 9u:
              *(_WORD *)(a1 + 44) |= 2u;
              unint64_t v37 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v38 = *(void *)this;
              if (v37 > 0xFFFFFFFFFFFFFFF5 || v37 + 10 > v2)
              {
                char v51 = 0;
                unsigned int v52 = 0;
                uint64_t v41 = 0;
                if (v2 <= v37) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v37)
                  {
                    LODWORD(v41) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_103;
                  }
                  unint64_t v53 = v37++;
                  char v54 = *(unsigned char *)(v38 + v53);
                  *((void *)this + 1) = v37;
                  v41 |= (unint64_t)(v54 & 0x7F) << v51;
                  if ((v54 & 0x80) == 0) {
                    break;
                  }
                  v51 += 7;
                  BOOL v14 = v52++ > 8;
                  if (v14)
                  {
                    LODWORD(v41) = 0;
LABEL_102:
                    unint64_t v2 = v53 + 1;
                    goto LABEL_103;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v41) = 0;
                }
                goto LABEL_102;
              }
              char v39 = 0;
              unsigned int v40 = 0;
              uint64_t v41 = 0;
              do
              {
                unint64_t v2 = v37 + 1;
                *((void *)this + 1) = v37 + 1;
                char v42 = *(unsigned char *)(v38 + v37);
                v41 |= (unint64_t)(v42 & 0x7F) << v39;
                if ((v42 & 0x80) == 0) {
                  goto LABEL_103;
                }
                v39 += 7;
                unint64_t v37 = v2;
                BOOL v14 = v40++ > 8;
              }
              while (!v14);
              LODWORD(v41) = 0;
LABEL_103:
              *(_DWORD *)(a1 + 16) = v41;
LABEL_104:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_104;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B3A0E4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 44);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    __int16 v4 = *(_WORD *)(v3 + 44);
    if ((v4 & 0x10) == 0)
    {
LABEL_3:
      if ((v4 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v4 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
  __int16 v4 = *(_WORD *)(v3 + 44);
  if ((v4 & 0x20) == 0)
  {
LABEL_4:
    if ((v4 & 0x40) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
  __int16 v4 = *(_WORD *)(v3 + 44);
  if ((v4 & 0x40) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36));
  __int16 v4 = *(_WORD *)(v3 + 44);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 4) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 44);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 44);
  if ((v4 & 0x80) == 0)
  {
LABEL_8:
    if ((v4 & 0x100) == 0) {
      goto LABEL_9;
    }
LABEL_18:
    uint64_t result = PB::Writer::write(this);
    if ((*(_WORD *)(v3 + 44) & 2) == 0) {
      return result;
    }
    goto LABEL_19;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 44);
  if ((v4 & 0x100) != 0) {
    goto LABEL_18;
  }
LABEL_9:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_19:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227B3A218(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC20070;
  *(_DWORD *)(result + 36) = 0;
  return result;
}

void sub_227B3A240(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B3A278(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC20070;
  *(_DWORD *)(result + 36) = 0;
  char v2 = *(unsigned char *)(a2 + 36);
  if (v2)
  {
    int v4 = *(_DWORD *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 36) = 1;
    *(_DWORD *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 36);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 36) & 2) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 12);
    v3 |= 2u;
    *(unsigned char *)(result + 36) = v3;
    *(_DWORD *)(result + 12) = v5;
    char v2 = *(unsigned char *)(a2 + 36);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 16);
    v3 |= 4u;
    *(unsigned char *)(result + 36) = v3;
    *(_DWORD *)(result + 16) = v6;
    char v2 = *(unsigned char *)(a2 + 36);
    if ((v2 & 0x10) == 0)
    {
LABEL_8:
      if ((v2 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_14;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 24);
  v3 |= 0x10u;
  *(unsigned char *)(result + 36) = v3;
  *(_DWORD *)(result + 24) = v7;
  char v2 = *(unsigned char *)(a2 + 36);
  if ((v2 & 0x20) == 0)
  {
LABEL_9:
    if ((v2 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_15;
  }
LABEL_14:
  int v8 = *(_DWORD *)(a2 + 28);
  v3 |= 0x20u;
  *(unsigned char *)(result + 36) = v3;
  *(_DWORD *)(result + 28) = v8;
  char v2 = *(unsigned char *)(a2 + 36);
  if ((v2 & 0x40) == 0)
  {
LABEL_10:
    if ((v2 & 8) == 0) {
      return result;
    }
LABEL_16:
    int v10 = *(_DWORD *)(a2 + 20);
    *(unsigned char *)(result + 36) = v3 | 8;
    *(_DWORD *)(result + 20) = v10;
    return result;
  }
LABEL_15:
  int v9 = *(_DWORD *)(a2 + 32);
  v3 |= 0x40u;
  *(unsigned char *)(result + 36) = v3;
  *(_DWORD *)(result + 32) = v9;
  if ((*(unsigned char *)(a2 + 36) & 8) != 0) {
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_227B3A368(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 36);
  if (v5)
  {
    PB::TextFormatter::format(this, "biasX", *(float *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 36);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(a1 + 36) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "biasY", *(float *)(a1 + 12));
  char v5 = *(unsigned char *)(a1 + 36);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(this, "biasZ", *(float *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 36);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  PB::TextFormatter::format(this, "doingBiasEstimation");
  char v5 = *(unsigned char *)(a1 + 36);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "varianceX", *(float *)(a1 + 24));
  char v5 = *(unsigned char *)(a1 + 36);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_17:
  PB::TextFormatter::format(this, "varianceY", *(float *)(a1 + 28));
  if ((*(unsigned char *)(a1 + 36) & 0x40) != 0) {
LABEL_8:
  }
    PB::TextFormatter::format(this, "varianceZ", *(float *)(a1 + 32));
LABEL_9:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B3A48C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 36) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_41;
              }
              *(_DWORD *)(a1 + 8) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_57;
            case 2u:
              *(unsigned char *)(a1 + 36) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_41;
              }
              *(_DWORD *)(a1 + 12) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_57;
            case 3u:
              *(unsigned char *)(a1 + 36) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_41;
              }
              *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_57;
            case 4u:
              *(unsigned char *)(a1 + 36) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_41;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_57;
            case 5u:
              *(unsigned char *)(a1 + 36) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_41;
              }
              *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_57;
            case 6u:
              *(unsigned char *)(a1 + 36) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
LABEL_57:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_41:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_63;
            case 7u:
              *(unsigned char *)(a1 + 36) |= 8u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v27 = 0;
                unsigned int v28 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_62;
                  }
                  unint64_t v29 = v21++;
                  char v30 = *(unsigned char *)(v22 + v29);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v30 & 0x7F) << v27;
                  if ((v30 & 0x80) == 0) {
                    break;
                  }
                  v27 += 7;
                  BOOL v14 = v28++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_61:
                    unint64_t v2 = v29 + 1;
                    goto LABEL_62;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_61;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_62;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_62:
              *(_DWORD *)(a1 + 20) = v25;
LABEL_63:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_63;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B3A86C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 36);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 36);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(result + 36) & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 12));
  char v4 = *(unsigned char *)(v3 + 36);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16));
  char v4 = *(unsigned char *)(v3 + 36);
  if ((v4 & 0x10) == 0)
  {
LABEL_5:
    if ((v4 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
  char v4 = *(unsigned char *)(v3 + 36);
  if ((v4 & 0x20) == 0)
  {
LABEL_6:
    if ((v4 & 0x40) == 0) {
      goto LABEL_7;
    }
LABEL_14:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
    if ((*(unsigned char *)(v3 + 36) & 8) == 0) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_13:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
  char v4 = *(unsigned char *)(v3 + 36);
  if ((v4 & 0x40) != 0) {
    goto LABEL_14;
  }
LABEL_7:
  if ((v4 & 8) == 0) {
    return result;
  }
LABEL_15:

  return PB::Writer::writeVarInt(this);
}

double sub_227B3A968(uint64_t a1)
{
  *(void *)a1 = &unk_26DC200A8;
  *(_DWORD *)(a1 + 116) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  return result;
}

void sub_227B3A9A8(PB::Base *this)
{
  *(void *)this = &unk_26DC200A8;
  unint64_t v2 = (void *)*((void *)this + 10);
  if (v2)
  {
    *((void *)this + 11) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 7);
  if (v3)
  {
    *((void *)this + 8) = v3;
    operator delete(v3);
  }
  char v4 = (void *)*((void *)this + 4);
  if (v4)
  {
    *((void *)this + 5) = v4;
    operator delete(v4);
  }
  char v5 = (void *)*((void *)this + 1);
  if (v5)
  {
    *((void *)this + 2) = v5;
    operator delete(v5);
  }

  PB::Base::~Base(this);
}

void sub_227B3AA3C(PB::Base *a1)
{
  sub_227B3A9A8(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B3AA74(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC200A8;
  *(_OWORD *)(a1 + 8) = 0u;
  char v4 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 56) = 0u;
  char v5 = (char *)(a1 + 56);
  *(_DWORD *)(a1 + 116) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  char v6 = *(unsigned char *)(a2 + 116);
  if (v6)
  {
    uint64_t v8 = *(void *)(a2 + 104);
    char v7 = 1;
    *(unsigned char *)(a1 + 116) = 1;
    *(void *)(a1 + 104) = v8;
    char v6 = *(unsigned char *)(a2 + 116);
    if ((v6 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v7 = 0;
  if ((*(unsigned char *)(a2 + 116) & 4) != 0)
  {
LABEL_5:
    char v9 = *(unsigned char *)(a2 + 113);
    v7 |= 4u;
    *(unsigned char *)(a1 + 116) = v7;
    *(unsigned char *)(a1 + 113) = v9;
    char v6 = *(unsigned char *)(a2 + 116);
  }
LABEL_6:
  if ((v6 & 2) != 0)
  {
    char v10 = *(unsigned char *)(a2 + 112);
    *(unsigned char *)(a1 + 116) = v7 | 2;
    *(unsigned char *)(a1 + 112) = v10;
  }
  if (a1 != a2)
  {
    sub_227B8BA68((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
    sub_227B8BA68(v5, *(char **)(a2 + 56), *(void *)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 2);
    sub_227B8BA68((char *)(a1 + 80), *(char **)(a2 + 80), *(void *)(a2 + 88), (uint64_t)(*(void *)(a2 + 88) - *(void *)(a2 + 80)) >> 2);
    sub_227B8BA68(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  return a1;
}

uint64_t sub_227B3AB9C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(float **)(a1 + 8);
  char v6 = *(float **)(a1 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    PB::TextFormatter::format(this, "accelVariance", v7);
  }
  if ((*(unsigned char *)(a1 + 116) & 2) != 0) {
    PB::TextFormatter::format(this, "allowRelaxedGyroMean");
  }
  uint64_t v8 = *(float **)(a1 + 32);
  char v9 = *(float **)(a1 + 40);
  while (v8 != v9)
  {
    float v10 = *v8++;
    PB::TextFormatter::format(this, "gyroMean", v10);
  }
  unint64_t v11 = *(float **)(a1 + 56);
  unint64_t v12 = *(float **)(a1 + 64);
  while (v11 != v12)
  {
    float v13 = *v11++;
    PB::TextFormatter::format(this, "gyroVariance", v13);
  }
  if ((*(unsigned char *)(a1 + 116) & 4) != 0) {
    PB::TextFormatter::format(this, "stillOnAll");
  }
  BOOL v14 = *(float **)(a1 + 80);
  char v15 = *(float **)(a1 + 88);
  while (v14 != v15)
  {
    float v16 = *v14++;
    PB::TextFormatter::format(this, "temperatureBias", v16);
  }
  if (*(unsigned char *)(a1 + 116)) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 104));
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227B3ACF4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = (void **)(a1 + 8);
    char v9 = (void **)(a1 + 80);
    uint64_t v136 = a1 + 96;
    uint64_t v137 = a1 + 24;
    float v10 = (void **)(a1 + 56);
    uint64_t v135 = a1 + 72;
    unint64_t v11 = (void **)(a1 + 32);
    uint64_t v12 = a1 + 48;
    while (1)
    {
      uint64_t v13 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v14 = 0;
      unsigned int v15 = 0;
      unint64_t v16 = 0;
      while (1)
      {
        unint64_t v17 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v18 = *(unsigned char *)(v13 + v2);
        v16 |= (unint64_t)(v18 & 0x7F) << v14;
        if ((v18 & 0x80) == 0) {
          break;
        }
        v14 += 7;
        unint64_t v2 = v17;
        if (v15++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v25 = v16 & 7;
      if (v25 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v16 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 116) |= 1u;
          unint64_t v26 = *((void *)this + 1);
          if (v26 > 0xFFFFFFFFFFFFFFF7 || v26 + 8 > *((void *)this + 2)) {
            goto LABEL_204;
          }
          *(void *)(a1 + 104) = *(void *)(*(void *)this + v26);
          uint64_t v27 = *((void *)this + 1) + 8;
          goto LABEL_206;
        case 2u:
          *(unsigned char *)(a1 + 116) |= 4u;
          unint64_t v28 = *((void *)this + 1);
          if (v28 >= *((void *)this + 2))
          {
            BOOL v31 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v29 = v28 + 1;
            int v30 = *(unsigned __int8 *)(*(void *)this + v28);
            *((void *)this + 1) = v29;
            BOOL v31 = v30 != 0;
          }
          *(unsigned char *)(a1 + 113) = v31;
          goto LABEL_207;
        case 3u:
          *(unsigned char *)(a1 + 116) |= 2u;
          unint64_t v32 = *((void *)this + 1);
          if (v32 >= *((void *)this + 2))
          {
            BOOL v35 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v33 = v32 + 1;
            int v34 = *(unsigned __int8 *)(*(void *)this + v32);
            *((void *)this + 1) = v33;
            BOOL v35 = v34 != 0;
          }
          *(unsigned char *)(a1 + 112) = v35;
          goto LABEL_207;
        case 4u:
          if (v25 != 2)
          {
            unint64_t v93 = *(char **)(a1 + 40);
            unint64_t v92 = *(void *)(a1 + 48);
            if ((unint64_t)v93 >= v92)
            {
              char v101 = (char *)*v11;
              uint64_t v102 = (v93 - (unsigned char *)*v11) >> 2;
              unint64_t v103 = v102 + 1;
              if ((unint64_t)(v102 + 1) >> 62) {
LABEL_215:
              }
                sub_227B8B89C();
              uint64_t v104 = v92 - (void)v101;
              if (v104 >> 1 > v103) {
                unint64_t v103 = v104 >> 1;
              }
              if ((unint64_t)v104 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v105 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v105 = v103;
              }
              if (v105)
              {
                unint64_t v106 = (char *)sub_227B8BBB8(v12, v105);
                char v101 = *(char **)(a1 + 32);
                unint64_t v93 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v106 = 0;
              }
              char v125 = &v106[4 * v102];
              *(_DWORD *)char v125 = 0;
              char v94 = v125 + 4;
              while (v93 != v101)
              {
                int v126 = *((_DWORD *)v93 - 1);
                v93 -= 4;
                *((_DWORD *)v125 - 1) = v126;
                v125 -= 4;
              }
              *(void *)(a1 + 32) = v125;
              *(void *)(a1 + 40) = v94;
              *(void *)(a1 + 48) = &v106[4 * v105];
              if (v101) {
                operator delete(v101);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v93 = 0;
              char v94 = v93 + 4;
            }
            *(void *)(a1 + 40) = v94;
            goto LABEL_202;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v36 = *((void *)this + 1);
          unint64_t v37 = *((void *)this + 2);
          while (v36 < v37 && !*((unsigned char *)this + 24))
          {
            char v39 = *(char **)(a1 + 40);
            unint64_t v38 = *(void *)(a1 + 48);
            if ((unint64_t)v39 >= v38)
            {
              uint64_t v41 = (char *)*v11;
              uint64_t v42 = (v39 - (unsigned char *)*v11) >> 2;
              unint64_t v43 = v42 + 1;
              if ((unint64_t)(v42 + 1) >> 62) {
                goto LABEL_215;
              }
              uint64_t v44 = v38 - (void)v41;
              if (v44 >> 1 > v43) {
                unint64_t v43 = v44 >> 1;
              }
              if ((unint64_t)v44 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v45 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v45 = v43;
              }
              if (v45)
              {
                char v46 = (char *)sub_227B8BBB8(v12, v45);
                uint64_t v41 = *(char **)(a1 + 32);
                char v39 = *(char **)(a1 + 40);
              }
              else
              {
                char v46 = 0;
              }
              char v47 = &v46[4 * v42];
              *(_DWORD *)char v47 = 0;
              unsigned int v40 = v47 + 4;
              while (v39 != v41)
              {
                int v48 = *((_DWORD *)v39 - 1);
                v39 -= 4;
                *((_DWORD *)v47 - 1) = v48;
                v47 -= 4;
              }
              *(void *)(a1 + 32) = v47;
              *(void *)(a1 + 40) = v40;
              *(void *)(a1 + 48) = &v46[4 * v45];
              if (v41) {
                operator delete(v41);
              }
            }
            else
            {
              *(_DWORD *)char v39 = 0;
              unsigned int v40 = v39 + 4;
            }
            *(void *)(a1 + 40) = v40;
            unint64_t v49 = *((void *)this + 1);
            if (v49 > 0xFFFFFFFFFFFFFFFBLL || v49 + 4 > *((void *)this + 2)) {
              goto LABEL_128;
            }
            *(v40 - 1) = *(_DWORD *)(*(void *)this + v49);
            unint64_t v37 = *((void *)this + 2);
            unint64_t v36 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v36;
          }
          goto LABEL_129;
        case 5u:
          if (v25 != 2)
          {
            unsigned int v96 = *(char **)(a1 + 64);
            unint64_t v95 = *(void *)(a1 + 72);
            if ((unint64_t)v96 >= v95)
            {
              unint64_t v107 = (char *)*v10;
              uint64_t v108 = (v96 - (unsigned char *)*v10) >> 2;
              unint64_t v109 = v108 + 1;
              if ((unint64_t)(v108 + 1) >> 62) {
LABEL_216:
              }
                sub_227B8B89C();
              uint64_t v110 = v95 - (void)v107;
              if (v110 >> 1 > v109) {
                unint64_t v109 = v110 >> 1;
              }
              if ((unint64_t)v110 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v111 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v111 = v109;
              }
              if (v111)
              {
                unint64_t v112 = (char *)sub_227B8BBB8(v135, v111);
                unint64_t v107 = *(char **)(a1 + 56);
                unsigned int v96 = *(char **)(a1 + 64);
              }
              else
              {
                unint64_t v112 = 0;
              }
              uint64_t v127 = &v112[4 * v108];
              *(_DWORD *)uint64_t v127 = 0;
              char v94 = v127 + 4;
              while (v96 != v107)
              {
                int v128 = *((_DWORD *)v96 - 1);
                v96 -= 4;
                *((_DWORD *)v127 - 1) = v128;
                v127 -= 4;
              }
              *(void *)(a1 + 56) = v127;
              *(void *)(a1 + 64) = v94;
              *(void *)(a1 + 72) = &v112[4 * v111];
              if (v107) {
                operator delete(v107);
              }
            }
            else
            {
              *(_DWORD *)unsigned int v96 = 0;
              char v94 = v96 + 4;
            }
            *(void *)(a1 + 64) = v94;
            goto LABEL_202;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v50 = *((void *)this + 1);
          unint64_t v51 = *((void *)this + 2);
          while (v50 < v51 && !*((unsigned char *)this + 24))
          {
            unint64_t v53 = *(char **)(a1 + 64);
            unint64_t v52 = *(void *)(a1 + 72);
            if ((unint64_t)v53 >= v52)
            {
              unint64_t v55 = (char *)*v10;
              uint64_t v56 = (v53 - (unsigned char *)*v10) >> 2;
              unint64_t v57 = v56 + 1;
              if ((unint64_t)(v56 + 1) >> 62) {
                goto LABEL_216;
              }
              uint64_t v58 = v52 - (void)v55;
              if (v58 >> 1 > v57) {
                unint64_t v57 = v58 >> 1;
              }
              if ((unint64_t)v58 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v59 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v59 = v57;
              }
              if (v59)
              {
                uint64_t v60 = (char *)sub_227B8BBB8(v135, v59);
                unint64_t v55 = *(char **)(a1 + 56);
                unint64_t v53 = *(char **)(a1 + 64);
              }
              else
              {
                uint64_t v60 = 0;
              }
              char v61 = &v60[4 * v56];
              *(_DWORD *)char v61 = 0;
              char v54 = v61 + 4;
              while (v53 != v55)
              {
                int v62 = *((_DWORD *)v53 - 1);
                v53 -= 4;
                *((_DWORD *)v61 - 1) = v62;
                v61 -= 4;
              }
              *(void *)(a1 + 56) = v61;
              *(void *)(a1 + 64) = v54;
              *(void *)(a1 + 72) = &v60[4 * v59];
              if (v55) {
                operator delete(v55);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v53 = 0;
              char v54 = v53 + 4;
            }
            *(void *)(a1 + 64) = v54;
            unint64_t v63 = *((void *)this + 1);
            if (v63 > 0xFFFFFFFFFFFFFFFBLL || v63 + 4 > *((void *)this + 2)) {
              goto LABEL_128;
            }
            *(v54 - 1) = *(_DWORD *)(*(void *)this + v63);
            unint64_t v51 = *((void *)this + 2);
            unint64_t v50 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v50;
          }
          goto LABEL_129;
        case 6u:
          if (v25 != 2)
          {
            char v98 = *(char **)(a1 + 88);
            unint64_t v97 = *(void *)(a1 + 96);
            if ((unint64_t)v98 >= v97)
            {
              char v113 = (char *)*v9;
              uint64_t v114 = (v98 - (unsigned char *)*v9) >> 2;
              unint64_t v115 = v114 + 1;
              if ((unint64_t)(v114 + 1) >> 62) {
LABEL_217:
              }
                sub_227B8B89C();
              uint64_t v116 = v97 - (void)v113;
              if (v116 >> 1 > v115) {
                unint64_t v115 = v116 >> 1;
              }
              if ((unint64_t)v116 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v117 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v117 = v115;
              }
              if (v117)
              {
                unint64_t v118 = (char *)sub_227B8BBB8(v136, v117);
                char v113 = *(char **)(a1 + 80);
                char v98 = *(char **)(a1 + 88);
              }
              else
              {
                unint64_t v118 = 0;
              }
              char v129 = &v118[4 * v114];
              *(_DWORD *)char v129 = 0;
              char v94 = v129 + 4;
              while (v98 != v113)
              {
                int v130 = *((_DWORD *)v98 - 1);
                v98 -= 4;
                *((_DWORD *)v129 - 1) = v130;
                v129 -= 4;
              }
              *(void *)(a1 + 80) = v129;
              *(void *)(a1 + 88) = v94;
              *(void *)(a1 + 96) = &v118[4 * v117];
              if (v113) {
                operator delete(v113);
              }
            }
            else
            {
              *(_DWORD *)char v98 = 0;
              char v94 = v98 + 4;
            }
            *(void *)(a1 + 88) = v94;
            goto LABEL_202;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v64 = *((void *)this + 1);
          unint64_t v65 = *((void *)this + 2);
          while (v64 < v65 && !*((unsigned char *)this + 24))
          {
            char v67 = *(char **)(a1 + 88);
            unint64_t v66 = *(void *)(a1 + 96);
            if ((unint64_t)v67 >= v66)
            {
              uint64_t v69 = (char *)*v9;
              uint64_t v70 = (v67 - (unsigned char *)*v9) >> 2;
              unint64_t v71 = v70 + 1;
              if ((unint64_t)(v70 + 1) >> 62) {
                goto LABEL_217;
              }
              uint64_t v72 = v66 - (void)v69;
              if (v72 >> 1 > v71) {
                unint64_t v71 = v72 >> 1;
              }
              if ((unint64_t)v72 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v73 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v73 = v71;
              }
              if (v73)
              {
                char v74 = (char *)sub_227B8BBB8(v136, v73);
                uint64_t v69 = *(char **)(a1 + 80);
                char v67 = *(char **)(a1 + 88);
              }
              else
              {
                char v74 = 0;
              }
              char v75 = &v74[4 * v70];
              *(_DWORD *)char v75 = 0;
              unsigned int v68 = v75 + 4;
              while (v67 != v69)
              {
                int v76 = *((_DWORD *)v67 - 1);
                v67 -= 4;
                *((_DWORD *)v75 - 1) = v76;
                v75 -= 4;
              }
              *(void *)(a1 + 80) = v75;
              *(void *)(a1 + 88) = v68;
              *(void *)(a1 + 96) = &v74[4 * v73];
              if (v69) {
                operator delete(v69);
              }
            }
            else
            {
              *(_DWORD *)char v67 = 0;
              unsigned int v68 = v67 + 4;
            }
            *(void *)(a1 + 88) = v68;
            unint64_t v77 = *((void *)this + 1);
            if (v77 > 0xFFFFFFFFFFFFFFFBLL || v77 + 4 > *((void *)this + 2)) {
              goto LABEL_128;
            }
            *(v68 - 1) = *(_DWORD *)(*(void *)this + v77);
            unint64_t v65 = *((void *)this + 2);
            unint64_t v64 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v64;
          }
          goto LABEL_129;
        case 7u:
          if (v25 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v78 = *((void *)this + 1);
            unint64_t v79 = *((void *)this + 2);
            while (v78 < v79 && !*((unsigned char *)this + 24))
            {
              unint64_t v81 = *(char **)(a1 + 16);
              unint64_t v80 = *(void *)(a1 + 24);
              if ((unint64_t)v81 >= v80)
              {
                char v83 = (char *)*v8;
                uint64_t v84 = (v81 - (unsigned char *)*v8) >> 2;
                unint64_t v85 = v84 + 1;
                if ((unint64_t)(v84 + 1) >> 62) {
                  goto LABEL_218;
                }
                uint64_t v86 = v80 - (void)v83;
                if (v86 >> 1 > v85) {
                  unint64_t v85 = v86 >> 1;
                }
                if ((unint64_t)v86 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v87 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v87 = v85;
                }
                if (v87)
                {
                  unsigned int v88 = (char *)sub_227B8BBB8(v137, v87);
                  char v83 = *(char **)(a1 + 8);
                  unint64_t v81 = *(char **)(a1 + 16);
                }
                else
                {
                  unsigned int v88 = 0;
                }
                unint64_t v89 = &v88[4 * v84];
                *(_DWORD *)unint64_t v89 = 0;
                char v82 = v89 + 4;
                while (v81 != v83)
                {
                  int v90 = *((_DWORD *)v81 - 1);
                  v81 -= 4;
                  *((_DWORD *)v89 - 1) = v90;
                  v89 -= 4;
                }
                *(void *)(a1 + 8) = v89;
                *(void *)(a1 + 16) = v82;
                *(void *)(a1 + 24) = &v88[4 * v87];
                if (v83) {
                  operator delete(v83);
                }
              }
              else
              {
                *(_DWORD *)unint64_t v81 = 0;
                char v82 = v81 + 4;
              }
              *(void *)(a1 + 16) = v82;
              unint64_t v91 = *((void *)this + 1);
              if (v91 > 0xFFFFFFFFFFFFFFFBLL || v91 + 4 > *((void *)this + 2))
              {
LABEL_128:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v82 - 1) = *(_DWORD *)(*(void *)this + v91);
              unint64_t v79 = *((void *)this + 2);
              unint64_t v78 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v78;
            }
LABEL_129:
            PB::Reader::recallMark();
          }
          else
          {
            uint64_t v100 = *(char **)(a1 + 16);
            unint64_t v99 = *(void *)(a1 + 24);
            if ((unint64_t)v100 >= v99)
            {
              unint64_t v119 = (char *)*v8;
              uint64_t v120 = (v100 - (unsigned char *)*v8) >> 2;
              unint64_t v121 = v120 + 1;
              if ((unint64_t)(v120 + 1) >> 62) {
LABEL_218:
              }
                sub_227B8B89C();
              uint64_t v122 = v99 - (void)v119;
              if (v122 >> 1 > v121) {
                unint64_t v121 = v122 >> 1;
              }
              if ((unint64_t)v122 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v123 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v123 = v121;
              }
              if (v123)
              {
                uint64_t v124 = (char *)sub_227B8BBB8(v137, v123);
                unint64_t v119 = *(char **)(a1 + 8);
                uint64_t v100 = *(char **)(a1 + 16);
              }
              else
              {
                uint64_t v124 = 0;
              }
              unint64_t v131 = &v124[4 * v120];
              *(_DWORD *)unint64_t v131 = 0;
              char v94 = v131 + 4;
              while (v100 != v119)
              {
                int v132 = *((_DWORD *)v100 - 1);
                v100 -= 4;
                *((_DWORD *)v131 - 1) = v132;
                v131 -= 4;
              }
              *(void *)(a1 + 8) = v131;
              *(void *)(a1 + 16) = v94;
              *(void *)(a1 + 24) = &v124[4 * v123];
              if (v119) {
                operator delete(v119);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v100 = 0;
              char v94 = v100 + 4;
            }
            *(void *)(a1 + 16) = v94;
LABEL_202:
            unint64_t v133 = *((void *)this + 1);
            if (v133 <= 0xFFFFFFFFFFFFFFFBLL && v133 + 4 <= *((void *)this + 2))
            {
              *(v94 - 1) = *(_DWORD *)(*(void *)this + v133);
              uint64_t v27 = *((void *)this + 1) + 4;
LABEL_206:
              *((void *)this + 1) = v27;
            }
            else
            {
LABEL_204:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_207:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || *((unsigned char *)this + 24)) {
            return v4 == 0;
          }
          break;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_207;
      }
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v16 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v22 = v2 + 1;
      char v23 = *(unsigned char *)(v13 + v2);
      *((void *)this + 1) = v22;
      v16 |= (unint64_t)(v23 & 0x7F) << v20;
      if ((v23 & 0x80) == 0) {
        goto LABEL_21;
      }
      v20 += 7;
      unint64_t v2 = v22;
      if (v21++ >= 9)
      {
LABEL_20:
        unint64_t v16 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B3B69C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 116);
  if ((v4 & 1) == 0)
  {
    if ((*(unsigned char *)(result + 116) & 4) == 0) {
      goto LABEL_3;
    }
LABEL_19:
    double result = PB::Writer::write(this);
    if ((*(unsigned char *)(v3 + 116) & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  double result = PB::Writer::write(this, *(double *)(result + 104));
  char v4 = *(unsigned char *)(v3 + 116);
  if ((v4 & 4) != 0) {
    goto LABEL_19;
  }
LABEL_3:
  if ((v4 & 2) != 0) {
LABEL_4:
  }
    double result = PB::Writer::write(this);
LABEL_5:
  char v5 = *(float **)(v3 + 32);
  char v6 = *(float **)(v3 + 40);
  while (v5 != v6)
  {
    float v7 = *v5++;
    double result = PB::Writer::write(this, v7);
  }
  uint64_t v8 = *(float **)(v3 + 56);
  char v9 = *(float **)(v3 + 64);
  while (v8 != v9)
  {
    float v10 = *v8++;
    double result = PB::Writer::write(this, v10);
  }
  unint64_t v11 = *(float **)(v3 + 80);
  uint64_t v12 = *(float **)(v3 + 88);
  while (v11 != v12)
  {
    float v13 = *v11++;
    double result = PB::Writer::write(this, v13);
  }
  unsigned int v15 = *(float **)(v3 + 8);
  char v14 = *(float **)(v3 + 16);
  while (v15 != v14)
  {
    float v16 = *v15++;
    double result = PB::Writer::write(this, v16);
  }
  return result;
}

uint64_t sub_227B3B79C(uint64_t result)
{
  *(void *)double result = &unk_26DC200E0;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_227B3B7C0(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC200E0;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227B3B840(PB::Base *a1)
{
  sub_227B3B7C0(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B3B878(uint64_t result, uint64_t a2)
{
  *(void *)double result = &unk_26DC200E0;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 20) = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  if (*(unsigned char *)(a2 + 20))
  {
    int v2 = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(result + 20) |= 1u;
    *(_DWORD *)(result + 16) = v2;
  }
  return result;
}

uint64_t sub_227B3B940(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 20)) {
    PB::TextFormatter::format(this, "axis");
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "correction");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B3B9D8(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v20 = *((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        uint64_t v22 = *(void *)this;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v21)
        {
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v25 = 0;
          if (v21 <= v20) {
            unint64_t v21 = *((void *)this + 1);
          }
          while (1)
          {
            if (v21 == v20)
            {
              LODWORD(v25) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_43;
            }
            unint64_t v31 = v20 + 1;
            char v32 = *(unsigned char *)(v22 + v20);
            *((void *)this + 1) = v31;
            v25 |= (unint64_t)(v32 & 0x7F) << v29;
            if ((v32 & 0x80) == 0) {
              break;
            }
            v29 += 7;
            unint64_t v20 = v31;
            BOOL v14 = v30++ > 8;
            if (v14)
            {
LABEL_39:
              LODWORD(v25) = 0;
              goto LABEL_43;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v25) = 0;
          }
        }
        else
        {
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          while (1)
          {
            unint64_t v26 = v20 + 1;
            *((void *)this + 1) = v20 + 1;
            char v27 = *(unsigned char *)(v22 + v20);
            v25 |= (unint64_t)(v27 & 0x7F) << v23;
            if ((v27 & 0x80) == 0) {
              break;
            }
            v23 += 7;
            unint64_t v20 = v26;
            BOOL v14 = v24++ > 8;
            if (v14) {
              goto LABEL_39;
            }
          }
        }
LABEL_43:
        *(_DWORD *)(a1 + 16) = v25;
      }
      else
      {
        if ((v11 >> 3) == 1) {
          operator new();
        }
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B3BCC4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(const PB::Base **)(result + 8);
  if (v4) {
    uint64_t result = PB::Writer::writeSubmessage(this, v4);
  }
  if (*(unsigned char *)(v3 + 20))
  {
    return PB::Writer::writeVarInt(this);
  }
  return result;
}

double sub_227B3BD2C(uint64_t a1)
{
  *(void *)a1 = &unk_26DC20118;
  *(_DWORD *)(a1 + 92) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)(a1 + 72) = 0;
  return result;
}

void sub_227B3BD68(PB::Base *this)
{
  *(void *)this = &unk_26DC20118;
  unint64_t v2 = (void *)*((void *)this + 7);
  if (v2)
  {
    *((void *)this + 8) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 4);
  if (v3)
  {
    *((void *)this + 5) = v3;
    operator delete(v3);
  }
  int v4 = (void *)*((void *)this + 1);
  if (v4)
  {
    *((void *)this + 2) = v4;
    operator delete(v4);
  }

  PB::Base::~Base(this);
}

void sub_227B3BDEC(PB::Base *a1)
{
  sub_227B3BD68(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B3BE24(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 8) = 0u;
  int v4 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)a1 = &unk_26DC20118;
  *(_DWORD *)(a1 + 92) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 72) = 0;
  if (*(unsigned char *)(a2 + 92))
  {
    uint64_t v5 = *(void *)(a2 + 80);
    *(unsigned char *)(a1 + 92) = 1;
    *(void *)(a1 + 80) = v5;
  }
  if (a1 != a2)
  {
    sub_227B8BA68(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
    sub_227B8BA68((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
    sub_227B8BA68((char *)(a1 + 56), *(char **)(a2 + 56), *(void *)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 2);
  }
  if ((*(unsigned char *)(a2 + 92) & 2) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 88);
    *(unsigned char *)(a1 + 92) |= 2u;
    *(_DWORD *)(a1 + 88) = v6;
  }
  return a1;
}

uint64_t sub_227B3BF0C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(float **)(a1 + 8);
  int v6 = *(float **)(a1 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    PB::TextFormatter::format(this, "dynamicBiasEstimate", v7);
  }
  uint64_t v8 = *(float **)(a1 + 32);
  char v9 = *(float **)(a1 + 40);
  while (v8 != v9)
  {
    float v10 = *v8++;
    PB::TextFormatter::format(this, "estimateErrorMetric", v10);
  }
  if ((*(unsigned char *)(a1 + 92) & 2) != 0) {
    PB::TextFormatter::format(this, "rawGyroTemperature", *(float *)(a1 + 88));
  }
  unint64_t v11 = *(float **)(a1 + 56);
  unint64_t v12 = *(float **)(a1 + 64);
  while (v11 != v12)
  {
    float v13 = *v11++;
    PB::TextFormatter::format(this, "subFitError", v13);
  }
  if (*(unsigned char *)(a1 + 92)) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 80));
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227B3C01C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = (void **)(a1 + 56);
    uint64_t v104 = a1 + 72;
    char v9 = (void **)(a1 + 32);
    uint64_t v10 = a1 + 48;
    unint64_t v11 = (void **)(a1 + 8);
    uint64_t v12 = a1 + 24;
    while (1)
    {
      uint64_t v13 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v14 = 0;
      unsigned int v15 = 0;
      unint64_t v16 = 0;
      while (1)
      {
        unint64_t v17 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v18 = *(unsigned char *)(v13 + v2);
        v16 |= (unint64_t)(v18 & 0x7F) << v14;
        if ((v18 & 0x80) == 0) {
          break;
        }
        v14 += 7;
        unint64_t v2 = v17;
        if (v15++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v25 = v16 & 7;
      if (v25 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v16 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 92) |= 1u;
          unint64_t v26 = *((void *)this + 1);
          if (v26 > 0xFFFFFFFFFFFFFFF7 || v26 + 8 > *((void *)this + 2)) {
            goto LABEL_158;
          }
          *(void *)(a1 + 80) = *(void *)(*(void *)this + v26);
          uint64_t v27 = *((void *)this + 1) + 8;
          goto LABEL_161;
        case 2u:
          if (v25 != 2)
          {
            uint64_t v72 = *(char **)(a1 + 16);
            unint64_t v71 = *(void *)(a1 + 24);
            if ((unint64_t)v72 >= v71)
            {
              unint64_t v78 = (char *)*v11;
              uint64_t v79 = (v72 - (unsigned char *)*v11) >> 2;
              unint64_t v80 = v79 + 1;
              if ((unint64_t)(v79 + 1) >> 62) {
LABEL_170:
              }
                sub_227B8B89C();
              uint64_t v81 = v71 - (void)v78;
              if (v81 >> 1 > v80) {
                unint64_t v80 = v81 >> 1;
              }
              if ((unint64_t)v81 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v82 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v82 = v80;
              }
              if (v82)
              {
                char v83 = (char *)sub_227B8BBB8(v12, v82);
                unint64_t v78 = *(char **)(a1 + 8);
                uint64_t v72 = *(char **)(a1 + 16);
              }
              else
              {
                char v83 = 0;
              }
              unsigned int v96 = &v83[4 * v79];
              *(_DWORD *)unsigned int v96 = 0;
              unint64_t v73 = v96 + 4;
              while (v72 != v78)
              {
                int v97 = *((_DWORD *)v72 - 1);
                v72 -= 4;
                *((_DWORD *)v96 - 1) = v97;
                v96 -= 4;
              }
              *(void *)(a1 + 8) = v96;
              *(void *)(a1 + 16) = v73;
              *(void *)(a1 + 24) = &v83[4 * v82];
              if (v78) {
                operator delete(v78);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v72 = 0;
              unint64_t v73 = v72 + 4;
            }
            *(void *)(a1 + 16) = v73;
            goto LABEL_156;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v28 = *((void *)this + 1);
          unint64_t v29 = *((void *)this + 2);
          while (v28 < v29 && !*((unsigned char *)this + 24))
          {
            unint64_t v31 = *(char **)(a1 + 16);
            unint64_t v30 = *(void *)(a1 + 24);
            if ((unint64_t)v31 >= v30)
            {
              unint64_t v33 = (char *)*v11;
              uint64_t v34 = (v31 - (unsigned char *)*v11) >> 2;
              unint64_t v35 = v34 + 1;
              if ((unint64_t)(v34 + 1) >> 62) {
                goto LABEL_170;
              }
              uint64_t v36 = v30 - (void)v33;
              if (v36 >> 1 > v35) {
                unint64_t v35 = v36 >> 1;
              }
              if ((unint64_t)v36 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v37 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v37 = v35;
              }
              if (v37)
              {
                unint64_t v38 = (char *)sub_227B8BBB8(v12, v37);
                unint64_t v33 = *(char **)(a1 + 8);
                unint64_t v31 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v38 = 0;
              }
              char v39 = &v38[4 * v34];
              *(_DWORD *)char v39 = 0;
              char v32 = v39 + 4;
              while (v31 != v33)
              {
                int v40 = *((_DWORD *)v31 - 1);
                v31 -= 4;
                *((_DWORD *)v39 - 1) = v40;
                v39 -= 4;
              }
              *(void *)(a1 + 8) = v39;
              *(void *)(a1 + 16) = v32;
              *(void *)(a1 + 24) = &v38[4 * v37];
              if (v33) {
                operator delete(v33);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v31 = 0;
              char v32 = v31 + 4;
            }
            *(void *)(a1 + 16) = v32;
            unint64_t v41 = *((void *)this + 1);
            if (v41 > 0xFFFFFFFFFFFFFFFBLL || v41 + 4 > *((void *)this + 2)) {
              goto LABEL_109;
            }
            *(v32 - 1) = *(_DWORD *)(*(void *)this + v41);
            unint64_t v29 = *((void *)this + 2);
            unint64_t v28 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v28;
          }
          goto LABEL_110;
        case 3u:
          if (v25 != 2)
          {
            char v75 = *(char **)(a1 + 40);
            unint64_t v74 = *(void *)(a1 + 48);
            if ((unint64_t)v75 >= v74)
            {
              uint64_t v84 = (char *)*v9;
              uint64_t v85 = (v75 - (unsigned char *)*v9) >> 2;
              unint64_t v86 = v85 + 1;
              if ((unint64_t)(v85 + 1) >> 62) {
LABEL_171:
              }
                sub_227B8B89C();
              uint64_t v87 = v74 - (void)v84;
              if (v87 >> 1 > v86) {
                unint64_t v86 = v87 >> 1;
              }
              if ((unint64_t)v87 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v88 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v88 = v86;
              }
              if (v88)
              {
                unint64_t v89 = (char *)sub_227B8BBB8(v10, v88);
                uint64_t v84 = *(char **)(a1 + 32);
                char v75 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v89 = 0;
              }
              char v98 = &v89[4 * v85];
              *(_DWORD *)char v98 = 0;
              unint64_t v73 = v98 + 4;
              while (v75 != v84)
              {
                int v99 = *((_DWORD *)v75 - 1);
                v75 -= 4;
                *((_DWORD *)v98 - 1) = v99;
                v98 -= 4;
              }
              *(void *)(a1 + 32) = v98;
              *(void *)(a1 + 40) = v73;
              *(void *)(a1 + 48) = &v89[4 * v88];
              if (v84) {
                operator delete(v84);
              }
            }
            else
            {
              *(_DWORD *)char v75 = 0;
              unint64_t v73 = v75 + 4;
            }
            *(void *)(a1 + 40) = v73;
            goto LABEL_156;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v42 = *((void *)this + 1);
          unint64_t v43 = *((void *)this + 2);
          while (v42 < v43 && !*((unsigned char *)this + 24))
          {
            unint64_t v45 = *(char **)(a1 + 40);
            unint64_t v44 = *(void *)(a1 + 48);
            if ((unint64_t)v45 >= v44)
            {
              char v47 = (char *)*v9;
              uint64_t v48 = (v45 - (unsigned char *)*v9) >> 2;
              unint64_t v49 = v48 + 1;
              if ((unint64_t)(v48 + 1) >> 62) {
                goto LABEL_171;
              }
              uint64_t v50 = v44 - (void)v47;
              if (v50 >> 1 > v49) {
                unint64_t v49 = v50 >> 1;
              }
              if ((unint64_t)v50 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v51 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v51 = v49;
              }
              if (v51)
              {
                unint64_t v52 = (char *)sub_227B8BBB8(v10, v51);
                char v47 = *(char **)(a1 + 32);
                unint64_t v45 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v52 = 0;
              }
              unint64_t v53 = &v52[4 * v48];
              *(_DWORD *)unint64_t v53 = 0;
              char v46 = v53 + 4;
              while (v45 != v47)
              {
                int v54 = *((_DWORD *)v45 - 1);
                v45 -= 4;
                *((_DWORD *)v53 - 1) = v54;
                v53 -= 4;
              }
              *(void *)(a1 + 32) = v53;
              *(void *)(a1 + 40) = v46;
              *(void *)(a1 + 48) = &v52[4 * v51];
              if (v47) {
                operator delete(v47);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v45 = 0;
              char v46 = v45 + 4;
            }
            *(void *)(a1 + 40) = v46;
            unint64_t v55 = *((void *)this + 1);
            if (v55 > 0xFFFFFFFFFFFFFFFBLL || v55 + 4 > *((void *)this + 2)) {
              goto LABEL_109;
            }
            *(v46 - 1) = *(_DWORD *)(*(void *)this + v55);
            unint64_t v43 = *((void *)this + 2);
            unint64_t v42 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v42;
          }
          goto LABEL_110;
        case 4u:
          if (v25 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v56 = *((void *)this + 1);
            unint64_t v57 = *((void *)this + 2);
            while (v56 < v57 && !*((unsigned char *)this + 24))
            {
              unint64_t v59 = *(char **)(a1 + 64);
              unint64_t v58 = *(void *)(a1 + 72);
              if ((unint64_t)v59 >= v58)
              {
                char v61 = (char *)*v8;
                uint64_t v62 = (v59 - (unsigned char *)*v8) >> 2;
                unint64_t v63 = v62 + 1;
                if ((unint64_t)(v62 + 1) >> 62) {
                  goto LABEL_172;
                }
                uint64_t v64 = v58 - (void)v61;
                if (v64 >> 1 > v63) {
                  unint64_t v63 = v64 >> 1;
                }
                if ((unint64_t)v64 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v65 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v65 = v63;
                }
                if (v65)
                {
                  unint64_t v66 = (char *)sub_227B8BBB8(v104, v65);
                  char v61 = *(char **)(a1 + 56);
                  unint64_t v59 = *(char **)(a1 + 64);
                }
                else
                {
                  unint64_t v66 = 0;
                }
                char v67 = &v66[4 * v62];
                *(_DWORD *)char v67 = 0;
                uint64_t v60 = v67 + 4;
                while (v59 != v61)
                {
                  int v68 = *((_DWORD *)v59 - 1);
                  v59 -= 4;
                  *((_DWORD *)v67 - 1) = v68;
                  v67 -= 4;
                }
                *(void *)(a1 + 56) = v67;
                *(void *)(a1 + 64) = v60;
                *(void *)(a1 + 72) = &v66[4 * v65];
                if (v61) {
                  operator delete(v61);
                }
              }
              else
              {
                *(_DWORD *)unint64_t v59 = 0;
                uint64_t v60 = v59 + 4;
              }
              *(void *)(a1 + 64) = v60;
              unint64_t v69 = *((void *)this + 1);
              if (v69 > 0xFFFFFFFFFFFFFFFBLL || v69 + 4 > *((void *)this + 2))
              {
LABEL_109:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v60 - 1) = *(_DWORD *)(*(void *)this + v69);
              unint64_t v57 = *((void *)this + 2);
              unint64_t v56 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v56;
            }
LABEL_110:
            PB::Reader::recallMark();
          }
          else
          {
            unint64_t v77 = *(char **)(a1 + 64);
            unint64_t v76 = *(void *)(a1 + 72);
            if ((unint64_t)v77 >= v76)
            {
              int v90 = (char *)*v8;
              uint64_t v91 = (v77 - (unsigned char *)*v8) >> 2;
              unint64_t v92 = v91 + 1;
              if ((unint64_t)(v91 + 1) >> 62) {
LABEL_172:
              }
                sub_227B8B89C();
              uint64_t v93 = v76 - (void)v90;
              if (v93 >> 1 > v92) {
                unint64_t v92 = v93 >> 1;
              }
              if ((unint64_t)v93 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v94 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v94 = v92;
              }
              if (v94)
              {
                unint64_t v95 = (char *)sub_227B8BBB8(v104, v94);
                int v90 = *(char **)(a1 + 56);
                unint64_t v77 = *(char **)(a1 + 64);
              }
              else
              {
                unint64_t v95 = 0;
              }
              uint64_t v100 = &v95[4 * v91];
              *(_DWORD *)uint64_t v100 = 0;
              unint64_t v73 = v100 + 4;
              while (v77 != v90)
              {
                int v101 = *((_DWORD *)v77 - 1);
                v77 -= 4;
                *((_DWORD *)v100 - 1) = v101;
                v100 -= 4;
              }
              *(void *)(a1 + 56) = v100;
              *(void *)(a1 + 64) = v73;
              *(void *)(a1 + 72) = &v95[4 * v94];
              if (v90) {
                operator delete(v90);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v77 = 0;
              unint64_t v73 = v77 + 4;
            }
            *(void *)(a1 + 64) = v73;
LABEL_156:
            unint64_t v102 = *((void *)this + 1);
            if (v102 <= 0xFFFFFFFFFFFFFFFBLL && v102 + 4 <= *((void *)this + 2))
            {
              *(v73 - 1) = *(_DWORD *)(*(void *)this + v102);
LABEL_160:
              uint64_t v27 = *((void *)this + 1) + 4;
LABEL_161:
              *((void *)this + 1) = v27;
            }
            else
            {
LABEL_158:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_162:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || *((unsigned char *)this + 24)) {
            return v4 == 0;
          }
          break;
        case 5u:
          *(unsigned char *)(a1 + 92) |= 2u;
          unint64_t v70 = *((void *)this + 1);
          if (v70 > 0xFFFFFFFFFFFFFFFBLL || v70 + 4 > *((void *)this + 2)) {
            goto LABEL_158;
          }
          *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v70);
          goto LABEL_160;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_162;
      }
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v16 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v22 = v2 + 1;
      char v23 = *(unsigned char *)(v13 + v2);
      *((void *)this + 1) = v22;
      v16 |= (unint64_t)(v23 & 0x7F) << v20;
      if ((v23 & 0x80) == 0) {
        goto LABEL_21;
      }
      v20 += 7;
      unint64_t v2 = v22;
      if (v21++ >= 9)
      {
LABEL_20:
        unint64_t v16 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B3C7B0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  if (*(unsigned char *)(result + 92)) {
    double result = PB::Writer::write(this, *(double *)(result + 80));
  }
  int v4 = *(float **)(v3 + 8);
  uint64_t v5 = *(float **)(v3 + 16);
  while (v4 != v5)
  {
    float v6 = *v4++;
    double result = PB::Writer::write(this, v6);
  }
  float v7 = *(float **)(v3 + 32);
  uint64_t v8 = *(float **)(v3 + 40);
  while (v7 != v8)
  {
    float v9 = *v7++;
    double result = PB::Writer::write(this, v9);
  }
  uint64_t v10 = *(float **)(v3 + 56);
  unint64_t v11 = *(float **)(v3 + 64);
  while (v10 != v11)
  {
    float v12 = *v10++;
    double result = PB::Writer::write(this, v12);
  }
  if ((*(unsigned char *)(v3 + 92) & 2) != 0)
  {
    float v13 = *(float *)(v3 + 88);
    return PB::Writer::write(this, v13);
  }
  return result;
}

double sub_227B3C888(uint64_t a1)
{
  *(void *)a1 = &unk_26DC20150;
  *(_DWORD *)(a1 + 60) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return result;
}

void sub_227B3C8BC(PB::Base *this)
{
  *(void *)this = &unk_26DC20150;
  unint64_t v2 = (void *)*((void *)this + 4);
  if (v2)
  {
    *((void *)this + 5) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 2) = v3;
    operator delete(v3);
  }

  PB::Base::~Base(this);
}

void sub_227B3C930(PB::Base *a1)
{
  sub_227B3C8BC(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B3C968(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC20150;
  *(_OWORD *)(a1 + 8) = 0u;
  int v4 = (char *)(a1 + 8);
  *(_DWORD *)(a1 + 60) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  if (a1 != a2)
  {
    sub_227B8BA68((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
    sub_227B8BA68(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  if (*(unsigned char *)(a2 + 60))
  {
    int v5 = *(_DWORD *)(a2 + 56);
    *(unsigned char *)(a1 + 60) |= 1u;
    *(_DWORD *)(a1 + 56) = v5;
  }
  return a1;
}

uint64_t sub_227B3CA20(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(float **)(a1 + 8);
  float v6 = *(float **)(a1 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    PB::TextFormatter::format(this, "intercept", v7);
  }
  if (*(unsigned char *)(a1 + 60)) {
    PB::TextFormatter::format(this, "lastMiniCal", *(float *)(a1 + 56));
  }
  uint64_t v8 = *(float **)(a1 + 32);
  float v9 = *(float **)(a1 + 40);
  while (v8 != v9)
  {
    float v10 = *v8++;
    PB::TextFormatter::format(this, "slope", v10);
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227B3CAE8(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = (void **)(a1 + 8);
    uint64_t v9 = a1 + 24;
    float v10 = (void **)(a1 + 32);
    uint64_t v11 = a1 + 48;
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        unint64_t v15 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v21 = v2 + 1;
          char v22 = *(unsigned char *)(v12 + v2);
          *((void *)this + 1) = v21;
          v15 |= (unint64_t)(v22 & 0x7F) << v19;
          if ((v22 & 0x80) == 0) {
            goto LABEL_21;
          }
          v19 += 7;
          unint64_t v2 = v21;
          if (v20++ >= 9)
          {
LABEL_20:
            unint64_t v15 = 0;
            goto LABEL_21;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
        return v4 == 0;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        if (v14++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v24 = v15 & 7;
      if (v24 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v25 = v15 >> 3;
      if ((v15 >> 3) == 3) {
        break;
      }
      if (v25 == 2)
      {
        if (v24 == 2)
        {
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v41 = *((void *)this + 1);
          unint64_t v42 = *((void *)this + 2);
          while (v41 < v42 && !*((unsigned char *)this + 24))
          {
            unint64_t v44 = *(char **)(a1 + 16);
            unint64_t v43 = *(void *)(a1 + 24);
            if ((unint64_t)v44 >= v43)
            {
              char v46 = (char *)*v8;
              uint64_t v47 = (v44 - (unsigned char *)*v8) >> 2;
              unint64_t v48 = v47 + 1;
              if ((unint64_t)(v47 + 1) >> 62) {
                goto LABEL_128;
              }
              uint64_t v49 = v43 - (void)v46;
              if (v49 >> 1 > v48) {
                unint64_t v48 = v49 >> 1;
              }
              if ((unint64_t)v49 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v50 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v50 = v48;
              }
              if (v50)
              {
                unint64_t v51 = (char *)sub_227B8BBB8(v9, v50);
                char v46 = *(char **)(a1 + 8);
                unint64_t v44 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v51 = 0;
              }
              unint64_t v52 = &v51[4 * v47];
              *(_DWORD *)unint64_t v52 = 0;
              unint64_t v45 = v52 + 4;
              while (v44 != v46)
              {
                int v53 = *((_DWORD *)v44 - 1);
                v44 -= 4;
                *((_DWORD *)v52 - 1) = v53;
                v52 -= 4;
              }
              *(void *)(a1 + 8) = v52;
              *(void *)(a1 + 16) = v45;
              *(void *)(a1 + 24) = &v51[4 * v50];
              if (v46) {
                operator delete(v46);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v44 = 0;
              unint64_t v45 = v44 + 4;
            }
            *(void *)(a1 + 16) = v45;
            unint64_t v54 = *((void *)this + 1);
            if (v54 > 0xFFFFFFFFFFFFFFFBLL || v54 + 4 > *((void *)this + 2))
            {
LABEL_82:
              *((unsigned char *)this + 24) = 1;
              goto LABEL_83;
            }
            *(v45 - 1) = *(_DWORD *)(*(void *)this + v54);
            unint64_t v42 = *((void *)this + 2);
            unint64_t v41 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v41;
          }
          goto LABEL_83;
        }
        unint64_t v59 = *(char **)(a1 + 16);
        unint64_t v58 = *(void *)(a1 + 24);
        if ((unint64_t)v59 >= v58)
        {
          unint64_t v66 = (char *)*v8;
          uint64_t v67 = (v59 - (unsigned char *)*v8) >> 2;
          unint64_t v68 = v67 + 1;
          if ((unint64_t)(v67 + 1) >> 62) {
LABEL_128:
          }
            sub_227B8B89C();
          uint64_t v69 = v58 - (void)v66;
          if (v69 >> 1 > v68) {
            unint64_t v68 = v69 >> 1;
          }
          if ((unint64_t)v69 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v70 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v70 = v68;
          }
          if (v70)
          {
            unint64_t v71 = (char *)sub_227B8BBB8(v9, v70);
            unint64_t v66 = *(char **)(a1 + 8);
            unint64_t v59 = *(char **)(a1 + 16);
          }
          else
          {
            unint64_t v71 = 0;
          }
          unint64_t v74 = &v71[4 * v67];
          *(_DWORD *)unint64_t v74 = 0;
          unint64_t v57 = v74 + 4;
          while (v59 != v66)
          {
            int v75 = *((_DWORD *)v59 - 1);
            v59 -= 4;
            *((_DWORD *)v74 - 1) = v75;
            v74 -= 4;
          }
          *(void *)(a1 + 8) = v74;
          *(void *)(a1 + 16) = v57;
          *(void *)(a1 + 24) = &v71[4 * v70];
          if (v66) {
            operator delete(v66);
          }
        }
        else
        {
          *(_DWORD *)unint64_t v59 = 0;
          unint64_t v57 = v59 + 4;
        }
        *(void *)(a1 + 16) = v57;
LABEL_114:
        unint64_t v76 = *((void *)this + 1);
        if (v76 > 0xFFFFFFFFFFFFFFFBLL || v76 + 4 > *((void *)this + 2)) {
          goto LABEL_116;
        }
        *(v57 - 1) = *(_DWORD *)(*(void *)this + v76);
LABEL_118:
        *((void *)this + 1) += 4;
        goto LABEL_119;
      }
      if (v25 == 1)
      {
        if (v24 == 2)
        {
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v26 = *((void *)this + 1);
          unint64_t v27 = *((void *)this + 2);
          while (v26 < v27 && !*((unsigned char *)this + 24))
          {
            unint64_t v29 = *(char **)(a1 + 40);
            unint64_t v28 = *(void *)(a1 + 48);
            if ((unint64_t)v29 >= v28)
            {
              unint64_t v31 = (char *)*v10;
              uint64_t v32 = (v29 - (unsigned char *)*v10) >> 2;
              unint64_t v33 = v32 + 1;
              if ((unint64_t)(v32 + 1) >> 62) {
                goto LABEL_127;
              }
              uint64_t v34 = v28 - (void)v31;
              if (v34 >> 1 > v33) {
                unint64_t v33 = v34 >> 1;
              }
              if ((unint64_t)v34 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v35 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v35 = v33;
              }
              if (v35)
              {
                uint64_t v36 = (char *)sub_227B8BBB8(v11, v35);
                unint64_t v31 = *(char **)(a1 + 32);
                unint64_t v29 = *(char **)(a1 + 40);
              }
              else
              {
                uint64_t v36 = 0;
              }
              unint64_t v37 = &v36[4 * v32];
              *(_DWORD *)unint64_t v37 = 0;
              unint64_t v30 = v37 + 4;
              while (v29 != v31)
              {
                int v38 = *((_DWORD *)v29 - 1);
                v29 -= 4;
                *((_DWORD *)v37 - 1) = v38;
                v37 -= 4;
              }
              *(void *)(a1 + 32) = v37;
              *(void *)(a1 + 40) = v30;
              *(void *)(a1 + 48) = &v36[4 * v35];
              if (v31) {
                operator delete(v31);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v29 = 0;
              unint64_t v30 = v29 + 4;
            }
            *(void *)(a1 + 40) = v30;
            unint64_t v39 = *((void *)this + 1);
            if (v39 > 0xFFFFFFFFFFFFFFFBLL || v39 + 4 > *((void *)this + 2)) {
              goto LABEL_82;
            }
            *(v30 - 1) = *(_DWORD *)(*(void *)this + v39);
            unint64_t v27 = *((void *)this + 2);
            unint64_t v26 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v26;
          }
LABEL_83:
          PB::Reader::recallMark();
          goto LABEL_119;
        }
        unint64_t v56 = *(char **)(a1 + 40);
        unint64_t v55 = *(void *)(a1 + 48);
        if ((unint64_t)v56 >= v55)
        {
          uint64_t v60 = (char *)*v10;
          uint64_t v61 = (v56 - (unsigned char *)*v10) >> 2;
          unint64_t v62 = v61 + 1;
          if ((unint64_t)(v61 + 1) >> 62) {
LABEL_127:
          }
            sub_227B8B89C();
          uint64_t v63 = v55 - (void)v60;
          if (v63 >> 1 > v62) {
            unint64_t v62 = v63 >> 1;
          }
          if ((unint64_t)v63 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v64 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v64 = v62;
          }
          if (v64)
          {
            unint64_t v65 = (char *)sub_227B8BBB8(v11, v64);
            uint64_t v60 = *(char **)(a1 + 32);
            unint64_t v56 = *(char **)(a1 + 40);
          }
          else
          {
            unint64_t v65 = 0;
          }
          uint64_t v72 = &v65[4 * v61];
          *(_DWORD *)uint64_t v72 = 0;
          unint64_t v57 = v72 + 4;
          while (v56 != v60)
          {
            int v73 = *((_DWORD *)v56 - 1);
            v56 -= 4;
            *((_DWORD *)v72 - 1) = v73;
            v72 -= 4;
          }
          *(void *)(a1 + 32) = v72;
          *(void *)(a1 + 40) = v57;
          *(void *)(a1 + 48) = &v65[4 * v64];
          if (v60) {
            operator delete(v60);
          }
        }
        else
        {
          *(_DWORD *)unint64_t v56 = 0;
          unint64_t v57 = v56 + 4;
        }
        *(void *)(a1 + 40) = v57;
        goto LABEL_114;
      }
      if ((PB::Reader::skip(this) & 1) == 0) {
        return 0;
      }
LABEL_119:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    *(unsigned char *)(a1 + 60) |= 1u;
    unint64_t v40 = *((void *)this + 1);
    if (v40 > 0xFFFFFFFFFFFFFFFBLL || v40 + 4 > *((void *)this + 2))
    {
LABEL_116:
      *((unsigned char *)this + 24) = 1;
      goto LABEL_119;
    }
    *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v40);
    goto LABEL_118;
  }
  return v4 == 0;
}

uint64_t sub_227B3D05C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(float **)(result + 32);
  int v5 = *(float **)(result + 40);
  while (v4 != v5)
  {
    float v6 = *v4++;
    double result = PB::Writer::write(this, v6);
  }
  float v7 = *(float **)(v3 + 8);
  uint64_t v8 = *(float **)(v3 + 16);
  while (v7 != v8)
  {
    float v9 = *v7++;
    double result = PB::Writer::write(this, v9);
  }
  if (*(unsigned char *)(v3 + 60))
  {
    float v10 = *(float *)(v3 + 56);
    return PB::Writer::write(this, v10);
  }
  return result;
}

void *sub_227B3D0FC(void *result)
{
  *double result = &unk_26DC20188;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void sub_227B3D120(void **a1)
{
  *a1 = &unk_26DC20188;
  unint64_t v2 = a1 + 1;
  sub_227B8B5D0(&v2);
  PB::Base::~Base((PB::Base *)a1);
}

uint64_t sub_227B3D17C(void **a1)
{
  *a1 = &unk_26DC20188;
  uint64_t v3 = a1 + 1;
  sub_227B8B5D0(&v3);
  PB::Base::~Base((PB::Base *)a1);
  return MEMORY[0x22A6850E0]();
}

void *sub_227B3D1EC(void *result, uint64_t a2)
{
  result[1] = 0;
  *double result = &unk_26DC20188;
  result[2] = 0;
  result[3] = 0;
  if (*(void *)(a2 + 8) != *(void *)(a2 + 16)) {
    sub_227B3D264();
  }
  return result;
}

void sub_227B3D264()
{
}

void sub_227B3D368(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_227B8BDA0((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_227B3D3B0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(uint64_t **)(a1 + 8);
  float v6 = *(uint64_t **)(a1 + 16);
  while (v5 != v6)
  {
    uint64_t v7 = *v5++;
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v7 + 32))(v7, this, "sample");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B3D448(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        sub_227B3D604();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

void sub_227B3D604()
{
}

void sub_227B3D71C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_227B8BDA0((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_227B3D760(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base ***)(result + 8);
  for (i = *(const PB::Base ***)(result + 16); v2 != i; uint64_t result = PB::Writer::writeSubmessage(this, v5))
    int v5 = *v2++;
  return result;
}

void *sub_227B3D7AC(void *result)
{
  *uint64_t result = &unk_26DC201C0;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void sub_227B3D7D0(void **a1)
{
  *a1 = &unk_26DC201C0;
  unint64_t v2 = a1 + 1;
  sub_227B8B5D0(&v2);
  PB::Base::~Base((PB::Base *)a1);
}

uint64_t sub_227B3D82C(void **a1)
{
  *a1 = &unk_26DC201C0;
  unint64_t v3 = a1 + 1;
  sub_227B8B5D0(&v3);
  PB::Base::~Base((PB::Base *)a1);
  return MEMORY[0x22A6850E0]();
}

void *sub_227B3D89C(void *result, uint64_t a2)
{
  result[1] = 0;
  *uint64_t result = &unk_26DC201C0;
  result[2] = 0;
  result[3] = 0;
  if (*(void *)(a2 + 8) != *(void *)(a2 + 16)) {
    sub_227B3D914();
  }
  return result;
}

void sub_227B3D914()
{
}

void sub_227B3DA18(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_227B8BDA0((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_227B3DA60(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(uint64_t **)(a1 + 8);
  float v6 = *(uint64_t **)(a1 + 16);
  while (v5 != v6)
  {
    uint64_t v7 = *v5++;
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v7 + 32))(v7, this, "sample");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B3DAF8(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        sub_227B3DCB4();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

void sub_227B3DCB4()
{
}

void sub_227B3DDCC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_227B8BDA0((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_227B3DE10(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base ***)(result + 8);
  for (i = *(const PB::Base ***)(result + 16); v2 != i; uint64_t result = PB::Writer::writeSubmessage(this, v5))
    int v5 = *v2++;
  return result;
}

uint64_t sub_227B3DE5C(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC201F8;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void sub_227B3DE84(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227B3DEBC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC201F8;
  *(_DWORD *)(a1 + 24) = 0;
  char v2 = *(unsigned char *)(a2 + 24);
  if (v2)
  {
    float result = *(float *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 24) = 1;
    *(float *)(a1 + 8) = result;
    char v2 = *(unsigned char *)(a2 + 24);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 24) & 2) != 0)
  {
LABEL_5:
    float result = *(float *)(a2 + 12);
    v3 |= 2u;
    *(unsigned char *)(a1 + 24) = v3;
    *(float *)(a1 + 12) = result;
    char v2 = *(unsigned char *)(a2 + 24);
  }
LABEL_6:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      return result;
    }
LABEL_10:
    float result = *(float *)(a2 + 20);
    *(unsigned char *)(a1 + 24) = v3 | 8;
    *(float *)(a1 + 20) = result;
    return result;
  }
  float result = *(float *)(a2 + 16);
  v3 |= 4u;
  *(unsigned char *)(a1 + 24) = v3;
  *(float *)(a1 + 16) = result;
  if ((*(unsigned char *)(a2 + 24) & 8) != 0) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_227B3DF58(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 24);
  if (v5)
  {
    PB::TextFormatter::format(this, "temperature", *(float *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 24);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 24) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "x", *(float *)(a1 + 12));
  char v5 = *(unsigned char *)(a1 + 24);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "y", *(float *)(a1 + 16));
  if ((*(unsigned char *)(a1 + 24) & 8) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "z", *(float *)(a1 + 20));
LABEL_6:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B3E01C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 24) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_37;
        case 2u:
          *(unsigned char *)(a1 + 24) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(_DWORD *)(a1 + 12) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_37;
        case 3u:
          *(unsigned char *)(a1 + 24) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_37;
        case 4u:
          *(unsigned char *)(a1 + 24) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
LABEL_37:
            unint64_t v2 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_35:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B3E294(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 24);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 24);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16));
      if ((*(unsigned char *)(v3 + 24) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 24) & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 12));
  char v4 = *(unsigned char *)(v3 + 24);
  if ((v4 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 8) == 0) {
    return result;
  }
LABEL_9:
  float v5 = *(float *)(v3 + 20);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227B3E33C(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC20230;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void sub_227B3E360(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC20230;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227B3E3E0(PB::Base *a1)
{
  sub_227B3E360(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B3E418(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC20230;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 24) = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  if (*(unsigned char *)(a2 + 24))
  {
    uint64_t v2 = *(void *)(a2 + 16);
    *(unsigned char *)(result + 24) |= 1u;
    *(void *)(result + 16) = v2;
  }
  return result;
}

uint64_t sub_227B3E4E0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }
  if (*(unsigned char *)(a1 + 24)) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 16));
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B3E578(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 24) |= 1u;
        unint64_t v20 = *((void *)this + 1);
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v20);
          *((void *)this + 1) += 8;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        if ((v11 >> 3) == 1) {
          operator new();
        }
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B3E7E8(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(const PB::Base **)(result + 8);
  if (v4) {
    uint64_t result = PB::Writer::writeSubmessage(this, v4);
  }
  if (*(unsigned char *)(v3 + 24))
  {
    double v5 = *(double *)(v3 + 16);
    return PB::Writer::write(this, v5);
  }
  return result;
}

uint64_t sub_227B3E850(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC20268;
  *(_DWORD *)(result + 60) = 0;
  return result;
}

void sub_227B3E878(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B3E8B0(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC20268;
  *(_DWORD *)(result + 60) = 0;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    __int16 v3 = 1;
    *(_WORD *)(result + 60) = 1;
    *(void *)(result + 8) = v4;
    __int16 v2 = *(_WORD *)(a2 + 60);
    if ((v2 & 0x100) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((*(_WORD *)(a2 + 60) & 0x100) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 44);
    v3 |= 0x100u;
    *(_WORD *)(result + 60) = v3;
    *(_DWORD *)(result + 44) = v5;
    __int16 v2 = *(_WORD *)(a2 + 60);
  }
LABEL_6:
  if ((v2 & 0x200) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 48);
    v3 |= 0x200u;
    *(_WORD *)(result + 60) = v3;
    *(_DWORD *)(result + 48) = v6;
    __int16 v2 = *(_WORD *)(a2 + 60);
    if ((v2 & 0x400) == 0)
    {
LABEL_8:
      if ((v2 & 0x80) == 0) {
        goto LABEL_9;
      }
      goto LABEL_19;
    }
  }
  else if ((v2 & 0x400) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 52);
  v3 |= 0x400u;
  *(_WORD *)(result + 60) = v3;
  *(_DWORD *)(result + 52) = v7;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x80) == 0)
  {
LABEL_9:
    if ((v2 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_19:
  int v8 = *(_DWORD *)(a2 + 40);
  v3 |= 0x80u;
  *(_WORD *)(result + 60) = v3;
  *(_DWORD *)(result + 40) = v8;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x40) == 0)
  {
LABEL_10:
    if ((v2 & 0x800) == 0) {
      goto LABEL_11;
    }
    goto LABEL_21;
  }
LABEL_20:
  int v9 = *(_DWORD *)(a2 + 36);
  v3 |= 0x40u;
  *(_WORD *)(result + 60) = v3;
  *(_DWORD *)(result + 36) = v9;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x800) == 0)
  {
LABEL_11:
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_21:
  int v10 = *(_DWORD *)(a2 + 56);
  v3 |= 0x800u;
  *(_WORD *)(result + 60) = v3;
  *(_DWORD *)(result + 56) = v10;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 2) == 0)
  {
LABEL_12:
    if ((v2 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v11 = *(_DWORD *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(result + 60) = v3;
  *(_DWORD *)(result + 16) = v11;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 8) == 0)
  {
LABEL_13:
    if ((v2 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_24;
  }
LABEL_23:
  int v12 = *(_DWORD *)(a2 + 24);
  v3 |= 8u;
  *(_WORD *)(result + 60) = v3;
  *(_DWORD *)(result + 24) = v12;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x10) == 0)
  {
LABEL_14:
    if ((v2 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v13 = *(_DWORD *)(a2 + 28);
  v3 |= 0x10u;
  *(_WORD *)(result + 60) = v3;
  *(_DWORD *)(result + 28) = v13;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x20) == 0)
  {
LABEL_15:
    if ((v2 & 4) == 0) {
      return result;
    }
LABEL_26:
    int v15 = *(_DWORD *)(a2 + 20);
    *(_WORD *)(result + 60) = v3 | 4;
    *(_DWORD *)(result + 20) = v15;
    return result;
  }
LABEL_25:
  int v14 = *(_DWORD *)(a2 + 32);
  v3 |= 0x20u;
  *(_WORD *)(result + 60) = v3;
  *(_DWORD *)(result + 32) = v14;
  if ((*(_WORD *)(a2 + 60) & 4) != 0) {
    goto LABEL_26;
  }
  return result;
}

uint64_t sub_227B3EA2C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "accuracy", *(float *)(a1 + 16));
    __int16 v5 = *(_WORD *)(a1 + 60);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "calibrationLevel");
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "magneticFieldX", *(float *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "magneticFieldY", *(float *)(a1 + 28));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x20) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "magneticFieldZ", *(float *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "magneticHeading", *(float *)(a1 + 36));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x80) == 0)
  {
LABEL_8:
    if ((v5 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "quaternionW", *(float *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x100) == 0)
  {
LABEL_9:
    if ((v5 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "quaternionX", *(float *)(a1 + 44));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x200) == 0)
  {
LABEL_10:
    if ((v5 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "quaternionY", *(float *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x400) == 0)
  {
LABEL_11:
    if ((v5 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "quaternionZ", *(float *)(a1 + 52));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 1) == 0)
  {
LABEL_12:
    if ((v5 & 0x800) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_27:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  if ((*(_WORD *)(a1 + 60) & 0x800) != 0) {
LABEL_13:
  }
    PB::TextFormatter::format(this, "trueHeading", *(float *)(a1 + 56));
LABEL_14:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B3EBF0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 60) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              unint64_t v2 = *((void *)this + 1) + 8;
              goto LABEL_73;
            case 2u:
              *(_WORD *)(a1 + 60) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_72;
            case 3u:
              *(_WORD *)(a1 + 60) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_72;
            case 4u:
              *(_WORD *)(a1 + 60) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_72;
            case 5u:
              *(_WORD *)(a1 + 60) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_72;
            case 6u:
              *(_WORD *)(a1 + 60) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_72;
            case 7u:
              *(_WORD *)(a1 + 60) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_72;
            case 8u:
              *(_WORD *)(a1 + 60) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_72;
            case 9u:
              *(_WORD *)(a1 + 60) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_72;
            case 0xAu:
              *(_WORD *)(a1 + 60) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_72;
            case 0xBu:
              *(_WORD *)(a1 + 60) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
LABEL_72:
                unint64_t v2 = *((void *)this + 1) + 4;
LABEL_73:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_56:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_79;
            case 0xCu:
              *(_WORD *)(a1 + 60) |= 4u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v27 = 0;
                unsigned int v28 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_78;
                  }
                  unint64_t v29 = v21++;
                  char v30 = *(unsigned char *)(v22 + v29);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v30 & 0x7F) << v27;
                  if ((v30 & 0x80) == 0) {
                    break;
                  }
                  v27 += 7;
                  BOOL v14 = v28++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_77:
                    unint64_t v2 = v29 + 1;
                    goto LABEL_78;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_77;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_78;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_78:
              *(_DWORD *)(a1 + 20) = v25;
LABEL_79:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_79;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B3F104(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 60);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    __int16 v4 = *(_WORD *)(v3 + 60);
    if ((v4 & 0x100) == 0)
    {
LABEL_3:
      if ((v4 & 0x200) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((*(_WORD *)(result + 60) & 0x100) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44));
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x200) == 0)
  {
LABEL_4:
    if ((v4 & 0x400) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48));
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x400) == 0)
  {
LABEL_5:
    if ((v4 & 0x80) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x80) == 0)
  {
LABEL_6:
    if ((v4 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x40) == 0)
  {
LABEL_7:
    if ((v4 & 0x800) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36));
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x800) == 0)
  {
LABEL_8:
    if ((v4 & 2) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56));
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 2) == 0)
  {
LABEL_9:
    if ((v4 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16));
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 8) == 0)
  {
LABEL_10:
    if ((v4 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x10) == 0)
  {
LABEL_11:
    if ((v4 & 0x20) == 0) {
      goto LABEL_12;
    }
LABEL_24:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
    if ((*(_WORD *)(v3 + 60) & 4) == 0) {
      return result;
    }
    goto LABEL_25;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x20) != 0) {
    goto LABEL_24;
  }
LABEL_12:
  if ((v4 & 4) == 0) {
    return result;
  }
LABEL_25:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227B3F28C(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC202A0;
  *(_DWORD *)(result + 12) = 0;
  return result;
}

void sub_227B3F2B4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227B3F2EC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC202A0;
  *(_DWORD *)(a1 + 12) = 0;
  if (*(unsigned char *)(a2 + 12))
  {
    float result = *(float *)(a2 + 8);
    *(unsigned char *)(a1 + 12) = 1;
    *(float *)(a1 + 8) = result;
  }
  return result;
}

uint64_t sub_227B3F328(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 12)) {
    PB::TextFormatter::format(this, "dt", *(float *)(a1 + 8));
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B3F388(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 12) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
        {
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 4;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B3F524(uint64_t result, PB::Writer *this)
{
  if (*(unsigned char *)(result + 12)) {
    return PB::Writer::write(this, *(float *)(result + 8));
  }
  return result;
}

uint64_t sub_227B3F540(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC202D8;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void sub_227B3F568(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227B3F5A0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC202D8;
  *(_DWORD *)(a1 + 24) = 0;
  char v2 = *(unsigned char *)(a2 + 24);
  if (v2)
  {
    float result = *(float *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 24) = 1;
    *(float *)(a1 + 8) = result;
    char v2 = *(unsigned char *)(a2 + 24);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 24) & 2) != 0)
  {
LABEL_5:
    float result = *(float *)(a2 + 12);
    v3 |= 2u;
    *(unsigned char *)(a1 + 24) = v3;
    *(float *)(a1 + 12) = result;
    char v2 = *(unsigned char *)(a2 + 24);
  }
LABEL_6:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      return result;
    }
LABEL_10:
    float result = *(float *)(a2 + 20);
    *(unsigned char *)(a1 + 24) = v3 | 8;
    *(float *)(a1 + 20) = result;
    return result;
  }
  float result = *(float *)(a2 + 16);
  v3 |= 4u;
  *(unsigned char *)(a1 + 24) = v3;
  *(float *)(a1 + 16) = result;
  if ((*(unsigned char *)(a2 + 24) & 8) != 0) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_227B3F63C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 24);
  if (v5)
  {
    PB::TextFormatter::format(this, "temperature", *(float *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 24);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 24) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "x", *(float *)(a1 + 12));
  char v5 = *(unsigned char *)(a1 + 24);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "y", *(float *)(a1 + 16));
  if ((*(unsigned char *)(a1 + 24) & 8) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "z", *(float *)(a1 + 20));
LABEL_6:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B3F700(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 24) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_37;
        case 2u:
          *(unsigned char *)(a1 + 24) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(_DWORD *)(a1 + 12) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_37;
        case 3u:
          *(unsigned char *)(a1 + 24) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_37;
        case 4u:
          *(unsigned char *)(a1 + 24) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
LABEL_37:
            unint64_t v2 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_35:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B3F978(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 24);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 24);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16));
      if ((*(unsigned char *)(v3 + 24) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 24) & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 12));
  char v4 = *(unsigned char *)(v3 + 24);
  if ((v4 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 8) == 0) {
    return result;
  }
LABEL_9:
  float v5 = *(float *)(v3 + 20);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227B3FA20(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC20310;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

void sub_227B3FA48(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227B3FA80(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC20310;
  *(_DWORD *)(a1 + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 28);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 28) = 1;
    *(void *)(a1 + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 28) & 2) != 0)
  {
LABEL_5:
    LODWORD(v4) = *(_DWORD *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(a1 + 28) = v3;
    *(_DWORD *)(a1 + 16) = v4;
    char v2 = *(unsigned char *)(a2 + 28);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    LODWORD(v4) = *(_DWORD *)(a2 + 20);
    v3 |= 4u;
    *(unsigned char *)(a1 + 28) = v3;
    *(_DWORD *)(a1 + 20) = v4;
    if ((*(unsigned char *)(a2 + 28) & 8) == 0) {
      return *(float *)&v4;
    }
  }
  else if ((v2 & 8) == 0)
  {
    return *(float *)&v4;
  }
  LODWORD(v4) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = v3 | 8;
  *(_DWORD *)(a1 + 24) = v4;
  return *(float *)&v4;
}

uint64_t sub_227B3FB1C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 28);
  if (v5)
  {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 28);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 28) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "x", *(float *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "y", *(float *)(a1 + 20));
  if ((*(unsigned char *)(a1 + 28) & 8) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "z", *(float *)(a1 + 24));
LABEL_6:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B3FBE0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 28) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          goto LABEL_38;
        case 2u:
          *(unsigned char *)(a1 + 28) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_37;
        case 3u:
          *(unsigned char *)(a1 + 28) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_37;
        case 4u:
          *(unsigned char *)(a1 + 28) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
LABEL_37:
            unint64_t v2 = *((void *)this + 1) + 4;
LABEL_38:
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_35:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B3FE60(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 28);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
      if ((*(unsigned char *)(v3 + 28) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 28) & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16));
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 8) == 0) {
    return result;
  }
LABEL_9:
  float v5 = *(float *)(v3 + 24);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227B3FF08(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC20348;
  *(_DWORD *)(result + 36) = 0;
  return result;
}

void sub_227B3FF30(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B3FF68(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC20348;
  *(_DWORD *)(result + 36) = 0;
  char v2 = *(unsigned char *)(a2 + 36);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 36) = 1;
    *(void *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 36);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 36) & 4) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 20);
    v3 |= 4u;
    *(unsigned char *)(result + 36) = v3;
    *(_DWORD *)(result + 20) = v5;
    char v2 = *(unsigned char *)(a2 + 36);
  }
LABEL_6:
  if ((v2 & 8) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 24);
    v3 |= 8u;
    *(unsigned char *)(result + 36) = v3;
    *(_DWORD *)(result + 24) = v6;
    char v2 = *(unsigned char *)(a2 + 36);
    if ((v2 & 0x10) == 0)
    {
LABEL_8:
      if ((v2 & 2) == 0) {
        goto LABEL_9;
      }
      goto LABEL_13;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 28);
  v3 |= 0x10u;
  *(unsigned char *)(result + 36) = v3;
  *(_DWORD *)(result + 28) = v7;
  char v2 = *(unsigned char *)(a2 + 36);
  if ((v2 & 2) == 0)
  {
LABEL_9:
    if ((v2 & 0x20) == 0) {
      return result;
    }
LABEL_14:
    char v9 = *(unsigned char *)(a2 + 32);
    *(unsigned char *)(result + 36) = v3 | 0x20;
    *(unsigned char *)(result + 32) = v9;
    return result;
  }
LABEL_13:
  int v8 = *(_DWORD *)(a2 + 16);
  v3 |= 2u;
  *(unsigned char *)(result + 36) = v3;
  *(_DWORD *)(result + 16) = v8;
  if ((*(unsigned char *)(a2 + 36) & 0x20) != 0) {
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_227B4003C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 36);
  if ((v5 & 0x20) != 0)
  {
    PB::TextFormatter::format(this, "fsync");
    char v5 = *(unsigned char *)(a1 + 36);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((*(unsigned char *)(a1 + 36) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "sampleNum");
  char v5 = *(unsigned char *)(a1 + 36);
  if ((v5 & 1) == 0)
  {
LABEL_4:
    if ((v5 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  char v5 = *(unsigned char *)(a1 + 36);
  if ((v5 & 4) == 0)
  {
LABEL_5:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(this, "x", *(float *)(a1 + 20));
  char v5 = *(unsigned char *)(a1 + 36);
  if ((v5 & 8) == 0)
  {
LABEL_6:
    if ((v5 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_15:
  PB::TextFormatter::format(this, "y", *(float *)(a1 + 24));
  if ((*(unsigned char *)(a1 + 36) & 0x10) != 0) {
LABEL_7:
  }
    PB::TextFormatter::format(this, "z", *(float *)(a1 + 28));
LABEL_8:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B40140(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 36) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_35;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              unint64_t v2 = *((void *)this + 1) + 8;
              goto LABEL_56;
            case 2u:
              *(unsigned char *)(a1 + 36) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_35;
              }
              *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_55;
            case 3u:
              *(unsigned char *)(a1 + 36) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_35;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_55;
            case 4u:
              *(unsigned char *)(a1 + 36) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
LABEL_55:
                unint64_t v2 = *((void *)this + 1) + 4;
LABEL_56:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_35:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_62;
            case 5u:
              *(unsigned char *)(a1 + 36) |= 2u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v29 = 0;
                unsigned int v30 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_61;
                  }
                  unint64_t v31 = v21++;
                  char v32 = *(unsigned char *)(v22 + v31);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v32 & 0x7F) << v29;
                  if ((v32 & 0x80) == 0) {
                    break;
                  }
                  v29 += 7;
                  BOOL v14 = v30++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_60:
                    unint64_t v2 = v31 + 1;
                    goto LABEL_61;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_60;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_61;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_61:
              *(_DWORD *)(a1 + 16) = v25;
LABEL_62:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 6u:
              *(unsigned char *)(a1 + 36) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v28 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v27 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v28 = v27 != 0;
              }
              *(unsigned char *)(a1 + 32) = v28;
              goto LABEL_62;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_62;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B404F8(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 36);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 36);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((*(unsigned char *)(result + 36) & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
  char v4 = *(unsigned char *)(v3 + 36);
  if ((v4 & 8) == 0)
  {
LABEL_4:
    if ((v4 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
  char v4 = *(unsigned char *)(v3 + 36);
  if ((v4 & 0x10) == 0)
  {
LABEL_5:
    if ((v4 & 2) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(unsigned char *)(v3 + 36) & 0x20) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_11:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
  char v4 = *(unsigned char *)(v3 + 36);
  if ((v4 & 2) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v4 & 0x20) == 0) {
    return result;
  }
LABEL_13:

  return PB::Writer::write(this);
}

uint64_t sub_227B405D8(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC20380;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void sub_227B40600(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B40638(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC20380;
  *(_DWORD *)(result + 16) = 0;
  if ((*(unsigned char *)(a2 + 16) & 2) != 0)
  {
    int v3 = *(_DWORD *)(a2 + 12);
    *(unsigned char *)(result + 16) = 2;
    *(_DWORD *)(result + 12) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 16) & 1) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 1;
  if (*(unsigned char *)(a2 + 16))
  {
LABEL_5:
    int v4 = *(_DWORD *)(a2 + 8);
    *(unsigned char *)(result + 16) = v2;
    *(_DWORD *)(result + 8) = v4;
  }
  return result;
}

uint64_t sub_227B4069C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 16);
  if (v5)
  {
    PB::TextFormatter::format(this, "location");
    char v5 = *(unsigned char *)(a1 + 16);
  }
  if ((v5 & 2) != 0) {
    PB::TextFormatter::format(this, "temperature", *(float *)(a1 + 12));
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B40718(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 16) |= 1u;
        unint64_t v20 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v21 = *(void *)this;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v24 = 0;
          if (v2 <= v20) {
            unint64_t v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v20)
            {
              LODWORD(v24) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_47;
            }
            unint64_t v29 = v20++;
            char v30 = *(unsigned char *)(v21 + v29);
            *((void *)this + 1) = v20;
            v24 |= (unint64_t)(v30 & 0x7F) << v27;
            if ((v30 & 0x80) == 0) {
              break;
            }
            v27 += 7;
            BOOL v14 = v28++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              goto LABEL_46;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v24) = 0;
          }
LABEL_46:
          unint64_t v2 = v29 + 1;
        }
        else
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          while (1)
          {
            unint64_t v2 = v20 + 1;
            *((void *)this + 1) = v20 + 1;
            char v25 = *(unsigned char *)(v21 + v20);
            v24 |= (unint64_t)(v25 & 0x7F) << v22;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v22 += 7;
            unint64_t v20 = v2;
            BOOL v14 = v23++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              break;
            }
          }
        }
LABEL_47:
        *(_DWORD *)(a1 + 8) = v24;
      }
      else if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 16) |= 2u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
        {
          *(_DWORD *)(a1 + 12) = *(_DWORD *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 4;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B409A8(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 16);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(result + 12));
    char v4 = *(unsigned char *)(v3 + 16);
  }
  if (v4)
  {
    return PB::Writer::writeVarInt(this);
  }
  return result;
}

uint64_t sub_227B40A14(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC203B8;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_227B40A3C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B40A74(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC203B8;
  *(_DWORD *)(result + 20) = 0;
  if (*(unsigned char *)(a2 + 20))
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 20) = 1;
    *(void *)(result + 8) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 20) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
LABEL_5:
    char v4 = *(unsigned char *)(a2 + 16);
    *(unsigned char *)(result + 20) = v2;
    *(unsigned char *)(result + 16) = v4;
  }
  return result;
}

uint64_t sub_227B40AD8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "inShower");
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if (v5) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B40B54(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 >= *((void *)this + 2))
        {
          BOOL v21 = 0;
          *((unsigned char *)this + 24) = 1;
        }
        else
        {
          int v20 = *(unsigned __int8 *)(*(void *)this + v2++);
          *((void *)this + 1) = v2;
          BOOL v21 = v20 != 0;
        }
        *(unsigned char *)(a1 + 16) = v21;
      }
      else if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B40D3C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    return PB::Writer::write(this);
  }
  return result;
}

uint64_t sub_227B40DA8(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC203F0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_227B40DD0(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B40E08(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC203F0;
  *(_DWORD *)(result + 20) = 0;
  if (*(unsigned char *)(a2 + 20))
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 20) = 1;
    *(void *)(result + 8) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 20) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
LABEL_5:
    char v4 = *(unsigned char *)(a2 + 16);
    *(unsigned char *)(result + 20) = v2;
    *(unsigned char *)(result + 16) = v4;
  }
  return result;
}

uint64_t sub_227B40E6C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "hapticOn");
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if (v5) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B40EE8(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 >= *((void *)this + 2))
        {
          BOOL v21 = 0;
          *((unsigned char *)this + 24) = 1;
        }
        else
        {
          int v20 = *(unsigned __int8 *)(*(void *)this + v2++);
          *((void *)this + 1) = v2;
          BOOL v21 = v20 != 0;
        }
        *(unsigned char *)(a1 + 16) = v21;
      }
      else if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B410D0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    return PB::Writer::write(this);
  }
  return result;
}

uint64_t sub_227B4113C(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC20428;
  *(_DWORD *)(result + 44) = 0;
  return result;
}

void sub_227B41164(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227B4119C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC20428;
  *(_DWORD *)(a1 + 44) = 0;
  char v2 = *(unsigned char *)(a2 + 44);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 44) = 1;
    *(void *)(a1 + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 44);
    if ((v2 & 0x80) == 0) {
      goto LABEL_6;
    }
  }
  else
  {
    char v3 = 0;
    if ((*(unsigned char *)(a2 + 44) & 0x80) == 0) {
      goto LABEL_6;
    }
  }
  float result = *(float *)(a2 + 40);
  v3 |= 0x80u;
  *(unsigned char *)(a1 + 44) = v3;
  *(float *)(a1 + 40) = result;
  char v2 = *(unsigned char *)(a2 + 44);
LABEL_6:
  if ((v2 & 2) != 0)
  {
    float result = *(float *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(a1 + 44) = v3;
    *(float *)(a1 + 16) = result;
    char v2 = *(unsigned char *)(a2 + 44);
    if ((v2 & 4) == 0)
    {
LABEL_8:
      if ((v2 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_15;
    }
  }
  else if ((v2 & 4) == 0)
  {
    goto LABEL_8;
  }
  float result = *(float *)(a2 + 20);
  v3 |= 4u;
  *(unsigned char *)(a1 + 44) = v3;
  *(float *)(a1 + 20) = result;
  char v2 = *(unsigned char *)(a2 + 44);
  if ((v2 & 8) == 0)
  {
LABEL_9:
    if ((v2 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_16;
  }
LABEL_15:
  float result = *(float *)(a2 + 24);
  v3 |= 8u;
  *(unsigned char *)(a1 + 44) = v3;
  *(float *)(a1 + 24) = result;
  char v2 = *(unsigned char *)(a2 + 44);
  if ((v2 & 0x10) == 0)
  {
LABEL_10:
    if ((v2 & 0x20) == 0) {
      goto LABEL_11;
    }
    goto LABEL_17;
  }
LABEL_16:
  float result = *(float *)(a2 + 28);
  v3 |= 0x10u;
  *(unsigned char *)(a1 + 44) = v3;
  *(float *)(a1 + 28) = result;
  char v2 = *(unsigned char *)(a2 + 44);
  if ((v2 & 0x20) == 0)
  {
LABEL_11:
    if ((v2 & 0x40) == 0) {
      return result;
    }
LABEL_18:
    float result = *(float *)(a2 + 36);
    *(unsigned char *)(a1 + 44) = v3 | 0x40;
    *(float *)(a1 + 36) = result;
    return result;
  }
LABEL_17:
  float result = *(float *)(a2 + 32);
  v3 |= 0x20u;
  *(unsigned char *)(a1 + 44) = v3;
  *(float *)(a1 + 32) = result;
  if ((*(unsigned char *)(a2 + 44) & 0x40) != 0) {
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_227B412A8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "stepIndexOfHarmonicityAP", *(float *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 44);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((*(unsigned char *)(a1 + 44) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "stepIndexOfHarmonicityML", *(float *)(a1 + 20));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  PB::TextFormatter::format(this, "stepIndexOfHarmonicityVT", *(float *)(a1 + 24));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "swingIndexOfHarmonicityAP", *(float *)(a1 + 28));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 0x20) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  PB::TextFormatter::format(this, "swingIndexOfHarmonicityML", *(float *)(a1 + 32));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "swingIndexOfHarmonicityVT", *(float *)(a1 + 36));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 0x80) == 0)
  {
LABEL_8:
    if ((v5 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_19:
  PB::TextFormatter::format(this, "thetaAPDirRad", *(float *)(a1 + 40));
  if (*(unsigned char *)(a1 + 44)) {
LABEL_9:
  }
    PB::TextFormatter::format(this, "timestamp");
LABEL_10:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B413EC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 44) |= 1u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v27 = 0;
                unsigned int v28 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_65;
                  }
                  unint64_t v29 = v20++;
                  char v30 = *(unsigned char *)(v21 + v29);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v30 & 0x7F) << v27;
                  if ((v30 & 0x80) == 0) {
                    break;
                  }
                  v27 += 7;
                  BOOL v14 = v28++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_64;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_64:
                unint64_t v2 = v29 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_65;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_65:
              *(void *)(a1 + 8) = v24;
              goto LABEL_66;
            case 2u:
              *(unsigned char *)(a1 + 44) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_51;
              }
              *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_60;
            case 3u:
              *(unsigned char *)(a1 + 44) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_51;
              }
              *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_60;
            case 4u:
              *(unsigned char *)(a1 + 44) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_51;
              }
              *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_60;
            case 5u:
              *(unsigned char *)(a1 + 44) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_51;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_60;
            case 6u:
              *(unsigned char *)(a1 + 44) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_51;
              }
              *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_60;
            case 7u:
              *(unsigned char *)(a1 + 44) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_51;
              }
              *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_60;
            case 8u:
              *(unsigned char *)(a1 + 44) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
LABEL_60:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_51:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_66;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
LABEL_66:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B41808(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 44);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 44);
    if ((v4 & 0x80) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(result + 44) & 0x80) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 2) == 0)
  {
LABEL_4:
    if ((v4 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16));
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_16:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
    if ((*(unsigned char *)(v3 + 44) & 0x40) == 0) {
      return result;
    }
    goto LABEL_17;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 0x20) != 0) {
    goto LABEL_16;
  }
LABEL_8:
  if ((v4 & 0x40) == 0) {
    return result;
  }
LABEL_17:
  float v5 = *(float *)(v3 + 36);

  return PB::Writer::write(this, v5);
}

double sub_227B41920(uint64_t a1)
{
  *(void *)a1 = &unk_26DC20460;
  *(void *)(a1 + 168) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  return result;
}

void sub_227B41960(PB::Base *this)
{
  *(void *)this = &unk_26DC20460;
  unint64_t v2 = (void *)*((void *)this + 10);
  if (v2)
  {
    *((void *)this + 11) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 7);
  if (v3)
  {
    *((void *)this + 8) = v3;
    operator delete(v3);
  }
  char v4 = (void *)*((void *)this + 4);
  if (v4)
  {
    *((void *)this + 5) = v4;
    operator delete(v4);
  }
  float v5 = (void *)*((void *)this + 1);
  if (v5)
  {
    *((void *)this + 2) = v5;
    operator delete(v5);
  }

  PB::Base::~Base(this);
}

void sub_227B419F4(PB::Base *a1)
{
  sub_227B41960(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B41A2C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC20460;
  *(_OWORD *)(a1 + 8) = 0u;
  char v4 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 56) = 0u;
  float v5 = (char *)(a1 + 56);
  *(void *)(a1 + 168) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  if ((*(_WORD *)(a2 + 172) & 0x10) != 0)
  {
    uint64_t v7 = *(void *)(a2 + 136);
    *(_WORD *)(a1 + 172) = 16;
    *(void *)(a1 + 136) = v7;
    __int16 v6 = 272;
    if ((*(_WORD *)(a2 + 172) & 0x100) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v6 = 256;
  if ((*(_WORD *)(a2 + 172) & 0x100) != 0)
  {
LABEL_5:
    int v8 = *(_DWORD *)(a2 + 168);
    *(_WORD *)(a1 + 172) = v6;
    *(_DWORD *)(a1 + 168) = v8;
  }
LABEL_6:
  if (a1 != a2)
  {
    sub_227B8B74C((char *)(a1 + 80), *(char **)(a2 + 80), *(void *)(a2 + 88), (uint64_t)(*(void *)(a2 + 88) - *(void *)(a2 + 80)) >> 3);
    sub_227B8B74C(v5, *(char **)(a2 + 56), *(void *)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 3);
  }
  __int16 v9 = *(_WORD *)(a2 + 172);
  if ((v9 & 2) != 0)
  {
    uint64_t v10 = *(void *)(a2 + 112);
    *(_WORD *)(a1 + 172) |= 2u;
    *(void *)(a1 + 112) = v10;
    __int16 v9 = *(_WORD *)(a2 + 172);
  }
  if (v9)
  {
    uint64_t v11 = *(void *)(a2 + 104);
    *(_WORD *)(a1 + 172) |= 1u;
    *(void *)(a1 + 104) = v11;
  }
  if (a1 != a2)
  {
    sub_227B8B74C((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 3);
    sub_227B8B74C(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
  }
  __int16 v12 = *(_WORD *)(a2 + 172);
  if ((v12 & 0x80) != 0)
  {
    uint64_t v15 = *(void *)(a2 + 160);
    *(_WORD *)(a1 + 172) |= 0x80u;
    *(void *)(a1 + 160) = v15;
    __int16 v12 = *(_WORD *)(a2 + 172);
    if ((v12 & 0x20) == 0)
    {
LABEL_16:
      if ((v12 & 0x40) == 0) {
        goto LABEL_17;
      }
      goto LABEL_23;
    }
  }
  else if ((v12 & 0x20) == 0)
  {
    goto LABEL_16;
  }
  uint64_t v16 = *(void *)(a2 + 144);
  *(_WORD *)(a1 + 172) |= 0x20u;
  *(void *)(a1 + 144) = v16;
  __int16 v12 = *(_WORD *)(a2 + 172);
  if ((v12 & 0x40) == 0)
  {
LABEL_17:
    if ((v12 & 8) == 0) {
      goto LABEL_18;
    }
LABEL_24:
    uint64_t v18 = *(void *)(a2 + 128);
    *(_WORD *)(a1 + 172) |= 8u;
    *(void *)(a1 + 128) = v18;
    if ((*(_WORD *)(a2 + 172) & 4) == 0) {
      return a1;
    }
    goto LABEL_19;
  }
LABEL_23:
  uint64_t v17 = *(void *)(a2 + 152);
  *(_WORD *)(a1 + 172) |= 0x40u;
  *(void *)(a1 + 152) = v17;
  __int16 v12 = *(_WORD *)(a2 + 172);
  if ((v12 & 8) != 0) {
    goto LABEL_24;
  }
LABEL_18:
  if ((v12 & 4) != 0)
  {
LABEL_19:
    uint64_t v13 = *(void *)(a2 + 120);
    *(_WORD *)(a1 + 172) |= 4u;
    *(void *)(a1 + 120) = v13;
  }
  return a1;
}

uint64_t sub_227B41C1C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 172);
  if (v5)
  {
    PB::TextFormatter::format(this, "covTraceAfterCorrection", *(double *)(a1 + 104));
    __int16 v5 = *(_WORD *)(a1 + 172);
  }
  if ((v5 & 2) != 0) {
    PB::TextFormatter::format(this, "covTraceBeforeCorrection", *(double *)(a1 + 112));
  }
  __int16 v6 = *(double **)(a1 + 8);
  uint64_t v7 = *(double **)(a1 + 16);
  while (v6 != v7)
  {
    double v8 = *v6++;
    PB::TextFormatter::format(this, "dX", v8);
  }
  __int16 v9 = *(_WORD *)(a1 + 172);
  if ((v9 & 4) != 0)
  {
    PB::TextFormatter::format(this, "lastStateTimestamp", *(double *)(a1 + 120));
    __int16 v9 = *(_WORD *)(a1 + 172);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x100) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
  }
  else if ((v9 & 8) == 0)
  {
    goto LABEL_9;
  }
  PB::TextFormatter::format(this, "lidAngleDeg", *(double *)(a1 + 128));
  if ((*(_WORD *)(a1 + 172) & 0x100) != 0) {
LABEL_10:
  }
    PB::TextFormatter::format(this, "measurementUpdateType");
LABEL_11:
  uint64_t v10 = *(double **)(a1 + 32);
  uint64_t v11 = *(double **)(a1 + 40);
  while (v10 != v11)
  {
    double v12 = *v10++;
    PB::TextFormatter::format(this, "residual", v12);
  }
  uint64_t v13 = *(double **)(a1 + 56);
  BOOL v14 = *(double **)(a1 + 64);
  while (v13 != v14)
  {
    double v15 = *v13++;
    PB::TextFormatter::format(this, "stateQfbAfterCorrection", v15);
  }
  uint64_t v16 = *(double **)(a1 + 80);
  uint64_t v17 = *(double **)(a1 + 88);
  while (v16 != v17)
  {
    double v18 = *v16++;
    PB::TextFormatter::format(this, "stateQfbBeforeCorrection", v18);
  }
  __int16 v19 = *(_WORD *)(a1 + 172);
  if ((v19 & 0x10) != 0)
  {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 136));
    __int16 v19 = *(_WORD *)(a1 + 172);
    if ((v19 & 0x20) == 0)
    {
LABEL_19:
      if ((v19 & 0x40) == 0) {
        goto LABEL_20;
      }
      goto LABEL_30;
    }
  }
  else if ((v19 & 0x20) == 0)
  {
    goto LABEL_19;
  }
  PB::TextFormatter::format(this, "wAuxBudNormMeanDps", *(double *)(a1 + 144));
  __int16 v19 = *(_WORD *)(a1 + 172);
  if ((v19 & 0x40) == 0)
  {
LABEL_20:
    if ((v19 & 0x80) == 0) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
LABEL_30:
  PB::TextFormatter::format(this, "wAuxFaceNormMeanDps", *(double *)(a1 + 152));
  if ((*(_WORD *)(a1 + 172) & 0x80) != 0) {
LABEL_21:
  }
    PB::TextFormatter::format(this, "wSrcNormMeanDps", *(double *)(a1 + 160));
LABEL_22:

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227B41E38(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    double v8 = (void **)(a1 + 8);
    __int16 v9 = (void **)(a1 + 32);
    uint64_t v147 = a1 + 48;
    uint64_t v148 = a1 + 24;
    uint64_t v10 = (void **)(a1 + 56);
    uint64_t v11 = (void **)(a1 + 80);
    uint64_t v145 = a1 + 96;
    uint64_t v146 = a1 + 72;
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        BOOL v18 = v14++ > 8;
        if (v18) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v24 = v15 & 7;
      if (v24 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v15 >> 3))
      {
        case 1u:
          *(_WORD *)(a1 + 172) |= 0x10u;
          unint64_t v25 = *((void *)this + 1);
          if (v25 > 0xFFFFFFFFFFFFFFF7 || v25 + 8 > *((void *)this + 2)) {
            goto LABEL_235;
          }
          *(void *)(a1 + 136) = *(void *)(*(void *)this + v25);
          goto LABEL_237;
        case 2u:
          *(_WORD *)(a1 + 172) |= 0x100u;
          unint64_t v26 = *((void *)this + 1);
          unint64_t v27 = *((void *)this + 2);
          uint64_t v28 = *(void *)this;
          if (v26 <= 0xFFFFFFFFFFFFFFF5 && v26 + 10 <= v27)
          {
            char v29 = 0;
            unsigned int v30 = 0;
            uint64_t v31 = 0;
            do
            {
              unint64_t v32 = v26 + 1;
              *((void *)this + 1) = v26 + 1;
              char v33 = *(unsigned char *)(v28 + v26);
              v31 |= (unint64_t)(v33 & 0x7F) << v29;
              if ((v33 & 0x80) == 0) {
                goto LABEL_204;
              }
              v29 += 7;
              unint64_t v26 = v32;
              BOOL v18 = v30++ > 8;
            }
            while (!v18);
LABEL_160:
            LODWORD(v31) = 0;
            goto LABEL_204;
          }
          char v97 = 0;
          unsigned int v98 = 0;
          uint64_t v31 = 0;
          if (v27 <= v26) {
            unint64_t v27 = *((void *)this + 1);
          }
          while (2)
          {
            if (v27 == v26)
            {
              LODWORD(v31) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v99 = v26 + 1;
              char v100 = *(unsigned char *)(v28 + v26);
              *((void *)this + 1) = v99;
              v31 |= (unint64_t)(v100 & 0x7F) << v97;
              if (v100 < 0)
              {
                v97 += 7;
                unint64_t v26 = v99;
                BOOL v18 = v98++ > 8;
                if (v18) {
                  goto LABEL_160;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v31) = 0;
              }
            }
            break;
          }
LABEL_204:
          *(_DWORD *)(a1 + 168) = v31;
          goto LABEL_238;
        case 3u:
          if (v24 != 2)
          {
            unint64_t v102 = *(char **)(a1 + 88);
            unint64_t v101 = *(void *)(a1 + 96);
            if ((unint64_t)v102 >= v101)
            {
              uint64_t v110 = (char *)*v11;
              uint64_t v111 = (v102 - (unsigned char *)*v11) >> 3;
              unint64_t v112 = v111 + 1;
              if ((unint64_t)(v111 + 1) >> 61) {
LABEL_248:
              }
                sub_227B8B89C();
              uint64_t v113 = v101 - (void)v110;
              if (v113 >> 2 > v112) {
                unint64_t v112 = v113 >> 2;
              }
              if ((unint64_t)v113 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v114 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v114 = v112;
              }
              if (v114)
              {
                unint64_t v115 = (char *)sub_227B8B8B4(v145, v114);
                uint64_t v110 = *(char **)(a1 + 80);
                unint64_t v102 = *(char **)(a1 + 88);
              }
              else
              {
                unint64_t v115 = 0;
              }
              unint64_t v134 = &v115[8 * v111];
              *(void *)unint64_t v134 = 0;
              unint64_t v103 = v134 + 8;
              while (v102 != v110)
              {
                uint64_t v135 = *((void *)v102 - 1);
                v102 -= 8;
                *((void *)v134 - 1) = v135;
                v134 -= 8;
              }
              *(void *)(a1 + 80) = v134;
              *(void *)(a1 + 88) = v103;
              *(void *)(a1 + 96) = &v115[8 * v114];
              if (v110) {
                operator delete(v110);
              }
            }
            else
            {
              *(void *)unint64_t v102 = 0;
              unint64_t v103 = v102 + 8;
            }
            *(void *)(a1 + 88) = v103;
            goto LABEL_233;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v34 = *((void *)this + 1);
          unint64_t v35 = *((void *)this + 2);
          while (v34 < v35 && !*((unsigned char *)this + 24))
          {
            unint64_t v37 = *(char **)(a1 + 88);
            unint64_t v36 = *(void *)(a1 + 96);
            if ((unint64_t)v37 >= v36)
            {
              unint64_t v39 = (char *)*v11;
              uint64_t v40 = (v37 - (unsigned char *)*v11) >> 3;
              unint64_t v41 = v40 + 1;
              if ((unint64_t)(v40 + 1) >> 61) {
                goto LABEL_248;
              }
              uint64_t v42 = v36 - (void)v39;
              if (v42 >> 2 > v41) {
                unint64_t v41 = v42 >> 2;
              }
              if ((unint64_t)v42 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v43 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v43 = v41;
              }
              if (v43)
              {
                unint64_t v44 = (char *)sub_227B8B8B4(v145, v43);
                unint64_t v39 = *(char **)(a1 + 80);
                unint64_t v37 = *(char **)(a1 + 88);
              }
              else
              {
                unint64_t v44 = 0;
              }
              unint64_t v45 = &v44[8 * v40];
              *(void *)unint64_t v45 = 0;
              int v38 = v45 + 8;
              while (v37 != v39)
              {
                uint64_t v46 = *((void *)v37 - 1);
                v37 -= 8;
                *((void *)v45 - 1) = v46;
                v45 -= 8;
              }
              *(void *)(a1 + 80) = v45;
              *(void *)(a1 + 88) = v38;
              *(void *)(a1 + 96) = &v44[8 * v43];
              if (v39) {
                operator delete(v39);
              }
            }
            else
            {
              *(void *)unint64_t v37 = 0;
              int v38 = v37 + 8;
            }
            *(void *)(a1 + 88) = v38;
            unint64_t v47 = *((void *)this + 1);
            if (v47 > 0xFFFFFFFFFFFFFFF7 || v47 + 8 > *((void *)this + 2)) {
              goto LABEL_152;
            }
            *(v38 - 1) = *(void *)(*(void *)this + v47);
            unint64_t v35 = *((void *)this + 2);
            unint64_t v34 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v34;
          }
          goto LABEL_153;
        case 4u:
          if (v24 != 2)
          {
            unint64_t v105 = *(char **)(a1 + 64);
            unint64_t v104 = *(void *)(a1 + 72);
            if ((unint64_t)v105 >= v104)
            {
              uint64_t v116 = (char *)*v10;
              uint64_t v117 = (v105 - (unsigned char *)*v10) >> 3;
              unint64_t v118 = v117 + 1;
              if ((unint64_t)(v117 + 1) >> 61) {
LABEL_249:
              }
                sub_227B8B89C();
              uint64_t v119 = v104 - (void)v116;
              if (v119 >> 2 > v118) {
                unint64_t v118 = v119 >> 2;
              }
              if ((unint64_t)v119 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v120 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v120 = v118;
              }
              if (v120)
              {
                unint64_t v121 = (char *)sub_227B8B8B4(v146, v120);
                uint64_t v116 = *(char **)(a1 + 56);
                unint64_t v105 = *(char **)(a1 + 64);
              }
              else
              {
                unint64_t v121 = 0;
              }
              uint64_t v136 = &v121[8 * v117];
              *(void *)uint64_t v136 = 0;
              unint64_t v103 = v136 + 8;
              while (v105 != v116)
              {
                uint64_t v137 = *((void *)v105 - 1);
                v105 -= 8;
                *((void *)v136 - 1) = v137;
                v136 -= 8;
              }
              *(void *)(a1 + 56) = v136;
              *(void *)(a1 + 64) = v103;
              *(void *)(a1 + 72) = &v121[8 * v120];
              if (v116) {
                operator delete(v116);
              }
            }
            else
            {
              *(void *)unint64_t v105 = 0;
              unint64_t v103 = v105 + 8;
            }
            *(void *)(a1 + 64) = v103;
            goto LABEL_233;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v48 = *((void *)this + 1);
          unint64_t v49 = *((void *)this + 2);
          while (v48 < v49 && !*((unsigned char *)this + 24))
          {
            unint64_t v51 = *(char **)(a1 + 64);
            unint64_t v50 = *(void *)(a1 + 72);
            if ((unint64_t)v51 >= v50)
            {
              int v53 = (char *)*v10;
              uint64_t v54 = (v51 - (unsigned char *)*v10) >> 3;
              unint64_t v55 = v54 + 1;
              if ((unint64_t)(v54 + 1) >> 61) {
                goto LABEL_249;
              }
              uint64_t v56 = v50 - (void)v53;
              if (v56 >> 2 > v55) {
                unint64_t v55 = v56 >> 2;
              }
              if ((unint64_t)v56 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v57 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v57 = v55;
              }
              if (v57)
              {
                unint64_t v58 = (char *)sub_227B8B8B4(v146, v57);
                int v53 = *(char **)(a1 + 56);
                unint64_t v51 = *(char **)(a1 + 64);
              }
              else
              {
                unint64_t v58 = 0;
              }
              unint64_t v59 = &v58[8 * v54];
              *(void *)unint64_t v59 = 0;
              unint64_t v52 = v59 + 8;
              while (v51 != v53)
              {
                uint64_t v60 = *((void *)v51 - 1);
                v51 -= 8;
                *((void *)v59 - 1) = v60;
                v59 -= 8;
              }
              *(void *)(a1 + 56) = v59;
              *(void *)(a1 + 64) = v52;
              *(void *)(a1 + 72) = &v58[8 * v57];
              if (v53) {
                operator delete(v53);
              }
            }
            else
            {
              *(void *)unint64_t v51 = 0;
              unint64_t v52 = v51 + 8;
            }
            *(void *)(a1 + 64) = v52;
            unint64_t v61 = *((void *)this + 1);
            if (v61 > 0xFFFFFFFFFFFFFFF7 || v61 + 8 > *((void *)this + 2)) {
              goto LABEL_152;
            }
            *(v52 - 1) = *(void *)(*(void *)this + v61);
            unint64_t v49 = *((void *)this + 2);
            unint64_t v48 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v48;
          }
          goto LABEL_153;
        case 5u:
          *(_WORD *)(a1 + 172) |= 2u;
          unint64_t v62 = *((void *)this + 1);
          if (v62 > 0xFFFFFFFFFFFFFFF7 || v62 + 8 > *((void *)this + 2)) {
            goto LABEL_235;
          }
          *(void *)(a1 + 112) = *(void *)(*(void *)this + v62);
          goto LABEL_237;
        case 6u:
          *(_WORD *)(a1 + 172) |= 1u;
          unint64_t v63 = *((void *)this + 1);
          if (v63 > 0xFFFFFFFFFFFFFFF7 || v63 + 8 > *((void *)this + 2)) {
            goto LABEL_235;
          }
          *(void *)(a1 + 104) = *(void *)(*(void *)this + v63);
          goto LABEL_237;
        case 7u:
          if (v24 != 2)
          {
            unint64_t v107 = *(char **)(a1 + 40);
            unint64_t v106 = *(void *)(a1 + 48);
            if ((unint64_t)v107 >= v106)
            {
              uint64_t v122 = (char *)*v9;
              uint64_t v123 = (v107 - (unsigned char *)*v9) >> 3;
              unint64_t v124 = v123 + 1;
              if ((unint64_t)(v123 + 1) >> 61) {
LABEL_250:
              }
                sub_227B8B89C();
              uint64_t v125 = v106 - (void)v122;
              if (v125 >> 2 > v124) {
                unint64_t v124 = v125 >> 2;
              }
              if ((unint64_t)v125 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v126 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v126 = v124;
              }
              if (v126)
              {
                uint64_t v127 = (char *)sub_227B8B8B4(v147, v126);
                uint64_t v122 = *(char **)(a1 + 32);
                unint64_t v107 = *(char **)(a1 + 40);
              }
              else
              {
                uint64_t v127 = 0;
              }
              char v138 = &v127[8 * v123];
              *(void *)char v138 = 0;
              unint64_t v103 = v138 + 8;
              while (v107 != v122)
              {
                uint64_t v139 = *((void *)v107 - 1);
                v107 -= 8;
                *((void *)v138 - 1) = v139;
                v138 -= 8;
              }
              *(void *)(a1 + 32) = v138;
              *(void *)(a1 + 40) = v103;
              *(void *)(a1 + 48) = &v127[8 * v126];
              if (v122) {
                operator delete(v122);
              }
            }
            else
            {
              *(void *)unint64_t v107 = 0;
              unint64_t v103 = v107 + 8;
            }
            *(void *)(a1 + 40) = v103;
            goto LABEL_233;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v64 = *((void *)this + 1);
          unint64_t v65 = *((void *)this + 2);
          while (v64 < v65 && !*((unsigned char *)this + 24))
          {
            uint64_t v67 = *(char **)(a1 + 40);
            unint64_t v66 = *(void *)(a1 + 48);
            if ((unint64_t)v67 >= v66)
            {
              uint64_t v69 = (char *)*v9;
              uint64_t v70 = (v67 - (unsigned char *)*v9) >> 3;
              unint64_t v71 = v70 + 1;
              if ((unint64_t)(v70 + 1) >> 61) {
                goto LABEL_250;
              }
              uint64_t v72 = v66 - (void)v69;
              if (v72 >> 2 > v71) {
                unint64_t v71 = v72 >> 2;
              }
              if ((unint64_t)v72 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v73 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v73 = v71;
              }
              if (v73)
              {
                unint64_t v74 = (char *)sub_227B8B8B4(v147, v73);
                uint64_t v69 = *(char **)(a1 + 32);
                uint64_t v67 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v74 = 0;
              }
              int v75 = &v74[8 * v70];
              *(void *)int v75 = 0;
              unint64_t v68 = v75 + 8;
              while (v67 != v69)
              {
                uint64_t v76 = *((void *)v67 - 1);
                v67 -= 8;
                *((void *)v75 - 1) = v76;
                v75 -= 8;
              }
              *(void *)(a1 + 32) = v75;
              *(void *)(a1 + 40) = v68;
              *(void *)(a1 + 48) = &v74[8 * v73];
              if (v69) {
                operator delete(v69);
              }
            }
            else
            {
              *(void *)uint64_t v67 = 0;
              unint64_t v68 = v67 + 8;
            }
            *(void *)(a1 + 40) = v68;
            unint64_t v77 = *((void *)this + 1);
            if (v77 > 0xFFFFFFFFFFFFFFF7 || v77 + 8 > *((void *)this + 2)) {
              goto LABEL_152;
            }
            *(v68 - 1) = *(void *)(*(void *)this + v77);
            unint64_t v65 = *((void *)this + 2);
            unint64_t v64 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v64;
          }
          goto LABEL_153;
        case 8u:
          if (v24 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v78 = *((void *)this + 1);
            unint64_t v79 = *((void *)this + 2);
            while (v78 < v79 && !*((unsigned char *)this + 24))
            {
              uint64_t v81 = *(char **)(a1 + 16);
              unint64_t v80 = *(void *)(a1 + 24);
              if ((unint64_t)v81 >= v80)
              {
                char v83 = (char *)*v8;
                uint64_t v84 = (v81 - (unsigned char *)*v8) >> 3;
                unint64_t v85 = v84 + 1;
                if ((unint64_t)(v84 + 1) >> 61) {
                  goto LABEL_251;
                }
                uint64_t v86 = v80 - (void)v83;
                if (v86 >> 2 > v85) {
                  unint64_t v85 = v86 >> 2;
                }
                if ((unint64_t)v86 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v87 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v87 = v85;
                }
                if (v87)
                {
                  unint64_t v88 = (char *)sub_227B8B8B4(v148, v87);
                  char v83 = *(char **)(a1 + 8);
                  uint64_t v81 = *(char **)(a1 + 16);
                }
                else
                {
                  unint64_t v88 = 0;
                }
                unint64_t v89 = &v88[8 * v84];
                *(void *)unint64_t v89 = 0;
                unint64_t v82 = v89 + 8;
                while (v81 != v83)
                {
                  uint64_t v90 = *((void *)v81 - 1);
                  v81 -= 8;
                  *((void *)v89 - 1) = v90;
                  v89 -= 8;
                }
                *(void *)(a1 + 8) = v89;
                *(void *)(a1 + 16) = v82;
                *(void *)(a1 + 24) = &v88[8 * v87];
                if (v83) {
                  operator delete(v83);
                }
              }
              else
              {
                *(void *)uint64_t v81 = 0;
                unint64_t v82 = v81 + 8;
              }
              *(void *)(a1 + 16) = v82;
              unint64_t v91 = *((void *)this + 1);
              if (v91 > 0xFFFFFFFFFFFFFFF7 || v91 + 8 > *((void *)this + 2))
              {
LABEL_152:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v82 - 1) = *(void *)(*(void *)this + v91);
              unint64_t v79 = *((void *)this + 2);
              unint64_t v78 = *((void *)this + 1) + 8;
              *((void *)this + 1) = v78;
            }
LABEL_153:
            PB::Reader::recallMark();
          }
          else
          {
            unint64_t v109 = *(char **)(a1 + 16);
            unint64_t v108 = *(void *)(a1 + 24);
            if ((unint64_t)v109 >= v108)
            {
              int v128 = (char *)*v8;
              uint64_t v129 = (v109 - (unsigned char *)*v8) >> 3;
              unint64_t v130 = v129 + 1;
              if ((unint64_t)(v129 + 1) >> 61) {
LABEL_251:
              }
                sub_227B8B89C();
              uint64_t v131 = v108 - (void)v128;
              if (v131 >> 2 > v130) {
                unint64_t v130 = v131 >> 2;
              }
              if ((unint64_t)v131 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v132 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v132 = v130;
              }
              if (v132)
              {
                unint64_t v133 = (char *)sub_227B8B8B4(v148, v132);
                int v128 = *(char **)(a1 + 8);
                unint64_t v109 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v133 = 0;
              }
              uint64_t v140 = &v133[8 * v129];
              *(void *)uint64_t v140 = 0;
              unint64_t v103 = v140 + 8;
              while (v109 != v128)
              {
                uint64_t v141 = *((void *)v109 - 1);
                v109 -= 8;
                *((void *)v140 - 1) = v141;
                v140 -= 8;
              }
              *(void *)(a1 + 8) = v140;
              *(void *)(a1 + 16) = v103;
              *(void *)(a1 + 24) = &v133[8 * v132];
              if (v128) {
                operator delete(v128);
              }
            }
            else
            {
              *(void *)unint64_t v109 = 0;
              unint64_t v103 = v109 + 8;
            }
            *(void *)(a1 + 16) = v103;
LABEL_233:
            unint64_t v142 = *((void *)this + 1);
            if (v142 <= 0xFFFFFFFFFFFFFFF7 && v142 + 8 <= *((void *)this + 2))
            {
              *(v103 - 1) = *(void *)(*(void *)this + v142);
LABEL_237:
              *((void *)this + 1) += 8;
            }
            else
            {
LABEL_235:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_238:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        case 9u:
          *(_WORD *)(a1 + 172) |= 0x80u;
          unint64_t v92 = *((void *)this + 1);
          if (v92 > 0xFFFFFFFFFFFFFFF7 || v92 + 8 > *((void *)this + 2)) {
            goto LABEL_235;
          }
          *(void *)(a1 + 160) = *(void *)(*(void *)this + v92);
          goto LABEL_237;
        case 0xAu:
          *(_WORD *)(a1 + 172) |= 0x20u;
          unint64_t v93 = *((void *)this + 1);
          if (v93 > 0xFFFFFFFFFFFFFFF7 || v93 + 8 > *((void *)this + 2)) {
            goto LABEL_235;
          }
          *(void *)(a1 + 144) = *(void *)(*(void *)this + v93);
          goto LABEL_237;
        case 0xBu:
          *(_WORD *)(a1 + 172) |= 0x40u;
          unint64_t v94 = *((void *)this + 1);
          if (v94 > 0xFFFFFFFFFFFFFFF7 || v94 + 8 > *((void *)this + 2)) {
            goto LABEL_235;
          }
          *(void *)(a1 + 152) = *(void *)(*(void *)this + v94);
          goto LABEL_237;
        case 0xCu:
          *(_WORD *)(a1 + 172) |= 8u;
          unint64_t v95 = *((void *)this + 1);
          if (v95 > 0xFFFFFFFFFFFFFFF7 || v95 + 8 > *((void *)this + 2)) {
            goto LABEL_235;
          }
          *(void *)(a1 + 128) = *(void *)(*(void *)this + v95);
          goto LABEL_237;
        case 0xDu:
          *(_WORD *)(a1 + 172) |= 4u;
          unint64_t v96 = *((void *)this + 1);
          if (v96 > 0xFFFFFFFFFFFFFFF7 || v96 + 8 > *((void *)this + 2)) {
            goto LABEL_235;
          }
          *(void *)(a1 + 120) = *(void *)(*(void *)this + v96);
          goto LABEL_237;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_238;
      }
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v15 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v21 = v2 + 1;
      char v22 = *(unsigned char *)(v12 + v2);
      *((void *)this + 1) = v21;
      v15 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0) {
        goto LABEL_21;
      }
      v19 += 7;
      unint64_t v2 = v21;
      if (v20++ >= 9)
      {
LABEL_20:
        unint64_t v15 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B429C8(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 172);
  if ((v4 & 0x10) != 0)
  {
    double result = PB::Writer::write(this, *(double *)(result + 136));
    __int16 v4 = *(_WORD *)(v3 + 172);
  }
  if ((v4 & 0x100) != 0) {
    double result = PB::Writer::writeVarInt(this);
  }
  __int16 v5 = *(double **)(v3 + 80);
  __int16 v6 = *(double **)(v3 + 88);
  while (v5 != v6)
  {
    double v7 = *v5++;
    double result = PB::Writer::write(this, v7);
  }
  double v8 = *(double **)(v3 + 56);
  __int16 v9 = *(double **)(v3 + 64);
  while (v8 != v9)
  {
    double v10 = *v8++;
    double result = PB::Writer::write(this, v10);
  }
  __int16 v11 = *(_WORD *)(v3 + 172);
  if ((v11 & 2) != 0)
  {
    double result = PB::Writer::write(this, *(double *)(v3 + 112));
    __int16 v11 = *(_WORD *)(v3 + 172);
  }
  if (v11) {
    double result = PB::Writer::write(this, *(double *)(v3 + 104));
  }
  uint64_t v12 = *(double **)(v3 + 32);
  char v13 = *(double **)(v3 + 40);
  while (v12 != v13)
  {
    double v14 = *v12++;
    double result = PB::Writer::write(this, v14);
  }
  unint64_t v15 = *(double **)(v3 + 8);
  unint64_t v16 = *(double **)(v3 + 16);
  while (v15 != v16)
  {
    double v17 = *v15++;
    double result = PB::Writer::write(this, v17);
  }
  __int16 v18 = *(_WORD *)(v3 + 172);
  if ((v18 & 0x80) != 0)
  {
    double result = PB::Writer::write(this, *(double *)(v3 + 160));
    __int16 v18 = *(_WORD *)(v3 + 172);
    if ((v18 & 0x20) == 0)
    {
LABEL_23:
      if ((v18 & 0x40) == 0) {
        goto LABEL_24;
      }
      goto LABEL_29;
    }
  }
  else if ((v18 & 0x20) == 0)
  {
    goto LABEL_23;
  }
  double result = PB::Writer::write(this, *(double *)(v3 + 144));
  __int16 v18 = *(_WORD *)(v3 + 172);
  if ((v18 & 0x40) == 0)
  {
LABEL_24:
    if ((v18 & 8) == 0) {
      goto LABEL_25;
    }
LABEL_30:
    double result = PB::Writer::write(this, *(double *)(v3 + 128));
    if ((*(_WORD *)(v3 + 172) & 4) == 0) {
      return result;
    }
    goto LABEL_31;
  }
LABEL_29:
  double result = PB::Writer::write(this, *(double *)(v3 + 152));
  __int16 v18 = *(_WORD *)(v3 + 172);
  if ((v18 & 8) != 0) {
    goto LABEL_30;
  }
LABEL_25:
  if ((v18 & 4) == 0) {
    return result;
  }
LABEL_31:
  double v19 = *(double *)(v3 + 120);

  return PB::Writer::write(this, v19);
}

double sub_227B42B78(uint64_t a1)
{
  *(void *)a1 = &unk_26DC20498;
  *(_DWORD *)(a1 + 80) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return result;
}

void sub_227B42BAC(PB::Base *this)
{
  *(void *)this = &unk_26DC20498;
  unint64_t v2 = (void *)*((void *)this + 4);
  if (v2)
  {
    *((void *)this + 5) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 2) = v3;
    operator delete(v3);
  }

  PB::Base::~Base(this);
}

void sub_227B42C20(PB::Base *a1)
{
  sub_227B42BAC(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B42C58(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC20498;
  *(_OWORD *)(a1 + 8) = 0u;
  __int16 v4 = (char *)(a1 + 8);
  *(_DWORD *)(a1 + 80) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  if ((*(unsigned char *)(a2 + 80) & 4) != 0)
  {
    uint64_t v5 = *(void *)(a2 + 72);
    *(unsigned char *)(a1 + 80) = 4;
    *(void *)(a1 + 72) = v5;
  }
  if (a1 != a2)
  {
    sub_227B8B74C((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 3);
    sub_227B8B74C(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
  }
  char v6 = *(unsigned char *)(a2 + 80);
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(void *)(a2 + 64);
    *(unsigned char *)(a1 + 80) |= 2u;
    *(void *)(a1 + 64) = v7;
    char v6 = *(unsigned char *)(a2 + 80);
  }
  if (v6)
  {
    uint64_t v8 = *(void *)(a2 + 56);
    *(unsigned char *)(a1 + 80) |= 1u;
    *(void *)(a1 + 56) = v8;
  }
  return a1;
}

uint64_t sub_227B42D44(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 80)) {
    PB::TextFormatter::format(this, "lastUpdateTimestamp", *(double *)(a1 + 56));
  }
  uint64_t v5 = *(double **)(a1 + 8);
  char v6 = *(double **)(a1 + 16);
  while (v5 != v6)
  {
    double v7 = *v5++;
    PB::TextFormatter::format(this, "stateCov", v7);
  }
  if ((*(unsigned char *)(a1 + 80) & 2) != 0) {
    PB::TextFormatter::format(this, "stateCovTrace", *(double *)(a1 + 64));
  }
  uint64_t v8 = *(double **)(a1 + 32);
  __int16 v9 = *(double **)(a1 + 40);
  while (v8 != v9)
  {
    double v10 = *v8++;
    PB::TextFormatter::format(this, "stateQfb", v10);
  }
  if ((*(unsigned char *)(a1 + 80) & 4) != 0) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 72));
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227B42E44(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = (void **)(a1 + 8);
    uint64_t v9 = a1 + 24;
    double v10 = (void **)(a1 + 32);
    uint64_t v11 = a1 + 48;
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        if (v14++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v24 = v15 & 7;
      if (v24 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v15 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 80) |= 4u;
          unint64_t v25 = *((void *)this + 1);
          if (v25 > 0xFFFFFFFFFFFFFFF7 || v25 + 8 > *((void *)this + 2)) {
            goto LABEL_120;
          }
          *(void *)(a1 + 72) = *(void *)(*(void *)this + v25);
          goto LABEL_122;
        case 2u:
          if (v24 != 2)
          {
            unint64_t v57 = *(char **)(a1 + 40);
            unint64_t v56 = *(void *)(a1 + 48);
            if ((unint64_t)v57 >= v56)
            {
              unint64_t v61 = (char *)*v10;
              uint64_t v62 = (v57 - (unsigned char *)*v10) >> 3;
              unint64_t v63 = v62 + 1;
              if ((unint64_t)(v62 + 1) >> 61) {
LABEL_131:
              }
                sub_227B8B89C();
              uint64_t v64 = v56 - (void)v61;
              if (v64 >> 2 > v63) {
                unint64_t v63 = v64 >> 2;
              }
              if ((unint64_t)v64 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v65 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v65 = v63;
              }
              if (v65)
              {
                unint64_t v66 = (char *)sub_227B8B8B4(v11, v65);
                unint64_t v61 = *(char **)(a1 + 32);
                unint64_t v57 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v66 = 0;
              }
              unint64_t v73 = &v66[8 * v62];
              *(void *)unint64_t v73 = 0;
              unint64_t v58 = v73 + 8;
              while (v57 != v61)
              {
                uint64_t v74 = *((void *)v57 - 1);
                v57 -= 8;
                *((void *)v73 - 1) = v74;
                v73 -= 8;
              }
              *(void *)(a1 + 32) = v73;
              *(void *)(a1 + 40) = v58;
              *(void *)(a1 + 48) = &v66[8 * v65];
              if (v61) {
                operator delete(v61);
              }
            }
            else
            {
              *(void *)unint64_t v57 = 0;
              unint64_t v58 = v57 + 8;
            }
            *(void *)(a1 + 40) = v58;
            goto LABEL_118;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v26 = *((void *)this + 1);
          unint64_t v27 = *((void *)this + 2);
          while (v26 < v27 && !*((unsigned char *)this + 24))
          {
            char v29 = *(char **)(a1 + 40);
            unint64_t v28 = *(void *)(a1 + 48);
            if ((unint64_t)v29 >= v28)
            {
              uint64_t v31 = (char *)*v10;
              uint64_t v32 = (v29 - (unsigned char *)*v10) >> 3;
              unint64_t v33 = v32 + 1;
              if ((unint64_t)(v32 + 1) >> 61) {
                goto LABEL_131;
              }
              uint64_t v34 = v28 - (void)v31;
              if (v34 >> 2 > v33) {
                unint64_t v33 = v34 >> 2;
              }
              if ((unint64_t)v34 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v35 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v35 = v33;
              }
              if (v35)
              {
                unint64_t v36 = (char *)sub_227B8B8B4(v11, v35);
                uint64_t v31 = *(char **)(a1 + 32);
                char v29 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v36 = 0;
              }
              unint64_t v37 = &v36[8 * v32];
              *(void *)unint64_t v37 = 0;
              unsigned int v30 = v37 + 8;
              while (v29 != v31)
              {
                uint64_t v38 = *((void *)v29 - 1);
                v29 -= 8;
                *((void *)v37 - 1) = v38;
                v37 -= 8;
              }
              *(void *)(a1 + 32) = v37;
              *(void *)(a1 + 40) = v30;
              *(void *)(a1 + 48) = &v36[8 * v35];
              if (v31) {
                operator delete(v31);
              }
            }
            else
            {
              *(void *)char v29 = 0;
              unsigned int v30 = v29 + 8;
            }
            *(void *)(a1 + 40) = v30;
            unint64_t v39 = *((void *)this + 1);
            if (v39 > 0xFFFFFFFFFFFFFFF7 || v39 + 8 > *((void *)this + 2)) {
              goto LABEL_86;
            }
            *(v30 - 1) = *(void *)(*(void *)this + v39);
            unint64_t v27 = *((void *)this + 2);
            unint64_t v26 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v26;
          }
          goto LABEL_87;
        case 3u:
          if (v24 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v40 = *((void *)this + 1);
            unint64_t v41 = *((void *)this + 2);
            while (v40 < v41 && !*((unsigned char *)this + 24))
            {
              unint64_t v43 = *(char **)(a1 + 16);
              unint64_t v42 = *(void *)(a1 + 24);
              if ((unint64_t)v43 >= v42)
              {
                unint64_t v45 = (char *)*v8;
                uint64_t v46 = (v43 - (unsigned char *)*v8) >> 3;
                unint64_t v47 = v46 + 1;
                if ((unint64_t)(v46 + 1) >> 61) {
                  goto LABEL_132;
                }
                uint64_t v48 = v42 - (void)v45;
                if (v48 >> 2 > v47) {
                  unint64_t v47 = v48 >> 2;
                }
                if ((unint64_t)v48 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v49 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v49 = v47;
                }
                if (v49)
                {
                  unint64_t v50 = (char *)sub_227B8B8B4(v9, v49);
                  unint64_t v45 = *(char **)(a1 + 8);
                  unint64_t v43 = *(char **)(a1 + 16);
                }
                else
                {
                  unint64_t v50 = 0;
                }
                unint64_t v51 = &v50[8 * v46];
                *(void *)unint64_t v51 = 0;
                unint64_t v44 = v51 + 8;
                while (v43 != v45)
                {
                  uint64_t v52 = *((void *)v43 - 1);
                  v43 -= 8;
                  *((void *)v51 - 1) = v52;
                  v51 -= 8;
                }
                *(void *)(a1 + 8) = v51;
                *(void *)(a1 + 16) = v44;
                *(void *)(a1 + 24) = &v50[8 * v49];
                if (v45) {
                  operator delete(v45);
                }
              }
              else
              {
                *(void *)unint64_t v43 = 0;
                unint64_t v44 = v43 + 8;
              }
              *(void *)(a1 + 16) = v44;
              unint64_t v53 = *((void *)this + 1);
              if (v53 > 0xFFFFFFFFFFFFFFF7 || v53 + 8 > *((void *)this + 2))
              {
LABEL_86:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v44 - 1) = *(void *)(*(void *)this + v53);
              unint64_t v41 = *((void *)this + 2);
              unint64_t v40 = *((void *)this + 1) + 8;
              *((void *)this + 1) = v40;
            }
LABEL_87:
            PB::Reader::recallMark();
          }
          else
          {
            uint64_t v60 = *(char **)(a1 + 16);
            unint64_t v59 = *(void *)(a1 + 24);
            if ((unint64_t)v60 >= v59)
            {
              uint64_t v67 = (char *)*v8;
              uint64_t v68 = (v60 - (unsigned char *)*v8) >> 3;
              unint64_t v69 = v68 + 1;
              if ((unint64_t)(v68 + 1) >> 61) {
LABEL_132:
              }
                sub_227B8B89C();
              uint64_t v70 = v59 - (void)v67;
              if (v70 >> 2 > v69) {
                unint64_t v69 = v70 >> 2;
              }
              if ((unint64_t)v70 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v71 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v71 = v69;
              }
              if (v71)
              {
                uint64_t v72 = (char *)sub_227B8B8B4(v9, v71);
                uint64_t v67 = *(char **)(a1 + 8);
                uint64_t v60 = *(char **)(a1 + 16);
              }
              else
              {
                uint64_t v72 = 0;
              }
              int v75 = &v72[8 * v68];
              *(void *)int v75 = 0;
              unint64_t v58 = v75 + 8;
              while (v60 != v67)
              {
                uint64_t v76 = *((void *)v60 - 1);
                v60 -= 8;
                *((void *)v75 - 1) = v76;
                v75 -= 8;
              }
              *(void *)(a1 + 8) = v75;
              *(void *)(a1 + 16) = v58;
              *(void *)(a1 + 24) = &v72[8 * v71];
              if (v67) {
                operator delete(v67);
              }
            }
            else
            {
              *(void *)uint64_t v60 = 0;
              unint64_t v58 = v60 + 8;
            }
            *(void *)(a1 + 16) = v58;
LABEL_118:
            unint64_t v77 = *((void *)this + 1);
            if (v77 <= 0xFFFFFFFFFFFFFFF7 && v77 + 8 <= *((void *)this + 2))
            {
              *(v58 - 1) = *(void *)(*(void *)this + v77);
LABEL_122:
              *((void *)this + 1) += 8;
            }
            else
            {
LABEL_120:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_123:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || *((unsigned char *)this + 24)) {
            return v4 == 0;
          }
          break;
        case 4u:
          *(unsigned char *)(a1 + 80) |= 2u;
          unint64_t v54 = *((void *)this + 1);
          if (v54 > 0xFFFFFFFFFFFFFFF7 || v54 + 8 > *((void *)this + 2)) {
            goto LABEL_120;
          }
          *(void *)(a1 + 64) = *(void *)(*(void *)this + v54);
          goto LABEL_122;
        case 5u:
          *(unsigned char *)(a1 + 80) |= 1u;
          unint64_t v55 = *((void *)this + 1);
          if (v55 > 0xFFFFFFFFFFFFFFF7 || v55 + 8 > *((void *)this + 2)) {
            goto LABEL_120;
          }
          *(void *)(a1 + 56) = *(void *)(*(void *)this + v55);
          goto LABEL_122;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_123;
      }
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v15 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v21 = v2 + 1;
      char v22 = *(unsigned char *)(v12 + v2);
      *((void *)this + 1) = v21;
      v15 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0) {
        goto LABEL_21;
      }
      v19 += 7;
      unint64_t v2 = v21;
      if (v20++ >= 9)
      {
LABEL_20:
        unint64_t v15 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B43450(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  if ((*(unsigned char *)(result + 80) & 4) != 0) {
    double result = PB::Writer::write(this, *(double *)(result + 72));
  }
  int v4 = *(double **)(v3 + 32);
  uint64_t v5 = *(double **)(v3 + 40);
  while (v4 != v5)
  {
    double v6 = *v4++;
    double result = PB::Writer::write(this, v6);
  }
  double v7 = *(double **)(v3 + 8);
  uint64_t v8 = *(double **)(v3 + 16);
  while (v7 != v8)
  {
    double v9 = *v7++;
    double result = PB::Writer::write(this, v9);
  }
  char v10 = *(unsigned char *)(v3 + 80);
  if ((v10 & 2) != 0)
  {
    double result = PB::Writer::write(this, *(double *)(v3 + 64));
    char v10 = *(unsigned char *)(v3 + 80);
  }
  if (v10)
  {
    double v11 = *(double *)(v3 + 56);
    return PB::Writer::write(this, v11);
  }
  return result;
}

void *sub_227B43520(void *result)
{
  *double result = &unk_26DC204D0;
  result[1] = 0;
  return result;
}

void sub_227B43544(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B4357C(uint64_t result, uint64_t a2)
{
  *(void *)double result = &unk_26DC204D0;
  *(void *)(result + 8) = 0;
  if (*(unsigned char *)(a2 + 12))
  {
    int v2 = *(_DWORD *)(a2 + 8);
    *(unsigned char *)(result + 12) = 1;
    *(_DWORD *)(result + 8) = v2;
  }
  return result;
}

uint64_t sub_227B435B4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 12)) {
    PB::TextFormatter::format(this, "trackingBehavior");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B43614(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 12) |= 1u;
        unint64_t v20 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
        uint64_t v21 = *(void *)this;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v3)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v24 = 0;
          if (v3 <= v20) {
            unint64_t v2 = *((void *)this + 1);
          }
          else {
            unint64_t v2 = *((void *)this + 2);
          }
          while (1)
          {
            if (v2 == v20)
            {
              LODWORD(v24) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_43;
            }
            unint64_t v29 = v20++;
            char v30 = *(unsigned char *)(v21 + v29);
            *((void *)this + 1) = v20;
            v24 |= (unint64_t)(v30 & 0x7F) << v27;
            if ((v30 & 0x80) == 0) {
              break;
            }
            v27 += 7;
            BOOL v14 = v28++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              goto LABEL_42;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v24) = 0;
          }
LABEL_42:
          unint64_t v2 = v29 + 1;
        }
        else
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          while (1)
          {
            unint64_t v2 = v20 + 1;
            *((void *)this + 1) = v20 + 1;
            char v25 = *(unsigned char *)(v21 + v20);
            v24 |= (unint64_t)(v25 & 0x7F) << v22;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v22 += 7;
            unint64_t v20 = v2;
            BOOL v14 = v23++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              break;
            }
          }
        }
LABEL_43:
        *(_DWORD *)(a1 + 8) = v24;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B4384C(uint64_t result, PB::Writer *this)
{
  if (*(unsigned char *)(result + 12)) {
    return PB::Writer::writeVarInt(this);
  }
  return result;
}

void *sub_227B4386C(void *result)
{
  *uint64_t result = &unk_26DC20508;
  result[1] = 0;
  return result;
}

void sub_227B43890(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B438C8(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC20508;
  *(void *)(result + 8) = 0;
  if (*(unsigned char *)(a2 + 12))
  {
    int v2 = *(_DWORD *)(a2 + 8);
    *(unsigned char *)(result + 12) = 1;
    *(_DWORD *)(result + 8) = v2;
  }
  return result;
}

uint64_t sub_227B43900(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 12)) {
    PB::TextFormatter::format(this, "clientMode");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B43960(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 12) |= 1u;
        unint64_t v20 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
        uint64_t v21 = *(void *)this;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v3)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v24 = 0;
          if (v3 <= v20) {
            unint64_t v2 = *((void *)this + 1);
          }
          else {
            unint64_t v2 = *((void *)this + 2);
          }
          while (1)
          {
            if (v2 == v20)
            {
              LODWORD(v24) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_43;
            }
            unint64_t v29 = v20++;
            char v30 = *(unsigned char *)(v21 + v29);
            *((void *)this + 1) = v20;
            v24 |= (unint64_t)(v30 & 0x7F) << v27;
            if ((v30 & 0x80) == 0) {
              break;
            }
            v27 += 7;
            BOOL v14 = v28++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              goto LABEL_42;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v24) = 0;
          }
LABEL_42:
          unint64_t v2 = v29 + 1;
        }
        else
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          while (1)
          {
            unint64_t v2 = v20 + 1;
            *((void *)this + 1) = v20 + 1;
            char v25 = *(unsigned char *)(v21 + v20);
            v24 |= (unint64_t)(v25 & 0x7F) << v22;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v22 += 7;
            unint64_t v20 = v2;
            BOOL v14 = v23++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              break;
            }
          }
        }
LABEL_43:
        *(_DWORD *)(a1 + 8) = v24;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B43B98(uint64_t result, PB::Writer *this)
{
  if (*(unsigned char *)(result + 12)) {
    return PB::Writer::writeVarInt(this);
  }
  return result;
}

uint64_t sub_227B43BB8(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC20540;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void sub_227B43BE0(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227B43C18(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC20540;
  *(_DWORD *)(a1 + 32) = 0;
  char v2 = *(unsigned char *)(a2 + 32);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 32) = 1;
    *(void *)(a1 + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 32) & 4) != 0)
  {
LABEL_5:
    double result = *(double *)(a2 + 24);
    v3 |= 4u;
    *(unsigned char *)(a1 + 32) = v3;
    *(double *)(a1 + 24) = result;
    char v2 = *(unsigned char *)(a2 + 32);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    double result = *(double *)(a2 + 16);
    *(unsigned char *)(a1 + 32) = v3 | 2;
    *(double *)(a1 + 16) = result;
  }
  return result;
}

uint64_t sub_227B43C98(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 32);
  if (v5)
  {
    PB::TextFormatter::format(this, "bpm");
    char v5 = *(unsigned char *)(a1 + 32);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((*(unsigned char *)(a1 + 32) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "globalMachtime", *(double *)(a1 + 16));
  if ((*(unsigned char *)(a1 + 32) & 4) != 0) {
LABEL_4:
  }
    PB::TextFormatter::format(this, "localMachtime", *(double *)(a1 + 24));
LABEL_5:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B43D3C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  for (int i = *((unsigned __int8 *)this + 24); v2 < v3 && i == 0; int i = *((unsigned __int8 *)this + 24))
  {
    uint64_t v8 = *(void *)this;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      while (v3 != v2)
      {
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)this + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_20;
        }
        v15 += 7;
        unint64_t v2 = v17;
        if (v16++ >= 9)
        {
LABEL_19:
          unint64_t v11 = 0;
          goto LABEL_20;
        }
      }
      int i = 1;
      *((unsigned char *)this + 24) = 1;
      return i == 0;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)this + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_20:
    if ((v11 & 7) == 4)
    {
      int i = 0;
      return i == 0;
    }
    unint64_t v20 = v11 >> 3;
    if ((v11 >> 3) == 3)
    {
      *(unsigned char *)(a1 + 32) |= 2u;
      unint64_t v2 = *((void *)this + 1);
      if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
      {
        *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
LABEL_47:
        unint64_t v2 = *((void *)this + 1) + 8;
        *((void *)this + 1) = v2;
        goto LABEL_53;
      }
    }
    else
    {
      if (v20 != 2)
      {
        if (v20 == 1)
        {
          *(unsigned char *)(a1 + 32) |= 1u;
          unint64_t v21 = *((void *)this + 1);
          unint64_t v2 = *((void *)this + 2);
          uint64_t v22 = *(void *)this;
          if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
          {
            char v28 = 0;
            unsigned int v29 = 0;
            uint64_t v25 = 0;
            if (v2 <= v21) {
              unint64_t v2 = *((void *)this + 1);
            }
            while (1)
            {
              if (v2 == v21)
              {
                uint64_t v25 = 0;
                *((unsigned char *)this + 24) = 1;
                goto LABEL_52;
              }
              unint64_t v30 = v21++;
              char v31 = *(unsigned char *)(v22 + v30);
              *((void *)this + 1) = v21;
              v25 |= (unint64_t)(v31 & 0x7F) << v28;
              if ((v31 & 0x80) == 0) {
                break;
              }
              v28 += 7;
              BOOL v14 = v29++ > 8;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_51;
              }
            }
            if (*((unsigned char *)this + 24)) {
              uint64_t v25 = 0;
            }
LABEL_51:
            unint64_t v2 = v30 + 1;
          }
          else
          {
            char v23 = 0;
            unsigned int v24 = 0;
            uint64_t v25 = 0;
            while (1)
            {
              unint64_t v2 = v21 + 1;
              *((void *)this + 1) = v21 + 1;
              char v26 = *(unsigned char *)(v22 + v21);
              v25 |= (unint64_t)(v26 & 0x7F) << v23;
              if ((v26 & 0x80) == 0) {
                break;
              }
              v23 += 7;
              unint64_t v21 = v2;
              BOOL v14 = v24++ > 8;
              if (v14)
              {
                uint64_t v25 = 0;
                break;
              }
            }
          }
LABEL_52:
          *(void *)(a1 + 8) = v25;
        }
        else
        {
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
        }
        goto LABEL_53;
      }
      *(unsigned char *)(a1 + 32) |= 4u;
      unint64_t v2 = *((void *)this + 1);
      if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
      {
        *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
        goto LABEL_47;
      }
    }
    *((unsigned char *)this + 24) = 1;
LABEL_53:
    unint64_t v3 = *((void *)this + 2);
  }
  return i == 0;
}

uint64_t sub_227B4400C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if ((v4 & 1) == 0)
  {
    if ((*(unsigned char *)(result + 32) & 4) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24));
    if ((*(unsigned char *)(v3 + 32) & 2) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 4) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_7:
  double v5 = *(double *)(v3 + 16);

  return PB::Writer::write(this, v5);
}

void *sub_227B44098(void *result)
{
  *uint64_t result = &unk_26DC20578;
  result[1] = 0;
  return result;
}

void sub_227B440B8(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC20578;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227B44138(PB::Base *a1)
{
  sub_227B440B8(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227B44170(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC20578;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227B44218(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B44294(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B44490(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

uint64_t sub_227B444AC(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC205B0;
  *(_DWORD *)(result + 128) = 0;
  return result;
}

void sub_227B444D4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227B4450C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC205B0;
  *(_DWORD *)(a1 + 128) = 0;
  int v2 = *(_DWORD *)(a2 + 128);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    int v3 = 1;
    *(_DWORD *)(a1 + 128) = 1;
    *(void *)(a1 + 8) = v4;
    int v2 = *(_DWORD *)(a2 + 128);
    if ((v2 & 0x100000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 0x100000) != 0)
  {
LABEL_5:
    LODWORD(v4) = *(_DWORD *)(a2 + 104);
    v3 |= 0x100000u;
    *(_DWORD *)(a1 + 128) = v3;
    *(_DWORD *)(a1 + 104) = v4;
    int v2 = *(_DWORD *)(a2 + 128);
  }
LABEL_6:
  if ((v2 & 0x200000) != 0)
  {
    LODWORD(v4) = *(_DWORD *)(a2 + 108);
    v3 |= 0x200000u;
    *(_DWORD *)(a1 + 128) = v3;
    *(_DWORD *)(a1 + 108) = v4;
    int v2 = *(_DWORD *)(a2 + 128);
    if ((v2 & 0x400000) == 0)
    {
LABEL_8:
      if ((v2 & 0x80000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_33;
    }
  }
  else if ((v2 & 0x400000) == 0)
  {
    goto LABEL_8;
  }
  LODWORD(v4) = *(_DWORD *)(a2 + 112);
  v3 |= 0x400000u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 112) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x80000) == 0)
  {
LABEL_9:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_34;
  }
LABEL_33:
  LODWORD(v4) = *(_DWORD *)(a2 + 100);
  v3 |= 0x80000u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 100) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x10000) == 0)
  {
LABEL_10:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_35;
  }
LABEL_34:
  LODWORD(v4) = *(_DWORD *)(a2 + 88);
  v3 |= 0x10000u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 88) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x20000) == 0)
  {
LABEL_11:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_36;
  }
LABEL_35:
  LODWORD(v4) = *(_DWORD *)(a2 + 92);
  v3 |= 0x20000u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 92) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x40000) == 0)
  {
LABEL_12:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_37;
  }
LABEL_36:
  LODWORD(v4) = *(_DWORD *)(a2 + 96);
  v3 |= 0x40000u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 96) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x8000) == 0)
  {
LABEL_13:
    if ((v2 & 0x800) == 0) {
      goto LABEL_14;
    }
    goto LABEL_38;
  }
LABEL_37:
  LODWORD(v4) = *(_DWORD *)(a2 + 84);
  v3 |= 0x8000u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 84) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x800) == 0)
  {
LABEL_14:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_39;
  }
LABEL_38:
  LODWORD(v4) = *(_DWORD *)(a2 + 68);
  v3 |= 0x800u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 68) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x1000) == 0)
  {
LABEL_15:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_40;
  }
LABEL_39:
  LODWORD(v4) = *(_DWORD *)(a2 + 72);
  v3 |= 0x1000u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 72) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x2000) == 0)
  {
LABEL_16:
    if ((v2 & 8) == 0) {
      goto LABEL_17;
    }
    goto LABEL_41;
  }
LABEL_40:
  LODWORD(v4) = *(_DWORD *)(a2 + 76);
  v3 |= 0x2000u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 76) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 8) == 0)
  {
LABEL_17:
    if ((v2 & 0x400) == 0) {
      goto LABEL_18;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t v4 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_DWORD *)(a1 + 128) = v3;
  *(void *)(a1 + 32) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x400) == 0)
  {
LABEL_18:
    if ((v2 & 2) == 0) {
      goto LABEL_19;
    }
    goto LABEL_43;
  }
LABEL_42:
  int v5 = *(_DWORD *)(a2 + 64);
  v3 |= 0x400u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 64) = v5;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 2) == 0)
  {
LABEL_19:
    if ((v2 & 0x80) == 0) {
      goto LABEL_20;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t v4 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_DWORD *)(a1 + 128) = v3;
  *(void *)(a1 + 16) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x80) == 0)
  {
LABEL_20:
    if ((v2 & 0x100) == 0) {
      goto LABEL_21;
    }
    goto LABEL_45;
  }
LABEL_44:
  LODWORD(v4) = *(_DWORD *)(a2 + 52);
  v3 |= 0x80u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 52) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x100) == 0)
  {
LABEL_21:
    if ((v2 & 0x200) == 0) {
      goto LABEL_22;
    }
    goto LABEL_46;
  }
LABEL_45:
  LODWORD(v4) = *(_DWORD *)(a2 + 56);
  v3 |= 0x100u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 56) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x200) == 0)
  {
LABEL_22:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_47;
  }
LABEL_46:
  LODWORD(v4) = *(_DWORD *)(a2 + 60);
  v3 |= 0x200u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 60) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x4000) == 0)
  {
LABEL_23:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_48;
  }
LABEL_47:
  LODWORD(v4) = *(_DWORD *)(a2 + 80);
  v3 |= 0x4000u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 80) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x800000) == 0)
  {
LABEL_24:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_49;
  }
LABEL_48:
  LODWORD(v4) = *(_DWORD *)(a2 + 116);
  v3 |= 0x800000u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 116) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_25:
    if ((v2 & 0x2000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_50;
  }
LABEL_49:
  LODWORD(v4) = *(_DWORD *)(a2 + 120);
  v3 |= 0x1000000u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 120) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x2000000) == 0)
  {
LABEL_26:
    if ((v2 & 4) == 0) {
      goto LABEL_27;
    }
    goto LABEL_51;
  }
LABEL_50:
  LODWORD(v4) = *(_DWORD *)(a2 + 124);
  v3 |= 0x2000000u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 124) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 4) == 0)
  {
LABEL_27:
    if ((v2 & 0x10) == 0) {
      goto LABEL_28;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t v4 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(_DWORD *)(a1 + 128) = v3;
  *(void *)(a1 + 24) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x10) == 0)
  {
LABEL_28:
    if ((v2 & 0x20) == 0) {
      goto LABEL_29;
    }
    goto LABEL_53;
  }
LABEL_52:
  LODWORD(v4) = *(_DWORD *)(a2 + 40);
  v3 |= 0x10u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 40) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x20) == 0)
  {
LABEL_29:
    if ((v2 & 0x40) == 0) {
      return *(float *)&v4;
    }
    goto LABEL_54;
  }
LABEL_53:
  LODWORD(v4) = *(_DWORD *)(a2 + 44);
  v3 |= 0x20u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 44) = v4;
  if ((*(_DWORD *)(a2 + 128) & 0x40) == 0) {
    return *(float *)&v4;
  }
LABEL_54:
  LODWORD(v4) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 128) = v3 | 0x40;
  *(_DWORD *)(a1 + 48) = v4;
  return *(float *)&v4;
}

uint64_t sub_227B44810(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x10) != 0)
  {
    PB::TextFormatter::format(this, "accelUnfilteredX", *(float *)(a1 + 40));
    int v5 = *(_DWORD *)(a1 + 128);
    if ((v5 & 0x20) == 0)
    {
LABEL_3:
      if ((v5 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_33;
    }
  }
  else if ((v5 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "accelUnfilteredY", *(float *)(a1 + 44));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x40) == 0)
  {
LABEL_4:
    if ((v5 & 0x80) == 0) {
      goto LABEL_5;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(this, "accelUnfilteredZ", *(float *)(a1 + 48));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x80) == 0)
  {
LABEL_5:
    if ((v5 & 0x100) == 0) {
      goto LABEL_6;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "accelX", *(float *)(a1 + 52));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x100) == 0)
  {
LABEL_6:
    if ((v5 & 0x200) == 0) {
      goto LABEL_7;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "accelY", *(float *)(a1 + 56));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x200) == 0)
  {
LABEL_7:
    if ((v5 & 0x400) == 0) {
      goto LABEL_8;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "accelZ", *(float *)(a1 + 60));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x400) == 0)
  {
LABEL_8:
    if ((v5 & 0x800) == 0) {
      goto LABEL_9;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "flags");
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x800) == 0)
  {
LABEL_9:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "gravityX", *(float *)(a1 + 68));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x1000) == 0)
  {
LABEL_10:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "gravityY", *(float *)(a1 + 72));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x2000) == 0)
  {
LABEL_11:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "gravityZ", *(float *)(a1 + 76));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x4000) == 0)
  {
LABEL_12:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "gyroBiasErrorEstimate", *(float *)(a1 + 80));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x8000) == 0)
  {
LABEL_13:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "quaternionPredictedW", *(float *)(a1 + 84));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x10000) == 0)
  {
LABEL_14:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "quaternionPredictedX", *(float *)(a1 + 88));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x20000) == 0)
  {
LABEL_15:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "quaternionPredictedY", *(float *)(a1 + 92));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x40000) == 0)
  {
LABEL_16:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_46;
  }
LABEL_45:
  PB::TextFormatter::format(this, "quaternionPredictedZ", *(float *)(a1 + 96));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x80000) == 0)
  {
LABEL_17:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_47;
  }
LABEL_46:
  PB::TextFormatter::format(this, "quaternionW", *(float *)(a1 + 100));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x100000) == 0)
  {
LABEL_18:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(this, "quaternionX", *(float *)(a1 + 104));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x200000) == 0)
  {
LABEL_19:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(this, "quaternionY", *(float *)(a1 + 108));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x400000) == 0)
  {
LABEL_20:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_50;
  }
LABEL_49:
  PB::TextFormatter::format(this, "quaternionZ", *(float *)(a1 + 112));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x800000) == 0)
  {
LABEL_21:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_51;
  }
LABEL_50:
  PB::TextFormatter::format(this, "rotationRateX", *(float *)(a1 + 116));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_22:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_52;
  }
LABEL_51:
  PB::TextFormatter::format(this, "rotationRateY", *(float *)(a1 + 120));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_23:
    if ((v5 & 1) == 0) {
      goto LABEL_24;
    }
    goto LABEL_53;
  }
LABEL_52:
  PB::TextFormatter::format(this, "rotationRateZ", *(float *)(a1 + 124));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 1) == 0)
  {
LABEL_24:
    if ((v5 & 2) == 0) {
      goto LABEL_25;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 2) == 0)
  {
LABEL_25:
    if ((v5 & 4) == 0) {
      goto LABEL_26;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(this, "timestampAccel", *(double *)(a1 + 16));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 4) == 0)
  {
LABEL_26:
    if ((v5 & 8) == 0) {
      goto LABEL_28;
    }
    goto LABEL_27;
  }
LABEL_55:
  PB::TextFormatter::format(this, "timestampAccelUnfiltered", *(double *)(a1 + 24));
  if ((*(_DWORD *)(a1 + 128) & 8) != 0) {
LABEL_27:
  }
    PB::TextFormatter::format(this, "timestampPrediction", *(double *)(a1 + 32));
LABEL_28:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B44B94(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_DWORD *)(a1 + 128) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_97;
            case 2u:
              *(_DWORD *)(a1 + 128) |= 0x100000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 104) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 3u:
              *(_DWORD *)(a1 + 128) |= 0x200000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 108) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 4u:
              *(_DWORD *)(a1 + 128) |= 0x400000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 112) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 5u:
              *(_DWORD *)(a1 + 128) |= 0x80000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 6u:
              *(_DWORD *)(a1 + 128) |= 0x10000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 7u:
              *(_DWORD *)(a1 + 128) |= 0x20000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 8u:
              *(_DWORD *)(a1 + 128) |= 0x40000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 9u:
              *(_DWORD *)(a1 + 128) |= 0x8000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 0xAu:
              *(_DWORD *)(a1 + 128) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 68) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 0xBu:
              *(_DWORD *)(a1 + 128) |= 0x1000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 0xCu:
              *(_DWORD *)(a1 + 128) |= 0x2000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 0xDu:
              *(_DWORD *)(a1 + 128) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
              goto LABEL_97;
            case 0xEu:
              *(_DWORD *)(a1 + 128) |= 0x400u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v27 = 0;
                unsigned int v28 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_126;
                  }
                  unint64_t v29 = v21++;
                  char v30 = *(unsigned char *)(v22 + v29);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v30 & 0x7F) << v27;
                  if ((v30 & 0x80) == 0) {
                    break;
                  }
                  v27 += 7;
                  BOOL v14 = v28++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_125:
                    unint64_t v2 = v29 + 1;
                    goto LABEL_126;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_125;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_126;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_126:
              *(_DWORD *)(a1 + 64) = v25;
LABEL_117:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 0xFu:
              *(_DWORD *)(a1 + 128) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_97;
            case 0x10u:
              *(_DWORD *)(a1 + 128) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 0x11u:
              *(_DWORD *)(a1 + 128) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 0x12u:
              *(_DWORD *)(a1 + 128) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 0x13u:
              *(_DWORD *)(a1 + 128) |= 0x4000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 0x14u:
              *(_DWORD *)(a1 + 128) |= 0x800000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 116) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 0x15u:
              *(_DWORD *)(a1 + 128) |= 0x1000000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 120) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 0x16u:
              *(_DWORD *)(a1 + 128) |= 0x2000000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 124) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 0x17u:
              *(_DWORD *)(a1 + 128) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
LABEL_97:
              unint64_t v2 = *((void *)this + 1) + 8;
              goto LABEL_116;
            case 0x18u:
              *(_DWORD *)(a1 + 128) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 0x19u:
              *(_DWORD *)(a1 + 128) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 0x1Au:
              *(_DWORD *)(a1 + 128) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
LABEL_115:
                unint64_t v2 = *((void *)this + 1) + 4;
LABEL_116:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_106:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_117;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_117;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B453EC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 128);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    int v4 = *(_DWORD *)(v3 + 128);
    if ((v4 & 0x100000) == 0)
    {
LABEL_3:
      if ((v4 & 0x200000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_30;
    }
  }
  else if ((v4 & 0x100000) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 104));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x200000) == 0)
  {
LABEL_4:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 108));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x400000) == 0)
  {
LABEL_5:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 112));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x80000) == 0)
  {
LABEL_6:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 100));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x10000) == 0)
  {
LABEL_7:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 88));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x20000) == 0)
  {
LABEL_8:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 92));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x40000) == 0)
  {
LABEL_9:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 96));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x8000) == 0)
  {
LABEL_10:
    if ((v4 & 0x800) == 0) {
      goto LABEL_11;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x800) == 0)
  {
LABEL_11:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 68));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x1000) == 0)
  {
LABEL_12:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x2000) == 0)
  {
LABEL_13:
    if ((v4 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 8) == 0)
  {
LABEL_14:
    if ((v4 & 0x400) == 0) {
      goto LABEL_15;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x400) == 0)
  {
LABEL_15:
    if ((v4 & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 2) == 0)
  {
LABEL_16:
    if ((v4 & 0x80) == 0) {
      goto LABEL_17;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x80) == 0)
  {
LABEL_17:
    if ((v4 & 0x100) == 0) {
      goto LABEL_18;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x100) == 0)
  {
LABEL_18:
    if ((v4 & 0x200) == 0) {
      goto LABEL_19;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x200) == 0)
  {
LABEL_19:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 60));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x4000) == 0)
  {
LABEL_20:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x800000) == 0)
  {
LABEL_21:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 116));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_22:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 120));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_23:
    if ((v4 & 4) == 0) {
      goto LABEL_24;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 124));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 4) == 0)
  {
LABEL_24:
    if ((v4 & 0x10) == 0) {
      goto LABEL_25;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x10) == 0)
  {
LABEL_25:
    if ((v4 & 0x20) == 0) {
      goto LABEL_26;
    }
LABEL_52:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44));
    if ((*(_DWORD *)(v3 + 128) & 0x40) == 0) {
      return result;
    }
    goto LABEL_53;
  }
LABEL_51:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x20) != 0) {
    goto LABEL_52;
  }
LABEL_26:
  if ((v4 & 0x40) == 0) {
    return result;
  }
LABEL_53:
  float v5 = *(float *)(v3 + 48);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227B456FC(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC205E8;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 36) = 0;
  return result;
}

void sub_227B45724(void **a1)
{
  *a1 = &unk_26DC205E8;
  unint64_t v2 = a1 + 1;
  sub_227B8B5D0(&v2);
  PB::Base::~Base((PB::Base *)a1);
}

uint64_t sub_227B45780(void **a1)
{
  *a1 = &unk_26DC205E8;
  uint64_t v3 = a1 + 1;
  sub_227B8B5D0(&v3);
  PB::Base::~Base((PB::Base *)a1);
  return MEMORY[0x22A6850E0]();
}

uint64_t sub_227B457F0(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC205E8;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 36) = 0;
  if (*(void *)(a2 + 8) != *(void *)(a2 + 16)) {
    sub_227B45894();
  }
  if (*(unsigned char *)(a2 + 36))
  {
    int v2 = *(_DWORD *)(a2 + 32);
    *(unsigned char *)(result + 36) |= 1u;
    *(_DWORD *)(result + 32) = v2;
  }
  return result;
}

void sub_227B45894()
{
}

void sub_227B45998(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_227B8BDA0((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_227B459E0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 36)) {
    PB::TextFormatter::format(this, "lastSampleId");
  }
  float v5 = *(uint64_t **)(a1 + 8);
  double v6 = *(uint64_t **)(a1 + 16);
  while (v5 != v6)
  {
    uint64_t v7 = *v5++;
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v7 + 32))(v7, this, "slowOptical");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B45A94(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 36) |= 1u;
        unint64_t v20 = *((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        uint64_t v22 = *(void *)this;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v21)
        {
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v25 = 0;
          if (v21 <= v20) {
            unint64_t v21 = *((void *)this + 1);
          }
          while (1)
          {
            if (v21 == v20)
            {
              LODWORD(v25) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_43;
            }
            unint64_t v31 = v20 + 1;
            char v32 = *(unsigned char *)(v22 + v20);
            *((void *)this + 1) = v31;
            v25 |= (unint64_t)(v32 & 0x7F) << v29;
            if ((v32 & 0x80) == 0) {
              break;
            }
            v29 += 7;
            unint64_t v20 = v31;
            BOOL v14 = v30++ > 8;
            if (v14)
            {
LABEL_39:
              LODWORD(v25) = 0;
              goto LABEL_43;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v25) = 0;
          }
        }
        else
        {
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          while (1)
          {
            unint64_t v26 = v20 + 1;
            *((void *)this + 1) = v20 + 1;
            char v27 = *(unsigned char *)(v22 + v20);
            v25 |= (unint64_t)(v27 & 0x7F) << v23;
            if ((v27 & 0x80) == 0) {
              break;
            }
            v23 += 7;
            unint64_t v20 = v26;
            BOOL v14 = v24++ > 8;
            if (v14) {
              goto LABEL_39;
            }
          }
        }
LABEL_43:
        *(_DWORD *)(a1 + 32) = v25;
      }
      else
      {
        if ((v11 >> 3) == 1) {
          sub_227B45D48();
        }
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

void sub_227B45D48()
{
}

void sub_227B45E44(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_227B8BDA0((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_227B45E88(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(const PB::Base ***)(result + 8);
  float v5 = *(const PB::Base ***)(result + 16);
  while (v4 != v5)
  {
    double v6 = *v4++;
    uint64_t result = PB::Writer::writeSubmessage(this, v6);
  }
  if (*(unsigned char *)(v3 + 36))
  {
    return PB::Writer::writeVarInt(this);
  }
  return result;
}

double sub_227B45F08(uint64_t a1)
{
  *(void *)a1 = &unk_26DC20620;
  *(_DWORD *)(a1 + 52) = 0;
  *(_DWORD *)(a1 + 60) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = 0;
  return result;
}

void sub_227B45F40(uint64_t a1)
{
  *(void *)a1 = &unk_26DC20620;
  int v4 = (void **)(a1 + 24);
  sub_227B8B5D0(&v4);
  uint64_t v2 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  PB::Base::~Base((PB::Base *)a1);
}

void sub_227B46000(uint64_t a1)
{
  sub_227B45F40(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B46038(uint64_t result, uint64_t a2)
{
  *(void *)double result = &unk_26DC20620;
  *(_OWORD *)(result + 8) = 0u;
  *(_OWORD *)(result + 24) = 0u;
  *(_DWORD *)(result + 52) = 0;
  *(_DWORD *)(result + 60) = 0;
  *(void *)(result + 40) = 0;
  if (*(unsigned char *)(a2 + 60))
  {
    int v3 = *(_DWORD *)(a2 + 48);
    *(unsigned char *)(result + 60) = 1;
    *(_DWORD *)(result + 48) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 60) & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 60) & 2) != 0)
  {
LABEL_5:
    int v4 = *(_DWORD *)(a2 + 52);
    *(unsigned char *)(result + 60) = v2;
    *(_DWORD *)(result + 52) = v4;
  }
LABEL_6:
  if (*(void *)(a2 + 24) != *(void *)(a2 + 32)) {
    sub_227B45894();
  }
  if (*(void *)(a2 + 16)) {
    operator new();
  }
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  char v5 = *(unsigned char *)(a2 + 60);
  if ((v5 & 4) != 0)
  {
    char v6 = *(unsigned char *)(a2 + 56);
    *(unsigned char *)(result + 60) |= 4u;
    *(unsigned char *)(result + 56) = v6;
    char v5 = *(unsigned char *)(a2 + 60);
  }
  if ((v5 & 8) != 0)
  {
    char v7 = *(unsigned char *)(a2 + 57);
    *(unsigned char *)(result + 60) |= 8u;
    *(unsigned char *)(result + 57) = v7;
  }
  return result;
}

uint64_t sub_227B46204(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 60);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "conchaMinAccepted");
    char v5 = *(unsigned char *)(a1 + 60);
  }
  if (v5) {
    PB::TextFormatter::format(this, "location");
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v6 + 32))(v6, this, "newOpenLid");
  }
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v7 + 32))(v7, this, "oldOpenLid");
  }
  uint64_t v8 = *(uint64_t **)(a1 + 24);
  char v9 = *(uint64_t **)(a1 + 32);
  while (v8 != v9)
  {
    uint64_t v10 = *v8++;
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v10 + 32))(v10, this, "optical");
  }
  char v11 = *(unsigned char *)(a1 + 60);
  if ((v11 & 2) != 0)
  {
    PB::TextFormatter::format(this, "state");
    char v11 = *(unsigned char *)(a1 + 60);
  }
  if ((v11 & 8) != 0) {
    PB::TextFormatter::format(this, "tragusMinAccepted");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B46384(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 60) |= 1u;
          unint64_t v20 = *((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
          uint64_t v22 = *(void *)this;
          if (v20 <= 0xFFFFFFFFFFFFFFF5 && v20 + 10 <= v21)
          {
            char v23 = 0;
            unsigned int v24 = 0;
            uint64_t v25 = 0;
            do
            {
              unint64_t v26 = v20 + 1;
              *((void *)this + 1) = v20 + 1;
              char v27 = *(unsigned char *)(v22 + v20);
              v25 |= (unint64_t)(v27 & 0x7F) << v23;
              if ((v27 & 0x80) == 0) {
                goto LABEL_66;
              }
              v23 += 7;
              unint64_t v20 = v26;
              BOOL v14 = v24++ > 8;
            }
            while (!v14);
LABEL_51:
            LODWORD(v25) = 0;
            goto LABEL_66;
          }
          char v45 = 0;
          unsigned int v46 = 0;
          uint64_t v25 = 0;
          if (v21 <= v20) {
            unint64_t v21 = *((void *)this + 1);
          }
          while (2)
          {
            if (v21 == v20)
            {
              LODWORD(v25) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v47 = v20 + 1;
              char v48 = *(unsigned char *)(v22 + v20);
              *((void *)this + 1) = v47;
              v25 |= (unint64_t)(v48 & 0x7F) << v45;
              if (v48 < 0)
              {
                v45 += 7;
                unint64_t v20 = v47;
                BOOL v14 = v46++ > 8;
                if (v14) {
                  goto LABEL_51;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v25) = 0;
              }
            }
            break;
          }
LABEL_66:
          *(_DWORD *)(a1 + 48) = v25;
          goto LABEL_71;
        case 2u:
          *(unsigned char *)(a1 + 60) |= 2u;
          unint64_t v29 = *((void *)this + 1);
          unint64_t v30 = *((void *)this + 2);
          uint64_t v31 = *(void *)this;
          if (v29 <= 0xFFFFFFFFFFFFFFF5 && v29 + 10 <= v30)
          {
            char v32 = 0;
            unsigned int v33 = 0;
            uint64_t v34 = 0;
            do
            {
              unint64_t v35 = v29 + 1;
              *((void *)this + 1) = v29 + 1;
              char v36 = *(unsigned char *)(v31 + v29);
              v34 |= (unint64_t)(v36 & 0x7F) << v32;
              if ((v36 & 0x80) == 0) {
                goto LABEL_70;
              }
              v32 += 7;
              unint64_t v29 = v35;
              BOOL v14 = v33++ > 8;
            }
            while (!v14);
LABEL_58:
            LODWORD(v34) = 0;
            goto LABEL_70;
          }
          char v49 = 0;
          unsigned int v50 = 0;
          uint64_t v34 = 0;
          if (v30 <= v29) {
            unint64_t v30 = *((void *)this + 1);
          }
          break;
        case 3u:
          sub_227B45D48();
        case 4u:
          operator new();
        case 5u:
          operator new();
        case 6u:
          *(unsigned char *)(a1 + 60) |= 4u;
          unint64_t v37 = *((void *)this + 1);
          if (v37 >= *((void *)this + 2))
          {
            BOOL v40 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v38 = v37 + 1;
            int v39 = *(unsigned __int8 *)(*(void *)this + v37);
            *((void *)this + 1) = v38;
            BOOL v40 = v39 != 0;
          }
          *(unsigned char *)(a1 + 56) = v40;
          goto LABEL_71;
        case 7u:
          *(unsigned char *)(a1 + 60) |= 8u;
          unint64_t v41 = *((void *)this + 1);
          if (v41 >= *((void *)this + 2))
          {
            BOOL v44 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v42 = v41 + 1;
            int v43 = *(unsigned __int8 *)(*(void *)this + v41);
            *((void *)this + 1) = v42;
            BOOL v44 = v43 != 0;
          }
          *(unsigned char *)(a1 + 57) = v44;
          goto LABEL_71;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          goto LABEL_71;
      }
      while (1)
      {
        if (v30 == v29)
        {
          LODWORD(v34) = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_70;
        }
        unint64_t v51 = v29 + 1;
        char v52 = *(unsigned char *)(v31 + v29);
        *((void *)this + 1) = v51;
        v34 |= (unint64_t)(v52 & 0x7F) << v49;
        if ((v52 & 0x80) == 0) {
          break;
        }
        v49 += 7;
        unint64_t v29 = v51;
        BOOL v14 = v50++ > 8;
        if (v14) {
          goto LABEL_58;
        }
      }
      if (*((unsigned char *)this + 24)) {
        LODWORD(v34) = 0;
      }
LABEL_70:
      *(_DWORD *)(a1 + 52) = v34;
LABEL_71:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B4688C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 60);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 60);
  }
  if ((v4 & 2) != 0) {
    uint64_t result = PB::Writer::writeVarInt(this);
  }
  char v5 = *(const PB::Base ***)(v3 + 24);
  uint64_t v6 = *(const PB::Base ***)(v3 + 32);
  while (v5 != v6)
  {
    uint64_t v7 = *v5++;
    uint64_t result = PB::Writer::writeSubmessage(this, v7);
  }
  uint64_t v8 = *(const PB::Base **)(v3 + 16);
  if (v8) {
    uint64_t result = PB::Writer::writeSubmessage(this, v8);
  }
  char v9 = *(const PB::Base **)(v3 + 8);
  if (v9) {
    uint64_t result = PB::Writer::writeSubmessage(this, v9);
  }
  char v10 = *(unsigned char *)(v3 + 60);
  if ((v10 & 4) != 0)
  {
    uint64_t result = PB::Writer::write(this);
    char v10 = *(unsigned char *)(v3 + 60);
  }
  if ((v10 & 8) != 0)
  {
    return PB::Writer::write(this);
  }
  return result;
}

uint64_t sub_227B4697C(uint64_t result)
{
  *(_DWORD *)(result + 56) = 0;
  *(void *)uint64_t result = &unk_26DC20658;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  return result;
}

void sub_227B469A4(PB::Base *this)
{
  *(void *)this = &unk_26DC20658;
  uint64_t v2 = *((void *)this + 3);
  *((void *)this + 3) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *((void *)this + 2);
  *((void *)this + 2) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  uint64_t v4 = *((void *)this + 1);
  *((void *)this + 1) = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }

  PB::Base::~Base(this);
}

void sub_227B46A88(PB::Base *a1)
{
  sub_227B469A4(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B46AC0(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC20658;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 56) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  if (*(unsigned char *)(a2 + 56))
  {
    uint64_t v3 = *(void *)(a2 + 32);
    *(unsigned char *)(result + 56) = 1;
    *(void *)(result + 32) = v3;
    char v2 = 9;
    if ((*(unsigned char *)(a2 + 56) & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v2 = 8;
  if ((*(unsigned char *)(a2 + 56) & 8) != 0)
  {
LABEL_5:
    int v4 = *(_DWORD *)(a2 + 48);
    *(unsigned char *)(result + 56) = v2;
    *(_DWORD *)(result + 48) = v4;
  }
LABEL_6:
  if (*(void *)(a2 + 24)) {
    operator new();
  }
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  if (*(void *)(a2 + 16)) {
    operator new();
  }
  char v5 = *(unsigned char *)(a2 + 56);
  if ((v5 & 2) != 0)
  {
    int v7 = *(_DWORD *)(a2 + 40);
    *(unsigned char *)(result + 56) |= 2u;
    *(_DWORD *)(result + 40) = v7;
    char v5 = *(unsigned char *)(a2 + 56);
    if ((v5 & 0x10) == 0)
    {
LABEL_14:
      if ((v5 & 4) == 0) {
        return result;
      }
      goto LABEL_15;
    }
  }
  else if ((*(unsigned char *)(a2 + 56) & 0x10) == 0)
  {
    goto LABEL_14;
  }
  int v8 = *(_DWORD *)(a2 + 52);
  *(unsigned char *)(result + 56) |= 0x10u;
  *(_DWORD *)(result + 52) = v8;
  if ((*(unsigned char *)(a2 + 56) & 4) == 0) {
    return result;
  }
LABEL_15:
  int v6 = *(_DWORD *)(a2 + 44);
  *(unsigned char *)(result + 56) |= 4u;
  *(_DWORD *)(result + 44) = v6;
  return result;
}

uint64_t sub_227B46CD4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "baseline");
  }
  char v6 = *(unsigned char *)(a1 + 56);
  if ((v6 & 2) != 0)
  {
    PB::TextFormatter::format(this, "conchaOpenResponse", *(float *)(a1 + 40));
    char v6 = *(unsigned char *)(a1 + 56);
  }
  if ((v6 & 4) != 0) {
    PB::TextFormatter::format(this, "filter", *(float *)(a1 + 44));
  }
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v7 + 32))(v7, this, "lastBaseline");
  }
  if ((*(unsigned char *)(a1 + 56) & 8) != 0) {
    PB::TextFormatter::format(this, "location");
  }
  uint64_t v8 = *(void *)(a1 + 24);
  if (v8) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v8 + 32))(v8, this, "minimum");
  }
  char v9 = *(unsigned char *)(a1 + 56);
  if ((v9 & 0x10) != 0)
  {
    PB::TextFormatter::format(this, "rho", *(float *)(a1 + 52));
    char v9 = *(unsigned char *)(a1 + 56);
  }
  if (v9) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 32));
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B46E4C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 56) |= 1u;
          unint64_t v20 = *((void *)this + 1);
          if (v20 > 0xFFFFFFFFFFFFFFF7 || v20 + 8 > *((void *)this + 2)) {
            goto LABEL_45;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v20);
          uint64_t v21 = *((void *)this + 1) + 8;
          goto LABEL_55;
        case 2u:
          *(unsigned char *)(a1 + 56) |= 8u;
          unint64_t v23 = *((void *)this + 1);
          unint64_t v24 = *((void *)this + 2);
          uint64_t v25 = *(void *)this;
          if (v23 <= 0xFFFFFFFFFFFFFFF5 && v23 + 10 <= v24)
          {
            char v26 = 0;
            unsigned int v27 = 0;
            uint64_t v28 = 0;
            do
            {
              unint64_t v29 = v23 + 1;
              *((void *)this + 1) = v23 + 1;
              char v30 = *(unsigned char *)(v25 + v23);
              v28 |= (unint64_t)(v30 & 0x7F) << v26;
              if ((v30 & 0x80) == 0) {
                goto LABEL_59;
              }
              v26 += 7;
              unint64_t v23 = v29;
              BOOL v14 = v27++ > 8;
            }
            while (!v14);
LABEL_52:
            LODWORD(v28) = 0;
            goto LABEL_59;
          }
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v28 = 0;
          if (v24 <= v23) {
            unint64_t v24 = *((void *)this + 1);
          }
          break;
        case 3u:
          operator new();
        case 4u:
          operator new();
        case 5u:
          operator new();
        case 6u:
          *(unsigned char *)(a1 + 56) |= 2u;
          unint64_t v31 = *((void *)this + 1);
          if (v31 > 0xFFFFFFFFFFFFFFFBLL || v31 + 4 > *((void *)this + 2)) {
            goto LABEL_45;
          }
          *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v31);
          goto LABEL_54;
        case 7u:
          *(unsigned char *)(a1 + 56) |= 0x10u;
          unint64_t v32 = *((void *)this + 1);
          if (v32 > 0xFFFFFFFFFFFFFFFBLL || v32 + 4 > *((void *)this + 2)) {
            goto LABEL_45;
          }
          *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v32);
          goto LABEL_54;
        case 8u:
          *(unsigned char *)(a1 + 56) |= 4u;
          unint64_t v33 = *((void *)this + 1);
          if (v33 <= 0xFFFFFFFFFFFFFFFBLL && v33 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v33);
LABEL_54:
            uint64_t v21 = *((void *)this + 1) + 4;
LABEL_55:
            *((void *)this + 1) = v21;
          }
          else
          {
LABEL_45:
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_60;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          goto LABEL_60;
      }
      while (1)
      {
        if (v24 == v23)
        {
          LODWORD(v28) = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_59;
        }
        unint64_t v36 = v23 + 1;
        char v37 = *(unsigned char *)(v25 + v23);
        *((void *)this + 1) = v36;
        v28 |= (unint64_t)(v37 & 0x7F) << v34;
        if ((v37 & 0x80) == 0) {
          break;
        }
        v34 += 7;
        unint64_t v23 = v36;
        BOOL v14 = v35++ > 8;
        if (v14) {
          goto LABEL_52;
        }
      }
      if (*((unsigned char *)this + 24)) {
        LODWORD(v28) = 0;
      }
LABEL_59:
      *(_DWORD *)(a1 + 48) = v28;
LABEL_60:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B47320(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 56);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 32));
    char v4 = *(unsigned char *)(v3 + 56);
  }
  if ((v4 & 8) != 0) {
    uint64_t result = PB::Writer::writeVarInt(this);
  }
  uint64_t v5 = *(const PB::Base **)(v3 + 24);
  if (v5) {
    uint64_t result = PB::Writer::writeSubmessage(this, v5);
  }
  char v6 = *(const PB::Base **)(v3 + 8);
  if (v6) {
    uint64_t result = PB::Writer::writeSubmessage(this, v6);
  }
  uint64_t v7 = *(const PB::Base **)(v3 + 16);
  if (v7) {
    uint64_t result = PB::Writer::writeSubmessage(this, v7);
  }
  char v8 = *(unsigned char *)(v3 + 56);
  if ((v8 & 2) == 0)
  {
    if ((*(unsigned char *)(v3 + 56) & 0x10) == 0) {
      goto LABEL_13;
    }
LABEL_16:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
    if ((*(unsigned char *)(v3 + 56) & 4) == 0) {
      return result;
    }
    goto LABEL_17;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
  char v8 = *(unsigned char *)(v3 + 56);
  if ((v8 & 0x10) != 0) {
    goto LABEL_16;
  }
LABEL_13:
  if ((v8 & 4) == 0) {
    return result;
  }
LABEL_17:
  float v9 = *(float *)(v3 + 44);

  return PB::Writer::write(this, v9);
}

uint64_t sub_227B47418(uint64_t result)
{
  *(_DWORD *)(result + 48) = 0;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)uint64_t result = &unk_26DC20690;
  return result;
}

void sub_227B47440(PB::Base *this)
{
  *(void *)this = &unk_26DC20690;
  uint64_t v2 = *((void *)this + 2);
  *((void *)this + 2) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *((void *)this + 1);
  *((void *)this + 1) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }

  PB::Base::~Base(this);
}

void sub_227B474F4(PB::Base *a1)
{
  sub_227B47440(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B4752C(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC20690;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 48) = 0;
  *(void *)(result + 16) = 0;
  __int16 v2 = *(_WORD *)(a2 + 48);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 24);
    *(_WORD *)(result + 48) = 1;
    *(void *)(result + 24) = v4;
    __int16 v3 = 3;
    if ((*(_WORD *)(a2 + 48) & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 2;
  if ((v2 & 2) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 32);
    *(_WORD *)(result + 48) = v3;
    *(_DWORD *)(result + 32) = v5;
  }
LABEL_6:
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  if (*(void *)(a2 + 16)) {
    operator new();
  }
  __int16 v6 = *(_WORD *)(a2 + 48);
  if ((v6 & 0x80) != 0)
  {
    char v8 = *(unsigned char *)(a2 + 41);
    *(_WORD *)(result + 48) |= 0x80u;
    *(unsigned char *)(result + 41) = v8;
    __int16 v6 = *(_WORD *)(a2 + 48);
    if ((v6 & 0x20) == 0)
    {
LABEL_12:
      if ((v6 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_23;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_12;
  }
  char v9 = *(unsigned char *)(a2 + 39);
  *(_WORD *)(result + 48) |= 0x20u;
  *(unsigned char *)(result + 39) = v9;
  __int16 v6 = *(_WORD *)(a2 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_13:
    if ((v6 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_24;
  }
LABEL_23:
  char v10 = *(unsigned char *)(a2 + 36);
  *(_WORD *)(result + 48) |= 4u;
  *(unsigned char *)(result + 36) = v10;
  __int16 v6 = *(_WORD *)(a2 + 48);
  if ((v6 & 8) == 0)
  {
LABEL_14:
    if ((v6 & 0x40) == 0) {
      goto LABEL_15;
    }
    goto LABEL_25;
  }
LABEL_24:
  char v11 = *(unsigned char *)(a2 + 37);
  *(_WORD *)(result + 48) |= 8u;
  *(unsigned char *)(result + 37) = v11;
  __int16 v6 = *(_WORD *)(a2 + 48);
  if ((v6 & 0x40) == 0)
  {
LABEL_15:
    if ((v6 & 0x200) == 0) {
      goto LABEL_16;
    }
    goto LABEL_26;
  }
LABEL_25:
  char v12 = *(unsigned char *)(a2 + 40);
  *(_WORD *)(result + 48) |= 0x40u;
  *(unsigned char *)(result + 40) = v12;
  __int16 v6 = *(_WORD *)(a2 + 48);
  if ((v6 & 0x200) == 0)
  {
LABEL_16:
    if ((v6 & 0x100) == 0) {
      goto LABEL_17;
    }
    goto LABEL_27;
  }
LABEL_26:
  char v13 = *(unsigned char *)(a2 + 43);
  *(_WORD *)(result + 48) |= 0x200u;
  *(unsigned char *)(result + 43) = v13;
  __int16 v6 = *(_WORD *)(a2 + 48);
  if ((v6 & 0x100) == 0)
  {
LABEL_17:
    if ((v6 & 0x10) == 0) {
      goto LABEL_18;
    }
    goto LABEL_28;
  }
LABEL_27:
  char v14 = *(unsigned char *)(a2 + 42);
  *(_WORD *)(result + 48) |= 0x100u;
  *(unsigned char *)(result + 42) = v14;
  __int16 v6 = *(_WORD *)(a2 + 48);
  if ((v6 & 0x10) == 0)
  {
LABEL_18:
    if ((v6 & 0x400) == 0) {
      return result;
    }
    goto LABEL_19;
  }
LABEL_28:
  char v15 = *(unsigned char *)(a2 + 38);
  *(_WORD *)(result + 48) |= 0x10u;
  *(unsigned char *)(result + 38) = v15;
  if ((*(_WORD *)(a2 + 48) & 0x400) == 0) {
    return result;
  }
LABEL_19:
  char v7 = *(unsigned char *)(a2 + 44);
  *(_WORD *)(result + 48) |= 0x400u;
  *(unsigned char *)(result + 44) = v7;
  return result;
}

uint64_t sub_227B477A4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 48);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "above");
    __int16 v5 = *(_WORD *)(a1 + 48);
  }
  if ((v5 & 8) != 0) {
    PB::TextFormatter::format(this, "below");
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v6 + 32))(v6, this, "current");
  }
  __int16 v7 = *(_WORD *)(a1 + 48);
  if ((v7 & 2) != 0)
  {
    PB::TextFormatter::format(this, "location");
    __int16 v7 = *(_WORD *)(a1 + 48);
    if ((v7 & 0x10) == 0)
    {
LABEL_9:
      if ((v7 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_25;
    }
  }
  else if ((v7 & 0x10) == 0)
  {
    goto LABEL_9;
  }
  PB::TextFormatter::format(this, "moving");
  __int16 v7 = *(_WORD *)(a1 + 48);
  if ((v7 & 0x20) == 0)
  {
LABEL_10:
    if ((v7 & 0x40) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_25:
  PB::TextFormatter::format(this, "partialin");
  if ((*(_WORD *)(a1 + 48) & 0x40) != 0) {
LABEL_11:
  }
    PB::TextFormatter::format(this, "stable");
LABEL_12:
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v8 + 32))(v8, this, "threshold");
  }
  __int16 v9 = *(_WORD *)(a1 + 48);
  if (v9)
  {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 24));
    __int16 v9 = *(_WORD *)(a1 + 48);
    if ((v9 & 0x80) == 0)
    {
LABEL_16:
      if ((v9 & 0x100) == 0) {
        goto LABEL_17;
      }
      goto LABEL_29;
    }
  }
  else if ((v9 & 0x80) == 0)
  {
    goto LABEL_16;
  }
  PB::TextFormatter::format(this, "upright");
  __int16 v9 = *(_WORD *)(a1 + 48);
  if ((v9 & 0x100) == 0)
  {
LABEL_17:
    if ((v9 & 0x200) == 0) {
      goto LABEL_18;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(this, "upsidedown");
  __int16 v9 = *(_WORD *)(a1 + 48);
  if ((v9 & 0x200) == 0)
  {
LABEL_18:
    if ((v9 & 0x400) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_30:
  PB::TextFormatter::format(this, "vertical");
  if ((*(_WORD *)(a1 + 48) & 0x400) != 0) {
LABEL_19:
  }
    PB::TextFormatter::format(this, "walking");
LABEL_20:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B479B0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(_WORD *)(a1 + 48) |= 1u;
          unint64_t v20 = *((void *)this + 1);
          if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 24) = *(void *)(*(void *)this + v20);
            *((void *)this + 1) += 8;
          }
          else
          {
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_84;
        case 2u:
          *(_WORD *)(a1 + 48) |= 2u;
          unint64_t v22 = *((void *)this + 1);
          unint64_t v23 = *((void *)this + 2);
          uint64_t v24 = *(void *)this;
          if (v22 <= 0xFFFFFFFFFFFFFFF5 && v22 + 10 <= v23)
          {
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v27 = 0;
            do
            {
              unint64_t v28 = v22 + 1;
              *((void *)this + 1) = v22 + 1;
              char v29 = *(unsigned char *)(v24 + v22);
              v27 |= (unint64_t)(v29 & 0x7F) << v25;
              if ((v29 & 0x80) == 0) {
                goto LABEL_83;
              }
              v25 += 7;
              unint64_t v22 = v28;
              BOOL v14 = v26++ > 8;
            }
            while (!v14);
LABEL_60:
            LODWORD(v27) = 0;
            goto LABEL_83;
          }
          char v66 = 0;
          unsigned int v67 = 0;
          uint64_t v27 = 0;
          if (v23 <= v22) {
            unint64_t v23 = *((void *)this + 1);
          }
          break;
        case 3u:
          operator new();
        case 4u:
          operator new();
        case 5u:
          *(_WORD *)(a1 + 48) |= 0x80u;
          unint64_t v30 = *((void *)this + 1);
          if (v30 >= *((void *)this + 2))
          {
            BOOL v33 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v31 = v30 + 1;
            int v32 = *(unsigned __int8 *)(*(void *)this + v30);
            *((void *)this + 1) = v31;
            BOOL v33 = v32 != 0;
          }
          *(unsigned char *)(a1 + 41) = v33;
          goto LABEL_84;
        case 6u:
          *(_WORD *)(a1 + 48) |= 0x20u;
          unint64_t v34 = *((void *)this + 1);
          if (v34 >= *((void *)this + 2))
          {
            BOOL v37 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v35 = v34 + 1;
            int v36 = *(unsigned __int8 *)(*(void *)this + v34);
            *((void *)this + 1) = v35;
            BOOL v37 = v36 != 0;
          }
          *(unsigned char *)(a1 + 39) = v37;
          goto LABEL_84;
        case 7u:
          *(_WORD *)(a1 + 48) |= 4u;
          unint64_t v38 = *((void *)this + 1);
          if (v38 >= *((void *)this + 2))
          {
            BOOL v41 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v39 = v38 + 1;
            int v40 = *(unsigned __int8 *)(*(void *)this + v38);
            *((void *)this + 1) = v39;
            BOOL v41 = v40 != 0;
          }
          *(unsigned char *)(a1 + 36) = v41;
          goto LABEL_84;
        case 8u:
          *(_WORD *)(a1 + 48) |= 8u;
          unint64_t v42 = *((void *)this + 1);
          if (v42 >= *((void *)this + 2))
          {
            BOOL v45 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v43 = v42 + 1;
            int v44 = *(unsigned __int8 *)(*(void *)this + v42);
            *((void *)this + 1) = v43;
            BOOL v45 = v44 != 0;
          }
          *(unsigned char *)(a1 + 37) = v45;
          goto LABEL_84;
        case 9u:
          *(_WORD *)(a1 + 48) |= 0x40u;
          unint64_t v46 = *((void *)this + 1);
          if (v46 >= *((void *)this + 2))
          {
            BOOL v49 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v47 = v46 + 1;
            int v48 = *(unsigned __int8 *)(*(void *)this + v46);
            *((void *)this + 1) = v47;
            BOOL v49 = v48 != 0;
          }
          *(unsigned char *)(a1 + 40) = v49;
          goto LABEL_84;
        case 0xAu:
          *(_WORD *)(a1 + 48) |= 0x200u;
          unint64_t v50 = *((void *)this + 1);
          if (v50 >= *((void *)this + 2))
          {
            BOOL v53 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v51 = v50 + 1;
            int v52 = *(unsigned __int8 *)(*(void *)this + v50);
            *((void *)this + 1) = v51;
            BOOL v53 = v52 != 0;
          }
          *(unsigned char *)(a1 + 43) = v53;
          goto LABEL_84;
        case 0xBu:
          *(_WORD *)(a1 + 48) |= 0x100u;
          unint64_t v54 = *((void *)this + 1);
          if (v54 >= *((void *)this + 2))
          {
            BOOL v57 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v55 = v54 + 1;
            int v56 = *(unsigned __int8 *)(*(void *)this + v54);
            *((void *)this + 1) = v55;
            BOOL v57 = v56 != 0;
          }
          *(unsigned char *)(a1 + 42) = v57;
          goto LABEL_84;
        case 0xCu:
          *(_WORD *)(a1 + 48) |= 0x10u;
          unint64_t v58 = *((void *)this + 1);
          if (v58 >= *((void *)this + 2))
          {
            BOOL v61 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v59 = v58 + 1;
            int v60 = *(unsigned __int8 *)(*(void *)this + v58);
            *((void *)this + 1) = v59;
            BOOL v61 = v60 != 0;
          }
          *(unsigned char *)(a1 + 38) = v61;
          goto LABEL_84;
        case 0xDu:
          *(_WORD *)(a1 + 48) |= 0x400u;
          unint64_t v62 = *((void *)this + 1);
          if (v62 >= *((void *)this + 2))
          {
            BOOL v65 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v63 = v62 + 1;
            int v64 = *(unsigned __int8 *)(*(void *)this + v62);
            *((void *)this + 1) = v63;
            BOOL v65 = v64 != 0;
          }
          *(unsigned char *)(a1 + 44) = v65;
          goto LABEL_84;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          goto LABEL_84;
      }
      while (1)
      {
        if (v23 == v22)
        {
          LODWORD(v27) = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_83;
        }
        unint64_t v68 = v22 + 1;
        char v69 = *(unsigned char *)(v24 + v22);
        *((void *)this + 1) = v68;
        v27 |= (unint64_t)(v69 & 0x7F) << v66;
        if ((v69 & 0x80) == 0) {
          break;
        }
        v66 += 7;
        unint64_t v22 = v68;
        BOOL v14 = v67++ > 8;
        if (v14) {
          goto LABEL_60;
        }
      }
      if (*((unsigned char *)this + 24)) {
        LODWORD(v27) = 0;
      }
LABEL_83:
      *(_DWORD *)(a1 + 32) = v27;
LABEL_84:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B47FF4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 48);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 24));
    __int16 v4 = *(_WORD *)(v3 + 48);
  }
  if ((v4 & 2) != 0) {
    uint64_t result = PB::Writer::writeVarInt(this);
  }
  __int16 v5 = *(const PB::Base **)(v3 + 8);
  if (v5) {
    uint64_t result = PB::Writer::writeSubmessage(this, v5);
  }
  uint64_t v6 = *(const PB::Base **)(v3 + 16);
  if (v6) {
    uint64_t result = PB::Writer::writeSubmessage(this, v6);
  }
  __int16 v7 = *(_WORD *)(v3 + 48);
  if ((v7 & 0x80) != 0)
  {
    uint64_t result = PB::Writer::write(this);
    __int16 v7 = *(_WORD *)(v3 + 48);
    if ((v7 & 0x20) == 0)
    {
LABEL_11:
      if ((v7 & 4) == 0) {
        goto LABEL_12;
      }
      goto LABEL_21;
    }
  }
  else if ((v7 & 0x20) == 0)
  {
    goto LABEL_11;
  }
  uint64_t result = PB::Writer::write(this);
  __int16 v7 = *(_WORD *)(v3 + 48);
  if ((v7 & 4) == 0)
  {
LABEL_12:
    if ((v7 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this);
  __int16 v7 = *(_WORD *)(v3 + 48);
  if ((v7 & 8) == 0)
  {
LABEL_13:
    if ((v7 & 0x40) == 0) {
      goto LABEL_14;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this);
  __int16 v7 = *(_WORD *)(v3 + 48);
  if ((v7 & 0x40) == 0)
  {
LABEL_14:
    if ((v7 & 0x200) == 0) {
      goto LABEL_15;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this);
  __int16 v7 = *(_WORD *)(v3 + 48);
  if ((v7 & 0x200) == 0)
  {
LABEL_15:
    if ((v7 & 0x100) == 0) {
      goto LABEL_16;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this);
  __int16 v7 = *(_WORD *)(v3 + 48);
  if ((v7 & 0x100) == 0)
  {
LABEL_16:
    if ((v7 & 0x10) == 0) {
      goto LABEL_17;
    }
LABEL_26:
    uint64_t result = PB::Writer::write(this);
    if ((*(_WORD *)(v3 + 48) & 0x400) == 0) {
      return result;
    }
    goto LABEL_27;
  }
LABEL_25:
  uint64_t result = PB::Writer::write(this);
  __int16 v7 = *(_WORD *)(v3 + 48);
  if ((v7 & 0x10) != 0) {
    goto LABEL_26;
  }
LABEL_17:
  if ((v7 & 0x400) == 0) {
    return result;
  }
LABEL_27:

  return PB::Writer::write(this);
}

uint64_t sub_227B48180(uint64_t result)
{
  *(_DWORD *)(result + 44) = 0;
  *(void *)uint64_t result = &unk_26DC206C8;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  return result;
}

void sub_227B481A8(PB::Base *this)
{
  *(void *)this = &unk_26DC206C8;
  uint64_t v2 = *((void *)this + 3);
  *((void *)this + 3) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *((void *)this + 2);
  *((void *)this + 2) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  uint64_t v4 = *((void *)this + 1);
  *((void *)this + 1) = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }

  PB::Base::~Base(this);
}

void sub_227B4828C(PB::Base *a1)
{
  sub_227B481A8(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B482C4(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC206C8;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 44) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  if (*(unsigned char *)(a2 + 44))
  {
    uint64_t v3 = *(void *)(a2 + 32);
    *(unsigned char *)(result + 44) = 1;
    *(void *)(result + 32) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 44) & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 44) & 2) != 0)
  {
LABEL_5:
    int v4 = *(_DWORD *)(a2 + 40);
    *(unsigned char *)(result + 44) = v2;
    *(_DWORD *)(result + 40) = v4;
  }
LABEL_6:
  if (*(void *)(a2 + 24)) {
    operator new();
  }
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  if (*(void *)(a2 + 16)) {
    operator new();
  }
  return result;
}

uint64_t sub_227B48478(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "current");
  }
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v6 + 32))(v6, this, "last");
  }
  if ((*(unsigned char *)(a1 + 44) & 2) != 0) {
    PB::TextFormatter::format(this, "location");
  }
  uint64_t v7 = *(void *)(a1 + 24);
  if (v7) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v7 + 32))(v7, this, "minimum");
  }
  if (*(unsigned char *)(a1 + 44)) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 32));
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B4859C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 44) |= 1u;
          unint64_t v20 = *((void *)this + 1);
          if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 32) = *(void *)(*(void *)this + v20);
            *((void *)this + 1) += 8;
          }
          else
          {
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_49;
        case 2u:
          *(unsigned char *)(a1 + 44) |= 2u;
          unint64_t v22 = *((void *)this + 1);
          unint64_t v23 = *((void *)this + 2);
          uint64_t v24 = *(void *)this;
          if (v22 <= 0xFFFFFFFFFFFFFFF5 && v22 + 10 <= v23)
          {
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v27 = 0;
            do
            {
              unint64_t v28 = v22 + 1;
              *((void *)this + 1) = v22 + 1;
              char v29 = *(unsigned char *)(v24 + v22);
              v27 |= (unint64_t)(v29 & 0x7F) << v25;
              if ((v29 & 0x80) == 0) {
                goto LABEL_48;
              }
              v25 += 7;
              unint64_t v22 = v28;
              BOOL v14 = v26++ > 8;
            }
            while (!v14);
LABEL_43:
            LODWORD(v27) = 0;
            goto LABEL_48;
          }
          char v30 = 0;
          unsigned int v31 = 0;
          uint64_t v27 = 0;
          if (v23 <= v22) {
            unint64_t v23 = *((void *)this + 1);
          }
          break;
        case 3u:
          operator new();
        case 4u:
          operator new();
        case 5u:
          operator new();
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          goto LABEL_49;
      }
      while (1)
      {
        if (v23 == v22)
        {
          LODWORD(v27) = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_48;
        }
        unint64_t v32 = v22 + 1;
        char v33 = *(unsigned char *)(v24 + v22);
        *((void *)this + 1) = v32;
        v27 |= (unint64_t)(v33 & 0x7F) << v30;
        if ((v33 & 0x80) == 0) {
          break;
        }
        v30 += 7;
        unint64_t v22 = v32;
        BOOL v14 = v31++ > 8;
        if (v14) {
          goto LABEL_43;
        }
      }
      if (*((unsigned char *)this + 24)) {
        LODWORD(v27) = 0;
      }
LABEL_48:
      *(_DWORD *)(a1 + 40) = v27;
LABEL_49:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B489B4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 44);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 32));
    char v4 = *(unsigned char *)(v3 + 44);
  }
  if ((v4 & 2) != 0) {
    uint64_t result = PB::Writer::writeVarInt(this);
  }
  uint64_t v5 = *(const PB::Base **)(v3 + 24);
  if (v5) {
    uint64_t result = PB::Writer::writeSubmessage(this, v5);
  }
  uint64_t v6 = *(const PB::Base **)(v3 + 8);
  if (v6) {
    uint64_t result = PB::Writer::writeSubmessage(this, v6);
  }
  uint64_t v7 = *(const PB::Base **)(v3 + 16);
  if (v7)
  {
    return PB::Writer::writeSubmessage(this, v7);
  }
  return result;
}

double sub_227B48A5C(uint64_t a1)
{
  *(void *)a1 = &unk_26DC20700;
  *(_DWORD *)(a1 + 92) = 0;
  *(_DWORD *)(a1 + 108) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  return result;
}

void sub_227B48A98(PB::Base *this)
{
  *(void *)this = &unk_26DC20700;
  uint64_t v2 = *((void *)this + 8);
  *((void *)this + 8) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *((void *)this + 7);
  *((void *)this + 7) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  char v4 = (void *)*((void *)this + 4);
  if (v4)
  {
    *((void *)this + 5) = v4;
    operator delete(v4);
  }
  uint64_t v5 = (void *)*((void *)this + 1);
  if (v5)
  {
    *((void *)this + 2) = v5;
    operator delete(v5);
  }

  PB::Base::~Base(this);
}

void sub_227B48B6C(PB::Base *a1)
{
  sub_227B48A98(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B48BA4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC20700;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_DWORD *)(a1 + 92) = 0;
  *(_DWORD *)(a1 + 108) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  if (*(unsigned char *)(a2 + 108))
  {
    uint64_t v5 = *(void *)(a2 + 72);
    *(unsigned char *)(a1 + 108) = 1;
    *(void *)(a1 + 72) = v5;
    char v4 = 9;
    if ((*(unsigned char *)(a2 + 108) & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v4 = 8;
  if ((*(unsigned char *)(a2 + 108) & 8) != 0)
  {
LABEL_5:
    int v6 = *(_DWORD *)(a2 + 88);
    *(unsigned char *)(a1 + 108) = v4;
    *(_DWORD *)(a1 + 88) = v6;
  }
LABEL_6:
  if (*(void *)(a2 + 56)) {
    operator new();
  }
  if (*(void *)(a2 + 64)) {
    operator new();
  }
  if (a1 != a2) {
    sub_227B8BA68((char *)(a1 + 8), *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  char v7 = *(unsigned char *)(a2 + 108);
  if ((v7 & 0x40) != 0)
  {
    int v13 = *(_DWORD *)(a2 + 100);
    *(unsigned char *)(a1 + 108) |= 0x40u;
    *(_DWORD *)(a1 + 100) = v13;
    char v7 = *(unsigned char *)(a2 + 108);
    if ((v7 & 0x20) == 0)
    {
LABEL_14:
      if ((v7 & 0x80) == 0) {
        goto LABEL_15;
      }
      goto LABEL_26;
    }
  }
  else if ((*(unsigned char *)(a2 + 108) & 0x20) == 0)
  {
    goto LABEL_14;
  }
  int v14 = *(_DWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 108) |= 0x20u;
  *(_DWORD *)(a1 + 96) = v14;
  char v7 = *(unsigned char *)(a2 + 108);
  if ((v7 & 0x80) == 0)
  {
LABEL_15:
    if ((v7 & 0x10) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_26:
  char v15 = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 108) |= 0x80u;
  *(unsigned char *)(a1 + 104) = v15;
  if ((*(unsigned char *)(a2 + 108) & 0x10) != 0)
  {
LABEL_16:
    int v8 = *(_DWORD *)(a2 + 92);
    *(unsigned char *)(a1 + 108) |= 0x10u;
    *(_DWORD *)(a1 + 92) = v8;
  }
LABEL_17:
  if (a1 != a2) {
    sub_227B8BA68((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
  }
  char v9 = *(unsigned char *)(a2 + 108);
  if ((v9 & 2) != 0)
  {
    int v10 = *(_DWORD *)(a2 + 80);
    *(unsigned char *)(a1 + 108) |= 2u;
    *(_DWORD *)(a1 + 80) = v10;
    char v9 = *(unsigned char *)(a2 + 108);
  }
  if ((v9 & 4) != 0)
  {
    int v11 = *(_DWORD *)(a2 + 84);
    *(unsigned char *)(a1 + 108) |= 4u;
    *(_DWORD *)(a1 + 84) = v11;
  }
  return a1;
}

uint64_t sub_227B48DFC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(float **)(a1 + 8);
  int v6 = *(float **)(a1 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    PB::TextFormatter::format(this, "acceleration", v7);
  }
  if ((*(unsigned char *)(a1 + 108) & 2) != 0) {
    PB::TextFormatter::format(this, "correlation", *(float *)(a1 + 80));
  }
  uint64_t v8 = *(void *)(a1 + 56);
  if (v8) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v8 + 32))(v8, this, "current");
  }
  if ((*(unsigned char *)(a1 + 108) & 4) != 0) {
    PB::TextFormatter::format(this, "deltatip", *(float *)(a1 + 84));
  }
  uint64_t v9 = *(void *)(a1 + 64);
  if (v9) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v9 + 32))(v9, this, "instability");
  }
  char v10 = *(unsigned char *)(a1 + 108);
  if ((v10 & 8) != 0)
  {
    PB::TextFormatter::format(this, "location");
    char v10 = *(unsigned char *)(a1 + 108);
    if ((v10 & 0x10) == 0)
    {
LABEL_13:
      if ((v10 & 0x20) == 0) {
        goto LABEL_14;
      }
      goto LABEL_24;
    }
  }
  else if ((*(unsigned char *)(a1 + 108) & 0x10) == 0)
  {
    goto LABEL_13;
  }
  PB::TextFormatter::format(this, "state");
  char v10 = *(unsigned char *)(a1 + 108);
  if ((v10 & 0x20) == 0)
  {
LABEL_14:
    if ((v10 & 1) == 0) {
      goto LABEL_15;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "tilt", *(float *)(a1 + 96));
  char v10 = *(unsigned char *)(a1 + 108);
  if ((v10 & 1) == 0)
  {
LABEL_15:
    if ((v10 & 0x40) == 0) {
      goto LABEL_16;
    }
LABEL_26:
    PB::TextFormatter::format(this, "tip", *(float *)(a1 + 100));
    if ((*(unsigned char *)(a1 + 108) & 0x80) == 0) {
      goto LABEL_17;
    }
    goto LABEL_27;
  }
LABEL_25:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 72));
  char v10 = *(unsigned char *)(a1 + 108);
  if ((v10 & 0x40) != 0) {
    goto LABEL_26;
  }
LABEL_16:
  if ((v10 & 0x80) == 0) {
    goto LABEL_17;
  }
LABEL_27:
  PB::TextFormatter::format(this, "upright");
LABEL_17:
  int v11 = *(float **)(a1 + 32);
  unint64_t v12 = *(float **)(a1 + 40);
  while (v11 != v12)
  {
    float v13 = *v11++;
    PB::TextFormatter::format(this, "variance", v13);
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227B49010(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = (void **)(a1 + 32);
    uint64_t v9 = a1 + 48;
    char v10 = (void **)(a1 + 8);
    uint64_t v11 = a1 + 24;
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        BOOL v18 = v14++ > 8;
        if (v18) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v24 = v15 & 7;
      if (v24 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v15 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 108) |= 1u;
          unint64_t v25 = *((void *)this + 1);
          if (v25 > 0xFFFFFFFFFFFFFFF7 || v25 + 8 > *((void *)this + 2)) {
            goto LABEL_168;
          }
          *(void *)(a1 + 72) = *(void *)(*(void *)this + v25);
          uint64_t v26 = *((void *)this + 1) + 8;
          goto LABEL_171;
        case 2u:
          *(unsigned char *)(a1 + 108) |= 8u;
          unint64_t v27 = *((void *)this + 1);
          unint64_t v28 = *((void *)this + 2);
          uint64_t v29 = *(void *)this;
          if (v27 <= 0xFFFFFFFFFFFFFFF5 && v27 + 10 <= v28)
          {
            char v30 = 0;
            unsigned int v31 = 0;
            uint64_t v32 = 0;
            do
            {
              unint64_t v33 = v27 + 1;
              *((void *)this + 1) = v27 + 1;
              char v34 = *(unsigned char *)(v29 + v27);
              v32 |= (unint64_t)(v34 & 0x7F) << v30;
              if ((v34 & 0x80) == 0) {
                goto LABEL_148;
              }
              v30 += 7;
              unint64_t v27 = v33;
              BOOL v18 = v31++ > 8;
            }
            while (!v18);
LABEL_113:
            LODWORD(v32) = 0;
            goto LABEL_148;
          }
          char v79 = 0;
          unsigned int v80 = 0;
          uint64_t v32 = 0;
          if (v28 <= v27) {
            unint64_t v28 = *((void *)this + 1);
          }
          while (2)
          {
            if (v28 == v27)
            {
              LODWORD(v32) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v81 = v27 + 1;
              char v82 = *(unsigned char *)(v29 + v27);
              *((void *)this + 1) = v81;
              v32 |= (unint64_t)(v82 & 0x7F) << v79;
              if (v82 < 0)
              {
                v79 += 7;
                unint64_t v27 = v81;
                BOOL v18 = v80++ > 8;
                if (v18) {
                  goto LABEL_113;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v32) = 0;
              }
            }
            break;
          }
LABEL_148:
          *(_DWORD *)(a1 + 88) = v32;
          goto LABEL_172;
        case 3u:
          operator new();
        case 4u:
          operator new();
        case 5u:
          if (v24 != 2)
          {
            uint64_t v84 = *(char **)(a1 + 16);
            unint64_t v83 = *(void *)(a1 + 24);
            if ((unint64_t)v84 >= v83)
            {
              unint64_t v92 = (char *)*v10;
              uint64_t v93 = (v84 - (unsigned char *)*v10) >> 2;
              unint64_t v94 = v93 + 1;
              if ((unint64_t)(v93 + 1) >> 62) {
LABEL_183:
              }
                sub_227B8B89C();
              uint64_t v95 = v83 - (void)v92;
              if (v95 >> 1 > v94) {
                unint64_t v94 = v95 >> 1;
              }
              if ((unint64_t)v95 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v96 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v96 = v94;
              }
              if (v96)
              {
                char v97 = (char *)sub_227B8BBB8(v11, v96);
                unint64_t v92 = *(char **)(a1 + 8);
                uint64_t v84 = *(char **)(a1 + 16);
              }
              else
              {
                char v97 = 0;
              }
              unint64_t v104 = &v97[4 * v93];
              *(_DWORD *)unint64_t v104 = 0;
              unint64_t v85 = v104 + 4;
              while (v84 != v92)
              {
                int v105 = *((_DWORD *)v84 - 1);
                v84 -= 4;
                *((_DWORD *)v104 - 1) = v105;
                v104 -= 4;
              }
              *(void *)(a1 + 8) = v104;
              *(void *)(a1 + 16) = v85;
              *(void *)(a1 + 24) = &v97[4 * v96];
              if (v92) {
                operator delete(v92);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v84 = 0;
              unint64_t v85 = v84 + 4;
            }
            *(void *)(a1 + 16) = v85;
            goto LABEL_166;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v35 = *((void *)this + 1);
          unint64_t v36 = *((void *)this + 2);
          while (v35 < v36 && !*((unsigned char *)this + 24))
          {
            unint64_t v38 = *(char **)(a1 + 16);
            unint64_t v37 = *(void *)(a1 + 24);
            if ((unint64_t)v38 >= v37)
            {
              int v40 = (char *)*v10;
              uint64_t v41 = (v38 - (unsigned char *)*v10) >> 2;
              unint64_t v42 = v41 + 1;
              if ((unint64_t)(v41 + 1) >> 62) {
                goto LABEL_183;
              }
              uint64_t v43 = v37 - (void)v40;
              if (v43 >> 1 > v42) {
                unint64_t v42 = v43 >> 1;
              }
              if ((unint64_t)v43 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v44 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v44 = v42;
              }
              if (v44)
              {
                BOOL v45 = (char *)sub_227B8BBB8(v11, v44);
                int v40 = *(char **)(a1 + 8);
                unint64_t v38 = *(char **)(a1 + 16);
              }
              else
              {
                BOOL v45 = 0;
              }
              unint64_t v46 = &v45[4 * v41];
              *(_DWORD *)unint64_t v46 = 0;
              unint64_t v39 = v46 + 4;
              while (v38 != v40)
              {
                int v47 = *((_DWORD *)v38 - 1);
                v38 -= 4;
                *((_DWORD *)v46 - 1) = v47;
                v46 -= 4;
              }
              *(void *)(a1 + 8) = v46;
              *(void *)(a1 + 16) = v39;
              *(void *)(a1 + 24) = &v45[4 * v44];
              if (v40) {
                operator delete(v40);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v38 = 0;
              unint64_t v39 = v38 + 4;
            }
            *(void *)(a1 + 16) = v39;
            unint64_t v48 = *((void *)this + 1);
            if (v48 > 0xFFFFFFFFFFFFFFFBLL || v48 + 4 > *((void *)this + 2)) {
              goto LABEL_127;
            }
            *(v39 - 1) = *(_DWORD *)(*(void *)this + v48);
            unint64_t v36 = *((void *)this + 2);
            unint64_t v35 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v35;
          }
          goto LABEL_37;
        case 6u:
          *(unsigned char *)(a1 + 108) |= 0x40u;
          unint64_t v49 = *((void *)this + 1);
          if (v49 > 0xFFFFFFFFFFFFFFFBLL || v49 + 4 > *((void *)this + 2)) {
            goto LABEL_168;
          }
          *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v49);
          goto LABEL_170;
        case 7u:
          *(unsigned char *)(a1 + 108) |= 0x20u;
          unint64_t v50 = *((void *)this + 1);
          if (v50 > 0xFFFFFFFFFFFFFFFBLL || v50 + 4 > *((void *)this + 2)) {
            goto LABEL_168;
          }
          *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v50);
          goto LABEL_170;
        case 8u:
          *(unsigned char *)(a1 + 108) |= 0x80u;
          unint64_t v51 = *((void *)this + 1);
          if (v51 >= *((void *)this + 2))
          {
            BOOL v54 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v52 = v51 + 1;
            int v53 = *(unsigned __int8 *)(*(void *)this + v51);
            *((void *)this + 1) = v52;
            BOOL v54 = v53 != 0;
          }
          *(unsigned char *)(a1 + 104) = v54;
          goto LABEL_172;
        case 9u:
          *(unsigned char *)(a1 + 108) |= 0x10u;
          unint64_t v55 = *((void *)this + 1);
          unint64_t v56 = *((void *)this + 2);
          uint64_t v57 = *(void *)this;
          if (v55 <= 0xFFFFFFFFFFFFFFF5 && v55 + 10 <= v56)
          {
            char v58 = 0;
            unsigned int v59 = 0;
            uint64_t v60 = 0;
            do
            {
              unint64_t v61 = v55 + 1;
              *((void *)this + 1) = v55 + 1;
              char v62 = *(unsigned char *)(v57 + v55);
              v60 |= (unint64_t)(v62 & 0x7F) << v58;
              if ((v62 & 0x80) == 0) {
                goto LABEL_151;
              }
              v58 += 7;
              unint64_t v55 = v61;
              BOOL v18 = v59++ > 8;
            }
            while (!v18);
LABEL_124:
            LODWORD(v60) = 0;
            goto LABEL_151;
          }
          char v86 = 0;
          unsigned int v87 = 0;
          uint64_t v60 = 0;
          if (v56 <= v55) {
            unint64_t v56 = *((void *)this + 1);
          }
          while (2)
          {
            if (v56 == v55)
            {
              LODWORD(v60) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v88 = v55 + 1;
              char v89 = *(unsigned char *)(v57 + v55);
              *((void *)this + 1) = v88;
              v60 |= (unint64_t)(v89 & 0x7F) << v86;
              if (v89 < 0)
              {
                v86 += 7;
                unint64_t v55 = v88;
                BOOL v18 = v87++ > 8;
                if (v18) {
                  goto LABEL_124;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v60) = 0;
              }
            }
            break;
          }
LABEL_151:
          *(_DWORD *)(a1 + 92) = v60;
          goto LABEL_172;
        case 0xAu:
          if (v24 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v63 = *((void *)this + 1);
            unint64_t v64 = *((void *)this + 2);
            while (v63 < v64 && !*((unsigned char *)this + 24))
            {
              char v66 = *(char **)(a1 + 40);
              unint64_t v65 = *(void *)(a1 + 48);
              if ((unint64_t)v66 >= v65)
              {
                unint64_t v68 = (char *)*v8;
                uint64_t v69 = (v66 - (unsigned char *)*v8) >> 2;
                unint64_t v70 = v69 + 1;
                if ((unint64_t)(v69 + 1) >> 62) {
                  goto LABEL_182;
                }
                uint64_t v71 = v65 - (void)v68;
                if (v71 >> 1 > v70) {
                  unint64_t v70 = v71 >> 1;
                }
                if ((unint64_t)v71 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v72 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v72 = v70;
                }
                if (v72)
                {
                  unint64_t v73 = (char *)sub_227B8BBB8(v9, v72);
                  unint64_t v68 = *(char **)(a1 + 32);
                  char v66 = *(char **)(a1 + 40);
                }
                else
                {
                  unint64_t v73 = 0;
                }
                uint64_t v74 = &v73[4 * v69];
                *(_DWORD *)uint64_t v74 = 0;
                unsigned int v67 = v74 + 4;
                while (v66 != v68)
                {
                  int v75 = *((_DWORD *)v66 - 1);
                  v66 -= 4;
                  *((_DWORD *)v74 - 1) = v75;
                  v74 -= 4;
                }
                *(void *)(a1 + 32) = v74;
                *(void *)(a1 + 40) = v67;
                *(void *)(a1 + 48) = &v73[4 * v72];
                if (v68) {
                  operator delete(v68);
                }
              }
              else
              {
                *(_DWORD *)char v66 = 0;
                unsigned int v67 = v66 + 4;
              }
              *(void *)(a1 + 40) = v67;
              unint64_t v76 = *((void *)this + 1);
              if (v76 > 0xFFFFFFFFFFFFFFFBLL || v76 + 4 > *((void *)this + 2))
              {
LABEL_127:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v67 - 1) = *(_DWORD *)(*(void *)this + v76);
              unint64_t v64 = *((void *)this + 2);
              unint64_t v63 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v63;
            }
LABEL_37:
            PB::Reader::recallMark();
          }
          else
          {
            unint64_t v91 = *(char **)(a1 + 40);
            unint64_t v90 = *(void *)(a1 + 48);
            if ((unint64_t)v91 >= v90)
            {
              unsigned int v98 = (char *)*v8;
              uint64_t v99 = (v91 - (unsigned char *)*v8) >> 2;
              unint64_t v100 = v99 + 1;
              if ((unint64_t)(v99 + 1) >> 62) {
LABEL_182:
              }
                sub_227B8B89C();
              uint64_t v101 = v90 - (void)v98;
              if (v101 >> 1 > v100) {
                unint64_t v100 = v101 >> 1;
              }
              if ((unint64_t)v101 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v102 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v102 = v100;
              }
              if (v102)
              {
                unint64_t v103 = (char *)sub_227B8BBB8(v9, v102);
                unsigned int v98 = *(char **)(a1 + 32);
                unint64_t v91 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v103 = 0;
              }
              unint64_t v106 = &v103[4 * v99];
              *(_DWORD *)unint64_t v106 = 0;
              unint64_t v85 = v106 + 4;
              while (v91 != v98)
              {
                int v107 = *((_DWORD *)v91 - 1);
                v91 -= 4;
                *((_DWORD *)v106 - 1) = v107;
                v106 -= 4;
              }
              *(void *)(a1 + 32) = v106;
              *(void *)(a1 + 40) = v85;
              *(void *)(a1 + 48) = &v103[4 * v102];
              if (v98) {
                operator delete(v98);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v91 = 0;
              unint64_t v85 = v91 + 4;
            }
            *(void *)(a1 + 40) = v85;
LABEL_166:
            unint64_t v108 = *((void *)this + 1);
            if (v108 <= 0xFFFFFFFFFFFFFFFBLL && v108 + 4 <= *((void *)this + 2))
            {
              *(v85 - 1) = *(_DWORD *)(*(void *)this + v108);
LABEL_170:
              uint64_t v26 = *((void *)this + 1) + 4;
LABEL_171:
              *((void *)this + 1) = v26;
            }
            else
            {
LABEL_168:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_172:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        case 0xBu:
          *(unsigned char *)(a1 + 108) |= 2u;
          unint64_t v77 = *((void *)this + 1);
          if (v77 > 0xFFFFFFFFFFFFFFFBLL || v77 + 4 > *((void *)this + 2)) {
            goto LABEL_168;
          }
          *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v77);
          goto LABEL_170;
        case 0xCu:
          *(unsigned char *)(a1 + 108) |= 4u;
          unint64_t v78 = *((void *)this + 1);
          if (v78 > 0xFFFFFFFFFFFFFFFBLL || v78 + 4 > *((void *)this + 2)) {
            goto LABEL_168;
          }
          *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v78);
          goto LABEL_170;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_172;
      }
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v15 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v21 = v2 + 1;
      char v22 = *(unsigned char *)(v12 + v2);
      *((void *)this + 1) = v21;
      v15 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0) {
        goto LABEL_21;
      }
      v19 += 7;
      unint64_t v2 = v21;
      if (v20++ >= 9)
      {
LABEL_20:
        unint64_t v15 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B499AC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 108);
  if (v4)
  {
    double result = PB::Writer::write(this, *(double *)(result + 72));
    char v4 = *(unsigned char *)(v3 + 108);
  }
  if ((v4 & 8) != 0) {
    double result = PB::Writer::writeVarInt(this);
  }
  uint64_t v5 = *(const PB::Base **)(v3 + 56);
  if (v5) {
    double result = PB::Writer::writeSubmessage(this, v5);
  }
  int v6 = *(const PB::Base **)(v3 + 64);
  if (v6) {
    double result = PB::Writer::writeSubmessage(this, v6);
  }
  float v7 = *(float **)(v3 + 8);
  uint64_t v8 = *(float **)(v3 + 16);
  while (v7 != v8)
  {
    float v9 = *v7++;
    double result = PB::Writer::write(this, v9);
  }
  char v10 = *(unsigned char *)(v3 + 108);
  if ((v10 & 0x40) != 0)
  {
    double result = PB::Writer::write(this, *(float *)(v3 + 100));
    char v10 = *(unsigned char *)(v3 + 108);
    if ((v10 & 0x20) == 0)
    {
LABEL_14:
      if ((v10 & 0x80) == 0) {
        goto LABEL_15;
      }
LABEL_26:
      double result = PB::Writer::write(this);
      if ((*(unsigned char *)(v3 + 108) & 0x10) == 0) {
        goto LABEL_17;
      }
      goto LABEL_16;
    }
  }
  else if ((*(unsigned char *)(v3 + 108) & 0x20) == 0)
  {
    goto LABEL_14;
  }
  double result = PB::Writer::write(this, *(float *)(v3 + 96));
  char v10 = *(unsigned char *)(v3 + 108);
  if (v10 < 0) {
    goto LABEL_26;
  }
LABEL_15:
  if ((v10 & 0x10) != 0) {
LABEL_16:
  }
    double result = PB::Writer::writeVarInt(this);
LABEL_17:
  uint64_t v11 = *(float **)(v3 + 32);
  uint64_t v12 = *(float **)(v3 + 40);
  while (v11 != v12)
  {
    float v13 = *v11++;
    double result = PB::Writer::write(this, v13);
  }
  char v14 = *(unsigned char *)(v3 + 108);
  if ((v14 & 2) != 0)
  {
    double result = PB::Writer::write(this, *(float *)(v3 + 80));
    char v14 = *(unsigned char *)(v3 + 108);
  }
  if ((v14 & 4) != 0)
  {
    float v15 = *(float *)(v3 + 84);
    return PB::Writer::write(this, v15);
  }
  return result;
}

uint64_t sub_227B49B2C(uint64_t result)
{
  *(_DWORD *)(result + 28) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)double result = &unk_26DC20738;
  return result;
}

void sub_227B49B54(PB::Base *this)
{
  *(void *)this = &unk_26DC20738;
  uint64_t v2 = *((void *)this + 2);
  *((void *)this + 2) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *((void *)this + 1);
  *((void *)this + 1) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }

  PB::Base::~Base(this);
}

void sub_227B49C08(PB::Base *a1)
{
  sub_227B49B54(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B49C40(uint64_t result, uint64_t a2)
{
  *(void *)double result = &unk_26DC20738;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 28) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  if (*(unsigned char *)(a2 + 32))
  {
    int v3 = *(_DWORD *)(a2 + 24);
    *(unsigned char *)(result + 32) = 1;
    *(_DWORD *)(result + 24) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 32) & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 32) & 2) != 0)
  {
LABEL_5:
    int v4 = *(_DWORD *)(a2 + 28);
    *(unsigned char *)(result + 32) = v2;
    *(_DWORD *)(result + 28) = v4;
  }
LABEL_6:
  if (*(void *)(a2 + 16)) {
    operator new();
  }
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227B49D98(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 32)) {
    PB::TextFormatter::format(this, "location");
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "maximum");
  }
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v6 + 32))(v6, this, "minimum");
  }
  if ((*(unsigned char *)(a1 + 32) & 2) != 0) {
    PB::TextFormatter::format(this, "state");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B49E84(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 32) |= 1u;
          unint64_t v20 = *((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
          uint64_t v22 = *(void *)this;
          if (v20 <= 0xFFFFFFFFFFFFFFF5 && v20 + 10 <= v21)
          {
            char v23 = 0;
            unsigned int v24 = 0;
            uint64_t v25 = 0;
            do
            {
              unint64_t v26 = v20 + 1;
              *((void *)this + 1) = v20 + 1;
              char v27 = *(unsigned char *)(v22 + v20);
              v25 |= (unint64_t)(v27 & 0x7F) << v23;
              if ((v27 & 0x80) == 0) {
                goto LABEL_57;
              }
              v23 += 7;
              unint64_t v20 = v26;
              BOOL v14 = v24++ > 8;
            }
            while (!v14);
LABEL_46:
            LODWORD(v25) = 0;
            goto LABEL_57;
          }
          char v37 = 0;
          unsigned int v38 = 0;
          uint64_t v25 = 0;
          if (v21 <= v20) {
            unint64_t v21 = *((void *)this + 1);
          }
          while (2)
          {
            if (v21 == v20)
            {
              LODWORD(v25) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v39 = v20 + 1;
              char v40 = *(unsigned char *)(v22 + v20);
              *((void *)this + 1) = v39;
              v25 |= (unint64_t)(v40 & 0x7F) << v37;
              if (v40 < 0)
              {
                v37 += 7;
                unint64_t v20 = v39;
                BOOL v14 = v38++ > 8;
                if (v14) {
                  goto LABEL_46;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v25) = 0;
              }
            }
            break;
          }
LABEL_57:
          *(_DWORD *)(a1 + 24) = v25;
          goto LABEL_62;
        case 2u:
          *(unsigned char *)(a1 + 32) |= 2u;
          unint64_t v29 = *((void *)this + 1);
          unint64_t v30 = *((void *)this + 2);
          uint64_t v31 = *(void *)this;
          if (v29 <= 0xFFFFFFFFFFFFFFF5 && v29 + 10 <= v30)
          {
            char v32 = 0;
            unsigned int v33 = 0;
            uint64_t v34 = 0;
            do
            {
              unint64_t v35 = v29 + 1;
              *((void *)this + 1) = v29 + 1;
              char v36 = *(unsigned char *)(v31 + v29);
              v34 |= (unint64_t)(v36 & 0x7F) << v32;
              if ((v36 & 0x80) == 0) {
                goto LABEL_61;
              }
              v32 += 7;
              unint64_t v29 = v35;
              BOOL v14 = v33++ > 8;
            }
            while (!v14);
LABEL_53:
            LODWORD(v34) = 0;
            goto LABEL_61;
          }
          char v41 = 0;
          unsigned int v42 = 0;
          uint64_t v34 = 0;
          if (v30 <= v29) {
            unint64_t v30 = *((void *)this + 1);
          }
          break;
        case 3u:
          operator new();
        case 4u:
          operator new();
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          goto LABEL_62;
      }
      while (1)
      {
        if (v30 == v29)
        {
          LODWORD(v34) = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_61;
        }
        unint64_t v43 = v29 + 1;
        char v44 = *(unsigned char *)(v31 + v29);
        *((void *)this + 1) = v43;
        v34 |= (unint64_t)(v44 & 0x7F) << v41;
        if ((v44 & 0x80) == 0) {
          break;
        }
        v41 += 7;
        unint64_t v29 = v43;
        BOOL v14 = v42++ > 8;
        if (v14) {
          goto LABEL_53;
        }
      }
      if (*((unsigned char *)this + 24)) {
        LODWORD(v34) = 0;
      }
LABEL_61:
      *(_DWORD *)(a1 + 28) = v34;
LABEL_62:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B4A2D8(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 32);
  }
  if ((v4 & 2) != 0) {
    uint64_t result = PB::Writer::writeVarInt(this);
  }
  uint64_t v5 = *(const PB::Base **)(v3 + 16);
  if (v5) {
    uint64_t result = PB::Writer::writeSubmessage(this, v5);
  }
  uint64_t v6 = *(const PB::Base **)(v3 + 8);
  if (v6)
  {
    return PB::Writer::writeSubmessage(this, v6);
  }
  return result;
}

double sub_227B4A36C(void *a1)
{
  *a1 = &unk_26DC20770;
  double result = 0.0;
  a1[2] = 0;
  *(void *)((char *)a1 + 28) = 0;
  return result;
}

void sub_227B4A39C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B4A3D4(uint64_t result, uint64_t a2)
{
  *(void *)double result = &unk_26DC20770;
  *(void *)(result + 16) = 0;
  *(void *)(result + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 32);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 32) = 1;
    *(void *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 32) & 8) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 24);
    v3 |= 8u;
    *(unsigned char *)(result + 32) = v3;
    *(_DWORD *)(result + 24) = v5;
    char v2 = *(unsigned char *)(a2 + 32);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 20);
    v3 |= 4u;
    *(unsigned char *)(result + 32) = v3;
    *(_DWORD *)(result + 20) = v6;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 2) == 0)
    {
LABEL_8:
      if ((v2 & 0x10) == 0) {
        return result;
      }
LABEL_12:
      int v8 = *(_DWORD *)(a2 + 28);
      *(unsigned char *)(result + 32) = v3 | 0x10;
      *(_DWORD *)(result + 28) = v8;
      return result;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 16);
  v3 |= 2u;
  *(unsigned char *)(result + 32) = v3;
  *(_DWORD *)(result + 16) = v7;
  if ((*(unsigned char *)(a2 + 32) & 0x10) != 0) {
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_227B4A494(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "eventTag");
    char v5 = *(unsigned char *)(a1 + 32);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 32) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "from");
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(this, "location");
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 1) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  if ((*(unsigned char *)(a1 + 32) & 0x10) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "to");
LABEL_7:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B4A578(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 32) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_104;
            case 2u:
              *(unsigned char *)(a1 + 32) |= 8u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v45 = 0;
                unsigned int v46 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_88;
                  }
                  unint64_t v47 = v21++;
                  char v48 = *(unsigned char *)(v22 + v47);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v48 & 0x7F) << v45;
                  if ((v48 & 0x80) == 0) {
                    break;
                  }
                  v45 += 7;
                  BOOL v14 = v46++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_87:
                    unint64_t v2 = v47 + 1;
                    goto LABEL_88;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_87;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_88;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_88:
              *(_DWORD *)(a1 + 24) = v25;
              goto LABEL_104;
            case 3u:
              *(unsigned char *)(a1 + 32) |= 4u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v49 = 0;
                unsigned int v50 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_93;
                  }
                  unint64_t v51 = v27++;
                  char v52 = *(unsigned char *)(v28 + v51);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v52 & 0x7F) << v49;
                  if ((v52 & 0x80) == 0) {
                    break;
                  }
                  v49 += 7;
                  BOOL v14 = v50++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_92:
                    unint64_t v2 = v51 + 1;
                    goto LABEL_93;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_92;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_93;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_93:
              *(_DWORD *)(a1 + 20) = v31;
              goto LABEL_104;
            case 4u:
              *(unsigned char *)(a1 + 32) |= 2u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v53 = 0;
                unsigned int v54 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_98;
                  }
                  unint64_t v55 = v33++;
                  char v56 = *(unsigned char *)(v34 + v55);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v56 & 0x7F) << v53;
                  if ((v56 & 0x80) == 0) {
                    break;
                  }
                  v53 += 7;
                  BOOL v14 = v54++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_97:
                    unint64_t v2 = v55 + 1;
                    goto LABEL_98;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_97;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_98;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_98:
              *(_DWORD *)(a1 + 16) = v37;
              goto LABEL_104;
            case 5u:
              *(unsigned char *)(a1 + 32) |= 0x10u;
              unint64_t v39 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v40 = *(void *)this;
              if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
              {
                char v57 = 0;
                unsigned int v58 = 0;
                uint64_t v43 = 0;
                if (v2 <= v39) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v39)
                  {
                    LODWORD(v43) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_103;
                  }
                  unint64_t v59 = v39++;
                  char v60 = *(unsigned char *)(v40 + v59);
                  *((void *)this + 1) = v39;
                  v43 |= (unint64_t)(v60 & 0x7F) << v57;
                  if ((v60 & 0x80) == 0) {
                    break;
                  }
                  v57 += 7;
                  BOOL v14 = v58++ > 8;
                  if (v14)
                  {
                    LODWORD(v43) = 0;
LABEL_102:
                    unint64_t v2 = v59 + 1;
                    goto LABEL_103;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v43) = 0;
                }
                goto LABEL_102;
              }
              char v41 = 0;
              unsigned int v42 = 0;
              uint64_t v43 = 0;
              do
              {
                unint64_t v2 = v39 + 1;
                *((void *)this + 1) = v39 + 1;
                char v44 = *(unsigned char *)(v40 + v39);
                v43 |= (unint64_t)(v44 & 0x7F) << v41;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_103;
                }
                v41 += 7;
                unint64_t v39 = v2;
                BOOL v14 = v42++ > 8;
              }
              while (!v14);
              LODWORD(v43) = 0;
LABEL_103:
              *(_DWORD *)(a1 + 28) = v43;
LABEL_104:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_104;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B4AAFC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 32);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 32) & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 2) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(unsigned char *)(v3 + 32) & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 0x10) == 0) {
    return result;
  }
LABEL_11:

  return PB::Writer::writeVarInt(this);
}

double sub_227B4ABC0(uint64_t a1)
{
  *(void *)a1 = &unk_26DC207A8;
  *(_DWORD *)(a1 + 124) = 0;
  *(_DWORD *)(a1 + 132) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  return result;
}

void sub_227B4AC08(uint64_t a1)
{
  *(void *)a1 = &unk_26DC207A8;
  int v6 = (void **)(a1 + 96);
  sub_227B8B5D0(&v6);
  int v6 = (void **)(a1 + 72);
  sub_227B8B5D0(&v6);
  uint64_t v2 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 56);
  *(void *)(a1 + 56) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  char v4 = *(void **)(a1 + 32);
  if (v4)
  {
    *(void *)(a1 + 40) = v4;
    operator delete(v4);
  }
  char v5 = *(void **)(a1 + 8);
  if (v5)
  {
    *(void *)(a1 + 16) = v5;
    operator delete(v5);
  }
  PB::Base::~Base((PB::Base *)a1);
}

void sub_227B4ACF8(uint64_t a1)
{
  sub_227B4AC08(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B4AD30(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 8) = 0u;
  char v4 = (char *)(a1 + 8);
  *(void *)a1 = &unk_26DC207A8;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_DWORD *)(a1 + 124) = 0;
  *(_DWORD *)(a1 + 132) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  if (*(unsigned char *)(a2 + 132))
  {
    int v6 = *(_DWORD *)(a2 + 120);
    *(unsigned char *)(a1 + 132) = 1;
    *(_DWORD *)(a1 + 120) = v6;
    char v5 = 3;
    if ((*(unsigned char *)(a2 + 132) & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v5 = 2;
  if ((*(unsigned char *)(a2 + 132) & 2) != 0)
  {
LABEL_5:
    int v7 = *(_DWORD *)(a2 + 124);
    *(unsigned char *)(a1 + 132) = v5;
    *(_DWORD *)(a1 + 124) = v7;
  }
LABEL_6:
  if (*(void *)(a2 + 72) != *(void *)(a2 + 80)) {
    sub_227B45894();
  }
  if (a1 != a2)
  {
    sub_227B8BA68((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
    sub_227B8BA68(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  if (*(void *)(a2 + 64)) {
    operator new();
  }
  if (*(void *)(a2 + 56)) {
    operator new();
  }
  char v8 = *(unsigned char *)(a2 + 132);
  if ((v8 & 8) != 0)
  {
    char v9 = *(unsigned char *)(a2 + 129);
    *(unsigned char *)(a1 + 132) |= 8u;
    *(unsigned char *)(a1 + 129) = v9;
    char v8 = *(unsigned char *)(a2 + 132);
  }
  if ((v8 & 4) != 0)
  {
    char v10 = *(unsigned char *)(a2 + 128);
    *(unsigned char *)(a1 + 132) |= 4u;
    *(unsigned char *)(a1 + 128) = v10;
  }
  if (*(void *)(a2 + 96) != *(void *)(a2 + 104)) {
    sub_227B4AF64();
  }
  return a1;
}

void sub_227B4AF64()
{
}

void sub_227B4B068(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_227B8BDA0((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_227B4B0B0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "baseline");
  }
  if (*(unsigned char *)(a1 + 132)) {
    PB::TextFormatter::format(this, "location");
  }
  uint64_t v6 = *(void *)(a1 + 64);
  if (v6) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v6 + 32))(v6, this, "minimum");
  }
  int v7 = *(uint64_t **)(a1 + 72);
  char v8 = *(uint64_t **)(a1 + 80);
  while (v7 != v8)
  {
    uint64_t v9 = *v7++;
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v9 + 32))(v9, this, "optical");
  }
  char v10 = *(unsigned char *)(a1 + 132);
  if ((v10 & 4) != 0)
  {
    PB::TextFormatter::format(this, "ringBufferUpdated");
    char v10 = *(unsigned char *)(a1 + 132);
    if ((v10 & 8) == 0)
    {
LABEL_11:
      if ((v10 & 2) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 132) & 8) == 0)
  {
    goto LABEL_11;
  }
  PB::TextFormatter::format(this, "runningMinAccepted");
  if ((*(unsigned char *)(a1 + 132) & 2) != 0) {
LABEL_12:
  }
    PB::TextFormatter::format(this, "state");
LABEL_13:
  unint64_t v11 = *(uint64_t **)(a1 + 96);
  unint64_t v12 = *(uint64_t **)(a1 + 104);
  while (v11 != v12)
  {
    uint64_t v13 = *v11++;
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v13 + 32))(v13, this, "temp");
  }
  BOOL v14 = *(float **)(a1 + 8);
  char v15 = *(float **)(a1 + 16);
  while (v14 != v15)
  {
    float v16 = *v14++;
    PB::TextFormatter::format(this, "tilt", v16);
  }
  unint64_t v17 = *(float **)(a1 + 32);
  char v18 = *(float **)(a1 + 40);
  while (v17 != v18)
  {
    float v19 = *v17++;
    PB::TextFormatter::format(this, "tip", v19);
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227B4B2E0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    char v8 = (void **)(a1 + 8);
    uint64_t v9 = a1 + 24;
    char v10 = (void **)(a1 + 32);
    uint64_t v11 = a1 + 48;
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        BOOL v18 = v14++ > 8;
        if (v18) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v24 = v15 & 7;
      if (v24 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v15 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 132) |= 1u;
          unint64_t v25 = *((void *)this + 1);
          unint64_t v26 = *((void *)this + 2);
          uint64_t v27 = *(void *)this;
          if (v25 <= 0xFFFFFFFFFFFFFFF5 && v25 + 10 <= v26)
          {
            char v28 = 0;
            unsigned int v29 = 0;
            uint64_t v30 = 0;
            do
            {
              unint64_t v31 = v25 + 1;
              *((void *)this + 1) = v25 + 1;
              char v32 = *(unsigned char *)(v27 + v25);
              v30 |= (unint64_t)(v32 & 0x7F) << v28;
              if ((v32 & 0x80) == 0) {
                goto LABEL_144;
              }
              v28 += 7;
              unint64_t v25 = v31;
              BOOL v18 = v29++ > 8;
            }
            while (!v18);
LABEL_107:
            LODWORD(v30) = 0;
            goto LABEL_144;
          }
          char v78 = 0;
          unsigned int v79 = 0;
          uint64_t v30 = 0;
          if (v26 <= v25) {
            unint64_t v26 = *((void *)this + 1);
          }
          while (2)
          {
            if (v26 == v25)
            {
              LODWORD(v30) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v80 = v25 + 1;
              char v81 = *(unsigned char *)(v27 + v25);
              *((void *)this + 1) = v80;
              v30 |= (unint64_t)(v81 & 0x7F) << v78;
              if (v81 < 0)
              {
                v78 += 7;
                unint64_t v25 = v80;
                BOOL v18 = v79++ > 8;
                if (v18) {
                  goto LABEL_107;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v30) = 0;
              }
            }
            break;
          }
LABEL_144:
          *(_DWORD *)(a1 + 120) = v30;
          goto LABEL_96;
        case 2u:
          *(unsigned char *)(a1 + 132) |= 2u;
          unint64_t v33 = *((void *)this + 1);
          unint64_t v34 = *((void *)this + 2);
          uint64_t v35 = *(void *)this;
          if (v33 <= 0xFFFFFFFFFFFFFFF5 && v33 + 10 <= v34)
          {
            char v36 = 0;
            unsigned int v37 = 0;
            uint64_t v38 = 0;
            do
            {
              unint64_t v39 = v33 + 1;
              *((void *)this + 1) = v33 + 1;
              char v40 = *(unsigned char *)(v35 + v33);
              v38 |= (unint64_t)(v40 & 0x7F) << v36;
              if ((v40 & 0x80) == 0) {
                goto LABEL_147;
              }
              v36 += 7;
              unint64_t v33 = v39;
              BOOL v18 = v37++ > 8;
            }
            while (!v18);
LABEL_114:
            LODWORD(v38) = 0;
            goto LABEL_147;
          }
          char v82 = 0;
          unsigned int v83 = 0;
          uint64_t v38 = 0;
          if (v34 <= v33) {
            unint64_t v34 = *((void *)this + 1);
          }
          while (2)
          {
            if (v34 == v33)
            {
              LODWORD(v38) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v84 = v33 + 1;
              char v85 = *(unsigned char *)(v35 + v33);
              *((void *)this + 1) = v84;
              v38 |= (unint64_t)(v85 & 0x7F) << v82;
              if (v85 < 0)
              {
                v82 += 7;
                unint64_t v33 = v84;
                BOOL v18 = v83++ > 8;
                if (v18) {
                  goto LABEL_114;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v38) = 0;
              }
            }
            break;
          }
LABEL_147:
          *(_DWORD *)(a1 + 124) = v38;
          goto LABEL_96;
        case 3u:
          sub_227B45D48();
        case 4u:
          if (v24 != 2)
          {
            unsigned int v87 = *(char **)(a1 + 40);
            unint64_t v86 = *(void *)(a1 + 48);
            if ((unint64_t)v87 >= v86)
            {
              unint64_t v91 = (char *)*v10;
              uint64_t v92 = (v87 - (unsigned char *)*v10) >> 2;
              unint64_t v93 = v92 + 1;
              if ((unint64_t)(v92 + 1) >> 62) {
LABEL_171:
              }
                sub_227B8B89C();
              uint64_t v94 = v86 - (void)v91;
              if (v94 >> 1 > v93) {
                unint64_t v93 = v94 >> 1;
              }
              if ((unint64_t)v94 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v95 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v95 = v93;
              }
              if (v95)
              {
                unint64_t v96 = (char *)sub_227B8BBB8(v11, v95);
                unint64_t v91 = *(char **)(a1 + 32);
                unsigned int v87 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v96 = 0;
              }
              unint64_t v103 = &v96[4 * v92];
              *(_DWORD *)unint64_t v103 = 0;
              unint64_t v88 = v103 + 4;
              while (v87 != v91)
              {
                int v104 = *((_DWORD *)v87 - 1);
                v87 -= 4;
                *((_DWORD *)v103 - 1) = v104;
                v103 -= 4;
              }
              *(void *)(a1 + 32) = v103;
              *(void *)(a1 + 40) = v88;
              *(void *)(a1 + 48) = &v96[4 * v95];
              if (v91) {
                operator delete(v91);
              }
            }
            else
            {
              *(_DWORD *)unsigned int v87 = 0;
              unint64_t v88 = v87 + 4;
            }
            *(void *)(a1 + 40) = v88;
            goto LABEL_162;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v41 = *((void *)this + 1);
          unint64_t v42 = *((void *)this + 2);
          while (v41 < v42 && !*((unsigned char *)this + 24))
          {
            char v44 = *(char **)(a1 + 40);
            unint64_t v43 = *(void *)(a1 + 48);
            if ((unint64_t)v44 >= v43)
            {
              unsigned int v46 = (char *)*v10;
              uint64_t v47 = (v44 - (unsigned char *)*v10) >> 2;
              unint64_t v48 = v47 + 1;
              if ((unint64_t)(v47 + 1) >> 62) {
                goto LABEL_171;
              }
              uint64_t v49 = v43 - (void)v46;
              if (v49 >> 1 > v48) {
                unint64_t v48 = v49 >> 1;
              }
              if ((unint64_t)v49 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v50 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v50 = v48;
              }
              if (v50)
              {
                unint64_t v51 = (char *)sub_227B8BBB8(v11, v50);
                unsigned int v46 = *(char **)(a1 + 32);
                char v44 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v51 = 0;
              }
              char v52 = &v51[4 * v47];
              *(_DWORD *)char v52 = 0;
              char v45 = v52 + 4;
              while (v44 != v46)
              {
                int v53 = *((_DWORD *)v44 - 1);
                v44 -= 4;
                *((_DWORD *)v52 - 1) = v53;
                v52 -= 4;
              }
              *(void *)(a1 + 32) = v52;
              *(void *)(a1 + 40) = v45;
              *(void *)(a1 + 48) = &v51[4 * v50];
              if (v46) {
                operator delete(v46);
              }
            }
            else
            {
              *(_DWORD *)char v44 = 0;
              char v45 = v44 + 4;
            }
            *(void *)(a1 + 40) = v45;
            unint64_t v54 = *((void *)this + 1);
            if (v54 > 0xFFFFFFFFFFFFFFFBLL || v54 + 4 > *((void *)this + 2)) {
              goto LABEL_123;
            }
            *(v45 - 1) = *(_DWORD *)(*(void *)this + v54);
            unint64_t v42 = *((void *)this + 2);
            unint64_t v41 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v41;
          }
          goto LABEL_95;
        case 5u:
          if (v24 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v55 = *((void *)this + 1);
            unint64_t v56 = *((void *)this + 2);
            while (v55 < v56 && !*((unsigned char *)this + 24))
            {
              unsigned int v58 = *(char **)(a1 + 16);
              unint64_t v57 = *(void *)(a1 + 24);
              if ((unint64_t)v58 >= v57)
              {
                char v60 = (char *)*v8;
                uint64_t v61 = (v58 - (unsigned char *)*v8) >> 2;
                unint64_t v62 = v61 + 1;
                if ((unint64_t)(v61 + 1) >> 62) {
                  goto LABEL_172;
                }
                uint64_t v63 = v57 - (void)v60;
                if (v63 >> 1 > v62) {
                  unint64_t v62 = v63 >> 1;
                }
                if ((unint64_t)v63 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v64 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v64 = v62;
                }
                if (v64)
                {
                  unint64_t v65 = (char *)sub_227B8BBB8(v9, v64);
                  char v60 = *(char **)(a1 + 8);
                  unsigned int v58 = *(char **)(a1 + 16);
                }
                else
                {
                  unint64_t v65 = 0;
                }
                char v66 = &v65[4 * v61];
                *(_DWORD *)char v66 = 0;
                unint64_t v59 = v66 + 4;
                while (v58 != v60)
                {
                  int v67 = *((_DWORD *)v58 - 1);
                  v58 -= 4;
                  *((_DWORD *)v66 - 1) = v67;
                  v66 -= 4;
                }
                *(void *)(a1 + 8) = v66;
                *(void *)(a1 + 16) = v59;
                *(void *)(a1 + 24) = &v65[4 * v64];
                if (v60) {
                  operator delete(v60);
                }
              }
              else
              {
                *(_DWORD *)unsigned int v58 = 0;
                unint64_t v59 = v58 + 4;
              }
              *(void *)(a1 + 16) = v59;
              unint64_t v68 = *((void *)this + 1);
              if (v68 > 0xFFFFFFFFFFFFFFFBLL || v68 + 4 > *((void *)this + 2))
              {
LABEL_123:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v59 - 1) = *(_DWORD *)(*(void *)this + v68);
              unint64_t v56 = *((void *)this + 2);
              unint64_t v55 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v55;
            }
LABEL_95:
            PB::Reader::recallMark();
          }
          else
          {
            unint64_t v90 = *(char **)(a1 + 16);
            unint64_t v89 = *(void *)(a1 + 24);
            if ((unint64_t)v90 >= v89)
            {
              char v97 = (char *)*v8;
              uint64_t v98 = (v90 - (unsigned char *)*v8) >> 2;
              unint64_t v99 = v98 + 1;
              if ((unint64_t)(v98 + 1) >> 62) {
LABEL_172:
              }
                sub_227B8B89C();
              uint64_t v100 = v89 - (void)v97;
              if (v100 >> 1 > v99) {
                unint64_t v99 = v100 >> 1;
              }
              if ((unint64_t)v100 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v101 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v101 = v99;
              }
              if (v101)
              {
                unint64_t v102 = (char *)sub_227B8BBB8(v9, v101);
                char v97 = *(char **)(a1 + 8);
                unint64_t v90 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v102 = 0;
              }
              int v105 = &v102[4 * v98];
              *(_DWORD *)int v105 = 0;
              unint64_t v88 = v105 + 4;
              while (v90 != v97)
              {
                int v106 = *((_DWORD *)v90 - 1);
                v90 -= 4;
                *((_DWORD *)v105 - 1) = v106;
                v105 -= 4;
              }
              *(void *)(a1 + 8) = v105;
              *(void *)(a1 + 16) = v88;
              *(void *)(a1 + 24) = &v102[4 * v101];
              if (v97) {
                operator delete(v97);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v90 = 0;
              unint64_t v88 = v90 + 4;
            }
            *(void *)(a1 + 16) = v88;
LABEL_162:
            unint64_t v107 = *((void *)this + 1);
            if (v107 <= 0xFFFFFFFFFFFFFFFBLL && v107 + 4 <= *((void *)this + 2))
            {
              *(v88 - 1) = *(_DWORD *)(*(void *)this + v107);
              *((void *)this + 1) += 4;
            }
            else
            {
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_96:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        case 6u:
          operator new();
        case 7u:
          operator new();
        case 8u:
          *(unsigned char *)(a1 + 132) |= 8u;
          unint64_t v69 = *((void *)this + 1);
          if (v69 >= *((void *)this + 2))
          {
            BOOL v72 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v70 = v69 + 1;
            int v71 = *(unsigned __int8 *)(*(void *)this + v69);
            *((void *)this + 1) = v70;
            BOOL v72 = v71 != 0;
          }
          *(unsigned char *)(a1 + 129) = v72;
          goto LABEL_96;
        case 9u:
          *(unsigned char *)(a1 + 132) |= 4u;
          unint64_t v73 = *((void *)this + 1);
          if (v73 >= *((void *)this + 2))
          {
            BOOL v76 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v74 = v73 + 1;
            int v75 = *(unsigned __int8 *)(*(void *)this + v73);
            *((void *)this + 1) = v74;
            BOOL v76 = v75 != 0;
          }
          *(unsigned char *)(a1 + 128) = v76;
          goto LABEL_96;
        case 0xAu:
          sub_227B4BBE4();
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_96;
      }
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v15 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v21 = v2 + 1;
      char v22 = *(unsigned char *)(v12 + v2);
      *((void *)this + 1) = v21;
      v15 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0) {
        goto LABEL_21;
      }
      v19 += 7;
      unint64_t v2 = v21;
      if (v20++ >= 9)
      {
LABEL_20:
        unint64_t v15 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

void sub_227B4BBE4()
{
}

void sub_227B4BCE0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_227B8BDA0((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_227B4BD24(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 132);
  if (v4)
  {
    double result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 132);
  }
  if ((v4 & 2) != 0) {
    double result = PB::Writer::writeVarInt(this);
  }
  uint64_t v5 = *(const PB::Base ***)(v3 + 72);
  uint64_t v6 = *(const PB::Base ***)(v3 + 80);
  while (v5 != v6)
  {
    int v7 = *v5++;
    double result = PB::Writer::writeSubmessage(this, v7);
  }
  char v8 = *(float **)(v3 + 32);
  uint64_t v9 = *(float **)(v3 + 40);
  while (v8 != v9)
  {
    float v10 = *v8++;
    double result = PB::Writer::write(this, v10);
  }
  uint64_t v11 = *(float **)(v3 + 8);
  uint64_t v12 = *(float **)(v3 + 16);
  while (v11 != v12)
  {
    float v13 = *v11++;
    double result = PB::Writer::write(this, v13);
  }
  unsigned int v14 = *(const PB::Base **)(v3 + 64);
  if (v14) {
    double result = PB::Writer::writeSubmessage(this, v14);
  }
  unint64_t v15 = *(const PB::Base **)(v3 + 56);
  if (v15) {
    double result = PB::Writer::writeSubmessage(this, v15);
  }
  char v16 = *(unsigned char *)(v3 + 132);
  if ((v16 & 8) != 0)
  {
    double result = PB::Writer::write(this);
    char v16 = *(unsigned char *)(v3 + 132);
  }
  if ((v16 & 4) != 0) {
    double result = PB::Writer::write(this);
  }
  BOOL v18 = *(const PB::Base ***)(v3 + 96);
  char v17 = *(const PB::Base ***)(v3 + 104);
  while (v18 != v17)
  {
    char v19 = *v18++;
    double result = PB::Writer::writeSubmessage(this, v19);
  }
  return result;
}

uint64_t sub_227B4BE58(uint64_t result)
{
  *(void *)double result = &unk_26DC207E0;
  *(_DWORD *)(result + 68) = 0;
  return result;
}

void sub_227B4BE80(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B4BEB8(uint64_t result, uint64_t a2)
{
  *(void *)double result = &unk_26DC207E0;
  *(_DWORD *)(result + 68) = 0;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    __int16 v3 = 1;
    *(_WORD *)(result + 68) = 1;
    *(void *)(result + 8) = v4;
    __int16 v2 = *(_WORD *)(a2 + 68);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 16);
    v3 |= 2u;
    *(_WORD *)(result + 68) = v3;
    *(_DWORD *)(result + 16) = v5;
    __int16 v2 = *(_WORD *)(a2 + 68);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 20);
    v3 |= 4u;
    *(_WORD *)(result + 68) = v3;
    *(_DWORD *)(result + 20) = v6;
    __int16 v2 = *(_WORD *)(a2 + 68);
    if ((v2 & 8) == 0)
    {
LABEL_8:
      if ((v2 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_21;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 24);
  v3 |= 8u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 24) = v7;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x10) == 0)
  {
LABEL_9:
    if ((v2 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  int v8 = *(_DWORD *)(a2 + 28);
  v3 |= 0x10u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 28) = v8;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x20) == 0)
  {
LABEL_10:
    if ((v2 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v9 = *(_DWORD *)(a2 + 32);
  v3 |= 0x20u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 32) = v9;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x40) == 0)
  {
LABEL_11:
    if ((v2 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_24;
  }
LABEL_23:
  int v10 = *(_DWORD *)(a2 + 36);
  v3 |= 0x40u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 36) = v10;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x100) == 0)
  {
LABEL_12:
    if ((v2 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v11 = *(_DWORD *)(a2 + 44);
  v3 |= 0x100u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 44) = v11;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x200) == 0)
  {
LABEL_13:
    if ((v2 & 0x400) == 0) {
      goto LABEL_14;
    }
    goto LABEL_26;
  }
LABEL_25:
  int v12 = *(_DWORD *)(a2 + 48);
  v3 |= 0x200u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 48) = v12;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x400) == 0)
  {
LABEL_14:
    if ((v2 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_27;
  }
LABEL_26:
  int v13 = *(_DWORD *)(a2 + 52);
  v3 |= 0x400u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 52) = v13;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x80) == 0)
  {
LABEL_15:
    if ((v2 & 0x800) == 0) {
      goto LABEL_16;
    }
    goto LABEL_28;
  }
LABEL_27:
  int v14 = *(_DWORD *)(a2 + 40);
  v3 |= 0x80u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 40) = v14;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x800) == 0)
  {
LABEL_16:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_29;
  }
LABEL_28:
  int v15 = *(_DWORD *)(a2 + 56);
  v3 |= 0x800u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 56) = v15;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x1000) == 0)
  {
LABEL_17:
    if ((v2 & 0x2000) == 0) {
      return result;
    }
LABEL_30:
    char v17 = *(unsigned char *)(a2 + 64);
    *(_WORD *)(result + 68) = v3 | 0x2000;
    *(unsigned char *)(result + 64) = v17;
    return result;
  }
LABEL_29:
  int v16 = *(_DWORD *)(a2 + 60);
  v3 |= 0x1000u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 60) = v16;
  if ((*(_WORD *)(a2 + 68) & 0x2000) != 0) {
    goto LABEL_30;
  }
  return result;
}

uint64_t sub_227B4C06C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "deltaPositionX", *(float *)(a1 + 16));
    __int16 v5 = *(_WORD *)(a1 + 68);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_21;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "deltaPositionY", *(float *)(a1 + 20));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "deltaPositionZ", *(float *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "deltaVelocityX", *(float *)(a1 + 28));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x20) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "deltaVelocityY", *(float *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "deltaVelocityZ", *(float *)(a1 + 36));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x2000) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "isBIO");
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "quaternionW", *(float *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x100) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "quaternionX", *(float *)(a1 + 44));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "quaternionY", *(float *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x400) == 0)
  {
LABEL_12:
    if ((v5 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(this, "quaternionZ", *(float *)(a1 + 52));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x800) == 0)
  {
LABEL_13:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "referenceFrame");
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x1000) == 0)
  {
LABEL_14:
    if ((v5 & 1) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_31:
  PB::TextFormatter::format(this, "staticFlag");
  if (*(_WORD *)(a1 + 68)) {
LABEL_15:
  }
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
LABEL_16:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B4C270(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 68) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              unint64_t v2 = *((void *)this + 1) + 8;
              goto LABEL_91;
            case 2u:
              *(_WORD *)(a1 + 68) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_90;
            case 3u:
              *(_WORD *)(a1 + 68) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_90;
            case 4u:
              *(_WORD *)(a1 + 68) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_90;
            case 5u:
              *(_WORD *)(a1 + 68) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_90;
            case 6u:
              *(_WORD *)(a1 + 68) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_90;
            case 7u:
              *(_WORD *)(a1 + 68) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_90;
            case 8u:
              *(_WORD *)(a1 + 68) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_90;
            case 9u:
              *(_WORD *)(a1 + 68) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_90;
            case 0xAu:
              *(_WORD *)(a1 + 68) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_90;
            case 0xBu:
              *(_WORD *)(a1 + 68) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
LABEL_90:
                unint64_t v2 = *((void *)this + 1) + 4;
LABEL_91:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_56:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_102;
            case 0xCu:
              *(_WORD *)(a1 + 68) |= 0x800u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v35 = 0;
                unsigned int v36 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_96;
                  }
                  unint64_t v37 = v21++;
                  char v38 = *(unsigned char *)(v22 + v37);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v38 & 0x7F) << v35;
                  if ((v38 & 0x80) == 0) {
                    break;
                  }
                  v35 += 7;
                  BOOL v14 = v36++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_95:
                    unint64_t v2 = v37 + 1;
                    goto LABEL_96;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_95;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_96;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_96:
              *(_DWORD *)(a1 + 56) = v25;
              goto LABEL_102;
            case 0xDu:
              *(_WORD *)(a1 + 68) |= 0x1000u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v39 = 0;
                unsigned int v40 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_101;
                  }
                  unint64_t v41 = v27++;
                  char v42 = *(unsigned char *)(v28 + v41);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v42 & 0x7F) << v39;
                  if ((v42 & 0x80) == 0) {
                    break;
                  }
                  v39 += 7;
                  BOOL v14 = v40++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_100:
                    unint64_t v2 = v41 + 1;
                    goto LABEL_101;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_100;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_101;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_101:
              *(_DWORD *)(a1 + 60) = v31;
LABEL_102:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 0xEu:
              *(_WORD *)(a1 + 68) |= 0x2000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v34 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v33 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v34 = v33 != 0;
              }
              *(unsigned char *)(a1 + 64) = v34;
              goto LABEL_102;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_102;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B4C8BC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 68);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    __int16 v4 = *(_WORD *)(v3 + 68);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x20) == 0)
  {
LABEL_7:
    if ((v4 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x40) == 0)
  {
LABEL_8:
    if ((v4 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x100) == 0)
  {
LABEL_9:
    if ((v4 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x200) == 0)
  {
LABEL_10:
    if ((v4 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x400) == 0)
  {
LABEL_11:
    if ((v4 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x80) == 0)
  {
LABEL_12:
    if ((v4 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x800) == 0)
  {
LABEL_13:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_14;
    }
LABEL_28:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(_WORD *)(v3 + 68) & 0x2000) == 0) {
      return result;
    }
    goto LABEL_29;
  }
LABEL_27:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x1000) != 0) {
    goto LABEL_28;
  }
LABEL_14:
  if ((v4 & 0x2000) == 0) {
    return result;
  }
LABEL_29:

  return PB::Writer::write(this);
}

double sub_227B4CA7C(uint64_t a1)
{
  *(void *)a1 = &unk_26DC20818;
  *(_DWORD *)(a1 + 88) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)(a1 + 72) = 0;
  return result;
}

void sub_227B4CAB8(PB::Base *this)
{
  *(void *)this = &unk_26DC20818;
  unint64_t v2 = (void *)*((void *)this + 7);
  if (v2)
  {
    *((void *)this + 8) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 4);
  if (v3)
  {
    *((void *)this + 5) = v3;
    operator delete(v3);
  }
  __int16 v4 = (void *)*((void *)this + 1);
  if (v4)
  {
    *((void *)this + 2) = v4;
    operator delete(v4);
  }

  PB::Base::~Base(this);
}

void sub_227B4CB3C(PB::Base *a1)
{
  sub_227B4CAB8(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B4CB74(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 8) = 0u;
  __int16 v4 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 56) = 0u;
  __int16 v5 = (char *)(a1 + 56);
  *(void *)a1 = &unk_26DC20818;
  *(_DWORD *)(a1 + 88) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 72) = 0;
  if (a1 != a2)
  {
    sub_227B8B74C((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 3);
    sub_227B8B74C(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
    sub_227B8B74C(v5, *(char **)(a2 + 56), *(void *)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 3);
  }
  if (*(unsigned char *)(a2 + 88))
  {
    uint64_t v6 = *(void *)(a2 + 80);
    *(unsigned char *)(a1 + 88) |= 1u;
    *(void *)(a1 + 80) = v6;
  }
  return a1;
}

uint64_t sub_227B4CC4C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(double **)(a1 + 8);
  uint64_t v6 = *(double **)(a1 + 16);
  while (v5 != v6)
  {
    double v7 = *v5++;
    PB::TextFormatter::format(this, "historicalMeanSeaLevelPressure", v7);
  }
  uint64_t v8 = *(double **)(a1 + 32);
  char v9 = *(double **)(a1 + 40);
  while (v8 != v9)
  {
    double v10 = *v8++;
    PB::TextFormatter::format(this, "historicalTimestamp", v10);
  }
  unint64_t v11 = *(double **)(a1 + 56);
  unint64_t v12 = *(double **)(a1 + 64);
  while (v11 != v12)
  {
    double v13 = *v11++;
    PB::TextFormatter::format(this, "historicalUncertainty", v13);
  }
  if (*(unsigned char *)(a1 + 88)) {
    PB::TextFormatter::format(this, "refreshTime", *(double *)(a1 + 80));
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227B4CD40(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = (void **)(a1 + 56);
    uint64_t v102 = a1 + 72;
    char v9 = (void **)(a1 + 8);
    uint64_t v10 = a1 + 24;
    unint64_t v11 = (void **)(a1 + 32);
    uint64_t v12 = a1 + 48;
    while (1)
    {
      uint64_t v13 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v14 = 0;
      unsigned int v15 = 0;
      unint64_t v16 = 0;
      while (1)
      {
        unint64_t v17 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v18 = *(unsigned char *)(v13 + v2);
        v16 |= (unint64_t)(v18 & 0x7F) << v14;
        if ((v18 & 0x80) == 0) {
          break;
        }
        v14 += 7;
        unint64_t v2 = v17;
        if (v15++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v25 = v16 & 7;
      if (v25 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v16 >> 3))
      {
        case 1u:
          if (v25 != 2)
          {
            unint64_t v70 = *(char **)(a1 + 40);
            unint64_t v69 = *(void *)(a1 + 48);
            if ((unint64_t)v70 >= v69)
            {
              BOOL v76 = (char *)*v11;
              uint64_t v77 = (v70 - (unsigned char *)*v11) >> 3;
              unint64_t v78 = v77 + 1;
              if ((unint64_t)(v77 + 1) >> 61) {
LABEL_166:
              }
                sub_227B8B89C();
              uint64_t v79 = v69 - (void)v76;
              if (v79 >> 2 > v78) {
                unint64_t v78 = v79 >> 2;
              }
              if ((unint64_t)v79 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v80 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v80 = v78;
              }
              if (v80)
              {
                char v81 = (char *)sub_227B8B8B4(v12, v80);
                BOOL v76 = *(char **)(a1 + 32);
                unint64_t v70 = *(char **)(a1 + 40);
              }
              else
              {
                char v81 = 0;
              }
              uint64_t v94 = &v81[8 * v77];
              *(void *)uint64_t v94 = 0;
              int v71 = v94 + 8;
              while (v70 != v76)
              {
                uint64_t v95 = *((void *)v70 - 1);
                v70 -= 8;
                *((void *)v94 - 1) = v95;
                v94 -= 8;
              }
              *(void *)(a1 + 32) = v94;
              *(void *)(a1 + 40) = v71;
              *(void *)(a1 + 48) = &v81[8 * v80];
              if (v76) {
                operator delete(v76);
              }
            }
            else
            {
              *(void *)unint64_t v70 = 0;
              int v71 = v70 + 8;
            }
            *(void *)(a1 + 40) = v71;
            goto LABEL_153;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v26 = *((void *)this + 1);
          unint64_t v27 = *((void *)this + 2);
          while (v26 < v27 && !*((unsigned char *)this + 24))
          {
            char v29 = *(char **)(a1 + 40);
            unint64_t v28 = *(void *)(a1 + 48);
            if ((unint64_t)v29 >= v28)
            {
              uint64_t v31 = (char *)*v11;
              uint64_t v32 = (v29 - (unsigned char *)*v11) >> 3;
              unint64_t v33 = v32 + 1;
              if ((unint64_t)(v32 + 1) >> 61) {
                goto LABEL_166;
              }
              uint64_t v34 = v28 - (void)v31;
              if (v34 >> 2 > v33) {
                unint64_t v33 = v34 >> 2;
              }
              if ((unint64_t)v34 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v35 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v35 = v33;
              }
              if (v35)
              {
                unsigned int v36 = (char *)sub_227B8B8B4(v12, v35);
                uint64_t v31 = *(char **)(a1 + 32);
                char v29 = *(char **)(a1 + 40);
              }
              else
              {
                unsigned int v36 = 0;
              }
              unint64_t v37 = &v36[8 * v32];
              *(void *)unint64_t v37 = 0;
              unsigned int v30 = v37 + 8;
              while (v29 != v31)
              {
                uint64_t v38 = *((void *)v29 - 1);
                v29 -= 8;
                *((void *)v37 - 1) = v38;
                v37 -= 8;
              }
              *(void *)(a1 + 32) = v37;
              *(void *)(a1 + 40) = v30;
              *(void *)(a1 + 48) = &v36[8 * v35];
              if (v31) {
                operator delete(v31);
              }
            }
            else
            {
              *(void *)char v29 = 0;
              unsigned int v30 = v29 + 8;
            }
            *(void *)(a1 + 40) = v30;
            unint64_t v39 = *((void *)this + 1);
            if (v39 > 0xFFFFFFFFFFFFFFF7 || v39 + 8 > *((void *)this + 2)) {
              goto LABEL_106;
            }
            *(v30 - 1) = *(void *)(*(void *)this + v39);
            unint64_t v27 = *((void *)this + 2);
            unint64_t v26 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v26;
          }
          goto LABEL_107;
        case 2u:
          if (v25 != 2)
          {
            unint64_t v73 = *(char **)(a1 + 16);
            unint64_t v72 = *(void *)(a1 + 24);
            if ((unint64_t)v73 >= v72)
            {
              char v82 = (char *)*v9;
              uint64_t v83 = (v73 - (unsigned char *)*v9) >> 3;
              unint64_t v84 = v83 + 1;
              if ((unint64_t)(v83 + 1) >> 61) {
LABEL_167:
              }
                sub_227B8B89C();
              uint64_t v85 = v72 - (void)v82;
              if (v85 >> 2 > v84) {
                unint64_t v84 = v85 >> 2;
              }
              if ((unint64_t)v85 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v86 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v86 = v84;
              }
              if (v86)
              {
                unsigned int v87 = (char *)sub_227B8B8B4(v10, v86);
                char v82 = *(char **)(a1 + 8);
                unint64_t v73 = *(char **)(a1 + 16);
              }
              else
              {
                unsigned int v87 = 0;
              }
              unint64_t v96 = &v87[8 * v83];
              *(void *)unint64_t v96 = 0;
              int v71 = v96 + 8;
              while (v73 != v82)
              {
                uint64_t v97 = *((void *)v73 - 1);
                v73 -= 8;
                *((void *)v96 - 1) = v97;
                v96 -= 8;
              }
              *(void *)(a1 + 8) = v96;
              *(void *)(a1 + 16) = v71;
              *(void *)(a1 + 24) = &v87[8 * v86];
              if (v82) {
                operator delete(v82);
              }
            }
            else
            {
              *(void *)unint64_t v73 = 0;
              int v71 = v73 + 8;
            }
            *(void *)(a1 + 16) = v71;
            goto LABEL_153;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v40 = *((void *)this + 1);
          unint64_t v41 = *((void *)this + 2);
          while (v40 < v41 && !*((unsigned char *)this + 24))
          {
            unint64_t v43 = *(char **)(a1 + 16);
            unint64_t v42 = *(void *)(a1 + 24);
            if ((unint64_t)v43 >= v42)
            {
              char v45 = (char *)*v9;
              uint64_t v46 = (v43 - (unsigned char *)*v9) >> 3;
              unint64_t v47 = v46 + 1;
              if ((unint64_t)(v46 + 1) >> 61) {
                goto LABEL_167;
              }
              uint64_t v48 = v42 - (void)v45;
              if (v48 >> 2 > v47) {
                unint64_t v47 = v48 >> 2;
              }
              if ((unint64_t)v48 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v49 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v49 = v47;
              }
              if (v49)
              {
                unint64_t v50 = (char *)sub_227B8B8B4(v10, v49);
                char v45 = *(char **)(a1 + 8);
                unint64_t v43 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v50 = 0;
              }
              unint64_t v51 = &v50[8 * v46];
              *(void *)unint64_t v51 = 0;
              char v44 = v51 + 8;
              while (v43 != v45)
              {
                uint64_t v52 = *((void *)v43 - 1);
                v43 -= 8;
                *((void *)v51 - 1) = v52;
                v51 -= 8;
              }
              *(void *)(a1 + 8) = v51;
              *(void *)(a1 + 16) = v44;
              *(void *)(a1 + 24) = &v50[8 * v49];
              if (v45) {
                operator delete(v45);
              }
            }
            else
            {
              *(void *)unint64_t v43 = 0;
              char v44 = v43 + 8;
            }
            *(void *)(a1 + 16) = v44;
            unint64_t v53 = *((void *)this + 1);
            if (v53 > 0xFFFFFFFFFFFFFFF7 || v53 + 8 > *((void *)this + 2)) {
              goto LABEL_106;
            }
            *(v44 - 1) = *(void *)(*(void *)this + v53);
            unint64_t v41 = *((void *)this + 2);
            unint64_t v40 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v40;
          }
          goto LABEL_107;
        case 3u:
          if (v25 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v54 = *((void *)this + 1);
            unint64_t v55 = *((void *)this + 2);
            while (v54 < v55 && !*((unsigned char *)this + 24))
            {
              unint64_t v57 = *(char **)(a1 + 64);
              unint64_t v56 = *(void *)(a1 + 72);
              if ((unint64_t)v57 >= v56)
              {
                unint64_t v59 = (char *)*v8;
                uint64_t v60 = (v57 - (unsigned char *)*v8) >> 3;
                unint64_t v61 = v60 + 1;
                if ((unint64_t)(v60 + 1) >> 61) {
                  goto LABEL_168;
                }
                uint64_t v62 = v56 - (void)v59;
                if (v62 >> 2 > v61) {
                  unint64_t v61 = v62 >> 2;
                }
                if ((unint64_t)v62 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v63 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v63 = v61;
                }
                if (v63)
                {
                  unint64_t v64 = (char *)sub_227B8B8B4(v102, v63);
                  unint64_t v59 = *(char **)(a1 + 56);
                  unint64_t v57 = *(char **)(a1 + 64);
                }
                else
                {
                  unint64_t v64 = 0;
                }
                unint64_t v65 = &v64[8 * v60];
                *(void *)unint64_t v65 = 0;
                unsigned int v58 = v65 + 8;
                while (v57 != v59)
                {
                  uint64_t v66 = *((void *)v57 - 1);
                  v57 -= 8;
                  *((void *)v65 - 1) = v66;
                  v65 -= 8;
                }
                *(void *)(a1 + 56) = v65;
                *(void *)(a1 + 64) = v58;
                *(void *)(a1 + 72) = &v64[8 * v63];
                if (v59) {
                  operator delete(v59);
                }
              }
              else
              {
                *(void *)unint64_t v57 = 0;
                unsigned int v58 = v57 + 8;
              }
              *(void *)(a1 + 64) = v58;
              unint64_t v67 = *((void *)this + 1);
              if (v67 > 0xFFFFFFFFFFFFFFF7 || v67 + 8 > *((void *)this + 2))
              {
LABEL_106:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v58 - 1) = *(void *)(*(void *)this + v67);
              unint64_t v55 = *((void *)this + 2);
              unint64_t v54 = *((void *)this + 1) + 8;
              *((void *)this + 1) = v54;
            }
LABEL_107:
            PB::Reader::recallMark();
          }
          else
          {
            int v75 = *(char **)(a1 + 64);
            unint64_t v74 = *(void *)(a1 + 72);
            if ((unint64_t)v75 >= v74)
            {
              unint64_t v88 = (char *)*v8;
              uint64_t v89 = (v75 - (unsigned char *)*v8) >> 3;
              unint64_t v90 = v89 + 1;
              if ((unint64_t)(v89 + 1) >> 61) {
LABEL_168:
              }
                sub_227B8B89C();
              uint64_t v91 = v74 - (void)v88;
              if (v91 >> 2 > v90) {
                unint64_t v90 = v91 >> 2;
              }
              if ((unint64_t)v91 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v92 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v92 = v90;
              }
              if (v92)
              {
                unint64_t v93 = (char *)sub_227B8B8B4(v102, v92);
                unint64_t v88 = *(char **)(a1 + 56);
                int v75 = *(char **)(a1 + 64);
              }
              else
              {
                unint64_t v93 = 0;
              }
              uint64_t v98 = &v93[8 * v89];
              *(void *)uint64_t v98 = 0;
              int v71 = v98 + 8;
              while (v75 != v88)
              {
                uint64_t v99 = *((void *)v75 - 1);
                v75 -= 8;
                *((void *)v98 - 1) = v99;
                v98 -= 8;
              }
              *(void *)(a1 + 56) = v98;
              *(void *)(a1 + 64) = v71;
              *(void *)(a1 + 72) = &v93[8 * v92];
              if (v88) {
                operator delete(v88);
              }
            }
            else
            {
              *(void *)int v75 = 0;
              int v71 = v75 + 8;
            }
            *(void *)(a1 + 64) = v71;
LABEL_153:
            unint64_t v100 = *((void *)this + 1);
            if (v100 <= 0xFFFFFFFFFFFFFFF7 && v100 + 8 <= *((void *)this + 2))
            {
              *(v71 - 1) = *(void *)(*(void *)this + v100);
LABEL_157:
              *((void *)this + 1) += 8;
            }
            else
            {
LABEL_155:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_158:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || *((unsigned char *)this + 24)) {
            return v4 == 0;
          }
          break;
        case 4u:
          *(unsigned char *)(a1 + 88) |= 1u;
          unint64_t v68 = *((void *)this + 1);
          if (v68 > 0xFFFFFFFFFFFFFFF7 || v68 + 8 > *((void *)this + 2)) {
            goto LABEL_155;
          }
          *(void *)(a1 + 80) = *(void *)(*(void *)this + v68);
          goto LABEL_157;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_158;
      }
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v16 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v22 = v2 + 1;
      char v23 = *(unsigned char *)(v13 + v2);
      *((void *)this + 1) = v22;
      v16 |= (unint64_t)(v23 & 0x7F) << v20;
      if ((v23 & 0x80) == 0) {
        goto LABEL_21;
      }
      v20 += 7;
      unint64_t v2 = v22;
      if (v21++ >= 9)
      {
LABEL_20:
        unint64_t v16 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B4D490(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(double **)(result + 32);
  __int16 v5 = *(double **)(result + 40);
  while (v4 != v5)
  {
    double v6 = *v4++;
    double result = PB::Writer::write(this, v6);
  }
  double v7 = *(double **)(v3 + 8);
  uint64_t v8 = *(double **)(v3 + 16);
  while (v7 != v8)
  {
    double v9 = *v7++;
    double result = PB::Writer::write(this, v9);
  }
  uint64_t v10 = *(double **)(v3 + 56);
  unint64_t v11 = *(double **)(v3 + 64);
  while (v10 != v11)
  {
    double v12 = *v10++;
    double result = PB::Writer::write(this, v12);
  }
  if (*(unsigned char *)(v3 + 88))
  {
    double v13 = *(double *)(v3 + 80);
    return PB::Writer::write(this, v13);
  }
  return result;
}

void *sub_227B4D550(void *result)
{
  *double result = &unk_26DC20850;
  result[1] = 0;
  return result;
}

void sub_227B4D570(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC20850;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227B4D5F0(PB::Base *a1)
{
  sub_227B4D570(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227B4D628(void *result, uint64_t a2)
{
  *double result = &unk_26DC20850;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227B4D6D0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B4D74C(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B4D948(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

void *sub_227B4D964(void *result)
{
  *uint64_t result = &unk_26DC20888;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void sub_227B4D988(uint64_t a1)
{
  *(void *)a1 = &unk_26DC20888;
  uint64_t v4 = *(void *)(a1 + 24);
  unint64_t v2 = (void *)(a1 + 24);
  uint64_t v3 = v4;
  *unint64_t v2 = 0;
  if (v4) {
    sub_227B8B690((uint64_t)v2, v3);
  }
  uint64_t v5 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = 0;
  if (v5) {
    sub_227B8B690(a1 + 16, v5);
  }
  sub_227B8B6EC((void ***)(a1 + 8), 0);

  PB::Base::~Base((PB::Base *)a1);
}

void sub_227B4DA0C(uint64_t a1)
{
  sub_227B4D988(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227B4DA44(void *result, void *a2)
{
  *uint64_t result = &unk_26DC20888;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  if (a2[2]) {
    operator new();
  }
  if (a2[3]) {
    operator new();
  }
  if (a2[1]) {
    operator new();
  }
  return result;
}

uint64_t sub_227B4DBD0(void *a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (a1[1]) {
    PB::TextFormatter::format();
  }
  if (a1[2]) {
    PB::TextFormatter::format();
  }
  if (a1[3]) {
    PB::TextFormatter::format();
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B4DC5C(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v19 = v10 >> 3;
      if ((v10 >> 3) == 4) {
        operator new();
      }
      if (v19 == 3) {
        operator new();
      }
      if (v19 == 2) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B4DEBC(uint64_t result)
{
  uint64_t v1 = result;
  if (*(void *)(result + 16)) {
    uint64_t result = PB::Writer::write();
  }
  if (*(void *)(v1 + 24)) {
    uint64_t result = PB::Writer::write();
  }
  if (*(void *)(v1 + 8))
  {
    return PB::Writer::write();
  }
  return result;
}

uint64_t sub_227B4DF34(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC208C0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_227B4DF5C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B4DF94(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC208C0;
  *(_DWORD *)(result + 20) = 0;
  char v2 = *(unsigned char *)(a2 + 20);
  if ((v2 & 4) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 16);
    char v3 = 4;
    *(unsigned char *)(result + 20) = 4;
    *(_DWORD *)(result + 16) = v4;
    char v2 = *(unsigned char *)(a2 + 20);
    if ((v2 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if (*(unsigned char *)(a2 + 20))
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 8);
    v3 |= 1u;
    *(unsigned char *)(result + 20) = v3;
    *(_DWORD *)(result + 8) = v5;
    char v2 = *(unsigned char *)(a2 + 20);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 12);
    *(unsigned char *)(result + 20) = v3 | 2;
    *(_DWORD *)(result + 12) = v6;
  }
  return result;
}

uint64_t sub_227B4E014(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if (v5)
  {
    PB::TextFormatter::format(this, "level");
    char v5 = *(unsigned char *)(a1 + 20);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((*(unsigned char *)(a1 + 20) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "threshold");
  if ((*(unsigned char *)(a1 + 20) & 4) != 0) {
LABEL_4:
  }
    PB::TextFormatter::format(this, "timestamp", *(float *)(a1 + 16));
LABEL_5:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B4E0B8(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 3)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v21 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v22 = *(void *)this;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
        {
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v25 = 0;
          if (v2 <= v21) {
            unint64_t v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v21)
            {
              LODWORD(v25) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_62;
            }
            unint64_t v36 = v21++;
            char v37 = *(unsigned char *)(v22 + v36);
            *((void *)this + 1) = v21;
            v25 |= (unint64_t)(v37 & 0x7F) << v34;
            if ((v37 & 0x80) == 0) {
              break;
            }
            v34 += 7;
            BOOL v14 = v35++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              goto LABEL_61;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v25) = 0;
          }
LABEL_61:
          unint64_t v2 = v36 + 1;
        }
        else
        {
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          while (1)
          {
            unint64_t v2 = v21 + 1;
            *((void *)this + 1) = v21 + 1;
            char v26 = *(unsigned char *)(v22 + v21);
            v25 |= (unint64_t)(v26 & 0x7F) << v23;
            if ((v26 & 0x80) == 0) {
              break;
            }
            v23 += 7;
            unint64_t v21 = v2;
            BOOL v14 = v24++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              break;
            }
          }
        }
LABEL_62:
        *(_DWORD *)(a1 + 12) = v25;
      }
      else if (v20 == 2)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v27 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v28 = *(void *)this;
        if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
        {
          char v38 = 0;
          unsigned int v39 = 0;
          uint64_t v31 = 0;
          if (v2 <= v27) {
            unint64_t v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v27)
            {
              LODWORD(v31) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_67;
            }
            unint64_t v40 = v27++;
            char v41 = *(unsigned char *)(v28 + v40);
            *((void *)this + 1) = v27;
            v31 |= (unint64_t)(v41 & 0x7F) << v38;
            if ((v41 & 0x80) == 0) {
              break;
            }
            v38 += 7;
            BOOL v14 = v39++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              goto LABEL_66;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v31) = 0;
          }
LABEL_66:
          unint64_t v2 = v40 + 1;
        }
        else
        {
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v31 = 0;
          while (1)
          {
            unint64_t v2 = v27 + 1;
            *((void *)this + 1) = v27 + 1;
            char v32 = *(unsigned char *)(v28 + v27);
            v31 |= (unint64_t)(v32 & 0x7F) << v29;
            if ((v32 & 0x80) == 0) {
              break;
            }
            v29 += 7;
            unint64_t v27 = v2;
            BOOL v14 = v30++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              break;
            }
          }
        }
LABEL_67:
        *(_DWORD *)(a1 + 8) = v31;
      }
      else if (v20 == 1)
      {
        *(unsigned char *)(a1 + 20) |= 4u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
        {
          *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 4;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B4E43C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if ((v4 & 4) == 0)
  {
    if ((*(unsigned char *)(result + 20) & 1) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(unsigned char *)(v3 + 20) & 2) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(result + 16));
  char v4 = *(unsigned char *)(v3 + 20);
  if (v4) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_7:

  return PB::Writer::writeVarInt(this);
}

void *sub_227B4E4C8(void *result)
{
  *uint64_t result = &unk_26DC208F8;
  result[1] = 0;
  return result;
}

void sub_227B4E4E8(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC208F8;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227B4E568(PB::Base *a1)
{
  sub_227B4E4E8(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227B4E5A0(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC208F8;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227B4E648(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B4E6C4(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B4E8C0(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

void *sub_227B4E8DC(void *result)
{
  *uint64_t result = &unk_26DC20930;
  result[1] = 0;
  return result;
}

void sub_227B4E8FC(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_26DC20930;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_227B4E97C(PB::Base *a1)
{
  sub_227B4E8FC(a1);

  JUMPOUT(0x22A6850E0);
}

void *sub_227B4E9B4(void *result, uint64_t a2)
{
  *uint64_t result = &unk_26DC20930;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_227B4EA5C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B4EAD8(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B4ECD4(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2);
  }
  return result;
}

uint64_t sub_227B4ECF0(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC20968;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_227B4ED18(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B4ED50(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC20968;
  *(_DWORD *)(result + 20) = 0;
  if (*(unsigned char *)(a2 + 20))
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 20) = 1;
    *(void *)(result + 8) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 20) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
LABEL_5:
    int v4 = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(result + 20) = v2;
    *(_DWORD *)(result + 16) = v4;
  }
  return result;
}

uint64_t sub_227B4EDB4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "state");
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if (v5) {
    PB::TextFormatter::format(this, "timestamp");
  }

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B4EE30(uint64_t a1, PB::Reader *this)
{
  unint64_t v3 = *((void *)this + 1);
  unint64_t v2 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v3 < v2 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v3 > 0xFFFFFFFFFFFFFFF5 || v3 + 10 > v2) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v3 + 1;
        *((void *)this + 1) = v3 + 1;
        char v13 = *(unsigned char *)(v8 + v3);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v3 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v26 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v27 = *(void *)this;
        if (v26 > 0xFFFFFFFFFFFFFFF5 || v26 + 10 > v2)
        {
          char v37 = 0;
          unsigned int v38 = 0;
          uint64_t v30 = 0;
          if (v2 <= v26) {
            unint64_t v3 = *((void *)this + 1);
          }
          else {
            unint64_t v3 = *((void *)this + 2);
          }
          while (1)
          {
            if (v3 == v26)
            {
              LODWORD(v30) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_64;
            }
            unint64_t v39 = v26++;
            char v40 = *(unsigned char *)(v27 + v39);
            *((void *)this + 1) = v26;
            v30 |= (unint64_t)(v40 & 0x7F) << v37;
            if ((v40 & 0x80) == 0) {
              break;
            }
            v37 += 7;
            BOOL v14 = v38++ > 8;
            if (v14)
            {
              LODWORD(v30) = 0;
              goto LABEL_63;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v30) = 0;
          }
LABEL_63:
          unint64_t v3 = v39 + 1;
        }
        else
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v30 = 0;
          while (1)
          {
            unint64_t v3 = v26 + 1;
            *((void *)this + 1) = v26 + 1;
            char v31 = *(unsigned char *)(v27 + v26);
            v30 |= (unint64_t)(v31 & 0x7F) << v28;
            if ((v31 & 0x80) == 0) {
              break;
            }
            v28 += 7;
            unint64_t v26 = v3;
            BOOL v14 = v29++ > 8;
            if (v14)
            {
              LODWORD(v30) = 0;
              break;
            }
          }
        }
LABEL_64:
        *(_DWORD *)(a1 + 16) = v30;
      }
      else if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v20 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v21 = *(void *)this;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
        {
          char v33 = 0;
          unsigned int v34 = 0;
          uint64_t v24 = 0;
          if (v2 <= v20) {
            unint64_t v3 = *((void *)this + 1);
          }
          else {
            unint64_t v3 = *((void *)this + 2);
          }
          while (1)
          {
            if (v3 == v20)
            {
              uint64_t v24 = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_60;
            }
            unint64_t v35 = v20++;
            char v36 = *(unsigned char *)(v21 + v35);
            *((void *)this + 1) = v20;
            v24 |= (unint64_t)(v36 & 0x7F) << v33;
            if ((v36 & 0x80) == 0) {
              break;
            }
            v33 += 7;
            BOOL v14 = v34++ > 8;
            if (v14)
            {
              uint64_t v24 = 0;
              goto LABEL_59;
            }
          }
          if (*((unsigned char *)this + 24)) {
            uint64_t v24 = 0;
          }
LABEL_59:
          unint64_t v3 = v35 + 1;
        }
        else
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          while (1)
          {
            unint64_t v3 = v20 + 1;
            *((void *)this + 1) = v20 + 1;
            char v25 = *(unsigned char *)(v21 + v20);
            v24 |= (unint64_t)(v25 & 0x7F) << v22;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v22 += 7;
            unint64_t v20 = v3;
            BOOL v14 = v23++ > 8;
            if (v14)
            {
              uint64_t v24 = 0;
              break;
            }
          }
        }
LABEL_60:
        *(void *)(a1 + 8) = v24;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this);
        if (!result) {
          return result;
        }
        unint64_t v3 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v3 >= v2 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v3 > v2) {
      unint64_t v2 = v3;
    }
    while (v2 != v3)
    {
      unint64_t v17 = v3 + 1;
      char v18 = *(unsigned char *)(v8 + v3);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v3 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B4F15C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    return PB::Writer::writeVarInt(this);
  }
  return result;
}

uint64_t sub_227B4F1C8(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC209A0;
  *(_DWORD *)(result + 100) = 0;
  return result;
}

void sub_227B4F1F0(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B4F228(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC209A0;
  *(_DWORD *)(result + 100) = 0;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 4) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 24);
    int v3 = 4;
    *(_DWORD *)(result + 100) = 4;
    *(void *)(result + 24) = v4;
    int v2 = *(_DWORD *)(a2 + 100);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 8) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 32);
    v3 |= 8u;
    *(_DWORD *)(result + 100) = v3;
    *(_DWORD *)(result + 32) = v5;
    int v2 = *(_DWORD *)(a2 + 100);
  }
LABEL_6:
  if ((v2 & 0x400) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 60);
    v3 |= 0x400u;
    *(_DWORD *)(result + 100) = v3;
    *(_DWORD *)(result + 60) = v6;
    int v2 = *(_DWORD *)(a2 + 100);
    if ((v2 & 2) == 0)
    {
LABEL_8:
      if ((v2 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_27;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_DWORD *)(result + 100) = v3;
  *(void *)(result + 16) = v7;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x20) == 0)
  {
LABEL_9:
    if ((v2 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_28;
  }
LABEL_27:
  int v8 = *(_DWORD *)(a2 + 40);
  v3 |= 0x20u;
  *(_DWORD *)(result + 100) = v3;
  *(_DWORD *)(result + 40) = v8;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 1) == 0)
  {
LABEL_10:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t v9 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_DWORD *)(result + 100) = v3;
  *(void *)(result + 8) = v9;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x1000) == 0)
  {
LABEL_11:
    if ((v2 & 0x800) == 0) {
      goto LABEL_12;
    }
    goto LABEL_30;
  }
LABEL_29:
  int v10 = *(_DWORD *)(a2 + 68);
  v3 |= 0x1000u;
  *(_DWORD *)(result + 100) = v3;
  *(_DWORD *)(result + 68) = v10;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x800) == 0)
  {
LABEL_12:
    if ((v2 & 0x80) == 0) {
      goto LABEL_13;
    }
    goto LABEL_31;
  }
LABEL_30:
  int v11 = *(_DWORD *)(a2 + 64);
  v3 |= 0x800u;
  *(_DWORD *)(result + 100) = v3;
  *(_DWORD *)(result + 64) = v11;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x80) == 0)
  {
LABEL_13:
    if ((v2 & 0x40) == 0) {
      goto LABEL_14;
    }
    goto LABEL_32;
  }
LABEL_31:
  int v12 = *(_DWORD *)(a2 + 48);
  v3 |= 0x80u;
  *(_DWORD *)(result + 100) = v3;
  *(_DWORD *)(result + 48) = v12;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x40) == 0)
  {
LABEL_14:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_33;
  }
LABEL_32:
  int v13 = *(_DWORD *)(a2 + 44);
  v3 |= 0x40u;
  *(_DWORD *)(result + 100) = v3;
  *(_DWORD *)(result + 44) = v13;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x2000) == 0)
  {
LABEL_15:
    if ((v2 & 0x100) == 0) {
      goto LABEL_16;
    }
    goto LABEL_34;
  }
LABEL_33:
  int v14 = *(_DWORD *)(a2 + 72);
  v3 |= 0x2000u;
  *(_DWORD *)(result + 100) = v3;
  *(_DWORD *)(result + 72) = v14;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x100) == 0)
  {
LABEL_16:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_35;
  }
LABEL_34:
  int v15 = *(_DWORD *)(a2 + 52);
  v3 |= 0x100u;
  *(_DWORD *)(result + 100) = v3;
  *(_DWORD *)(result + 52) = v15;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x40000) == 0)
  {
LABEL_17:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_36;
  }
LABEL_35:
  int v16 = *(_DWORD *)(a2 + 92);
  v3 |= 0x40000u;
  *(_DWORD *)(result + 100) = v3;
  *(_DWORD *)(result + 92) = v16;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x20000) == 0)
  {
LABEL_18:
    if ((v2 & 0x200) == 0) {
      goto LABEL_19;
    }
    goto LABEL_37;
  }
LABEL_36:
  int v17 = *(_DWORD *)(a2 + 88);
  v3 |= 0x20000u;
  *(_DWORD *)(result + 100) = v3;
  *(_DWORD *)(result + 88) = v17;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x200) == 0)
  {
LABEL_19:
    if ((v2 & 0x10) == 0) {
      goto LABEL_20;
    }
    goto LABEL_38;
  }
LABEL_37:
  int v18 = *(_DWORD *)(a2 + 56);
  v3 |= 0x200u;
  *(_DWORD *)(result + 100) = v3;
  *(_DWORD *)(result + 56) = v18;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x10) == 0)
  {
LABEL_20:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_39;
  }
LABEL_38:
  int v19 = *(_DWORD *)(a2 + 36);
  v3 |= 0x10u;
  *(_DWORD *)(result + 100) = v3;
  *(_DWORD *)(result + 36) = v19;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x10000) == 0)
  {
LABEL_21:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_40;
  }
LABEL_39:
  int v20 = *(_DWORD *)(a2 + 84);
  v3 |= 0x10000u;
  *(_DWORD *)(result + 100) = v3;
  *(_DWORD *)(result + 84) = v20;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x8000) == 0)
  {
LABEL_22:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_41;
  }
LABEL_40:
  int v21 = *(_DWORD *)(a2 + 80);
  v3 |= 0x8000u;
  *(_DWORD *)(result + 100) = v3;
  *(_DWORD *)(result + 80) = v21;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x4000) == 0)
  {
LABEL_23:
    if ((v2 & 0x80000) == 0) {
      return result;
    }
LABEL_42:
    char v23 = *(unsigned char *)(a2 + 96);
    *(_DWORD *)(result + 100) = v3 | 0x80000;
    *(unsigned char *)(result + 96) = v23;
    return result;
  }
LABEL_41:
  int v22 = *(_DWORD *)(a2 + 76);
  v3 |= 0x4000u;
  *(_DWORD *)(result + 100) = v3;
  *(_DWORD *)(result + 76) = v22;
  if ((*(_DWORD *)(a2 + 100) & 0x80000) != 0) {
    goto LABEL_42;
  }
  return result;
}

uint64_t sub_227B4F484(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 8) != 0)
  {
    PB::TextFormatter::format(this, "dataBufferSize");
    int v5 = *(_DWORD *)(a1 + 100);
    if ((v5 & 0x10) == 0)
    {
LABEL_3:
      if ((v5 & 0x80000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_27;
    }
  }
  else if ((v5 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "gestureLengthSeconds", *(float *)(a1 + 36));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x80000) == 0)
  {
LABEL_4:
    if ((v5 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "isWristLooselyLevel");
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x20) == 0)
  {
LABEL_5:
    if ((v5 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "negPeakHeight", *(float *)(a1 + 40));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x40) == 0)
  {
LABEL_6:
    if ((v5 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(this, "negPeakLeftHalfWidth");
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x80) == 0)
  {
LABEL_7:
    if ((v5 & 1) == 0) {
      goto LABEL_8;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "negPeakRightHalfWidth");
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 1) == 0)
  {
LABEL_8:
    if ((v5 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(this, "negPeakTimestampUs");
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x100) == 0)
  {
LABEL_9:
    if ((v5 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(this, "negPeakTotalAngleDegrees", *(float *)(a1 + 52));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x200) == 0)
  {
LABEL_10:
    if ((v5 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(this, "pauseBtwPeaksSeconds", *(float *)(a1 + 56));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x400) == 0)
  {
LABEL_11:
    if ((v5 & 0x800) == 0) {
      goto LABEL_12;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "posPeakHeight", *(float *)(a1 + 60));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x800) == 0)
  {
LABEL_12:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "posPeakLeftHalfWidth");
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x1000) == 0)
  {
LABEL_13:
    if ((v5 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "posPeakRightHalfWidth");
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 2) == 0)
  {
LABEL_14:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "posPeakTimestampUs");
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x2000) == 0)
  {
LABEL_15:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "posPeakTotalAngleDegrees", *(float *)(a1 + 72));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x4000) == 0)
  {
LABEL_16:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "rotZRangeDuringGestureRad", *(float *)(a1 + 76));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x8000) == 0)
  {
LABEL_17:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "screenTiltAtEndDegrees", *(float *)(a1 + 80));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x10000) == 0)
  {
LABEL_18:
    if ((v5 & 4) == 0) {
      goto LABEL_19;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "screenTiltAtStartDegrees", *(float *)(a1 + 84));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 4) == 0)
  {
LABEL_19:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "timestampUs");
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x20000) == 0)
  {
LABEL_20:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
LABEL_43:
  PB::TextFormatter::format(this, "wristAngleDiffBtwPeaksDegrees", *(float *)(a1 + 88));
  if ((*(_DWORD *)(a1 + 100) & 0x40000) != 0) {
LABEL_21:
  }
    PB::TextFormatter::format(this, "wristAngleToHorizontalDegrees", *(float *)(a1 + 92));
LABEL_22:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B4F748(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_DWORD *)(a1 + 100) |= 4u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v71 = 0;
                unsigned int v72 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_179;
                  }
                  unint64_t v73 = v20++;
                  char v74 = *(unsigned char *)(v21 + v73);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v74 & 0x7F) << v71;
                  if ((v74 & 0x80) == 0) {
                    break;
                  }
                  v71 += 7;
                  BOOL v14 = v72++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_178;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_178:
                unint64_t v2 = v73 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_179;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_179:
              *(void *)(a1 + 24) = v24;
              goto LABEL_215;
            case 2u:
              *(_DWORD *)(a1 + 100) |= 8u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v75 = 0;
                unsigned int v76 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_184;
                  }
                  unint64_t v77 = v27++;
                  char v78 = *(unsigned char *)(v28 + v77);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v78 & 0x7F) << v75;
                  if ((v78 & 0x80) == 0) {
                    break;
                  }
                  v75 += 7;
                  BOOL v14 = v76++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_183:
                    unint64_t v2 = v77 + 1;
                    goto LABEL_184;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_183;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_184;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_184:
              *(_DWORD *)(a1 + 32) = v31;
              goto LABEL_215;
            case 3u:
              *(_DWORD *)(a1 + 100) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_112;
              }
              *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_174;
            case 4u:
              *(_DWORD *)(a1 + 100) |= 2u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v79 = 0;
                unsigned int v80 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    uint64_t v37 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_189;
                  }
                  unint64_t v81 = v33++;
                  char v82 = *(unsigned char *)(v34 + v81);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v82 & 0x7F) << v79;
                  if ((v82 & 0x80) == 0) {
                    break;
                  }
                  v79 += 7;
                  BOOL v14 = v80++ > 8;
                  if (v14)
                  {
                    uint64_t v37 = 0;
LABEL_188:
                    unint64_t v2 = v81 + 1;
                    goto LABEL_189;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v37 = 0;
                }
                goto LABEL_188;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_189;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              uint64_t v37 = 0;
LABEL_189:
              *(void *)(a1 + 16) = v37;
              goto LABEL_215;
            case 5u:
              *(_DWORD *)(a1 + 100) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_112;
              }
              *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_174;
            case 6u:
              *(_DWORD *)(a1 + 100) |= 1u;
              unint64_t v39 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v40 = *(void *)this;
              if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
              {
                char v83 = 0;
                unsigned int v84 = 0;
                uint64_t v43 = 0;
                if (v2 <= v39) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v39)
                  {
                    uint64_t v43 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_194;
                  }
                  unint64_t v85 = v39++;
                  char v86 = *(unsigned char *)(v40 + v85);
                  *((void *)this + 1) = v39;
                  v43 |= (unint64_t)(v86 & 0x7F) << v83;
                  if ((v86 & 0x80) == 0) {
                    break;
                  }
                  v83 += 7;
                  BOOL v14 = v84++ > 8;
                  if (v14)
                  {
                    uint64_t v43 = 0;
LABEL_193:
                    unint64_t v2 = v85 + 1;
                    goto LABEL_194;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v43 = 0;
                }
                goto LABEL_193;
              }
              char v41 = 0;
              unsigned int v42 = 0;
              uint64_t v43 = 0;
              do
              {
                unint64_t v2 = v39 + 1;
                *((void *)this + 1) = v39 + 1;
                char v44 = *(unsigned char *)(v40 + v39);
                v43 |= (unint64_t)(v44 & 0x7F) << v41;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_194;
                }
                v41 += 7;
                unint64_t v39 = v2;
                BOOL v14 = v42++ > 8;
              }
              while (!v14);
              uint64_t v43 = 0;
LABEL_194:
              *(void *)(a1 + 8) = v43;
              goto LABEL_215;
            case 7u:
              *(_DWORD *)(a1 + 100) |= 0x1000u;
              unint64_t v45 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v46 = *(void *)this;
              if (v45 > 0xFFFFFFFFFFFFFFF5 || v45 + 10 > v2)
              {
                char v87 = 0;
                unsigned int v88 = 0;
                uint64_t v49 = 0;
                if (v2 <= v45) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v45)
                  {
                    LODWORD(v49) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_199;
                  }
                  unint64_t v89 = v45++;
                  char v90 = *(unsigned char *)(v46 + v89);
                  *((void *)this + 1) = v45;
                  v49 |= (unint64_t)(v90 & 0x7F) << v87;
                  if ((v90 & 0x80) == 0) {
                    break;
                  }
                  v87 += 7;
                  BOOL v14 = v88++ > 8;
                  if (v14)
                  {
                    LODWORD(v49) = 0;
LABEL_198:
                    unint64_t v2 = v89 + 1;
                    goto LABEL_199;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v49) = 0;
                }
                goto LABEL_198;
              }
              char v47 = 0;
              unsigned int v48 = 0;
              uint64_t v49 = 0;
              do
              {
                unint64_t v2 = v45 + 1;
                *((void *)this + 1) = v45 + 1;
                char v50 = *(unsigned char *)(v46 + v45);
                v49 |= (unint64_t)(v50 & 0x7F) << v47;
                if ((v50 & 0x80) == 0) {
                  goto LABEL_199;
                }
                v47 += 7;
                unint64_t v45 = v2;
                BOOL v14 = v48++ > 8;
              }
              while (!v14);
              LODWORD(v49) = 0;
LABEL_199:
              *(_DWORD *)(a1 + 68) = v49;
              goto LABEL_215;
            case 8u:
              *(_DWORD *)(a1 + 100) |= 0x800u;
              unint64_t v51 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v52 = *(void *)this;
              if (v51 > 0xFFFFFFFFFFFFFFF5 || v51 + 10 > v2)
              {
                char v91 = 0;
                unsigned int v92 = 0;
                uint64_t v55 = 0;
                if (v2 <= v51) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v51)
                  {
                    LODWORD(v55) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_204;
                  }
                  unint64_t v93 = v51++;
                  char v94 = *(unsigned char *)(v52 + v93);
                  *((void *)this + 1) = v51;
                  v55 |= (unint64_t)(v94 & 0x7F) << v91;
                  if ((v94 & 0x80) == 0) {
                    break;
                  }
                  v91 += 7;
                  BOOL v14 = v92++ > 8;
                  if (v14)
                  {
                    LODWORD(v55) = 0;
LABEL_203:
                    unint64_t v2 = v93 + 1;
                    goto LABEL_204;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v55) = 0;
                }
                goto LABEL_203;
              }
              char v53 = 0;
              unsigned int v54 = 0;
              uint64_t v55 = 0;
              do
              {
                unint64_t v2 = v51 + 1;
                *((void *)this + 1) = v51 + 1;
                char v56 = *(unsigned char *)(v52 + v51);
                v55 |= (unint64_t)(v56 & 0x7F) << v53;
                if ((v56 & 0x80) == 0) {
                  goto LABEL_204;
                }
                v53 += 7;
                unint64_t v51 = v2;
                BOOL v14 = v54++ > 8;
              }
              while (!v14);
              LODWORD(v55) = 0;
LABEL_204:
              *(_DWORD *)(a1 + 64) = v55;
              goto LABEL_215;
            case 9u:
              *(_DWORD *)(a1 + 100) |= 0x80u;
              unint64_t v57 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v58 = *(void *)this;
              if (v57 > 0xFFFFFFFFFFFFFFF5 || v57 + 10 > v2)
              {
                char v95 = 0;
                unsigned int v96 = 0;
                uint64_t v61 = 0;
                if (v2 <= v57) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v57)
                  {
                    LODWORD(v61) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_209;
                  }
                  unint64_t v97 = v57++;
                  char v98 = *(unsigned char *)(v58 + v97);
                  *((void *)this + 1) = v57;
                  v61 |= (unint64_t)(v98 & 0x7F) << v95;
                  if ((v98 & 0x80) == 0) {
                    break;
                  }
                  v95 += 7;
                  BOOL v14 = v96++ > 8;
                  if (v14)
                  {
                    LODWORD(v61) = 0;
LABEL_208:
                    unint64_t v2 = v97 + 1;
                    goto LABEL_209;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v61) = 0;
                }
                goto LABEL_208;
              }
              char v59 = 0;
              unsigned int v60 = 0;
              uint64_t v61 = 0;
              do
              {
                unint64_t v2 = v57 + 1;
                *((void *)this + 1) = v57 + 1;
                char v62 = *(unsigned char *)(v58 + v57);
                v61 |= (unint64_t)(v62 & 0x7F) << v59;
                if ((v62 & 0x80) == 0) {
                  goto LABEL_209;
                }
                v59 += 7;
                unint64_t v57 = v2;
                BOOL v14 = v60++ > 8;
              }
              while (!v14);
              LODWORD(v61) = 0;
LABEL_209:
              *(_DWORD *)(a1 + 48) = v61;
              goto LABEL_215;
            case 0xAu:
              *(_DWORD *)(a1 + 100) |= 0x40u;
              unint64_t v63 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v64 = *(void *)this;
              if (v63 > 0xFFFFFFFFFFFFFFF5 || v63 + 10 > v2)
              {
                char v99 = 0;
                unsigned int v100 = 0;
                uint64_t v67 = 0;
                if (v2 <= v63) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v63)
                  {
                    LODWORD(v67) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_214;
                  }
                  unint64_t v101 = v63++;
                  char v102 = *(unsigned char *)(v64 + v101);
                  *((void *)this + 1) = v63;
                  v67 |= (unint64_t)(v102 & 0x7F) << v99;
                  if ((v102 & 0x80) == 0) {
                    break;
                  }
                  v99 += 7;
                  BOOL v14 = v100++ > 8;
                  if (v14)
                  {
                    LODWORD(v67) = 0;
LABEL_213:
                    unint64_t v2 = v101 + 1;
                    goto LABEL_214;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v67) = 0;
                }
                goto LABEL_213;
              }
              char v65 = 0;
              unsigned int v66 = 0;
              uint64_t v67 = 0;
              do
              {
                unint64_t v2 = v63 + 1;
                *((void *)this + 1) = v63 + 1;
                char v68 = *(unsigned char *)(v64 + v63);
                v67 |= (unint64_t)(v68 & 0x7F) << v65;
                if ((v68 & 0x80) == 0) {
                  goto LABEL_214;
                }
                v65 += 7;
                unint64_t v63 = v2;
                BOOL v14 = v66++ > 8;
              }
              while (!v14);
              LODWORD(v67) = 0;
LABEL_214:
              *(_DWORD *)(a1 + 44) = v67;
LABEL_215:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 0xBu:
              *(_DWORD *)(a1 + 100) |= 0x2000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_112;
              }
              *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_174;
            case 0xCu:
              *(_DWORD *)(a1 + 100) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_112;
              }
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_174;
            case 0xDu:
              *(_DWORD *)(a1 + 100) |= 0x40000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_112;
              }
              *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_174;
            case 0xEu:
              *(_DWORD *)(a1 + 100) |= 0x20000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_112;
              }
              *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_174;
            case 0xFu:
              *(_DWORD *)(a1 + 100) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_112;
              }
              *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_174;
            case 0x10u:
              *(_DWORD *)(a1 + 100) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_112;
              }
              *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_174;
            case 0x11u:
              *(_DWORD *)(a1 + 100) |= 0x10000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_112;
              }
              *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_174;
            case 0x12u:
              *(_DWORD *)(a1 + 100) |= 0x8000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_112;
              }
              *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_174;
            case 0x13u:
              *(_DWORD *)(a1 + 100) |= 0x4000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v2);
LABEL_174:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_112:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_215;
            case 0x14u:
              *(_DWORD *)(a1 + 100) |= 0x80000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v70 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v69 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v70 = v69 != 0;
              }
              *(unsigned char *)(a1 + 96) = v70;
              goto LABEL_215;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_215;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B5032C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 100);
  if ((v4 & 4) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    int v4 = *(_DWORD *)(v3 + 100);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 0x400) == 0) {
        goto LABEL_4;
      }
      goto LABEL_24;
    }
  }
  else if ((v4 & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x400) == 0)
  {
LABEL_4:
    if ((v4 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 60));
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 2) == 0)
  {
LABEL_5:
    if ((v4 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x20) == 0)
  {
LABEL_6:
    if ((v4 & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 1) == 0)
  {
LABEL_7:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x1000) == 0)
  {
LABEL_8:
    if ((v4 & 0x800) == 0) {
      goto LABEL_9;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x800) == 0)
  {
LABEL_9:
    if ((v4 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x80) == 0)
  {
LABEL_10:
    if ((v4 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x40) == 0)
  {
LABEL_11:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x2000) == 0)
  {
LABEL_12:
    if ((v4 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72));
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x100) == 0)
  {
LABEL_13:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x40000) == 0)
  {
LABEL_14:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 92));
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x20000) == 0)
  {
LABEL_15:
    if ((v4 & 0x200) == 0) {
      goto LABEL_16;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 88));
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x200) == 0)
  {
LABEL_16:
    if ((v4 & 0x10) == 0) {
      goto LABEL_17;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56));
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x10) == 0)
  {
LABEL_17:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36));
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x10000) == 0)
  {
LABEL_18:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84));
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x8000) == 0)
  {
LABEL_19:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_20;
    }
LABEL_40:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76));
    if ((*(_DWORD *)(v3 + 100) & 0x80000) == 0) {
      return result;
    }
    goto LABEL_41;
  }
LABEL_39:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80));
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x4000) != 0) {
    goto LABEL_40;
  }
LABEL_20:
  if ((v4 & 0x80000) == 0) {
    return result;
  }
LABEL_41:

  return PB::Writer::write(this);
}

uint64_t sub_227B50594(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC209D8;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

void sub_227B505BC(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227B505F4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC209D8;
  *(_DWORD *)(a1 + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 28);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 28) = 1;
    *(void *)(a1 + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 28) & 8) != 0)
  {
LABEL_5:
    float result = *(float *)(a2 + 24);
    v3 |= 8u;
    *(unsigned char *)(a1 + 28) = v3;
    *(float *)(a1 + 24) = result;
    char v2 = *(unsigned char *)(a2 + 28);
  }
LABEL_6:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 2) == 0) {
      return result;
    }
LABEL_10:
    float result = *(float *)(a2 + 16);
    *(unsigned char *)(a1 + 28) = v3 | 2;
    *(float *)(a1 + 16) = result;
    return result;
  }
  float result = *(float *)(a2 + 20);
  v3 |= 4u;
  *(unsigned char *)(a1 + 28) = v3;
  *(float *)(a1 + 20) = result;
  if ((*(unsigned char *)(a2 + 28) & 2) != 0) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_227B50690(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "maxSymmetryAllowanceFactor", *(float *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 28);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 28) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "minPeakRotationRateThresholdRps", *(float *)(a1 + 20));
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "minTwistAngleThresholdDeg", *(float *)(a1 + 24));
  if (*(unsigned char *)(a1 + 28)) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "timestampUs");
LABEL_6:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B50754(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 28) |= 1u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v27 = 0;
                unsigned int v28 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_53;
                  }
                  unint64_t v29 = v20++;
                  char v30 = *(unsigned char *)(v21 + v29);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v30 & 0x7F) << v27;
                  if ((v30 & 0x80) == 0) {
                    break;
                  }
                  v27 += 7;
                  BOOL v14 = v28++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_52;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_52:
                unint64_t v2 = v29 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_53;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_53:
              *(void *)(a1 + 8) = v24;
              goto LABEL_54;
            case 2u:
              *(unsigned char *)(a1 + 28) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_39;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_48;
            case 3u:
              *(unsigned char *)(a1 + 28) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_39;
              }
              *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_48;
            case 4u:
              *(unsigned char *)(a1 + 28) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
LABEL_48:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_39:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_54;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
LABEL_54:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B50A80(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 28);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
      if ((*(unsigned char *)(v3 + 28) & 2) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 28) & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_9:
  float v5 = *(float *)(v3 + 16);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227B50B28(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC20A10;
  *(_DWORD *)(result + 52) = 0;
  return result;
}

void sub_227B50B50(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227B50B88(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC20A10;
  *(_DWORD *)(a1 + 52) = 0;
  __int16 v2 = *(_WORD *)(a2 + 52);
  if (v2)
  {
    double result = *(double *)(a2 + 8);
    __int16 v3 = 1;
    *(_WORD *)(a1 + 52) = 1;
    *(double *)(a1 + 8) = result;
    __int16 v2 = *(_WORD *)(a2 + 52);
    if ((v2 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 0x20) != 0)
  {
LABEL_5:
    LODWORD(result) = *(_DWORD *)(a2 + 36);
    v3 |= 0x20u;
    *(_WORD *)(a1 + 52) = v3;
    *(_DWORD *)(a1 + 36) = LODWORD(result);
    __int16 v2 = *(_WORD *)(a2 + 52);
  }
LABEL_6:
  if ((v2 & 0x40) != 0)
  {
    LODWORD(result) = *(_DWORD *)(a2 + 40);
    v3 |= 0x40u;
    *(_WORD *)(a1 + 52) = v3;
    *(_DWORD *)(a1 + 40) = LODWORD(result);
    __int16 v2 = *(_WORD *)(a2 + 52);
    if ((v2 & 0x80) == 0)
    {
LABEL_8:
      if ((v2 & 4) == 0) {
        goto LABEL_9;
      }
      goto LABEL_18;
    }
  }
  else if ((v2 & 0x80) == 0)
  {
    goto LABEL_8;
  }
  LODWORD(result) = *(_DWORD *)(a2 + 44);
  v3 |= 0x80u;
  *(_WORD *)(a1 + 52) = v3;
  *(_DWORD *)(a1 + 44) = LODWORD(result);
  __int16 v2 = *(_WORD *)(a2 + 52);
  if ((v2 & 4) == 0)
  {
LABEL_9:
    if ((v2 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_19;
  }
LABEL_18:
  LODWORD(result) = *(_DWORD *)(a2 + 24);
  v3 |= 4u;
  *(_WORD *)(a1 + 52) = v3;
  *(_DWORD *)(a1 + 24) = LODWORD(result);
  __int16 v2 = *(_WORD *)(a2 + 52);
  if ((v2 & 8) == 0)
  {
LABEL_10:
    if ((v2 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_20;
  }
LABEL_19:
  LODWORD(result) = *(_DWORD *)(a2 + 28);
  v3 |= 8u;
  *(_WORD *)(a1 + 52) = v3;
  *(_DWORD *)(a1 + 28) = LODWORD(result);
  __int16 v2 = *(_WORD *)(a2 + 52);
  if ((v2 & 0x10) == 0)
  {
LABEL_11:
    if ((v2 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_21;
  }
LABEL_20:
  LODWORD(result) = *(_DWORD *)(a2 + 32);
  v3 |= 0x10u;
  *(_WORD *)(a1 + 52) = v3;
  *(_DWORD *)(a1 + 32) = LODWORD(result);
  __int16 v2 = *(_WORD *)(a2 + 52);
  if ((v2 & 0x100) == 0)
  {
LABEL_12:
    if ((v2 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_22;
  }
LABEL_21:
  char v5 = *(unsigned char *)(a2 + 48);
  v3 |= 0x100u;
  *(_WORD *)(a1 + 52) = v3;
  *(unsigned char *)(a1 + 48) = v5;
  __int16 v2 = *(_WORD *)(a2 + 52);
  if ((v2 & 0x200) == 0)
  {
LABEL_13:
    if ((v2 & 0x400) == 0) {
      goto LABEL_14;
    }
    goto LABEL_23;
  }
LABEL_22:
  char v6 = *(unsigned char *)(a2 + 49);
  v3 |= 0x200u;
  *(_WORD *)(a1 + 52) = v3;
  *(unsigned char *)(a1 + 49) = v6;
  __int16 v2 = *(_WORD *)(a2 + 52);
  if ((v2 & 0x400) == 0)
  {
LABEL_14:
    if ((v2 & 2) == 0) {
      return result;
    }
LABEL_24:
    double result = *(double *)(a2 + 16);
    *(_WORD *)(a1 + 52) = v3 | 2;
    *(double *)(a1 + 16) = result;
    return result;
  }
LABEL_23:
  char v7 = *(unsigned char *)(a2 + 50);
  v3 |= 0x400u;
  *(_WORD *)(a1 + 52) = v3;
  *(unsigned char *)(a1 + 50) = v7;
  if ((*(_WORD *)(a2 + 52) & 2) != 0) {
    goto LABEL_24;
  }
  return result;
}

uint64_t sub_227B50CE8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 52);
  if (v5)
  {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
    __int16 v5 = *(_WORD *)(a1 + 52);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 0x100) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "timestampPast", *(double *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 0x100) == 0)
  {
LABEL_4:
    if ((v5 & 0x200) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "validX");
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 0x200) == 0)
  {
LABEL_5:
    if ((v5 & 0x400) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "validY");
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 0x400) == 0)
  {
LABEL_6:
    if ((v5 & 4) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "validZ");
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "velocityUncX", *(float *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "velocityUncY", *(float *)(a1 + 28));
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "velocityUncZ", *(float *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 0x20) == 0)
  {
LABEL_10:
    if ((v5 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "velocityX", *(float *)(a1 + 36));
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 0x40) == 0)
  {
LABEL_11:
    if ((v5 & 0x80) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_25:
  PB::TextFormatter::format(this, "velocityY", *(float *)(a1 + 40));
  if ((*(_WORD *)(a1 + 52) & 0x80) != 0) {
LABEL_12:
  }
    PB::TextFormatter::format(this, "velocityZ", *(float *)(a1 + 44));
LABEL_13:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B50E8C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(_WORD *)(a1 + 52) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_50;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          goto LABEL_62;
        case 2u:
          *(_WORD *)(a1 + 52) |= 0x20u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_50;
          }
          *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_43;
        case 3u:
          *(_WORD *)(a1 + 52) |= 0x40u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_50;
          }
          *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_43;
        case 4u:
          *(_WORD *)(a1 + 52) |= 0x80u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_50;
          }
          *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_43;
        case 5u:
          *(_WORD *)(a1 + 52) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_50;
          }
          *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_43;
        case 6u:
          *(_WORD *)(a1 + 52) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_50;
          }
          *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_43;
        case 7u:
          *(_WORD *)(a1 + 52) |= 0x10u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_50;
          }
          *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
LABEL_43:
          unint64_t v2 = *((void *)this + 1) + 4;
          goto LABEL_63;
        case 8u:
          *(_WORD *)(a1 + 52) |= 0x100u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 >= *((void *)this + 2))
          {
            BOOL v21 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            int v20 = *(unsigned __int8 *)(*(void *)this + v2++);
            *((void *)this + 1) = v2;
            BOOL v21 = v20 != 0;
          }
          *(unsigned char *)(a1 + 48) = v21;
          break;
        case 9u:
          *(_WORD *)(a1 + 52) |= 0x200u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 >= *((void *)this + 2))
          {
            BOOL v26 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            int v25 = *(unsigned __int8 *)(*(void *)this + v2++);
            *((void *)this + 1) = v2;
            BOOL v26 = v25 != 0;
          }
          *(unsigned char *)(a1 + 49) = v26;
          break;
        case 0xAu:
          *(_WORD *)(a1 + 52) |= 0x400u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 >= *((void *)this + 2))
          {
            BOOL v23 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            int v22 = *(unsigned __int8 *)(*(void *)this + v2++);
            *((void *)this + 1) = v2;
            BOOL v23 = v22 != 0;
          }
          *(unsigned char *)(a1 + 50) = v23;
          break;
        case 0xBu:
          *(_WORD *)(a1 + 52) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
LABEL_62:
            unint64_t v2 = *((void *)this + 1) + 8;
LABEL_63:
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_50:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B512D4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 52);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8));
    __int16 v4 = *(_WORD *)(v3 + 52);
    if ((v4 & 0x20) == 0)
    {
LABEL_3:
      if ((v4 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v4 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36));
  __int16 v4 = *(_WORD *)(v3 + 52);
  if ((v4 & 0x40) == 0)
  {
LABEL_4:
    if ((v4 & 0x80) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
  __int16 v4 = *(_WORD *)(v3 + 52);
  if ((v4 & 0x80) == 0)
  {
LABEL_5:
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44));
  __int16 v4 = *(_WORD *)(v3 + 52);
  if ((v4 & 4) == 0)
  {
LABEL_6:
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
  __int16 v4 = *(_WORD *)(v3 + 52);
  if ((v4 & 8) == 0)
  {
LABEL_7:
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
  __int16 v4 = *(_WORD *)(v3 + 52);
  if ((v4 & 0x10) == 0)
  {
LABEL_8:
    if ((v4 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
  __int16 v4 = *(_WORD *)(v3 + 52);
  if ((v4 & 0x100) == 0)
  {
LABEL_9:
    if ((v4 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 52);
  if ((v4 & 0x200) == 0)
  {
LABEL_10:
    if ((v4 & 0x400) == 0) {
      goto LABEL_11;
    }
LABEL_22:
    uint64_t result = PB::Writer::write(this);
    if ((*(_WORD *)(v3 + 52) & 2) == 0) {
      return result;
    }
    goto LABEL_23;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 52);
  if ((v4 & 0x400) != 0) {
    goto LABEL_22;
  }
LABEL_11:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_23:
  double v5 = *(double *)(v3 + 16);

  return PB::Writer::write(this, v5);
}

double sub_227B51440(uint64_t a1)
{
  *(void *)a1 = &unk_26DC20A48;
  *(_DWORD *)(a1 + 140) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  return result;
}

void sub_227B51480(PB::Base *this)
{
  *(void *)this = &unk_26DC20A48;
  unint64_t v2 = (void *)*((void *)this + 10);
  if (v2)
  {
    *((void *)this + 11) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 7);
  if (v3)
  {
    *((void *)this + 8) = v3;
    operator delete(v3);
  }
  __int16 v4 = (void *)*((void *)this + 4);
  if (v4)
  {
    *((void *)this + 5) = v4;
    operator delete(v4);
  }
  double v5 = (void *)*((void *)this + 1);
  if (v5)
  {
    *((void *)this + 2) = v5;
    operator delete(v5);
  }

  PB::Base::~Base(this);
}

void sub_227B51514(PB::Base *a1)
{
  sub_227B51480(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B5154C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC20A48;
  *(_OWORD *)(a1 + 8) = 0u;
  __int16 v4 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 56) = 0u;
  *(_DWORD *)(a1 + 140) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  if (*(unsigned char *)(a2 + 140))
  {
    uint64_t v5 = *(void *)(a2 + 104);
    *(unsigned char *)(a1 + 140) = 1;
    *(void *)(a1 + 104) = v5;
  }
  if (a1 != a2) {
    sub_227B8BA68(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  if ((*(unsigned char *)(a2 + 140) & 4) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 120);
    *(unsigned char *)(a1 + 140) |= 4u;
    *(_DWORD *)(a1 + 120) = v6;
  }
  if (a1 != a2) {
    sub_227B8BA68((char *)(a1 + 80), *(char **)(a2 + 80), *(void *)(a2 + 88), (uint64_t)(*(void *)(a2 + 88) - *(void *)(a2 + 80)) >> 2);
  }
  if ((*(unsigned char *)(a2 + 140) & 2) != 0)
  {
    uint64_t v7 = *(void *)(a2 + 112);
    *(unsigned char *)(a1 + 140) |= 2u;
    *(void *)(a1 + 112) = v7;
  }
  if (a1 != a2)
  {
    sub_227B8BA68((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
    sub_227B8BA68((char *)(a1 + 56), *(char **)(a2 + 56), *(void *)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 2);
  }
  char v8 = *(unsigned char *)(a2 + 140);
  if ((v8 & 0x20) != 0)
  {
    int v11 = *(_DWORD *)(a2 + 132);
    *(unsigned char *)(a1 + 140) |= 0x20u;
    *(_DWORD *)(a1 + 132) = v11;
    char v8 = *(unsigned char *)(a2 + 140);
    if ((v8 & 8) == 0)
    {
LABEL_15:
      if ((v8 & 0x10) == 0) {
        goto LABEL_16;
      }
LABEL_21:
      int v13 = *(_DWORD *)(a2 + 128);
      *(unsigned char *)(a1 + 140) |= 0x10u;
      *(_DWORD *)(a1 + 128) = v13;
      if ((*(unsigned char *)(a2 + 140) & 0x40) == 0) {
        return a1;
      }
      goto LABEL_17;
    }
  }
  else if ((*(unsigned char *)(a2 + 140) & 8) == 0)
  {
    goto LABEL_15;
  }
  int v12 = *(_DWORD *)(a2 + 124);
  *(unsigned char *)(a1 + 140) |= 8u;
  *(_DWORD *)(a1 + 124) = v12;
  char v8 = *(unsigned char *)(a2 + 140);
  if ((v8 & 0x10) != 0) {
    goto LABEL_21;
  }
LABEL_16:
  if ((v8 & 0x40) != 0)
  {
LABEL_17:
    int v9 = *(_DWORD *)(a2 + 136);
    *(unsigned char *)(a1 + 140) |= 0x40u;
    *(_DWORD *)(a1 + 136) = v9;
  }
  return a1;
}

uint64_t sub_227B516F8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if ((*(unsigned char *)(a1 + 140) & 4) != 0) {
    PB::TextFormatter::format(this, "armTimeActivityHints");
  }
  uint64_t v5 = *(float **)(a1 + 8);
  int v6 = *(float **)(a1 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    PB::TextFormatter::format(this, "armTimeImuConfidences", v7);
  }
  char v8 = *(unsigned char *)(a1 + 140);
  if ((v8 & 8) != 0)
  {
    PB::TextFormatter::format(this, "sessionBtHintPercentage", *(float *)(a1 + 124));
    char v8 = *(unsigned char *)(a1 + 140);
    if ((v8 & 0x10) == 0)
    {
LABEL_7:
      if ((v8 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
  }
  else if ((*(unsigned char *)(a1 + 140) & 0x10) == 0)
  {
    goto LABEL_7;
  }
  PB::TextFormatter::format(this, "sessionGpsHintPercentage", *(float *)(a1 + 128));
  if ((*(unsigned char *)(a1 + 140) & 0x20) != 0) {
LABEL_8:
  }
    PB::TextFormatter::format(this, "sessionImuHintPercentage", *(float *)(a1 + 132));
LABEL_9:
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  while (v9 != v10)
  {
    v9 += 4;
    PB::TextFormatter::format(this, "sessionSwivelAngleDegHistogram");
  }
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v12 = *(void *)(a1 + 64);
  while (v11 != v12)
  {
    v11 += 4;
    PB::TextFormatter::format(this, "sessionTiltAngleDegHistogram");
  }
  char v13 = *(unsigned char *)(a1 + 140);
  if ((v13 & 0x40) != 0)
  {
    PB::TextFormatter::format(this, "sessionWifiHintPercentage", *(float *)(a1 + 136));
    char v13 = *(unsigned char *)(a1 + 140);
    if ((v13 & 1) == 0)
    {
LABEL_15:
      if ((v13 & 2) == 0) {
        goto LABEL_17;
      }
      goto LABEL_16;
    }
  }
  else if ((*(unsigned char *)(a1 + 140) & 1) == 0)
  {
    goto LABEL_15;
  }
  PB::TextFormatter::format(this, "timestamp");
  if ((*(unsigned char *)(a1 + 140) & 2) != 0) {
LABEL_16:
  }
    PB::TextFormatter::format(this, "triggerTimeLastHighImuDrivingConfidenceTimestamp");
LABEL_17:
  BOOL v14 = *(float **)(a1 + 80);
  char v15 = *(float **)(a1 + 88);
  while (v14 != v15)
  {
    float v16 = *v14++;
    PB::TextFormatter::format(this, "windowAfterArmImuConfidences", v16);
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227B518D8(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    char v8 = (void *)(a1 + 72);
    uint64_t v207 = (void **)(a1 + 32);
    char v208 = (void **)(a1 + 56);
    uint64_t v9 = (void *)(a1 + 48);
    uint64_t v10 = (void **)(a1 + 80);
    uint64_t v11 = a1 + 96;
    uint64_t v12 = (void **)(a1 + 8);
    uint64_t v13 = a1 + 24;
    while (1)
    {
      uint64_t v14 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v17 = 0;
      while (1)
      {
        unint64_t v18 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v19 = *(unsigned char *)(v14 + v2);
        v17 |= (unint64_t)(v19 & 0x7F) << v15;
        if ((v19 & 0x80) == 0) {
          break;
        }
        v15 += 7;
        unint64_t v2 = v18;
        BOOL v91 = v16++ > 8;
        if (v91) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v25 = v17 & 7;
      if (v25 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v17 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 140) |= 1u;
          unint64_t v26 = *((void *)this + 1);
          unint64_t v27 = *((void *)this + 2);
          uint64_t v28 = *(void *)this;
          if (v26 <= 0xFFFFFFFFFFFFFFF5 && v26 + 10 <= v27)
          {
            char v29 = 0;
            unsigned int v30 = 0;
            uint64_t v31 = 0;
            do
            {
              unint64_t v32 = v26 + 1;
              *((void *)this + 1) = v26 + 1;
              char v33 = *(unsigned char *)(v28 + v26);
              v31 |= (unint64_t)(v33 & 0x7F) << v29;
              if ((v33 & 0x80) == 0) {
                goto LABEL_265;
              }
              v29 += 7;
              unint64_t v26 = v32;
              BOOL v91 = v30++ > 8;
            }
            while (!v91);
LABEL_202:
            uint64_t v31 = 0;
            goto LABEL_265;
          }
          char v129 = 0;
          unsigned int v130 = 0;
          uint64_t v31 = 0;
          if (v27 <= v26) {
            unint64_t v27 = *((void *)this + 1);
          }
          while (2)
          {
            if (v27 == v26)
            {
              uint64_t v31 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v131 = v26 + 1;
              char v132 = *(unsigned char *)(v28 + v26);
              *((void *)this + 1) = v131;
              v31 |= (unint64_t)(v132 & 0x7F) << v129;
              if (v132 < 0)
              {
                v129 += 7;
                unint64_t v26 = v131;
                BOOL v91 = v130++ > 8;
                if (v91) {
                  goto LABEL_202;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v31 = 0;
              }
            }
            break;
          }
LABEL_265:
          *(void *)(a1 + 104) = v31;
          goto LABEL_339;
        case 2u:
          if (v25 != 2)
          {
            unint64_t v134 = *(char **)(a1 + 16);
            unint64_t v133 = *(void *)(a1 + 24);
            if ((unint64_t)v134 >= v133)
            {
              char v151 = (char *)*v12;
              uint64_t v152 = (v134 - (unsigned char *)*v12) >> 2;
              unint64_t v153 = v152 + 1;
              if ((unint64_t)(v152 + 1) >> 62) {
LABEL_349:
              }
                sub_227B8B89C();
              uint64_t v154 = v133 - (void)v151;
              if (v154 >> 1 > v153) {
                unint64_t v153 = v154 >> 1;
              }
              if ((unint64_t)v154 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v155 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v155 = v153;
              }
              if (v155)
              {
                unsigned int v156 = (char *)sub_227B8BBB8(v13, v155);
                char v151 = *(char **)(a1 + 8);
                unint64_t v134 = *(char **)(a1 + 16);
              }
              else
              {
                unsigned int v156 = 0;
              }
              char v175 = &v156[4 * v152];
              *(_DWORD *)char v175 = 0;
              uint64_t v135 = v175 + 4;
              while (v134 != v151)
              {
                int v176 = *((_DWORD *)v134 - 1);
                v134 -= 4;
                *((_DWORD *)v175 - 1) = v176;
                v175 -= 4;
              }
              *(void *)(a1 + 8) = v175;
              *(void *)(a1 + 16) = v135;
              *(void *)(a1 + 24) = &v156[4 * v155];
              if (v151) {
                operator delete(v151);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v134 = 0;
              uint64_t v135 = v134 + 4;
            }
            *(void *)(a1 + 16) = v135;
            goto LABEL_286;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v34 = *((void *)this + 1);
          unint64_t v35 = *((void *)this + 2);
          while (v34 < v35 && !*((unsigned char *)this + 24))
          {
            uint64_t v37 = *(char **)(a1 + 16);
            unint64_t v36 = *(void *)(a1 + 24);
            if ((unint64_t)v37 >= v36)
            {
              unint64_t v39 = (char *)*v12;
              uint64_t v40 = (v37 - (unsigned char *)*v12) >> 2;
              unint64_t v41 = v40 + 1;
              if ((unint64_t)(v40 + 1) >> 62) {
                goto LABEL_349;
              }
              uint64_t v42 = v36 - (void)v39;
              if (v42 >> 1 > v41) {
                unint64_t v41 = v42 >> 1;
              }
              if ((unint64_t)v42 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v43 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v43 = v41;
              }
              if (v43)
              {
                char v44 = (char *)sub_227B8BBB8(v13, v43);
                unint64_t v39 = *(char **)(a1 + 8);
                uint64_t v37 = *(char **)(a1 + 16);
              }
              else
              {
                char v44 = 0;
              }
              unint64_t v45 = &v44[4 * v40];
              *(_DWORD *)unint64_t v45 = 0;
              char v38 = v45 + 4;
              while (v37 != v39)
              {
                int v46 = *((_DWORD *)v37 - 1);
                v37 -= 4;
                *((_DWORD *)v45 - 1) = v46;
                v45 -= 4;
              }
              *(void *)(a1 + 8) = v45;
              *(void *)(a1 + 16) = v38;
              *(void *)(a1 + 24) = &v44[4 * v43];
              if (v39) {
                operator delete(v39);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v37 = 0;
              char v38 = v37 + 4;
            }
            *(void *)(a1 + 16) = v38;
            unint64_t v47 = *((void *)this + 1);
            if (v47 > 0xFFFFFFFFFFFFFFFBLL || v47 + 4 > *((void *)this + 2)) {
              goto LABEL_226;
            }
            *(v38 - 1) = *(_DWORD *)(*(void *)this + v47);
            unint64_t v35 = *((void *)this + 2);
            unint64_t v34 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v34;
          }
          goto LABEL_227;
        case 3u:
          *(unsigned char *)(a1 + 140) |= 4u;
          unint64_t v48 = *((void *)this + 1);
          unint64_t v49 = *((void *)this + 2);
          uint64_t v50 = *(void *)this;
          if (v48 <= 0xFFFFFFFFFFFFFFF5 && v48 + 10 <= v49)
          {
            char v51 = 0;
            unsigned int v52 = 0;
            uint64_t v53 = 0;
            do
            {
              unint64_t v54 = v48 + 1;
              *((void *)this + 1) = v48 + 1;
              char v55 = *(unsigned char *)(v50 + v48);
              v53 |= (unint64_t)(v55 & 0x7F) << v51;
              if ((v55 & 0x80) == 0) {
                goto LABEL_268;
              }
              v51 += 7;
              unint64_t v48 = v54;
              BOOL v91 = v52++ > 8;
            }
            while (!v91);
LABEL_211:
            LODWORD(v53) = 0;
            goto LABEL_268;
          }
          char v136 = 0;
          unsigned int v137 = 0;
          uint64_t v53 = 0;
          if (v49 <= v48) {
            unint64_t v49 = *((void *)this + 1);
          }
          while (2)
          {
            if (v49 == v48)
            {
              LODWORD(v53) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v138 = v48 + 1;
              char v139 = *(unsigned char *)(v50 + v48);
              *((void *)this + 1) = v138;
              v53 |= (unint64_t)(v139 & 0x7F) << v136;
              if (v139 < 0)
              {
                v136 += 7;
                unint64_t v48 = v138;
                BOOL v91 = v137++ > 8;
                if (v91) {
                  goto LABEL_211;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v53) = 0;
              }
            }
            break;
          }
LABEL_268:
          *(_DWORD *)(a1 + 120) = v53;
          goto LABEL_339;
        case 4u:
          if (v25 != 2)
          {
            uint64_t v141 = *(char **)(a1 + 88);
            unint64_t v140 = *(void *)(a1 + 96);
            if ((unint64_t)v141 >= v140)
            {
              unint64_t v157 = (char *)*v10;
              uint64_t v158 = (v141 - (unsigned char *)*v10) >> 2;
              unint64_t v159 = v158 + 1;
              if ((unint64_t)(v158 + 1) >> 62) {
LABEL_350:
              }
                sub_227B8B89C();
              uint64_t v160 = v140 - (void)v157;
              if (v160 >> 1 > v159) {
                unint64_t v159 = v160 >> 1;
              }
              if ((unint64_t)v160 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v161 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v161 = v159;
              }
              if (v161)
              {
                char v162 = (char *)sub_227B8BBB8(v11, v161);
                unint64_t v157 = *(char **)(a1 + 80);
                uint64_t v141 = *(char **)(a1 + 88);
              }
              else
              {
                char v162 = 0;
              }
              unint64_t v177 = &v162[4 * v158];
              *(_DWORD *)unint64_t v177 = 0;
              uint64_t v135 = v177 + 4;
              while (v141 != v157)
              {
                int v178 = *((_DWORD *)v141 - 1);
                v141 -= 4;
                *((_DWORD *)v177 - 1) = v178;
                v177 -= 4;
              }
              *(void *)(a1 + 80) = v177;
              *(void *)(a1 + 88) = v135;
              *(void *)(a1 + 96) = &v162[4 * v161];
              if (v157) {
                operator delete(v157);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v141 = 0;
              uint64_t v135 = v141 + 4;
            }
            *(void *)(a1 + 88) = v135;
LABEL_286:
            unint64_t v179 = *((void *)this + 1);
            if (v179 <= 0xFFFFFFFFFFFFFFFBLL && v179 + 4 <= *((void *)this + 2))
            {
              *(v135 - 1) = *(_DWORD *)(*(void *)this + v179);
LABEL_290:
              *((void *)this + 1) += 4;
            }
            else
            {
LABEL_288:
              *((unsigned char *)this + 24) = 1;
            }
            goto LABEL_339;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v56 = *((void *)this + 1);
          unint64_t v57 = *((void *)this + 2);
          while (v56 < v57 && !*((unsigned char *)this + 24))
          {
            char v59 = *(char **)(a1 + 88);
            unint64_t v58 = *(void *)(a1 + 96);
            if ((unint64_t)v59 >= v58)
            {
              uint64_t v61 = (char *)*v10;
              uint64_t v62 = (v59 - (unsigned char *)*v10) >> 2;
              unint64_t v63 = v62 + 1;
              if ((unint64_t)(v62 + 1) >> 62) {
                goto LABEL_350;
              }
              uint64_t v64 = v58 - (void)v61;
              if (v64 >> 1 > v63) {
                unint64_t v63 = v64 >> 1;
              }
              if ((unint64_t)v64 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v65 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v65 = v63;
              }
              if (v65)
              {
                unsigned int v66 = (char *)sub_227B8BBB8(v11, v65);
                uint64_t v61 = *(char **)(a1 + 80);
                char v59 = *(char **)(a1 + 88);
              }
              else
              {
                unsigned int v66 = 0;
              }
              uint64_t v67 = &v66[4 * v62];
              *(_DWORD *)uint64_t v67 = 0;
              unsigned int v60 = v67 + 4;
              while (v59 != v61)
              {
                int v68 = *((_DWORD *)v59 - 1);
                v59 -= 4;
                *((_DWORD *)v67 - 1) = v68;
                v67 -= 4;
              }
              *(void *)(a1 + 80) = v67;
              *(void *)(a1 + 88) = v60;
              *(void *)(a1 + 96) = &v66[4 * v65];
              if (v61) {
                operator delete(v61);
              }
            }
            else
            {
              *(_DWORD *)char v59 = 0;
              unsigned int v60 = v59 + 4;
            }
            *(void *)(a1 + 88) = v60;
            unint64_t v69 = *((void *)this + 1);
            if (v69 > 0xFFFFFFFFFFFFFFFBLL || v69 + 4 > *((void *)this + 2))
            {
LABEL_226:
              *((unsigned char *)this + 24) = 1;
              goto LABEL_227;
            }
            *(v60 - 1) = *(_DWORD *)(*(void *)this + v69);
            unint64_t v57 = *((void *)this + 2);
            unint64_t v56 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v56;
          }
          goto LABEL_227;
        case 5u:
          *(unsigned char *)(a1 + 140) |= 2u;
          unint64_t v70 = *((void *)this + 1);
          unint64_t v71 = *((void *)this + 2);
          uint64_t v72 = *(void *)this;
          if (v70 <= 0xFFFFFFFFFFFFFFF5 && v70 + 10 <= v71)
          {
            char v73 = 0;
            unsigned int v74 = 0;
            uint64_t v75 = 0;
            do
            {
              unint64_t v76 = v70 + 1;
              *((void *)this + 1) = v70 + 1;
              char v77 = *(unsigned char *)(v72 + v70);
              v75 |= (unint64_t)(v77 & 0x7F) << v73;
              if ((v77 & 0x80) == 0) {
                goto LABEL_271;
              }
              v73 += 7;
              unint64_t v70 = v76;
              BOOL v91 = v74++ > 8;
            }
            while (!v91);
LABEL_220:
            uint64_t v75 = 0;
            goto LABEL_271;
          }
          char v142 = 0;
          unsigned int v143 = 0;
          uint64_t v75 = 0;
          if (v71 <= v70) {
            unint64_t v71 = *((void *)this + 1);
          }
          while (2)
          {
            if (v71 == v70)
            {
              uint64_t v75 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v144 = v70 + 1;
              char v145 = *(unsigned char *)(v72 + v70);
              *((void *)this + 1) = v144;
              v75 |= (unint64_t)(v145 & 0x7F) << v142;
              if (v145 < 0)
              {
                v142 += 7;
                unint64_t v70 = v144;
                BOOL v91 = v143++ > 8;
                if (v91) {
                  goto LABEL_220;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v75 = 0;
              }
            }
            break;
          }
LABEL_271:
          *(void *)(a1 + 112) = v75;
          goto LABEL_339;
        case 6u:
          if (v25 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            if (*((void *)this + 1) < *((void *)this + 2) && !*((unsigned char *)this + 24))
            {
              char v78 = *(char **)(a1 + 40);
              do
              {
                if ((unint64_t)v78 >= *v9)
                {
                  char v79 = (char *)*v207;
                  uint64_t v80 = (v78 - (unsigned char *)*v207) >> 2;
                  unint64_t v81 = v80 + 1;
                  if ((unint64_t)(v80 + 1) >> 62) {
                    goto LABEL_351;
                  }
                  uint64_t v82 = *v9 - (void)v79;
                  if (v82 >> 1 > v81) {
                    unint64_t v81 = v82 >> 1;
                  }
                  if ((unint64_t)v82 >= 0x7FFFFFFFFFFFFFFCLL) {
                    unint64_t v83 = 0x3FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v83 = v81;
                  }
                  if (v83)
                  {
                    unsigned int v84 = (char *)sub_227B8BBB8((uint64_t)v9, v83);
                    char v79 = *(char **)(a1 + 32);
                    char v78 = *(char **)(a1 + 40);
                  }
                  else
                  {
                    unsigned int v84 = 0;
                  }
                  unint64_t v85 = &v84[4 * v80];
                  *(_DWORD *)unint64_t v85 = 0;
                  char v86 = v85 + 4;
                  while (v78 != v79)
                  {
                    int v87 = *((_DWORD *)v78 - 1);
                    v78 -= 4;
                    *((_DWORD *)v85 - 1) = v87;
                    v85 -= 4;
                  }
                  *(void *)(a1 + 32) = v85;
                  *(void *)(a1 + 40) = v86;
                  *(void *)(a1 + 48) = &v84[4 * v83];
                  if (v79) {
                    operator delete(v79);
                  }
                  char v78 = v86;
                }
                else
                {
                  *(_DWORD *)char v78 = 0;
                  v78 += 4;
                }
                *(void *)(a1 + 40) = v78;
                unint64_t v89 = *((void *)this + 1);
                unint64_t v88 = *((void *)this + 2);
                uint64_t v90 = *(void *)this;
                BOOL v91 = v89 > 0xFFFFFFFFFFFFFFF5 || v89 + 10 > v88;
                if (v91)
                {
                  char v92 = 0;
                  unsigned int v93 = 0;
                  uint64_t v99 = 0;
                  if (v88 <= v89) {
                    uint64_t v94 = *((void *)this + 1);
                  }
                  else {
                    uint64_t v94 = *((void *)this + 2);
                  }
                  while (1)
                  {
                    if (v94 == v89) {
                      goto LABEL_225;
                    }
                    unint64_t v95 = v89++;
                    char v96 = *(unsigned char *)(v90 + v95);
                    *((void *)this + 1) = v89;
                    v99 |= (unint64_t)(v96 & 0x7F) << v92;
                    if ((v96 & 0x80) == 0) {
                      break;
                    }
                    v92 += 7;
                    BOOL v91 = v93++ > 8;
                    if (v91)
                    {
                      LODWORD(v99) = 0;
                      goto LABEL_135;
                    }
                  }
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v99) = 0;
                  }
LABEL_135:
                  unint64_t v100 = v95 + 1;
                }
                else
                {
                  char v97 = 0;
                  unsigned int v98 = 0;
                  uint64_t v99 = 0;
                  while (1)
                  {
                    unint64_t v100 = v89 + 1;
                    *((void *)this + 1) = v89 + 1;
                    char v101 = *(unsigned char *)(v90 + v89);
                    v99 |= (unint64_t)(v101 & 0x7F) << v97;
                    if ((v101 & 0x80) == 0) {
                      break;
                    }
                    v97 += 7;
                    unint64_t v89 = v100;
                    BOOL v91 = v98++ > 8;
                    if (v91)
                    {
                      LODWORD(v99) = 0;
                      break;
                    }
                  }
                }
                *((_DWORD *)v78 - 1) = v99;
              }
              while (v100 < v88 && !*((unsigned char *)this + 24));
            }
            goto LABEL_227;
          }
          uint64_t v147 = *(char **)(a1 + 40);
          unint64_t v146 = *(void *)(a1 + 48);
          if ((unint64_t)v147 >= v146)
          {
            char v163 = (char *)*v207;
            uint64_t v164 = (v147 - (unsigned char *)*v207) >> 2;
            unint64_t v165 = v164 + 1;
            if ((unint64_t)(v164 + 1) >> 62) {
LABEL_351:
            }
              sub_227B8B89C();
            uint64_t v166 = v146 - (void)v163;
            if (v166 >> 1 > v165) {
              unint64_t v165 = v166 >> 1;
            }
            if ((unint64_t)v166 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v167 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v167 = v165;
            }
            if (v167)
            {
              unsigned int v168 = (char *)sub_227B8BBB8((uint64_t)v9, v167);
              char v163 = *(char **)(a1 + 32);
              uint64_t v147 = *(char **)(a1 + 40);
            }
            else
            {
              unsigned int v168 = 0;
            }
            unsigned int v180 = &v168[4 * v164];
            *(_DWORD *)unsigned int v180 = 0;
            uint64_t v148 = v180 + 4;
            while (v147 != v163)
            {
              int v181 = *((_DWORD *)v147 - 1);
              v147 -= 4;
              *((_DWORD *)v180 - 1) = v181;
              v180 -= 4;
            }
            *(void *)(a1 + 32) = v180;
            *(void *)(a1 + 40) = v148;
            *(void *)(a1 + 48) = &v168[4 * v167];
            if (v163) {
              operator delete(v163);
            }
          }
          else
          {
            *(_DWORD *)uint64_t v147 = 0;
            uint64_t v148 = v147 + 4;
          }
          *(void *)(a1 + 40) = v148;
          unint64_t v182 = *((void *)this + 1);
          unint64_t v183 = *((void *)this + 2);
          uint64_t v184 = *(void *)this;
          char v185 = 0;
          unsigned int v186 = 0;
          if (v182 <= 0xFFFFFFFFFFFFFFF5 && v182 + 10 <= v183)
          {
            uint64_t v190 = 0;
            while (1)
            {
              unint64_t v191 = v182 + 1;
              *((void *)this + 1) = v182 + 1;
              char v192 = *(unsigned char *)(v184 + v182);
              v190 |= (unint64_t)(v192 & 0x7F) << v185;
              if ((v192 & 0x80) == 0) {
                goto LABEL_338;
              }
              v185 += 7;
              unint64_t v182 = v191;
              BOOL v91 = v186++ > 8;
              if (v91) {
                goto LABEL_334;
              }
            }
          }
          uint64_t v190 = 0;
          if (v183 <= v182) {
            unint64_t v183 = *((void *)this + 1);
          }
          while (v183 != v182)
          {
            unint64_t v188 = v182 + 1;
            char v189 = *(unsigned char *)(v184 + v182);
            *((void *)this + 1) = v188;
            v190 |= (unint64_t)(v189 & 0x7F) << v185;
            if ((v189 & 0x80) == 0) {
              goto LABEL_336;
            }
            v185 += 7;
            unint64_t v182 = v188;
            BOOL v91 = v186++ > 8;
            if (v91) {
              goto LABEL_334;
            }
          }
          goto LABEL_335;
        case 7u:
          if (v25 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            if (*((void *)this + 1) < *((void *)this + 2) && !*((unsigned char *)this + 24))
            {
              char v78 = *(char **)(a1 + 64);
              do
              {
                if ((unint64_t)v78 >= *v8)
                {
                  char v102 = (char *)*v208;
                  uint64_t v103 = (v78 - (unsigned char *)*v208) >> 2;
                  unint64_t v104 = v103 + 1;
                  if ((unint64_t)(v103 + 1) >> 62) {
                    goto LABEL_352;
                  }
                  uint64_t v105 = *v8 - (void)v102;
                  if (v105 >> 1 > v104) {
                    unint64_t v104 = v105 >> 1;
                  }
                  if ((unint64_t)v105 >= 0x7FFFFFFFFFFFFFFCLL) {
                    unint64_t v106 = 0x3FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v106 = v104;
                  }
                  if (v106)
                  {
                    unint64_t v107 = (char *)sub_227B8BBB8((uint64_t)v8, v106);
                    char v102 = *(char **)(a1 + 56);
                    char v78 = *(char **)(a1 + 64);
                  }
                  else
                  {
                    unint64_t v107 = 0;
                  }
                  unint64_t v108 = &v107[4 * v103];
                  *(_DWORD *)unint64_t v108 = 0;
                  unint64_t v109 = v108 + 4;
                  while (v78 != v102)
                  {
                    int v110 = *((_DWORD *)v78 - 1);
                    v78 -= 4;
                    *((_DWORD *)v108 - 1) = v110;
                    v108 -= 4;
                  }
                  *(void *)(a1 + 56) = v108;
                  *(void *)(a1 + 64) = v109;
                  *(void *)(a1 + 72) = &v107[4 * v106];
                  if (v102) {
                    operator delete(v102);
                  }
                  char v78 = v109;
                }
                else
                {
                  *(_DWORD *)char v78 = 0;
                  v78 += 4;
                }
                *(void *)(a1 + 64) = v78;
                unint64_t v112 = *((void *)this + 1);
                unint64_t v111 = *((void *)this + 2);
                uint64_t v113 = *(void *)this;
                if (v112 <= 0xFFFFFFFFFFFFFFF5 && v112 + 10 <= v111)
                {
                  char v120 = 0;
                  unsigned int v121 = 0;
                  uint64_t v122 = 0;
                  while (1)
                  {
                    unint64_t v123 = v112 + 1;
                    *((void *)this + 1) = v112 + 1;
                    char v124 = *(unsigned char *)(v113 + v112);
                    v122 |= (unint64_t)(v124 & 0x7F) << v120;
                    if ((v124 & 0x80) == 0) {
                      goto LABEL_181;
                    }
                    v120 += 7;
                    unint64_t v112 = v123;
                    BOOL v91 = v121++ > 8;
                    if (v91)
                    {
                      LODWORD(v122) = 0;
                      goto LABEL_181;
                    }
                  }
                }
                char v115 = 0;
                unsigned int v116 = 0;
                uint64_t v122 = 0;
                if (v111 <= v112) {
                  uint64_t v117 = *((void *)this + 1);
                }
                else {
                  uint64_t v117 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v117 == v112)
                  {
LABEL_225:
                    *((unsigned char *)this + 24) = 1;
                    *((_DWORD *)v78 - 1) = 0;
                    goto LABEL_227;
                  }
                  unint64_t v118 = v112++;
                  char v119 = *(unsigned char *)(v113 + v118);
                  *((void *)this + 1) = v112;
                  v122 |= (unint64_t)(v119 & 0x7F) << v115;
                  if ((v119 & 0x80) == 0) {
                    break;
                  }
                  v115 += 7;
                  BOOL v91 = v116++ > 8;
                  if (v91)
                  {
                    LODWORD(v122) = 0;
                    goto LABEL_180;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v122) = 0;
                }
LABEL_180:
                unint64_t v123 = v118 + 1;
LABEL_181:
                *((_DWORD *)v78 - 1) = v122;
              }
              while (v123 < v111 && !*((unsigned char *)this + 24));
            }
LABEL_227:
            PB::Reader::recallMark();
          }
          else
          {
            char v150 = *(char **)(a1 + 64);
            unint64_t v149 = *(void *)(a1 + 72);
            if ((unint64_t)v150 >= v149)
            {
              unint64_t v169 = (char *)*v208;
              uint64_t v170 = (v150 - (unsigned char *)*v208) >> 2;
              unint64_t v171 = v170 + 1;
              if ((unint64_t)(v170 + 1) >> 62) {
LABEL_352:
              }
                sub_227B8B89C();
              uint64_t v172 = v149 - (void)v169;
              if (v172 >> 1 > v171) {
                unint64_t v171 = v172 >> 1;
              }
              if ((unint64_t)v172 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v173 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v173 = v171;
              }
              if (v173)
              {
                char v174 = (char *)sub_227B8BBB8((uint64_t)v8, v173);
                unint64_t v169 = *(char **)(a1 + 56);
                char v150 = *(char **)(a1 + 64);
              }
              else
              {
                char v174 = 0;
              }
              unint64_t v193 = &v174[4 * v170];
              *(_DWORD *)unint64_t v193 = 0;
              uint64_t v148 = v193 + 4;
              while (v150 != v169)
              {
                int v194 = *((_DWORD *)v150 - 1);
                v150 -= 4;
                *((_DWORD *)v193 - 1) = v194;
                v193 -= 4;
              }
              *(void *)(a1 + 56) = v193;
              *(void *)(a1 + 64) = v148;
              *(void *)(a1 + 72) = &v174[4 * v173];
              if (v169) {
                operator delete(v169);
              }
            }
            else
            {
              *(_DWORD *)char v150 = 0;
              uint64_t v148 = v150 + 4;
            }
            *(void *)(a1 + 64) = v148;
            unint64_t v195 = *((void *)this + 1);
            unint64_t v196 = *((void *)this + 2);
            uint64_t v197 = *(void *)this;
            char v198 = 0;
            unsigned int v199 = 0;
            if (v195 > 0xFFFFFFFFFFFFFFF5 || v195 + 10 > v196)
            {
              uint64_t v190 = 0;
              if (v196 <= v195) {
                unint64_t v196 = *((void *)this + 1);
              }
              while (v196 != v195)
              {
                unint64_t v201 = v195 + 1;
                char v202 = *(unsigned char *)(v197 + v195);
                *((void *)this + 1) = v201;
                v190 |= (unint64_t)(v202 & 0x7F) << v198;
                if ((v202 & 0x80) == 0)
                {
LABEL_336:
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v190) = 0;
                  }
                  goto LABEL_338;
                }
                v198 += 7;
                unint64_t v195 = v201;
                BOOL v91 = v199++ > 8;
                if (v91)
                {
LABEL_334:
                  LODWORD(v190) = 0;
                  goto LABEL_338;
                }
              }
LABEL_335:
              LODWORD(v190) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              uint64_t v190 = 0;
              while (1)
              {
                unint64_t v203 = v195 + 1;
                *((void *)this + 1) = v195 + 1;
                char v204 = *(unsigned char *)(v197 + v195);
                v190 |= (unint64_t)(v204 & 0x7F) << v198;
                if ((v204 & 0x80) == 0) {
                  break;
                }
                v198 += 7;
                unint64_t v195 = v203;
                BOOL v91 = v199++ > 8;
                if (v91) {
                  goto LABEL_334;
                }
              }
            }
LABEL_338:
            *(v148 - 1) = v190;
          }
LABEL_339:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        case 8u:
          *(unsigned char *)(a1 + 140) |= 0x20u;
          unint64_t v125 = *((void *)this + 1);
          if (v125 > 0xFFFFFFFFFFFFFFFBLL || v125 + 4 > *((void *)this + 2)) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 132) = *(_DWORD *)(*(void *)this + v125);
          goto LABEL_290;
        case 9u:
          *(unsigned char *)(a1 + 140) |= 8u;
          unint64_t v126 = *((void *)this + 1);
          if (v126 > 0xFFFFFFFFFFFFFFFBLL || v126 + 4 > *((void *)this + 2)) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 124) = *(_DWORD *)(*(void *)this + v126);
          goto LABEL_290;
        case 0xAu:
          *(unsigned char *)(a1 + 140) |= 0x10u;
          unint64_t v127 = *((void *)this + 1);
          if (v127 > 0xFFFFFFFFFFFFFFFBLL || v127 + 4 > *((void *)this + 2)) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v127);
          goto LABEL_290;
        case 0xBu:
          *(unsigned char *)(a1 + 140) |= 0x40u;
          unint64_t v128 = *((void *)this + 1);
          if (v128 > 0xFFFFFFFFFFFFFFFBLL || v128 + 4 > *((void *)this + 2)) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 136) = *(_DWORD *)(*(void *)this + v128);
          goto LABEL_290;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_339;
      }
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v17 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v22 = v2 + 1;
      char v23 = *(unsigned char *)(v14 + v2);
      *((void *)this + 1) = v22;
      v17 |= (unint64_t)(v23 & 0x7F) << v20;
      if ((v23 & 0x80) == 0) {
        goto LABEL_21;
      }
      v20 += 7;
      unint64_t v2 = v22;
      if (v21++ >= 9)
      {
LABEL_20:
        unint64_t v17 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B5285C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  if (*(unsigned char *)(result + 140)) {
    double result = PB::Writer::writeVarInt(this);
  }
  int v4 = *(float **)(v3 + 8);
  uint64_t v5 = *(float **)(v3 + 16);
  while (v4 != v5)
  {
    float v6 = *v4++;
    double result = PB::Writer::write(this, v6);
  }
  if ((*(unsigned char *)(v3 + 140) & 4) != 0) {
    double result = PB::Writer::writeVarInt(this);
  }
  float v7 = *(float **)(v3 + 80);
  char v8 = *(float **)(v3 + 88);
  while (v7 != v8)
  {
    float v9 = *v7++;
    double result = PB::Writer::write(this, v9);
  }
  if ((*(unsigned char *)(v3 + 140) & 2) != 0) {
    double result = PB::Writer::writeVarInt(this);
  }
  uint64_t v10 = *(void *)(v3 + 32);
  uint64_t v11 = *(void *)(v3 + 40);
  while (v10 != v11)
  {
    v10 += 4;
    double result = PB::Writer::writeVarInt(this);
  }
  uint64_t v12 = *(void *)(v3 + 56);
  uint64_t v13 = *(void *)(v3 + 64);
  while (v12 != v13)
  {
    v12 += 4;
    double result = PB::Writer::writeVarInt(this);
  }
  char v14 = *(unsigned char *)(v3 + 140);
  if ((v14 & 0x20) != 0)
  {
    double result = PB::Writer::write(this, *(float *)(v3 + 132));
    char v14 = *(unsigned char *)(v3 + 140);
    if ((v14 & 8) == 0)
    {
LABEL_21:
      if ((v14 & 0x10) == 0) {
        goto LABEL_22;
      }
LABEL_26:
      double result = PB::Writer::write(this, *(float *)(v3 + 128));
      if ((*(unsigned char *)(v3 + 140) & 0x40) == 0) {
        return result;
      }
      goto LABEL_27;
    }
  }
  else if ((*(unsigned char *)(v3 + 140) & 8) == 0)
  {
    goto LABEL_21;
  }
  double result = PB::Writer::write(this, *(float *)(v3 + 124));
  char v14 = *(unsigned char *)(v3 + 140);
  if ((v14 & 0x10) != 0) {
    goto LABEL_26;
  }
LABEL_22:
  if ((v14 & 0x40) == 0) {
    return result;
  }
LABEL_27:
  float v15 = *(float *)(v3 + 136);

  return PB::Writer::write(this, v15);
}

double sub_227B529D8(uint64_t a1)
{
  *(void *)a1 = &unk_26DC20A80;
  *(_DWORD *)(a1 + 104) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return result;
}

void sub_227B52A0C(PB::Base *this)
{
  *(void *)this = &unk_26DC20A80;
  unint64_t v2 = (void *)*((void *)this + 4);
  if (v2)
  {
    *((void *)this + 5) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 2) = v3;
    operator delete(v3);
  }

  PB::Base::~Base(this);
}

void sub_227B52A80(PB::Base *a1)
{
  sub_227B52A0C(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B52AB8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC20A80;
  *(_OWORD *)(a1 + 8) = 0u;
  int v4 = (char *)(a1 + 8);
  *(_DWORD *)(a1 + 104) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  if (*(_WORD *)(a2 + 104))
  {
    uint64_t v5 = *(void *)(a2 + 56);
    *(_WORD *)(a1 + 104) = 1;
    *(void *)(a1 + 56) = v5;
  }
  if (a1 != a2) {
    sub_227B8BA68((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
  }
  __int16 v6 = *(_WORD *)(a2 + 104);
  if ((v6 & 0x100) != 0)
  {
    int v12 = *(_DWORD *)(a2 + 100);
    *(_WORD *)(a1 + 104) |= 0x100u;
    *(_DWORD *)(a1 + 100) = v12;
    __int16 v6 = *(_WORD *)(a2 + 104);
    if ((v6 & 0x40) == 0)
    {
LABEL_7:
      if ((v6 & 0x80) == 0) {
        goto LABEL_8;
      }
      goto LABEL_21;
    }
  }
  else if ((v6 & 0x40) == 0)
  {
    goto LABEL_7;
  }
  int v13 = *(_DWORD *)(a2 + 92);
  *(_WORD *)(a1 + 104) |= 0x40u;
  *(_DWORD *)(a1 + 92) = v13;
  __int16 v6 = *(_WORD *)(a2 + 104);
  if ((v6 & 0x80) == 0)
  {
LABEL_8:
    if ((v6 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  int v14 = *(_DWORD *)(a2 + 96);
  *(_WORD *)(a1 + 104) |= 0x80u;
  *(_DWORD *)(a1 + 96) = v14;
  __int16 v6 = *(_WORD *)(a2 + 104);
  if ((v6 & 0x20) == 0)
  {
LABEL_9:
    if ((v6 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v15 = *(_DWORD *)(a2 + 88);
  *(_WORD *)(a1 + 104) |= 0x20u;
  *(_DWORD *)(a1 + 88) = v15;
  __int16 v6 = *(_WORD *)(a2 + 104);
  if ((v6 & 2) == 0)
  {
LABEL_10:
    if ((v6 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_23:
  uint64_t v16 = *(void *)(a2 + 64);
  *(_WORD *)(a1 + 104) |= 2u;
  *(void *)(a1 + 64) = v16;
  if ((*(_WORD *)(a2 + 104) & 4) != 0)
  {
LABEL_11:
    uint64_t v7 = *(void *)(a2 + 72);
    *(_WORD *)(a1 + 104) |= 4u;
    *(void *)(a1 + 72) = v7;
  }
LABEL_12:
  if (a1 != a2) {
    sub_227B8BA68(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  __int16 v8 = *(_WORD *)(a2 + 104);
  if ((v8 & 0x10) != 0)
  {
    int v9 = *(_DWORD *)(a2 + 84);
    *(_WORD *)(a1 + 104) |= 0x10u;
    *(_DWORD *)(a1 + 84) = v9;
    __int16 v8 = *(_WORD *)(a2 + 104);
  }
  if ((v8 & 8) != 0)
  {
    int v10 = *(_DWORD *)(a2 + 80);
    *(_WORD *)(a1 + 104) |= 8u;
    *(_DWORD *)(a1 + 80) = v10;
  }
  return a1;
}

uint64_t sub_227B52C6C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 104);
  if ((v5 & 8) != 0)
  {
    PB::TextFormatter::format(this, "sessionGreenFieldPercentage", *(float *)(a1 + 80));
    __int16 v5 = *(_WORD *)(a1 + 104);
  }
  if ((v5 & 0x10) != 0) {
    PB::TextFormatter::format(this, "sessionHighRotationPercentage", *(float *)(a1 + 84));
  }
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  while (v6 != v7)
  {
    v6 += 4;
    PB::TextFormatter::format(this, "sessionMeanPoseAngleXHistogram");
  }
  __int16 v8 = *(_WORD *)(a1 + 104);
  if (v8)
  {
    PB::TextFormatter::format(this, "timestamp");
    __int16 v8 = *(_WORD *)(a1 + 104);
    if ((v8 & 0x20) == 0)
    {
LABEL_9:
      if ((v8 & 2) == 0) {
        goto LABEL_10;
      }
      goto LABEL_22;
    }
  }
  else if ((v8 & 0x20) == 0)
  {
    goto LABEL_9;
  }
  PB::TextFormatter::format(this, "triggerTimeInternalDrivingState");
  __int16 v8 = *(_WORD *)(a1 + 104);
  if ((v8 & 2) == 0)
  {
LABEL_10:
    if ((v8 & 4) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "triggerTimeLastHighElevationGainTimestamp");
  __int16 v8 = *(_WORD *)(a1 + 104);
  if ((v8 & 4) == 0)
  {
LABEL_11:
    if ((v8 & 0x40) == 0) {
      goto LABEL_12;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "triggerTimeLastHighImuDrivingConfidenceTimestamp");
  __int16 v8 = *(_WORD *)(a1 + 104);
  if ((v8 & 0x40) == 0)
  {
LABEL_12:
    if ((v8 & 0x80) == 0) {
      goto LABEL_13;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "windowAfterArmGreenFieldPercentage", *(float *)(a1 + 92));
  __int16 v8 = *(_WORD *)(a1 + 104);
  if ((v8 & 0x80) == 0)
  {
LABEL_13:
    if ((v8 & 0x100) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_25:
  PB::TextFormatter::format(this, "windowAfterArmHighImuDrivingConfidencePercentage", *(float *)(a1 + 96));
  if ((*(_WORD *)(a1 + 104) & 0x100) != 0) {
LABEL_14:
  }
    PB::TextFormatter::format(this, "windowAfterArmHighRotationPercentage", *(float *)(a1 + 100));
LABEL_15:
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  while (v9 != v10)
  {
    v9 += 4;
    PB::TextFormatter::format(this, "windowAfterArmMeanPoseAngleXHistogram");
  }

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227B52E30(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    __int16 v8 = (void **)(a1 + 8);
    uint64_t v9 = (void *)(a1 + 24);
    uint64_t v10 = (void **)(a1 + 32);
    uint64_t v11 = (void *)(a1 + 48);
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        BOOL v45 = v14++ > 8;
        if (v45) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v23 = v15 & 7;
      if (v23 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v15 >> 3))
      {
        case 1u:
          *(_WORD *)(a1 + 104) |= 1u;
          unint64_t v24 = *((void *)this + 1);
          unint64_t v25 = *((void *)this + 2);
          uint64_t v26 = *(void *)this;
          if (v24 <= 0xFFFFFFFFFFFFFFF5 && v24 + 10 <= v25)
          {
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v29 = 0;
            do
            {
              unint64_t v30 = v24 + 1;
              *((void *)this + 1) = v24 + 1;
              char v31 = *(unsigned char *)(v26 + v24);
              v29 |= (unint64_t)(v31 & 0x7F) << v27;
              if ((v31 & 0x80) == 0) {
                goto LABEL_216;
              }
              v27 += 7;
              unint64_t v24 = v30;
              BOOL v45 = v28++ > 8;
            }
            while (!v45);
LABEL_164:
            uint64_t v29 = 0;
            goto LABEL_216;
          }
          char v108 = 0;
          unsigned int v109 = 0;
          uint64_t v29 = 0;
          if (v25 <= v24) {
            unint64_t v25 = *((void *)this + 1);
          }
          while (2)
          {
            if (v25 == v24)
            {
              uint64_t v29 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v110 = v24 + 1;
              char v111 = *(unsigned char *)(v26 + v24);
              *((void *)this + 1) = v110;
              v29 |= (unint64_t)(v111 & 0x7F) << v108;
              if (v111 < 0)
              {
                v108 += 7;
                unint64_t v24 = v110;
                BOOL v45 = v109++ > 8;
                if (v45) {
                  goto LABEL_164;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v29 = 0;
              }
            }
            break;
          }
LABEL_216:
          *(void *)(a1 + 56) = v29;
          goto LABEL_274;
        case 2u:
          if (v23 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            if (*((void *)this + 1) < *((void *)this + 2) && !*((unsigned char *)this + 24))
            {
              unint64_t v32 = *(char **)(a1 + 40);
              do
              {
                if ((unint64_t)v32 >= *v11)
                {
                  char v33 = (char *)*v10;
                  uint64_t v34 = (v32 - (unsigned char *)*v10) >> 2;
                  unint64_t v35 = v34 + 1;
                  if ((unint64_t)(v34 + 1) >> 62) {
                    goto LABEL_284;
                  }
                  uint64_t v36 = *v11 - (void)v33;
                  if (v36 >> 1 > v35) {
                    unint64_t v35 = v36 >> 1;
                  }
                  if ((unint64_t)v36 >= 0x7FFFFFFFFFFFFFFCLL) {
                    unint64_t v37 = 0x3FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v37 = v35;
                  }
                  if (v37)
                  {
                    char v38 = (char *)sub_227B8BBB8((uint64_t)v11, v37);
                    char v33 = *(char **)(a1 + 32);
                    unint64_t v32 = *(char **)(a1 + 40);
                  }
                  else
                  {
                    char v38 = 0;
                  }
                  unint64_t v39 = &v38[4 * v34];
                  *(_DWORD *)unint64_t v39 = 0;
                  uint64_t v40 = v39 + 4;
                  while (v32 != v33)
                  {
                    int v41 = *((_DWORD *)v32 - 1);
                    v32 -= 4;
                    *((_DWORD *)v39 - 1) = v41;
                    v39 -= 4;
                  }
                  *(void *)(a1 + 32) = v39;
                  *(void *)(a1 + 40) = v40;
                  *(void *)(a1 + 48) = &v38[4 * v37];
                  if (v33) {
                    operator delete(v33);
                  }
                  unint64_t v32 = v40;
                }
                else
                {
                  *(_DWORD *)unint64_t v32 = 0;
                  v32 += 4;
                }
                *(void *)(a1 + 40) = v32;
                unint64_t v43 = *((void *)this + 1);
                unint64_t v42 = *((void *)this + 2);
                uint64_t v44 = *(void *)this;
                BOOL v45 = v43 > 0xFFFFFFFFFFFFFFF5 || v43 + 10 > v42;
                if (v45)
                {
                  char v46 = 0;
                  unsigned int v47 = 0;
                  uint64_t v53 = 0;
                  if (v42 <= v43) {
                    uint64_t v48 = *((void *)this + 1);
                  }
                  else {
                    uint64_t v48 = *((void *)this + 2);
                  }
                  while (1)
                  {
                    if (v48 == v43) {
                      goto LABEL_190;
                    }
                    unint64_t v49 = v43++;
                    char v50 = *(unsigned char *)(v44 + v49);
                    *((void *)this + 1) = v43;
                    v53 |= (unint64_t)(v50 & 0x7F) << v46;
                    if ((v50 & 0x80) == 0) {
                      break;
                    }
                    v46 += 7;
                    BOOL v45 = v47++ > 8;
                    if (v45)
                    {
                      LODWORD(v53) = 0;
                      goto LABEL_71;
                    }
                  }
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v53) = 0;
                  }
LABEL_71:
                  unint64_t v54 = v49 + 1;
                }
                else
                {
                  char v51 = 0;
                  unsigned int v52 = 0;
                  uint64_t v53 = 0;
                  while (1)
                  {
                    unint64_t v54 = v43 + 1;
                    *((void *)this + 1) = v43 + 1;
                    char v55 = *(unsigned char *)(v44 + v43);
                    v53 |= (unint64_t)(v55 & 0x7F) << v51;
                    if ((v55 & 0x80) == 0) {
                      break;
                    }
                    v51 += 7;
                    unint64_t v43 = v54;
                    BOOL v45 = v52++ > 8;
                    if (v45)
                    {
                      LODWORD(v53) = 0;
                      break;
                    }
                  }
                }
                *((_DWORD *)v32 - 1) = v53;
              }
              while (v54 < v42 && !*((unsigned char *)this + 24));
            }
            goto LABEL_191;
          }
          uint64_t v113 = *(char **)(a1 + 40);
          unint64_t v112 = *(void *)(a1 + 48);
          if ((unint64_t)v113 >= v112)
          {
            char v129 = (char *)*v10;
            uint64_t v130 = (v113 - (unsigned char *)*v10) >> 2;
            unint64_t v131 = v130 + 1;
            if ((unint64_t)(v130 + 1) >> 62) {
LABEL_284:
            }
              sub_227B8B89C();
            uint64_t v132 = v112 - (void)v129;
            if (v132 >> 1 > v131) {
              unint64_t v131 = v132 >> 1;
            }
            if ((unint64_t)v132 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v133 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v133 = v131;
            }
            if (v133)
            {
              unint64_t v134 = (char *)sub_227B8BBB8((uint64_t)v11, v133);
              char v129 = *(char **)(a1 + 32);
              uint64_t v113 = *(char **)(a1 + 40);
            }
            else
            {
              unint64_t v134 = 0;
            }
            uint64_t v141 = &v134[4 * v130];
            *(_DWORD *)uint64_t v141 = 0;
            unint64_t v114 = v141 + 4;
            while (v113 != v129)
            {
              int v142 = *((_DWORD *)v113 - 1);
              v113 -= 4;
              *((_DWORD *)v141 - 1) = v142;
              v141 -= 4;
            }
            *(void *)(a1 + 32) = v141;
            *(void *)(a1 + 40) = v114;
            *(void *)(a1 + 48) = &v134[4 * v133];
            if (v129) {
              operator delete(v129);
            }
          }
          else
          {
            *(_DWORD *)uint64_t v113 = 0;
            unint64_t v114 = v113 + 4;
          }
          *(void *)(a1 + 40) = v114;
          unint64_t v143 = *((void *)this + 1);
          unint64_t v144 = *((void *)this + 2);
          uint64_t v145 = *(void *)this;
          char v146 = 0;
          unsigned int v147 = 0;
          if (v143 <= 0xFFFFFFFFFFFFFFF5 && v143 + 10 <= v144)
          {
            uint64_t v151 = 0;
            while (1)
            {
              unint64_t v152 = v143 + 1;
              *((void *)this + 1) = v143 + 1;
              char v153 = *(unsigned char *)(v145 + v143);
              v151 |= (unint64_t)(v153 & 0x7F) << v146;
              if ((v153 & 0x80) == 0) {
                goto LABEL_273;
              }
              v146 += 7;
              unint64_t v143 = v152;
              BOOL v45 = v147++ > 8;
              if (v45) {
                goto LABEL_269;
              }
            }
          }
          uint64_t v151 = 0;
          if (v144 <= v143) {
            unint64_t v144 = *((void *)this + 1);
          }
          while (v144 != v143)
          {
            unint64_t v149 = v143 + 1;
            char v150 = *(unsigned char *)(v145 + v143);
            *((void *)this + 1) = v149;
            v151 |= (unint64_t)(v150 & 0x7F) << v146;
            if ((v150 & 0x80) == 0) {
              goto LABEL_271;
            }
            v146 += 7;
            unint64_t v143 = v149;
            BOOL v45 = v147++ > 8;
            if (v45) {
              goto LABEL_269;
            }
          }
          goto LABEL_270;
        case 3u:
          *(_WORD *)(a1 + 104) |= 0x100u;
          unint64_t v56 = *((void *)this + 1);
          if (v56 > 0xFFFFFFFFFFFFFFFBLL || v56 + 4 > *((void *)this + 2)) {
            goto LABEL_157;
          }
          *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v56);
          goto LABEL_193;
        case 4u:
          *(_WORD *)(a1 + 104) |= 0x40u;
          unint64_t v57 = *((void *)this + 1);
          if (v57 > 0xFFFFFFFFFFFFFFFBLL || v57 + 4 > *((void *)this + 2)) {
            goto LABEL_157;
          }
          *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v57);
          goto LABEL_193;
        case 5u:
          *(_WORD *)(a1 + 104) |= 0x80u;
          unint64_t v58 = *((void *)this + 1);
          if (v58 > 0xFFFFFFFFFFFFFFFBLL || v58 + 4 > *((void *)this + 2)) {
            goto LABEL_157;
          }
          *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v58);
          goto LABEL_193;
        case 6u:
          *(_WORD *)(a1 + 104) |= 0x20u;
          unint64_t v59 = *((void *)this + 1);
          unint64_t v60 = *((void *)this + 2);
          uint64_t v61 = *(void *)this;
          if (v59 <= 0xFFFFFFFFFFFFFFF5 && v59 + 10 <= v60)
          {
            char v62 = 0;
            unsigned int v63 = 0;
            uint64_t v64 = 0;
            do
            {
              unint64_t v65 = v59 + 1;
              *((void *)this + 1) = v59 + 1;
              char v66 = *(unsigned char *)(v61 + v59);
              v64 |= (unint64_t)(v66 & 0x7F) << v62;
              if ((v66 & 0x80) == 0) {
                goto LABEL_219;
              }
              v62 += 7;
              unint64_t v59 = v65;
              BOOL v45 = v63++ > 8;
            }
            while (!v45);
LABEL_173:
            LODWORD(v64) = 0;
            goto LABEL_219;
          }
          char v115 = 0;
          unsigned int v116 = 0;
          uint64_t v64 = 0;
          if (v60 <= v59) {
            unint64_t v60 = *((void *)this + 1);
          }
          while (2)
          {
            if (v60 == v59)
            {
              LODWORD(v64) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v117 = v59 + 1;
              char v118 = *(unsigned char *)(v61 + v59);
              *((void *)this + 1) = v117;
              v64 |= (unint64_t)(v118 & 0x7F) << v115;
              if (v118 < 0)
              {
                v115 += 7;
                unint64_t v59 = v117;
                BOOL v45 = v116++ > 8;
                if (v45) {
                  goto LABEL_173;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v64) = 0;
              }
            }
            break;
          }
LABEL_219:
          *(_DWORD *)(a1 + 88) = v64;
          goto LABEL_274;
        case 7u:
          *(_WORD *)(a1 + 104) |= 2u;
          unint64_t v67 = *((void *)this + 1);
          unint64_t v68 = *((void *)this + 2);
          uint64_t v69 = *(void *)this;
          if (v67 <= 0xFFFFFFFFFFFFFFF5 && v67 + 10 <= v68)
          {
            char v70 = 0;
            unsigned int v71 = 0;
            uint64_t v72 = 0;
            do
            {
              unint64_t v73 = v67 + 1;
              *((void *)this + 1) = v67 + 1;
              char v74 = *(unsigned char *)(v69 + v67);
              v72 |= (unint64_t)(v74 & 0x7F) << v70;
              if ((v74 & 0x80) == 0) {
                goto LABEL_222;
              }
              v70 += 7;
              unint64_t v67 = v73;
              BOOL v45 = v71++ > 8;
            }
            while (!v45);
LABEL_180:
            uint64_t v72 = 0;
            goto LABEL_222;
          }
          char v119 = 0;
          unsigned int v120 = 0;
          uint64_t v72 = 0;
          if (v68 <= v67) {
            unint64_t v68 = *((void *)this + 1);
          }
          while (2)
          {
            if (v68 == v67)
            {
              uint64_t v72 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v121 = v67 + 1;
              char v122 = *(unsigned char *)(v69 + v67);
              *((void *)this + 1) = v121;
              v72 |= (unint64_t)(v122 & 0x7F) << v119;
              if (v122 < 0)
              {
                v119 += 7;
                unint64_t v67 = v121;
                BOOL v45 = v120++ > 8;
                if (v45) {
                  goto LABEL_180;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v72 = 0;
              }
            }
            break;
          }
LABEL_222:
          *(void *)(a1 + 64) = v72;
          goto LABEL_274;
        case 8u:
          *(_WORD *)(a1 + 104) |= 4u;
          unint64_t v75 = *((void *)this + 1);
          unint64_t v76 = *((void *)this + 2);
          uint64_t v77 = *(void *)this;
          if (v75 <= 0xFFFFFFFFFFFFFFF5 && v75 + 10 <= v76)
          {
            char v78 = 0;
            unsigned int v79 = 0;
            uint64_t v80 = 0;
            do
            {
              unint64_t v81 = v75 + 1;
              *((void *)this + 1) = v75 + 1;
              char v82 = *(unsigned char *)(v77 + v75);
              v80 |= (unint64_t)(v82 & 0x7F) << v78;
              if ((v82 & 0x80) == 0) {
                goto LABEL_225;
              }
              v78 += 7;
              unint64_t v75 = v81;
              BOOL v45 = v79++ > 8;
            }
            while (!v45);
LABEL_187:
            uint64_t v80 = 0;
            goto LABEL_225;
          }
          char v123 = 0;
          unsigned int v124 = 0;
          uint64_t v80 = 0;
          if (v76 <= v75) {
            unint64_t v76 = *((void *)this + 1);
          }
          while (2)
          {
            if (v76 == v75)
            {
              uint64_t v80 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v125 = v75 + 1;
              char v126 = *(unsigned char *)(v77 + v75);
              *((void *)this + 1) = v125;
              v80 |= (unint64_t)(v126 & 0x7F) << v123;
              if (v126 < 0)
              {
                v123 += 7;
                unint64_t v75 = v125;
                BOOL v45 = v124++ > 8;
                if (v45) {
                  goto LABEL_187;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v80 = 0;
              }
            }
            break;
          }
LABEL_225:
          *(void *)(a1 + 72) = v80;
          goto LABEL_274;
        case 9u:
          if (v23 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            if (*((void *)this + 1) < *((void *)this + 2) && !*((unsigned char *)this + 24))
            {
              unint64_t v32 = *(char **)(a1 + 16);
              do
              {
                if ((unint64_t)v32 >= *v9)
                {
                  unsigned int v84 = (char *)*v8;
                  uint64_t v85 = (v32 - (unsigned char *)*v8) >> 2;
                  unint64_t v86 = v85 + 1;
                  if ((unint64_t)(v85 + 1) >> 62) {
                    goto LABEL_285;
                  }
                  uint64_t v87 = *v9 - (void)v84;
                  if (v87 >> 1 > v86) {
                    unint64_t v86 = v87 >> 1;
                  }
                  if ((unint64_t)v87 >= 0x7FFFFFFFFFFFFFFCLL) {
                    unint64_t v88 = 0x3FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v88 = v86;
                  }
                  if (v88)
                  {
                    unint64_t v89 = (char *)sub_227B8BBB8((uint64_t)v9, v88);
                    unsigned int v84 = *(char **)(a1 + 8);
                    unint64_t v32 = *(char **)(a1 + 16);
                  }
                  else
                  {
                    unint64_t v89 = 0;
                  }
                  uint64_t v90 = &v89[4 * v85];
                  *(_DWORD *)uint64_t v90 = 0;
                  BOOL v91 = v90 + 4;
                  while (v32 != v84)
                  {
                    int v92 = *((_DWORD *)v32 - 1);
                    v32 -= 4;
                    *((_DWORD *)v90 - 1) = v92;
                    v90 -= 4;
                  }
                  *(void *)(a1 + 8) = v90;
                  *(void *)(a1 + 16) = v91;
                  *(void *)(a1 + 24) = &v89[4 * v88];
                  if (v84) {
                    operator delete(v84);
                  }
                  unint64_t v32 = v91;
                }
                else
                {
                  *(_DWORD *)unint64_t v32 = 0;
                  v32 += 4;
                }
                *(void *)(a1 + 16) = v32;
                unint64_t v94 = *((void *)this + 1);
                unint64_t v93 = *((void *)this + 2);
                uint64_t v95 = *(void *)this;
                if (v94 <= 0xFFFFFFFFFFFFFFF5 && v94 + 10 <= v93)
                {
                  char v102 = 0;
                  unsigned int v103 = 0;
                  uint64_t v104 = 0;
                  while (1)
                  {
                    unint64_t v105 = v94 + 1;
                    *((void *)this + 1) = v94 + 1;
                    char v106 = *(unsigned char *)(v95 + v94);
                    v104 |= (unint64_t)(v106 & 0x7F) << v102;
                    if ((v106 & 0x80) == 0) {
                      goto LABEL_152;
                    }
                    v102 += 7;
                    unint64_t v94 = v105;
                    BOOL v45 = v103++ > 8;
                    if (v45)
                    {
                      LODWORD(v104) = 0;
                      goto LABEL_152;
                    }
                  }
                }
                char v97 = 0;
                unsigned int v98 = 0;
                uint64_t v104 = 0;
                if (v93 <= v94) {
                  uint64_t v99 = *((void *)this + 1);
                }
                else {
                  uint64_t v99 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v99 == v94)
                  {
LABEL_190:
                    *((unsigned char *)this + 24) = 1;
                    *((_DWORD *)v32 - 1) = 0;
                    goto LABEL_191;
                  }
                  unint64_t v100 = v94++;
                  char v101 = *(unsigned char *)(v95 + v100);
                  *((void *)this + 1) = v94;
                  v104 |= (unint64_t)(v101 & 0x7F) << v97;
                  if ((v101 & 0x80) == 0) {
                    break;
                  }
                  v97 += 7;
                  BOOL v45 = v98++ > 8;
                  if (v45)
                  {
                    LODWORD(v104) = 0;
                    goto LABEL_151;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v104) = 0;
                }
LABEL_151:
                unint64_t v105 = v100 + 1;
LABEL_152:
                *((_DWORD *)v32 - 1) = v104;
              }
              while (v105 < v93 && !*((unsigned char *)this + 24));
            }
LABEL_191:
            PB::Reader::recallMark();
          }
          else
          {
            unint64_t v128 = *(char **)(a1 + 16);
            unint64_t v127 = *(void *)(a1 + 24);
            if ((unint64_t)v128 >= v127)
            {
              uint64_t v135 = (char *)*v8;
              uint64_t v136 = (v128 - (unsigned char *)*v8) >> 2;
              unint64_t v137 = v136 + 1;
              if ((unint64_t)(v136 + 1) >> 62) {
LABEL_285:
              }
                sub_227B8B89C();
              uint64_t v138 = v127 - (void)v135;
              if (v138 >> 1 > v137) {
                unint64_t v137 = v138 >> 1;
              }
              if ((unint64_t)v138 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v139 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v139 = v137;
              }
              if (v139)
              {
                unint64_t v140 = (char *)sub_227B8BBB8((uint64_t)v9, v139);
                uint64_t v135 = *(char **)(a1 + 8);
                unint64_t v128 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v140 = 0;
              }
              uint64_t v154 = &v140[4 * v136];
              *(_DWORD *)uint64_t v154 = 0;
              unint64_t v114 = v154 + 4;
              while (v128 != v135)
              {
                int v155 = *((_DWORD *)v128 - 1);
                v128 -= 4;
                *((_DWORD *)v154 - 1) = v155;
                v154 -= 4;
              }
              *(void *)(a1 + 8) = v154;
              *(void *)(a1 + 16) = v114;
              *(void *)(a1 + 24) = &v140[4 * v139];
              if (v135) {
                operator delete(v135);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v128 = 0;
              unint64_t v114 = v128 + 4;
            }
            *(void *)(a1 + 16) = v114;
            unint64_t v156 = *((void *)this + 1);
            unint64_t v157 = *((void *)this + 2);
            uint64_t v158 = *(void *)this;
            char v159 = 0;
            unsigned int v160 = 0;
            if (v156 > 0xFFFFFFFFFFFFFFF5 || v156 + 10 > v157)
            {
              uint64_t v151 = 0;
              if (v157 <= v156) {
                unint64_t v157 = *((void *)this + 1);
              }
              while (v157 != v156)
              {
                unint64_t v162 = v156 + 1;
                char v163 = *(unsigned char *)(v158 + v156);
                *((void *)this + 1) = v162;
                v151 |= (unint64_t)(v163 & 0x7F) << v159;
                if ((v163 & 0x80) == 0)
                {
LABEL_271:
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v151) = 0;
                  }
                  goto LABEL_273;
                }
                v159 += 7;
                unint64_t v156 = v162;
                BOOL v45 = v160++ > 8;
                if (v45)
                {
LABEL_269:
                  LODWORD(v151) = 0;
                  goto LABEL_273;
                }
              }
LABEL_270:
              LODWORD(v151) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              uint64_t v151 = 0;
              while (1)
              {
                unint64_t v164 = v156 + 1;
                *((void *)this + 1) = v156 + 1;
                char v165 = *(unsigned char *)(v158 + v156);
                v151 |= (unint64_t)(v165 & 0x7F) << v159;
                if ((v165 & 0x80) == 0) {
                  break;
                }
                v159 += 7;
                unint64_t v156 = v164;
                BOOL v45 = v160++ > 8;
                if (v45) {
                  goto LABEL_269;
                }
              }
            }
LABEL_273:
            *(v114 - 1) = v151;
          }
LABEL_274:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        case 0xAu:
          *(_WORD *)(a1 + 104) |= 0x10u;
          unint64_t v83 = *((void *)this + 1);
          if (v83 > 0xFFFFFFFFFFFFFFFBLL || v83 + 4 > *((void *)this + 2)) {
            goto LABEL_157;
          }
          *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v83);
          goto LABEL_193;
        case 0xBu:
          *(_WORD *)(a1 + 104) |= 8u;
          unint64_t v107 = *((void *)this + 1);
          if (v107 <= 0xFFFFFFFFFFFFFFFBLL && v107 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v107);
LABEL_193:
            *((void *)this + 1) += 4;
          }
          else
          {
LABEL_157:
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_274;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_274;
      }
    }
    char v18 = 0;
    unsigned int v19 = 0;
    unint64_t v15 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v20 = v2 + 1;
      char v21 = *(unsigned char *)(v12 + v2);
      *((void *)this + 1) = v20;
      v15 |= (unint64_t)(v21 & 0x7F) << v18;
      if ((v21 & 0x80) == 0) {
        goto LABEL_21;
      }
      v18 += 7;
      unint64_t v2 = v20;
      if (v19++ >= 9)
      {
LABEL_20:
        unint64_t v15 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B53AF4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  if (*(_WORD *)(result + 104)) {
    double result = PB::Writer::writeVarInt(this);
  }
  uint64_t v4 = *(void *)(v3 + 32);
  uint64_t v5 = *(void *)(v3 + 40);
  while (v4 != v5)
  {
    v4 += 4;
    double result = PB::Writer::writeVarInt(this);
  }
  __int16 v6 = *(_WORD *)(v3 + 104);
  if ((v6 & 0x100) != 0)
  {
    double result = PB::Writer::write(this, *(float *)(v3 + 100));
    __int16 v6 = *(_WORD *)(v3 + 104);
    if ((v6 & 0x40) == 0)
    {
LABEL_8:
      if ((v6 & 0x80) == 0) {
        goto LABEL_9;
      }
      goto LABEL_22;
    }
  }
  else if ((v6 & 0x40) == 0)
  {
    goto LABEL_8;
  }
  double result = PB::Writer::write(this, *(float *)(v3 + 92));
  __int16 v6 = *(_WORD *)(v3 + 104);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  double result = PB::Writer::write(this, *(float *)(v3 + 96));
  __int16 v6 = *(_WORD *)(v3 + 104);
  if ((v6 & 0x20) == 0)
  {
LABEL_10:
    if ((v6 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_24:
    double result = PB::Writer::writeVarInt(this);
    if ((*(_WORD *)(v3 + 104) & 4) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_23:
  double result = PB::Writer::writeVarInt(this);
  __int16 v6 = *(_WORD *)(v3 + 104);
  if ((v6 & 2) != 0) {
    goto LABEL_24;
  }
LABEL_11:
  if ((v6 & 4) != 0) {
LABEL_12:
  }
    double result = PB::Writer::writeVarInt(this);
LABEL_13:
  uint64_t v7 = *(void *)(v3 + 8);
  uint64_t v8 = *(void *)(v3 + 16);
  while (v7 != v8)
  {
    v7 += 4;
    double result = PB::Writer::writeVarInt(this);
  }
  __int16 v9 = *(_WORD *)(v3 + 104);
  if ((v9 & 0x10) != 0)
  {
    double result = PB::Writer::write(this, *(float *)(v3 + 84));
    __int16 v9 = *(_WORD *)(v3 + 104);
  }
  if ((v9 & 8) != 0)
  {
    float v10 = *(float *)(v3 + 80);
    return PB::Writer::write(this, v10);
  }
  return result;
}

uint64_t sub_227B53C6C(uint64_t result)
{
  *(void *)double result = &unk_26DC20AB8;
  *(_DWORD *)(result + 68) = 0;
  return result;
}

void sub_227B53C94(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B53CCC(uint64_t result, uint64_t a2)
{
  *(void *)double result = &unk_26DC20AB8;
  *(_DWORD *)(result + 68) = 0;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x400) != 0)
  {
    char v4 = *(unsigned char *)(a2 + 64);
    __int16 v3 = 1024;
    *(_WORD *)(result + 68) = 1024;
    *(unsigned char *)(result + 64) = v4;
    __int16 v2 = *(_WORD *)(a2 + 68);
    if ((v2 & 0x80) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 0x80) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 52);
    v3 |= 0x80u;
    *(_WORD *)(result + 68) = v3;
    *(_DWORD *)(result + 52) = v5;
    __int16 v2 = *(_WORD *)(a2 + 68);
  }
LABEL_6:
  if ((v2 & 0x40) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 48);
    v3 |= 0x40u;
    *(_WORD *)(result + 68) = v3;
    *(_DWORD *)(result + 48) = v6;
    __int16 v2 = *(_WORD *)(a2 + 68);
    if ((v2 & 0x200) == 0)
    {
LABEL_8:
      if ((v2 & 0x100) == 0) {
        goto LABEL_9;
      }
      goto LABEL_18;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 60);
  v3 |= 0x200u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 60) = v7;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x100) == 0)
  {
LABEL_9:
    if ((v2 & 4) == 0) {
      goto LABEL_10;
    }
    goto LABEL_19;
  }
LABEL_18:
  int v8 = *(_DWORD *)(a2 + 56);
  v3 |= 0x100u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 56) = v8;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 4) == 0)
  {
LABEL_10:
    if ((v2 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v9 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(_WORD *)(result + 68) = v3;
  *(void *)(result + 24) = v9;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x10) == 0)
  {
LABEL_11:
    if ((v2 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_21;
  }
LABEL_20:
  int v10 = *(_DWORD *)(a2 + 40);
  v3 |= 0x10u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 40) = v10;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 1) == 0)
  {
LABEL_12:
    if ((v2 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t v11 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(result + 68) = v3;
  *(void *)(result + 8) = v11;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 2) == 0)
  {
LABEL_13:
    if ((v2 & 0x20) == 0) {
      goto LABEL_14;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t v12 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(result + 68) = v3;
  *(void *)(result + 16) = v12;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x20) == 0)
  {
LABEL_14:
    if ((v2 & 8) == 0) {
      return result;
    }
LABEL_24:
    uint64_t v14 = *(void *)(a2 + 32);
    *(_WORD *)(result + 68) = v3 | 8;
    *(void *)(result + 32) = v14;
    return result;
  }
LABEL_23:
  int v13 = *(_DWORD *)(a2 + 44);
  v3 |= 0x20u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 44) = v13;
  if ((*(_WORD *)(a2 + 68) & 8) != 0) {
    goto LABEL_24;
  }
  return result;
}

uint64_t sub_227B53E2C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x10) != 0)
  {
    PB::TextFormatter::format(this, "diffPeakTimestampTrigger");
    __int16 v5 = *(_WORD *)(a1 + 68);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v5 & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "epochFirstTimestamp");
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 2) == 0)
  {
LABEL_4:
    if ((v5 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "epochLastTimestamp");
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x20) == 0)
  {
LABEL_5:
    if ((v5 & 0x400) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "maxAccelNormInWindow", *(float *)(a1 + 44));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x400) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "pass");
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "peakPressure", *(float *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 4) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "peakTimestamp");
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "pressureODR");
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x100) == 0)
  {
LABEL_10:
    if ((v5 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "riseTime", *(float *)(a1 + 56));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 8) == 0)
  {
LABEL_11:
    if ((v5 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_25:
  PB::TextFormatter::format(this, "timestamp");
  if ((*(_WORD *)(a1 + 68) & 0x200) != 0) {
LABEL_12:
  }
    PB::TextFormatter::format(this, "width", *(float *)(a1 + 60));
LABEL_13:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B53FD0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 68) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v21 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v20 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v21 = v20 != 0;
              }
              *(unsigned char *)(a1 + 64) = v21;
              goto LABEL_156;
            case 2u:
              *(_WORD *)(a1 + 68) |= 0x80u;
              unint64_t v23 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v24 = *(void *)this;
              if (v23 > 0xFFFFFFFFFFFFFFF5 || v23 + 10 > v2)
              {
                char v59 = 0;
                unsigned int v60 = 0;
                uint64_t v27 = 0;
                if (v2 <= v23) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v23)
                  {
                    LODWORD(v27) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_130;
                  }
                  unint64_t v61 = v23++;
                  char v62 = *(unsigned char *)(v24 + v61);
                  *((void *)this + 1) = v23;
                  v27 |= (unint64_t)(v62 & 0x7F) << v59;
                  if ((v62 & 0x80) == 0) {
                    break;
                  }
                  v59 += 7;
                  BOOL v14 = v60++ > 8;
                  if (v14)
                  {
                    LODWORD(v27) = 0;
LABEL_129:
                    unint64_t v2 = v61 + 1;
                    goto LABEL_130;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v27) = 0;
                }
                goto LABEL_129;
              }
              char v25 = 0;
              unsigned int v26 = 0;
              uint64_t v27 = 0;
              do
              {
                unint64_t v2 = v23 + 1;
                *((void *)this + 1) = v23 + 1;
                char v28 = *(unsigned char *)(v24 + v23);
                v27 |= (unint64_t)(v28 & 0x7F) << v25;
                if ((v28 & 0x80) == 0) {
                  goto LABEL_130;
                }
                v25 += 7;
                unint64_t v23 = v2;
                BOOL v14 = v26++ > 8;
              }
              while (!v14);
              LODWORD(v27) = 0;
LABEL_130:
              *(_DWORD *)(a1 + 52) = v27;
              goto LABEL_156;
            case 3u:
              *(_WORD *)(a1 + 68) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_72;
              }
              *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_125;
            case 4u:
              *(_WORD *)(a1 + 68) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_72;
              }
              *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_125;
            case 5u:
              *(_WORD *)(a1 + 68) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_72;
              }
              *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_125;
            case 6u:
              *(_WORD *)(a1 + 68) |= 4u;
              unint64_t v29 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v30 = *(void *)this;
              if (v29 > 0xFFFFFFFFFFFFFFF5 || v29 + 10 > v2)
              {
                char v63 = 0;
                unsigned int v64 = 0;
                uint64_t v33 = 0;
                if (v2 <= v29) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v29)
                  {
                    uint64_t v33 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_135;
                  }
                  unint64_t v65 = v29++;
                  char v66 = *(unsigned char *)(v30 + v65);
                  *((void *)this + 1) = v29;
                  v33 |= (unint64_t)(v66 & 0x7F) << v63;
                  if ((v66 & 0x80) == 0) {
                    break;
                  }
                  v63 += 7;
                  BOOL v14 = v64++ > 8;
                  if (v14)
                  {
                    uint64_t v33 = 0;
LABEL_134:
                    unint64_t v2 = v65 + 1;
                    goto LABEL_135;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v33 = 0;
                }
                goto LABEL_134;
              }
              char v31 = 0;
              unsigned int v32 = 0;
              uint64_t v33 = 0;
              do
              {
                unint64_t v2 = v29 + 1;
                *((void *)this + 1) = v29 + 1;
                char v34 = *(unsigned char *)(v30 + v29);
                v33 |= (unint64_t)(v34 & 0x7F) << v31;
                if ((v34 & 0x80) == 0) {
                  goto LABEL_135;
                }
                v31 += 7;
                unint64_t v29 = v2;
                BOOL v14 = v32++ > 8;
              }
              while (!v14);
              uint64_t v33 = 0;
LABEL_135:
              *(void *)(a1 + 24) = v33;
              goto LABEL_156;
            case 7u:
              *(_WORD *)(a1 + 68) |= 0x10u;
              unint64_t v35 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v36 = *(void *)this;
              if (v35 > 0xFFFFFFFFFFFFFFF5 || v35 + 10 > v2)
              {
                char v67 = 0;
                unsigned int v68 = 0;
                uint64_t v39 = 0;
                if (v2 <= v35) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v35)
                  {
                    LODWORD(v39) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_140;
                  }
                  unint64_t v69 = v35++;
                  char v70 = *(unsigned char *)(v36 + v69);
                  *((void *)this + 1) = v35;
                  v39 |= (unint64_t)(v70 & 0x7F) << v67;
                  if ((v70 & 0x80) == 0) {
                    break;
                  }
                  v67 += 7;
                  BOOL v14 = v68++ > 8;
                  if (v14)
                  {
                    LODWORD(v39) = 0;
LABEL_139:
                    unint64_t v2 = v69 + 1;
                    goto LABEL_140;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v39) = 0;
                }
                goto LABEL_139;
              }
              char v37 = 0;
              unsigned int v38 = 0;
              uint64_t v39 = 0;
              do
              {
                unint64_t v2 = v35 + 1;
                *((void *)this + 1) = v35 + 1;
                char v40 = *(unsigned char *)(v36 + v35);
                v39 |= (unint64_t)(v40 & 0x7F) << v37;
                if ((v40 & 0x80) == 0) {
                  goto LABEL_140;
                }
                v37 += 7;
                unint64_t v35 = v2;
                BOOL v14 = v38++ > 8;
              }
              while (!v14);
              LODWORD(v39) = 0;
LABEL_140:
              *(_DWORD *)(a1 + 40) = v39;
              goto LABEL_156;
            case 8u:
              *(_WORD *)(a1 + 68) |= 1u;
              unint64_t v41 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v42 = *(void *)this;
              if (v41 > 0xFFFFFFFFFFFFFFF5 || v41 + 10 > v2)
              {
                char v71 = 0;
                unsigned int v72 = 0;
                uint64_t v45 = 0;
                if (v2 <= v41) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v41)
                  {
                    uint64_t v45 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_145;
                  }
                  unint64_t v73 = v41++;
                  char v74 = *(unsigned char *)(v42 + v73);
                  *((void *)this + 1) = v41;
                  v45 |= (unint64_t)(v74 & 0x7F) << v71;
                  if ((v74 & 0x80) == 0) {
                    break;
                  }
                  v71 += 7;
                  BOOL v14 = v72++ > 8;
                  if (v14)
                  {
                    uint64_t v45 = 0;
LABEL_144:
                    unint64_t v2 = v73 + 1;
                    goto LABEL_145;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v45 = 0;
                }
                goto LABEL_144;
              }
              char v43 = 0;
              unsigned int v44 = 0;
              uint64_t v45 = 0;
              do
              {
                unint64_t v2 = v41 + 1;
                *((void *)this + 1) = v41 + 1;
                char v46 = *(unsigned char *)(v42 + v41);
                v45 |= (unint64_t)(v46 & 0x7F) << v43;
                if ((v46 & 0x80) == 0) {
                  goto LABEL_145;
                }
                v43 += 7;
                unint64_t v41 = v2;
                BOOL v14 = v44++ > 8;
              }
              while (!v14);
              uint64_t v45 = 0;
LABEL_145:
              *(void *)(a1 + 8) = v45;
              goto LABEL_156;
            case 9u:
              *(_WORD *)(a1 + 68) |= 2u;
              unint64_t v47 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v48 = *(void *)this;
              if (v47 > 0xFFFFFFFFFFFFFFF5 || v47 + 10 > v2)
              {
                char v75 = 0;
                unsigned int v76 = 0;
                uint64_t v51 = 0;
                if (v2 <= v47) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v47)
                  {
                    uint64_t v51 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_150;
                  }
                  unint64_t v77 = v47++;
                  char v78 = *(unsigned char *)(v48 + v77);
                  *((void *)this + 1) = v47;
                  v51 |= (unint64_t)(v78 & 0x7F) << v75;
                  if ((v78 & 0x80) == 0) {
                    break;
                  }
                  v75 += 7;
                  BOOL v14 = v76++ > 8;
                  if (v14)
                  {
                    uint64_t v51 = 0;
LABEL_149:
                    unint64_t v2 = v77 + 1;
                    goto LABEL_150;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v51 = 0;
                }
                goto LABEL_149;
              }
              char v49 = 0;
              unsigned int v50 = 0;
              uint64_t v51 = 0;
              do
              {
                unint64_t v2 = v47 + 1;
                *((void *)this + 1) = v47 + 1;
                char v52 = *(unsigned char *)(v48 + v47);
                v51 |= (unint64_t)(v52 & 0x7F) << v49;
                if ((v52 & 0x80) == 0) {
                  goto LABEL_150;
                }
                v49 += 7;
                unint64_t v47 = v2;
                BOOL v14 = v50++ > 8;
              }
              while (!v14);
              uint64_t v51 = 0;
LABEL_150:
              *(void *)(a1 + 16) = v51;
              goto LABEL_156;
            case 0xAu:
              *(_WORD *)(a1 + 68) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
LABEL_125:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_72:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_156;
            case 0xBu:
              *(_WORD *)(a1 + 68) |= 8u;
              unint64_t v53 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v54 = *(void *)this;
              if (v53 > 0xFFFFFFFFFFFFFFF5 || v53 + 10 > v2)
              {
                char v79 = 0;
                unsigned int v80 = 0;
                uint64_t v57 = 0;
                if (v2 <= v53) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v53)
                  {
                    uint64_t v57 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_155;
                  }
                  unint64_t v81 = v53++;
                  char v82 = *(unsigned char *)(v54 + v81);
                  *((void *)this + 1) = v53;
                  v57 |= (unint64_t)(v82 & 0x7F) << v79;
                  if ((v82 & 0x80) == 0) {
                    break;
                  }
                  v79 += 7;
                  BOOL v14 = v80++ > 8;
                  if (v14)
                  {
                    uint64_t v57 = 0;
LABEL_154:
                    unint64_t v2 = v81 + 1;
                    goto LABEL_155;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v57 = 0;
                }
                goto LABEL_154;
              }
              char v55 = 0;
              unsigned int v56 = 0;
              uint64_t v57 = 0;
              do
              {
                unint64_t v2 = v53 + 1;
                *((void *)this + 1) = v53 + 1;
                char v58 = *(unsigned char *)(v54 + v53);
                v57 |= (unint64_t)(v58 & 0x7F) << v55;
                if ((v58 & 0x80) == 0) {
                  goto LABEL_155;
                }
                v55 += 7;
                unint64_t v53 = v2;
                BOOL v14 = v56++ > 8;
              }
              while (!v14);
              uint64_t v57 = 0;
LABEL_155:
              *(void *)(a1 + 32) = v57;
LABEL_156:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_156;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B54830(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 68);
  if ((v4 & 0x400) != 0)
  {
    uint64_t result = PB::Writer::write(this);
    __int16 v4 = *(_WORD *)(v3 + 68);
    if ((v4 & 0x80) == 0)
    {
LABEL_3:
      if ((v4 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v4 & 0x80) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x40) == 0)
  {
LABEL_4:
    if ((v4 & 0x200) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x200) == 0)
  {
LABEL_5:
    if ((v4 & 0x100) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 60));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x100) == 0)
  {
LABEL_6:
    if ((v4 & 4) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56));
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x10) == 0)
  {
LABEL_8:
    if ((v4 & 1) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 1) == 0)
  {
LABEL_9:
    if ((v4 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 2) == 0)
  {
LABEL_10:
    if ((v4 & 0x20) == 0) {
      goto LABEL_11;
    }
LABEL_22:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44));
    if ((*(_WORD *)(v3 + 68) & 8) == 0) {
      return result;
    }
    goto LABEL_23;
  }
LABEL_21:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x20) != 0) {
    goto LABEL_22;
  }
LABEL_11:
  if ((v4 & 8) == 0) {
    return result;
  }
LABEL_23:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227B5499C(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC20AF0;
  *(_DWORD *)(result + 108) = 0;
  return result;
}

void sub_227B549C4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227B549FC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC20AF0;
  *(_DWORD *)(a1 + 108) = 0;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x800000) != 0)
  {
    char v4 = *(unsigned char *)(a2 + 100);
    int v3 = 0x800000;
    *(_DWORD *)(a1 + 108) = 0x800000;
    *(unsigned char *)(a1 + 100) = v4;
    int v2 = *(_DWORD *)(a2 + 108);
    if ((v2 & 0x80000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 0x80000) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 84);
    v3 |= 0x80000u;
    *(_DWORD *)(a1 + 108) = v3;
    *(_DWORD *)(a1 + 84) = v5;
    int v2 = *(_DWORD *)(a2 + 108);
  }
LABEL_6:
  if ((v2 & 0x20000) != 0)
  {
    float result = *(float *)(a2 + 76);
    v3 |= 0x20000u;
    *(_DWORD *)(a1 + 108) = v3;
    *(float *)(a1 + 76) = result;
    int v2 = *(_DWORD *)(a2 + 108);
    if ((v2 & 0x10000) == 0)
    {
LABEL_8:
      if ((v2 & 0x8000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_35;
    }
  }
  else if ((v2 & 0x10000) == 0)
  {
    goto LABEL_8;
  }
  float result = *(float *)(a2 + 72);
  v3 |= 0x10000u;
  *(_DWORD *)(a1 + 108) = v3;
  *(float *)(a1 + 72) = result;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x8000) == 0)
  {
LABEL_9:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_36;
  }
LABEL_35:
  float result = *(float *)(a2 + 68);
  v3 |= 0x8000u;
  *(_DWORD *)(a1 + 108) = v3;
  *(float *)(a1 + 68) = result;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x200000) == 0)
  {
LABEL_10:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_37;
  }
LABEL_36:
  float result = *(float *)(a2 + 92);
  v3 |= 0x200000u;
  *(_DWORD *)(a1 + 108) = v3;
  *(float *)(a1 + 92) = result;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x40000) == 0)
  {
LABEL_11:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_38;
  }
LABEL_37:
  float result = *(float *)(a2 + 80);
  v3 |= 0x40000u;
  *(_DWORD *)(a1 + 108) = v3;
  *(float *)(a1 + 80) = result;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x400000) == 0)
  {
LABEL_12:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_39;
  }
LABEL_38:
  float result = *(float *)(a2 + 96);
  v3 |= 0x400000u;
  *(_DWORD *)(a1 + 108) = v3;
  *(float *)(a1 + 96) = result;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x1000) == 0)
  {
LABEL_13:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_40;
  }
LABEL_39:
  float result = *(float *)(a2 + 56);
  v3 |= 0x1000u;
  *(_DWORD *)(a1 + 108) = v3;
  *(float *)(a1 + 56) = result;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x100000) == 0)
  {
LABEL_14:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_41;
  }
LABEL_40:
  float result = *(float *)(a2 + 88);
  v3 |= 0x100000u;
  *(_DWORD *)(a1 + 108) = v3;
  *(float *)(a1 + 88) = result;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x4000) == 0)
  {
LABEL_15:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_42;
  }
LABEL_41:
  float result = *(float *)(a2 + 64);
  v3 |= 0x4000u;
  *(_DWORD *)(a1 + 108) = v3;
  *(float *)(a1 + 64) = result;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x2000) == 0)
  {
LABEL_16:
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_43;
  }
LABEL_42:
  float result = *(float *)(a2 + 60);
  v3 |= 0x2000u;
  *(_DWORD *)(a1 + 108) = v3;
  *(float *)(a1 + 60) = result;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_17:
    if ((v2 & 0x2000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_44;
  }
LABEL_43:
  char v7 = *(unsigned char *)(a2 + 103);
  v3 |= 0x4000000u;
  *(_DWORD *)(a1 + 108) = v3;
  *(unsigned char *)(a1 + 103) = v7;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x2000000) == 0)
  {
LABEL_18:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_45;
  }
LABEL_44:
  char v8 = *(unsigned char *)(a2 + 102);
  v3 |= 0x2000000u;
  *(_DWORD *)(a1 + 108) = v3;
  *(unsigned char *)(a1 + 102) = v8;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_19:
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_46;
  }
LABEL_45:
  char v9 = *(unsigned char *)(a2 + 101);
  v3 |= 0x1000000u;
  *(_DWORD *)(a1 + 108) = v3;
  *(unsigned char *)(a1 + 101) = v9;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x8000000) == 0)
  {
LABEL_20:
    if ((v2 & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_47;
  }
LABEL_46:
  char v10 = *(unsigned char *)(a2 + 104);
  v3 |= 0x8000000u;
  *(_DWORD *)(a1 + 108) = v3;
  *(unsigned char *)(a1 + 104) = v10;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 2) == 0)
  {
LABEL_21:
    if ((v2 & 0x800) == 0) {
      goto LABEL_22;
    }
    goto LABEL_48;
  }
LABEL_47:
  int v11 = *(_DWORD *)(a2 + 12);
  v3 |= 2u;
  *(_DWORD *)(a1 + 108) = v3;
  *(_DWORD *)(a1 + 12) = v11;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x800) == 0)
  {
LABEL_22:
    if ((v2 & 0x100) == 0) {
      goto LABEL_23;
    }
    goto LABEL_49;
  }
LABEL_48:
  float result = *(float *)(a2 + 52);
  v3 |= 0x800u;
  *(_DWORD *)(a1 + 108) = v3;
  *(float *)(a1 + 52) = result;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x100) == 0)
  {
LABEL_23:
    if ((v2 & 0x80) == 0) {
      goto LABEL_24;
    }
    goto LABEL_50;
  }
LABEL_49:
  int v12 = *(_DWORD *)(a2 + 40);
  v3 |= 0x100u;
  *(_DWORD *)(a1 + 108) = v3;
  *(_DWORD *)(a1 + 40) = v12;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x80) == 0)
  {
LABEL_24:
    if ((v2 & 0x40) == 0) {
      goto LABEL_25;
    }
    goto LABEL_51;
  }
LABEL_50:
  int v13 = *(_DWORD *)(a2 + 36);
  v3 |= 0x80u;
  *(_DWORD *)(a1 + 108) = v3;
  *(_DWORD *)(a1 + 36) = v13;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x40) == 0)
  {
LABEL_25:
    if ((v2 & 0x20) == 0) {
      goto LABEL_26;
    }
    goto LABEL_52;
  }
LABEL_51:
  float result = *(float *)(a2 + 32);
  v3 |= 0x40u;
  *(_DWORD *)(a1 + 108) = v3;
  *(float *)(a1 + 32) = result;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x20) == 0)
  {
LABEL_26:
    if ((v2 & 8) == 0) {
      goto LABEL_27;
    }
    goto LABEL_53;
  }
LABEL_52:
  float result = *(float *)(a2 + 28);
  v3 |= 0x20u;
  *(_DWORD *)(a1 + 108) = v3;
  *(float *)(a1 + 28) = result;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 8) == 0)
  {
LABEL_27:
    if ((v2 & 4) == 0) {
      goto LABEL_28;
    }
    goto LABEL_54;
  }
LABEL_53:
  float result = *(float *)(a2 + 20);
  v3 |= 8u;
  *(_DWORD *)(a1 + 108) = v3;
  *(float *)(a1 + 20) = result;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 4) == 0)
  {
LABEL_28:
    if ((v2 & 1) == 0) {
      goto LABEL_29;
    }
    goto LABEL_55;
  }
LABEL_54:
  float result = *(float *)(a2 + 16);
  v3 |= 4u;
  *(_DWORD *)(a1 + 108) = v3;
  *(float *)(a1 + 16) = result;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 1) == 0)
  {
LABEL_29:
    if ((v2 & 0x10) == 0) {
      goto LABEL_30;
    }
    goto LABEL_56;
  }
LABEL_55:
  float result = *(float *)(a2 + 8);
  v3 |= 1u;
  *(_DWORD *)(a1 + 108) = v3;
  *(float *)(a1 + 8) = result;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x10) == 0)
  {
LABEL_30:
    if ((v2 & 0x400) == 0) {
      goto LABEL_31;
    }
    goto LABEL_57;
  }
LABEL_56:
  float result = *(float *)(a2 + 24);
  v3 |= 0x10u;
  *(_DWORD *)(a1 + 108) = v3;
  *(float *)(a1 + 24) = result;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x400) == 0)
  {
LABEL_31:
    if ((v2 & 0x200) == 0) {
      return result;
    }
LABEL_58:
    float result = *(float *)(a2 + 44);
    *(_DWORD *)(a1 + 108) = v3 | 0x200;
    *(float *)(a1 + 44) = result;
    return result;
  }
LABEL_57:
  float result = *(float *)(a2 + 48);
  v3 |= 0x400u;
  *(_DWORD *)(a1 + 108) = v3;
  *(float *)(a1 + 48) = result;
  if ((*(_DWORD *)(a2 + 108) & 0x200) != 0) {
    goto LABEL_58;
  }
  return result;
}

uint64_t sub_227B54D38(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 108);
  if (v5)
  {
    PB::TextFormatter::format(this, "configDelaySpreadFpThreshold", *(float *)(a1 + 8));
    int v5 = *(_DWORD *)(a1 + 108);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_35;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "configFeatureSamples");
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "configNonPlanarDelaySpreadThreshold", *(float *)(a1 + 16));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "configNonPlanarPaprThreshold", *(float *)(a1 + 20));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "configPeakEnergyFpThreshold", *(float *)(a1 + 24));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "configPlanarDelaySpreadThreshold", *(float *)(a1 + 28));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "configPlanarPaprThreshold", *(float *)(a1 + 32));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "configPostTriggerLimitTime");
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x100) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "configPreTriggerLimitTime");
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "configRawRmsMaxFpThreshold", *(float *)(a1 + 44));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x400) == 0)
  {
LABEL_12:
    if ((v5 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "configRawRmsMeanFpThreshold", *(float *)(a1 + 48));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x800) == 0)
  {
LABEL_13:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "configRmsClipMinAmp", *(float *)(a1 + 52));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x1000) == 0)
  {
LABEL_14:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_46;
  }
LABEL_45:
  PB::TextFormatter::format(this, "delaySpread", *(float *)(a1 + 56));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x800000) == 0)
  {
LABEL_15:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_47;
  }
LABEL_46:
  PB::TextFormatter::format(this, "isAudioTPQ");
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_16:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(this, "isFpThresholdsMet");
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_17:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(this, "isNonPlanarTp");
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_18:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_50;
  }
LABEL_49:
  PB::TextFormatter::format(this, "isPlanarTp");
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_19:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_51;
  }
LABEL_50:
  PB::TextFormatter::format(this, "isTauBarWithinRange");
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x2000) == 0)
  {
LABEL_20:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_52;
  }
LABEL_51:
  PB::TextFormatter::format(this, "papr", *(float *)(a1 + 60));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x4000) == 0)
  {
LABEL_21:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_53;
  }
LABEL_52:
  PB::TextFormatter::format(this, "peakEnergy", *(float *)(a1 + 64));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x8000) == 0)
  {
LABEL_22:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(this, "rawRmsMax", *(float *)(a1 + 68));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x10000) == 0)
  {
LABEL_23:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(this, "rawRmsMean", *(float *)(a1 + 72));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x20000) == 0)
  {
LABEL_24:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_56;
  }
LABEL_55:
  PB::TextFormatter::format(this, "rawRmsSum", *(float *)(a1 + 76));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x40000) == 0)
  {
LABEL_25:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_57;
  }
LABEL_56:
  PB::TextFormatter::format(this, "rmsClipSum", *(float *)(a1 + 80));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x80000) == 0)
  {
LABEL_26:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_58;
  }
LABEL_57:
  PB::TextFormatter::format(this, "sampleCount");
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x100000) == 0)
  {
LABEL_27:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_59;
  }
LABEL_58:
  PB::TextFormatter::format(this, "t2TimesRmsClipSum", *(float *)(a1 + 88));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x200000) == 0)
  {
LABEL_28:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_29;
  }
LABEL_59:
  PB::TextFormatter::format(this, "tTimesRmsClipSum", *(float *)(a1 + 92));
  if ((*(_DWORD *)(a1 + 108) & 0x400000) != 0) {
LABEL_29:
  }
    PB::TextFormatter::format(this, "tauBar", *(float *)(a1 + 96));
LABEL_30:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B550FC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_DWORD *)(a1 + 108) |= 0x800000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v21 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v20 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v21 = v20 != 0;
              }
              *(unsigned char *)(a1 + 100) = v21;
              goto LABEL_159;
            case 2u:
              *(_DWORD *)(a1 + 108) |= 0x80000u;
              unint64_t v23 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v24 = *(void *)this;
              if (v23 > 0xFFFFFFFFFFFFFFF5 || v23 + 10 > v2)
              {
                char v55 = 0;
                unsigned int v56 = 0;
                uint64_t v27 = 0;
                if (v2 <= v23) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v23)
                  {
                    LODWORD(v27) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_168;
                  }
                  unint64_t v57 = v23++;
                  char v58 = *(unsigned char *)(v24 + v57);
                  *((void *)this + 1) = v23;
                  v27 |= (unint64_t)(v58 & 0x7F) << v55;
                  if ((v58 & 0x80) == 0) {
                    break;
                  }
                  v55 += 7;
                  BOOL v14 = v56++ > 8;
                  if (v14)
                  {
                    LODWORD(v27) = 0;
LABEL_167:
                    unint64_t v2 = v57 + 1;
                    goto LABEL_168;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v27) = 0;
                }
                goto LABEL_167;
              }
              char v25 = 0;
              unsigned int v26 = 0;
              uint64_t v27 = 0;
              do
              {
                unint64_t v2 = v23 + 1;
                *((void *)this + 1) = v23 + 1;
                char v28 = *(unsigned char *)(v24 + v23);
                v27 |= (unint64_t)(v28 & 0x7F) << v25;
                if ((v28 & 0x80) == 0) {
                  goto LABEL_168;
                }
                v25 += 7;
                unint64_t v23 = v2;
                BOOL v14 = v26++ > 8;
              }
              while (!v14);
              LODWORD(v27) = 0;
LABEL_168:
              *(_DWORD *)(a1 + 84) = v27;
              goto LABEL_159;
            case 3u:
              *(_DWORD *)(a1 + 108) |= 0x20000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 4u:
              *(_DWORD *)(a1 + 108) |= 0x10000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 5u:
              *(_DWORD *)(a1 + 108) |= 0x8000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 68) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 6u:
              *(_DWORD *)(a1 + 108) |= 0x200000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 7u:
              *(_DWORD *)(a1 + 108) |= 0x40000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 8u:
              *(_DWORD *)(a1 + 108) |= 0x400000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 9u:
              *(_DWORD *)(a1 + 108) |= 0x1000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 0xAu:
              *(_DWORD *)(a1 + 108) |= 0x100000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 0xBu:
              *(_DWORD *)(a1 + 108) |= 0x4000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 0xCu:
              *(_DWORD *)(a1 + 108) |= 0x2000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 0xDu:
              *(_DWORD *)(a1 + 108) |= 0x4000000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v30 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v29 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v30 = v29 != 0;
              }
              *(unsigned char *)(a1 + 103) = v30;
              goto LABEL_159;
            case 0xEu:
              *(_DWORD *)(a1 + 108) |= 0x2000000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v32 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v31 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v32 = v31 != 0;
              }
              *(unsigned char *)(a1 + 102) = v32;
              goto LABEL_159;
            case 0xFu:
              *(_DWORD *)(a1 + 108) |= 0x1000000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v34 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v33 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v34 = v33 != 0;
              }
              *(unsigned char *)(a1 + 101) = v34;
              goto LABEL_159;
            case 0x10u:
              *(_DWORD *)(a1 + 108) |= 0x8000000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v36 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v35 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v36 = v35 != 0;
              }
              *(unsigned char *)(a1 + 104) = v36;
              goto LABEL_159;
            case 0x11u:
              *(_DWORD *)(a1 + 108) |= 2u;
              unint64_t v37 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v38 = *(void *)this;
              if (v37 > 0xFFFFFFFFFFFFFFF5 || v37 + 10 > v2)
              {
                char v59 = 0;
                unsigned int v60 = 0;
                uint64_t v41 = 0;
                if (v2 <= v37) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v37)
                  {
                    LODWORD(v41) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_173;
                  }
                  unint64_t v61 = v37++;
                  char v62 = *(unsigned char *)(v38 + v61);
                  *((void *)this + 1) = v37;
                  v41 |= (unint64_t)(v62 & 0x7F) << v59;
                  if ((v62 & 0x80) == 0) {
                    break;
                  }
                  v59 += 7;
                  BOOL v14 = v60++ > 8;
                  if (v14)
                  {
                    LODWORD(v41) = 0;
LABEL_172:
                    unint64_t v2 = v61 + 1;
                    goto LABEL_173;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v41) = 0;
                }
                goto LABEL_172;
              }
              char v39 = 0;
              unsigned int v40 = 0;
              uint64_t v41 = 0;
              do
              {
                unint64_t v2 = v37 + 1;
                *((void *)this + 1) = v37 + 1;
                char v42 = *(unsigned char *)(v38 + v37);
                v41 |= (unint64_t)(v42 & 0x7F) << v39;
                if ((v42 & 0x80) == 0) {
                  goto LABEL_173;
                }
                v39 += 7;
                unint64_t v37 = v2;
                BOOL v14 = v40++ > 8;
              }
              while (!v14);
              LODWORD(v41) = 0;
LABEL_173:
              *(_DWORD *)(a1 + 12) = v41;
              goto LABEL_159;
            case 0x12u:
              *(_DWORD *)(a1 + 108) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 0x13u:
              *(_DWORD *)(a1 + 108) |= 0x100u;
              unint64_t v43 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v44 = *(void *)this;
              if (v43 > 0xFFFFFFFFFFFFFFF5 || v43 + 10 > v2)
              {
                char v63 = 0;
                unsigned int v64 = 0;
                uint64_t v47 = 0;
                if (v2 <= v43) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v43)
                  {
                    LODWORD(v47) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_178;
                  }
                  unint64_t v65 = v43++;
                  char v66 = *(unsigned char *)(v44 + v65);
                  *((void *)this + 1) = v43;
                  v47 |= (unint64_t)(v66 & 0x7F) << v63;
                  if ((v66 & 0x80) == 0) {
                    break;
                  }
                  v63 += 7;
                  BOOL v14 = v64++ > 8;
                  if (v14)
                  {
                    LODWORD(v47) = 0;
LABEL_177:
                    unint64_t v2 = v65 + 1;
                    goto LABEL_178;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v47) = 0;
                }
                goto LABEL_177;
              }
              char v45 = 0;
              unsigned int v46 = 0;
              uint64_t v47 = 0;
              do
              {
                unint64_t v2 = v43 + 1;
                *((void *)this + 1) = v43 + 1;
                char v48 = *(unsigned char *)(v44 + v43);
                v47 |= (unint64_t)(v48 & 0x7F) << v45;
                if ((v48 & 0x80) == 0) {
                  goto LABEL_178;
                }
                v45 += 7;
                unint64_t v43 = v2;
                BOOL v14 = v46++ > 8;
              }
              while (!v14);
              LODWORD(v47) = 0;
LABEL_178:
              *(_DWORD *)(a1 + 40) = v47;
              goto LABEL_159;
            case 0x14u:
              *(_DWORD *)(a1 + 108) |= 0x80u;
              unint64_t v49 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v50 = *(void *)this;
              if (v49 > 0xFFFFFFFFFFFFFFF5 || v49 + 10 > v2)
              {
                char v67 = 0;
                unsigned int v68 = 0;
                uint64_t v53 = 0;
                if (v2 <= v49) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v49)
                  {
                    LODWORD(v53) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_183;
                  }
                  unint64_t v69 = v49++;
                  char v70 = *(unsigned char *)(v50 + v69);
                  *((void *)this + 1) = v49;
                  v53 |= (unint64_t)(v70 & 0x7F) << v67;
                  if ((v70 & 0x80) == 0) {
                    break;
                  }
                  v67 += 7;
                  BOOL v14 = v68++ > 8;
                  if (v14)
                  {
                    LODWORD(v53) = 0;
LABEL_182:
                    unint64_t v2 = v69 + 1;
                    goto LABEL_183;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v53) = 0;
                }
                goto LABEL_182;
              }
              char v51 = 0;
              unsigned int v52 = 0;
              uint64_t v53 = 0;
              do
              {
                unint64_t v2 = v49 + 1;
                *((void *)this + 1) = v49 + 1;
                char v54 = *(unsigned char *)(v50 + v49);
                v53 |= (unint64_t)(v54 & 0x7F) << v51;
                if ((v54 & 0x80) == 0) {
                  goto LABEL_183;
                }
                v51 += 7;
                unint64_t v49 = v2;
                BOOL v14 = v52++ > 8;
              }
              while (!v14);
              LODWORD(v53) = 0;
LABEL_183:
              *(_DWORD *)(a1 + 36) = v53;
LABEL_159:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 0x15u:
              *(_DWORD *)(a1 + 108) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 0x16u:
              *(_DWORD *)(a1 + 108) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 0x17u:
              *(_DWORD *)(a1 + 108) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 0x18u:
              *(_DWORD *)(a1 + 108) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 0x19u:
              *(_DWORD *)(a1 + 108) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 8) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 0x1Au:
              *(_DWORD *)(a1 + 108) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 0x1Bu:
              *(_DWORD *)(a1 + 108) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 0x1Cu:
              *(_DWORD *)(a1 + 108) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
LABEL_158:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_118:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_159;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_159;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B55C3C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 108);
  if ((v4 & 0x800000) != 0)
  {
    uint64_t result = PB::Writer::write(this);
    int v4 = *(_DWORD *)(v3 + 108);
    if ((v4 & 0x80000) == 0)
    {
LABEL_3:
      if ((v4 & 0x20000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_32;
    }
  }
  else if ((v4 & 0x80000) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x20000) == 0)
  {
LABEL_4:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x10000) == 0)
  {
LABEL_5:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x8000) == 0)
  {
LABEL_6:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 68));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x200000) == 0)
  {
LABEL_7:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 92));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x40000) == 0)
  {
LABEL_8:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x400000) == 0)
  {
LABEL_9:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 96));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x1000) == 0)
  {
LABEL_10:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x100000) == 0)
  {
LABEL_11:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 88));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x4000) == 0)
  {
LABEL_12:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x2000) == 0)
  {
LABEL_13:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 60));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_14:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_15:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_16:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_17:
    if ((v4 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 2) == 0)
  {
LABEL_18:
    if ((v4 & 0x800) == 0) {
      goto LABEL_19;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x800) == 0)
  {
LABEL_19:
    if ((v4 & 0x100) == 0) {
      goto LABEL_20;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x100) == 0)
  {
LABEL_20:
    if ((v4 & 0x80) == 0) {
      goto LABEL_21;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x80) == 0)
  {
LABEL_21:
    if ((v4 & 0x40) == 0) {
      goto LABEL_22;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x40) == 0)
  {
LABEL_22:
    if ((v4 & 0x20) == 0) {
      goto LABEL_23;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x20) == 0)
  {
LABEL_23:
    if ((v4 & 8) == 0) {
      goto LABEL_24;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 8) == 0)
  {
LABEL_24:
    if ((v4 & 4) == 0) {
      goto LABEL_25;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 4) == 0)
  {
LABEL_25:
    if ((v4 & 1) == 0) {
      goto LABEL_26;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 1) == 0)
  {
LABEL_26:
    if ((v4 & 0x10) == 0) {
      goto LABEL_27;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 8));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x10) == 0)
  {
LABEL_27:
    if ((v4 & 0x400) == 0) {
      goto LABEL_28;
    }
LABEL_56:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48));
    if ((*(_DWORD *)(v3 + 108) & 0x200) == 0) {
      return result;
    }
    goto LABEL_57;
  }
LABEL_55:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x400) != 0) {
    goto LABEL_56;
  }
LABEL_28:
  if ((v4 & 0x200) == 0) {
    return result;
  }
LABEL_57:
  float v5 = *(float *)(v3 + 44);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227B55F84(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC20B28;
  *(_DWORD *)(result + 152) = 0;
  return result;
}

void sub_227B55FAC(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227B55FE4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC20B28;
  *(_DWORD *)(a1 + 152) = 0;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x20000000) != 0)
  {
    char v4 = *(unsigned char *)(a2 + 148);
    int v3 = 0x20000000;
    *(_DWORD *)(a1 + 152) = 0x20000000;
    *(unsigned char *)(a1 + 148) = v4;
    int v2 = *(_DWORD *)(a2 + 152);
    if ((v2 & 0x200000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 0x200000) != 0)
  {
LABEL_5:
    float result = *(float *)(a2 + 116);
    v3 |= 0x200000u;
    *(_DWORD *)(a1 + 152) = v3;
    *(float *)(a1 + 116) = result;
    int v2 = *(_DWORD *)(a2 + 152);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    uint64_t v6 = *(void *)(a2 + 24);
    v3 |= 4u;
    *(_DWORD *)(a1 + 152) = v3;
    *(void *)(a1 + 24) = v6;
    int v2 = *(_DWORD *)(a2 + 152);
    if ((v2 & 0x10000000) == 0)
    {
LABEL_8:
      if ((v2 & 0x4000000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_37;
    }
  }
  else if ((v2 & 0x10000000) == 0)
  {
    goto LABEL_8;
  }
  float result = *(float *)(a2 + 144);
  v3 |= 0x10000000u;
  *(_DWORD *)(a1 + 152) = v3;
  *(float *)(a1 + 144) = result;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_9:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_38;
  }
LABEL_37:
  float result = *(float *)(a2 + 136);
  v3 |= 0x4000000u;
  *(_DWORD *)(a1 + 152) = v3;
  *(float *)(a1 + 136) = result;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x100000) == 0)
  {
LABEL_10:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_39;
  }
LABEL_38:
  int v7 = *(_DWORD *)(a2 + 112);
  v3 |= 0x100000u;
  *(_DWORD *)(a1 + 152) = v3;
  *(_DWORD *)(a1 + 112) = v7;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x40000) == 0)
  {
LABEL_11:
    if ((v2 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_40;
  }
LABEL_39:
  int v8 = *(_DWORD *)(a2 + 104);
  v3 |= 0x40000u;
  *(_DWORD *)(a1 + 152) = v3;
  *(_DWORD *)(a1 + 104) = v8;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x10) == 0)
  {
LABEL_12:
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t v9 = *(void *)(a2 + 40);
  v3 |= 0x10u;
  *(_DWORD *)(a1 + 152) = v3;
  *(void *)(a1 + 40) = v9;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x8000000) == 0)
  {
LABEL_13:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_42;
  }
LABEL_41:
  float result = *(float *)(a2 + 140);
  v3 |= 0x8000000u;
  *(_DWORD *)(a1 + 152) = v3;
  *(float *)(a1 + 140) = result;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x8000) == 0)
  {
LABEL_14:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_43;
  }
LABEL_42:
  int v10 = *(_DWORD *)(a2 + 92);
  v3 |= 0x8000u;
  *(_DWORD *)(a1 + 152) = v3;
  *(_DWORD *)(a1 + 92) = v10;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x4000) == 0)
  {
LABEL_15:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_44;
  }
LABEL_43:
  int v11 = *(_DWORD *)(a2 + 88);
  v3 |= 0x4000u;
  *(_DWORD *)(a1 + 152) = v3;
  *(_DWORD *)(a1 + 88) = v11;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x800000) == 0)
  {
LABEL_16:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_45;
  }
LABEL_44:
  float result = *(float *)(a2 + 124);
  v3 |= 0x800000u;
  *(_DWORD *)(a1 + 152) = v3;
  *(float *)(a1 + 124) = result;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x400000) == 0)
  {
LABEL_17:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_46;
  }
LABEL_45:
  float result = *(float *)(a2 + 120);
  v3 |= 0x400000u;
  *(_DWORD *)(a1 + 152) = v3;
  *(float *)(a1 + 120) = result;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_18:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_47;
  }
LABEL_46:
  float result = *(float *)(a2 + 128);
  v3 |= 0x1000000u;
  *(_DWORD *)(a1 + 152) = v3;
  *(float *)(a1 + 128) = result;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x2000) == 0)
  {
LABEL_19:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_48;
  }
LABEL_47:
  float result = *(float *)(a2 + 84);
  v3 |= 0x2000u;
  *(_DWORD *)(a1 + 152) = v3;
  *(float *)(a1 + 84) = result;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x1000) == 0)
  {
LABEL_20:
    if ((v2 & 0x800) == 0) {
      goto LABEL_21;
    }
    goto LABEL_49;
  }
LABEL_48:
  float result = *(float *)(a2 + 80);
  v3 |= 0x1000u;
  *(_DWORD *)(a1 + 152) = v3;
  *(float *)(a1 + 80) = result;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x800) == 0)
  {
LABEL_21:
    if ((v2 & 0x400) == 0) {
      goto LABEL_22;
    }
    goto LABEL_50;
  }
LABEL_49:
  float result = *(float *)(a2 + 76);
  v3 |= 0x800u;
  *(_DWORD *)(a1 + 152) = v3;
  *(float *)(a1 + 76) = result;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x400) == 0)
  {
LABEL_22:
    if ((v2 & 0x200) == 0) {
      goto LABEL_23;
    }
    goto LABEL_51;
  }
LABEL_50:
  float result = *(float *)(a2 + 72);
  v3 |= 0x400u;
  *(_DWORD *)(a1 + 152) = v3;
  *(float *)(a1 + 72) = result;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x200) == 0)
  {
LABEL_23:
    if ((v2 & 1) == 0) {
      goto LABEL_24;
    }
    goto LABEL_52;
  }
LABEL_51:
  float result = *(float *)(a2 + 68);
  v3 |= 0x200u;
  *(_DWORD *)(a1 + 152) = v3;
  *(float *)(a1 + 68) = result;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 1) == 0)
  {
LABEL_24:
    if ((v2 & 2) == 0) {
      goto LABEL_25;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t v12 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_DWORD *)(a1 + 152) = v3;
  *(void *)(a1 + 8) = v12;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 2) == 0)
  {
LABEL_25:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t v13 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_DWORD *)(a1 + 152) = v3;
  *(void *)(a1 + 16) = v13;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x10000) == 0)
  {
LABEL_26:
    if ((v2 & 0x20) == 0) {
      goto LABEL_27;
    }
    goto LABEL_55;
  }
LABEL_54:
  float result = *(float *)(a2 + 96);
  v3 |= 0x10000u;
  *(_DWORD *)(a1 + 152) = v3;
  *(float *)(a1 + 96) = result;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x20) == 0)
  {
LABEL_27:
    if ((v2 & 0x2000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t v14 = *(void *)(a2 + 48);
  v3 |= 0x20u;
  *(_DWORD *)(a1 + 152) = v3;
  *(void *)(a1 + 48) = v14;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x2000000) == 0)
  {
LABEL_28:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_57;
  }
LABEL_56:
  float result = *(float *)(a2 + 132);
  v3 |= 0x2000000u;
  *(_DWORD *)(a1 + 152) = v3;
  *(float *)(a1 + 132) = result;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x20000) == 0)
  {
LABEL_29:
    if ((v2 & 0x100) == 0) {
      goto LABEL_30;
    }
    goto LABEL_58;
  }
LABEL_57:
  float result = *(float *)(a2 + 100);
  v3 |= 0x20000u;
  *(_DWORD *)(a1 + 152) = v3;
  *(float *)(a1 + 100) = result;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x100) == 0)
  {
LABEL_30:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_59;
  }
LABEL_58:
  float result = *(float *)(a2 + 64);
  v3 |= 0x100u;
  *(_DWORD *)(a1 + 152) = v3;
  *(float *)(a1 + 64) = result;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x80000) == 0)
  {
LABEL_31:
    if ((v2 & 0x40) == 0) {
      goto LABEL_32;
    }
    goto LABEL_60;
  }
LABEL_59:
  int v15 = *(_DWORD *)(a2 + 108);
  v3 |= 0x80000u;
  *(_DWORD *)(a1 + 152) = v3;
  *(_DWORD *)(a1 + 108) = v15;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x40) == 0)
  {
LABEL_32:
    if ((v2 & 8) == 0) {
      goto LABEL_33;
    }
    goto LABEL_61;
  }
LABEL_60:
  float result = *(float *)(a2 + 56);
  v3 |= 0x40u;
  *(_DWORD *)(a1 + 152) = v3;
  *(float *)(a1 + 56) = result;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 8) == 0)
  {
LABEL_33:
    if ((v2 & 0x80) == 0) {
      return result;
    }
LABEL_62:
    float result = *(float *)(a2 + 60);
    *(_DWORD *)(a1 + 152) = v3 | 0x80;
    *(float *)(a1 + 60) = result;
    return result;
  }
LABEL_61:
  uint64_t v16 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_DWORD *)(a1 + 152) = v3;
  *(void *)(a1 + 32) = v16;
  if ((*(_DWORD *)(a2 + 152) & 0x80) != 0) {
    goto LABEL_62;
  }
  return result;
}

uint64_t sub_227B56358(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x20000000) != 0)
  {
    PB::TextFormatter::format(this, "airbagDetected");
    int v5 = *(_DWORD *)(a1 + 152);
    if ((v5 & 0x40) == 0)
    {
LABEL_3:
      if ((v5 & 0x80) == 0) {
        goto LABEL_4;
      }
      goto LABEL_37;
    }
  }
  else if ((v5 & 0x40) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "configMaximumAccelBaroTimeDifferenceThreshold", *(float *)(a1 + 56));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x80) == 0)
  {
LABEL_4:
    if ((v5 & 0x100) == 0) {
      goto LABEL_5;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "configMinimumAccelNormInWindowThreshold", *(float *)(a1 + 60));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x100) == 0)
  {
LABEL_5:
    if ((v5 & 0x200) == 0) {
      goto LABEL_6;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "configMinimumAccelNormOverEpochThreshold", *(float *)(a1 + 64));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x200) == 0)
  {
LABEL_6:
    if ((v5 & 0x400) == 0) {
      goto LABEL_7;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "configMinimumAccelNormThreshold", *(float *)(a1 + 68));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x400) == 0)
  {
LABEL_7:
    if ((v5 & 0x800) == 0) {
      goto LABEL_8;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "configMinimumWidthThreshold", *(float *)(a1 + 72));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x800) == 0)
  {
LABEL_8:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "configPeakPressureThreshold", *(float *)(a1 + 76));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x1000) == 0)
  {
LABEL_9:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "configRiseTimeThreshold", *(float *)(a1 + 80));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x2000) == 0)
  {
LABEL_10:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "configWidthThreshold", *(float *)(a1 + 84));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x4000) == 0)
  {
LABEL_11:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "diffPeakTimeTrigger");
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x8000) == 0)
  {
LABEL_12:
    if ((v5 & 1) == 0) {
      goto LABEL_13;
    }
    goto LABEL_46;
  }
LABEL_45:
  PB::TextFormatter::format(this, "diffTimeTrigger");
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 1) == 0)
  {
LABEL_13:
    if ((v5 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_47;
  }
LABEL_46:
  PB::TextFormatter::format(this, "epochFirstTimestamp");
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 2) == 0)
  {
LABEL_14:
    if ((v5 & 4) == 0) {
      goto LABEL_15;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(this, "epochLastTimestamp");
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 4) == 0)
  {
LABEL_15:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(this, "eventStartTime");
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x10000) == 0)
  {
LABEL_16:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_50;
  }
LABEL_49:
  PB::TextFormatter::format(this, "maxAccelNormInWindow", *(float *)(a1 + 96));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x20000) == 0)
  {
LABEL_17:
    if ((v5 & 8) == 0) {
      goto LABEL_18;
    }
    goto LABEL_51;
  }
LABEL_50:
  PB::TextFormatter::format(this, "maxAccelNormOverEpoch", *(float *)(a1 + 100));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 8) == 0)
  {
LABEL_18:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_52;
  }
LABEL_51:
  PB::TextFormatter::format(this, "maxAccelNormOverEpochTimestamp");
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x40000) == 0)
  {
LABEL_19:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_53;
  }
LABEL_52:
  PB::TextFormatter::format(this, "numAirbags");
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x80000) == 0)
  {
LABEL_20:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(this, "numBarosInEpoch");
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x100000) == 0)
  {
LABEL_21:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(this, "odr");
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x200000) == 0)
  {
LABEL_22:
    if ((v5 & 0x10) == 0) {
      goto LABEL_23;
    }
    goto LABEL_56;
  }
LABEL_55:
  PB::TextFormatter::format(this, "peakPressure", *(float *)(a1 + 116));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x10) == 0)
  {
LABEL_23:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_57;
  }
LABEL_56:
  PB::TextFormatter::format(this, "peakTimestamp");
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x400000) == 0)
  {
LABEL_24:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_58;
  }
LABEL_57:
  PB::TextFormatter::format(this, "postEventPressureMedian", *(float *)(a1 + 120));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x800000) == 0)
  {
LABEL_25:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_59;
  }
LABEL_58:
  PB::TextFormatter::format(this, "preEventPressureMedian", *(float *)(a1 + 124));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_60;
  }
LABEL_59:
  PB::TextFormatter::format(this, "prePostEventPressureMedian", *(float *)(a1 + 128));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_61;
  }
LABEL_60:
  PB::TextFormatter::format(this, "pressureMedian", *(float *)(a1 + 132));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_62;
  }
LABEL_61:
  PB::TextFormatter::format(this, "riseTime", *(float *)(a1 + 136));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v5 & 0x20) == 0) {
      goto LABEL_30;
    }
    goto LABEL_63;
  }
LABEL_62:
  PB::TextFormatter::format(this, "riseTimeTo80", *(float *)(a1 + 140));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x20) == 0)
  {
LABEL_30:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_31;
  }
LABEL_63:
  PB::TextFormatter::format(this, "timestamp");
  if ((*(_DWORD *)(a1 + 152) & 0x10000000) != 0) {
LABEL_31:
  }
    PB::TextFormatter::format(this, "width", *(float *)(a1 + 144));
LABEL_32:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B5675C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(_DWORD *)(a1 + 152) |= 0x20000000u;
          unint64_t v20 = *((void *)this + 1);
          if (v20 >= *((void *)this + 2))
          {
            BOOL v23 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v21 = v20 + 1;
            int v22 = *(unsigned __int8 *)(*(void *)this + v20);
            *((void *)this + 1) = v21;
            BOOL v23 = v22 != 0;
          }
          *(unsigned char *)(a1 + 148) = v23;
          goto LABEL_238;
        case 2u:
          *(_DWORD *)(a1 + 152) |= 0x200000u;
          unint64_t v25 = *((void *)this + 1);
          if (v25 > 0xFFFFFFFFFFFFFFFBLL || v25 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 116) = *(_DWORD *)(*(void *)this + v25);
          goto LABEL_237;
        case 3u:
          *(_DWORD *)(a1 + 152) |= 4u;
          unint64_t v26 = *((void *)this + 1);
          unint64_t v27 = *((void *)this + 2);
          uint64_t v28 = *(void *)this;
          if (v26 <= 0xFFFFFFFFFFFFFFF5 && v26 + 10 <= v27)
          {
            char v29 = 0;
            unsigned int v30 = 0;
            uint64_t v31 = 0;
            do
            {
              unint64_t v32 = v26 + 1;
              *((void *)this + 1) = v26 + 1;
              char v33 = *(unsigned char *)(v28 + v26);
              v31 |= (unint64_t)(v33 & 0x7F) << v29;
              if ((v33 & 0x80) == 0) {
                goto LABEL_246;
              }
              v29 += 7;
              unint64_t v26 = v32;
              BOOL v14 = v30++ > 8;
            }
            while (!v14);
LABEL_165:
            uint64_t v31 = 0;
            goto LABEL_246;
          }
          char v131 = 0;
          unsigned int v132 = 0;
          uint64_t v31 = 0;
          if (v27 <= v26) {
            unint64_t v27 = *((void *)this + 1);
          }
          while (2)
          {
            if (v27 == v26)
            {
              uint64_t v31 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v133 = v26 + 1;
              char v134 = *(unsigned char *)(v28 + v26);
              *((void *)this + 1) = v133;
              v31 |= (unint64_t)(v134 & 0x7F) << v131;
              if (v134 < 0)
              {
                v131 += 7;
                unint64_t v26 = v133;
                BOOL v14 = v132++ > 8;
                if (v14) {
                  goto LABEL_165;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v31 = 0;
              }
            }
            break;
          }
LABEL_246:
          *(void *)(a1 + 24) = v31;
          goto LABEL_238;
        case 4u:
          *(_DWORD *)(a1 + 152) |= 0x10000000u;
          unint64_t v34 = *((void *)this + 1);
          if (v34 > 0xFFFFFFFFFFFFFFFBLL || v34 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 144) = *(_DWORD *)(*(void *)this + v34);
          goto LABEL_237;
        case 5u:
          *(_DWORD *)(a1 + 152) |= 0x4000000u;
          unint64_t v35 = *((void *)this + 1);
          if (v35 > 0xFFFFFFFFFFFFFFFBLL || v35 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 136) = *(_DWORD *)(*(void *)this + v35);
          goto LABEL_237;
        case 6u:
          *(_DWORD *)(a1 + 152) |= 0x100000u;
          unint64_t v36 = *((void *)this + 1);
          unint64_t v37 = *((void *)this + 2);
          uint64_t v38 = *(void *)this;
          if (v36 <= 0xFFFFFFFFFFFFFFF5 && v36 + 10 <= v37)
          {
            char v39 = 0;
            unsigned int v40 = 0;
            uint64_t v41 = 0;
            do
            {
              unint64_t v42 = v36 + 1;
              *((void *)this + 1) = v36 + 1;
              char v43 = *(unsigned char *)(v38 + v36);
              v41 |= (unint64_t)(v43 & 0x7F) << v39;
              if ((v43 & 0x80) == 0) {
                goto LABEL_250;
              }
              v39 += 7;
              unint64_t v36 = v42;
              BOOL v14 = v40++ > 8;
            }
            while (!v14);
LABEL_172:
            LODWORD(v41) = 0;
            goto LABEL_250;
          }
          char v135 = 0;
          unsigned int v136 = 0;
          uint64_t v41 = 0;
          if (v37 <= v36) {
            unint64_t v37 = *((void *)this + 1);
          }
          while (2)
          {
            if (v37 == v36)
            {
              LODWORD(v41) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v137 = v36 + 1;
              char v138 = *(unsigned char *)(v38 + v36);
              *((void *)this + 1) = v137;
              v41 |= (unint64_t)(v138 & 0x7F) << v135;
              if (v138 < 0)
              {
                v135 += 7;
                unint64_t v36 = v137;
                BOOL v14 = v136++ > 8;
                if (v14) {
                  goto LABEL_172;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v41) = 0;
              }
            }
            break;
          }
LABEL_250:
          *(_DWORD *)(a1 + 112) = v41;
          goto LABEL_238;
        case 7u:
          *(_DWORD *)(a1 + 152) |= 0x40000u;
          unint64_t v44 = *((void *)this + 1);
          unint64_t v45 = *((void *)this + 2);
          uint64_t v46 = *(void *)this;
          if (v44 <= 0xFFFFFFFFFFFFFFF5 && v44 + 10 <= v45)
          {
            char v47 = 0;
            unsigned int v48 = 0;
            uint64_t v49 = 0;
            do
            {
              unint64_t v50 = v44 + 1;
              *((void *)this + 1) = v44 + 1;
              char v51 = *(unsigned char *)(v46 + v44);
              v49 |= (unint64_t)(v51 & 0x7F) << v47;
              if ((v51 & 0x80) == 0) {
                goto LABEL_254;
              }
              v47 += 7;
              unint64_t v44 = v50;
              BOOL v14 = v48++ > 8;
            }
            while (!v14);
LABEL_179:
            LODWORD(v49) = 0;
            goto LABEL_254;
          }
          char v139 = 0;
          unsigned int v140 = 0;
          uint64_t v49 = 0;
          if (v45 <= v44) {
            unint64_t v45 = *((void *)this + 1);
          }
          while (2)
          {
            if (v45 == v44)
            {
              LODWORD(v49) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v141 = v44 + 1;
              char v142 = *(unsigned char *)(v46 + v44);
              *((void *)this + 1) = v141;
              v49 |= (unint64_t)(v142 & 0x7F) << v139;
              if (v142 < 0)
              {
                v139 += 7;
                unint64_t v44 = v141;
                BOOL v14 = v140++ > 8;
                if (v14) {
                  goto LABEL_179;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v49) = 0;
              }
            }
            break;
          }
LABEL_254:
          *(_DWORD *)(a1 + 104) = v49;
          goto LABEL_238;
        case 8u:
          *(_DWORD *)(a1 + 152) |= 0x10u;
          unint64_t v52 = *((void *)this + 1);
          unint64_t v53 = *((void *)this + 2);
          uint64_t v54 = *(void *)this;
          if (v52 <= 0xFFFFFFFFFFFFFFF5 && v52 + 10 <= v53)
          {
            char v55 = 0;
            unsigned int v56 = 0;
            uint64_t v57 = 0;
            do
            {
              unint64_t v58 = v52 + 1;
              *((void *)this + 1) = v52 + 1;
              char v59 = *(unsigned char *)(v54 + v52);
              v57 |= (unint64_t)(v59 & 0x7F) << v55;
              if ((v59 & 0x80) == 0) {
                goto LABEL_258;
              }
              v55 += 7;
              unint64_t v52 = v58;
              BOOL v14 = v56++ > 8;
            }
            while (!v14);
LABEL_186:
            uint64_t v57 = 0;
            goto LABEL_258;
          }
          char v143 = 0;
          unsigned int v144 = 0;
          uint64_t v57 = 0;
          if (v53 <= v52) {
            unint64_t v53 = *((void *)this + 1);
          }
          while (2)
          {
            if (v53 == v52)
            {
              uint64_t v57 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v145 = v52 + 1;
              char v146 = *(unsigned char *)(v54 + v52);
              *((void *)this + 1) = v145;
              v57 |= (unint64_t)(v146 & 0x7F) << v143;
              if (v146 < 0)
              {
                v143 += 7;
                unint64_t v52 = v145;
                BOOL v14 = v144++ > 8;
                if (v14) {
                  goto LABEL_186;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v57 = 0;
              }
            }
            break;
          }
LABEL_258:
          *(void *)(a1 + 40) = v57;
          goto LABEL_238;
        case 9u:
          *(_DWORD *)(a1 + 152) |= 0x8000000u;
          unint64_t v60 = *((void *)this + 1);
          if (v60 > 0xFFFFFFFFFFFFFFFBLL || v60 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 140) = *(_DWORD *)(*(void *)this + v60);
          goto LABEL_237;
        case 0xAu:
          *(_DWORD *)(a1 + 152) |= 0x8000u;
          unint64_t v61 = *((void *)this + 1);
          unint64_t v62 = *((void *)this + 2);
          uint64_t v63 = *(void *)this;
          if (v61 <= 0xFFFFFFFFFFFFFFF5 && v61 + 10 <= v62)
          {
            char v64 = 0;
            unsigned int v65 = 0;
            uint64_t v66 = 0;
            do
            {
              unint64_t v67 = v61 + 1;
              *((void *)this + 1) = v61 + 1;
              char v68 = *(unsigned char *)(v63 + v61);
              v66 |= (unint64_t)(v68 & 0x7F) << v64;
              if ((v68 & 0x80) == 0) {
                goto LABEL_262;
              }
              v64 += 7;
              unint64_t v61 = v67;
              BOOL v14 = v65++ > 8;
            }
            while (!v14);
LABEL_193:
            LODWORD(v66) = 0;
            goto LABEL_262;
          }
          char v147 = 0;
          unsigned int v148 = 0;
          uint64_t v66 = 0;
          if (v62 <= v61) {
            unint64_t v62 = *((void *)this + 1);
          }
          while (2)
          {
            if (v62 == v61)
            {
              LODWORD(v66) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v149 = v61 + 1;
              char v150 = *(unsigned char *)(v63 + v61);
              *((void *)this + 1) = v149;
              v66 |= (unint64_t)(v150 & 0x7F) << v147;
              if (v150 < 0)
              {
                v147 += 7;
                unint64_t v61 = v149;
                BOOL v14 = v148++ > 8;
                if (v14) {
                  goto LABEL_193;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v66) = 0;
              }
            }
            break;
          }
LABEL_262:
          *(_DWORD *)(a1 + 92) = v66;
          goto LABEL_238;
        case 0xBu:
          *(_DWORD *)(a1 + 152) |= 0x4000u;
          unint64_t v69 = *((void *)this + 1);
          unint64_t v70 = *((void *)this + 2);
          uint64_t v71 = *(void *)this;
          if (v69 <= 0xFFFFFFFFFFFFFFF5 && v69 + 10 <= v70)
          {
            char v72 = 0;
            unsigned int v73 = 0;
            uint64_t v74 = 0;
            do
            {
              unint64_t v75 = v69 + 1;
              *((void *)this + 1) = v69 + 1;
              char v76 = *(unsigned char *)(v71 + v69);
              v74 |= (unint64_t)(v76 & 0x7F) << v72;
              if ((v76 & 0x80) == 0) {
                goto LABEL_266;
              }
              v72 += 7;
              unint64_t v69 = v75;
              BOOL v14 = v73++ > 8;
            }
            while (!v14);
LABEL_200:
            LODWORD(v74) = 0;
            goto LABEL_266;
          }
          char v151 = 0;
          unsigned int v152 = 0;
          uint64_t v74 = 0;
          if (v70 <= v69) {
            unint64_t v70 = *((void *)this + 1);
          }
          while (2)
          {
            if (v70 == v69)
            {
              LODWORD(v74) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v153 = v69 + 1;
              char v154 = *(unsigned char *)(v71 + v69);
              *((void *)this + 1) = v153;
              v74 |= (unint64_t)(v154 & 0x7F) << v151;
              if (v154 < 0)
              {
                v151 += 7;
                unint64_t v69 = v153;
                BOOL v14 = v152++ > 8;
                if (v14) {
                  goto LABEL_200;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v74) = 0;
              }
            }
            break;
          }
LABEL_266:
          *(_DWORD *)(a1 + 88) = v74;
          goto LABEL_238;
        case 0xCu:
          *(_DWORD *)(a1 + 152) |= 0x800000u;
          unint64_t v77 = *((void *)this + 1);
          if (v77 > 0xFFFFFFFFFFFFFFFBLL || v77 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 124) = *(_DWORD *)(*(void *)this + v77);
          goto LABEL_237;
        case 0xDu:
          *(_DWORD *)(a1 + 152) |= 0x400000u;
          unint64_t v78 = *((void *)this + 1);
          if (v78 > 0xFFFFFFFFFFFFFFFBLL || v78 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 120) = *(_DWORD *)(*(void *)this + v78);
          goto LABEL_237;
        case 0xEu:
          *(_DWORD *)(a1 + 152) |= 0x1000000u;
          unint64_t v79 = *((void *)this + 1);
          if (v79 > 0xFFFFFFFFFFFFFFFBLL || v79 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v79);
          goto LABEL_237;
        case 0xFu:
          *(_DWORD *)(a1 + 152) |= 0x2000u;
          unint64_t v80 = *((void *)this + 1);
          if (v80 > 0xFFFFFFFFFFFFFFFBLL || v80 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v80);
          goto LABEL_237;
        case 0x10u:
          *(_DWORD *)(a1 + 152) |= 0x1000u;
          unint64_t v81 = *((void *)this + 1);
          if (v81 > 0xFFFFFFFFFFFFFFFBLL || v81 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v81);
          goto LABEL_237;
        case 0x11u:
          *(_DWORD *)(a1 + 152) |= 0x800u;
          unint64_t v82 = *((void *)this + 1);
          if (v82 > 0xFFFFFFFFFFFFFFFBLL || v82 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v82);
          goto LABEL_237;
        case 0x12u:
          *(_DWORD *)(a1 + 152) |= 0x400u;
          unint64_t v83 = *((void *)this + 1);
          if (v83 > 0xFFFFFFFFFFFFFFFBLL || v83 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v83);
          goto LABEL_237;
        case 0x13u:
          *(_DWORD *)(a1 + 152) |= 0x200u;
          unint64_t v84 = *((void *)this + 1);
          if (v84 > 0xFFFFFFFFFFFFFFFBLL || v84 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 68) = *(_DWORD *)(*(void *)this + v84);
          goto LABEL_237;
        case 0x14u:
          *(_DWORD *)(a1 + 152) |= 1u;
          unint64_t v85 = *((void *)this + 1);
          unint64_t v86 = *((void *)this + 2);
          uint64_t v87 = *(void *)this;
          if (v85 <= 0xFFFFFFFFFFFFFFF5 && v85 + 10 <= v86)
          {
            char v88 = 0;
            unsigned int v89 = 0;
            uint64_t v90 = 0;
            do
            {
              unint64_t v91 = v85 + 1;
              *((void *)this + 1) = v85 + 1;
              char v92 = *(unsigned char *)(v87 + v85);
              v90 |= (unint64_t)(v92 & 0x7F) << v88;
              if ((v92 & 0x80) == 0) {
                goto LABEL_270;
              }
              v88 += 7;
              unint64_t v85 = v91;
              BOOL v14 = v89++ > 8;
            }
            while (!v14);
LABEL_207:
            uint64_t v90 = 0;
            goto LABEL_270;
          }
          char v155 = 0;
          unsigned int v156 = 0;
          uint64_t v90 = 0;
          if (v86 <= v85) {
            unint64_t v86 = *((void *)this + 1);
          }
          while (2)
          {
            if (v86 == v85)
            {
              uint64_t v90 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v157 = v85 + 1;
              char v158 = *(unsigned char *)(v87 + v85);
              *((void *)this + 1) = v157;
              v90 |= (unint64_t)(v158 & 0x7F) << v155;
              if (v158 < 0)
              {
                v155 += 7;
                unint64_t v85 = v157;
                BOOL v14 = v156++ > 8;
                if (v14) {
                  goto LABEL_207;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v90 = 0;
              }
            }
            break;
          }
LABEL_270:
          *(void *)(a1 + 8) = v90;
          goto LABEL_238;
        case 0x15u:
          *(_DWORD *)(a1 + 152) |= 2u;
          unint64_t v93 = *((void *)this + 1);
          unint64_t v94 = *((void *)this + 2);
          uint64_t v95 = *(void *)this;
          if (v93 <= 0xFFFFFFFFFFFFFFF5 && v93 + 10 <= v94)
          {
            char v96 = 0;
            unsigned int v97 = 0;
            uint64_t v98 = 0;
            do
            {
              unint64_t v99 = v93 + 1;
              *((void *)this + 1) = v93 + 1;
              char v100 = *(unsigned char *)(v95 + v93);
              v98 |= (unint64_t)(v100 & 0x7F) << v96;
              if ((v100 & 0x80) == 0) {
                goto LABEL_274;
              }
              v96 += 7;
              unint64_t v93 = v99;
              BOOL v14 = v97++ > 8;
            }
            while (!v14);
LABEL_214:
            uint64_t v98 = 0;
            goto LABEL_274;
          }
          char v159 = 0;
          unsigned int v160 = 0;
          uint64_t v98 = 0;
          if (v94 <= v93) {
            unint64_t v94 = *((void *)this + 1);
          }
          while (2)
          {
            if (v94 == v93)
            {
              uint64_t v98 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v161 = v93 + 1;
              char v162 = *(unsigned char *)(v95 + v93);
              *((void *)this + 1) = v161;
              v98 |= (unint64_t)(v162 & 0x7F) << v159;
              if (v162 < 0)
              {
                v159 += 7;
                unint64_t v93 = v161;
                BOOL v14 = v160++ > 8;
                if (v14) {
                  goto LABEL_214;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v98 = 0;
              }
            }
            break;
          }
LABEL_274:
          *(void *)(a1 + 16) = v98;
          goto LABEL_238;
        case 0x16u:
          *(_DWORD *)(a1 + 152) |= 0x10000u;
          unint64_t v101 = *((void *)this + 1);
          if (v101 > 0xFFFFFFFFFFFFFFFBLL || v101 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v101);
          goto LABEL_237;
        case 0x17u:
          *(_DWORD *)(a1 + 152) |= 0x20u;
          unint64_t v102 = *((void *)this + 1);
          unint64_t v103 = *((void *)this + 2);
          uint64_t v104 = *(void *)this;
          if (v102 <= 0xFFFFFFFFFFFFFFF5 && v102 + 10 <= v103)
          {
            char v105 = 0;
            unsigned int v106 = 0;
            uint64_t v107 = 0;
            do
            {
              unint64_t v108 = v102 + 1;
              *((void *)this + 1) = v102 + 1;
              char v109 = *(unsigned char *)(v104 + v102);
              v107 |= (unint64_t)(v109 & 0x7F) << v105;
              if ((v109 & 0x80) == 0) {
                goto LABEL_278;
              }
              v105 += 7;
              unint64_t v102 = v108;
              BOOL v14 = v106++ > 8;
            }
            while (!v14);
LABEL_221:
            uint64_t v107 = 0;
            goto LABEL_278;
          }
          char v163 = 0;
          unsigned int v164 = 0;
          uint64_t v107 = 0;
          if (v103 <= v102) {
            unint64_t v103 = *((void *)this + 1);
          }
          while (2)
          {
            if (v103 == v102)
            {
              uint64_t v107 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v165 = v102 + 1;
              char v166 = *(unsigned char *)(v104 + v102);
              *((void *)this + 1) = v165;
              v107 |= (unint64_t)(v166 & 0x7F) << v163;
              if (v166 < 0)
              {
                v163 += 7;
                unint64_t v102 = v165;
                BOOL v14 = v164++ > 8;
                if (v14) {
                  goto LABEL_221;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v107 = 0;
              }
            }
            break;
          }
LABEL_278:
          *(void *)(a1 + 48) = v107;
          goto LABEL_238;
        case 0x18u:
          *(_DWORD *)(a1 + 152) |= 0x2000000u;
          unint64_t v110 = *((void *)this + 1);
          if (v110 > 0xFFFFFFFFFFFFFFFBLL || v110 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 132) = *(_DWORD *)(*(void *)this + v110);
          goto LABEL_237;
        case 0x19u:
          *(_DWORD *)(a1 + 152) |= 0x20000u;
          unint64_t v111 = *((void *)this + 1);
          if (v111 > 0xFFFFFFFFFFFFFFFBLL || v111 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v111);
          goto LABEL_237;
        case 0x1Au:
          *(_DWORD *)(a1 + 152) |= 0x100u;
          unint64_t v112 = *((void *)this + 1);
          if (v112 > 0xFFFFFFFFFFFFFFFBLL || v112 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v112);
          goto LABEL_237;
        case 0x1Bu:
          *(_DWORD *)(a1 + 152) |= 0x80000u;
          unint64_t v113 = *((void *)this + 1);
          unint64_t v114 = *((void *)this + 2);
          uint64_t v115 = *(void *)this;
          if (v113 <= 0xFFFFFFFFFFFFFFF5 && v113 + 10 <= v114)
          {
            char v116 = 0;
            unsigned int v117 = 0;
            uint64_t v118 = 0;
            do
            {
              unint64_t v119 = v113 + 1;
              *((void *)this + 1) = v113 + 1;
              char v120 = *(unsigned char *)(v115 + v113);
              v118 |= (unint64_t)(v120 & 0x7F) << v116;
              if ((v120 & 0x80) == 0) {
                goto LABEL_282;
              }
              v116 += 7;
              unint64_t v113 = v119;
              BOOL v14 = v117++ > 8;
            }
            while (!v14);
LABEL_228:
            LODWORD(v118) = 0;
            goto LABEL_282;
          }
          char v167 = 0;
          unsigned int v168 = 0;
          uint64_t v118 = 0;
          if (v114 <= v113) {
            unint64_t v114 = *((void *)this + 1);
          }
          while (2)
          {
            if (v114 == v113)
            {
              LODWORD(v118) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v169 = v113 + 1;
              char v170 = *(unsigned char *)(v115 + v113);
              *((void *)this + 1) = v169;
              v118 |= (unint64_t)(v170 & 0x7F) << v167;
              if (v170 < 0)
              {
                v167 += 7;
                unint64_t v113 = v169;
                BOOL v14 = v168++ > 8;
                if (v14) {
                  goto LABEL_228;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v118) = 0;
              }
            }
            break;
          }
LABEL_282:
          *(_DWORD *)(a1 + 108) = v118;
          goto LABEL_238;
        case 0x1Cu:
          *(_DWORD *)(a1 + 152) |= 0x40u;
          unint64_t v121 = *((void *)this + 1);
          if (v121 > 0xFFFFFFFFFFFFFFFBLL || v121 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v121);
          goto LABEL_237;
        case 0x1Du:
          *(_DWORD *)(a1 + 152) |= 8u;
          unint64_t v122 = *((void *)this + 1);
          unint64_t v123 = *((void *)this + 2);
          uint64_t v124 = *(void *)this;
          if (v122 <= 0xFFFFFFFFFFFFFFF5 && v122 + 10 <= v123)
          {
            char v125 = 0;
            unsigned int v126 = 0;
            uint64_t v127 = 0;
            do
            {
              unint64_t v128 = v122 + 1;
              *((void *)this + 1) = v122 + 1;
              char v129 = *(unsigned char *)(v124 + v122);
              v127 |= (unint64_t)(v129 & 0x7F) << v125;
              if ((v129 & 0x80) == 0) {
                goto LABEL_286;
              }
              v125 += 7;
              unint64_t v122 = v128;
              BOOL v14 = v126++ > 8;
            }
            while (!v14);
LABEL_235:
            uint64_t v127 = 0;
            goto LABEL_286;
          }
          char v171 = 0;
          unsigned int v172 = 0;
          uint64_t v127 = 0;
          if (v123 <= v122) {
            unint64_t v123 = *((void *)this + 1);
          }
          break;
        case 0x1Eu:
          *(_DWORD *)(a1 + 152) |= 0x80u;
          unint64_t v130 = *((void *)this + 1);
          if (v130 <= 0xFFFFFFFFFFFFFFFBLL && v130 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v130);
LABEL_237:
            *((void *)this + 1) += 4;
          }
          else
          {
LABEL_156:
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_238;
        default:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          goto LABEL_238;
      }
      while (1)
      {
        if (v123 == v122)
        {
          uint64_t v127 = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_286;
        }
        unint64_t v173 = v122 + 1;
        char v174 = *(unsigned char *)(v124 + v122);
        *((void *)this + 1) = v173;
        v127 |= (unint64_t)(v174 & 0x7F) << v171;
        if ((v174 & 0x80) == 0) {
          break;
        }
        v171 += 7;
        unint64_t v122 = v173;
        BOOL v14 = v172++ > 8;
        if (v14) {
          goto LABEL_235;
        }
      }
      if (*((unsigned char *)this + 24)) {
        uint64_t v127 = 0;
      }
LABEL_286:
      *(void *)(a1 + 32) = v127;
LABEL_238:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B57780(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 152);
  if ((v4 & 0x20000000) != 0)
  {
    uint64_t result = PB::Writer::write(this);
    int v4 = *(_DWORD *)(v3 + 152);
    if ((v4 & 0x200000) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_34;
    }
  }
  else if ((v4 & 0x200000) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 116));
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_5:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 144));
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_6:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 136));
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x100000) == 0)
  {
LABEL_7:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x40000) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_10:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 140));
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x8000) == 0)
  {
LABEL_11:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x4000) == 0)
  {
LABEL_12:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x800000) == 0)
  {
LABEL_13:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 124));
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x400000) == 0)
  {
LABEL_14:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 120));
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_15:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 128));
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x2000) == 0)
  {
LABEL_16:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84));
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x1000) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80));
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x400) == 0) {
      goto LABEL_19;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76));
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x400) == 0)
  {
LABEL_19:
    if ((v4 & 0x200) == 0) {
      goto LABEL_20;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72));
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x200) == 0)
  {
LABEL_20:
    if ((v4 & 1) == 0) {
      goto LABEL_21;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 68));
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 1) == 0)
  {
LABEL_21:
    if ((v4 & 2) == 0) {
      goto LABEL_22;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 2) == 0)
  {
LABEL_22:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x10000) == 0)
  {
LABEL_23:
    if ((v4 & 0x20) == 0) {
      goto LABEL_24;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 96));
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x20) == 0)
  {
LABEL_24:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_25:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 132));
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x20000) == 0)
  {
LABEL_26:
    if ((v4 & 0x100) == 0) {
      goto LABEL_27;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 100));
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x100) == 0)
  {
LABEL_27:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64));
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x80000) == 0)
  {
LABEL_28:
    if ((v4 & 0x40) == 0) {
      goto LABEL_29;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x40) == 0)
  {
LABEL_29:
    if ((v4 & 8) == 0) {
      goto LABEL_30;
    }
LABEL_60:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(_DWORD *)(v3 + 152) & 0x80) == 0) {
      return result;
    }
    goto LABEL_61;
  }
LABEL_59:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56));
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 8) != 0) {
    goto LABEL_60;
  }
LABEL_30:
  if ((v4 & 0x80) == 0) {
    return result;
  }
LABEL_61:
  float v5 = *(float *)(v3 + 60);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227B57B00(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC20B60;
  *(void *)(result + 280) = 0;
  *(_DWORD *)(result + 288) = 0;
  return result;
}

void sub_227B57B2C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227B57B64(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC20B60;
  unint64_t v2 = (uint64_t *)(a1 + 280);
  *(void *)(a1 + 280) = 0;
  *(_DWORD *)(a1 + 288) = 0;
  uint64_t v3 = (uint64_t *)(a2 + 280);
  uint64_t v4 = *(void *)(a2 + 280);
  if (v4)
  {
    __int16 v6 = 0;
    uint64_t v8 = *(void *)(a2 + 8);
    *(_WORD *)(a1 + 288) = 0;
    uint64_t v5 = 1;
    *unint64_t v2 = 1;
    *(void *)(a1 + 8) = v8;
    uint64_t v4 = *v3;
    __int16 v7 = *(_WORD *)(a2 + 288);
    if ((*v3 & 0x2000000000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v5 = 0;
  __int16 v6 = 0;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((v4 & 0x2000000000000) != 0)
  {
LABEL_5:
    float result = *(float *)(a2 + 208);
    v5 |= 0x2000000000000uLL;
    *unint64_t v2 = v5;
    *(_WORD *)(a1 + 288) = 0;
    *(float *)(a1 + 208) = result;
    uint64_t v4 = *v3;
    __int16 v7 = *(_WORD *)(a2 + 288);
  }
LABEL_6:
  if ((v7 & 0x100) != 0)
  {
    char v10 = *(unsigned char *)(a2 + 276);
    __int16 v6 = 256;
    *unint64_t v2 = v5;
    *(_WORD *)(a1 + 288) = 256;
    *(unsigned char *)(a1 + 276) = v10;
    uint64_t v4 = *v3;
    __int16 v7 = *(_WORD *)(a2 + 288);
    if ((v7 & 0x80) == 0)
    {
LABEL_8:
      if ((v7 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_83;
    }
  }
  else if ((v7 & 0x80) == 0)
  {
    goto LABEL_8;
  }
  char v11 = *(unsigned char *)(a2 + 275);
  v6 |= 0x80u;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(unsigned char *)(a1 + 275) = v11;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((v7 & 0x20) == 0)
  {
LABEL_9:
    if ((v7 & 4) == 0) {
      goto LABEL_10;
    }
    goto LABEL_84;
  }
LABEL_83:
  char v12 = *(unsigned char *)(a2 + 273);
  v6 |= 0x20u;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(unsigned char *)(a1 + 273) = v12;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((v7 & 4) == 0)
  {
LABEL_10:
    if ((v7 & 2) == 0) {
      goto LABEL_11;
    }
    goto LABEL_85;
  }
LABEL_84:
  char v13 = *(unsigned char *)(a2 + 270);
  v6 |= 4u;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(unsigned char *)(a1 + 270) = v13;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((v7 & 2) == 0)
  {
LABEL_11:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_86;
  }
LABEL_85:
  char v14 = *(unsigned char *)(a2 + 269);
  v6 |= 2u;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(unsigned char *)(a1 + 269) = v14;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x40000) == 0)
  {
LABEL_12:
    if ((v7 & 1) == 0) {
      goto LABEL_13;
    }
    goto LABEL_87;
  }
LABEL_86:
  int v15 = *(_DWORD *)(a2 + 84);
  v5 |= 0x40000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(_DWORD *)(a1 + 84) = v15;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((v7 & 1) == 0)
  {
LABEL_13:
    if ((v7 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_88;
  }
LABEL_87:
  char v16 = *(unsigned char *)(a2 + 268);
  v6 |= 1u;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(unsigned char *)(a1 + 268) = v16;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((v7 & 0x10) == 0)
  {
LABEL_14:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_89;
  }
LABEL_88:
  char v17 = *(unsigned char *)(a2 + 272);
  v6 |= 0x10u;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(unsigned char *)(a1 + 272) = v17;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x20000) == 0)
  {
LABEL_15:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_90;
  }
LABEL_89:
  float result = *(float *)(a2 + 80);
  v5 |= 0x20000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 80) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x10000) == 0)
  {
LABEL_16:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_91;
  }
LABEL_90:
  float result = *(float *)(a2 + 76);
  v5 |= 0x10000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 76) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x400000) == 0)
  {
LABEL_17:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_92;
  }
LABEL_91:
  float result = *(float *)(a2 + 100);
  v5 |= 0x400000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 100) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x8000000) == 0)
  {
LABEL_18:
    if ((v4 & 0x100000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_93;
  }
LABEL_92:
  float result = *(float *)(a2 + 120);
  v5 |= 0x8000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 120) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x100000000) == 0)
  {
LABEL_19:
    if ((v4 & 0x4000000000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_94;
  }
LABEL_93:
  float result = *(float *)(a2 + 140);
  v5 |= 0x100000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 140) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x4000000000000) == 0)
  {
LABEL_20:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_95;
  }
LABEL_94:
  float result = *(float *)(a2 + 212);
  v5 |= 0x4000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 212) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x800000) == 0)
  {
LABEL_21:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_96;
  }
LABEL_95:
  float result = *(float *)(a2 + 104);
  v5 |= 0x800000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 104) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x10000000) == 0)
  {
LABEL_22:
    if ((v4 & 0x200000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_97;
  }
LABEL_96:
  float result = *(float *)(a2 + 124);
  v5 |= 0x10000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 124) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x200000000) == 0)
  {
LABEL_23:
    if ((v4 & 0x8000000000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_98;
  }
LABEL_97:
  float result = *(float *)(a2 + 144);
  v5 |= 0x200000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 144) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x8000000000000) == 0)
  {
LABEL_24:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_99;
  }
LABEL_98:
  float result = *(float *)(a2 + 216);
  v5 |= 0x8000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 216) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x1000000) == 0)
  {
LABEL_25:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_100;
  }
LABEL_99:
  float result = *(float *)(a2 + 108);
  v5 |= 0x1000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 108) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x20000000) == 0)
  {
LABEL_26:
    if ((v4 & 0x400000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_101;
  }
LABEL_100:
  float result = *(float *)(a2 + 128);
  v5 |= 0x20000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 128) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x400000000) == 0)
  {
LABEL_27:
    if ((v4 & 0x10000000000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_102;
  }
LABEL_101:
  float result = *(float *)(a2 + 148);
  v5 |= 0x400000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 148) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x10000000000000) == 0)
  {
LABEL_28:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_103;
  }
LABEL_102:
  float result = *(float *)(a2 + 220);
  v5 |= 0x10000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 220) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x80000) == 0)
  {
LABEL_29:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_104;
  }
LABEL_103:
  float result = *(float *)(a2 + 88);
  v5 |= 0x80000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 88) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x100000) == 0)
  {
LABEL_30:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_105;
  }
LABEL_104:
  float result = *(float *)(a2 + 92);
  v5 |= 0x100000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 92) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x200000) == 0)
  {
LABEL_31:
    if ((v4 & 0x100000000000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_106;
  }
LABEL_105:
  float result = *(float *)(a2 + 96);
  v5 |= 0x200000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 96) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x100000000000000) == 0)
  {
LABEL_32:
    if ((v4 & 0x80000000000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_107;
  }
LABEL_106:
  float result = *(float *)(a2 + 236);
  v5 |= 0x100000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 236) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x80000000000000) == 0)
  {
LABEL_33:
    if ((v4 & 0x200000000000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_108;
  }
LABEL_107:
  float result = *(float *)(a2 + 232);
  v5 |= 0x80000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 232) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x200000000000000) == 0)
  {
LABEL_34:
    if ((v4 & 0x40) == 0) {
      goto LABEL_35;
    }
    goto LABEL_109;
  }
LABEL_108:
  float result = *(float *)(a2 + 240);
  v5 |= 0x200000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 240) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x40) == 0)
  {
LABEL_35:
    if ((v4 & 2) == 0) {
      goto LABEL_36;
    }
    goto LABEL_110;
  }
LABEL_109:
  float result = *(float *)(a2 + 36);
  v5 |= 0x40uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 36) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 2) == 0)
  {
LABEL_36:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_111;
  }
LABEL_110:
  float result = *(float *)(a2 + 16);
  v5 |= 2uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 16) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x8000) == 0)
  {
LABEL_37:
    if ((v7 & 0x800) == 0) {
      goto LABEL_38;
    }
    goto LABEL_112;
  }
LABEL_111:
  float result = *(float *)(a2 + 72);
  v5 |= 0x8000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 72) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((v7 & 0x800) == 0)
  {
LABEL_38:
    if ((v7 & 8) == 0) {
      goto LABEL_39;
    }
    goto LABEL_113;
  }
LABEL_112:
  char v18 = *(unsigned char *)(a2 + 279);
  v6 |= 0x800u;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(unsigned char *)(a1 + 279) = v18;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((v7 & 8) == 0)
  {
LABEL_39:
    if ((v4 & 0x80) == 0) {
      goto LABEL_40;
    }
    goto LABEL_114;
  }
LABEL_113:
  char v19 = *(unsigned char *)(a2 + 271);
  v6 |= 8u;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(unsigned char *)(a1 + 271) = v19;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x80) == 0)
  {
LABEL_40:
    if ((v4 & 0x400) == 0) {
      goto LABEL_41;
    }
    goto LABEL_115;
  }
LABEL_114:
  float result = *(float *)(a2 + 40);
  v5 |= 0x80uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 40) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x400) == 0)
  {
LABEL_41:
    if ((v4 & 0x200) == 0) {
      goto LABEL_42;
    }
    goto LABEL_116;
  }
LABEL_115:
  float result = *(float *)(a2 + 52);
  v5 |= 0x400uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 52) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x200) == 0)
  {
LABEL_42:
    if ((v4 & 0x100) == 0) {
      goto LABEL_43;
    }
    goto LABEL_117;
  }
LABEL_116:
  float result = *(float *)(a2 + 48);
  v5 |= 0x200uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 48) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x100) == 0)
  {
LABEL_43:
    if ((v4 & 4) == 0) {
      goto LABEL_44;
    }
    goto LABEL_118;
  }
LABEL_117:
  float result = *(float *)(a2 + 44);
  v5 |= 0x100uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 44) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 4) == 0)
  {
LABEL_44:
    if ((v4 & 0x20) == 0) {
      goto LABEL_45;
    }
    goto LABEL_119;
  }
LABEL_118:
  float result = *(float *)(a2 + 20);
  v5 |= 4uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 20) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x20) == 0)
  {
LABEL_45:
    if ((v4 & 0x10) == 0) {
      goto LABEL_46;
    }
    goto LABEL_120;
  }
LABEL_119:
  float result = *(float *)(a2 + 32);
  v5 |= 0x20uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 32) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x10) == 0)
  {
LABEL_46:
    if ((v4 & 8) == 0) {
      goto LABEL_47;
    }
    goto LABEL_121;
  }
LABEL_120:
  float result = *(float *)(a2 + 28);
  v5 |= 0x10uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 28) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 8) == 0)
  {
LABEL_47:
    if ((v4 & 0x800) == 0) {
      goto LABEL_48;
    }
    goto LABEL_122;
  }
LABEL_121:
  float result = *(float *)(a2 + 24);
  v5 |= 8uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 24) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x800) == 0)
  {
LABEL_48:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_123;
  }
LABEL_122:
  float result = *(float *)(a2 + 56);
  v5 |= 0x800uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 56) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x4000) == 0)
  {
LABEL_49:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_124;
  }
LABEL_123:
  float result = *(float *)(a2 + 68);
  v5 |= 0x4000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 68) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x2000) == 0)
  {
LABEL_50:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_125;
  }
LABEL_124:
  float result = *(float *)(a2 + 64);
  v5 |= 0x2000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 64) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x1000) == 0)
  {
LABEL_51:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_126;
  }
LABEL_125:
  float result = *(float *)(a2 + 60);
  v5 |= 0x1000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 60) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x2000000) == 0)
  {
LABEL_52:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_127;
  }
LABEL_126:
  float result = *(float *)(a2 + 112);
  v5 |= 0x2000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 112) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x40000000) == 0)
  {
LABEL_53:
    if ((v4 & 0x800000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_128;
  }
LABEL_127:
  float result = *(float *)(a2 + 132);
  v5 |= 0x40000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 132) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x800000000) == 0)
  {
LABEL_54:
    if ((v4 & 0x20000000000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_129;
  }
LABEL_128:
  float result = *(float *)(a2 + 152);
  v5 |= 0x800000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 152) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x20000000000000) == 0)
  {
LABEL_55:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_130;
  }
LABEL_129:
  float result = *(float *)(a2 + 224);
  v5 |= 0x20000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 224) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x4000000) == 0)
  {
LABEL_56:
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_131;
  }
LABEL_130:
  float result = *(float *)(a2 + 116);
  v5 |= 0x4000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 116) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x80000000) == 0)
  {
LABEL_57:
    if ((v4 & 0x1000000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_132;
  }
LABEL_131:
  float result = *(float *)(a2 + 136);
  v5 |= 0x80000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 136) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x1000000000) == 0)
  {
LABEL_58:
    if ((v4 & 0x40000000000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_133;
  }
LABEL_132:
  float result = *(float *)(a2 + 156);
  v5 |= 0x1000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 156) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x40000000000000) == 0)
  {
LABEL_59:
    if ((v7 & 0x40) == 0) {
      goto LABEL_60;
    }
    goto LABEL_134;
  }
LABEL_133:
  float result = *(float *)(a2 + 228);
  v5 |= 0x40000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 228) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((v7 & 0x40) == 0)
  {
LABEL_60:
    if ((v4 & 0x1000000000000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_135;
  }
LABEL_134:
  char v20 = *(unsigned char *)(a2 + 274);
  v6 |= 0x40u;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(unsigned char *)(a1 + 274) = v20;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x1000000000000000) == 0)
  {
LABEL_61:
    if ((v4 & 0x400000000000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_136;
  }
LABEL_135:
  float result = *(float *)(a2 + 252);
  v5 |= 0x1000000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 252) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x400000000000000) == 0)
  {
LABEL_62:
    if ((v7 & 0x200) == 0) {
      goto LABEL_63;
    }
    goto LABEL_137;
  }
LABEL_136:
  float result = *(float *)(a2 + 244);
  v5 |= 0x400000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 244) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((v7 & 0x200) == 0)
  {
LABEL_63:
    if ((v4 & 0x2000000000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_138;
  }
LABEL_137:
  char v21 = *(unsigned char *)(a2 + 277);
  v6 |= 0x200u;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(unsigned char *)(a1 + 277) = v21;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x2000000000) == 0)
  {
LABEL_64:
    if ((v4 & 0x4000000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_139;
  }
LABEL_138:
  float result = *(float *)(a2 + 160);
  v5 |= 0x2000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 160) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x4000000000) == 0)
  {
LABEL_65:
    if ((v4 & 0x8000000000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_140;
  }
LABEL_139:
  float result = *(float *)(a2 + 164);
  v5 |= 0x4000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 164) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x8000000000) == 0)
  {
LABEL_66:
    if ((v4 & 0x20000000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_141;
  }
LABEL_140:
  float result = *(float *)(a2 + 168);
  v5 |= 0x8000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 168) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x20000000000) == 0)
  {
LABEL_67:
    if ((v4 & 0x10000000000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_142;
  }
LABEL_141:
  float result = *(float *)(a2 + 176);
  v5 |= 0x20000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 176) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x10000000000) == 0)
  {
LABEL_68:
    if ((v4 & 0x40000000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_143;
  }
LABEL_142:
  float result = *(float *)(a2 + 172);
  v5 |= 0x10000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 172) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x40000000000) == 0)
  {
LABEL_69:
    if ((v4 & 0x80000000000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_144;
  }
LABEL_143:
  float result = *(float *)(a2 + 180);
  v5 |= 0x40000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 180) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x80000000000) == 0)
  {
LABEL_70:
    if ((v4 & 0x100000000000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_145;
  }
LABEL_144:
  float result = *(float *)(a2 + 184);
  v5 |= 0x80000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 184) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x100000000000) == 0)
  {
LABEL_71:
    if ((v4 & 0x200000000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_146;
  }
LABEL_145:
  float result = *(float *)(a2 + 188);
  v5 |= 0x100000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 188) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x200000000000) == 0)
  {
LABEL_72:
    if ((v4 & 0x800000000000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_147;
  }
LABEL_146:
  float result = *(float *)(a2 + 192);
  v5 |= 0x200000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 192) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x800000000000) == 0)
  {
LABEL_73:
    if ((v4 & 0x400000000000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_148;
  }
LABEL_147:
  float result = *(float *)(a2 + 200);
  v5 |= 0x800000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 200) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x400000000000) == 0)
  {
LABEL_74:
    if ((v4 & 0x1000000000000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_149;
  }
LABEL_148:
  float result = *(float *)(a2 + 196);
  v5 |= 0x400000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 196) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x1000000000000) == 0)
  {
LABEL_75:
    if ((v4 & 0x800000000000000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_150;
  }
LABEL_149:
  float result = *(float *)(a2 + 204);
  v5 |= 0x1000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 204) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x800000000000000) == 0)
  {
LABEL_76:
    if ((v7 & 0x400) == 0) {
      goto LABEL_77;
    }
    goto LABEL_151;
  }
LABEL_150:
  int v22 = *(_DWORD *)(a2 + 248);
  v5 |= 0x800000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(_DWORD *)(a1 + 248) = v22;
  uint64_t v4 = *v3;
  if ((*(_WORD *)(a2 + 288) & 0x400) == 0)
  {
LABEL_77:
    if ((v4 & 0x4000000000000000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_152;
  }
LABEL_151:
  char v23 = *(unsigned char *)(a2 + 278);
  v6 |= 0x400u;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(unsigned char *)(a1 + 278) = v23;
  uint64_t v4 = *v3;
  if ((*v3 & 0x4000000000000000) == 0)
  {
LABEL_78:
    if ((v4 & 0x8000000000000000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_153;
  }
LABEL_152:
  float result = *(float *)(a2 + 260);
  v5 |= 0x4000000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 260) = result;
  uint64_t v4 = *v3;
  if ((*v3 & 0x8000000000000000) == 0)
  {
LABEL_79:
    if ((v4 & 0x2000000000000000) == 0) {
      return result;
    }
LABEL_154:
    float result = *(float *)(a2 + 256);
    *unint64_t v2 = v5 | 0x2000000000000000;
    *(_WORD *)(a1 + 288) = v6;
    *(float *)(a1 + 256) = result;
    return result;
  }
LABEL_153:
  float result = *(float *)(a2 + 264);
  v5 |= 0x8000000000000000;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 264) = result;
  if ((*v3 & 0x2000000000000000) != 0) {
    goto LABEL_154;
  }
  return result;
}

uint64_t sub_227B58648(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = (uint64_t *)(a1 + 280);
  uint64_t v6 = *(void *)(a1 + 280);
  if ((v6 & 2) != 0)
  {
    PB::TextFormatter::format(this, "audioDvChaosThreshold", *(float *)(a1 + 16));
    uint64_t v6 = *v5;
    __int16 v7 = *(_WORD *)(a1 + 288);
    if ((*v5 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((v6 & 4) != 0)
  {
LABEL_5:
    PB::TextFormatter::format(this, "audioDvChaosThresholdCenter", *(float *)(a1 + 20));
    uint64_t v6 = *v5;
    __int16 v7 = *(_WORD *)(a1 + 288);
  }
LABEL_6:
  if ((v6 & 8) != 0)
  {
    PB::TextFormatter::format(this, "audioDvChaosThresholdMax", *(float *)(a1 + 24));
    uint64_t v6 = *v5;
    __int16 v7 = *(_WORD *)(a1 + 288);
    if ((*v5 & 0x10) == 0)
    {
LABEL_8:
      if ((v6 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_86;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_8;
  }
  PB::TextFormatter::format(this, "audioDvChaosThresholdMin", *(float *)(a1 + 28));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x20) == 0)
  {
LABEL_9:
    if ((v6 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_87;
  }
LABEL_86:
  PB::TextFormatter::format(this, "audioDvChaosThresholdStretch", *(float *)(a1 + 32));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x40) == 0)
  {
LABEL_10:
    if ((v6 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_88;
  }
LABEL_87:
  PB::TextFormatter::format(this, "audioDvEnergyThreshold", *(float *)(a1 + 36));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x80) == 0)
  {
LABEL_11:
    if ((v6 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_89;
  }
LABEL_88:
  PB::TextFormatter::format(this, "audioDvEnergyThresholdCenter", *(float *)(a1 + 40));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x100) == 0)
  {
LABEL_12:
    if ((v6 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_90;
  }
LABEL_89:
  PB::TextFormatter::format(this, "audioDvEnergyThresholdMax", *(float *)(a1 + 44));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x200) == 0)
  {
LABEL_13:
    if ((v6 & 0x400) == 0) {
      goto LABEL_14;
    }
    goto LABEL_91;
  }
LABEL_90:
  PB::TextFormatter::format(this, "audioDvEnergyThresholdMin", *(float *)(a1 + 48));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x400) == 0)
  {
LABEL_14:
    if ((v6 & 0x800) == 0) {
      goto LABEL_15;
    }
    goto LABEL_92;
  }
LABEL_91:
  PB::TextFormatter::format(this, "audioDvEnergyThresholdStretch", *(float *)(a1 + 52));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x800) == 0)
  {
LABEL_15:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_93;
  }
LABEL_92:
  PB::TextFormatter::format(this, "audioDvMaxRmsThresholdCenter", *(float *)(a1 + 56));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x1000) == 0)
  {
LABEL_16:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_94;
  }
LABEL_93:
  PB::TextFormatter::format(this, "audioDvMaxRmsThresholdMax", *(float *)(a1 + 60));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x2000) == 0)
  {
LABEL_17:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_95;
  }
LABEL_94:
  PB::TextFormatter::format(this, "audioDvMaxRmsThresholdMin", *(float *)(a1 + 64));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x4000) == 0)
  {
LABEL_18:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_96;
  }
LABEL_95:
  PB::TextFormatter::format(this, "audioDvMaxRmsThresholdStretch", *(float *)(a1 + 68));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x8000) == 0)
  {
LABEL_19:
    if ((v7 & 1) == 0) {
      goto LABEL_20;
    }
    goto LABEL_97;
  }
LABEL_96:
  PB::TextFormatter::format(this, "audioDvRmsThreshold", *(float *)(a1 + 72));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((v7 & 1) == 0)
  {
LABEL_20:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_98;
  }
LABEL_97:
  PB::TextFormatter::format(this, "crashDetectorDecision");
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x10000) == 0)
  {
LABEL_21:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_99;
  }
LABEL_98:
  PB::TextFormatter::format(this, "deltaVXYBiggestImpact", *(float *)(a1 + 76));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x20000) == 0)
  {
LABEL_22:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_100;
  }
LABEL_99:
  PB::TextFormatter::format(this, "deltaVXYOverEpoch", *(float *)(a1 + 80));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x40000) == 0)
  {
LABEL_23:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_101;
  }
LABEL_100:
  PB::TextFormatter::format(this, "detectorRegime");
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x80000) == 0)
  {
LABEL_24:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_102;
  }
LABEL_101:
  PB::TextFormatter::format(this, "detectorRegimeAccelnormThreshold1", *(float *)(a1 + 88));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x100000) == 0)
  {
LABEL_25:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_103;
  }
LABEL_102:
  PB::TextFormatter::format(this, "detectorRegimeAccelnormThreshold2", *(float *)(a1 + 92));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x200000) == 0)
  {
LABEL_26:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_104;
  }
LABEL_103:
  PB::TextFormatter::format(this, "detectorRegimeAccelnormThreshold3", *(float *)(a1 + 96));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x400000) == 0)
  {
LABEL_27:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_105;
  }
LABEL_104:
  PB::TextFormatter::format(this, "detectorRegimeDeltaVThreshold1", *(float *)(a1 + 100));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x800000) == 0)
  {
LABEL_28:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_106;
  }
LABEL_105:
  PB::TextFormatter::format(this, "detectorRegimeDeltaVThreshold1WithAudio", *(float *)(a1 + 104));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x1000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_107;
  }
LABEL_106:
  PB::TextFormatter::format(this, "detectorRegimeDeltaVThreshold1WithoutAudio", *(float *)(a1 + 108));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x2000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_108;
  }
LABEL_107:
  PB::TextFormatter::format(this, "detectorRegimeDeltaVThreshold1WithoutAudioStandaloneBaroNeeded", *(float *)(a1 + 112));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x4000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_109;
  }
LABEL_108:
  PB::TextFormatter::format(this, "detectorRegimeDeltaVThreshold1WithoutAudioStandaloneFull", *(float *)(a1 + 116));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x8000000) == 0)
  {
LABEL_32:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_110;
  }
LABEL_109:
  PB::TextFormatter::format(this, "detectorRegimeDeltaVThreshold2", *(float *)(a1 + 120));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x10000000) == 0)
  {
LABEL_33:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_111;
  }
LABEL_110:
  PB::TextFormatter::format(this, "detectorRegimeDeltaVThreshold2WithAudio", *(float *)(a1 + 124));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x20000000) == 0)
  {
LABEL_34:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_112;
  }
LABEL_111:
  PB::TextFormatter::format(this, "detectorRegimeDeltaVThreshold2WithoutAudio", *(float *)(a1 + 128));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x40000000) == 0)
  {
LABEL_35:
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_113;
  }
LABEL_112:
  PB::TextFormatter::format(this, "detectorRegimeDeltaVThreshold2WithoutAudioStandaloneBaroNeeded", *(float *)(a1 + 132));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x80000000) == 0)
  {
LABEL_36:
    if ((v6 & 0x100000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_114;
  }
LABEL_113:
  PB::TextFormatter::format(this, "detectorRegimeDeltaVThreshold2WithoutAudioStandaloneFull", *(float *)(a1 + 136));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x100000000) == 0)
  {
LABEL_37:
    if ((v6 & 0x200000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_115;
  }
LABEL_114:
  PB::TextFormatter::format(this, "detectorRegimeDeltaVThreshold3", *(float *)(a1 + 140));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x200000000) == 0)
  {
LABEL_38:
    if ((v6 & 0x400000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_116;
  }
LABEL_115:
  PB::TextFormatter::format(this, "detectorRegimeDeltaVThreshold3WithAudio", *(float *)(a1 + 144));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x400000000) == 0)
  {
LABEL_39:
    if ((v6 & 0x800000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_117;
  }
LABEL_116:
  PB::TextFormatter::format(this, "detectorRegimeDeltaVThreshold3WithoutAudio", *(float *)(a1 + 148));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x800000000) == 0)
  {
LABEL_40:
    if ((v6 & 0x1000000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_118;
  }
LABEL_117:
  PB::TextFormatter::format(this, "detectorRegimeDeltaVThreshold3WithoutAudioStandaloneBaroNeeded", *(float *)(a1 + 152));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x1000000000) == 0)
  {
LABEL_41:
    if ((v7 & 2) == 0) {
      goto LABEL_42;
    }
    goto LABEL_119;
  }
LABEL_118:
  PB::TextFormatter::format(this, "detectorRegimeDeltaVThreshold3WithoutAudioStandaloneFull", *(float *)(a1 + 156));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((v7 & 2) == 0)
  {
LABEL_42:
    if ((v7 & 4) == 0) {
      goto LABEL_43;
    }
    goto LABEL_120;
  }
LABEL_119:
  PB::TextFormatter::format(this, "hasAudioInEpoch");
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((v7 & 4) == 0)
  {
LABEL_43:
    if ((v7 & 8) == 0) {
      goto LABEL_44;
    }
    goto LABEL_121;
  }
LABEL_120:
  PB::TextFormatter::format(this, "isAudio");
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((v7 & 8) == 0)
  {
LABEL_44:
    if ((v7 & 0x10) == 0) {
      goto LABEL_45;
    }
    goto LABEL_122;
  }
LABEL_121:
  PB::TextFormatter::format(this, "isAudioDv");
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((v7 & 0x10) == 0)
  {
LABEL_45:
    if ((v7 & 0x20) == 0) {
      goto LABEL_46;
    }
    goto LABEL_123;
  }
LABEL_122:
  PB::TextFormatter::format(this, "isAudioSupported");
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((v7 & 0x20) == 0)
  {
LABEL_46:
    if ((v7 & 0x40) == 0) {
      goto LABEL_47;
    }
    goto LABEL_124;
  }
LABEL_123:
  PB::TextFormatter::format(this, "isBaro");
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((v7 & 0x40) == 0)
  {
LABEL_47:
    if ((v7 & 0x80) == 0) {
      goto LABEL_48;
    }
    goto LABEL_125;
  }
LABEL_124:
  PB::TextFormatter::format(this, "isCompanionConnected");
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((v7 & 0x80) == 0)
  {
LABEL_48:
    if ((v7 & 0x100) == 0) {
      goto LABEL_49;
    }
    goto LABEL_126;
  }
LABEL_125:
  PB::TextFormatter::format(this, "isFreeFall");
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((v7 & 0x100) == 0)
  {
LABEL_49:
    if ((v7 & 0x200) == 0) {
      goto LABEL_50;
    }
    goto LABEL_127;
  }
LABEL_126:
  PB::TextFormatter::format(this, "isPulse");
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((v7 & 0x200) == 0)
  {
LABEL_50:
    if ((v6 & 0x2000000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_128;
  }
LABEL_127:
  PB::TextFormatter::format(this, "lowSenseCrashDetectorDecision");
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x2000000000) == 0)
  {
LABEL_51:
    if ((v6 & 0x4000000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_129;
  }
LABEL_128:
  PB::TextFormatter::format(this, "lowSenseWithAudioDeltaVThreshold1", *(float *)(a1 + 160));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x4000000000) == 0)
  {
LABEL_52:
    if ((v6 & 0x8000000000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_130;
  }
LABEL_129:
  PB::TextFormatter::format(this, "lowSenseWithAudioDeltaVThreshold2", *(float *)(a1 + 164));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x8000000000) == 0)
  {
LABEL_53:
    if ((v6 & 0x10000000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_131;
  }
LABEL_130:
  PB::TextFormatter::format(this, "lowSenseWithAudioDeltaVThreshold3", *(float *)(a1 + 168));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x10000000000) == 0)
  {
LABEL_54:
    if ((v6 & 0x20000000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_132;
  }
LABEL_131:
  PB::TextFormatter::format(this, "lowSenseWithAudioMaxPulseThreshold", *(float *)(a1 + 172));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x20000000000) == 0)
  {
LABEL_55:
    if ((v6 & 0x40000000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_133;
  }
LABEL_132:
  PB::TextFormatter::format(this, "lowSenseWithAudioMaxaccelnormThreshold", *(float *)(a1 + 176));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x40000000000) == 0)
  {
LABEL_56:
    if ((v6 & 0x80000000000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_134;
  }
LABEL_133:
  PB::TextFormatter::format(this, "lowSenseWithAudioPeakPressureThreshold", *(float *)(a1 + 180));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x80000000000) == 0)
  {
LABEL_57:
    if ((v6 & 0x100000000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_135;
  }
LABEL_134:
  PB::TextFormatter::format(this, "lowSenseWithoutAudioDeltaVThreshold1", *(float *)(a1 + 184));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x100000000000) == 0)
  {
LABEL_58:
    if ((v6 & 0x200000000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_136;
  }
LABEL_135:
  PB::TextFormatter::format(this, "lowSenseWithoutAudioDeltaVThreshold2", *(float *)(a1 + 188));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x200000000000) == 0)
  {
LABEL_59:
    if ((v6 & 0x400000000000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_137;
  }
LABEL_136:
  PB::TextFormatter::format(this, "lowSenseWithoutAudioDeltaVThreshold3", *(float *)(a1 + 192));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x400000000000) == 0)
  {
LABEL_60:
    if ((v6 & 0x800000000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_138;
  }
LABEL_137:
  PB::TextFormatter::format(this, "lowSenseWithoutAudioMaxPulseThreshold", *(float *)(a1 + 196));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x800000000000) == 0)
  {
LABEL_61:
    if ((v6 & 0x1000000000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_139;
  }
LABEL_138:
  PB::TextFormatter::format(this, "lowSenseWithoutAudioMaxaccelnormThreshold", *(float *)(a1 + 200));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x1000000000000) == 0)
  {
LABEL_62:
    if ((v6 & 0x2000000000000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_140;
  }
LABEL_139:
  PB::TextFormatter::format(this, "lowSenseWithoutAudioPeakPressureThreshold", *(float *)(a1 + 204));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x2000000000000) == 0)
  {
LABEL_63:
    if ((v6 & 0x4000000000000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_141;
  }
LABEL_140:
  PB::TextFormatter::format(this, "maxAccelNorm", *(float *)(a1 + 208));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x4000000000000) == 0)
  {
LABEL_64:
    if ((v6 & 0x8000000000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_142;
  }
LABEL_141:
  PB::TextFormatter::format(this, "maxAccelNormThreshold", *(float *)(a1 + 212));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x8000000000000) == 0)
  {
LABEL_65:
    if ((v6 & 0x10000000000000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_143;
  }
LABEL_142:
  PB::TextFormatter::format(this, "maxAccelNormThresholdWithAudio", *(float *)(a1 + 216));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x10000000000000) == 0)
  {
LABEL_66:
    if ((v6 & 0x20000000000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_144;
  }
LABEL_143:
  PB::TextFormatter::format(this, "maxAccelNormThresholdWithoutAudio", *(float *)(a1 + 220));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x20000000000000) == 0)
  {
LABEL_67:
    if ((v6 & 0x40000000000000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_145;
  }
LABEL_144:
  PB::TextFormatter::format(this, "maxAccelNormThresholdWithoutAudioStandaloneBaroNeeded", *(float *)(a1 + 224));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x40000000000000) == 0)
  {
LABEL_68:
    if ((v6 & 0x80000000000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_146;
  }
LABEL_145:
  PB::TextFormatter::format(this, "maxAccelNormThresholdWithoutAudioStandaloneFull", *(float *)(a1 + 228));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x80000000000000) == 0)
  {
LABEL_69:
    if ((v6 & 0x100000000000000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_147;
  }
LABEL_146:
  PB::TextFormatter::format(this, "maxAudioChaos", *(float *)(a1 + 232));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x100000000000000) == 0)
  {
LABEL_70:
    if ((v6 & 0x200000000000000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_148;
  }
LABEL_147:
  PB::TextFormatter::format(this, "maxAudioEnergy", *(float *)(a1 + 236));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x200000000000000) == 0)
  {
LABEL_71:
    if ((v6 & 0x400000000000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_149;
  }
LABEL_148:
  PB::TextFormatter::format(this, "maxAudioRms", *(float *)(a1 + 240));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x400000000000000) == 0)
  {
LABEL_72:
    if ((v6 & 0x800000000000000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_150;
  }
LABEL_149:
  PB::TextFormatter::format(this, "maxPulse", *(float *)(a1 + 244));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x800000000000000) == 0)
  {
LABEL_73:
    if ((v6 & 0x1000000000000000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_151;
  }
LABEL_150:
  PB::TextFormatter::format(this, "numShortAudio");
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x1000000000000000) == 0)
  {
LABEL_74:
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_152;
  }
LABEL_151:
  PB::TextFormatter::format(this, "peakPressure", *(float *)(a1 + 252));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x2000000000000000) == 0)
  {
LABEL_75:
    if ((v7 & 0x400) == 0) {
      goto LABEL_76;
    }
    goto LABEL_153;
  }
LABEL_152:
  PB::TextFormatter::format(this, "shortAudioMaxPulseThreshold", *(float *)(a1 + 256));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((v7 & 0x400) == 0)
  {
LABEL_76:
    if ((v6 & 0x4000000000000000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_154;
  }
LABEL_153:
  PB::TextFormatter::format(this, "shortAudioMet");
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x4000000000000000) == 0)
  {
LABEL_77:
    if ((v6 & 0x8000000000000000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_155;
  }
LABEL_154:
  PB::TextFormatter::format(this, "shortAudioNumThreshold", *(float *)(a1 + 260));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x8000000000000000) == 0)
  {
LABEL_78:
    if ((v7 & 0x800) == 0) {
      goto LABEL_79;
    }
    goto LABEL_156;
  }
LABEL_155:
  PB::TextFormatter::format(this, "shortAudioPeakPressureThreshold", *(float *)(a1 + 264));
  uint64_t v6 = *v5;
  if ((*(_WORD *)(a1 + 288) & 0x800) == 0)
  {
LABEL_79:
    if ((v6 & 1) == 0) {
      goto LABEL_81;
    }
    goto LABEL_80;
  }
LABEL_156:
  PB::TextFormatter::format(this, "strongerAudio");
  if (*v5) {
LABEL_80:
  }
    PB::TextFormatter::format(this, "timestamp");
LABEL_81:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B59144(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = a1 + 280;
    do
    {
      uint64_t v9 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v16 = 0;
        unsigned int v17 = 0;
        unint64_t v12 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v18 = v2 + 1;
          char v19 = *(unsigned char *)(v9 + v2);
          *((void *)this + 1) = v18;
          v12 |= (unint64_t)(v19 & 0x7F) << v16;
          if ((v19 & 0x80) == 0) {
            goto LABEL_21;
          }
          v16 += 7;
          unint64_t v2 = v18;
          if (v17++ >= 9)
          {
LABEL_20:
            unint64_t v12 = 0;
            goto LABEL_21;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
        return v4 == 0;
      }
      char v10 = 0;
      unsigned int v11 = 0;
      unint64_t v12 = 0;
      while (1)
      {
        unint64_t v13 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v14 = *(unsigned char *)(v9 + v2);
        v12 |= (unint64_t)(v14 & 0x7F) << v10;
        if ((v14 & 0x80) == 0) {
          break;
        }
        v10 += 7;
        unint64_t v2 = v13;
        BOOL v15 = v11++ > 8;
        if (v15) {
          goto LABEL_20;
        }
      }
LABEL_21:
      if ((v12 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v21 = v12 >> 3;
      if ((int)(v12 >> 3) <= 100000)
      {
        switch((int)v21)
        {
          case 1:
            *(void *)v8 |= 1uLL;
            unint64_t v22 = *((void *)this + 1);
            unint64_t v23 = *((void *)this + 2);
            uint64_t v24 = *(void *)this;
            if (v22 <= 0xFFFFFFFFFFFFFFF5 && v22 + 10 <= v23)
            {
              char v25 = 0;
              unsigned int v26 = 0;
              uint64_t v27 = 0;
              do
              {
                unint64_t v28 = v22 + 1;
                *((void *)this + 1) = v22 + 1;
                char v29 = *(unsigned char *)(v24 + v22);
                v27 |= (unint64_t)(v29 & 0x7F) << v25;
                if ((v29 & 0x80) == 0) {
                  goto LABEL_313;
                }
                v25 += 7;
                unint64_t v22 = v28;
                BOOL v15 = v26++ > 8;
              }
              while (!v15);
LABEL_263:
              uint64_t v27 = 0;
              goto LABEL_313;
            }
            char v156 = 0;
            unsigned int v157 = 0;
            uint64_t v27 = 0;
            if (v23 <= v22) {
              unint64_t v23 = *((void *)this + 1);
            }
            while (2)
            {
              if (v23 == v22)
              {
                uint64_t v27 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v158 = v22 + 1;
                char v159 = *(unsigned char *)(v24 + v22);
                *((void *)this + 1) = v158;
                v27 |= (unint64_t)(v159 & 0x7F) << v156;
                if (v159 < 0)
                {
                  v156 += 7;
                  unint64_t v22 = v158;
                  BOOL v15 = v157++ > 8;
                  if (v15) {
                    goto LABEL_263;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v27 = 0;
                }
              }
              break;
            }
LABEL_313:
            *(void *)(a1 + 8) = v27;
            goto LABEL_305;
          case 2:
            *(void *)v8 |= 0x2000000000000uLL;
            unint64_t v31 = *((void *)this + 1);
            if (v31 > 0xFFFFFFFFFFFFFFFBLL || v31 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 208) = *(_DWORD *)(*(void *)this + v31);
            goto LABEL_304;
          case 3:
            *(_WORD *)(v8 + 8) |= 0x100u;
            unint64_t v32 = *((void *)this + 1);
            if (v32 >= *((void *)this + 2))
            {
              BOOL v35 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v33 = v32 + 1;
              int v34 = *(unsigned __int8 *)(*(void *)this + v32);
              *((void *)this + 1) = v33;
              BOOL v35 = v34 != 0;
            }
            *(unsigned char *)(a1 + 276) = v35;
            goto LABEL_305;
          case 4:
            *(_WORD *)(v8 + 8) |= 0x80u;
            unint64_t v36 = *((void *)this + 1);
            if (v36 >= *((void *)this + 2))
            {
              BOOL v39 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v37 = v36 + 1;
              int v38 = *(unsigned __int8 *)(*(void *)this + v36);
              *((void *)this + 1) = v37;
              BOOL v39 = v38 != 0;
            }
            *(unsigned char *)(a1 + 275) = v39;
            goto LABEL_305;
          case 5:
            *(_WORD *)(v8 + 8) |= 0x20u;
            unint64_t v40 = *((void *)this + 1);
            if (v40 >= *((void *)this + 2))
            {
              BOOL v43 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v41 = v40 + 1;
              int v42 = *(unsigned __int8 *)(*(void *)this + v40);
              *((void *)this + 1) = v41;
              BOOL v43 = v42 != 0;
            }
            *(unsigned char *)(a1 + 273) = v43;
            goto LABEL_305;
          case 6:
            *(_WORD *)(v8 + 8) |= 4u;
            unint64_t v44 = *((void *)this + 1);
            if (v44 >= *((void *)this + 2))
            {
              BOOL v47 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v45 = v44 + 1;
              int v46 = *(unsigned __int8 *)(*(void *)this + v44);
              *((void *)this + 1) = v45;
              BOOL v47 = v46 != 0;
            }
            *(unsigned char *)(a1 + 270) = v47;
            goto LABEL_305;
          case 7:
            *(_WORD *)(v8 + 8) |= 2u;
            unint64_t v48 = *((void *)this + 1);
            if (v48 >= *((void *)this + 2))
            {
              BOOL v51 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v49 = v48 + 1;
              int v50 = *(unsigned __int8 *)(*(void *)this + v48);
              *((void *)this + 1) = v49;
              BOOL v51 = v50 != 0;
            }
            *(unsigned char *)(a1 + 269) = v51;
            goto LABEL_305;
          case 8:
            *(void *)v8 |= 0x40000uLL;
            unint64_t v52 = *((void *)this + 1);
            unint64_t v53 = *((void *)this + 2);
            uint64_t v54 = *(void *)this;
            if (v52 <= 0xFFFFFFFFFFFFFFF5 && v52 + 10 <= v53)
            {
              char v55 = 0;
              unsigned int v56 = 0;
              uint64_t v57 = 0;
              do
              {
                unint64_t v58 = v52 + 1;
                *((void *)this + 1) = v52 + 1;
                char v59 = *(unsigned char *)(v54 + v52);
                v57 |= (unint64_t)(v59 & 0x7F) << v55;
                if ((v59 & 0x80) == 0) {
                  goto LABEL_317;
                }
                v55 += 7;
                unint64_t v52 = v58;
                BOOL v15 = v56++ > 8;
              }
              while (!v15);
LABEL_280:
              LODWORD(v57) = 0;
              goto LABEL_317;
            }
            char v160 = 0;
            unsigned int v161 = 0;
            uint64_t v57 = 0;
            if (v53 <= v52) {
              unint64_t v53 = *((void *)this + 1);
            }
            while (2)
            {
              if (v53 == v52)
              {
                LODWORD(v57) = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v162 = v52 + 1;
                char v163 = *(unsigned char *)(v54 + v52);
                *((void *)this + 1) = v162;
                v57 |= (unint64_t)(v163 & 0x7F) << v160;
                if (v163 < 0)
                {
                  v160 += 7;
                  unint64_t v52 = v162;
                  BOOL v15 = v161++ > 8;
                  if (v15) {
                    goto LABEL_280;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v57) = 0;
                }
              }
              break;
            }
LABEL_317:
            *(_DWORD *)(a1 + 84) = v57;
            goto LABEL_305;
          case 9:
            *(_WORD *)(v8 + 8) |= 1u;
            unint64_t v60 = *((void *)this + 1);
            if (v60 >= *((void *)this + 2))
            {
              BOOL v63 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v61 = v60 + 1;
              int v62 = *(unsigned __int8 *)(*(void *)this + v60);
              *((void *)this + 1) = v61;
              BOOL v63 = v62 != 0;
            }
            *(unsigned char *)(a1 + 268) = v63;
            goto LABEL_305;
          case 10:
            *(_WORD *)(v8 + 8) |= 0x10u;
            unint64_t v64 = *((void *)this + 1);
            if (v64 >= *((void *)this + 2))
            {
              BOOL v67 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v65 = v64 + 1;
              int v66 = *(unsigned __int8 *)(*(void *)this + v64);
              *((void *)this + 1) = v65;
              BOOL v67 = v66 != 0;
            }
            *(unsigned char *)(a1 + 272) = v67;
            goto LABEL_305;
          case 11:
            *(void *)v8 |= 0x20000uLL;
            unint64_t v68 = *((void *)this + 1);
            if (v68 > 0xFFFFFFFFFFFFFFFBLL || v68 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v68);
            goto LABEL_304;
          case 12:
            *(void *)v8 |= 0x10000uLL;
            unint64_t v69 = *((void *)this + 1);
            if (v69 > 0xFFFFFFFFFFFFFFFBLL || v69 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v69);
            goto LABEL_304;
          case 13:
            *(void *)v8 |= 0x400000uLL;
            unint64_t v70 = *((void *)this + 1);
            if (v70 > 0xFFFFFFFFFFFFFFFBLL || v70 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v70);
            goto LABEL_304;
          case 14:
            *(void *)v8 |= 0x8000000uLL;
            unint64_t v71 = *((void *)this + 1);
            if (v71 > 0xFFFFFFFFFFFFFFFBLL || v71 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 120) = *(_DWORD *)(*(void *)this + v71);
            goto LABEL_304;
          case 15:
            *(void *)v8 |= 0x100000000uLL;
            unint64_t v72 = *((void *)this + 1);
            if (v72 > 0xFFFFFFFFFFFFFFFBLL || v72 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 140) = *(_DWORD *)(*(void *)this + v72);
            goto LABEL_304;
          case 16:
            *(void *)v8 |= 0x4000000000000uLL;
            unint64_t v73 = *((void *)this + 1);
            if (v73 > 0xFFFFFFFFFFFFFFFBLL || v73 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 212) = *(_DWORD *)(*(void *)this + v73);
            goto LABEL_304;
          case 17:
            *(void *)v8 |= 0x800000uLL;
            unint64_t v74 = *((void *)this + 1);
            if (v74 > 0xFFFFFFFFFFFFFFFBLL || v74 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 104) = *(_DWORD *)(*(void *)this + v74);
            goto LABEL_304;
          case 18:
            *(void *)v8 |= 0x10000000uLL;
            unint64_t v75 = *((void *)this + 1);
            if (v75 > 0xFFFFFFFFFFFFFFFBLL || v75 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 124) = *(_DWORD *)(*(void *)this + v75);
            goto LABEL_304;
          case 19:
            *(void *)v8 |= 0x200000000uLL;
            unint64_t v76 = *((void *)this + 1);
            if (v76 > 0xFFFFFFFFFFFFFFFBLL || v76 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 144) = *(_DWORD *)(*(void *)this + v76);
            goto LABEL_304;
          case 20:
            *(void *)v8 |= 0x8000000000000uLL;
            unint64_t v77 = *((void *)this + 1);
            if (v77 > 0xFFFFFFFFFFFFFFFBLL || v77 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 216) = *(_DWORD *)(*(void *)this + v77);
            goto LABEL_304;
          case 21:
            *(void *)v8 |= 0x1000000uLL;
            unint64_t v78 = *((void *)this + 1);
            if (v78 > 0xFFFFFFFFFFFFFFFBLL || v78 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 108) = *(_DWORD *)(*(void *)this + v78);
            goto LABEL_304;
          case 22:
            *(void *)v8 |= 0x20000000uLL;
            unint64_t v79 = *((void *)this + 1);
            if (v79 > 0xFFFFFFFFFFFFFFFBLL || v79 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v79);
            goto LABEL_304;
          case 23:
            *(void *)v8 |= 0x400000000uLL;
            unint64_t v80 = *((void *)this + 1);
            if (v80 > 0xFFFFFFFFFFFFFFFBLL || v80 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 148) = *(_DWORD *)(*(void *)this + v80);
            goto LABEL_304;
          case 24:
            *(void *)v8 |= 0x10000000000000uLL;
            unint64_t v81 = *((void *)this + 1);
            if (v81 > 0xFFFFFFFFFFFFFFFBLL || v81 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 220) = *(_DWORD *)(*(void *)this + v81);
            goto LABEL_304;
          case 25:
            *(void *)v8 |= 0x100000000000000uLL;
            unint64_t v82 = *((void *)this + 1);
            if (v82 > 0xFFFFFFFFFFFFFFFBLL || v82 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 236) = *(_DWORD *)(*(void *)this + v82);
            goto LABEL_304;
          case 26:
            *(void *)v8 |= 0x80000000000000uLL;
            unint64_t v83 = *((void *)this + 1);
            if (v83 > 0xFFFFFFFFFFFFFFFBLL || v83 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 232) = *(_DWORD *)(*(void *)this + v83);
            goto LABEL_304;
          case 27:
            *(void *)v8 |= 0x200000000000000uLL;
            unint64_t v84 = *((void *)this + 1);
            if (v84 > 0xFFFFFFFFFFFFFFFBLL || v84 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 240) = *(_DWORD *)(*(void *)this + v84);
            goto LABEL_304;
          case 28:
            *(void *)v8 |= 0x40uLL;
            unint64_t v85 = *((void *)this + 1);
            if (v85 > 0xFFFFFFFFFFFFFFFBLL || v85 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v85);
            goto LABEL_304;
          case 29:
            *(void *)v8 |= 2uLL;
            unint64_t v86 = *((void *)this + 1);
            if (v86 > 0xFFFFFFFFFFFFFFFBLL || v86 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v86);
            goto LABEL_304;
          case 30:
            *(void *)v8 |= 0x8000uLL;
            unint64_t v87 = *((void *)this + 1);
            if (v87 > 0xFFFFFFFFFFFFFFFBLL || v87 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v87);
            goto LABEL_304;
          case 31:
            *(_WORD *)(v8 + 8) |= 0x800u;
            unint64_t v88 = *((void *)this + 1);
            if (v88 >= *((void *)this + 2))
            {
              BOOL v91 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v89 = v88 + 1;
              int v90 = *(unsigned __int8 *)(*(void *)this + v88);
              *((void *)this + 1) = v89;
              BOOL v91 = v90 != 0;
            }
            *(unsigned char *)(a1 + 279) = v91;
            goto LABEL_305;
          case 32:
            *(_WORD *)(v8 + 8) |= 8u;
            unint64_t v92 = *((void *)this + 1);
            if (v92 >= *((void *)this + 2))
            {
              BOOL v95 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v93 = v92 + 1;
              int v94 = *(unsigned __int8 *)(*(void *)this + v92);
              *((void *)this + 1) = v93;
              BOOL v95 = v94 != 0;
            }
            *(unsigned char *)(a1 + 271) = v95;
            goto LABEL_305;
          case 33:
            *(void *)v8 |= 0x80uLL;
            unint64_t v96 = *((void *)this + 1);
            if (v96 > 0xFFFFFFFFFFFFFFFBLL || v96 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v96);
            goto LABEL_304;
          case 34:
            *(void *)v8 |= 0x400uLL;
            unint64_t v97 = *((void *)this + 1);
            if (v97 > 0xFFFFFFFFFFFFFFFBLL || v97 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v97);
            goto LABEL_304;
          case 35:
            *(void *)v8 |= 0x200uLL;
            unint64_t v98 = *((void *)this + 1);
            if (v98 > 0xFFFFFFFFFFFFFFFBLL || v98 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v98);
            goto LABEL_304;
          case 36:
            *(void *)v8 |= 0x100uLL;
            unint64_t v99 = *((void *)this + 1);
            if (v99 > 0xFFFFFFFFFFFFFFFBLL || v99 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v99);
            goto LABEL_304;
          case 37:
            *(void *)v8 |= 4uLL;
            unint64_t v100 = *((void *)this + 1);
            if (v100 > 0xFFFFFFFFFFFFFFFBLL || v100 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v100);
            goto LABEL_304;
          case 38:
            *(void *)v8 |= 0x20uLL;
            unint64_t v101 = *((void *)this + 1);
            if (v101 > 0xFFFFFFFFFFFFFFFBLL || v101 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v101);
            goto LABEL_304;
          case 39:
            *(void *)v8 |= 0x10uLL;
            unint64_t v102 = *((void *)this + 1);
            if (v102 > 0xFFFFFFFFFFFFFFFBLL || v102 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v102);
            goto LABEL_304;
          case 40:
            *(void *)v8 |= 8uLL;
            unint64_t v103 = *((void *)this + 1);
            if (v103 > 0xFFFFFFFFFFFFFFFBLL || v103 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v103);
            goto LABEL_304;
          case 41:
            *(void *)v8 |= 0x800uLL;
            unint64_t v104 = *((void *)this + 1);
            if (v104 > 0xFFFFFFFFFFFFFFFBLL || v104 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v104);
            goto LABEL_304;
          case 42:
            *(void *)v8 |= 0x4000uLL;
            unint64_t v105 = *((void *)this + 1);
            if (v105 > 0xFFFFFFFFFFFFFFFBLL || v105 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 68) = *(_DWORD *)(*(void *)this + v105);
            goto LABEL_304;
          case 43:
            *(void *)v8 |= 0x2000uLL;
            unint64_t v106 = *((void *)this + 1);
            if (v106 > 0xFFFFFFFFFFFFFFFBLL || v106 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v106);
            goto LABEL_304;
          case 44:
            *(void *)v8 |= 0x1000uLL;
            unint64_t v107 = *((void *)this + 1);
            if (v107 > 0xFFFFFFFFFFFFFFFBLL || v107 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v107);
            goto LABEL_304;
          case 45:
            *(void *)v8 |= 0x2000000uLL;
            unint64_t v108 = *((void *)this + 1);
            if (v108 > 0xFFFFFFFFFFFFFFFBLL || v108 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 112) = *(_DWORD *)(*(void *)this + v108);
            goto LABEL_304;
          case 46:
            *(void *)v8 |= 0x40000000uLL;
            unint64_t v109 = *((void *)this + 1);
            if (v109 > 0xFFFFFFFFFFFFFFFBLL || v109 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 132) = *(_DWORD *)(*(void *)this + v109);
            goto LABEL_304;
          case 47:
            *(void *)v8 |= 0x800000000uLL;
            unint64_t v110 = *((void *)this + 1);
            if (v110 > 0xFFFFFFFFFFFFFFFBLL || v110 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 152) = *(_DWORD *)(*(void *)this + v110);
            goto LABEL_304;
          case 48:
            *(void *)v8 |= 0x20000000000000uLL;
            unint64_t v111 = *((void *)this + 1);
            if (v111 > 0xFFFFFFFFFFFFFFFBLL || v111 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 224) = *(_DWORD *)(*(void *)this + v111);
            goto LABEL_304;
          case 49:
            *(void *)v8 |= 0x4000000uLL;
            unint64_t v112 = *((void *)this + 1);
            if (v112 > 0xFFFFFFFFFFFFFFFBLL || v112 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 116) = *(_DWORD *)(*(void *)this + v112);
            goto LABEL_304;
          case 50:
            *(void *)v8 |= 0x80000000uLL;
            unint64_t v113 = *((void *)this + 1);
            if (v113 > 0xFFFFFFFFFFFFFFFBLL || v113 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 136) = *(_DWORD *)(*(void *)this + v113);
            goto LABEL_304;
          case 51:
            *(void *)v8 |= 0x1000000000uLL;
            unint64_t v114 = *((void *)this + 1);
            if (v114 > 0xFFFFFFFFFFFFFFFBLL || v114 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 156) = *(_DWORD *)(*(void *)this + v114);
            goto LABEL_304;
          case 52:
            *(void *)v8 |= 0x40000000000000uLL;
            unint64_t v115 = *((void *)this + 1);
            if (v115 > 0xFFFFFFFFFFFFFFFBLL || v115 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 228) = *(_DWORD *)(*(void *)this + v115);
            goto LABEL_304;
          case 53:
            *(_WORD *)(v8 + 8) |= 0x40u;
            unint64_t v116 = *((void *)this + 1);
            if (v116 >= *((void *)this + 2))
            {
              BOOL v119 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v117 = v116 + 1;
              int v118 = *(unsigned __int8 *)(*(void *)this + v116);
              *((void *)this + 1) = v117;
              BOOL v119 = v118 != 0;
            }
            *(unsigned char *)(a1 + 274) = v119;
            goto LABEL_305;
          case 54:
            *(void *)v8 |= 0x1000000000000000uLL;
            unint64_t v120 = *((void *)this + 1);
            if (v120 > 0xFFFFFFFFFFFFFFFBLL || v120 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 252) = *(_DWORD *)(*(void *)this + v120);
            goto LABEL_304;
          case 55:
            *(void *)v8 |= 0x400000000000000uLL;
            unint64_t v121 = *((void *)this + 1);
            if (v121 > 0xFFFFFFFFFFFFFFFBLL || v121 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 244) = *(_DWORD *)(*(void *)this + v121);
            goto LABEL_304;
          case 56:
            *(_WORD *)(v8 + 8) |= 0x200u;
            unint64_t v122 = *((void *)this + 1);
            if (v122 >= *((void *)this + 2))
            {
              BOOL v125 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v123 = v122 + 1;
              int v124 = *(unsigned __int8 *)(*(void *)this + v122);
              *((void *)this + 1) = v123;
              BOOL v125 = v124 != 0;
            }
            *(unsigned char *)(a1 + 277) = v125;
            goto LABEL_305;
          case 57:
            *(void *)v8 |= 0x2000000000uLL;
            unint64_t v126 = *((void *)this + 1);
            if (v126 > 0xFFFFFFFFFFFFFFFBLL || v126 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 160) = *(_DWORD *)(*(void *)this + v126);
            goto LABEL_304;
          case 58:
            *(void *)v8 |= 0x4000000000uLL;
            unint64_t v127 = *((void *)this + 1);
            if (v127 > 0xFFFFFFFFFFFFFFFBLL || v127 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 164) = *(_DWORD *)(*(void *)this + v127);
            goto LABEL_304;
          case 59:
            *(void *)v8 |= 0x8000000000uLL;
            unint64_t v128 = *((void *)this + 1);
            if (v128 > 0xFFFFFFFFFFFFFFFBLL || v128 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 168) = *(_DWORD *)(*(void *)this + v128);
            goto LABEL_304;
          case 60:
            *(void *)v8 |= 0x20000000000uLL;
            unint64_t v129 = *((void *)this + 1);
            if (v129 > 0xFFFFFFFFFFFFFFFBLL || v129 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 176) = *(_DWORD *)(*(void *)this + v129);
            goto LABEL_304;
          case 61:
            *(void *)v8 |= 0x10000000000uLL;
            unint64_t v130 = *((void *)this + 1);
            if (v130 > 0xFFFFFFFFFFFFFFFBLL || v130 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 172) = *(_DWORD *)(*(void *)this + v130);
            goto LABEL_304;
          case 62:
            *(void *)v8 |= 0x40000000000uLL;
            unint64_t v131 = *((void *)this + 1);
            if (v131 > 0xFFFFFFFFFFFFFFFBLL || v131 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 180) = *(_DWORD *)(*(void *)this + v131);
            goto LABEL_304;
          case 63:
            *(void *)v8 |= 0x80000000000uLL;
            unint64_t v132 = *((void *)this + 1);
            if (v132 > 0xFFFFFFFFFFFFFFFBLL || v132 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 184) = *(_DWORD *)(*(void *)this + v132);
            goto LABEL_304;
          case 64:
            *(void *)v8 |= 0x100000000000uLL;
            unint64_t v133 = *((void *)this + 1);
            if (v133 > 0xFFFFFFFFFFFFFFFBLL || v133 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 188) = *(_DWORD *)(*(void *)this + v133);
            goto LABEL_304;
          case 65:
            *(void *)v8 |= 0x200000000000uLL;
            unint64_t v134 = *((void *)this + 1);
            if (v134 > 0xFFFFFFFFFFFFFFFBLL || v134 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 192) = *(_DWORD *)(*(void *)this + v134);
            goto LABEL_304;
          case 66:
            *(void *)v8 |= 0x800000000000uLL;
            unint64_t v135 = *((void *)this + 1);
            if (v135 > 0xFFFFFFFFFFFFFFFBLL || v135 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 200) = *(_DWORD *)(*(void *)this + v135);
            goto LABEL_304;
          case 67:
            *(void *)v8 |= 0x400000000000uLL;
            unint64_t v136 = *((void *)this + 1);
            if (v136 > 0xFFFFFFFFFFFFFFFBLL || v136 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 196) = *(_DWORD *)(*(void *)this + v136);
            goto LABEL_304;
          case 68:
            *(void *)v8 |= 0x1000000000000uLL;
            unint64_t v137 = *((void *)this + 1);
            if (v137 > 0xFFFFFFFFFFFFFFFBLL || v137 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 204) = *(_DWORD *)(*(void *)this + v137);
            goto LABEL_304;
          case 69:
            *(void *)v8 |= 0x800000000000000uLL;
            unint64_t v138 = *((void *)this + 1);
            unint64_t v139 = *((void *)this + 2);
            uint64_t v140 = *(void *)this;
            if (v138 <= 0xFFFFFFFFFFFFFFF5 && v138 + 10 <= v139)
            {
              char v141 = 0;
              unsigned int v142 = 0;
              uint64_t v143 = 0;
              do
              {
                unint64_t v144 = v138 + 1;
                *((void *)this + 1) = v138 + 1;
                char v145 = *(unsigned char *)(v140 + v138);
                v143 |= (unint64_t)(v145 & 0x7F) << v141;
                if ((v145 & 0x80) == 0) {
                  goto LABEL_321;
                }
                v141 += 7;
                unint64_t v138 = v144;
                BOOL v15 = v142++ > 8;
              }
              while (!v15);
LABEL_299:
              LODWORD(v143) = 0;
              goto LABEL_321;
            }
            char v164 = 0;
            unsigned int v165 = 0;
            uint64_t v143 = 0;
            if (v139 <= v138) {
              unint64_t v139 = *((void *)this + 1);
            }
            break;
          case 70:
            *(_WORD *)(v8 + 8) |= 0x400u;
            unint64_t v146 = *((void *)this + 1);
            if (v146 >= *((void *)this + 2))
            {
              BOOL v149 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v147 = v146 + 1;
              int v148 = *(unsigned __int8 *)(*(void *)this + v146);
              *((void *)this + 1) = v147;
              BOOL v149 = v148 != 0;
            }
            *(unsigned char *)(a1 + 278) = v149;
            goto LABEL_305;
          case 71:
            *(void *)v8 |= 0x4000000000000000uLL;
            unint64_t v150 = *((void *)this + 1);
            if (v150 > 0xFFFFFFFFFFFFFFFBLL || v150 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 260) = *(_DWORD *)(*(void *)this + v150);
            goto LABEL_304;
          case 72:
            *(void *)v8 |= 0x8000000000000000;
            unint64_t v151 = *((void *)this + 1);
            if (v151 > 0xFFFFFFFFFFFFFFFBLL || v151 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 264) = *(_DWORD *)(*(void *)this + v151);
            goto LABEL_304;
          case 73:
            *(void *)v8 |= 0x2000000000000000uLL;
            unint64_t v152 = *((void *)this + 1);
            if (v152 > 0xFFFFFFFFFFFFFFFBLL || v152 + 4 > *((void *)this + 2))
            {
LABEL_248:
              *((unsigned char *)this + 24) = 1;
              goto LABEL_305;
            }
            *(_DWORD *)(a1 + 256) = *(_DWORD *)(*(void *)this + v152);
            goto LABEL_304;
          default:
            goto LABEL_255;
        }
        while (1)
        {
          if (v139 == v138)
          {
            LODWORD(v143) = 0;
            *((unsigned char *)this + 24) = 1;
            goto LABEL_321;
          }
          unint64_t v166 = v138 + 1;
          char v167 = *(unsigned char *)(v140 + v138);
          *((void *)this + 1) = v166;
          v143 |= (unint64_t)(v167 & 0x7F) << v164;
          if ((v167 & 0x80) == 0) {
            break;
          }
          v164 += 7;
          unint64_t v138 = v166;
          BOOL v15 = v165++ > 8;
          if (v15) {
            goto LABEL_299;
          }
        }
        if (*((unsigned char *)this + 24)) {
          LODWORD(v143) = 0;
        }
LABEL_321:
        *(_DWORD *)(a1 + 248) = v143;
        goto LABEL_305;
      }
      switch(v21)
      {
        case 0x186A1:
          *(void *)v8 |= 0x80000uLL;
          unint64_t v153 = *((void *)this + 1);
          if (v153 <= 0xFFFFFFFFFFFFFFFBLL && v153 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v153);
            goto LABEL_304;
          }
          break;
        case 0x186A2:
          *(void *)v8 |= 0x100000uLL;
          unint64_t v154 = *((void *)this + 1);
          if (v154 <= 0xFFFFFFFFFFFFFFFBLL && v154 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v154);
            goto LABEL_304;
          }
          break;
        case 0x186A3:
          *(void *)v8 |= 0x200000uLL;
          unint64_t v30 = *((void *)this + 1);
          if (v30 <= 0xFFFFFFFFFFFFFFFBLL && v30 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v30);
LABEL_304:
            *((void *)this + 1) += 4;
            goto LABEL_305;
          }
          break;
        default:
LABEL_255:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          goto LABEL_305;
      }
      *((unsigned char *)this + 24) = 1;
LABEL_305:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
    }
    while (v2 < v3 && v4 == 0);
  }
  return v4 == 0;
}

uint64_t sub_227B5A7BC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = (uint64_t *)(result + 280);
  uint64_t v5 = *(void *)(result + 280);
  if (v5)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    uint64_t v5 = *v4;
    __int16 v6 = *((_WORD *)v4 + 4);
    if ((*v4 & 0x2000000000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v6 = *(_WORD *)(result + 288);
  if ((v5 & 0x2000000000000) != 0)
  {
LABEL_5:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 208));
    uint64_t v5 = *v4;
    __int16 v6 = *((_WORD *)v4 + 4);
  }
LABEL_6:
  if ((v6 & 0x100) != 0)
  {
    uint64_t result = PB::Writer::write(this);
    uint64_t v5 = *v4;
    __int16 v6 = *((_WORD *)v4 + 4);
    if ((v6 & 0x80) == 0)
    {
LABEL_8:
      if ((v6 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_84;
    }
  }
  else if ((v6 & 0x80) == 0)
  {
    goto LABEL_8;
  }
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((v6 & 0x20) == 0)
  {
LABEL_9:
    if ((v6 & 4) == 0) {
      goto LABEL_10;
    }
    goto LABEL_85;
  }
LABEL_84:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((v6 & 4) == 0)
  {
LABEL_10:
    if ((v6 & 2) == 0) {
      goto LABEL_11;
    }
    goto LABEL_86;
  }
LABEL_85:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((v6 & 2) == 0)
  {
LABEL_11:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_87;
  }
LABEL_86:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x40000) == 0)
  {
LABEL_12:
    if ((v6 & 1) == 0) {
      goto LABEL_13;
    }
    goto LABEL_88;
  }
LABEL_87:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((v6 & 1) == 0)
  {
LABEL_13:
    if ((v6 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_89;
  }
LABEL_88:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((v6 & 0x10) == 0)
  {
LABEL_14:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_90;
  }
LABEL_89:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x20000) == 0)
  {
LABEL_15:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_91;
  }
LABEL_90:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x10000) == 0)
  {
LABEL_16:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_92;
  }
LABEL_91:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x400000) == 0)
  {
LABEL_17:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_93;
  }
LABEL_92:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 100));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x8000000) == 0)
  {
LABEL_18:
    if ((v5 & 0x100000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_94;
  }
LABEL_93:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 120));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x100000000) == 0)
  {
LABEL_19:
    if ((v5 & 0x4000000000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_95;
  }
LABEL_94:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 140));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x4000000000000) == 0)
  {
LABEL_20:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_96;
  }
LABEL_95:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 212));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x800000) == 0)
  {
LABEL_21:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_97;
  }
LABEL_96:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 104));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x10000000) == 0)
  {
LABEL_22:
    if ((v5 & 0x200000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_98;
  }
LABEL_97:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 124));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x200000000) == 0)
  {
LABEL_23:
    if ((v5 & 0x8000000000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_99;
  }
LABEL_98:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 144));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x8000000000000) == 0)
  {
LABEL_24:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_100;
  }
LABEL_99:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 216));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x1000000) == 0)
  {
LABEL_25:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_101;
  }
LABEL_100:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 108));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x20000000) == 0)
  {
LABEL_26:
    if ((v5 & 0x400000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_102;
  }
LABEL_101:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 128));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x400000000) == 0)
  {
LABEL_27:
    if ((v5 & 0x10000000000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_103;
  }
LABEL_102:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 148));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x10000000000000) == 0)
  {
LABEL_28:
    if ((v5 & 0x100000000000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_104;
  }
LABEL_103:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 220));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x100000000000000) == 0)
  {
LABEL_29:
    if ((v5 & 0x80000000000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_105;
  }
LABEL_104:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 236));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x80000000000000) == 0)
  {
LABEL_30:
    if ((v5 & 0x200000000000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_106;
  }
LABEL_105:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 232));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x200000000000000) == 0)
  {
LABEL_31:
    if ((v5 & 0x40) == 0) {
      goto LABEL_32;
    }
    goto LABEL_107;
  }
LABEL_106:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 240));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x40) == 0)
  {
LABEL_32:
    if ((v5 & 2) == 0) {
      goto LABEL_33;
    }
    goto LABEL_108;
  }
LABEL_107:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 2) == 0)
  {
LABEL_33:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_109;
  }
LABEL_108:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x8000) == 0)
  {
LABEL_34:
    if ((v6 & 0x800) == 0) {
      goto LABEL_35;
    }
    goto LABEL_110;
  }
LABEL_109:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((v6 & 0x800) == 0)
  {
LABEL_35:
    if ((v6 & 8) == 0) {
      goto LABEL_36;
    }
    goto LABEL_111;
  }
LABEL_110:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((v6 & 8) == 0)
  {
LABEL_36:
    if ((v5 & 0x80) == 0) {
      goto LABEL_37;
    }
    goto LABEL_112;
  }
LABEL_111:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x80) == 0)
  {
LABEL_37:
    if ((v5 & 0x400) == 0) {
      goto LABEL_38;
    }
    goto LABEL_113;
  }
LABEL_112:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x400) == 0)
  {
LABEL_38:
    if ((v5 & 0x200) == 0) {
      goto LABEL_39;
    }
    goto LABEL_114;
  }
LABEL_113:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x200) == 0)
  {
LABEL_39:
    if ((v5 & 0x100) == 0) {
      goto LABEL_40;
    }
    goto LABEL_115;
  }
LABEL_114:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x100) == 0)
  {
LABEL_40:
    if ((v5 & 4) == 0) {
      goto LABEL_41;
    }
    goto LABEL_116;
  }
LABEL_115:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 4) == 0)
  {
LABEL_41:
    if ((v5 & 0x20) == 0) {
      goto LABEL_42;
    }
    goto LABEL_117;
  }
LABEL_116:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x20) == 0)
  {
LABEL_42:
    if ((v5 & 0x10) == 0) {
      goto LABEL_43;
    }
    goto LABEL_118;
  }
LABEL_117:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x10) == 0)
  {
LABEL_43:
    if ((v5 & 8) == 0) {
      goto LABEL_44;
    }
    goto LABEL_119;
  }
LABEL_118:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 8) == 0)
  {
LABEL_44:
    if ((v5 & 0x800) == 0) {
      goto LABEL_45;
    }
    goto LABEL_120;
  }
LABEL_119:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x800) == 0)
  {
LABEL_45:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_121;
  }
LABEL_120:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x4000) == 0)
  {
LABEL_46:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_122;
  }
LABEL_121:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 68));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x2000) == 0)
  {
LABEL_47:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_123;
  }
LABEL_122:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x1000) == 0)
  {
LABEL_48:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_124;
  }
LABEL_123:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 60));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x2000000) == 0)
  {
LABEL_49:
    if ((v5 & 0x40000000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_125;
  }
LABEL_124:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 112));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x40000000) == 0)
  {
LABEL_50:
    if ((v5 & 0x800000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_126;
  }
LABEL_125:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 132));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x800000000) == 0)
  {
LABEL_51:
    if ((v5 & 0x20000000000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_127;
  }
LABEL_126:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 152));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x20000000000000) == 0)
  {
LABEL_52:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_128;
  }
LABEL_127:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 224));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x4000000) == 0)
  {
LABEL_53:
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_129;
  }
LABEL_128:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 116));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x80000000) == 0)
  {
LABEL_54:
    if ((v5 & 0x1000000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_130;
  }
LABEL_129:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 136));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x1000000000) == 0)
  {
LABEL_55:
    if ((v5 & 0x40000000000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_131;
  }
LABEL_130:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 156));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x40000000000000) == 0)
  {
LABEL_56:
    if ((v6 & 0x40) == 0) {
      goto LABEL_57;
    }
    goto LABEL_132;
  }
LABEL_131:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 228));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((v6 & 0x40) == 0)
  {
LABEL_57:
    if ((v5 & 0x1000000000000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_133;
  }
LABEL_132:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x1000000000000000) == 0)
  {
LABEL_58:
    if ((v5 & 0x400000000000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_134;
  }
LABEL_133:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 252));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x400000000000000) == 0)
  {
LABEL_59:
    if ((v6 & 0x200) == 0) {
      goto LABEL_60;
    }
    goto LABEL_135;
  }
LABEL_134:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 244));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((v6 & 0x200) == 0)
  {
LABEL_60:
    if ((v5 & 0x2000000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_136;
  }
LABEL_135:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x2000000000) == 0)
  {
LABEL_61:
    if ((v5 & 0x4000000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_137;
  }
LABEL_136:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 160));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x4000000000) == 0)
  {
LABEL_62:
    if ((v5 & 0x8000000000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_138;
  }
LABEL_137:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 164));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x8000000000) == 0)
  {
LABEL_63:
    if ((v5 & 0x20000000000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_139;
  }
LABEL_138:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 168));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x20000000000) == 0)
  {
LABEL_64:
    if ((v5 & 0x10000000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_140;
  }
LABEL_139:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 176));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x10000000000) == 0)
  {
LABEL_65:
    if ((v5 & 0x40000000000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_141;
  }
LABEL_140:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 172));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x40000000000) == 0)
  {
LABEL_66:
    if ((v5 & 0x80000000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_142;
  }
LABEL_141:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 180));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x80000000000) == 0)
  {
LABEL_67:
    if ((v5 & 0x100000000000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_143;
  }
LABEL_142:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 184));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x100000000000) == 0)
  {
LABEL_68:
    if ((v5 & 0x200000000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_144;
  }
LABEL_143:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 188));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x200000000000) == 0)
  {
LABEL_69:
    if ((v5 & 0x800000000000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_145;
  }
LABEL_144:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 192));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x800000000000) == 0)
  {
LABEL_70:
    if ((v5 & 0x400000000000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_146;
  }
LABEL_145:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 200));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x400000000000) == 0)
  {
LABEL_71:
    if ((v5 & 0x1000000000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_147;
  }
LABEL_146:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 196));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x1000000000000) == 0)
  {
LABEL_72:
    if ((v5 & 0x800000000000000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_148;
  }
LABEL_147:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 204));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x800000000000000) == 0)
  {
LABEL_73:
    if ((v6 & 0x400) == 0) {
      goto LABEL_74;
    }
    goto LABEL_149;
  }
LABEL_148:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v5 = *v4;
  if ((v4[1] & 0x400) == 0)
  {
LABEL_74:
    if ((v5 & 0x4000000000000000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_150;
  }
LABEL_149:
  uint64_t result = PB::Writer::write(this);
  uint64_t v5 = *v4;
  if ((*v4 & 0x4000000000000000) == 0)
  {
LABEL_75:
    if ((v5 & 0x8000000000000000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_151;
  }
LABEL_150:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 260));
  uint64_t v5 = *v4;
  if ((*v4 & 0x8000000000000000) == 0)
  {
LABEL_76:
    if ((v5 & 0x2000000000000000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_77;
  }
LABEL_151:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 264));
  uint64_t v5 = *v4;
  if ((*v4 & 0x2000000000000000) != 0)
  {
LABEL_77:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 256));
    uint64_t v5 = *v4;
  }
LABEL_78:
  if ((v5 & 0x80000) == 0)
  {
    if ((v5 & 0x100000) == 0) {
      goto LABEL_80;
    }
LABEL_154:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 92));
    if ((*v4 & 0x200000) == 0) {
      return result;
    }
    goto LABEL_155;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 88));
  uint64_t v5 = *v4;
  if ((*v4 & 0x100000) != 0) {
    goto LABEL_154;
  }
LABEL_80:
  if ((v5 & 0x200000) == 0) {
    return result;
  }
LABEL_155:
  float v7 = *(float *)(v3 + 96);

  return PB::Writer::write(this, v7);
}

double sub_227B5B178(uint64_t a1)
{
  *(void *)a1 = &unk_26DC20B98;
  *(_DWORD *)(a1 + 144) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return result;
}

void sub_227B5B1AC(PB::Base *this)
{
  *(void *)this = &unk_26DC20B98;
  unint64_t v2 = (void *)*((void *)this + 4);
  if (v2)
  {
    *((void *)this + 5) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 2) = v3;
    operator delete(v3);
  }

  PB::Base::~Base(this);
}

void sub_227B5B220(PB::Base *a1)
{
  sub_227B5B1AC(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B5B258(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC20B98;
  *(_OWORD *)(a1 + 8) = 0u;
  int v4 = (char *)(a1 + 8);
  *(_DWORD *)(a1 + 144) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  int v5 = *(_DWORD *)(a2 + 144);
  if ((v5 & 8) != 0)
  {
    uint64_t v7 = *(void *)(a2 + 80);
    int v6 = 8;
    *(_DWORD *)(a1 + 144) = 8;
    *(void *)(a1 + 80) = v7;
    int v5 = *(_DWORD *)(a2 + 144);
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v6 = 0;
  if ((v5 & 0x20) != 0)
  {
LABEL_5:
    int v8 = *(_DWORD *)(a2 + 92);
    v6 |= 0x20u;
    *(_DWORD *)(a1 + 144) = v6;
    *(_DWORD *)(a1 + 92) = v8;
    int v5 = *(_DWORD *)(a2 + 144);
  }
LABEL_6:
  if ((v5 & 0x40) != 0)
  {
    int v11 = *(_DWORD *)(a2 + 96);
    v6 |= 0x40u;
    *(_DWORD *)(a1 + 144) = v6;
    *(_DWORD *)(a1 + 96) = v11;
    int v5 = *(_DWORD *)(a2 + 144);
    if ((v5 & 0x80) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_28;
    }
  }
  else if ((v5 & 0x80) == 0)
  {
    goto LABEL_8;
  }
  int v12 = *(_DWORD *)(a2 + 100);
  v6 |= 0x80u;
  *(_DWORD *)(a1 + 144) = v6;
  *(_DWORD *)(a1 + 100) = v12;
  int v5 = *(_DWORD *)(a2 + 144);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x400) == 0) {
      goto LABEL_10;
    }
    goto LABEL_29;
  }
LABEL_28:
  int v13 = *(_DWORD *)(a2 + 88);
  v6 |= 0x10u;
  *(_DWORD *)(a1 + 144) = v6;
  *(_DWORD *)(a1 + 88) = v13;
  int v5 = *(_DWORD *)(a2 + 144);
  if ((v5 & 0x400) == 0)
  {
LABEL_10:
    if ((v5 & 0x800) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_29:
  int v14 = *(_DWORD *)(a2 + 112);
  v6 |= 0x400u;
  *(_DWORD *)(a1 + 144) = v6;
  *(_DWORD *)(a1 + 112) = v14;
  int v5 = *(_DWORD *)(a2 + 144);
  if ((v5 & 0x800) == 0)
  {
LABEL_11:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_30:
  int v15 = *(_DWORD *)(a2 + 116);
  v6 |= 0x800u;
  *(_DWORD *)(a1 + 144) = v6;
  *(_DWORD *)(a1 + 116) = v15;
  int v5 = *(_DWORD *)(a2 + 144);
  if ((v5 & 0x1000) == 0)
  {
LABEL_12:
    if ((v5 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_32;
  }
LABEL_31:
  int v16 = *(_DWORD *)(a2 + 120);
  v6 |= 0x1000u;
  *(_DWORD *)(a1 + 144) = v6;
  *(_DWORD *)(a1 + 120) = v16;
  int v5 = *(_DWORD *)(a2 + 144);
  if ((v5 & 0x200) == 0)
  {
LABEL_13:
    if ((v5 & 0x100) == 0) {
      goto LABEL_14;
    }
    goto LABEL_33;
  }
LABEL_32:
  int v17 = *(_DWORD *)(a2 + 108);
  v6 |= 0x200u;
  *(_DWORD *)(a1 + 144) = v6;
  *(_DWORD *)(a1 + 108) = v17;
  int v5 = *(_DWORD *)(a2 + 144);
  if ((v5 & 0x100) == 0)
  {
LABEL_14:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_34;
  }
LABEL_33:
  int v18 = *(_DWORD *)(a2 + 104);
  v6 |= 0x100u;
  *(_DWORD *)(a1 + 144) = v6;
  *(_DWORD *)(a1 + 104) = v18;
  int v5 = *(_DWORD *)(a2 + 144);
  if ((v5 & 0x4000) == 0)
  {
LABEL_15:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }
LABEL_34:
  int v19 = *(_DWORD *)(a2 + 128);
  v6 |= 0x4000u;
  *(_DWORD *)(a1 + 144) = v6;
  *(_DWORD *)(a1 + 128) = v19;
  int v5 = *(_DWORD *)(a2 + 144);
  if ((v5 & 0x8000) == 0)
  {
LABEL_16:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_36;
  }
LABEL_35:
  int v20 = *(_DWORD *)(a2 + 132);
  v6 |= 0x8000u;
  *(_DWORD *)(a1 + 144) = v6;
  *(_DWORD *)(a1 + 132) = v20;
  int v5 = *(_DWORD *)(a2 + 144);
  if ((v5 & 0x10000) == 0)
  {
LABEL_17:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_37;
  }
LABEL_36:
  int v21 = *(_DWORD *)(a2 + 136);
  v6 |= 0x10000u;
  *(_DWORD *)(a1 + 144) = v6;
  *(_DWORD *)(a1 + 136) = v21;
  int v5 = *(_DWORD *)(a2 + 144);
  if ((v5 & 0x2000) == 0)
  {
LABEL_18:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_38;
  }
LABEL_37:
  int v22 = *(_DWORD *)(a2 + 124);
  v6 |= 0x2000u;
  *(_DWORD *)(a1 + 144) = v6;
  *(_DWORD *)(a1 + 124) = v22;
  int v5 = *(_DWORD *)(a2 + 144);
  if ((v5 & 0x20000) == 0)
  {
LABEL_19:
    if ((v5 & 4) == 0) {
      goto LABEL_20;
    }
    goto LABEL_39;
  }
LABEL_38:
  v6 |= 0x20000u;
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  *(_DWORD *)(a1 + 144) = v6;
  int v5 = *(_DWORD *)(a2 + 144);
  if ((v5 & 4) == 0)
  {
LABEL_20:
    if ((v5 & 1) == 0) {
      goto LABEL_21;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t v23 = *(void *)(a2 + 72);
  v6 |= 4u;
  *(_DWORD *)(a1 + 144) = v6;
  *(void *)(a1 + 72) = v23;
  int v5 = *(_DWORD *)(a2 + 144);
  if ((v5 & 1) == 0)
  {
LABEL_21:
    if ((v5 & 2) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
LABEL_40:
  uint64_t v24 = *(void *)(a2 + 56);
  v6 |= 1u;
  *(_DWORD *)(a1 + 144) = v6;
  *(void *)(a1 + 56) = v24;
  if ((*(_DWORD *)(a2 + 144) & 2) != 0)
  {
LABEL_22:
    uint64_t v9 = *(void *)(a2 + 64);
    *(_DWORD *)(a1 + 144) = v6 | 2;
    *(void *)(a1 + 64) = v9;
  }
LABEL_23:
  if (a1 != a2)
  {
    sub_227B8BA68((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
    sub_227B8BA68(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  return a1;
}

uint64_t sub_227B5B4EC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 144);
  if ((v5 & 0x10) != 0)
  {
    PB::TextFormatter::format(this, "combinedUnc", *(float *)(a1 + 88));
    int v5 = *(_DWORD *)(a1 + 144);
    if ((v5 & 0x20) == 0)
    {
LABEL_3:
      if ((v5 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_31;
    }
  }
  else if ((v5 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "combinedX", *(float *)(a1 + 92));
  int v5 = *(_DWORD *)(a1 + 144);
  if ((v5 & 0x40) == 0)
  {
LABEL_4:
    if ((v5 & 0x80) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_31:
  PB::TextFormatter::format(this, "combinedY", *(float *)(a1 + 96));
  if ((*(_DWORD *)(a1 + 144) & 0x80) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "combinedZ", *(float *)(a1 + 100));
LABEL_6:
  int v6 = *(float **)(a1 + 8);
  uint64_t v7 = *(float **)(a1 + 16);
  while (v6 != v7)
  {
    float v8 = *v6++;
    PB::TextFormatter::format(this, "inerAccelApproachMx", v8);
  }
  int v9 = *(_DWORD *)(a1 + 144);
  if ((v9 & 0x100) != 0)
  {
    PB::TextFormatter::format(this, "inerAccelCount");
    int v9 = *(_DWORD *)(a1 + 144);
    if ((v9 & 0x200) == 0)
    {
LABEL_10:
      if ((v9 & 0x400) == 0) {
        goto LABEL_11;
      }
      goto LABEL_35;
    }
  }
  else if ((v9 & 0x200) == 0)
  {
    goto LABEL_10;
  }
  PB::TextFormatter::format(this, "inertialApproachUnc", *(float *)(a1 + 108));
  int v9 = *(_DWORD *)(a1 + 144);
  if ((v9 & 0x400) == 0)
  {
LABEL_11:
    if ((v9 & 0x800) == 0) {
      goto LABEL_12;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "inertialApproachX", *(float *)(a1 + 112));
  int v9 = *(_DWORD *)(a1 + 144);
  if ((v9 & 0x800) == 0)
  {
LABEL_12:
    if ((v9 & 0x1000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "inertialApproachY", *(float *)(a1 + 116));
  int v9 = *(_DWORD *)(a1 + 144);
  if ((v9 & 0x1000) == 0)
  {
LABEL_13:
    if ((v9 & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "inertialApproachZ", *(float *)(a1 + 120));
  int v9 = *(_DWORD *)(a1 + 144);
  if ((v9 & 1) == 0)
  {
LABEL_14:
    if ((v9 & 2) == 0) {
      goto LABEL_15;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "previousTimeAccel");
  int v9 = *(_DWORD *)(a1 + 144);
  if ((v9 & 2) == 0)
  {
LABEL_15:
    if ((v9 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_39:
  PB::TextFormatter::format(this, "previousTimeSag");
  if ((*(_DWORD *)(a1 + 144) & 4) != 0) {
LABEL_16:
  }
    PB::TextFormatter::format(this, "previousTimestamp");
LABEL_17:
  char v10 = *(float **)(a1 + 32);
  int v11 = *(float **)(a1 + 40);
  while (v10 != v11)
  {
    float v12 = *v10++;
    PB::TextFormatter::format(this, "sagittalApproachMx", v12);
  }
  int v13 = *(_DWORD *)(a1 + 144);
  if ((v13 & 0x2000) != 0)
  {
    PB::TextFormatter::format(this, "sagittalApproachUnc", *(float *)(a1 + 124));
    int v13 = *(_DWORD *)(a1 + 144);
    if ((v13 & 0x4000) == 0)
    {
LABEL_21:
      if ((v13 & 0x8000) == 0) {
        goto LABEL_22;
      }
      goto LABEL_43;
    }
  }
  else if ((v13 & 0x4000) == 0)
  {
    goto LABEL_21;
  }
  PB::TextFormatter::format(this, "sagittalApproachX", *(float *)(a1 + 128));
  int v13 = *(_DWORD *)(a1 + 144);
  if ((v13 & 0x8000) == 0)
  {
LABEL_22:
    if ((v13 & 0x10000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "sagittalApproachY", *(float *)(a1 + 132));
  int v13 = *(_DWORD *)(a1 + 144);
  if ((v13 & 0x10000) == 0)
  {
LABEL_23:
    if ((v13 & 0x20000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "sagittalApproachZ", *(float *)(a1 + 136));
  int v13 = *(_DWORD *)(a1 + 144);
  if ((v13 & 0x20000) == 0)
  {
LABEL_24:
    if ((v13 & 8) == 0) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }
LABEL_45:
  PB::TextFormatter::format(this, "sagittalCount");
  if ((*(_DWORD *)(a1 + 144) & 8) != 0) {
LABEL_25:
  }
    PB::TextFormatter::format(this, "timestamp");
LABEL_26:

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227B5B7D8(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    float v8 = (void **)(a1 + 8);
    uint64_t v9 = a1 + 24;
    char v10 = (void **)(a1 + 32);
    uint64_t v11 = a1 + 48;
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        BOOL v18 = v14++ > 8;
        if (v18) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v24 = v15 & 7;
      if (v24 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v15 >> 3))
      {
        case 1u:
          *(_DWORD *)(a1 + 144) |= 8u;
          unint64_t v25 = *((void *)this + 1);
          unint64_t v26 = *((void *)this + 2);
          uint64_t v27 = *(void *)this;
          if (v25 <= 0xFFFFFFFFFFFFFFF5 && v25 + 10 <= v26)
          {
            char v28 = 0;
            unsigned int v29 = 0;
            uint64_t v30 = 0;
            do
            {
              unint64_t v31 = v25 + 1;
              *((void *)this + 1) = v25 + 1;
              char v32 = *(unsigned char *)(v27 + v25);
              v30 |= (unint64_t)(v32 & 0x7F) << v28;
              if ((v32 & 0x80) == 0) {
                goto LABEL_223;
              }
              v28 += 7;
              unint64_t v25 = v31;
              BOOL v18 = v29++ > 8;
            }
            while (!v18);
LABEL_157:
            uint64_t v30 = 0;
            goto LABEL_223;
          }
          char v113 = 0;
          unsigned int v114 = 0;
          uint64_t v30 = 0;
          if (v26 <= v25) {
            unint64_t v26 = *((void *)this + 1);
          }
          while (2)
          {
            if (v26 == v25)
            {
              uint64_t v30 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v115 = v25 + 1;
              char v116 = *(unsigned char *)(v27 + v25);
              *((void *)this + 1) = v115;
              v30 |= (unint64_t)(v116 & 0x7F) << v113;
              if (v116 < 0)
              {
                v113 += 7;
                unint64_t v25 = v115;
                BOOL v18 = v114++ > 8;
                if (v18) {
                  goto LABEL_157;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v30 = 0;
              }
            }
            break;
          }
LABEL_223:
          *(void *)(a1 + 80) = v30;
          goto LABEL_258;
        case 2u:
          *(_DWORD *)(a1 + 144) |= 0x20u;
          unint64_t v33 = *((void *)this + 1);
          if (v33 > 0xFFFFFFFFFFFFFFFBLL || v33 + 4 > *((void *)this + 2)) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v33);
          goto LABEL_257;
        case 3u:
          *(_DWORD *)(a1 + 144) |= 0x40u;
          unint64_t v34 = *((void *)this + 1);
          if (v34 > 0xFFFFFFFFFFFFFFFBLL || v34 + 4 > *((void *)this + 2)) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v34);
          goto LABEL_257;
        case 4u:
          *(_DWORD *)(a1 + 144) |= 0x80u;
          unint64_t v35 = *((void *)this + 1);
          if (v35 > 0xFFFFFFFFFFFFFFFBLL || v35 + 4 > *((void *)this + 2)) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v35);
          goto LABEL_257;
        case 5u:
          *(_DWORD *)(a1 + 144) |= 0x10u;
          unint64_t v36 = *((void *)this + 1);
          if (v36 > 0xFFFFFFFFFFFFFFFBLL || v36 + 4 > *((void *)this + 2)) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v36);
          goto LABEL_257;
        case 6u:
          *(_DWORD *)(a1 + 144) |= 0x400u;
          unint64_t v37 = *((void *)this + 1);
          if (v37 > 0xFFFFFFFFFFFFFFFBLL || v37 + 4 > *((void *)this + 2)) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 112) = *(_DWORD *)(*(void *)this + v37);
          goto LABEL_257;
        case 7u:
          *(_DWORD *)(a1 + 144) |= 0x800u;
          unint64_t v38 = *((void *)this + 1);
          if (v38 > 0xFFFFFFFFFFFFFFFBLL || v38 + 4 > *((void *)this + 2)) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 116) = *(_DWORD *)(*(void *)this + v38);
          goto LABEL_257;
        case 8u:
          *(_DWORD *)(a1 + 144) |= 0x1000u;
          unint64_t v39 = *((void *)this + 1);
          if (v39 > 0xFFFFFFFFFFFFFFFBLL || v39 + 4 > *((void *)this + 2)) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 120) = *(_DWORD *)(*(void *)this + v39);
          goto LABEL_257;
        case 9u:
          *(_DWORD *)(a1 + 144) |= 0x200u;
          unint64_t v40 = *((void *)this + 1);
          if (v40 > 0xFFFFFFFFFFFFFFFBLL || v40 + 4 > *((void *)this + 2)) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 108) = *(_DWORD *)(*(void *)this + v40);
          goto LABEL_257;
        case 0xAu:
          *(_DWORD *)(a1 + 144) |= 0x100u;
          unint64_t v41 = *((void *)this + 1);
          unint64_t v42 = *((void *)this + 2);
          uint64_t v43 = *(void *)this;
          if (v41 <= 0xFFFFFFFFFFFFFFF5 && v41 + 10 <= v42)
          {
            char v44 = 0;
            unsigned int v45 = 0;
            uint64_t v46 = 0;
            do
            {
              unint64_t v47 = v41 + 1;
              *((void *)this + 1) = v41 + 1;
              char v48 = *(unsigned char *)(v43 + v41);
              v46 |= (unint64_t)(v48 & 0x7F) << v44;
              if ((v48 & 0x80) == 0) {
                goto LABEL_226;
              }
              v44 += 7;
              unint64_t v41 = v47;
              BOOL v18 = v45++ > 8;
            }
            while (!v18);
LABEL_164:
            LODWORD(v46) = 0;
            goto LABEL_226;
          }
          char v117 = 0;
          unsigned int v118 = 0;
          uint64_t v46 = 0;
          if (v42 <= v41) {
            unint64_t v42 = *((void *)this + 1);
          }
          while (2)
          {
            if (v42 == v41)
            {
              LODWORD(v46) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v119 = v41 + 1;
              char v120 = *(unsigned char *)(v43 + v41);
              *((void *)this + 1) = v119;
              v46 |= (unint64_t)(v120 & 0x7F) << v117;
              if (v120 < 0)
              {
                v117 += 7;
                unint64_t v41 = v119;
                BOOL v18 = v118++ > 8;
                if (v18) {
                  goto LABEL_164;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v46) = 0;
              }
            }
            break;
          }
LABEL_226:
          *(_DWORD *)(a1 + 104) = v46;
          goto LABEL_258;
        case 0xBu:
          *(_DWORD *)(a1 + 144) |= 0x4000u;
          unint64_t v49 = *((void *)this + 1);
          if (v49 > 0xFFFFFFFFFFFFFFFBLL || v49 + 4 > *((void *)this + 2)) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v49);
          goto LABEL_257;
        case 0xCu:
          *(_DWORD *)(a1 + 144) |= 0x8000u;
          unint64_t v50 = *((void *)this + 1);
          if (v50 > 0xFFFFFFFFFFFFFFFBLL || v50 + 4 > *((void *)this + 2)) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 132) = *(_DWORD *)(*(void *)this + v50);
          goto LABEL_257;
        case 0xDu:
          *(_DWORD *)(a1 + 144) |= 0x10000u;
          unint64_t v51 = *((void *)this + 1);
          if (v51 > 0xFFFFFFFFFFFFFFFBLL || v51 + 4 > *((void *)this + 2)) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 136) = *(_DWORD *)(*(void *)this + v51);
          goto LABEL_257;
        case 0xEu:
          *(_DWORD *)(a1 + 144) |= 0x2000u;
          unint64_t v52 = *((void *)this + 1);
          if (v52 > 0xFFFFFFFFFFFFFFFBLL || v52 + 4 > *((void *)this + 2)) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 124) = *(_DWORD *)(*(void *)this + v52);
          goto LABEL_257;
        case 0xFu:
          *(_DWORD *)(a1 + 144) |= 0x20000u;
          unint64_t v53 = *((void *)this + 1);
          unint64_t v54 = *((void *)this + 2);
          uint64_t v55 = *(void *)this;
          if (v53 <= 0xFFFFFFFFFFFFFFF5 && v53 + 10 <= v54)
          {
            char v56 = 0;
            unsigned int v57 = 0;
            uint64_t v58 = 0;
            do
            {
              unint64_t v59 = v53 + 1;
              *((void *)this + 1) = v53 + 1;
              char v60 = *(unsigned char *)(v55 + v53);
              v58 |= (unint64_t)(v60 & 0x7F) << v56;
              if ((v60 & 0x80) == 0) {
                goto LABEL_229;
              }
              v56 += 7;
              unint64_t v53 = v59;
              BOOL v18 = v57++ > 8;
            }
            while (!v18);
LABEL_171:
            LODWORD(v58) = 0;
            goto LABEL_229;
          }
          char v121 = 0;
          unsigned int v122 = 0;
          uint64_t v58 = 0;
          if (v54 <= v53) {
            unint64_t v54 = *((void *)this + 1);
          }
          while (2)
          {
            if (v54 == v53)
            {
              LODWORD(v58) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v123 = v53 + 1;
              char v124 = *(unsigned char *)(v55 + v53);
              *((void *)this + 1) = v123;
              v58 |= (unint64_t)(v124 & 0x7F) << v121;
              if (v124 < 0)
              {
                v121 += 7;
                unint64_t v53 = v123;
                BOOL v18 = v122++ > 8;
                if (v18) {
                  goto LABEL_171;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v58) = 0;
              }
            }
            break;
          }
LABEL_229:
          *(_DWORD *)(a1 + 140) = v58;
          goto LABEL_258;
        case 0x10u:
          *(_DWORD *)(a1 + 144) |= 4u;
          unint64_t v61 = *((void *)this + 1);
          unint64_t v62 = *((void *)this + 2);
          uint64_t v63 = *(void *)this;
          if (v61 <= 0xFFFFFFFFFFFFFFF5 && v61 + 10 <= v62)
          {
            char v64 = 0;
            unsigned int v65 = 0;
            uint64_t v66 = 0;
            do
            {
              unint64_t v67 = v61 + 1;
              *((void *)this + 1) = v61 + 1;
              char v68 = *(unsigned char *)(v63 + v61);
              v66 |= (unint64_t)(v68 & 0x7F) << v64;
              if ((v68 & 0x80) == 0) {
                goto LABEL_232;
              }
              v64 += 7;
              unint64_t v61 = v67;
              BOOL v18 = v65++ > 8;
            }
            while (!v18);
LABEL_178:
            uint64_t v66 = 0;
            goto LABEL_232;
          }
          char v125 = 0;
          unsigned int v126 = 0;
          uint64_t v66 = 0;
          if (v62 <= v61) {
            unint64_t v62 = *((void *)this + 1);
          }
          while (2)
          {
            if (v62 == v61)
            {
              uint64_t v66 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v127 = v61 + 1;
              char v128 = *(unsigned char *)(v63 + v61);
              *((void *)this + 1) = v127;
              v66 |= (unint64_t)(v128 & 0x7F) << v125;
              if (v128 < 0)
              {
                v125 += 7;
                unint64_t v61 = v127;
                BOOL v18 = v126++ > 8;
                if (v18) {
                  goto LABEL_178;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v66 = 0;
              }
            }
            break;
          }
LABEL_232:
          *(void *)(a1 + 72) = v66;
          goto LABEL_258;
        case 0x11u:
          *(_DWORD *)(a1 + 144) |= 1u;
          unint64_t v69 = *((void *)this + 1);
          unint64_t v70 = *((void *)this + 2);
          uint64_t v71 = *(void *)this;
          if (v69 <= 0xFFFFFFFFFFFFFFF5 && v69 + 10 <= v70)
          {
            char v72 = 0;
            unsigned int v73 = 0;
            uint64_t v74 = 0;
            do
            {
              unint64_t v75 = v69 + 1;
              *((void *)this + 1) = v69 + 1;
              char v76 = *(unsigned char *)(v71 + v69);
              v74 |= (unint64_t)(v76 & 0x7F) << v72;
              if ((v76 & 0x80) == 0) {
                goto LABEL_235;
              }
              v72 += 7;
              unint64_t v69 = v75;
              BOOL v18 = v73++ > 8;
            }
            while (!v18);
LABEL_185:
            uint64_t v74 = 0;
            goto LABEL_235;
          }
          char v129 = 0;
          unsigned int v130 = 0;
          uint64_t v74 = 0;
          if (v70 <= v69) {
            unint64_t v70 = *((void *)this + 1);
          }
          while (2)
          {
            if (v70 == v69)
            {
              uint64_t v74 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v131 = v69 + 1;
              char v132 = *(unsigned char *)(v71 + v69);
              *((void *)this + 1) = v131;
              v74 |= (unint64_t)(v132 & 0x7F) << v129;
              if (v132 < 0)
              {
                v129 += 7;
                unint64_t v69 = v131;
                BOOL v18 = v130++ > 8;
                if (v18) {
                  goto LABEL_185;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v74 = 0;
              }
            }
            break;
          }
LABEL_235:
          *(void *)(a1 + 56) = v74;
          goto LABEL_258;
        case 0x12u:
          *(_DWORD *)(a1 + 144) |= 2u;
          unint64_t v77 = *((void *)this + 1);
          unint64_t v78 = *((void *)this + 2);
          uint64_t v79 = *(void *)this;
          if (v77 <= 0xFFFFFFFFFFFFFFF5 && v77 + 10 <= v78)
          {
            char v80 = 0;
            unsigned int v81 = 0;
            uint64_t v82 = 0;
            do
            {
              unint64_t v83 = v77 + 1;
              *((void *)this + 1) = v77 + 1;
              char v84 = *(unsigned char *)(v79 + v77);
              v82 |= (unint64_t)(v84 & 0x7F) << v80;
              if ((v84 & 0x80) == 0) {
                goto LABEL_238;
              }
              v80 += 7;
              unint64_t v77 = v83;
              BOOL v18 = v81++ > 8;
            }
            while (!v18);
LABEL_192:
            uint64_t v82 = 0;
            goto LABEL_238;
          }
          char v133 = 0;
          unsigned int v134 = 0;
          uint64_t v82 = 0;
          if (v78 <= v77) {
            unint64_t v78 = *((void *)this + 1);
          }
          while (2)
          {
            if (v78 == v77)
            {
              uint64_t v82 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v135 = v77 + 1;
              char v136 = *(unsigned char *)(v79 + v77);
              *((void *)this + 1) = v135;
              v82 |= (unint64_t)(v136 & 0x7F) << v133;
              if (v136 < 0)
              {
                v133 += 7;
                unint64_t v77 = v135;
                BOOL v18 = v134++ > 8;
                if (v18) {
                  goto LABEL_192;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v82 = 0;
              }
            }
            break;
          }
LABEL_238:
          *(void *)(a1 + 64) = v82;
          goto LABEL_258;
        case 0x13u:
          if (v24 != 2)
          {
            unint64_t v138 = *(char **)(a1 + 40);
            unint64_t v137 = *(void *)(a1 + 48);
            if ((unint64_t)v138 >= v137)
            {
              unsigned int v142 = (char *)*v10;
              uint64_t v143 = (v138 - (unsigned char *)*v10) >> 2;
              unint64_t v144 = v143 + 1;
              if ((unint64_t)(v143 + 1) >> 62) {
LABEL_268:
              }
                sub_227B8B89C();
              uint64_t v145 = v137 - (void)v142;
              if (v145 >> 1 > v144) {
                unint64_t v144 = v145 >> 1;
              }
              if ((unint64_t)v145 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v146 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v146 = v144;
              }
              if (v146)
              {
                unint64_t v147 = (char *)sub_227B8BBB8(v11, v146);
                unsigned int v142 = *(char **)(a1 + 32);
                unint64_t v138 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v147 = 0;
              }
              unint64_t v154 = &v147[4 * v143];
              *(_DWORD *)unint64_t v154 = 0;
              unint64_t v139 = v154 + 4;
              while (v138 != v142)
              {
                int v155 = *((_DWORD *)v138 - 1);
                v138 -= 4;
                *((_DWORD *)v154 - 1) = v155;
                v154 -= 4;
              }
              *(void *)(a1 + 32) = v154;
              *(void *)(a1 + 40) = v139;
              *(void *)(a1 + 48) = &v147[4 * v146];
              if (v142) {
                operator delete(v142);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v138 = 0;
              unint64_t v139 = v138 + 4;
            }
            *(void *)(a1 + 40) = v139;
            goto LABEL_253;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v85 = *((void *)this + 1);
          unint64_t v86 = *((void *)this + 2);
          while (v85 < v86 && !*((unsigned char *)this + 24))
          {
            unint64_t v88 = *(char **)(a1 + 40);
            unint64_t v87 = *(void *)(a1 + 48);
            if ((unint64_t)v88 >= v87)
            {
              int v90 = (char *)*v10;
              uint64_t v91 = (v88 - (unsigned char *)*v10) >> 2;
              unint64_t v92 = v91 + 1;
              if ((unint64_t)(v91 + 1) >> 62) {
                goto LABEL_268;
              }
              uint64_t v93 = v87 - (void)v90;
              if (v93 >> 1 > v92) {
                unint64_t v92 = v93 >> 1;
              }
              if ((unint64_t)v93 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v94 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v94 = v92;
              }
              if (v94)
              {
                BOOL v95 = (char *)sub_227B8BBB8(v11, v94);
                int v90 = *(char **)(a1 + 32);
                unint64_t v88 = *(char **)(a1 + 40);
              }
              else
              {
                BOOL v95 = 0;
              }
              unint64_t v96 = &v95[4 * v91];
              *(_DWORD *)unint64_t v96 = 0;
              unint64_t v89 = v96 + 4;
              while (v88 != v90)
              {
                int v97 = *((_DWORD *)v88 - 1);
                v88 -= 4;
                *((_DWORD *)v96 - 1) = v97;
                v96 -= 4;
              }
              *(void *)(a1 + 32) = v96;
              *(void *)(a1 + 40) = v89;
              *(void *)(a1 + 48) = &v95[4 * v94];
              if (v90) {
                operator delete(v90);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v88 = 0;
              unint64_t v89 = v88 + 4;
            }
            *(void *)(a1 + 40) = v89;
            unint64_t v98 = *((void *)this + 1);
            if (v98 > 0xFFFFFFFFFFFFFFFBLL || v98 + 4 > *((void *)this + 2)) {
              goto LABEL_197;
            }
            *(v89 - 1) = *(_DWORD *)(*(void *)this + v98);
            unint64_t v86 = *((void *)this + 2);
            unint64_t v85 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v85;
          }
          goto LABEL_198;
        case 0x14u:
          if (v24 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v99 = *((void *)this + 1);
            unint64_t v100 = *((void *)this + 2);
            while (v99 < v100 && !*((unsigned char *)this + 24))
            {
              unint64_t v102 = *(char **)(a1 + 16);
              unint64_t v101 = *(void *)(a1 + 24);
              if ((unint64_t)v102 >= v101)
              {
                unint64_t v104 = (char *)*v8;
                uint64_t v105 = (v102 - (unsigned char *)*v8) >> 2;
                unint64_t v106 = v105 + 1;
                if ((unint64_t)(v105 + 1) >> 62) {
                  goto LABEL_269;
                }
                uint64_t v107 = v101 - (void)v104;
                if (v107 >> 1 > v106) {
                  unint64_t v106 = v107 >> 1;
                }
                if ((unint64_t)v107 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v108 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v108 = v106;
                }
                if (v108)
                {
                  unint64_t v109 = (char *)sub_227B8BBB8(v9, v108);
                  unint64_t v104 = *(char **)(a1 + 8);
                  unint64_t v102 = *(char **)(a1 + 16);
                }
                else
                {
                  unint64_t v109 = 0;
                }
                unint64_t v110 = &v109[4 * v105];
                *(_DWORD *)unint64_t v110 = 0;
                unint64_t v103 = v110 + 4;
                while (v102 != v104)
                {
                  int v111 = *((_DWORD *)v102 - 1);
                  v102 -= 4;
                  *((_DWORD *)v110 - 1) = v111;
                  v110 -= 4;
                }
                *(void *)(a1 + 8) = v110;
                *(void *)(a1 + 16) = v103;
                *(void *)(a1 + 24) = &v109[4 * v108];
                if (v104) {
                  operator delete(v104);
                }
              }
              else
              {
                *(_DWORD *)unint64_t v102 = 0;
                unint64_t v103 = v102 + 4;
              }
              *(void *)(a1 + 16) = v103;
              unint64_t v112 = *((void *)this + 1);
              if (v112 > 0xFFFFFFFFFFFFFFFBLL || v112 + 4 > *((void *)this + 2))
              {
LABEL_197:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v103 - 1) = *(_DWORD *)(*(void *)this + v112);
              unint64_t v100 = *((void *)this + 2);
              unint64_t v99 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v99;
            }
LABEL_198:
            PB::Reader::recallMark();
          }
          else
          {
            char v141 = *(char **)(a1 + 16);
            unint64_t v140 = *(void *)(a1 + 24);
            if ((unint64_t)v141 >= v140)
            {
              int v148 = (char *)*v8;
              uint64_t v149 = (v141 - (unsigned char *)*v8) >> 2;
              unint64_t v150 = v149 + 1;
              if ((unint64_t)(v149 + 1) >> 62) {
LABEL_269:
              }
                sub_227B8B89C();
              uint64_t v151 = v140 - (void)v148;
              if (v151 >> 1 > v150) {
                unint64_t v150 = v151 >> 1;
              }
              if ((unint64_t)v151 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v152 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v152 = v150;
              }
              if (v152)
              {
                unint64_t v153 = (char *)sub_227B8BBB8(v9, v152);
                int v148 = *(char **)(a1 + 8);
                char v141 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v153 = 0;
              }
              char v156 = &v153[4 * v149];
              *(_DWORD *)char v156 = 0;
              unint64_t v139 = v156 + 4;
              while (v141 != v148)
              {
                int v157 = *((_DWORD *)v141 - 1);
                v141 -= 4;
                *((_DWORD *)v156 - 1) = v157;
                v156 -= 4;
              }
              *(void *)(a1 + 8) = v156;
              *(void *)(a1 + 16) = v139;
              *(void *)(a1 + 24) = &v153[4 * v152];
              if (v148) {
                operator delete(v148);
              }
            }
            else
            {
              *(_DWORD *)char v141 = 0;
              unint64_t v139 = v141 + 4;
            }
            *(void *)(a1 + 16) = v139;
LABEL_253:
            unint64_t v158 = *((void *)this + 1);
            if (v158 <= 0xFFFFFFFFFFFFFFFBLL && v158 + 4 <= *((void *)this + 2))
            {
              *(v139 - 1) = *(_DWORD *)(*(void *)this + v158);
LABEL_257:
              *((void *)this + 1) += 4;
            }
            else
            {
LABEL_255:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_258:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        default:
          if ((PB::Reader::skip(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_258;
      }
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v15 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v21 = v2 + 1;
      char v22 = *(unsigned char *)(v12 + v2);
      *((void *)this + 1) = v21;
      v15 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0) {
        goto LABEL_21;
      }
      v19 += 7;
      unint64_t v2 = v21;
      if (v20++ >= 9)
      {
LABEL_20:
        unint64_t v15 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B5C570(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 144);
  if ((v4 & 8) != 0)
  {
    double result = PB::Writer::writeVarInt(this);
    int v4 = *(_DWORD *)(v3 + 144);
    if ((v4 & 0x20) == 0)
    {
LABEL_3:
      if ((v4 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_29;
    }
  }
  else if ((v4 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  double result = PB::Writer::write(this, *(float *)(v3 + 92));
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x40) == 0)
  {
LABEL_4:
    if ((v4 & 0x80) == 0) {
      goto LABEL_5;
    }
    goto LABEL_30;
  }
LABEL_29:
  double result = PB::Writer::write(this, *(float *)(v3 + 96));
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x80) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_31;
  }
LABEL_30:
  double result = PB::Writer::write(this, *(float *)(v3 + 100));
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 0x400) == 0) {
      goto LABEL_7;
    }
    goto LABEL_32;
  }
LABEL_31:
  double result = PB::Writer::write(this, *(float *)(v3 + 88));
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x400) == 0)
  {
LABEL_7:
    if ((v4 & 0x800) == 0) {
      goto LABEL_8;
    }
    goto LABEL_33;
  }
LABEL_32:
  double result = PB::Writer::write(this, *(float *)(v3 + 112));
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x800) == 0)
  {
LABEL_8:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_34;
  }
LABEL_33:
  double result = PB::Writer::write(this, *(float *)(v3 + 116));
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x1000) == 0)
  {
LABEL_9:
    if ((v4 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_35;
  }
LABEL_34:
  double result = PB::Writer::write(this, *(float *)(v3 + 120));
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x200) == 0)
  {
LABEL_10:
    if ((v4 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_36;
  }
LABEL_35:
  double result = PB::Writer::write(this, *(float *)(v3 + 108));
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x100) == 0)
  {
LABEL_11:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_37;
  }
LABEL_36:
  double result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x4000) == 0)
  {
LABEL_12:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_38;
  }
LABEL_37:
  double result = PB::Writer::write(this, *(float *)(v3 + 128));
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x8000) == 0)
  {
LABEL_13:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_39;
  }
LABEL_38:
  double result = PB::Writer::write(this, *(float *)(v3 + 132));
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x10000) == 0)
  {
LABEL_14:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_40;
  }
LABEL_39:
  double result = PB::Writer::write(this, *(float *)(v3 + 136));
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x2000) == 0)
  {
LABEL_15:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_41;
  }
LABEL_40:
  double result = PB::Writer::write(this, *(float *)(v3 + 124));
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x20000) == 0)
  {
LABEL_16:
    if ((v4 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_42;
  }
LABEL_41:
  double result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 4) == 0)
  {
LABEL_17:
    if ((v4 & 1) == 0) {
      goto LABEL_18;
    }
LABEL_43:
    double result = PB::Writer::writeVarInt(this);
    if ((*(_DWORD *)(v3 + 144) & 2) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_42:
  double result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 144);
  if (v4) {
    goto LABEL_43;
  }
LABEL_18:
  if ((v4 & 2) != 0) {
LABEL_19:
  }
    double result = PB::Writer::writeVarInt(this);
LABEL_20:
  int v5 = *(float **)(v3 + 32);
  int v6 = *(float **)(v3 + 40);
  while (v5 != v6)
  {
    float v7 = *v5++;
    double result = PB::Writer::write(this, v7);
  }
  uint64_t v9 = *(float **)(v3 + 8);
  float v8 = *(float **)(v3 + 16);
  while (v9 != v8)
  {
    float v10 = *v9++;
    double result = PB::Writer::write(this, v10);
  }
  return result;
}

uint64_t sub_227B5C7D4(uint64_t result)
{
  *(void *)double result = &unk_26DC20BD0;
  *(_DWORD *)(result + 132) = 0;
  return result;
}

void sub_227B5C7FC(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B5C834(uint64_t result, uint64_t a2)
{
  *(void *)double result = &unk_26DC20BD0;
  *(_DWORD *)(result + 132) = 0;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x4000000) != 0)
  {
    char v4 = *(unsigned char *)(a2 + 126);
    int v3 = 0x4000000;
    *(_DWORD *)(result + 132) = 0x4000000;
    *(unsigned char *)(result + 126) = v4;
    int v2 = *(_DWORD *)(a2 + 132);
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 0x8000000) != 0)
  {
LABEL_5:
    char v5 = *(unsigned char *)(a2 + 127);
    v3 |= 0x8000000u;
    *(_DWORD *)(result + 132) = v3;
    *(unsigned char *)(result + 127) = v5;
    int v2 = *(_DWORD *)(a2 + 132);
  }
LABEL_6:
  if ((v2 & 0x80000) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 104);
    v3 |= 0x80000u;
    *(_DWORD *)(result + 132) = v3;
    *(_DWORD *)(result + 104) = v6;
    int v2 = *(_DWORD *)(a2 + 132);
    if ((v2 & 0x800000) == 0)
    {
LABEL_8:
      if ((v2 & 0x100000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_36;
    }
  }
  else if ((v2 & 0x800000) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 120);
  v3 |= 0x800000u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 120) = v7;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x100000) == 0)
  {
LABEL_9:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_37;
  }
LABEL_36:
  int v8 = *(_DWORD *)(a2 + 108);
  v3 |= 0x100000u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 108) = v8;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x20000) == 0)
  {
LABEL_10:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_38;
  }
LABEL_37:
  int v9 = *(_DWORD *)(a2 + 96);
  v3 |= 0x20000u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 96) = v9;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x10000) == 0)
  {
LABEL_11:
    if ((v2 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_39;
  }
LABEL_38:
  int v10 = *(_DWORD *)(a2 + 92);
  v3 |= 0x10000u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 92) = v10;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x100) == 0)
  {
LABEL_12:
    if ((v2 & 0x80) == 0) {
      goto LABEL_13;
    }
    goto LABEL_40;
  }
LABEL_39:
  int v11 = *(_DWORD *)(a2 + 60);
  v3 |= 0x100u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 60) = v11;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x80) == 0)
  {
LABEL_13:
    if ((v2 & 0x40) == 0) {
      goto LABEL_14;
    }
    goto LABEL_41;
  }
LABEL_40:
  int v12 = *(_DWORD *)(a2 + 56);
  v3 |= 0x80u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 56) = v12;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x40) == 0)
  {
LABEL_14:
    if ((v2 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_42;
  }
LABEL_41:
  int v13 = *(_DWORD *)(a2 + 52);
  v3 |= 0x40u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 52) = v13;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x20) == 0)
  {
LABEL_15:
    if ((v2 & 0x800) == 0) {
      goto LABEL_16;
    }
    goto LABEL_43;
  }
LABEL_42:
  int v14 = *(_DWORD *)(a2 + 48);
  v3 |= 0x20u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 48) = v14;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x800) == 0)
  {
LABEL_16:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_44;
  }
LABEL_43:
  int v15 = *(_DWORD *)(a2 + 72);
  v3 |= 0x800u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 72) = v15;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x4000) == 0)
  {
LABEL_17:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_45;
  }
LABEL_44:
  int v16 = *(_DWORD *)(a2 + 84);
  v3 |= 0x4000u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 84) = v16;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x200000) == 0)
  {
LABEL_18:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_46;
  }
LABEL_45:
  int v17 = *(_DWORD *)(a2 + 112);
  v3 |= 0x200000u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 112) = v17;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x40000) == 0)
  {
LABEL_19:
    if ((v2 & 8) == 0) {
      goto LABEL_20;
    }
    goto LABEL_47;
  }
LABEL_46:
  int v18 = *(_DWORD *)(a2 + 100);
  v3 |= 0x40000u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 100) = v18;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 8) == 0)
  {
LABEL_20:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t v19 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_DWORD *)(result + 132) = v3;
  *(void *)(result + 32) = v19;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_21:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_49;
  }
LABEL_48:
  char v20 = *(unsigned char *)(a2 + 124);
  v3 |= 0x1000000u;
  *(_DWORD *)(result + 132) = v3;
  *(unsigned char *)(result + 124) = v20;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x8000) == 0)
  {
LABEL_22:
    if ((v2 & 0x10) == 0) {
      goto LABEL_23;
    }
    goto LABEL_50;
  }
LABEL_49:
  int v21 = *(_DWORD *)(a2 + 88);
  v3 |= 0x8000u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 88) = v21;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x10) == 0)
  {
LABEL_23:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t v22 = *(void *)(a2 + 40);
  v3 |= 0x10u;
  *(_DWORD *)(result + 132) = v3;
  *(void *)(result + 40) = v22;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x400000) == 0)
  {
LABEL_24:
    if ((v2 & 4) == 0) {
      goto LABEL_25;
    }
    goto LABEL_52;
  }
LABEL_51:
  int v23 = *(_DWORD *)(a2 + 116);
  v3 |= 0x400000u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 116) = v23;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 4) == 0)
  {
LABEL_25:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t v24 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(_DWORD *)(result + 132) = v3;
  *(void *)(result + 24) = v24;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x2000) == 0)
  {
LABEL_26:
    if ((v2 & 2) == 0) {
      goto LABEL_27;
    }
    goto LABEL_54;
  }
LABEL_53:
  int v25 = *(_DWORD *)(a2 + 80);
  v3 |= 0x2000u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 80) = v25;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 2) == 0)
  {
LABEL_27:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t v26 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_DWORD *)(result + 132) = v3;
  *(void *)(result + 16) = v26;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x1000) == 0)
  {
LABEL_28:
    if ((v2 & 1) == 0) {
      goto LABEL_29;
    }
    goto LABEL_56;
  }
LABEL_55:
  int v27 = *(_DWORD *)(a2 + 76);
  v3 |= 0x1000u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 76) = v27;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 1) == 0)
  {
LABEL_29:
    if ((v2 & 0x200) == 0) {
      goto LABEL_30;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t v28 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_DWORD *)(result + 132) = v3;
  *(void *)(result + 8) = v28;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x200) == 0)
  {
LABEL_30:
    if ((v2 & 0x400) == 0) {
      goto LABEL_31;
    }
    goto LABEL_58;
  }
LABEL_57:
  int v29 = *(_DWORD *)(a2 + 64);
  v3 |= 0x200u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 64) = v29;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x400) == 0)
  {
LABEL_31:
    if ((v2 & 0x10000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_59;
  }
LABEL_58:
  int v30 = *(_DWORD *)(a2 + 68);
  v3 |= 0x400u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 68) = v30;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_32:
    if ((v2 & 0x2000000) == 0) {
      return result;
    }
LABEL_60:
    char v32 = *(unsigned char *)(a2 + 125);
    *(_DWORD *)(result + 132) = v3 | 0x2000000;
    *(unsigned char *)(result + 125) = v32;
    return result;
  }
LABEL_59:
  char v31 = *(unsigned char *)(a2 + 128);
  v3 |= 0x10000000u;
  *(_DWORD *)(result + 132) = v3;
  *(unsigned char *)(result + 128) = v31;
  if ((*(_DWORD *)(a2 + 132) & 0x2000000) != 0) {
    goto LABEL_60;
  }
  return result;
}

uint64_t sub_227B5CB8C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x20) != 0)
  {
    PB::TextFormatter::format(this, "configSuddenTransitionDurationThreshold", *(float *)(a1 + 48));
    int v5 = *(_DWORD *)(a1 + 132);
    if ((v5 & 0x40) == 0)
    {
LABEL_3:
      if ((v5 & 0x80) == 0) {
        goto LABEL_4;
      }
      goto LABEL_36;
    }
  }
  else if ((v5 & 0x40) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "configTransitionEndSpeedThreshold", *(float *)(a1 + 52));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x80) == 0)
  {
LABEL_4:
    if ((v5 & 0x100) == 0) {
      goto LABEL_5;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "configTransitionStartSpeedThreshold", *(float *)(a1 + 56));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x100) == 0)
  {
LABEL_5:
    if ((v5 & 0x200) == 0) {
      goto LABEL_6;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "deltaTriggerTime");
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x200) == 0)
  {
LABEL_6:
    if ((v5 & 0x400) == 0) {
      goto LABEL_7;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "gpsSpeedMetersPerSecond", *(float *)(a1 + 64));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x400) == 0)
  {
LABEL_7:
    if ((v5 & 1) == 0) {
      goto LABEL_8;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "gpsSpeedMilesPerHour", *(float *)(a1 + 68));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 1) == 0)
  {
LABEL_8:
    if ((v5 & 0x800) == 0) {
      goto LABEL_9;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "gpsTimestamp");
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x800) == 0)
  {
LABEL_9:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "highSpeedMetersPerSecondThreshold", *(float *)(a1 + 72));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_10:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "isGPSDetected");
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_11:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "isGPSDetectedDebug");
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_12:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "isSuddenTransitionDetected");
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_13:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_46;
  }
LABEL_45:
  PB::TextFormatter::format(this, "isTransitionDetected");
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x1000) == 0)
  {
LABEL_14:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_47;
  }
LABEL_46:
  PB::TextFormatter::format(this, "lastDetectedTransitionSpeedEnd", *(float *)(a1 + 76));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x2000) == 0)
  {
LABEL_15:
    if ((v5 & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(this, "lastDetectedTransitionSpeedStart", *(float *)(a1 + 80));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 2) == 0)
  {
LABEL_16:
    if ((v5 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(this, "lastDetectedTransitionTimeEnd");
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 4) == 0)
  {
LABEL_17:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_50;
  }
LABEL_49:
  PB::TextFormatter::format(this, "lastDetectedTransitionTimeStart");
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_18:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_51;
  }
LABEL_50:
  PB::TextFormatter::format(this, "loggedAtEpoch");
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x4000) == 0)
  {
LABEL_19:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_52;
  }
LABEL_51:
  PB::TextFormatter::format(this, "lowSpeedMetersPerSecondThresold", *(float *)(a1 + 84));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x8000) == 0)
  {
LABEL_20:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_53;
  }
LABEL_52:
  PB::TextFormatter::format(this, "state");
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x10000) == 0)
  {
LABEL_21:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(this, "streamEndSpeed", *(float *)(a1 + 92));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x20000) == 0)
  {
LABEL_22:
    if ((v5 & 8) == 0) {
      goto LABEL_23;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(this, "streamStartSpeed", *(float *)(a1 + 96));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 8) == 0)
  {
LABEL_23:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_56;
  }
LABEL_55:
  PB::TextFormatter::format(this, "timestamp");
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x40000) == 0)
  {
LABEL_24:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_57;
  }
LABEL_56:
  PB::TextFormatter::format(this, "transitionBaseDuration", *(float *)(a1 + 100));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x80000) == 0)
  {
LABEL_25:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_58;
  }
LABEL_57:
  PB::TextFormatter::format(this, "transitionDuration", *(float *)(a1 + 104));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x100000) == 0)
  {
LABEL_26:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_59;
  }
LABEL_58:
  PB::TextFormatter::format(this, "transitionEndSpeed", *(float *)(a1 + 108));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x200000) == 0)
  {
LABEL_27:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_60;
  }
LABEL_59:
  PB::TextFormatter::format(this, "transitionEpsilonDuration", *(float *)(a1 + 112));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x400000) == 0)
  {
LABEL_28:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_61;
  }
LABEL_60:
  PB::TextFormatter::format(this, "transitionSpeedStart", *(float *)(a1 + 116));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x800000) == 0)
  {
LABEL_29:
    if ((v5 & 0x10) == 0) {
      goto LABEL_31;
    }
    goto LABEL_30;
  }
LABEL_61:
  PB::TextFormatter::format(this, "transitionStartSpeed", *(float *)(a1 + 120));
  if ((*(_DWORD *)(a1 + 132) & 0x10) != 0) {
LABEL_30:
  }
    PB::TextFormatter::format(this, "transitionTimeStart");
LABEL_31:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B5CF70(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((int)(v11 >> 3) > 200)
      {
        switch((int)v20)
        {
          case 201:
            *(_DWORD *)(a1 + 132) |= 8u;
            unint64_t v23 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v24 = *(void *)this;
            if (v23 > 0xFFFFFFFFFFFFFFF5 || v23 + 10 > v2)
            {
              char v74 = 0;
              unsigned int v75 = 0;
              uint64_t v27 = 0;
              if (v2 <= v23) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v23)
                {
                  uint64_t v27 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_208;
                }
                unint64_t v76 = v23++;
                char v77 = *(unsigned char *)(v24 + v76);
                *((void *)this + 1) = v23;
                v27 |= (unint64_t)(v77 & 0x7F) << v74;
                if ((v77 & 0x80) == 0) {
                  break;
                }
                v74 += 7;
                BOOL v14 = v75++ > 8;
                if (v14)
                {
                  uint64_t v27 = 0;
LABEL_207:
                  unint64_t v2 = v76 + 1;
                  goto LABEL_208;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v27 = 0;
              }
              goto LABEL_207;
            }
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v27 = 0;
            do
            {
              unint64_t v2 = v23 + 1;
              *((void *)this + 1) = v23 + 1;
              char v28 = *(unsigned char *)(v24 + v23);
              v27 |= (unint64_t)(v28 & 0x7F) << v25;
              if ((v28 & 0x80) == 0) {
                goto LABEL_208;
              }
              v25 += 7;
              unint64_t v23 = v2;
              BOOL v14 = v26++ > 8;
            }
            while (!v14);
            uint64_t v27 = 0;
LABEL_208:
            *(void *)(a1 + 32) = v27;
            break;
          case 202:
            *(_DWORD *)(a1 + 132) |= 0x1000000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v44 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v43 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v44 = v43 != 0;
            }
            *(unsigned char *)(a1 + 124) = v44;
            break;
          case 203:
            *(_DWORD *)(a1 + 132) |= 0x8000u;
            unint64_t v45 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v46 = *(void *)this;
            if (v45 > 0xFFFFFFFFFFFFFFF5 || v45 + 10 > v2)
            {
              char v86 = 0;
              unsigned int v87 = 0;
              uint64_t v49 = 0;
              if (v2 <= v45) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v45)
                {
                  LODWORD(v49) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_223;
                }
                unint64_t v88 = v45++;
                char v89 = *(unsigned char *)(v46 + v88);
                *((void *)this + 1) = v45;
                v49 |= (unint64_t)(v89 & 0x7F) << v86;
                if ((v89 & 0x80) == 0) {
                  break;
                }
                v86 += 7;
                BOOL v14 = v87++ > 8;
                if (v14)
                {
                  LODWORD(v49) = 0;
LABEL_222:
                  unint64_t v2 = v88 + 1;
                  goto LABEL_223;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v49) = 0;
              }
              goto LABEL_222;
            }
            char v47 = 0;
            unsigned int v48 = 0;
            uint64_t v49 = 0;
            do
            {
              unint64_t v2 = v45 + 1;
              *((void *)this + 1) = v45 + 1;
              char v50 = *(unsigned char *)(v46 + v45);
              v49 |= (unint64_t)(v50 & 0x7F) << v47;
              if ((v50 & 0x80) == 0) {
                goto LABEL_223;
              }
              v47 += 7;
              unint64_t v45 = v2;
              BOOL v14 = v48++ > 8;
            }
            while (!v14);
            LODWORD(v49) = 0;
LABEL_223:
            *(_DWORD *)(a1 + 88) = v49;
            break;
          case 204:
            *(_DWORD *)(a1 + 132) |= 0x10u;
            unint64_t v51 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v52 = *(void *)this;
            if (v51 > 0xFFFFFFFFFFFFFFF5 || v51 + 10 > v2)
            {
              char v90 = 0;
              unsigned int v91 = 0;
              uint64_t v55 = 0;
              if (v2 <= v51) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v51)
                {
                  uint64_t v55 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_228;
                }
                unint64_t v92 = v51++;
                char v93 = *(unsigned char *)(v52 + v92);
                *((void *)this + 1) = v51;
                v55 |= (unint64_t)(v93 & 0x7F) << v90;
                if ((v93 & 0x80) == 0) {
                  break;
                }
                v90 += 7;
                BOOL v14 = v91++ > 8;
                if (v14)
                {
                  uint64_t v55 = 0;
LABEL_227:
                  unint64_t v2 = v92 + 1;
                  goto LABEL_228;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v55 = 0;
              }
              goto LABEL_227;
            }
            char v53 = 0;
            unsigned int v54 = 0;
            uint64_t v55 = 0;
            do
            {
              unint64_t v2 = v51 + 1;
              *((void *)this + 1) = v51 + 1;
              char v56 = *(unsigned char *)(v52 + v51);
              v55 |= (unint64_t)(v56 & 0x7F) << v53;
              if ((v56 & 0x80) == 0) {
                goto LABEL_228;
              }
              v53 += 7;
              unint64_t v51 = v2;
              BOOL v14 = v54++ > 8;
            }
            while (!v14);
            uint64_t v55 = 0;
LABEL_228:
            *(void *)(a1 + 40) = v55;
            break;
          case 205:
            *(_DWORD *)(a1 + 132) |= 0x400000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
              goto LABEL_137;
            }
            *(_DWORD *)(a1 + 116) = *(_DWORD *)(*(void *)this + v2);
            goto LABEL_198;
          case 206:
            *(_DWORD *)(a1 + 132) |= 4u;
            unint64_t v57 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v58 = *(void *)this;
            if (v57 > 0xFFFFFFFFFFFFFFF5 || v57 + 10 > v2)
            {
              char v94 = 0;
              unsigned int v95 = 0;
              uint64_t v61 = 0;
              if (v2 <= v57) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v57)
                {
                  uint64_t v61 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_233;
                }
                unint64_t v96 = v57++;
                char v97 = *(unsigned char *)(v58 + v96);
                *((void *)this + 1) = v57;
                v61 |= (unint64_t)(v97 & 0x7F) << v94;
                if ((v97 & 0x80) == 0) {
                  break;
                }
                v94 += 7;
                BOOL v14 = v95++ > 8;
                if (v14)
                {
                  uint64_t v61 = 0;
LABEL_232:
                  unint64_t v2 = v96 + 1;
                  goto LABEL_233;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v61 = 0;
              }
              goto LABEL_232;
            }
            char v59 = 0;
            unsigned int v60 = 0;
            uint64_t v61 = 0;
            do
            {
              unint64_t v2 = v57 + 1;
              *((void *)this + 1) = v57 + 1;
              char v62 = *(unsigned char *)(v58 + v57);
              v61 |= (unint64_t)(v62 & 0x7F) << v59;
              if ((v62 & 0x80) == 0) {
                goto LABEL_233;
              }
              v59 += 7;
              unint64_t v57 = v2;
              BOOL v14 = v60++ > 8;
            }
            while (!v14);
            uint64_t v61 = 0;
LABEL_233:
            *(void *)(a1 + 24) = v61;
            break;
          case 207:
            *(_DWORD *)(a1 + 132) |= 0x2000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
              goto LABEL_137;
            }
            *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v2);
            goto LABEL_198;
          case 208:
            *(_DWORD *)(a1 + 132) |= 2u;
            unint64_t v63 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v64 = *(void *)this;
            if (v63 > 0xFFFFFFFFFFFFFFF5 || v63 + 10 > v2)
            {
              char v98 = 0;
              unsigned int v99 = 0;
              uint64_t v67 = 0;
              if (v2 <= v63) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v63)
                {
                  uint64_t v67 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_238;
                }
                unint64_t v100 = v63++;
                char v101 = *(unsigned char *)(v64 + v100);
                *((void *)this + 1) = v63;
                v67 |= (unint64_t)(v101 & 0x7F) << v98;
                if ((v101 & 0x80) == 0) {
                  break;
                }
                v98 += 7;
                BOOL v14 = v99++ > 8;
                if (v14)
                {
                  uint64_t v67 = 0;
LABEL_237:
                  unint64_t v2 = v100 + 1;
                  goto LABEL_238;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v67 = 0;
              }
              goto LABEL_237;
            }
            char v65 = 0;
            unsigned int v66 = 0;
            uint64_t v67 = 0;
            do
            {
              unint64_t v2 = v63 + 1;
              *((void *)this + 1) = v63 + 1;
              char v68 = *(unsigned char *)(v64 + v63);
              v67 |= (unint64_t)(v68 & 0x7F) << v65;
              if ((v68 & 0x80) == 0) {
                goto LABEL_238;
              }
              v65 += 7;
              unint64_t v63 = v2;
              BOOL v14 = v66++ > 8;
            }
            while (!v14);
            uint64_t v67 = 0;
LABEL_238:
            *(void *)(a1 + 16) = v67;
            break;
          case 209:
            *(_DWORD *)(a1 + 132) |= 0x1000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2))
            {
LABEL_137:
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v2);
LABEL_198:
              unint64_t v2 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v2;
            }
            break;
          default:
            switch((int)v20)
            {
              case 301:
                *(_DWORD *)(a1 + 132) |= 1u;
                unint64_t v29 = *((void *)this + 1);
                unint64_t v2 = *((void *)this + 2);
                uint64_t v30 = *(void *)this;
                if (v29 > 0xFFFFFFFFFFFFFFF5 || v29 + 10 > v2)
                {
                  char v78 = 0;
                  unsigned int v79 = 0;
                  uint64_t v33 = 0;
                  if (v2 <= v29) {
                    unint64_t v2 = *((void *)this + 1);
                  }
                  while (1)
                  {
                    if (v2 == v29)
                    {
                      uint64_t v33 = 0;
                      *((unsigned char *)this + 24) = 1;
                      goto LABEL_213;
                    }
                    unint64_t v80 = v29++;
                    char v81 = *(unsigned char *)(v30 + v80);
                    *((void *)this + 1) = v29;
                    v33 |= (unint64_t)(v81 & 0x7F) << v78;
                    if ((v81 & 0x80) == 0) {
                      break;
                    }
                    v78 += 7;
                    BOOL v14 = v79++ > 8;
                    if (v14)
                    {
                      uint64_t v33 = 0;
LABEL_212:
                      unint64_t v2 = v80 + 1;
                      goto LABEL_213;
                    }
                  }
                  if (*((unsigned char *)this + 24)) {
                    uint64_t v33 = 0;
                  }
                  goto LABEL_212;
                }
                char v31 = 0;
                unsigned int v32 = 0;
                uint64_t v33 = 0;
                do
                {
                  unint64_t v2 = v29 + 1;
                  *((void *)this + 1) = v29 + 1;
                  char v34 = *(unsigned char *)(v30 + v29);
                  v33 |= (unint64_t)(v34 & 0x7F) << v31;
                  if ((v34 & 0x80) == 0) {
                    goto LABEL_213;
                  }
                  v31 += 7;
                  unint64_t v29 = v2;
                  BOOL v14 = v32++ > 8;
                }
                while (!v14);
                uint64_t v33 = 0;
LABEL_213:
                *(void *)(a1 + 8) = v33;
                break;
              case 302:
                *(_DWORD *)(a1 + 132) |= 0x200u;
                unint64_t v2 = *((void *)this + 1);
                if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                  goto LABEL_137;
                }
                *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v2);
                goto LABEL_198;
              case 303:
                *(_DWORD *)(a1 + 132) |= 0x400u;
                unint64_t v2 = *((void *)this + 1);
                if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                  goto LABEL_137;
                }
                *(_DWORD *)(a1 + 68) = *(_DWORD *)(*(void *)this + v2);
                goto LABEL_198;
              case 304:
                *(_DWORD *)(a1 + 132) |= 0x10000000u;
                unint64_t v2 = *((void *)this + 1);
                if (v2 >= *((void *)this + 2))
                {
                  BOOL v70 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  int v69 = *(unsigned __int8 *)(*(void *)this + v2++);
                  *((void *)this + 1) = v2;
                  BOOL v70 = v69 != 0;
                }
                *(unsigned char *)(a1 + 128) = v70;
                goto LABEL_199;
              case 305:
                *(_DWORD *)(a1 + 132) |= 0x2000000u;
                unint64_t v2 = *((void *)this + 1);
                if (v2 >= *((void *)this + 2))
                {
                  BOOL v72 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  int v71 = *(unsigned __int8 *)(*(void *)this + v2++);
                  *((void *)this + 1) = v2;
                  BOOL v72 = v71 != 0;
                }
                *(unsigned char *)(a1 + 125) = v72;
                goto LABEL_199;
              default:
LABEL_127:
                uint64_t result = PB::Reader::skip(this);
                if (!result) {
                  return result;
                }
                unint64_t v2 = *((void *)this + 1);
                goto LABEL_199;
            }
            break;
        }
      }
      else
      {
        switch((int)v20)
        {
          case 1:
            *(_DWORD *)(a1 + 132) |= 0x4000000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v22 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v21 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v22 = v21 != 0;
            }
            *(unsigned char *)(a1 + 126) = v22;
            break;
          case 2:
            *(_DWORD *)(a1 + 132) |= 0x8000000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v36 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v35 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v36 = v35 != 0;
            }
            *(unsigned char *)(a1 + 127) = v36;
            break;
          case 3:
            *(_DWORD *)(a1 + 132) |= 0x80000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
              goto LABEL_137;
            }
            *(_DWORD *)(a1 + 104) = *(_DWORD *)(*(void *)this + v2);
            goto LABEL_198;
          case 4:
            *(_DWORD *)(a1 + 132) |= 0x800000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
              goto LABEL_137;
            }
            *(_DWORD *)(a1 + 120) = *(_DWORD *)(*(void *)this + v2);
            goto LABEL_198;
          case 5:
            *(_DWORD *)(a1 + 132) |= 0x100000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
              goto LABEL_137;
            }
            *(_DWORD *)(a1 + 108) = *(_DWORD *)(*(void *)this + v2);
            goto LABEL_198;
          case 6:
            *(_DWORD *)(a1 + 132) |= 0x20000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
              goto LABEL_137;
            }
            *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v2);
            goto LABEL_198;
          case 7:
            *(_DWORD *)(a1 + 132) |= 0x10000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
              goto LABEL_137;
            }
            *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v2);
            goto LABEL_198;
          case 8:
            *(_DWORD *)(a1 + 132) |= 0x100u;
            unint64_t v37 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v38 = *(void *)this;
            if (v37 > 0xFFFFFFFFFFFFFFF5 || v37 + 10 > v2)
            {
              char v82 = 0;
              unsigned int v83 = 0;
              uint64_t v41 = 0;
              if (v2 <= v37) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v37)
                {
                  LODWORD(v41) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_218;
                }
                unint64_t v84 = v37++;
                char v85 = *(unsigned char *)(v38 + v84);
                *((void *)this + 1) = v37;
                v41 |= (unint64_t)(v85 & 0x7F) << v82;
                if ((v85 & 0x80) == 0) {
                  break;
                }
                v82 += 7;
                BOOL v14 = v83++ > 8;
                if (v14)
                {
                  LODWORD(v41) = 0;
LABEL_217:
                  unint64_t v2 = v84 + 1;
                  goto LABEL_218;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v41) = 0;
              }
              goto LABEL_217;
            }
            char v39 = 0;
            unsigned int v40 = 0;
            uint64_t v41 = 0;
            do
            {
              unint64_t v2 = v37 + 1;
              *((void *)this + 1) = v37 + 1;
              char v42 = *(unsigned char *)(v38 + v37);
              v41 |= (unint64_t)(v42 & 0x7F) << v39;
              if ((v42 & 0x80) == 0) {
                goto LABEL_218;
              }
              v39 += 7;
              unint64_t v37 = v2;
              BOOL v14 = v40++ > 8;
            }
            while (!v14);
            LODWORD(v41) = 0;
LABEL_218:
            *(_DWORD *)(a1 + 60) = v41;
            break;
          case 9:
            *(_DWORD *)(a1 + 132) |= 0x80u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
              goto LABEL_137;
            }
            *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v2);
            goto LABEL_198;
          case 10:
            *(_DWORD *)(a1 + 132) |= 0x40u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
              goto LABEL_137;
            }
            *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
            goto LABEL_198;
          case 11:
            *(_DWORD *)(a1 + 132) |= 0x20u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
              goto LABEL_137;
            }
            *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
            goto LABEL_198;
          default:
            switch((int)v20)
            {
              case 'e':
                *(_DWORD *)(a1 + 132) |= 0x800u;
                unint64_t v2 = *((void *)this + 1);
                if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                  goto LABEL_137;
                }
                *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v2);
                break;
              case 'f':
                *(_DWORD *)(a1 + 132) |= 0x4000u;
                unint64_t v2 = *((void *)this + 1);
                if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                  goto LABEL_137;
                }
                *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v2);
                break;
              case 'g':
                *(_DWORD *)(a1 + 132) |= 0x200000u;
                unint64_t v2 = *((void *)this + 1);
                if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                  goto LABEL_137;
                }
                *(_DWORD *)(a1 + 112) = *(_DWORD *)(*(void *)this + v2);
                break;
              case 'h':
                *(_DWORD *)(a1 + 132) |= 0x40000u;
                unint64_t v2 = *((void *)this + 1);
                if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                  goto LABEL_137;
                }
                *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v2);
                break;
              default:
                goto LABEL_127;
            }
            goto LABEL_198;
        }
      }
LABEL_199:
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B5DD78(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 132);
  if ((v4 & 0x4000000) != 0)
  {
    uint64_t result = PB::Writer::write(this);
    int v4 = *(_DWORD *)(v3 + 132);
    if ((v4 & 0x8000000) == 0)
    {
LABEL_3:
      if ((v4 & 0x80000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_33;
    }
  }
  else if ((v4 & 0x8000000) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x80000) == 0)
  {
LABEL_4:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 104));
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x800000) == 0)
  {
LABEL_5:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 120));
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x100000) == 0)
  {
LABEL_6:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 108));
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x20000) == 0)
  {
LABEL_7:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 96));
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x10000) == 0)
  {
LABEL_8:
    if ((v4 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 92));
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x100) == 0)
  {
LABEL_9:
    if ((v4 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x80) == 0)
  {
LABEL_10:
    if ((v4 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56));
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x40) == 0)
  {
LABEL_11:
    if ((v4 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x20) == 0)
  {
LABEL_12:
    if ((v4 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48));
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x800) == 0)
  {
LABEL_13:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72));
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x4000) == 0)
  {
LABEL_14:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84));
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x200000) == 0)
  {
LABEL_15:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 112));
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x40000) == 0)
  {
LABEL_16:
    if ((v4 & 8) == 0) {
      goto LABEL_17;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 100));
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 8) == 0)
  {
LABEL_17:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_18:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x8000) == 0)
  {
LABEL_19:
    if ((v4 & 0x10) == 0) {
      goto LABEL_20;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x10) == 0)
  {
LABEL_20:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x400000) == 0)
  {
LABEL_21:
    if ((v4 & 4) == 0) {
      goto LABEL_22;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 116));
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 4) == 0)
  {
LABEL_22:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x2000) == 0)
  {
LABEL_23:
    if ((v4 & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80));
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 2) == 0)
  {
LABEL_24:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x1000) == 0)
  {
LABEL_25:
    if ((v4 & 1) == 0) {
      goto LABEL_26;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76));
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 1) == 0)
  {
LABEL_26:
    if ((v4 & 0x200) == 0) {
      goto LABEL_27;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x200) == 0)
  {
LABEL_27:
    if ((v4 & 0x400) == 0) {
      goto LABEL_28;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64));
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x400) == 0)
  {
LABEL_28:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_29;
    }
LABEL_58:
    uint64_t result = PB::Writer::write(this);
    if ((*(_DWORD *)(v3 + 132) & 0x2000000) == 0) {
      return result;
    }
    goto LABEL_59;
  }
LABEL_57:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 68));
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x10000000) != 0) {
    goto LABEL_58;
  }
LABEL_29:
  if ((v4 & 0x2000000) == 0) {
    return result;
  }
LABEL_59:

  return PB::Writer::write(this);
}

uint64_t sub_227B5E0DC(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC20C08;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

void sub_227B5E104(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B5E13C(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC20C08;
  *(_DWORD *)(result + 64) = 0;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x40) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 44);
    __int16 v3 = 64;
    *(_WORD *)(result + 64) = 64;
    *(_DWORD *)(result + 44) = v4;
    __int16 v2 = *(_WORD *)(a2 + 64);
    if ((v2 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 0x10) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 36);
    v3 |= 0x10u;
    *(_WORD *)(result + 64) = v3;
    *(_DWORD *)(result + 36) = v5;
    __int16 v2 = *(_WORD *)(a2 + 64);
  }
LABEL_6:
  if ((v2 & 0x20) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 40);
    v3 |= 0x20u;
    *(_WORD *)(result + 64) = v3;
    *(_DWORD *)(result + 40) = v6;
    __int16 v2 = *(_WORD *)(a2 + 64);
    if ((v2 & 8) == 0)
    {
LABEL_8:
      if ((v2 & 4) == 0) {
        goto LABEL_9;
      }
      goto LABEL_19;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 32);
  v3 |= 8u;
  *(_WORD *)(result + 64) = v3;
  *(_DWORD *)(result + 32) = v7;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 4) == 0)
  {
LABEL_9:
    if ((v2 & 0x800) == 0) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v8 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(_WORD *)(result + 64) = v3;
  *(void *)(result + 24) = v8;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x800) == 0)
  {
LABEL_10:
    if ((v2 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_21;
  }
LABEL_20:
  char v9 = *(unsigned char *)(a2 + 61);
  v3 |= 0x800u;
  *(_WORD *)(result + 64) = v3;
  *(unsigned char *)(result + 61) = v9;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x400) == 0)
  {
LABEL_11:
    if ((v2 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_21:
  char v10 = *(unsigned char *)(a2 + 60);
  v3 |= 0x400u;
  *(_WORD *)(result + 64) = v3;
  *(unsigned char *)(result + 60) = v10;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 1) == 0)
  {
LABEL_12:
    if ((v2 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t v11 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(result + 64) = v3;
  *(void *)(result + 8) = v11;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 2) == 0)
  {
LABEL_13:
    if ((v2 & 0x200) == 0) {
      goto LABEL_14;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v12 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(result + 64) = v3;
  *(void *)(result + 16) = v12;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x200) == 0)
  {
LABEL_14:
    if ((v2 & 0x100) == 0) {
      goto LABEL_15;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v13 = *(_DWORD *)(a2 + 56);
  v3 |= 0x200u;
  *(_WORD *)(result + 64) = v3;
  *(_DWORD *)(result + 56) = v13;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x100) == 0)
  {
LABEL_15:
    if ((v2 & 0x80) == 0) {
      return result;
    }
LABEL_26:
    int v15 = *(_DWORD *)(a2 + 48);
    *(_WORD *)(result + 64) = v3 | 0x80;
    *(_DWORD *)(result + 48) = v15;
    return result;
  }
LABEL_25:
  int v14 = *(_DWORD *)(a2 + 52);
  v3 |= 0x100u;
  *(_WORD *)(result + 64) = v3;
  *(_DWORD *)(result + 52) = v14;
  if ((*(_WORD *)(a2 + 64) & 0x80) != 0) {
    goto LABEL_26;
  }
  return result;
}

uint64_t sub_227B5E2B8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 8) != 0)
  {
    PB::TextFormatter::format(this, "autocorrelationRangeValCriticalThreshold", *(float *)(a1 + 32));
    __int16 v5 = *(_WORD *)(a1 + 64);
    if ((v5 & 0x10) == 0)
    {
LABEL_3:
      if ((v5 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v5 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "autocorrelationRangeValThreshold", *(float *)(a1 + 36));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x20) == 0)
  {
LABEL_4:
    if ((v5 & 0x40) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "autocorrelationTimeVariationCriticalThreshold");
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x40) == 0)
  {
LABEL_5:
    if ((v5 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "autocorrelationTimeVariationThreshold");
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 1) == 0)
  {
LABEL_6:
    if ((v5 & 2) == 0) {
      goto LABEL_7;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "epochFirstTimestamp");
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 2) == 0)
  {
LABEL_7:
    if ((v5 & 0x400) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "epochLastTimestamp");
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x400) == 0)
  {
LABEL_8:
    if ((v5 & 0x800) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "isCriticalFP");
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x800) == 0)
  {
LABEL_9:
    if ((v5 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "isPeriodic");
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x80) == 0)
  {
LABEL_10:
    if ((v5 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "numDmSamplesEpoch");
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x100) == 0)
  {
LABEL_11:
    if ((v5 & 0x200) == 0) {
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "rangeVal", *(float *)(a1 + 52));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x200) == 0)
  {
LABEL_12:
    if ((v5 & 4) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_27:
  PB::TextFormatter::format(this, "timeVariation");
  if ((*(_WORD *)(a1 + 64) & 4) != 0) {
LABEL_13:
  }
    PB::TextFormatter::format(this, "timestamp");
LABEL_14:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B5E47C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((int)(v11 >> 3) > 202)
      {
        switch((int)v20)
        {
          case 301:
            *(_WORD *)(a1 + 64) |= 1u;
            unint64_t v27 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v28 = *(void *)this;
            if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
            {
              char v72 = 0;
              unsigned int v73 = 0;
              uint64_t v31 = 0;
              if (v2 <= v27) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v27)
                {
                  uint64_t v31 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_155;
                }
                unint64_t v74 = v27++;
                char v75 = *(unsigned char *)(v28 + v74);
                *((void *)this + 1) = v27;
                v31 |= (unint64_t)(v75 & 0x7F) << v72;
                if ((v75 & 0x80) == 0) {
                  break;
                }
                v72 += 7;
                BOOL v14 = v73++ > 8;
                if (v14)
                {
                  uint64_t v31 = 0;
LABEL_154:
                  unint64_t v2 = v74 + 1;
                  goto LABEL_155;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v31 = 0;
              }
              goto LABEL_154;
            }
            char v29 = 0;
            unsigned int v30 = 0;
            uint64_t v31 = 0;
            do
            {
              unint64_t v2 = v27 + 1;
              *((void *)this + 1) = v27 + 1;
              char v32 = *(unsigned char *)(v28 + v27);
              v31 |= (unint64_t)(v32 & 0x7F) << v29;
              if ((v32 & 0x80) == 0) {
                goto LABEL_155;
              }
              v29 += 7;
              unint64_t v27 = v2;
              BOOL v14 = v30++ > 8;
            }
            while (!v14);
            uint64_t v31 = 0;
LABEL_155:
            *(void *)(a1 + 8) = v31;
            break;
          case 302:
            *(_WORD *)(a1 + 64) |= 2u;
            unint64_t v43 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v44 = *(void *)this;
            if (v43 > 0xFFFFFFFFFFFFFFF5 || v43 + 10 > v2)
            {
              char v80 = 0;
              unsigned int v81 = 0;
              uint64_t v47 = 0;
              if (v2 <= v43) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v43)
                {
                  uint64_t v47 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_165;
                }
                unint64_t v82 = v43++;
                char v83 = *(unsigned char *)(v44 + v82);
                *((void *)this + 1) = v43;
                v47 |= (unint64_t)(v83 & 0x7F) << v80;
                if ((v83 & 0x80) == 0) {
                  break;
                }
                v80 += 7;
                BOOL v14 = v81++ > 8;
                if (v14)
                {
                  uint64_t v47 = 0;
LABEL_164:
                  unint64_t v2 = v82 + 1;
                  goto LABEL_165;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v47 = 0;
              }
              goto LABEL_164;
            }
            char v45 = 0;
            unsigned int v46 = 0;
            uint64_t v47 = 0;
            do
            {
              unint64_t v2 = v43 + 1;
              *((void *)this + 1) = v43 + 1;
              char v48 = *(unsigned char *)(v44 + v43);
              v47 |= (unint64_t)(v48 & 0x7F) << v45;
              if ((v48 & 0x80) == 0) {
                goto LABEL_165;
              }
              v45 += 7;
              unint64_t v43 = v2;
              BOOL v14 = v46++ > 8;
            }
            while (!v14);
            uint64_t v47 = 0;
LABEL_165:
            *(void *)(a1 + 16) = v47;
            break;
          case 303:
            *(_WORD *)(a1 + 64) |= 0x200u;
            unint64_t v49 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v50 = *(void *)this;
            if (v49 > 0xFFFFFFFFFFFFFFF5 || v49 + 10 > v2)
            {
              char v84 = 0;
              unsigned int v85 = 0;
              uint64_t v53 = 0;
              if (v2 <= v49) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v49)
                {
                  LODWORD(v53) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_170;
                }
                unint64_t v86 = v49++;
                char v87 = *(unsigned char *)(v50 + v86);
                *((void *)this + 1) = v49;
                v53 |= (unint64_t)(v87 & 0x7F) << v84;
                if ((v87 & 0x80) == 0) {
                  break;
                }
                v84 += 7;
                BOOL v14 = v85++ > 8;
                if (v14)
                {
                  LODWORD(v53) = 0;
LABEL_169:
                  unint64_t v2 = v86 + 1;
                  goto LABEL_170;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v53) = 0;
              }
              goto LABEL_169;
            }
            char v51 = 0;
            unsigned int v52 = 0;
            uint64_t v53 = 0;
            do
            {
              unint64_t v2 = v49 + 1;
              *((void *)this + 1) = v49 + 1;
              char v54 = *(unsigned char *)(v50 + v49);
              v53 |= (unint64_t)(v54 & 0x7F) << v51;
              if ((v54 & 0x80) == 0) {
                goto LABEL_170;
              }
              v51 += 7;
              unint64_t v49 = v2;
              BOOL v14 = v52++ > 8;
            }
            while (!v14);
            LODWORD(v53) = 0;
LABEL_170:
            *(_DWORD *)(a1 + 56) = v53;
            break;
          case 304:
            *(_WORD *)(a1 + 64) |= 0x100u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
            {
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
LABEL_145:
              unint64_t v2 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v2;
            }
            else
            {
LABEL_74:
              *((unsigned char *)this + 24) = 1;
            }
            break;
          case 305:
            *(_WORD *)(a1 + 64) |= 0x80u;
            unint64_t v55 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v56 = *(void *)this;
            if (v55 > 0xFFFFFFFFFFFFFFF5 || v55 + 10 > v2)
            {
              char v88 = 0;
              unsigned int v89 = 0;
              uint64_t v59 = 0;
              if (v2 <= v55) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v55)
                {
                  LODWORD(v59) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_175;
                }
                unint64_t v90 = v55++;
                char v91 = *(unsigned char *)(v56 + v90);
                *((void *)this + 1) = v55;
                v59 |= (unint64_t)(v91 & 0x7F) << v88;
                if ((v91 & 0x80) == 0) {
                  break;
                }
                v88 += 7;
                BOOL v14 = v89++ > 8;
                if (v14)
                {
                  LODWORD(v59) = 0;
LABEL_174:
                  unint64_t v2 = v90 + 1;
                  goto LABEL_175;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v59) = 0;
              }
              goto LABEL_174;
            }
            char v57 = 0;
            unsigned int v58 = 0;
            uint64_t v59 = 0;
            do
            {
              unint64_t v2 = v55 + 1;
              *((void *)this + 1) = v55 + 1;
              char v60 = *(unsigned char *)(v56 + v55);
              v59 |= (unint64_t)(v60 & 0x7F) << v57;
              if ((v60 & 0x80) == 0) {
                goto LABEL_175;
              }
              v57 += 7;
              unint64_t v55 = v2;
              BOOL v14 = v58++ > 8;
            }
            while (!v14);
            LODWORD(v59) = 0;
LABEL_175:
            *(_DWORD *)(a1 + 48) = v59;
            break;
          default:
            if (v20 != 203) {
              goto LABEL_89;
            }
            *(_WORD *)(a1 + 64) |= 0x400u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v36 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v35 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v36 = v35 != 0;
            }
            *(unsigned char *)(a1 + 60) = v36;
            break;
        }
      }
      else
      {
        switch((int)v20)
        {
          case 'e':
            *(_WORD *)(a1 + 64) |= 0x40u;
            unint64_t v21 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v22 = *(void *)this;
            if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
            {
              char v68 = 0;
              unsigned int v69 = 0;
              uint64_t v25 = 0;
              if (v2 <= v21) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v21)
                {
                  LODWORD(v25) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_150;
                }
                unint64_t v70 = v21++;
                char v71 = *(unsigned char *)(v22 + v70);
                *((void *)this + 1) = v21;
                v25 |= (unint64_t)(v71 & 0x7F) << v68;
                if ((v71 & 0x80) == 0) {
                  break;
                }
                v68 += 7;
                BOOL v14 = v69++ > 8;
                if (v14)
                {
                  LODWORD(v25) = 0;
LABEL_149:
                  unint64_t v2 = v70 + 1;
                  goto LABEL_150;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v25) = 0;
              }
              goto LABEL_149;
            }
            char v23 = 0;
            unsigned int v24 = 0;
            uint64_t v25 = 0;
            do
            {
              unint64_t v2 = v21 + 1;
              *((void *)this + 1) = v21 + 1;
              char v26 = *(unsigned char *)(v22 + v21);
              v25 |= (unint64_t)(v26 & 0x7F) << v23;
              if ((v26 & 0x80) == 0) {
                goto LABEL_150;
              }
              v23 += 7;
              unint64_t v21 = v2;
              BOOL v14 = v24++ > 8;
            }
            while (!v14);
            LODWORD(v25) = 0;
LABEL_150:
            *(_DWORD *)(a1 + 44) = v25;
            break;
          case 'f':
            *(_WORD *)(a1 + 64) |= 0x10u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
              goto LABEL_74;
            }
            *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
            goto LABEL_145;
          case 'g':
            *(_WORD *)(a1 + 64) |= 0x20u;
            unint64_t v37 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v38 = *(void *)this;
            if (v37 > 0xFFFFFFFFFFFFFFF5 || v37 + 10 > v2)
            {
              char v76 = 0;
              unsigned int v77 = 0;
              uint64_t v41 = 0;
              if (v2 <= v37) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v37)
                {
                  LODWORD(v41) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_160;
                }
                unint64_t v78 = v37++;
                char v79 = *(unsigned char *)(v38 + v78);
                *((void *)this + 1) = v37;
                v41 |= (unint64_t)(v79 & 0x7F) << v76;
                if ((v79 & 0x80) == 0) {
                  break;
                }
                v76 += 7;
                BOOL v14 = v77++ > 8;
                if (v14)
                {
                  LODWORD(v41) = 0;
LABEL_159:
                  unint64_t v2 = v78 + 1;
                  goto LABEL_160;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v41) = 0;
              }
              goto LABEL_159;
            }
            char v39 = 0;
            unsigned int v40 = 0;
            uint64_t v41 = 0;
            do
            {
              unint64_t v2 = v37 + 1;
              *((void *)this + 1) = v37 + 1;
              char v42 = *(unsigned char *)(v38 + v37);
              v41 |= (unint64_t)(v42 & 0x7F) << v39;
              if ((v42 & 0x80) == 0) {
                goto LABEL_160;
              }
              v39 += 7;
              unint64_t v37 = v2;
              BOOL v14 = v40++ > 8;
            }
            while (!v14);
            LODWORD(v41) = 0;
LABEL_160:
            *(_DWORD *)(a1 + 40) = v41;
            break;
          case 'h':
            *(_WORD *)(a1 + 64) |= 8u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
              goto LABEL_74;
            }
            *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
            goto LABEL_145;
          default:
            if (v20 == 201)
            {
              *(_WORD *)(a1 + 64) |= 4u;
              unint64_t v61 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v62 = *(void *)this;
              if (v61 > 0xFFFFFFFFFFFFFFF5 || v61 + 10 > v2)
              {
                char v92 = 0;
                unsigned int v93 = 0;
                uint64_t v65 = 0;
                if (v2 <= v61) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v61)
                  {
                    uint64_t v65 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_180;
                  }
                  unint64_t v94 = v61++;
                  char v95 = *(unsigned char *)(v62 + v94);
                  *((void *)this + 1) = v61;
                  v65 |= (unint64_t)(v95 & 0x7F) << v92;
                  if ((v95 & 0x80) == 0) {
                    break;
                  }
                  v92 += 7;
                  BOOL v14 = v93++ > 8;
                  if (v14)
                  {
                    uint64_t v65 = 0;
                    goto LABEL_179;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v65 = 0;
                }
LABEL_179:
                unint64_t v2 = v94 + 1;
              }
              else
              {
                char v63 = 0;
                unsigned int v64 = 0;
                uint64_t v65 = 0;
                while (1)
                {
                  unint64_t v2 = v61 + 1;
                  *((void *)this + 1) = v61 + 1;
                  char v66 = *(unsigned char *)(v62 + v61);
                  v65 |= (unint64_t)(v66 & 0x7F) << v63;
                  if ((v66 & 0x80) == 0) {
                    break;
                  }
                  v63 += 7;
                  unint64_t v61 = v2;
                  BOOL v14 = v64++ > 8;
                  if (v14)
                  {
                    uint64_t v65 = 0;
                    break;
                  }
                }
              }
LABEL_180:
              *(void *)(a1 + 24) = v65;
            }
            else if (v20 == 202)
            {
              *(_WORD *)(a1 + 64) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v34 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v33 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v34 = v33 != 0;
              }
              *(unsigned char *)(a1 + 61) = v34;
            }
            else
            {
LABEL_89:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
            }
            break;
        }
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B5EE18(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 64);
  if ((v4 & 0x40) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    __int16 v4 = *(_WORD *)(v3 + 64);
    if ((v4 & 0x10) == 0)
    {
LABEL_3:
      if ((v4 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v4 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x20) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 4) == 0)
  {
LABEL_6:
    if ((v4 & 0x800) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x800) == 0)
  {
LABEL_7:
    if ((v4 & 0x400) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x400) == 0)
  {
LABEL_8:
    if ((v4 & 1) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 1) == 0)
  {
LABEL_9:
    if ((v4 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 2) == 0)
  {
LABEL_10:
    if ((v4 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x200) == 0)
  {
LABEL_11:
    if ((v4 & 0x100) == 0) {
      goto LABEL_12;
    }
LABEL_24:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
    if ((*(_WORD *)(v3 + 64) & 0x80) == 0) {
      return result;
    }
    goto LABEL_25;
  }
LABEL_23:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x100) != 0) {
    goto LABEL_24;
  }
LABEL_12:
  if ((v4 & 0x80) == 0) {
    return result;
  }
LABEL_25:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227B5EFA0(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC20C40;
  *(_DWORD *)(result + 68) = 0;
  return result;
}

void sub_227B5EFC8(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B5F000(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC20C40;
  *(_DWORD *)(result + 68) = 0;
  int v2 = *(_DWORD *)(a2 + 68);
  if ((v2 & 4) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 20);
    int v3 = 4;
    *(_DWORD *)(result + 68) = 4;
    *(_DWORD *)(result + 20) = v4;
    int v2 = *(_DWORD *)(a2 + 68);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 16);
    v3 |= 2u;
    *(_DWORD *)(result + 68) = v3;
    *(_DWORD *)(result + 16) = v5;
    int v2 = *(_DWORD *)(a2 + 68);
  }
LABEL_6:
  if ((v2 & 8) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 24);
    v3 |= 8u;
    *(_DWORD *)(result + 68) = v3;
    *(_DWORD *)(result + 24) = v6;
    int v2 = *(_DWORD *)(a2 + 68);
    if ((v2 & 1) == 0)
    {
LABEL_8:
      if ((v2 & 0x800) == 0) {
        goto LABEL_9;
      }
      goto LABEL_28;
    }
  }
  else if ((v2 & 1) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_DWORD *)(result + 68) = v3;
  *(void *)(result + 8) = v7;
  int v2 = *(_DWORD *)(a2 + 68);
  if ((v2 & 0x800) == 0)
  {
LABEL_9:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_29;
  }
LABEL_28:
  char v8 = *(unsigned char *)(a2 + 56);
  v3 |= 0x800u;
  *(_DWORD *)(result + 68) = v3;
  *(unsigned char *)(result + 56) = v8;
  int v2 = *(_DWORD *)(a2 + 68);
  if ((v2 & 0x1000) == 0)
  {
LABEL_10:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_29:
  char v9 = *(unsigned char *)(a2 + 57);
  v3 |= 0x1000u;
  *(_DWORD *)(result + 68) = v3;
  *(unsigned char *)(result + 57) = v9;
  int v2 = *(_DWORD *)(a2 + 68);
  if ((v2 & 0x2000) == 0)
  {
LABEL_11:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_30:
  char v10 = *(unsigned char *)(a2 + 58);
  v3 |= 0x2000u;
  *(_DWORD *)(result + 68) = v3;
  *(unsigned char *)(result + 58) = v10;
  int v2 = *(_DWORD *)(a2 + 68);
  if ((v2 & 0x100000) == 0)
  {
LABEL_12:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_32;
  }
LABEL_31:
  char v11 = *(unsigned char *)(a2 + 65);
  v3 |= 0x100000u;
  *(_DWORD *)(result + 68) = v3;
  *(unsigned char *)(result + 65) = v11;
  int v2 = *(_DWORD *)(a2 + 68);
  if ((v2 & 0x40000) == 0)
  {
LABEL_13:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_33;
  }
LABEL_32:
  char v12 = *(unsigned char *)(a2 + 63);
  v3 |= 0x40000u;
  *(_DWORD *)(result + 68) = v3;
  *(unsigned char *)(result + 63) = v12;
  int v2 = *(_DWORD *)(a2 + 68);
  if ((v2 & 0x8000) == 0)
  {
LABEL_14:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_34;
  }
LABEL_33:
  char v13 = *(unsigned char *)(a2 + 60);
  v3 |= 0x8000u;
  *(_DWORD *)(result + 68) = v3;
  *(unsigned char *)(result + 60) = v13;
  int v2 = *(_DWORD *)(a2 + 68);
  if ((v2 & 0x4000) == 0)
  {
LABEL_15:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }
LABEL_34:
  char v14 = *(unsigned char *)(a2 + 59);
  v3 |= 0x4000u;
  *(_DWORD *)(result + 68) = v3;
  *(unsigned char *)(result + 59) = v14;
  int v2 = *(_DWORD *)(a2 + 68);
  if ((v2 & 0x80000) == 0)
  {
LABEL_16:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_36;
  }
LABEL_35:
  char v15 = *(unsigned char *)(a2 + 64);
  v3 |= 0x80000u;
  *(_DWORD *)(result + 68) = v3;
  *(unsigned char *)(result + 64) = v15;
  int v2 = *(_DWORD *)(a2 + 68);
  if ((v2 & 0x10000) == 0)
  {
LABEL_17:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_37;
  }
LABEL_36:
  char v16 = *(unsigned char *)(a2 + 61);
  v3 |= 0x10000u;
  *(_DWORD *)(result + 68) = v3;
  *(unsigned char *)(result + 61) = v16;
  int v2 = *(_DWORD *)(a2 + 68);
  if ((v2 & 0x20000) == 0)
  {
LABEL_18:
    if ((v2 & 0x400) == 0) {
      goto LABEL_19;
    }
    goto LABEL_38;
  }
LABEL_37:
  char v17 = *(unsigned char *)(a2 + 62);
  v3 |= 0x20000u;
  *(_DWORD *)(result + 68) = v3;
  *(unsigned char *)(result + 62) = v17;
  int v2 = *(_DWORD *)(a2 + 68);
  if ((v2 & 0x400) == 0)
  {
LABEL_19:
    if ((v2 & 0x100) == 0) {
      goto LABEL_20;
    }
    goto LABEL_39;
  }
LABEL_38:
  int v18 = *(_DWORD *)(a2 + 52);
  v3 |= 0x400u;
  *(_DWORD *)(result + 68) = v3;
  *(_DWORD *)(result + 52) = v18;
  int v2 = *(_DWORD *)(a2 + 68);
  if ((v2 & 0x100) == 0)
  {
LABEL_20:
    if ((v2 & 0x20) == 0) {
      goto LABEL_21;
    }
    goto LABEL_40;
  }
LABEL_39:
  int v19 = *(_DWORD *)(a2 + 44);
  v3 |= 0x100u;
  *(_DWORD *)(result + 68) = v3;
  *(_DWORD *)(result + 44) = v19;
  int v2 = *(_DWORD *)(a2 + 68);
  if ((v2 & 0x20) == 0)
  {
LABEL_21:
    if ((v2 & 0x10) == 0) {
      goto LABEL_22;
    }
    goto LABEL_41;
  }
LABEL_40:
  int v20 = *(_DWORD *)(a2 + 32);
  v3 |= 0x20u;
  *(_DWORD *)(result + 68) = v3;
  *(_DWORD *)(result + 32) = v20;
  int v2 = *(_DWORD *)(a2 + 68);
  if ((v2 & 0x10) == 0)
  {
LABEL_22:
    if ((v2 & 0x200) == 0) {
      goto LABEL_23;
    }
    goto LABEL_42;
  }
LABEL_41:
  int v21 = *(_DWORD *)(a2 + 28);
  v3 |= 0x10u;
  *(_DWORD *)(result + 68) = v3;
  *(_DWORD *)(result + 28) = v21;
  int v2 = *(_DWORD *)(a2 + 68);
  if ((v2 & 0x200) == 0)
  {
LABEL_23:
    if ((v2 & 0x40) == 0) {
      goto LABEL_24;
    }
    goto LABEL_43;
  }
LABEL_42:
  int v22 = *(_DWORD *)(a2 + 48);
  v3 |= 0x200u;
  *(_DWORD *)(result + 68) = v3;
  *(_DWORD *)(result + 48) = v22;
  int v2 = *(_DWORD *)(a2 + 68);
  if ((v2 & 0x40) == 0)
  {
LABEL_24:
    if ((v2 & 0x80) == 0) {
      return result;
    }
LABEL_44:
    int v24 = *(_DWORD *)(a2 + 40);
    *(_DWORD *)(result + 68) = v3 | 0x80;
    *(_DWORD *)(result + 40) = v24;
    return result;
  }
LABEL_43:
  int v23 = *(_DWORD *)(a2 + 36);
  v3 |= 0x40u;
  *(_DWORD *)(result + 68) = v3;
  *(_DWORD *)(result + 36) = v23;
  if ((*(_DWORD *)(a2 + 68) & 0x80) != 0) {
    goto LABEL_44;
  }
  return result;
}

uint64_t sub_227B5F278(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 0x800) != 0)
  {
    PB::TextFormatter::format(this, "crashDetectorDecision");
    int v5 = *(_DWORD *)(a1 + 68);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_28;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "detectorPostTriggerTimeOffsetWindow", *(float *)(a1 + 16));
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "detectorPreTriggerTimeOffsetWindow", *(float *)(a1 + 20));
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 0x1000) == 0)
  {
LABEL_5:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(this, "earlyCrashDetectorDecision");
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 8) == 0)
  {
LABEL_6:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "epochLatchingCount", *(float *)(a1 + 24));
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 0x2000) == 0)
  {
LABEL_7:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(this, "hasAudioInEpoch");
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 0x4000) == 0)
  {
LABEL_8:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(this, "isAudio");
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 0x8000) == 0)
  {
LABEL_9:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(this, "isBaro");
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 0x10000) == 0)
  {
LABEL_10:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "isDescalationDecided");
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 0x20000) == 0)
  {
LABEL_11:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "isDescalationRequired");
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 0x40000) == 0)
  {
LABEL_12:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "isFreeFall");
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 0x80000) == 0)
  {
LABEL_13:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "isGPS");
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 0x100000) == 0)
  {
LABEL_14:
    if ((v5 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "isPulse");
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 0x10) == 0)
  {
LABEL_15:
    if ((v5 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "latchedIsAudio");
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 0x20) == 0)
  {
LABEL_16:
    if ((v5 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "latchedIsBaro");
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 0x40) == 0)
  {
LABEL_17:
    if ((v5 & 0x80) == 0) {
      goto LABEL_18;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "latchedIsDescalationDecided");
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 0x80) == 0)
  {
LABEL_18:
    if ((v5 & 0x100) == 0) {
      goto LABEL_19;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "latchedIsDescalationRequired");
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 0x100) == 0)
  {
LABEL_19:
    if ((v5 & 0x200) == 0) {
      goto LABEL_20;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "latchedIsFreeFall");
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 0x200) == 0)
  {
LABEL_20:
    if ((v5 & 0x400) == 0) {
      goto LABEL_21;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "latchedIsGPS");
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 0x400) == 0)
  {
LABEL_21:
    if ((v5 & 1) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
LABEL_45:
  PB::TextFormatter::format(this, "latchedIsPulse");
  if (*(_DWORD *)(a1 + 68)) {
LABEL_22:
  }
    PB::TextFormatter::format(this, "timestamp");
LABEL_23:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B5F55C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  for (int i = *((unsigned __int8 *)this + 24); v2 < v3 && i == 0; int i = *((unsigned __int8 *)this + 24))
  {
    uint64_t v8 = *(void *)this;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      while (v3 != v2)
      {
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)this + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_20;
        }
        v15 += 7;
        unint64_t v2 = v17;
        if (v16++ >= 9)
        {
LABEL_19:
          unint64_t v11 = 0;
          goto LABEL_20;
        }
      }
      int i = 1;
      *((unsigned char *)this + 24) = 1;
      return i == 0;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)this + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_20:
    if ((v11 & 7) == 4)
    {
      int i = 0;
      return i == 0;
    }
    unint64_t v20 = v11 >> 3;
    if ((int)(v11 >> 3) > 200)
    {
      if ((v11 >> 3) <= 0xC8)
      {
        switch((int)v20)
        {
          case 301:
            *(_DWORD *)(a1 + 68) |= 0x100000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v28 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v27 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v28 = v27 != 0;
            }
            *(unsigned char *)(a1 + 65) = v28;
            break;
          case 302:
            *(_DWORD *)(a1 + 68) |= 0x40000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v79 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v78 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v79 = v78 != 0;
            }
            *(unsigned char *)(a1 + 63) = v79;
            break;
          case 303:
            *(_DWORD *)(a1 + 68) |= 0x8000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v81 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v80 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v81 = v80 != 0;
            }
            *(unsigned char *)(a1 + 60) = v81;
            break;
          case 304:
            *(_DWORD *)(a1 + 68) |= 0x4000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v83 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v82 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v83 = v82 != 0;
            }
            *(unsigned char *)(a1 + 59) = v83;
            break;
          case 305:
            *(_DWORD *)(a1 + 68) |= 0x80000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v85 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v84 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v85 = v84 != 0;
            }
            *(unsigned char *)(a1 + 64) = v85;
            break;
          case 306:
            *(_DWORD *)(a1 + 68) |= 0x10000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v87 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v86 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v87 = v86 != 0;
            }
            *(unsigned char *)(a1 + 61) = v87;
            break;
          case 307:
            *(_DWORD *)(a1 + 68) |= 0x20000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v89 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v88 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v89 = v88 != 0;
            }
            *(unsigned char *)(a1 + 62) = v89;
            break;
          default:
            JUMPOUT(0);
        }
      }
      else
      {
        switch((int)v20)
        {
          case 401:
            *(_DWORD *)(a1 + 68) |= 0x400u;
            unint64_t v21 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v22 = *(void *)this;
            if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
            {
              char v94 = 0;
              unsigned int v95 = 0;
              uint64_t v25 = 0;
              if (v2 <= v21) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v21)
                {
                  LODWORD(v25) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_207;
                }
                unint64_t v96 = v21++;
                char v97 = *(unsigned char *)(v22 + v96);
                *((void *)this + 1) = v21;
                v25 |= (unint64_t)(v97 & 0x7F) << v94;
                if ((v97 & 0x80) == 0) {
                  break;
                }
                v94 += 7;
                BOOL v14 = v95++ > 8;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_206;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v25) = 0;
              }
LABEL_206:
              unint64_t v2 = v96 + 1;
            }
            else
            {
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              while (1)
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  break;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  break;
                }
              }
            }
LABEL_207:
            *(_DWORD *)(a1 + 52) = v25;
            break;
          case 402:
            *(_DWORD *)(a1 + 68) |= 0x100u;
            unint64_t v42 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v43 = *(void *)this;
            if (v42 > 0xFFFFFFFFFFFFFFF5 || v42 + 10 > v2)
            {
              char v98 = 0;
              unsigned int v99 = 0;
              uint64_t v46 = 0;
              if (v2 <= v42) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v42)
                {
                  LODWORD(v46) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_212;
                }
                unint64_t v100 = v42++;
                char v101 = *(unsigned char *)(v43 + v100);
                *((void *)this + 1) = v42;
                v46 |= (unint64_t)(v101 & 0x7F) << v98;
                if ((v101 & 0x80) == 0) {
                  break;
                }
                v98 += 7;
                BOOL v14 = v99++ > 8;
                if (v14)
                {
                  LODWORD(v46) = 0;
                  goto LABEL_211;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v46) = 0;
              }
LABEL_211:
              unint64_t v2 = v100 + 1;
            }
            else
            {
              char v44 = 0;
              unsigned int v45 = 0;
              uint64_t v46 = 0;
              while (1)
              {
                unint64_t v2 = v42 + 1;
                *((void *)this + 1) = v42 + 1;
                char v47 = *(unsigned char *)(v43 + v42);
                v46 |= (unint64_t)(v47 & 0x7F) << v44;
                if ((v47 & 0x80) == 0) {
                  break;
                }
                v44 += 7;
                unint64_t v42 = v2;
                BOOL v14 = v45++ > 8;
                if (v14)
                {
                  LODWORD(v46) = 0;
                  break;
                }
              }
            }
LABEL_212:
            *(_DWORD *)(a1 + 44) = v46;
            break;
          case 403:
            *(_DWORD *)(a1 + 68) |= 0x20u;
            unint64_t v48 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v49 = *(void *)this;
            if (v48 > 0xFFFFFFFFFFFFFFF5 || v48 + 10 > v2)
            {
              char v102 = 0;
              unsigned int v103 = 0;
              uint64_t v52 = 0;
              if (v2 <= v48) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v48)
                {
                  LODWORD(v52) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_217;
                }
                unint64_t v104 = v48++;
                char v105 = *(unsigned char *)(v49 + v104);
                *((void *)this + 1) = v48;
                v52 |= (unint64_t)(v105 & 0x7F) << v102;
                if ((v105 & 0x80) == 0) {
                  break;
                }
                v102 += 7;
                BOOL v14 = v103++ > 8;
                if (v14)
                {
                  LODWORD(v52) = 0;
                  goto LABEL_216;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v52) = 0;
              }
LABEL_216:
              unint64_t v2 = v104 + 1;
            }
            else
            {
              char v50 = 0;
              unsigned int v51 = 0;
              uint64_t v52 = 0;
              while (1)
              {
                unint64_t v2 = v48 + 1;
                *((void *)this + 1) = v48 + 1;
                char v53 = *(unsigned char *)(v49 + v48);
                v52 |= (unint64_t)(v53 & 0x7F) << v50;
                if ((v53 & 0x80) == 0) {
                  break;
                }
                v50 += 7;
                unint64_t v48 = v2;
                BOOL v14 = v51++ > 8;
                if (v14)
                {
                  LODWORD(v52) = 0;
                  break;
                }
              }
            }
LABEL_217:
            *(_DWORD *)(a1 + 32) = v52;
            break;
          case 404:
            *(_DWORD *)(a1 + 68) |= 0x10u;
            unint64_t v54 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v55 = *(void *)this;
            if (v54 > 0xFFFFFFFFFFFFFFF5 || v54 + 10 > v2)
            {
              char v106 = 0;
              unsigned int v107 = 0;
              uint64_t v58 = 0;
              if (v2 <= v54) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v54)
                {
                  LODWORD(v58) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_222;
                }
                unint64_t v108 = v54++;
                char v109 = *(unsigned char *)(v55 + v108);
                *((void *)this + 1) = v54;
                v58 |= (unint64_t)(v109 & 0x7F) << v106;
                if ((v109 & 0x80) == 0) {
                  break;
                }
                v106 += 7;
                BOOL v14 = v107++ > 8;
                if (v14)
                {
                  LODWORD(v58) = 0;
                  goto LABEL_221;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v58) = 0;
              }
LABEL_221:
              unint64_t v2 = v108 + 1;
            }
            else
            {
              char v56 = 0;
              unsigned int v57 = 0;
              uint64_t v58 = 0;
              while (1)
              {
                unint64_t v2 = v54 + 1;
                *((void *)this + 1) = v54 + 1;
                char v59 = *(unsigned char *)(v55 + v54);
                v58 |= (unint64_t)(v59 & 0x7F) << v56;
                if ((v59 & 0x80) == 0) {
                  break;
                }
                v56 += 7;
                unint64_t v54 = v2;
                BOOL v14 = v57++ > 8;
                if (v14)
                {
                  LODWORD(v58) = 0;
                  break;
                }
              }
            }
LABEL_222:
            *(_DWORD *)(a1 + 28) = v58;
            break;
          case 405:
            *(_DWORD *)(a1 + 68) |= 0x200u;
            unint64_t v60 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v61 = *(void *)this;
            if (v60 > 0xFFFFFFFFFFFFFFF5 || v60 + 10 > v2)
            {
              char v110 = 0;
              unsigned int v111 = 0;
              uint64_t v64 = 0;
              if (v2 <= v60) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v60)
                {
                  LODWORD(v64) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_227;
                }
                unint64_t v112 = v60++;
                char v113 = *(unsigned char *)(v61 + v112);
                *((void *)this + 1) = v60;
                v64 |= (unint64_t)(v113 & 0x7F) << v110;
                if ((v113 & 0x80) == 0) {
                  break;
                }
                v110 += 7;
                BOOL v14 = v111++ > 8;
                if (v14)
                {
                  LODWORD(v64) = 0;
                  goto LABEL_226;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v64) = 0;
              }
LABEL_226:
              unint64_t v2 = v112 + 1;
            }
            else
            {
              char v62 = 0;
              unsigned int v63 = 0;
              uint64_t v64 = 0;
              while (1)
              {
                unint64_t v2 = v60 + 1;
                *((void *)this + 1) = v60 + 1;
                char v65 = *(unsigned char *)(v61 + v60);
                v64 |= (unint64_t)(v65 & 0x7F) << v62;
                if ((v65 & 0x80) == 0) {
                  break;
                }
                v62 += 7;
                unint64_t v60 = v2;
                BOOL v14 = v63++ > 8;
                if (v14)
                {
                  LODWORD(v64) = 0;
                  break;
                }
              }
            }
LABEL_227:
            *(_DWORD *)(a1 + 48) = v64;
            break;
          case 406:
            *(_DWORD *)(a1 + 68) |= 0x40u;
            unint64_t v66 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v67 = *(void *)this;
            if (v66 > 0xFFFFFFFFFFFFFFF5 || v66 + 10 > v2)
            {
              char v114 = 0;
              unsigned int v115 = 0;
              uint64_t v70 = 0;
              if (v2 <= v66) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v66)
                {
                  LODWORD(v70) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_232;
                }
                unint64_t v116 = v66++;
                char v117 = *(unsigned char *)(v67 + v116);
                *((void *)this + 1) = v66;
                v70 |= (unint64_t)(v117 & 0x7F) << v114;
                if ((v117 & 0x80) == 0) {
                  break;
                }
                v114 += 7;
                BOOL v14 = v115++ > 8;
                if (v14)
                {
                  LODWORD(v70) = 0;
                  goto LABEL_231;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v70) = 0;
              }
LABEL_231:
              unint64_t v2 = v116 + 1;
            }
            else
            {
              char v68 = 0;
              unsigned int v69 = 0;
              uint64_t v70 = 0;
              while (1)
              {
                unint64_t v2 = v66 + 1;
                *((void *)this + 1) = v66 + 1;
                char v71 = *(unsigned char *)(v67 + v66);
                v70 |= (unint64_t)(v71 & 0x7F) << v68;
                if ((v71 & 0x80) == 0) {
                  break;
                }
                v68 += 7;
                unint64_t v66 = v2;
                BOOL v14 = v69++ > 8;
                if (v14)
                {
                  LODWORD(v70) = 0;
                  break;
                }
              }
            }
LABEL_232:
            *(_DWORD *)(a1 + 36) = v70;
            break;
          case 407:
            *(_DWORD *)(a1 + 68) |= 0x80u;
            unint64_t v72 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v73 = *(void *)this;
            if (v72 > 0xFFFFFFFFFFFFFFF5 || v72 + 10 > v2)
            {
              char v118 = 0;
              unsigned int v119 = 0;
              uint64_t v76 = 0;
              if (v2 <= v72) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v72)
                {
                  LODWORD(v76) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_237;
                }
                unint64_t v120 = v72++;
                char v121 = *(unsigned char *)(v73 + v120);
                *((void *)this + 1) = v72;
                v76 |= (unint64_t)(v121 & 0x7F) << v118;
                if ((v121 & 0x80) == 0) {
                  break;
                }
                v118 += 7;
                BOOL v14 = v119++ > 8;
                if (v14)
                {
                  LODWORD(v76) = 0;
                  goto LABEL_236;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v76) = 0;
              }
LABEL_236:
              unint64_t v2 = v120 + 1;
            }
            else
            {
              char v74 = 0;
              unsigned int v75 = 0;
              uint64_t v76 = 0;
              while (1)
              {
                unint64_t v2 = v72 + 1;
                *((void *)this + 1) = v72 + 1;
                char v77 = *(unsigned char *)(v73 + v72);
                v76 |= (unint64_t)(v77 & 0x7F) << v74;
                if ((v77 & 0x80) == 0) {
                  break;
                }
                v74 += 7;
                unint64_t v72 = v2;
                BOOL v14 = v75++ > 8;
                if (v14)
                {
                  LODWORD(v76) = 0;
                  break;
                }
              }
            }
LABEL_237:
            *(_DWORD *)(a1 + 40) = v76;
            break;
          default:
            if (v20 != 201) {
              goto LABEL_64;
            }
            *(_DWORD *)(a1 + 68) |= 0x2000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v32 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v31 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v32 = v31 != 0;
            }
            *(unsigned char *)(a1 + 58) = v32;
            break;
        }
      }
      goto LABEL_238;
    }
    if ((int)v20 > 100)
    {
      switch(v20)
      {
        case 'e':
          *(_DWORD *)(a1 + 68) |= 1u;
          unint64_t v33 = *((void *)this + 1);
          unint64_t v2 = *((void *)this + 2);
          uint64_t v34 = *(void *)this;
          if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
          {
            char v90 = 0;
            unsigned int v91 = 0;
            uint64_t v37 = 0;
            if (v2 <= v33) {
              unint64_t v2 = *((void *)this + 1);
            }
            while (1)
            {
              if (v2 == v33)
              {
                uint64_t v37 = 0;
                *((unsigned char *)this + 24) = 1;
                goto LABEL_202;
              }
              unint64_t v92 = v33++;
              char v93 = *(unsigned char *)(v34 + v92);
              *((void *)this + 1) = v33;
              v37 |= (unint64_t)(v93 & 0x7F) << v90;
              if ((v93 & 0x80) == 0) {
                break;
              }
              v90 += 7;
              BOOL v14 = v91++ > 8;
              if (v14)
              {
                uint64_t v37 = 0;
                goto LABEL_201;
              }
            }
            if (*((unsigned char *)this + 24)) {
              uint64_t v37 = 0;
            }
LABEL_201:
            unint64_t v2 = v92 + 1;
          }
          else
          {
            char v35 = 0;
            unsigned int v36 = 0;
            uint64_t v37 = 0;
            while (1)
            {
              unint64_t v2 = v33 + 1;
              *((void *)this + 1) = v33 + 1;
              char v38 = *(unsigned char *)(v34 + v33);
              v37 |= (unint64_t)(v38 & 0x7F) << v35;
              if ((v38 & 0x80) == 0) {
                break;
              }
              v35 += 7;
              unint64_t v33 = v2;
              BOOL v14 = v36++ > 8;
              if (v14)
              {
                uint64_t v37 = 0;
                break;
              }
            }
          }
LABEL_202:
          *(void *)(a1 + 8) = v37;
          break;
        case 'f':
          *(_DWORD *)(a1 + 68) |= 0x800u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 >= *((void *)this + 2))
          {
            BOOL v40 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            int v39 = *(unsigned __int8 *)(*(void *)this + v2++);
            *((void *)this + 1) = v2;
            BOOL v40 = v39 != 0;
          }
          *(unsigned char *)(a1 + 56) = v40;
          break;
        case 'g':
          *(_DWORD *)(a1 + 68) |= 0x1000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 >= *((void *)this + 2))
          {
            BOOL v30 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            int v29 = *(unsigned __int8 *)(*(void *)this + v2++);
            *((void *)this + 1) = v2;
            BOOL v30 = v29 != 0;
          }
          *(unsigned char *)(a1 + 57) = v30;
          break;
        default:
LABEL_64:
          uint64_t result = PB::Reader::skip(this);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
    }
    else
    {
      switch(v20)
      {
        case 1:
          *(_DWORD *)(a1 + 68) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
            goto LABEL_197;
          }
          break;
        case 2:
          *(_DWORD *)(a1 + 68) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
            goto LABEL_197;
          }
          break;
        case 3:
          *(_DWORD *)(a1 + 68) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
LABEL_197:
            unint64_t v2 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v2;
            goto LABEL_238;
          }
          break;
        default:
          goto LABEL_64;
      }
      *((unsigned char *)this + 24) = 1;
    }
LABEL_238:
    unint64_t v3 = *((void *)this + 2);
  }
  return i == 0;
}

uint64_t sub_227B60240(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 68);
  if ((v4 & 4) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(result + 20));
    int v4 = *(_DWORD *)(v3 + 68);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_25;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16));
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 8) == 0)
  {
LABEL_4:
    if ((v4 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24));
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 1) == 0)
  {
LABEL_5:
    if ((v4 & 0x800) == 0) {
      goto LABEL_6;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x800) == 0)
  {
LABEL_6:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x1000) == 0)
  {
LABEL_7:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x2000) == 0)
  {
LABEL_8:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x100000) == 0)
  {
LABEL_9:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x40000) == 0)
  {
LABEL_10:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x8000) == 0)
  {
LABEL_11:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x4000) == 0)
  {
LABEL_12:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x80000) == 0)
  {
LABEL_13:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x10000) == 0)
  {
LABEL_14:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x20000) == 0)
  {
LABEL_15:
    if ((v4 & 0x400) == 0) {
      goto LABEL_16;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x400) == 0)
  {
LABEL_16:
    if ((v4 & 0x100) == 0) {
      goto LABEL_17;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x100) == 0)
  {
LABEL_17:
    if ((v4 & 0x20) == 0) {
      goto LABEL_18;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x20) == 0)
  {
LABEL_18:
    if ((v4 & 0x10) == 0) {
      goto LABEL_19;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x10) == 0)
  {
LABEL_19:
    if ((v4 & 0x200) == 0) {
      goto LABEL_20;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x200) == 0)
  {
LABEL_20:
    if ((v4 & 0x40) == 0) {
      goto LABEL_21;
    }
LABEL_42:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(_DWORD *)(v3 + 68) & 0x80) == 0) {
      return result;
    }
    goto LABEL_43;
  }
LABEL_41:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x40) != 0) {
    goto LABEL_42;
  }
LABEL_21:
  if ((v4 & 0x80) == 0) {
    return result;
  }
LABEL_43:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227B604C4(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC20C78;
  *(_DWORD *)(result + 92) = 0;
  return result;
}

void sub_227B604EC(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B60524(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC20C78;
  *(_DWORD *)(result + 92) = 0;
  int v2 = *(_DWORD *)(a2 + 92);
  if ((v2 & 0x200) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 60);
    int v3 = 512;
    *(_DWORD *)(result + 92) = 512;
    *(_DWORD *)(result + 60) = v4;
    int v2 = *(_DWORD *)(a2 + 92);
    if ((v2 & 0x4000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 0x4000) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 80);
    v3 |= 0x4000u;
    *(_DWORD *)(result + 92) = v3;
    *(_DWORD *)(result + 80) = v5;
    int v2 = *(_DWORD *)(a2 + 92);
  }
LABEL_6:
  if ((v2 & 0x400) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 64);
    v3 |= 0x400u;
    *(_DWORD *)(result + 92) = v3;
    *(_DWORD *)(result + 64) = v6;
    int v2 = *(_DWORD *)(a2 + 92);
    if ((v2 & 0x8000) == 0)
    {
LABEL_8:
      if ((v2 & 4) == 0) {
        goto LABEL_9;
      }
      goto LABEL_26;
    }
  }
  else if ((v2 & 0x8000) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 84);
  v3 |= 0x8000u;
  *(_DWORD *)(result + 92) = v3;
  *(_DWORD *)(result + 84) = v7;
  int v2 = *(_DWORD *)(a2 + 92);
  if ((v2 & 4) == 0)
  {
LABEL_9:
    if ((v2 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v8 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(_DWORD *)(result + 92) = v3;
  *(void *)(result + 24) = v8;
  int v2 = *(_DWORD *)(a2 + 92);
  if ((v2 & 8) == 0)
  {
LABEL_10:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t v9 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_DWORD *)(result + 92) = v3;
  *(void *)(result + 32) = v9;
  int v2 = *(_DWORD *)(a2 + 92);
  if ((v2 & 0x2000) == 0)
  {
LABEL_11:
    if ((v2 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_28:
  int v10 = *(_DWORD *)(a2 + 76);
  v3 |= 0x2000u;
  *(_DWORD *)(result + 92) = v3;
  *(_DWORD *)(result + 76) = v10;
  int v2 = *(_DWORD *)(a2 + 92);
  if ((v2 & 0x100) == 0)
  {
LABEL_12:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_30;
  }
LABEL_29:
  int v11 = *(_DWORD *)(a2 + 56);
  v3 |= 0x100u;
  *(_DWORD *)(result + 92) = v3;
  *(_DWORD *)(result + 56) = v11;
  int v2 = *(_DWORD *)(a2 + 92);
  if ((v2 & 0x40000) == 0)
  {
LABEL_13:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_31;
  }
LABEL_30:
  char v12 = *(unsigned char *)(a2 + 90);
  v3 |= 0x40000u;
  *(_DWORD *)(result + 92) = v3;
  *(unsigned char *)(result + 90) = v12;
  int v2 = *(_DWORD *)(a2 + 92);
  if ((v2 & 0x20000) == 0)
  {
LABEL_14:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_32;
  }
LABEL_31:
  char v13 = *(unsigned char *)(a2 + 89);
  v3 |= 0x20000u;
  *(_DWORD *)(result + 92) = v3;
  *(unsigned char *)(result + 89) = v13;
  int v2 = *(_DWORD *)(a2 + 92);
  if ((v2 & 0x1000) == 0)
  {
LABEL_15:
    if ((v2 & 0x800) == 0) {
      goto LABEL_16;
    }
    goto LABEL_33;
  }
LABEL_32:
  int v14 = *(_DWORD *)(a2 + 72);
  v3 |= 0x1000u;
  *(_DWORD *)(result + 92) = v3;
  *(_DWORD *)(result + 72) = v14;
  int v2 = *(_DWORD *)(a2 + 92);
  if ((v2 & 0x800) == 0)
  {
LABEL_16:
    if ((v2 & 2) == 0) {
      goto LABEL_17;
    }
    goto LABEL_34;
  }
LABEL_33:
  int v15 = *(_DWORD *)(a2 + 68);
  v3 |= 0x800u;
  *(_DWORD *)(result + 92) = v3;
  *(_DWORD *)(result + 68) = v15;
  int v2 = *(_DWORD *)(a2 + 92);
  if ((v2 & 2) == 0)
  {
LABEL_17:
    if ((v2 & 1) == 0) {
      goto LABEL_18;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t v16 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_DWORD *)(result + 92) = v3;
  *(void *)(result + 16) = v16;
  int v2 = *(_DWORD *)(a2 + 92);
  if ((v2 & 1) == 0)
  {
LABEL_18:
    if ((v2 & 0x10) == 0) {
      goto LABEL_19;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t v17 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_DWORD *)(result + 92) = v3;
  *(void *)(result + 8) = v17;
  int v2 = *(_DWORD *)(a2 + 92);
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x40) == 0) {
      goto LABEL_20;
    }
    goto LABEL_37;
  }
LABEL_36:
  int v18 = *(_DWORD *)(a2 + 40);
  v3 |= 0x10u;
  *(_DWORD *)(result + 92) = v3;
  *(_DWORD *)(result + 40) = v18;
  int v2 = *(_DWORD *)(a2 + 92);
  if ((v2 & 0x40) == 0)
  {
LABEL_20:
    if ((v2 & 0x80) == 0) {
      goto LABEL_21;
    }
    goto LABEL_38;
  }
LABEL_37:
  int v19 = *(_DWORD *)(a2 + 48);
  v3 |= 0x40u;
  *(_DWORD *)(result + 92) = v3;
  *(_DWORD *)(result + 48) = v19;
  int v2 = *(_DWORD *)(a2 + 92);
  if ((v2 & 0x80) == 0)
  {
LABEL_21:
    if ((v2 & 0x20) == 0) {
      goto LABEL_22;
    }
    goto LABEL_39;
  }
LABEL_38:
  int v20 = *(_DWORD *)(a2 + 52);
  v3 |= 0x80u;
  *(_DWORD *)(result + 92) = v3;
  *(_DWORD *)(result + 52) = v20;
  int v2 = *(_DWORD *)(a2 + 92);
  if ((v2 & 0x20) == 0)
  {
LABEL_22:
    if ((v2 & 0x10000) == 0) {
      return result;
    }
LABEL_40:
    char v22 = *(unsigned char *)(a2 + 88);
    *(_DWORD *)(result + 92) = v3 | 0x10000;
    *(unsigned char *)(result + 88) = v22;
    return result;
  }
LABEL_39:
  int v21 = *(_DWORD *)(a2 + 44);
  v3 |= 0x20u;
  *(_DWORD *)(result + 92) = v3;
  *(_DWORD *)(result + 44) = v21;
  if ((*(_DWORD *)(a2 + 92) & 0x10000) != 0) {
    goto LABEL_40;
  }
  return result;
}

uint64_t sub_227B60764(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 92);
  if (v5)
  {
    PB::TextFormatter::format(this, "gpsDeltaTimestamp");
    int v5 = *(_DWORD *)(a1 + 92);
    if ((v5 & 0x10) == 0)
    {
LABEL_3:
      if ((v5 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_26;
    }
  }
  else if ((v5 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "gpsDeltaTimestampSeconds", *(float *)(a1 + 40));
  int v5 = *(_DWORD *)(a1 + 92);
  if ((v5 & 0x20) == 0)
  {
LABEL_4:
    if ((v5 & 0x40) == 0) {
      goto LABEL_5;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "gpsIsRealSample", *(float *)(a1 + 44));
  int v5 = *(_DWORD *)(a1 + 92);
  if ((v5 & 0x40) == 0)
  {
LABEL_5:
    if ((v5 & 0x80) == 0) {
      goto LABEL_6;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "gpsSpeedMetersPerSecond", *(float *)(a1 + 48));
  int v5 = *(_DWORD *)(a1 + 92);
  if ((v5 & 0x80) == 0)
  {
LABEL_6:
    if ((v5 & 2) == 0) {
      goto LABEL_7;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "gpsSpeedMilesPerHour", *(float *)(a1 + 52));
  int v5 = *(_DWORD *)(a1 + 92);
  if ((v5 & 2) == 0)
  {
LABEL_7:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(this, "gpsTimestamp");
  int v5 = *(_DWORD *)(a1 + 92);
  if ((v5 & 0x10000) == 0)
  {
LABEL_8:
    if ((v5 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "loggedAtEpoch");
  int v5 = *(_DWORD *)(a1 + 92);
  if ((v5 & 0x100) == 0)
  {
LABEL_9:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(this, "movingGpsCount");
  int v5 = *(_DWORD *)(a1 + 92);
  if ((v5 & 0x20000) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(this, "movingGpsCountResetRequired");
  int v5 = *(_DWORD *)(a1 + 92);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(this, "movingSpeedMetersPerSecondThreshold", *(float *)(a1 + 60));
  int v5 = *(_DWORD *)(a1 + 92);
  if ((v5 & 0x400) == 0)
  {
LABEL_12:
    if ((v5 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "movingSpeedMetersPerSecondThresholdFromSydneyB", *(float *)(a1 + 64));
  int v5 = *(_DWORD *)(a1 + 92);
  if ((v5 & 0x800) == 0)
  {
LABEL_13:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "numLowOrFakeSamplesInHistory");
  int v5 = *(_DWORD *)(a1 + 92);
  if ((v5 & 0x1000) == 0)
  {
LABEL_14:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "numSamplesInHistory");
  int v5 = *(_DWORD *)(a1 + 92);
  if ((v5 & 0x2000) == 0)
  {
LABEL_15:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "staticGpsCount");
  int v5 = *(_DWORD *)(a1 + 92);
  if ((v5 & 0x40000) == 0)
  {
LABEL_16:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "staticGpsCountResetRequired");
  int v5 = *(_DWORD *)(a1 + 92);
  if ((v5 & 0x4000) == 0)
  {
LABEL_17:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "staticSpeedMetersPerSecondThreshold", *(float *)(a1 + 80));
  int v5 = *(_DWORD *)(a1 + 92);
  if ((v5 & 0x8000) == 0)
  {
LABEL_18:
    if ((v5 & 4) == 0) {
      goto LABEL_19;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "staticSpeedMetersPerSecondThresholdFromSydneyB", *(float *)(a1 + 84));
  int v5 = *(_DWORD *)(a1 + 92);
  if ((v5 & 4) == 0)
  {
LABEL_19:
    if ((v5 & 8) == 0) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }
LABEL_41:
  PB::TextFormatter::format(this, "timestamp");
  if ((*(_DWORD *)(a1 + 92) & 8) != 0) {
LABEL_20:
  }
    PB::TextFormatter::format(this, "triggerTimestamp");
LABEL_21:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B60A08(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 & 7) <= 4)
      {
        switch((v11 >> 3))
        {
          case 'e':
            *(_DWORD *)(a1 + 92) |= 4u;
            unint64_t v27 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v28 = *(void *)this;
            if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
            {
              char v80 = 0;
              unsigned int v81 = 0;
              uint64_t v31 = 0;
              if (v2 <= v27) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v27)
                {
                  uint64_t v31 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_186;
                }
                unint64_t v82 = v27++;
                char v83 = *(unsigned char *)(v28 + v82);
                *((void *)this + 1) = v27;
                v31 |= (unint64_t)(v83 & 0x7F) << v80;
                if ((v83 & 0x80) == 0) {
                  break;
                }
                v80 += 7;
                BOOL v14 = v81++ > 8;
                if (v14)
                {
                  uint64_t v31 = 0;
LABEL_185:
                  unint64_t v2 = v82 + 1;
                  goto LABEL_186;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v31 = 0;
              }
              goto LABEL_185;
            }
            char v29 = 0;
            unsigned int v30 = 0;
            uint64_t v31 = 0;
            do
            {
              unint64_t v2 = v27 + 1;
              *((void *)this + 1) = v27 + 1;
              char v32 = *(unsigned char *)(v28 + v27);
              v31 |= (unint64_t)(v32 & 0x7F) << v29;
              if ((v32 & 0x80) == 0) {
                goto LABEL_186;
              }
              v29 += 7;
              unint64_t v27 = v2;
              BOOL v14 = v30++ > 8;
            }
            while (!v14);
            uint64_t v31 = 0;
LABEL_186:
            *(void *)(a1 + 24) = v31;
            break;
          case 'f':
            *(_DWORD *)(a1 + 92) |= 8u;
            unint64_t v41 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v42 = *(void *)this;
            if (v41 > 0xFFFFFFFFFFFFFFF5 || v41 + 10 > v2)
            {
              char v88 = 0;
              unsigned int v89 = 0;
              uint64_t v45 = 0;
              if (v2 <= v41) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v41)
                {
                  uint64_t v45 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_196;
                }
                unint64_t v90 = v41++;
                char v91 = *(unsigned char *)(v42 + v90);
                *((void *)this + 1) = v41;
                v45 |= (unint64_t)(v91 & 0x7F) << v88;
                if ((v91 & 0x80) == 0) {
                  break;
                }
                v88 += 7;
                BOOL v14 = v89++ > 8;
                if (v14)
                {
                  uint64_t v45 = 0;
LABEL_195:
                  unint64_t v2 = v90 + 1;
                  goto LABEL_196;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v45 = 0;
              }
              goto LABEL_195;
            }
            char v43 = 0;
            unsigned int v44 = 0;
            uint64_t v45 = 0;
            do
            {
              unint64_t v2 = v41 + 1;
              *((void *)this + 1) = v41 + 1;
              char v46 = *(unsigned char *)(v42 + v41);
              v45 |= (unint64_t)(v46 & 0x7F) << v43;
              if ((v46 & 0x80) == 0) {
                goto LABEL_196;
              }
              v43 += 7;
              unint64_t v41 = v2;
              BOOL v14 = v44++ > 8;
            }
            while (!v14);
            uint64_t v45 = 0;
LABEL_196:
            *(void *)(a1 + 32) = v45;
            break;
          case 'g':
            *(_DWORD *)(a1 + 92) |= 0x2000u;
            unint64_t v47 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v48 = *(void *)this;
            if (v47 > 0xFFFFFFFFFFFFFFF5 || v47 + 10 > v2)
            {
              char v92 = 0;
              unsigned int v93 = 0;
              uint64_t v51 = 0;
              if (v2 <= v47) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v47)
                {
                  LODWORD(v51) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_201;
                }
                unint64_t v94 = v47++;
                char v95 = *(unsigned char *)(v48 + v94);
                *((void *)this + 1) = v47;
                v51 |= (unint64_t)(v95 & 0x7F) << v92;
                if ((v95 & 0x80) == 0) {
                  break;
                }
                v92 += 7;
                BOOL v14 = v93++ > 8;
                if (v14)
                {
                  LODWORD(v51) = 0;
LABEL_200:
                  unint64_t v2 = v94 + 1;
                  goto LABEL_201;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v51) = 0;
              }
              goto LABEL_200;
            }
            char v49 = 0;
            unsigned int v50 = 0;
            uint64_t v51 = 0;
            do
            {
              unint64_t v2 = v47 + 1;
              *((void *)this + 1) = v47 + 1;
              char v52 = *(unsigned char *)(v48 + v47);
              v51 |= (unint64_t)(v52 & 0x7F) << v49;
              if ((v52 & 0x80) == 0) {
                goto LABEL_201;
              }
              v49 += 7;
              unint64_t v47 = v2;
              BOOL v14 = v50++ > 8;
            }
            while (!v14);
            LODWORD(v51) = 0;
LABEL_201:
            *(_DWORD *)(a1 + 76) = v51;
            break;
          case 'h':
            *(_DWORD *)(a1 + 92) |= 0x100u;
            unint64_t v53 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v54 = *(void *)this;
            if (v53 > 0xFFFFFFFFFFFFFFF5 || v53 + 10 > v2)
            {
              char v96 = 0;
              unsigned int v97 = 0;
              uint64_t v57 = 0;
              if (v2 <= v53) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v53)
                {
                  LODWORD(v57) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_206;
                }
                unint64_t v98 = v53++;
                char v99 = *(unsigned char *)(v54 + v98);
                *((void *)this + 1) = v53;
                v57 |= (unint64_t)(v99 & 0x7F) << v96;
                if ((v99 & 0x80) == 0) {
                  break;
                }
                v96 += 7;
                BOOL v14 = v97++ > 8;
                if (v14)
                {
                  LODWORD(v57) = 0;
LABEL_205:
                  unint64_t v2 = v98 + 1;
                  goto LABEL_206;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v57) = 0;
              }
              goto LABEL_205;
            }
            char v55 = 0;
            unsigned int v56 = 0;
            uint64_t v57 = 0;
            do
            {
              unint64_t v2 = v53 + 1;
              *((void *)this + 1) = v53 + 1;
              char v58 = *(unsigned char *)(v54 + v53);
              v57 |= (unint64_t)(v58 & 0x7F) << v55;
              if ((v58 & 0x80) == 0) {
                goto LABEL_206;
              }
              v55 += 7;
              unint64_t v53 = v2;
              BOOL v14 = v56++ > 8;
            }
            while (!v14);
            LODWORD(v57) = 0;
LABEL_206:
            *(_DWORD *)(a1 + 56) = v57;
            break;
          case 'i':
            *(_DWORD *)(a1 + 92) |= 0x40000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v60 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v59 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v60 = v59 != 0;
            }
            *(unsigned char *)(a1 + 90) = v60;
            break;
          case 'j':
            *(_DWORD *)(a1 + 92) |= 0x20000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v62 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v61 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v62 = v61 != 0;
            }
            *(unsigned char *)(a1 + 89) = v62;
            break;
          case 'k':
            *(_DWORD *)(a1 + 92) |= 0x1000u;
            unint64_t v63 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v64 = *(void *)this;
            if (v63 > 0xFFFFFFFFFFFFFFF5 || v63 + 10 > v2)
            {
              char v100 = 0;
              unsigned int v101 = 0;
              uint64_t v67 = 0;
              if (v2 <= v63) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v63)
                {
                  LODWORD(v67) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_211;
                }
                unint64_t v102 = v63++;
                char v103 = *(unsigned char *)(v64 + v102);
                *((void *)this + 1) = v63;
                v67 |= (unint64_t)(v103 & 0x7F) << v100;
                if ((v103 & 0x80) == 0) {
                  break;
                }
                v100 += 7;
                BOOL v14 = v101++ > 8;
                if (v14)
                {
                  LODWORD(v67) = 0;
LABEL_210:
                  unint64_t v2 = v102 + 1;
                  goto LABEL_211;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v67) = 0;
              }
              goto LABEL_210;
            }
            char v65 = 0;
            unsigned int v66 = 0;
            uint64_t v67 = 0;
            do
            {
              unint64_t v2 = v63 + 1;
              *((void *)this + 1) = v63 + 1;
              char v68 = *(unsigned char *)(v64 + v63);
              v67 |= (unint64_t)(v68 & 0x7F) << v65;
              if ((v68 & 0x80) == 0) {
                goto LABEL_211;
              }
              v65 += 7;
              unint64_t v63 = v2;
              BOOL v14 = v66++ > 8;
            }
            while (!v14);
            LODWORD(v67) = 0;
LABEL_211:
            *(_DWORD *)(a1 + 72) = v67;
            break;
          case 'l':
            *(_DWORD *)(a1 + 92) |= 0x800u;
            unint64_t v69 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v70 = *(void *)this;
            if (v69 > 0xFFFFFFFFFFFFFFF5 || v69 + 10 > v2)
            {
              char v104 = 0;
              unsigned int v105 = 0;
              uint64_t v73 = 0;
              if (v2 <= v69) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v69)
                {
                  LODWORD(v73) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_216;
                }
                unint64_t v106 = v69++;
                char v107 = *(unsigned char *)(v70 + v106);
                *((void *)this + 1) = v69;
                v73 |= (unint64_t)(v107 & 0x7F) << v104;
                if ((v107 & 0x80) == 0) {
                  break;
                }
                v104 += 7;
                BOOL v14 = v105++ > 8;
                if (v14)
                {
                  LODWORD(v73) = 0;
LABEL_215:
                  unint64_t v2 = v106 + 1;
                  goto LABEL_216;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v73) = 0;
              }
              goto LABEL_215;
            }
            char v71 = 0;
            unsigned int v72 = 0;
            uint64_t v73 = 0;
            do
            {
              unint64_t v2 = v69 + 1;
              *((void *)this + 1) = v69 + 1;
              char v74 = *(unsigned char *)(v70 + v69);
              v73 |= (unint64_t)(v74 & 0x7F) << v71;
              if ((v74 & 0x80) == 0) {
                goto LABEL_216;
              }
              v71 += 7;
              unint64_t v69 = v2;
              BOOL v14 = v72++ > 8;
            }
            while (!v14);
            LODWORD(v73) = 0;
LABEL_216:
            *(_DWORD *)(a1 + 68) = v73;
            break;
          default:
            JUMPOUT(0);
        }
      }
      else
      {
        switch((int)v20)
        {
          case 201:
            *(_DWORD *)(a1 + 92) |= 2u;
            unint64_t v21 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v22 = *(void *)this;
            if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
            {
              char v76 = 0;
              unsigned int v77 = 0;
              uint64_t v25 = 0;
              if (v2 <= v21) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v21)
                {
                  uint64_t v25 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_181;
                }
                unint64_t v78 = v21++;
                char v79 = *(unsigned char *)(v22 + v78);
                *((void *)this + 1) = v21;
                v25 |= (unint64_t)(v79 & 0x7F) << v76;
                if ((v79 & 0x80) == 0) {
                  break;
                }
                v76 += 7;
                BOOL v14 = v77++ > 8;
                if (v14)
                {
                  uint64_t v25 = 0;
LABEL_180:
                  unint64_t v2 = v78 + 1;
                  goto LABEL_181;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v25 = 0;
              }
              goto LABEL_180;
            }
            char v23 = 0;
            unsigned int v24 = 0;
            uint64_t v25 = 0;
            do
            {
              unint64_t v2 = v21 + 1;
              *((void *)this + 1) = v21 + 1;
              char v26 = *(unsigned char *)(v22 + v21);
              v25 |= (unint64_t)(v26 & 0x7F) << v23;
              if ((v26 & 0x80) == 0) {
                goto LABEL_181;
              }
              v23 += 7;
              unint64_t v21 = v2;
              BOOL v14 = v24++ > 8;
            }
            while (!v14);
            uint64_t v25 = 0;
LABEL_181:
            *(void *)(a1 + 16) = v25;
            break;
          case 202:
            *(_DWORD *)(a1 + 92) |= 1u;
            unint64_t v33 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v34 = *(void *)this;
            if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
            {
              char v84 = 0;
              unsigned int v85 = 0;
              uint64_t v37 = 0;
              if (v2 <= v33) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v33)
                {
                  uint64_t v37 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_191;
                }
                unint64_t v86 = v33++;
                char v87 = *(unsigned char *)(v34 + v86);
                *((void *)this + 1) = v33;
                v37 |= (unint64_t)(v87 & 0x7F) << v84;
                if ((v87 & 0x80) == 0) {
                  break;
                }
                v84 += 7;
                BOOL v14 = v85++ > 8;
                if (v14)
                {
                  uint64_t v37 = 0;
LABEL_190:
                  unint64_t v2 = v86 + 1;
                  goto LABEL_191;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v37 = 0;
              }
              goto LABEL_190;
            }
            char v35 = 0;
            unsigned int v36 = 0;
            uint64_t v37 = 0;
            do
            {
              unint64_t v2 = v33 + 1;
              *((void *)this + 1) = v33 + 1;
              char v38 = *(unsigned char *)(v34 + v33);
              v37 |= (unint64_t)(v38 & 0x7F) << v35;
              if ((v38 & 0x80) == 0) {
                goto LABEL_191;
              }
              v35 += 7;
              unint64_t v33 = v2;
              BOOL v14 = v36++ > 8;
            }
            while (!v14);
            uint64_t v37 = 0;
LABEL_191:
            *(void *)(a1 + 8) = v37;
            break;
          case 203:
            *(_DWORD *)(a1 + 92) |= 0x10u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
              goto LABEL_112;
            }
            *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
            goto LABEL_176;
          case 204:
            *(_DWORD *)(a1 + 92) |= 0x40u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
              goto LABEL_112;
            }
            *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
            goto LABEL_176;
          case 205:
            *(_DWORD *)(a1 + 92) |= 0x80u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
              goto LABEL_112;
            }
            *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
            goto LABEL_176;
          case 206:
            *(_DWORD *)(a1 + 92) |= 0x20u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2))
            {
LABEL_112:
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
LABEL_176:
              unint64_t v2 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v2;
            }
            break;
          case 207:
            *(_DWORD *)(a1 + 92) |= 0x10000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v40 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v39 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v40 = v39 != 0;
            }
            *(unsigned char *)(a1 + 88) = v40;
            break;
          default:
            switch((int)v20)
            {
              case 1:
                *(_DWORD *)(a1 + 92) |= 0x200u;
                unint64_t v2 = *((void *)this + 1);
                if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                  goto LABEL_112;
                }
                *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v2);
                goto LABEL_176;
              case 2:
                *(_DWORD *)(a1 + 92) |= 0x4000u;
                unint64_t v2 = *((void *)this + 1);
                if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                  goto LABEL_112;
                }
                *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v2);
                goto LABEL_176;
              case 3:
                *(_DWORD *)(a1 + 92) |= 0x400u;
                unint64_t v2 = *((void *)this + 1);
                if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                  goto LABEL_112;
                }
                *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v2);
                goto LABEL_176;
              case 4:
                *(_DWORD *)(a1 + 92) |= 0x8000u;
                unint64_t v2 = *((void *)this + 1);
                if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                  goto LABEL_112;
                }
                *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v2);
                goto LABEL_176;
              default:
                uint64_t result = PB::Reader::skip(this);
                if (!result) {
                  return result;
                }
                unint64_t v2 = *((void *)this + 1);
                break;
            }
            break;
        }
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B61620(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 92);
  if ((v4 & 0x200) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(result + 60));
    int v4 = *(_DWORD *)(v3 + 92);
    if ((v4 & 0x4000) == 0)
    {
LABEL_3:
      if ((v4 & 0x400) == 0) {
        goto LABEL_4;
      }
      goto LABEL_23;
    }
  }
  else if ((v4 & 0x4000) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80));
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x400) == 0)
  {
LABEL_4:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64));
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x8000) == 0)
  {
LABEL_5:
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84));
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 4) == 0)
  {
LABEL_6:
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 8) == 0)
  {
LABEL_7:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x2000) == 0)
  {
LABEL_8:
    if ((v4 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x100) == 0)
  {
LABEL_9:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x40000) == 0)
  {
LABEL_10:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x20000) == 0)
  {
LABEL_11:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x1000) == 0)
  {
LABEL_12:
    if ((v4 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x800) == 0)
  {
LABEL_13:
    if ((v4 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 2) == 0)
  {
LABEL_14:
    if ((v4 & 1) == 0) {
      goto LABEL_15;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 1) == 0)
  {
LABEL_15:
    if ((v4 & 0x10) == 0) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x10) == 0)
  {
LABEL_16:
    if ((v4 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x40) == 0)
  {
LABEL_17:
    if ((v4 & 0x80) == 0) {
      goto LABEL_18;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48));
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x80) == 0)
  {
LABEL_18:
    if ((v4 & 0x20) == 0) {
      goto LABEL_19;
    }
LABEL_38:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44));
    if ((*(_DWORD *)(v3 + 92) & 0x10000) == 0) {
      return result;
    }
    goto LABEL_39;
  }
LABEL_37:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x20) != 0) {
    goto LABEL_38;
  }
LABEL_19:
  if ((v4 & 0x10000) == 0) {
    return result;
  }
LABEL_39:

  return PB::Writer::write(this);
}

void *sub_227B6186C(void *result)
{
  *uint64_t result = &unk_26DC20CB0;
  *(void *)((char *)result + 172) = 0;
  return result;
}

void sub_227B61894(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227B618CC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC20CB0;
  *(void *)(a1 + 172) = 0;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x20000000) != 0)
  {
    float result = *(float *)(a2 + 140);
    uint64_t v3 = 0x20000000;
    *(void *)(a1 + 172) = 0x20000000;
    *(float *)(a1 + 140) = result;
    uint64_t v2 = *(void *)(a2 + 172);
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v3 = 0;
  if ((v2 & 0x8000000) != 0)
  {
LABEL_5:
    float result = *(float *)(a2 + 132);
    v3 |= 0x8000000uLL;
    *(void *)(a1 + 172) = v3;
    *(float *)(a1 + 132) = result;
    uint64_t v2 = *(void *)(a2 + 172);
  }
LABEL_6:
  if ((v2 & 0x2000000) != 0)
  {
    float result = *(float *)(a2 + 124);
    v3 |= 0x2000000uLL;
    *(void *)(a1 + 172) = v3;
    *(float *)(a1 + 124) = result;
    uint64_t v2 = *(void *)(a2 + 172);
    if ((v2 & 0x80000000) == 0)
    {
LABEL_8:
      if ((v2 & 0x100000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_53;
    }
  }
  else if ((v2 & 0x80000000) == 0)
  {
    goto LABEL_8;
  }
  float result = *(float *)(a2 + 148);
  v3 |= 0x80000000uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 148) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x100000) == 0)
  {
LABEL_9:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_54;
  }
LABEL_53:
  int v5 = *(_DWORD *)(a2 + 104);
  v3 |= 0x100000uLL;
  *(void *)(a1 + 172) = v3;
  *(_DWORD *)(a1 + 104) = v5;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x80000) == 0)
  {
LABEL_10:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_55;
  }
LABEL_54:
  int v6 = *(_DWORD *)(a2 + 100);
  v3 |= 0x80000uLL;
  *(void *)(a1 + 172) = v3;
  *(_DWORD *)(a1 + 100) = v6;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x800000) == 0)
  {
LABEL_11:
    if ((v2 & 0x40000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_56;
  }
LABEL_55:
  float result = *(float *)(a2 + 116);
  v3 |= 0x800000uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 116) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x40000000) == 0)
  {
LABEL_12:
    if ((v2 & 0x10000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_57;
  }
LABEL_56:
  float result = *(float *)(a2 + 144);
  v3 |= 0x40000000uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 144) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_13:
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_58;
  }
LABEL_57:
  float result = *(float *)(a2 + 136);
  v3 |= 0x10000000uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 136) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_14:
    if ((v2 & 0x100000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_59;
  }
LABEL_58:
  float result = *(float *)(a2 + 128);
  v3 |= 0x4000000uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 128) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x100000000) == 0)
  {
LABEL_15:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_60;
  }
LABEL_59:
  float result = *(float *)(a2 + 152);
  v3 |= 0x100000000uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 152) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x200000) == 0)
  {
LABEL_16:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_61;
  }
LABEL_60:
  int v7 = *(_DWORD *)(a2 + 108);
  v3 |= 0x200000uLL;
  *(void *)(a1 + 172) = v3;
  *(_DWORD *)(a1 + 108) = v7;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x400000) == 0)
  {
LABEL_17:
    if ((v2 & 0x40000000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_62;
  }
LABEL_61:
  int v8 = *(_DWORD *)(a2 + 112);
  v3 |= 0x400000uLL;
  *(void *)(a1 + 172) = v3;
  *(_DWORD *)(a1 + 112) = v8;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x40000000000) == 0)
  {
LABEL_18:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_63;
  }
LABEL_62:
  char v9 = *(unsigned char *)(a2 + 165);
  v3 |= 0x40000000000uLL;
  *(void *)(a1 + 172) = v3;
  *(unsigned char *)(a1 + 165) = v9;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x10000) == 0)
  {
LABEL_19:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_64;
  }
LABEL_63:
  float result = *(float *)(a2 + 88);
  v3 |= 0x10000uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 88) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x4000) == 0)
  {
LABEL_20:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_65;
  }
LABEL_64:
  float result = *(float *)(a2 + 80);
  v3 |= 0x4000uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 80) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x1000) == 0)
  {
LABEL_21:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_66;
  }
LABEL_65:
  float result = *(float *)(a2 + 72);
  v3 |= 0x1000uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 72) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x20000) == 0)
  {
LABEL_22:
    if ((v2 & 0x10000000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_67;
  }
LABEL_66:
  float result = *(float *)(a2 + 92);
  v3 |= 0x20000uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 92) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x10000000000) == 0)
  {
LABEL_23:
    if ((v2 & 0x200000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_68;
  }
LABEL_67:
  char v10 = *(unsigned char *)(a2 + 163);
  v3 |= 0x10000000000uLL;
  *(void *)(a1 + 172) = v3;
  *(unsigned char *)(a1 + 163) = v10;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x200000000) == 0)
  {
LABEL_24:
    if ((v2 & 0x100000000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_69;
  }
LABEL_68:
  char v11 = *(unsigned char *)(a2 + 156);
  v3 |= 0x200000000uLL;
  *(void *)(a1 + 172) = v3;
  *(unsigned char *)(a1 + 156) = v11;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x100000000000) == 0)
  {
LABEL_25:
    if ((v2 & 0x800000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_70;
  }
LABEL_69:
  char v12 = *(unsigned char *)(a2 + 167);
  v3 |= 0x100000000000uLL;
  *(void *)(a1 + 172) = v3;
  *(unsigned char *)(a1 + 167) = v12;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x800000000) == 0)
  {
LABEL_26:
    if ((v2 & 0x4000000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_71;
  }
LABEL_70:
  char v13 = *(unsigned char *)(a2 + 158);
  v3 |= 0x800000000uLL;
  *(void *)(a1 + 172) = v3;
  *(unsigned char *)(a1 + 158) = v13;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x4000000000) == 0)
  {
LABEL_27:
    if ((v2 & 0x80000000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_72;
  }
LABEL_71:
  char v14 = *(unsigned char *)(a2 + 161);
  v3 |= 0x4000000000uLL;
  *(void *)(a1 + 172) = v3;
  *(unsigned char *)(a1 + 161) = v14;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x80000000000) == 0)
  {
LABEL_28:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_73;
  }
LABEL_72:
  char v15 = *(unsigned char *)(a2 + 166);
  v3 |= 0x80000000000uLL;
  *(void *)(a1 + 172) = v3;
  *(unsigned char *)(a1 + 166) = v15;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x8000) == 0)
  {
LABEL_29:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_74;
  }
LABEL_73:
  float result = *(float *)(a2 + 84);
  v3 |= 0x8000uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 84) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x2000) == 0)
  {
LABEL_30:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_75;
  }
LABEL_74:
  float result = *(float *)(a2 + 76);
  v3 |= 0x2000uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 76) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x40000) == 0)
  {
LABEL_31:
    if ((v2 & 0x20000000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_76;
  }
LABEL_75:
  float result = *(float *)(a2 + 96);
  v3 |= 0x40000uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 96) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x20000000000) == 0)
  {
LABEL_32:
    if ((v2 & 0x400000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_77;
  }
LABEL_76:
  char v16 = *(unsigned char *)(a2 + 164);
  v3 |= 0x20000000000uLL;
  *(void *)(a1 + 172) = v3;
  *(unsigned char *)(a1 + 164) = v16;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x400000000) == 0)
  {
LABEL_33:
    if ((v2 & 0x200000000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_78;
  }
LABEL_77:
  char v17 = *(unsigned char *)(a2 + 157);
  v3 |= 0x400000000uLL;
  *(void *)(a1 + 172) = v3;
  *(unsigned char *)(a1 + 157) = v17;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x200000000000) == 0)
  {
LABEL_34:
    if ((v2 & 0x1000000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_79;
  }
LABEL_78:
  char v18 = *(unsigned char *)(a2 + 168);
  v3 |= 0x200000000000uLL;
  *(void *)(a1 + 172) = v3;
  *(unsigned char *)(a1 + 168) = v18;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x1000000000) == 0)
  {
LABEL_35:
    if ((v2 & 0x8000000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_80;
  }
LABEL_79:
  char v19 = *(unsigned char *)(a2 + 159);
  v3 |= 0x1000000000uLL;
  *(void *)(a1 + 172) = v3;
  *(unsigned char *)(a1 + 159) = v19;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x8000000000) == 0)
  {
LABEL_36:
    if ((v2 & 0x2000000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_81;
  }
LABEL_80:
  char v20 = *(unsigned char *)(a2 + 162);
  v3 |= 0x8000000000uLL;
  *(void *)(a1 + 172) = v3;
  *(unsigned char *)(a1 + 162) = v20;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x2000000000) == 0)
  {
LABEL_37:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_82;
  }
LABEL_81:
  char v21 = *(unsigned char *)(a2 + 160);
  v3 |= 0x2000000000uLL;
  *(void *)(a1 + 172) = v3;
  *(unsigned char *)(a1 + 160) = v21;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_38:
    if ((v2 & 4) == 0) {
      goto LABEL_39;
    }
    goto LABEL_83;
  }
LABEL_82:
  int v22 = *(_DWORD *)(a2 + 120);
  v3 |= 0x1000000uLL;
  *(void *)(a1 + 172) = v3;
  *(_DWORD *)(a1 + 120) = v22;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 4) == 0)
  {
LABEL_39:
    if ((v2 & 8) == 0) {
      goto LABEL_40;
    }
    goto LABEL_84;
  }
LABEL_83:
  uint64_t v23 = *(void *)(a2 + 24);
  v3 |= 4uLL;
  *(void *)(a1 + 172) = v3;
  *(void *)(a1 + 24) = v23;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 8) == 0)
  {
LABEL_40:
    if ((v2 & 0x10) == 0) {
      goto LABEL_41;
    }
    goto LABEL_85;
  }
LABEL_84:
  uint64_t v24 = *(void *)(a2 + 32);
  v3 |= 8uLL;
  *(void *)(a1 + 172) = v3;
  *(void *)(a1 + 32) = v24;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x10) == 0)
  {
LABEL_41:
    if ((v2 & 0x80) == 0) {
      goto LABEL_42;
    }
    goto LABEL_86;
  }
LABEL_85:
  float result = *(float *)(a2 + 40);
  v3 |= 0x10uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 40) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x80) == 0)
  {
LABEL_42:
    if ((v2 & 0x100) == 0) {
      goto LABEL_43;
    }
    goto LABEL_87;
  }
LABEL_86:
  float result = *(float *)(a2 + 52);
  v3 |= 0x80uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 52) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x100) == 0)
  {
LABEL_43:
    if ((v2 & 0x800) == 0) {
      goto LABEL_44;
    }
    goto LABEL_88;
  }
LABEL_87:
  float result = *(float *)(a2 + 56);
  v3 |= 0x100uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 56) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x800) == 0)
  {
LABEL_44:
    if ((v2 & 1) == 0) {
      goto LABEL_45;
    }
    goto LABEL_89;
  }
LABEL_88:
  float result = *(float *)(a2 + 68);
  v3 |= 0x800uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 68) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 1) == 0)
  {
LABEL_45:
    if ((v2 & 2) == 0) {
      goto LABEL_46;
    }
    goto LABEL_90;
  }
LABEL_89:
  uint64_t v25 = *(void *)(a2 + 8);
  v3 |= 1uLL;
  *(void *)(a1 + 172) = v3;
  *(void *)(a1 + 8) = v25;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 2) == 0)
  {
LABEL_46:
    if ((v2 & 0x20) == 0) {
      goto LABEL_47;
    }
    goto LABEL_91;
  }
LABEL_90:
  uint64_t v26 = *(void *)(a2 + 16);
  v3 |= 2uLL;
  *(void *)(a1 + 172) = v3;
  *(void *)(a1 + 16) = v26;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x20) == 0)
  {
LABEL_47:
    if ((v2 & 0x40) == 0) {
      goto LABEL_48;
    }
    goto LABEL_92;
  }
LABEL_91:
  float result = *(float *)(a2 + 44);
  v3 |= 0x20uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 44) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x40) == 0)
  {
LABEL_48:
    if ((v2 & 0x200) == 0) {
      goto LABEL_49;
    }
    goto LABEL_93;
  }
LABEL_92:
  float result = *(float *)(a2 + 48);
  v3 |= 0x40uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 48) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x200) == 0)
  {
LABEL_49:
    if ((v2 & 0x400) == 0) {
      return result;
    }
LABEL_94:
    float result = *(float *)(a2 + 64);
    *(void *)(a1 + 172) = v3 | 0x400;
    *(float *)(a1 + 64) = result;
    return result;
  }
LABEL_93:
  float result = *(float *)(a2 + 60);
  v3 |= 0x200uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 60) = result;
  if ((*(void *)(a2 + 172) & 0x400) != 0) {
    goto LABEL_94;
  }
  return result;
}

uint64_t sub_227B61E00(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x10) != 0)
  {
    PB::TextFormatter::format(this, "chaosAtMaxEnergy", *(float *)(a1 + 40));
    uint64_t v5 = *(void *)(a1 + 172);
    if ((v5 & 0x20) == 0)
    {
LABEL_3:
      if ((v5 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_53;
    }
  }
  else if ((v5 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "chaosAtMaxEnergyRollover", *(float *)(a1 + 44));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x40) == 0)
  {
LABEL_4:
    if ((v5 & 0x80) == 0) {
      goto LABEL_5;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(this, "chaosAtMaxEnergyRolloverTimestamp", *(float *)(a1 + 48));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x80) == 0)
  {
LABEL_5:
    if ((v5 & 0x200000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(this, "chaosAtMaxEnergyTimestamp", *(float *)(a1 + 52));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x200000000) == 0)
  {
LABEL_6:
    if ((v5 & 0x400000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_56;
  }
LABEL_55:
  PB::TextFormatter::format(this, "chaosMet");
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x400000000) == 0)
  {
LABEL_7:
    if ((v5 & 0x800000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_57;
  }
LABEL_56:
  PB::TextFormatter::format(this, "chaosMetRollover");
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x800000000) == 0)
  {
LABEL_8:
    if ((v5 & 0x1000000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_58;
  }
LABEL_57:
  PB::TextFormatter::format(this, "chaosOrSaturationMet");
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x1000000000) == 0)
  {
LABEL_9:
    if ((v5 & 0x2000000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_59;
  }
LABEL_58:
  PB::TextFormatter::format(this, "chaosOrSaturationMetRollover");
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x2000000000) == 0)
  {
LABEL_10:
    if ((v5 & 0x4000000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_60;
  }
LABEL_59:
  PB::TextFormatter::format(this, "didProcess");
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x4000000000) == 0)
  {
LABEL_11:
    if ((v5 & 0x8000000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_61;
  }
LABEL_60:
  PB::TextFormatter::format(this, "energyAndChaosOrSaturationMet");
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x8000000000) == 0)
  {
LABEL_12:
    if ((v5 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_62;
  }
LABEL_61:
  PB::TextFormatter::format(this, "energyAndChaosOrSaturationMetRollover");
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x100) == 0)
  {
LABEL_13:
    if ((v5 & 0x200) == 0) {
      goto LABEL_14;
    }
    goto LABEL_63;
  }
LABEL_62:
  PB::TextFormatter::format(this, "energyAtMaxChaos", *(float *)(a1 + 56));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x200) == 0)
  {
LABEL_14:
    if ((v5 & 0x400) == 0) {
      goto LABEL_15;
    }
    goto LABEL_64;
  }
LABEL_63:
  PB::TextFormatter::format(this, "energyAtMaxChaosRollover", *(float *)(a1 + 60));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x400) == 0)
  {
LABEL_15:
    if ((v5 & 0x800) == 0) {
      goto LABEL_16;
    }
    goto LABEL_65;
  }
LABEL_64:
  PB::TextFormatter::format(this, "energyAtMaxChaosRolloverTimestamp", *(float *)(a1 + 64));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x800) == 0)
  {
LABEL_16:
    if ((v5 & 0x10000000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_66;
  }
LABEL_65:
  PB::TextFormatter::format(this, "energyAtMaxChaosTimestamp", *(float *)(a1 + 68));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x10000000000) == 0)
  {
LABEL_17:
    if ((v5 & 0x20000000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_67;
  }
LABEL_66:
  PB::TextFormatter::format(this, "energyMet");
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x20000000000) == 0)
  {
LABEL_18:
    if ((v5 & 1) == 0) {
      goto LABEL_19;
    }
    goto LABEL_68;
  }
LABEL_67:
  PB::TextFormatter::format(this, "energyMetRollover");
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 1) == 0)
  {
LABEL_19:
    if ((v5 & 2) == 0) {
      goto LABEL_20;
    }
    goto LABEL_69;
  }
LABEL_68:
  PB::TextFormatter::format(this, "epochFirstTimestamp");
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 2) == 0)
  {
LABEL_20:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_70;
  }
LABEL_69:
  PB::TextFormatter::format(this, "epochLastTimestamp");
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x1000) == 0)
  {
LABEL_21:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_71;
  }
LABEL_70:
  PB::TextFormatter::format(this, "maxChaos", *(float *)(a1 + 72));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x2000) == 0)
  {
LABEL_22:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_72;
  }
LABEL_71:
  PB::TextFormatter::format(this, "maxChaosRollover", *(float *)(a1 + 76));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x4000) == 0)
  {
LABEL_23:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_73;
  }
LABEL_72:
  PB::TextFormatter::format(this, "maxEnergy", *(float *)(a1 + 80));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x8000) == 0)
  {
LABEL_24:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_74;
  }
LABEL_73:
  PB::TextFormatter::format(this, "maxEnergyRollover", *(float *)(a1 + 84));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x10000) == 0)
  {
LABEL_25:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_75;
  }
LABEL_74:
  PB::TextFormatter::format(this, "maxRMS", *(float *)(a1 + 88));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x20000) == 0)
  {
LABEL_26:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_76;
  }
LABEL_75:
  PB::TextFormatter::format(this, "maxSaturation", *(float *)(a1 + 92));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x40000) == 0)
  {
LABEL_27:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_77;
  }
LABEL_76:
  PB::TextFormatter::format(this, "maxSaturationRollover", *(float *)(a1 + 96));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x80000) == 0)
  {
LABEL_28:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_78;
  }
LABEL_77:
  PB::TextFormatter::format(this, "parameterRollingEnergyWindowSize");
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x100000) == 0)
  {
LABEL_29:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_79;
  }
LABEL_78:
  PB::TextFormatter::format(this, "parameterRollingPercentileWindowSize");
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x200000) == 0)
  {
LABEL_30:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_80;
  }
LABEL_79:
  PB::TextFormatter::format(this, "parameterRolloverRollingEnergyWindowSize");
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x400000) == 0)
  {
LABEL_31:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_81;
  }
LABEL_80:
  PB::TextFormatter::format(this, "parameterRolloverRollingPercentileWindowSize");
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x800000) == 0)
  {
LABEL_32:
    if ((v5 & 0x40000000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_82;
  }
LABEL_81:
  PB::TextFormatter::format(this, "parameterSaturationY", *(float *)(a1 + 116));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x40000000000) == 0)
  {
LABEL_33:
    if ((v5 & 0x80000000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_83;
  }
LABEL_82:
  PB::TextFormatter::format(this, "passThru");
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x80000000000) == 0)
  {
LABEL_34:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_84;
  }
LABEL_83:
  PB::TextFormatter::format(this, "passThruRollover");
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_35:
    if ((v5 & 0x100000000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_85;
  }
LABEL_84:
  PB::TextFormatter::format(this, "rmsSampleCount");
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x100000000000) == 0)
  {
LABEL_36:
    if ((v5 & 0x200000000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_86;
  }
LABEL_85:
  PB::TextFormatter::format(this, "saturationMet");
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x200000000000) == 0)
  {
LABEL_37:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_87;
  }
LABEL_86:
  PB::TextFormatter::format(this, "saturationMetRollover");
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_38:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_88;
  }
LABEL_87:
  PB::TextFormatter::format(this, "thresholdChaos", *(float *)(a1 + 124));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_39:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_89;
  }
LABEL_88:
  PB::TextFormatter::format(this, "thresholdChaosRollover", *(float *)(a1 + 128));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_40:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_90;
  }
LABEL_89:
  PB::TextFormatter::format(this, "thresholdEnergy", *(float *)(a1 + 132));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_41:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_91;
  }
LABEL_90:
  PB::TextFormatter::format(this, "thresholdEnergyRollover", *(float *)(a1 + 136));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x20000000) == 0)
  {
LABEL_42:
    if ((v5 & 0x40000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_92;
  }
LABEL_91:
  PB::TextFormatter::format(this, "thresholdMaxRMS", *(float *)(a1 + 140));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x40000000) == 0)
  {
LABEL_43:
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_93;
  }
LABEL_92:
  PB::TextFormatter::format(this, "thresholdMaxRMSRollover", *(float *)(a1 + 144));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x80000000) == 0)
  {
LABEL_44:
    if ((v5 & 0x100000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_94;
  }
LABEL_93:
  PB::TextFormatter::format(this, "thresholdSaturationTime", *(float *)(a1 + 148));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x100000000) == 0)
  {
LABEL_45:
    if ((v5 & 4) == 0) {
      goto LABEL_46;
    }
    goto LABEL_95;
  }
LABEL_94:
  PB::TextFormatter::format(this, "thresholdSaturationTimeRollover", *(float *)(a1 + 152));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 4) == 0)
  {
LABEL_46:
    if ((v5 & 8) == 0) {
      goto LABEL_48;
    }
    goto LABEL_47;
  }
LABEL_95:
  PB::TextFormatter::format(this, "timestamp");
  if ((*(void *)(a1 + 172) & 8) != 0) {
LABEL_47:
  }
    PB::TextFormatter::format(this, "triggerTimestamp");
LABEL_48:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B62404(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 & 7) <= 4)
      {
        switch((v11 >> 3))
        {
          case 'e':
            *(void *)(a1 + 172) |= 0x40000000000uLL;
            unint64_t v21 = *((void *)this + 1);
            if (v21 >= *((void *)this + 2))
            {
              BOOL v24 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v22 = v21 + 1;
              int v23 = *(unsigned __int8 *)(*(void *)this + v21);
              *((void *)this + 1) = v22;
              BOOL v24 = v23 != 0;
            }
            *(unsigned char *)(a1 + 165) = v24;
            break;
          case 'f':
            *(void *)(a1 + 172) |= 0x10000uLL;
            unint64_t v66 = *((void *)this + 1);
            if (v66 > 0xFFFFFFFFFFFFFFFBLL || v66 + 4 > *((void *)this + 2)) {
              goto LABEL_126;
            }
            *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v66);
            goto LABEL_179;
          case 'g':
            *(void *)(a1 + 172) |= 0x4000uLL;
            unint64_t v67 = *((void *)this + 1);
            if (v67 > 0xFFFFFFFFFFFFFFFBLL || v67 + 4 > *((void *)this + 2)) {
              goto LABEL_126;
            }
            *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v67);
            goto LABEL_179;
          case 'h':
            *(void *)(a1 + 172) |= 0x1000uLL;
            unint64_t v68 = *((void *)this + 1);
            if (v68 > 0xFFFFFFFFFFFFFFFBLL || v68 + 4 > *((void *)this + 2)) {
              goto LABEL_126;
            }
            *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v68);
            goto LABEL_179;
          case 'i':
            *(void *)(a1 + 172) |= 0x20000uLL;
            unint64_t v69 = *((void *)this + 1);
            if (v69 > 0xFFFFFFFFFFFFFFFBLL || v69 + 4 > *((void *)this + 2)) {
              goto LABEL_126;
            }
            *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v69);
            goto LABEL_179;
          case 'j':
            *(void *)(a1 + 172) |= 0x10000000000uLL;
            unint64_t v70 = *((void *)this + 1);
            if (v70 >= *((void *)this + 2))
            {
              BOOL v73 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v71 = v70 + 1;
              int v72 = *(unsigned __int8 *)(*(void *)this + v70);
              *((void *)this + 1) = v71;
              BOOL v73 = v72 != 0;
            }
            *(unsigned char *)(a1 + 163) = v73;
            break;
          case 'k':
            *(void *)(a1 + 172) |= 0x200000000uLL;
            unint64_t v74 = *((void *)this + 1);
            if (v74 >= *((void *)this + 2))
            {
              BOOL v77 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v75 = v74 + 1;
              int v76 = *(unsigned __int8 *)(*(void *)this + v74);
              *((void *)this + 1) = v75;
              BOOL v77 = v76 != 0;
            }
            *(unsigned char *)(a1 + 156) = v77;
            break;
          case 'l':
            *(void *)(a1 + 172) |= 0x100000000000uLL;
            unint64_t v78 = *((void *)this + 1);
            if (v78 >= *((void *)this + 2))
            {
              BOOL v81 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v79 = v78 + 1;
              int v80 = *(unsigned __int8 *)(*(void *)this + v78);
              *((void *)this + 1) = v79;
              BOOL v81 = v80 != 0;
            }
            *(unsigned char *)(a1 + 167) = v81;
            break;
          case 'm':
            *(void *)(a1 + 172) |= 0x800000000uLL;
            unint64_t v82 = *((void *)this + 1);
            if (v82 >= *((void *)this + 2))
            {
              BOOL v85 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v83 = v82 + 1;
              int v84 = *(unsigned __int8 *)(*(void *)this + v82);
              *((void *)this + 1) = v83;
              BOOL v85 = v84 != 0;
            }
            *(unsigned char *)(a1 + 158) = v85;
            break;
          case 'n':
            *(void *)(a1 + 172) |= 0x4000000000uLL;
            unint64_t v86 = *((void *)this + 1);
            if (v86 >= *((void *)this + 2))
            {
              BOOL v89 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v87 = v86 + 1;
              int v88 = *(unsigned __int8 *)(*(void *)this + v86);
              *((void *)this + 1) = v87;
              BOOL v89 = v88 != 0;
            }
            *(unsigned char *)(a1 + 161) = v89;
            break;
          case 'o':
            *(void *)(a1 + 172) |= 0x80000000000uLL;
            unint64_t v90 = *((void *)this + 1);
            if (v90 >= *((void *)this + 2))
            {
              BOOL v93 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v91 = v90 + 1;
              int v92 = *(unsigned __int8 *)(*(void *)this + v90);
              *((void *)this + 1) = v91;
              BOOL v93 = v92 != 0;
            }
            *(unsigned char *)(a1 + 166) = v93;
            break;
          case 'p':
            *(void *)(a1 + 172) |= 0x8000uLL;
            unint64_t v94 = *((void *)this + 1);
            if (v94 > 0xFFFFFFFFFFFFFFFBLL || v94 + 4 > *((void *)this + 2)) {
              goto LABEL_126;
            }
            *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v94);
            goto LABEL_179;
          case 'q':
            *(void *)(a1 + 172) |= 0x2000uLL;
            unint64_t v95 = *((void *)this + 1);
            if (v95 > 0xFFFFFFFFFFFFFFFBLL || v95 + 4 > *((void *)this + 2)) {
              goto LABEL_126;
            }
            *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v95);
            goto LABEL_179;
          case 'r':
            *(void *)(a1 + 172) |= 0x40000uLL;
            unint64_t v96 = *((void *)this + 1);
            if (v96 > 0xFFFFFFFFFFFFFFFBLL || v96 + 4 > *((void *)this + 2))
            {
LABEL_126:
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v96);
LABEL_179:
              *((void *)this + 1) += 4;
            }
            break;
          case 's':
            *(void *)(a1 + 172) |= 0x20000000000uLL;
            unint64_t v97 = *((void *)this + 1);
            if (v97 >= *((void *)this + 2))
            {
              BOOL v100 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v98 = v97 + 1;
              int v99 = *(unsigned __int8 *)(*(void *)this + v97);
              *((void *)this + 1) = v98;
              BOOL v100 = v99 != 0;
            }
            *(unsigned char *)(a1 + 164) = v100;
            break;
          case 't':
            *(void *)(a1 + 172) |= 0x400000000uLL;
            unint64_t v101 = *((void *)this + 1);
            if (v101 >= *((void *)this + 2))
            {
              BOOL v104 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v102 = v101 + 1;
              int v103 = *(unsigned __int8 *)(*(void *)this + v101);
              *((void *)this + 1) = v102;
              BOOL v104 = v103 != 0;
            }
            *(unsigned char *)(a1 + 157) = v104;
            break;
          case 'u':
            *(void *)(a1 + 172) |= 0x200000000000uLL;
            unint64_t v105 = *((void *)this + 1);
            if (v105 >= *((void *)this + 2))
            {
              BOOL v108 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v106 = v105 + 1;
              int v107 = *(unsigned __int8 *)(*(void *)this + v105);
              *((void *)this + 1) = v106;
              BOOL v108 = v107 != 0;
            }
            *(unsigned char *)(a1 + 168) = v108;
            break;
          case 'v':
            *(void *)(a1 + 172) |= 0x1000000000uLL;
            unint64_t v109 = *((void *)this + 1);
            if (v109 >= *((void *)this + 2))
            {
              BOOL v112 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v110 = v109 + 1;
              int v111 = *(unsigned __int8 *)(*(void *)this + v109);
              *((void *)this + 1) = v110;
              BOOL v112 = v111 != 0;
            }
            *(unsigned char *)(a1 + 159) = v112;
            break;
          case 'w':
            *(void *)(a1 + 172) |= 0x8000000000uLL;
            unint64_t v113 = *((void *)this + 1);
            if (v113 >= *((void *)this + 2))
            {
              BOOL v116 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v114 = v113 + 1;
              int v115 = *(unsigned __int8 *)(*(void *)this + v113);
              *((void *)this + 1) = v114;
              BOOL v116 = v115 != 0;
            }
            *(unsigned char *)(a1 + 162) = v116;
            break;
          default:
            JUMPOUT(0);
        }
      }
      else
      {
        switch((v11 >> 3))
        {
          case 1u:
            *(void *)(a1 + 172) |= 0x20000000uLL;
            unint64_t v20 = *((void *)this + 1);
            if (v20 > 0xFFFFFFFFFFFFFFFBLL || v20 + 4 > *((void *)this + 2)) {
              goto LABEL_126;
            }
            *(_DWORD *)(a1 + 140) = *(_DWORD *)(*(void *)this + v20);
            goto LABEL_179;
          case 2u:
            *(void *)(a1 + 172) |= 0x8000000uLL;
            unint64_t v26 = *((void *)this + 1);
            if (v26 > 0xFFFFFFFFFFFFFFFBLL || v26 + 4 > *((void *)this + 2)) {
              goto LABEL_126;
            }
            *(_DWORD *)(a1 + 132) = *(_DWORD *)(*(void *)this + v26);
            goto LABEL_179;
          case 3u:
            *(void *)(a1 + 172) |= 0x2000000uLL;
            unint64_t v27 = *((void *)this + 1);
            if (v27 > 0xFFFFFFFFFFFFFFFBLL || v27 + 4 > *((void *)this + 2)) {
              goto LABEL_126;
            }
            *(_DWORD *)(a1 + 124) = *(_DWORD *)(*(void *)this + v27);
            goto LABEL_179;
          case 4u:
            *(void *)(a1 + 172) |= 0x80000000uLL;
            unint64_t v28 = *((void *)this + 1);
            if (v28 > 0xFFFFFFFFFFFFFFFBLL || v28 + 4 > *((void *)this + 2)) {
              goto LABEL_126;
            }
            *(_DWORD *)(a1 + 148) = *(_DWORD *)(*(void *)this + v28);
            goto LABEL_179;
          case 5u:
            *(void *)(a1 + 172) |= 0x100000uLL;
            unint64_t v29 = *((void *)this + 1);
            unint64_t v30 = *((void *)this + 2);
            uint64_t v31 = *(void *)this;
            if (v29 <= 0xFFFFFFFFFFFFFFF5 && v29 + 10 <= v30)
            {
              char v32 = 0;
              unsigned int v33 = 0;
              uint64_t v34 = 0;
              do
              {
                unint64_t v35 = v29 + 1;
                *((void *)this + 1) = v29 + 1;
                char v36 = *(unsigned char *)(v31 + v29);
                v34 |= (unint64_t)(v36 & 0x7F) << v32;
                if ((v36 & 0x80) == 0) {
                  goto LABEL_188;
                }
                v32 += 7;
                unint64_t v29 = v35;
                BOOL v14 = v33++ > 8;
              }
              while (!v14);
LABEL_135:
              LODWORD(v34) = 0;
              goto LABEL_188;
            }
            char v117 = 0;
            unsigned int v118 = 0;
            uint64_t v34 = 0;
            if (v30 <= v29) {
              unint64_t v30 = *((void *)this + 1);
            }
            while (2)
            {
              if (v30 == v29)
              {
                LODWORD(v34) = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v119 = v29 + 1;
                char v120 = *(unsigned char *)(v31 + v29);
                *((void *)this + 1) = v119;
                v34 |= (unint64_t)(v120 & 0x7F) << v117;
                if (v120 < 0)
                {
                  v117 += 7;
                  unint64_t v29 = v119;
                  BOOL v14 = v118++ > 8;
                  if (v14) {
                    goto LABEL_135;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v34) = 0;
                }
              }
              break;
            }
LABEL_188:
            *(_DWORD *)(a1 + 104) = v34;
            goto LABEL_180;
          case 6u:
            *(void *)(a1 + 172) |= 0x80000uLL;
            unint64_t v37 = *((void *)this + 1);
            unint64_t v38 = *((void *)this + 2);
            uint64_t v39 = *(void *)this;
            if (v37 <= 0xFFFFFFFFFFFFFFF5 && v37 + 10 <= v38)
            {
              char v40 = 0;
              unsigned int v41 = 0;
              uint64_t v42 = 0;
              do
              {
                unint64_t v43 = v37 + 1;
                *((void *)this + 1) = v37 + 1;
                char v44 = *(unsigned char *)(v39 + v37);
                v42 |= (unint64_t)(v44 & 0x7F) << v40;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_192;
                }
                v40 += 7;
                unint64_t v37 = v43;
                BOOL v14 = v41++ > 8;
              }
              while (!v14);
LABEL_142:
              LODWORD(v42) = 0;
              goto LABEL_192;
            }
            char v121 = 0;
            unsigned int v122 = 0;
            uint64_t v42 = 0;
            if (v38 <= v37) {
              unint64_t v38 = *((void *)this + 1);
            }
            while (2)
            {
              if (v38 == v37)
              {
                LODWORD(v42) = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v123 = v37 + 1;
                char v124 = *(unsigned char *)(v39 + v37);
                *((void *)this + 1) = v123;
                v42 |= (unint64_t)(v124 & 0x7F) << v121;
                if (v124 < 0)
                {
                  v121 += 7;
                  unint64_t v37 = v123;
                  BOOL v14 = v122++ > 8;
                  if (v14) {
                    goto LABEL_142;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v42) = 0;
                }
              }
              break;
            }
LABEL_192:
            *(_DWORD *)(a1 + 100) = v42;
            goto LABEL_180;
          case 7u:
            *(void *)(a1 + 172) |= 0x800000uLL;
            unint64_t v45 = *((void *)this + 1);
            if (v45 > 0xFFFFFFFFFFFFFFFBLL || v45 + 4 > *((void *)this + 2)) {
              goto LABEL_126;
            }
            *(_DWORD *)(a1 + 116) = *(_DWORD *)(*(void *)this + v45);
            goto LABEL_179;
          case 8u:
            *(void *)(a1 + 172) |= 0x40000000uLL;
            unint64_t v46 = *((void *)this + 1);
            if (v46 > 0xFFFFFFFFFFFFFFFBLL || v46 + 4 > *((void *)this + 2)) {
              goto LABEL_126;
            }
            *(_DWORD *)(a1 + 144) = *(_DWORD *)(*(void *)this + v46);
            goto LABEL_179;
          case 9u:
            *(void *)(a1 + 172) |= 0x10000000uLL;
            unint64_t v47 = *((void *)this + 1);
            if (v47 > 0xFFFFFFFFFFFFFFFBLL || v47 + 4 > *((void *)this + 2)) {
              goto LABEL_126;
            }
            *(_DWORD *)(a1 + 136) = *(_DWORD *)(*(void *)this + v47);
            goto LABEL_179;
          case 0xAu:
            *(void *)(a1 + 172) |= 0x4000000uLL;
            unint64_t v48 = *((void *)this + 1);
            if (v48 > 0xFFFFFFFFFFFFFFFBLL || v48 + 4 > *((void *)this + 2)) {
              goto LABEL_126;
            }
            *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v48);
            goto LABEL_179;
          case 0xBu:
            *(void *)(a1 + 172) |= 0x100000000uLL;
            unint64_t v49 = *((void *)this + 1);
            if (v49 > 0xFFFFFFFFFFFFFFFBLL || v49 + 4 > *((void *)this + 2)) {
              goto LABEL_126;
            }
            *(_DWORD *)(a1 + 152) = *(_DWORD *)(*(void *)this + v49);
            goto LABEL_179;
          case 0xCu:
            *(void *)(a1 + 172) |= 0x200000uLL;
            unint64_t v50 = *((void *)this + 1);
            unint64_t v51 = *((void *)this + 2);
            uint64_t v52 = *(void *)this;
            if (v50 <= 0xFFFFFFFFFFFFFFF5 && v50 + 10 <= v51)
            {
              char v53 = 0;
              unsigned int v54 = 0;
              uint64_t v55 = 0;
              do
              {
                unint64_t v56 = v50 + 1;
                *((void *)this + 1) = v50 + 1;
                char v57 = *(unsigned char *)(v52 + v50);
                v55 |= (unint64_t)(v57 & 0x7F) << v53;
                if ((v57 & 0x80) == 0) {
                  goto LABEL_196;
                }
                v53 += 7;
                unint64_t v50 = v56;
                BOOL v14 = v54++ > 8;
              }
              while (!v14);
LABEL_149:
              LODWORD(v55) = 0;
              goto LABEL_196;
            }
            char v125 = 0;
            unsigned int v126 = 0;
            uint64_t v55 = 0;
            if (v51 <= v50) {
              unint64_t v51 = *((void *)this + 1);
            }
            while (2)
            {
              if (v51 == v50)
              {
                LODWORD(v55) = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v127 = v50 + 1;
                char v128 = *(unsigned char *)(v52 + v50);
                *((void *)this + 1) = v127;
                v55 |= (unint64_t)(v128 & 0x7F) << v125;
                if (v128 < 0)
                {
                  v125 += 7;
                  unint64_t v50 = v127;
                  BOOL v14 = v126++ > 8;
                  if (v14) {
                    goto LABEL_149;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v55) = 0;
                }
              }
              break;
            }
LABEL_196:
            *(_DWORD *)(a1 + 108) = v55;
            goto LABEL_180;
          case 0xDu:
            *(void *)(a1 + 172) |= 0x400000uLL;
            unint64_t v58 = *((void *)this + 1);
            unint64_t v59 = *((void *)this + 2);
            uint64_t v60 = *(void *)this;
            if (v58 <= 0xFFFFFFFFFFFFFFF5 && v58 + 10 <= v59)
            {
              char v61 = 0;
              unsigned int v62 = 0;
              uint64_t v63 = 0;
              do
              {
                unint64_t v64 = v58 + 1;
                *((void *)this + 1) = v58 + 1;
                char v65 = *(unsigned char *)(v60 + v58);
                v63 |= (unint64_t)(v65 & 0x7F) << v61;
                if ((v65 & 0x80) == 0) {
                  goto LABEL_200;
                }
                v61 += 7;
                unint64_t v58 = v64;
                BOOL v14 = v62++ > 8;
              }
              while (!v14);
LABEL_156:
              LODWORD(v63) = 0;
              goto LABEL_200;
            }
            char v129 = 0;
            unsigned int v130 = 0;
            uint64_t v63 = 0;
            if (v59 <= v58) {
              unint64_t v59 = *((void *)this + 1);
            }
            break;
          default:
            uint64_t result = PB::Reader::skip(this);
            if (!result) {
              return result;
            }
            goto LABEL_180;
        }
        while (1)
        {
          if (v59 == v58)
          {
            LODWORD(v63) = 0;
            *((unsigned char *)this + 24) = 1;
            goto LABEL_200;
          }
          unint64_t v131 = v58 + 1;
          char v132 = *(unsigned char *)(v60 + v58);
          *((void *)this + 1) = v131;
          v63 |= (unint64_t)(v132 & 0x7F) << v129;
          if ((v132 & 0x80) == 0) {
            break;
          }
          v129 += 7;
          unint64_t v58 = v131;
          BOOL v14 = v130++ > 8;
          if (v14) {
            goto LABEL_156;
          }
        }
        if (*((unsigned char *)this + 24)) {
          LODWORD(v63) = 0;
        }
LABEL_200:
        *(_DWORD *)(a1 + 112) = v63;
      }
LABEL_180:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B63750(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(result + 172);
  if ((v4 & 0x20000000) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(result + 140));
    uint64_t v4 = *(void *)(v3 + 172);
    if ((v4 & 0x8000000) == 0)
    {
LABEL_3:
      if ((v4 & 0x2000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_50;
    }
  }
  else if ((v4 & 0x8000000) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 132));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_4:
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 124));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x80000000) == 0)
  {
LABEL_5:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 148));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x100000) == 0)
  {
LABEL_6:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x80000) == 0)
  {
LABEL_7:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x800000) == 0)
  {
LABEL_8:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 116));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x40000000) == 0)
  {
LABEL_9:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 144));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_10:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 136));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_11:
    if ((v4 & 0x100000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 128));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x100000000) == 0)
  {
LABEL_12:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 152));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x200000) == 0)
  {
LABEL_13:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_60;
  }
LABEL_59:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x400000) == 0)
  {
LABEL_14:
    if ((v4 & 0x40000000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x40000000000) == 0)
  {
LABEL_15:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x10000) == 0)
  {
LABEL_16:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 88));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x4000) == 0)
  {
LABEL_17:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_64;
  }
LABEL_63:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x1000) == 0)
  {
LABEL_18:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_65;
  }
LABEL_64:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x20000) == 0)
  {
LABEL_19:
    if ((v4 & 0x10000000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_66;
  }
LABEL_65:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 92));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x10000000000) == 0)
  {
LABEL_20:
    if ((v4 & 0x200000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_67;
  }
LABEL_66:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x200000000) == 0)
  {
LABEL_21:
    if ((v4 & 0x100000000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_68;
  }
LABEL_67:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x100000000000) == 0)
  {
LABEL_22:
    if ((v4 & 0x800000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_69;
  }
LABEL_68:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x800000000) == 0)
  {
LABEL_23:
    if ((v4 & 0x4000000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_70;
  }
LABEL_69:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x4000000000) == 0)
  {
LABEL_24:
    if ((v4 & 0x80000000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_71;
  }
LABEL_70:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x80000000000) == 0)
  {
LABEL_25:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_72;
  }
LABEL_71:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x8000) == 0)
  {
LABEL_26:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_73;
  }
LABEL_72:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x2000) == 0)
  {
LABEL_27:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_74;
  }
LABEL_73:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x40000) == 0)
  {
LABEL_28:
    if ((v4 & 0x20000000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_75;
  }
LABEL_74:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 96));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x20000000000) == 0)
  {
LABEL_29:
    if ((v4 & 0x400000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_76;
  }
LABEL_75:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x400000000) == 0)
  {
LABEL_30:
    if ((v4 & 0x200000000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_77;
  }
LABEL_76:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x200000000000) == 0)
  {
LABEL_31:
    if ((v4 & 0x1000000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_78;
  }
LABEL_77:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x1000000000) == 0)
  {
LABEL_32:
    if ((v4 & 0x8000000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_79;
  }
LABEL_78:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x8000000000) == 0)
  {
LABEL_33:
    if ((v4 & 0x2000000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_80;
  }
LABEL_79:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x2000000000) == 0)
  {
LABEL_34:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_81;
  }
LABEL_80:
  uint64_t result = PB::Writer::write(this);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_35:
    if ((v4 & 4) == 0) {
      goto LABEL_36;
    }
    goto LABEL_82;
  }
LABEL_81:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 4) == 0)
  {
LABEL_36:
    if ((v4 & 8) == 0) {
      goto LABEL_37;
    }
    goto LABEL_83;
  }
LABEL_82:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 8) == 0)
  {
LABEL_37:
    if ((v4 & 0x10) == 0) {
      goto LABEL_38;
    }
    goto LABEL_84;
  }
LABEL_83:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x10) == 0)
  {
LABEL_38:
    if ((v4 & 0x80) == 0) {
      goto LABEL_39;
    }
    goto LABEL_85;
  }
LABEL_84:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x80) == 0)
  {
LABEL_39:
    if ((v4 & 0x100) == 0) {
      goto LABEL_40;
    }
    goto LABEL_86;
  }
LABEL_85:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x100) == 0)
  {
LABEL_40:
    if ((v4 & 0x800) == 0) {
      goto LABEL_41;
    }
    goto LABEL_87;
  }
LABEL_86:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x800) == 0)
  {
LABEL_41:
    if ((v4 & 1) == 0) {
      goto LABEL_42;
    }
    goto LABEL_88;
  }
LABEL_87:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 68));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 1) == 0)
  {
LABEL_42:
    if ((v4 & 2) == 0) {
      goto LABEL_43;
    }
    goto LABEL_89;
  }
LABEL_88:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 2) == 0)
  {
LABEL_43:
    if ((v4 & 0x20) == 0) {
      goto LABEL_44;
    }
    goto LABEL_90;
  }
LABEL_89:
  uint64_t result = PB::Writer::writeVarInt(this);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x20) == 0)
  {
LABEL_44:
    if ((v4 & 0x40) == 0) {
      goto LABEL_45;
    }
    goto LABEL_91;
  }
LABEL_90:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x40) == 0)
  {
LABEL_45:
    if ((v4 & 0x200) == 0) {
      goto LABEL_46;
    }
LABEL_92:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 60));
    if ((*(void *)(v3 + 172) & 0x400) == 0) {
      return result;
    }
    goto LABEL_93;
  }
LABEL_91:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x200) != 0) {
    goto LABEL_92;
  }
LABEL_46:
  if ((v4 & 0x400) == 0) {
    return result;
  }
LABEL_93:
  float v5 = *(float *)(v3 + 64);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227B63C90(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC20CE8;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

void sub_227B63CB8(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B63CF0(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC20CE8;
  *(_DWORD *)(result + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 28);
  if (v2)
  {
    int v4 = *(_DWORD *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 28) = 1;
    *(_DWORD *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 28) & 8) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 20);
    v3 |= 8u;
    *(unsigned char *)(result + 28) = v3;
    *(_DWORD *)(result + 20) = v5;
    char v2 = *(unsigned char *)(a2 + 28);
  }
LABEL_6:
  if ((v2 & 0x10) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 24);
    v3 |= 0x10u;
    *(unsigned char *)(result + 28) = v3;
    *(_DWORD *)(result + 24) = v6;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 2) == 0)
    {
LABEL_8:
      if ((v2 & 4) == 0) {
        return result;
      }
LABEL_12:
      int v8 = *(_DWORD *)(a2 + 16);
      *(unsigned char *)(result + 28) = v3 | 4;
      *(_DWORD *)(result + 16) = v8;
      return result;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 12);
  v3 |= 2u;
  *(unsigned char *)(result + 28) = v3;
  *(_DWORD *)(result + 12) = v7;
  if ((*(unsigned char *)(a2 + 28) & 4) != 0) {
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_227B63DA8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 28);
  if (v5)
  {
    PB::TextFormatter::format(this, "configThreshold1", *(float *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 28);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 28) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "debugX", *(float *)(a1 + 12));
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(this, "debugY");
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(this, "outputA", *(float *)(a1 + 20));
  if ((*(unsigned char *)(a1 + 28) & 0x10) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "outputB");
LABEL_7:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B63E8C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 0x186A0u:
              *(unsigned char *)(a1 + 28) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_39;
              }
              *(_DWORD *)(a1 + 8) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_62;
            case 0x186A1u:
              *(unsigned char *)(a1 + 28) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_39;
              }
              *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_62;
            case 0x186A2u:
              *(unsigned char *)(a1 + 28) |= 0x10u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v33 = 0;
                unsigned int v34 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_67;
                  }
                  unint64_t v35 = v21++;
                  char v36 = *(unsigned char *)(v22 + v35);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v36 & 0x7F) << v33;
                  if ((v36 & 0x80) == 0) {
                    break;
                  }
                  v33 += 7;
                  BOOL v14 = v34++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_66:
                    unint64_t v2 = v35 + 1;
                    goto LABEL_67;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_66;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_67;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_67:
              *(_DWORD *)(a1 + 24) = v25;
              goto LABEL_73;
            case 0x186A3u:
              *(unsigned char *)(a1 + 28) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 12) = *(_DWORD *)(*(void *)this + v2);
LABEL_62:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_39:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_73;
            case 0x186A4u:
              *(unsigned char *)(a1 + 28) |= 4u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v37 = 0;
                unsigned int v38 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_72;
                  }
                  unint64_t v39 = v27++;
                  char v40 = *(unsigned char *)(v28 + v39);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v40 & 0x7F) << v37;
                  if ((v40 & 0x80) == 0) {
                    break;
                  }
                  v37 += 7;
                  BOOL v14 = v38++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_71:
                    unint64_t v2 = v39 + 1;
                    goto LABEL_72;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_71;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_72;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_72:
              *(_DWORD *)(a1 + 16) = v31;
LABEL_73:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_73;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B642B0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(result + 8));
    char v4 = *(unsigned char *)(v3 + 28);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 28) & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20));
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 0x10) == 0)
  {
LABEL_4:
    if ((v4 & 2) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 12));
    if ((*(unsigned char *)(v3 + 28) & 4) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 4) == 0) {
    return result;
  }
LABEL_11:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227B6438C(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC20D20;
  *(_DWORD *)(result + 44) = 0;
  return result;
}

void sub_227B643B4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B643EC(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_26DC20D20;
  *(_DWORD *)(result + 44) = 0;
  char v2 = *(unsigned char *)(a2 + 44);
  if ((v2 & 8) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 32);
    char v3 = 8;
    *(unsigned char *)(result + 44) = 8;
    *(void *)(result + 32) = v4;
    char v2 = *(unsigned char *)(a2 + 44);
    if ((v2 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if (*(unsigned char *)(a2 + 44))
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 8);
    v3 |= 1u;
    *(unsigned char *)(result + 44) = v3;
    *(void *)(result + 8) = v5;
    char v2 = *(unsigned char *)(a2 + 44);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(result + 44) = v3;
    *(void *)(result + 16) = v6;
    char v2 = *(unsigned char *)(a2 + 44);
    if ((v2 & 0x10) == 0)
    {
LABEL_8:
      if ((v2 & 4) == 0) {
        return result;
      }
LABEL_12:
      uint64_t v8 = *(void *)(a2 + 24);
      *(unsigned char *)(result + 44) = v3 | 4;
      *(void *)(result + 24) = v8;
      return result;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 40);
  v3 |= 0x10u;
  *(unsigned char *)(result + 44) = v3;
  *(_DWORD *)(result + 40) = v7;
  if ((*(unsigned char *)(a2 + 44) & 4) != 0) {
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_227B644A4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 44);
  if (v5)
  {
    PB::TextFormatter::format(this, "epochFirstTimestamp");
    char v5 = *(unsigned char *)(a1 + 44);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 44) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "epochLastTimestamp");
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(this, "maxNormTimestamp");
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(this, "maxNormValue", *(float *)(a1 + 40));
  if ((*(unsigned char *)(a1 + 44) & 8) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "timestamp");
LABEL_7:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B64588(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 44) |= 8u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v45 = 0;
                unsigned int v46 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_88;
                  }
                  unint64_t v47 = v20++;
                  char v48 = *(unsigned char *)(v21 + v47);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v48 & 0x7F) << v45;
                  if ((v48 & 0x80) == 0) {
                    break;
                  }
                  v45 += 7;
                  BOOL v14 = v46++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_87;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_87:
                unint64_t v2 = v47 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_88;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_88:
              *(void *)(a1 + 32) = v24;
              goto LABEL_104;
            case 2u:
              *(unsigned char *)(a1 + 44) |= 1u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v49 = 0;
                unsigned int v50 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    uint64_t v31 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_93;
                  }
                  unint64_t v51 = v27++;
                  char v52 = *(unsigned char *)(v28 + v51);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v52 & 0x7F) << v49;
                  if ((v52 & 0x80) == 0) {
                    break;
                  }
                  v49 += 7;
                  BOOL v14 = v50++ > 8;
                  if (v14)
                  {
                    uint64_t v31 = 0;
LABEL_92:
                    unint64_t v2 = v51 + 1;
                    goto LABEL_93;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v31 = 0;
                }
                goto LABEL_92;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_93;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              uint64_t v31 = 0;
LABEL_93:
              *(void *)(a1 + 8) = v31;
              goto LABEL_104;
            case 3u:
              *(unsigned char *)(a1 + 44) |= 2u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v53 = 0;
                unsigned int v54 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    uint64_t v37 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_98;
                  }
                  unint64_t v55 = v33++;
                  char v56 = *(unsigned char *)(v34 + v55);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v56 & 0x7F) << v53;
                  if ((v56 & 0x80) == 0) {
                    break;
                  }
                  v53 += 7;
                  BOOL v14 = v54++ > 8;
                  if (v14)
                  {
                    uint64_t v37 = 0;
LABEL_97:
                    unint64_t v2 = v55 + 1;
                    goto LABEL_98;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v37 = 0;
                }
                goto LABEL_97;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_98;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              uint64_t v37 = 0;
LABEL_98:
              *(void *)(a1 + 16) = v37;
              goto LABEL_104;
            case 4u:
              *(unsigned char *)(a1 + 44) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_104;
            case 5u:
              *(unsigned char *)(a1 + 44) |= 4u;
              unint64_t v39 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v40 = *(void *)this;
              if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
              {
                char v57 = 0;
                unsigned int v58 = 0;
                uint64_t v43 = 0;
                if (v2 <= v39) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v39)
                  {
                    uint64_t v43 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_103;
                  }
                  unint64_t v59 = v39++;
                  char v60 = *(unsigned char *)(v40 + v59);
                  *((void *)this + 1) = v39;
                  v43 |= (unint64_t)(v60 & 0x7F) << v57;
                  if ((v60 & 0x80) == 0) {
                    break;
                  }
                  v57 += 7;
                  BOOL v14 = v58++ > 8;
                  if (v14)
                  {
                    uint64_t v43 = 0;
LABEL_102:
                    unint64_t v2 = v59 + 1;
                    goto LABEL_103;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v43 = 0;
                }
                goto LABEL_102;
              }
              char v41 = 0;
              unsigned int v42 = 0;
              uint64_t v43 = 0;
              do
              {
                unint64_t v2 = v39 + 1;
                *((void *)this + 1) = v39 + 1;
                char v44 = *(unsigned char *)(v40 + v39);
                v43 |= (unint64_t)(v44 & 0x7F) << v41;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_103;
                }
                v41 += 7;
                unint64_t v39 = v2;
                BOOL v14 = v42++ > 8;
              }
              while (!v14);
              uint64_t v43 = 0;
LABEL_103:
              *(void *)(a1 + 24) = v43;
LABEL_104:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_104;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B64B0C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 44);
  if ((v4 & 8) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    char v4 = *(unsigned char *)(v3 + 44);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 44) & 1) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 2) == 0)
  {
LABEL_4:
    if ((v4 & 0x10) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40));
    if ((*(unsigned char *)(v3 + 44) & 4) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = PB::Writer::writeVarInt(this);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 0x10) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 4) == 0) {
    return result;
  }
LABEL_11:

  return PB::Writer::writeVarInt(this);
}

double sub_227B64BD0(uint64_t a1)
{
  *(void *)a1 = &unk_26DC20D58;
  *(_DWORD *)(a1 + 152) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return result;
}

void sub_227B64C04(PB::Base *this)
{
  *(void *)this = &unk_26DC20D58;
  unint64_t v2 = (void *)*((void *)this + 4);
  if (v2)
  {
    *((void *)this + 5) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 2) = v3;
    operator delete(v3);
  }

  PB::Base::~Base(this);
}

void sub_227B64C78(PB::Base *a1)
{
  sub_227B64C04(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B64CB0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC20D58;
  *(_OWORD *)(a1 + 8) = 0u;
  char v4 = (char *)(a1 + 8);
  *(_DWORD *)(a1 + 152) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  int v5 = *(_DWORD *)(a2 + 152);
  if ((v5 & 0x80) != 0)
  {
    int v7 = *(_DWORD *)(a2 + 112);
    int v6 = 128;
    *(_DWORD *)(a1 + 152) = 128;
    *(_DWORD *)(a1 + 112) = v7;
    int v5 = *(_DWORD *)(a2 + 152);
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v6 = 0;
  if ((v5 & 8) != 0)
  {
LABEL_5:
    uint64_t v8 = *(void *)(a2 + 80);
    v6 |= 8u;
    *(_DWORD *)(a1 + 152) = v6;
    *(void *)(a1 + 80) = v8;
    int v5 = *(_DWORD *)(a2 + 152);
  }
LABEL_6:
  if ((v5 & 0x800) != 0)
  {
    int v13 = *(_DWORD *)(a2 + 128);
    v6 |= 0x800u;
    *(_DWORD *)(a1 + 152) = v6;
    *(_DWORD *)(a1 + 128) = v13;
    int v5 = *(_DWORD *)(a2 + 152);
    if ((v5 & 0x10) == 0)
    {
LABEL_8:
      if ((v5 & 0x4000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_29;
    }
  }
  else if ((v5 & 0x10) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v14 = *(void *)(a2 + 88);
  v6 |= 0x10u;
  *(_DWORD *)(a1 + 152) = v6;
  *(void *)(a1 + 88) = v14;
  int v5 = *(_DWORD *)(a2 + 152);
  if ((v5 & 0x4000) == 0)
  {
LABEL_9:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_30;
  }
LABEL_29:
  int v15 = *(_DWORD *)(a2 + 140);
  v6 |= 0x4000u;
  *(_DWORD *)(a1 + 152) = v6;
  *(_DWORD *)(a1 + 140) = v15;
  int v5 = *(_DWORD *)(a2 + 152);
  if ((v5 & 0x8000) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_31;
  }
LABEL_30:
  int v16 = *(_DWORD *)(a2 + 144);
  v6 |= 0x8000u;
  *(_DWORD *)(a1 + 152) = v6;
  *(_DWORD *)(a1 + 144) = v16;
  int v5 = *(_DWORD *)(a2 + 152);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_32;
  }
LABEL_31:
  int v17 = *(_DWORD *)(a2 + 120);
  v6 |= 0x200u;
  *(_DWORD *)(a1 + 152) = v6;
  *(_DWORD *)(a1 + 120) = v17;
  int v5 = *(_DWORD *)(a2 + 152);
  if ((v5 & 0x400) == 0)
  {
LABEL_12:
    if ((v5 & 0x20) == 0) {
      goto LABEL_13;
    }
    goto LABEL_33;
  }
LABEL_32:
  int v18 = *(_DWORD *)(a2 + 124);
  v6 |= 0x400u;
  *(_DWORD *)(a1 + 152) = v6;
  *(_DWORD *)(a1 + 124) = v18;
  int v5 = *(_DWORD *)(a2 + 152);
  if ((v5 & 0x20) == 0)
  {
LABEL_13:
    if ((v5 & 0x100) == 0) {
      goto LABEL_14;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t v19 = *(void *)(a2 + 96);
  v6 |= 0x20u;
  *(_DWORD *)(a1 + 152) = v6;
  *(void *)(a1 + 96) = v19;
  int v5 = *(_DWORD *)(a2 + 152);
  if ((v5 & 0x100) == 0)
  {
LABEL_14:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_35;
  }
LABEL_34:
  int v20 = *(_DWORD *)(a2 + 116);
  v6 |= 0x100u;
  *(_DWORD *)(a1 + 152) = v6;
  *(_DWORD *)(a1 + 116) = v20;
  int v5 = *(_DWORD *)(a2 + 152);
  if ((v5 & 0x10000) == 0)
  {
LABEL_15:
    if ((v5 & 0x40) == 0) {
      goto LABEL_16;
    }
    goto LABEL_36;
  }
LABEL_35:
  char v21 = *(unsigned char *)(a2 + 148);
  v6 |= 0x10000u;
  *(_DWORD *)(a1 + 152) = v6;
  *(unsigned char *)(a1 + 148) = v21;
  int v5 = *(_DWORD *)(a2 + 152);
  if ((v5 & 0x40) == 0)
  {
LABEL_16:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t v22 = *(void *)(a2 + 104);
  v6 |= 0x40u;
  *(_DWORD *)(a1 + 152) = v6;
  *(void *)(a1 + 104) = v22;
  int v5 = *(_DWORD *)(a2 + 152);
  if ((v5 & 0x1000) == 0)
  {
LABEL_17:
    if ((v5 & 4) == 0) {
      goto LABEL_18;
    }
    goto LABEL_38;
  }
LABEL_37:
  int v23 = *(_DWORD *)(a2 + 132);
  v6 |= 0x1000u;
  *(_DWORD *)(a1 + 152) = v6;
  *(_DWORD *)(a1 + 132) = v23;
  int v5 = *(_DWORD *)(a2 + 152);
  if ((v5 & 4) == 0)
  {
LABEL_18:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_38:
  uint64_t v24 = *(void *)(a2 + 72);
  v6 |= 4u;
  *(_DWORD *)(a1 + 152) = v6;
  *(void *)(a1 + 72) = v24;
  if ((*(_DWORD *)(a2 + 152) & 0x2000) != 0)
  {
LABEL_19:
    int v9 = *(_DWORD *)(a2 + 136);
    *(_DWORD *)(a1 + 152) = v6 | 0x2000;
    *(_DWORD *)(a1 + 136) = v9;
  }
LABEL_20:
  if (a1 != a2)
  {
    sub_227B8B74C(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
    sub_227B8BA68((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
  }
  int v10 = *(_DWORD *)(a2 + 152);
  if ((v10 & 1) == 0)
  {
    if ((v10 & 2) == 0) {
      goto LABEL_24;
    }
LABEL_41:
    uint64_t v26 = *(void *)(a2 + 64);
    *(_DWORD *)(a1 + 152) |= 2u;
    *(void *)(a1 + 64) = v26;
    if ((*(_DWORD *)(a2 + 152) & 0x20000) == 0) {
      return a1;
    }
    goto LABEL_25;
  }
  uint64_t v25 = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 152) |= 1u;
  *(void *)(a1 + 56) = v25;
  int v10 = *(_DWORD *)(a2 + 152);
  if ((v10 & 2) != 0) {
    goto LABEL_41;
  }
LABEL_24:
  if ((v10 & 0x20000) != 0)
  {
LABEL_25:
    char v11 = *(unsigned char *)(a2 + 149);
    *(_DWORD *)(a1 + 152) |= 0x20000u;
    *(unsigned char *)(a1 + 149) = v11;
  }
  return a1;
}

uint64_t sub_227B64F44(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if ((*(unsigned char *)(a1 + 152) & 0x80) != 0) {
    PB::TextFormatter::format(this, "accelPeakThreshold", *(float *)(a1 + 112));
  }
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  while (v5 != v6)
  {
    v5 += 8;
    PB::TextFormatter::format(this, "allMaxNormTimestamps");
  }
  int v7 = *(float **)(a1 + 32);
  uint64_t v8 = *(float **)(a1 + 40);
  while (v7 != v8)
  {
    float v9 = *v7++;
    PB::TextFormatter::format(this, "allMaxNormValues", v9);
  }
  int v10 = *(_DWORD *)(a1 + 152);
  if (v10)
  {
    PB::TextFormatter::format(this, "epochFirstTimestamp");
    int v10 = *(_DWORD *)(a1 + 152);
    if ((v10 & 2) == 0)
    {
LABEL_9:
      if ((v10 & 0x10000) == 0) {
        goto LABEL_10;
      }
      goto LABEL_30;
    }
  }
  else if ((v10 & 2) == 0)
  {
    goto LABEL_9;
  }
  PB::TextFormatter::format(this, "epochLastTimestamp");
  int v10 = *(_DWORD *)(a1 + 152);
  if ((v10 & 0x10000) == 0)
  {
LABEL_10:
    if ((v10 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "isMAPDetected");
  int v10 = *(_DWORD *)(a1 + 152);
  if ((v10 & 0x100) == 0)
  {
LABEL_11:
    if ((v10 & 0x200) == 0) {
      goto LABEL_12;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(this, "magnitudePercentileThreshold", *(float *)(a1 + 116));
  int v10 = *(_DWORD *)(a1 + 152);
  if ((v10 & 0x200) == 0)
  {
LABEL_12:
    if ((v10 & 0x400) == 0) {
      goto LABEL_13;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(this, "magnitudePeriodicityLowerPercentile", *(float *)(a1 + 120));
  int v10 = *(_DWORD *)(a1 + 152);
  if ((v10 & 0x400) == 0)
  {
LABEL_13:
    if ((v10 & 0x800) == 0) {
      goto LABEL_14;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(this, "magnitudePeriodicityUpperPercentile", *(float *)(a1 + 124));
  int v10 = *(_DWORD *)(a1 + 152);
  if ((v10 & 0x800) == 0)
  {
LABEL_14:
    if ((v10 & 0x1000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "minNumPeaks");
  int v10 = *(_DWORD *)(a1 + 152);
  if ((v10 & 0x1000) == 0)
  {
LABEL_15:
    if ((v10 & 0x2000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "numPeaks");
  int v10 = *(_DWORD *)(a1 + 152);
  if ((v10 & 0x2000) == 0)
  {
LABEL_16:
    if ((v10 & 0x20000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "peakMagnitudePercentileDiff", *(float *)(a1 + 136));
  int v10 = *(_DWORD *)(a1 + 152);
  if ((v10 & 0x20000) == 0)
  {
LABEL_17:
    if ((v10 & 4) == 0) {
      goto LABEL_18;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "peakSeparation");
  int v10 = *(_DWORD *)(a1 + 152);
  if ((v10 & 4) == 0)
  {
LABEL_18:
    if ((v10 & 8) == 0) {
      goto LABEL_19;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "peakTimeDeltaPercentileDiff");
  int v10 = *(_DWORD *)(a1 + 152);
  if ((v10 & 8) == 0)
  {
LABEL_19:
    if ((v10 & 0x10) == 0) {
      goto LABEL_20;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "peakToPeakMinimumSeparation");
  int v10 = *(_DWORD *)(a1 + 152);
  if ((v10 & 0x10) == 0)
  {
LABEL_20:
    if ((v10 & 0x20) == 0) {
      goto LABEL_21;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "peakToPeakSeparationThreshold");
  int v10 = *(_DWORD *)(a1 + 152);
  if ((v10 & 0x20) == 0)
  {
LABEL_21:
    if ((v10 & 0x4000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "timePercentileDiffThreshold");
  int v10 = *(_DWORD *)(a1 + 152);
  if ((v10 & 0x4000) == 0)
  {
LABEL_22:
    if ((v10 & 0x8000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "timePeriodicityLowerPercentile", *(float *)(a1 + 140));
  int v10 = *(_DWORD *)(a1 + 152);
  if ((v10 & 0x8000) == 0)
  {
LABEL_23:
    if ((v10 & 0x40) == 0) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
LABEL_43:
  PB::TextFormatter::format(this, "timePeriodicityUpperPercentile", *(float *)(a1 + 144));
  if ((*(_DWORD *)(a1 + 152) & 0x40) != 0) {
LABEL_24:
  }
    PB::TextFormatter::format(this, "timestamp");
LABEL_25:

  return MEMORY[0x270F587F0](this);
}

BOOL sub_227B6522C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = (void **)(a1 + 32);
    uint64_t v9 = a1 + 48;
    int v10 = (void **)(a1 + 8);
    char v11 = (void *)(a1 + 24);
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        BOOL v101 = v14++ > 8;
        if (v101) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v23 = v15 & 7;
      if (v23 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v24 = v15 >> 3;
      if ((int)(v15 >> 3) > 100)
      {
        switch((int)v24)
        {
          case 201:
            *(_DWORD *)(a1 + 152) |= 0x1000u;
            unint64_t v26 = *((void *)this + 1);
            unint64_t v27 = *((void *)this + 2);
            uint64_t v28 = *(void *)this;
            if (v26 <= 0xFFFFFFFFFFFFFFF5 && v26 + 10 <= v27)
            {
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v32 = v26 + 1;
                *((void *)this + 1) = v26 + 1;
                char v33 = *(unsigned char *)(v28 + v26);
                v31 |= (unint64_t)(v33 & 0x7F) << v29;
                if ((v33 & 0x80) == 0) {
                  goto LABEL_285;
                }
                v29 += 7;
                unint64_t v26 = v32;
                BOOL v101 = v30++ > 8;
              }
              while (!v101);
LABEL_192:
              LODWORD(v31) = 0;
              goto LABEL_285;
            }
            char v150 = 0;
            unsigned int v151 = 0;
            uint64_t v31 = 0;
            if (v27 <= v26) {
              unint64_t v27 = *((void *)this + 1);
            }
            while (2)
            {
              if (v27 == v26)
              {
                LODWORD(v31) = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v152 = v26 + 1;
                char v153 = *(unsigned char *)(v28 + v26);
                *((void *)this + 1) = v152;
                v31 |= (unint64_t)(v153 & 0x7F) << v150;
                if (v153 < 0)
                {
                  v150 += 7;
                  unint64_t v26 = v152;
                  BOOL v101 = v151++ > 8;
                  if (v101) {
                    goto LABEL_192;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
              }
              break;
            }
LABEL_285:
            *(_DWORD *)(a1 + 132) = v31;
            break;
          case 202:
            *(_DWORD *)(a1 + 152) |= 4u;
            unint64_t v79 = *((void *)this + 1);
            unint64_t v80 = *((void *)this + 2);
            uint64_t v81 = *(void *)this;
            if (v79 <= 0xFFFFFFFFFFFFFFF5 && v79 + 10 <= v80)
            {
              char v82 = 0;
              unsigned int v83 = 0;
              uint64_t v84 = 0;
              do
              {
                unint64_t v85 = v79 + 1;
                *((void *)this + 1) = v79 + 1;
                char v86 = *(unsigned char *)(v81 + v79);
                v84 |= (unint64_t)(v86 & 0x7F) << v82;
                if ((v86 & 0x80) == 0) {
                  goto LABEL_303;
                }
                v82 += 7;
                unint64_t v79 = v85;
                BOOL v101 = v83++ > 8;
              }
              while (!v101);
LABEL_234:
              uint64_t v84 = 0;
              goto LABEL_303;
            }
            char v174 = 0;
            unsigned int v175 = 0;
            uint64_t v84 = 0;
            if (v80 <= v79) {
              unint64_t v80 = *((void *)this + 1);
            }
            while (2)
            {
              if (v80 == v79)
              {
                uint64_t v84 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v176 = v79 + 1;
                char v177 = *(unsigned char *)(v81 + v79);
                *((void *)this + 1) = v176;
                v84 |= (unint64_t)(v177 & 0x7F) << v174;
                if (v177 < 0)
                {
                  v174 += 7;
                  unint64_t v79 = v176;
                  BOOL v101 = v175++ > 8;
                  if (v101) {
                    goto LABEL_234;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v84 = 0;
                }
              }
              break;
            }
LABEL_303:
            *(void *)(a1 + 72) = v84;
            break;
          case 203:
            *(_DWORD *)(a1 + 152) |= 0x2000u;
            unint64_t v87 = *((void *)this + 1);
            if (v87 > 0xFFFFFFFFFFFFFFFBLL || v87 + 4 > *((void *)this + 2)) {
              goto LABEL_342;
            }
            *(_DWORD *)(a1 + 136) = *(_DWORD *)(*(void *)this + v87);
            goto LABEL_344;
          case 204:
            if (v23 != 2)
            {
              unint64_t v179 = *(char **)(a1 + 16);
              unint64_t v178 = *(void *)(a1 + 24);
              if ((unint64_t)v179 >= v178)
              {
                char v192 = (char *)*v10;
                uint64_t v193 = (v179 - (unsigned char *)*v10) >> 3;
                unint64_t v194 = v193 + 1;
                if ((unint64_t)(v193 + 1) >> 61) {
LABEL_360:
                }
                  sub_227B8B89C();
                uint64_t v195 = v178 - (void)v192;
                if (v195 >> 2 > v194) {
                  unint64_t v194 = v195 >> 2;
                }
                if ((unint64_t)v195 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v196 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v196 = v194;
                }
                if (v196)
                {
                  uint64_t v197 = (char *)sub_227B8B8B4((uint64_t)v11, v196);
                  char v192 = *(char **)(a1 + 8);
                  unint64_t v179 = *(char **)(a1 + 16);
                }
                else
                {
                  uint64_t v197 = 0;
                }
                char v204 = &v197[8 * v193];
                *(void *)char v204 = 0;
                unsigned int v180 = v204 + 8;
                while (v179 != v192)
                {
                  uint64_t v205 = *((void *)v179 - 1);
                  v179 -= 8;
                  *((void *)v204 - 1) = v205;
                  v204 -= 8;
                }
                *(void *)(a1 + 8) = v204;
                *(void *)(a1 + 16) = v180;
                *(void *)(a1 + 24) = &v197[8 * v196];
                if (v192) {
                  operator delete(v192);
                }
              }
              else
              {
                *(void *)unint64_t v179 = 0;
                unsigned int v180 = v179 + 8;
              }
              *(void *)(a1 + 16) = v180;
              unint64_t v206 = *((void *)this + 1);
              unint64_t v207 = *((void *)this + 2);
              uint64_t v208 = *(void *)this;
              char v209 = 0;
              unsigned int v210 = 0;
              if (v206 > 0xFFFFFFFFFFFFFFF5 || v206 + 10 > v207)
              {
                uint64_t v214 = 0;
                if (v207 <= v206) {
                  unint64_t v207 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v207 == v206)
                  {
                    uint64_t v214 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_348;
                  }
                  unint64_t v212 = v206 + 1;
                  char v213 = *(unsigned char *)(v208 + v206);
                  *((void *)this + 1) = v212;
                  v214 |= (unint64_t)(v213 & 0x7F) << v209;
                  if ((v213 & 0x80) == 0) {
                    break;
                  }
                  v209 += 7;
                  unint64_t v206 = v212;
                  BOOL v101 = v210++ > 8;
                  if (v101)
                  {
LABEL_333:
                    uint64_t v214 = 0;
                    goto LABEL_348;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v214 = 0;
                }
              }
              else
              {
                uint64_t v214 = 0;
                while (1)
                {
                  unint64_t v215 = v206 + 1;
                  *((void *)this + 1) = v206 + 1;
                  char v216 = *(unsigned char *)(v208 + v206);
                  v214 |= (unint64_t)(v216 & 0x7F) << v209;
                  if ((v216 & 0x80) == 0) {
                    break;
                  }
                  v209 += 7;
                  unint64_t v206 = v215;
                  BOOL v101 = v210++ > 8;
                  if (v101) {
                    goto LABEL_333;
                  }
                }
              }
LABEL_348:
              *(v180 - 1) = v214;
              break;
            }
            if (PB::Reader::placeMark()) {
              return 0;
            }
            if (*((void *)this + 1) < *((void *)this + 2) && !*((unsigned char *)this + 24))
            {
              int v88 = *(char **)(a1 + 16);
              do
              {
                if ((unint64_t)v88 >= *v11)
                {
                  BOOL v89 = (char *)*v10;
                  uint64_t v90 = (v88 - (unsigned char *)*v10) >> 3;
                  unint64_t v91 = v90 + 1;
                  if ((unint64_t)(v90 + 1) >> 61) {
                    goto LABEL_360;
                  }
                  uint64_t v92 = *v11 - (void)v89;
                  if (v92 >> 2 > v91) {
                    unint64_t v91 = v92 >> 2;
                  }
                  if ((unint64_t)v92 >= 0x7FFFFFFFFFFFFFF8) {
                    unint64_t v93 = 0x1FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v93 = v91;
                  }
                  if (v93)
                  {
                    unint64_t v94 = (char *)sub_227B8B8B4((uint64_t)v11, v93);
                    BOOL v89 = *(char **)(a1 + 8);
                    int v88 = *(char **)(a1 + 16);
                  }
                  else
                  {
                    unint64_t v94 = 0;
                  }
                  unint64_t v95 = &v94[8 * v90];
                  *(void *)unint64_t v95 = 0;
                  unint64_t v96 = v95 + 8;
                  while (v88 != v89)
                  {
                    uint64_t v97 = *((void *)v88 - 1);
                    v88 -= 8;
                    *((void *)v95 - 1) = v97;
                    v95 -= 8;
                  }
                  *(void *)(a1 + 8) = v95;
                  *(void *)(a1 + 16) = v96;
                  *(void *)(a1 + 24) = &v94[8 * v93];
                  if (v89) {
                    operator delete(v89);
                  }
                  int v88 = v96;
                }
                else
                {
                  *(void *)int v88 = 0;
                  v88 += 8;
                }
                *(void *)(a1 + 16) = v88;
                unint64_t v99 = *((void *)this + 1);
                unint64_t v98 = *((void *)this + 2);
                uint64_t v100 = *(void *)this;
                BOOL v101 = v99 > 0xFFFFFFFFFFFFFFF5 || v99 + 10 > v98;
                if (!v101)
                {
                  char v107 = 0;
                  unsigned int v108 = 0;
                  uint64_t v109 = 0;
                  while (1)
                  {
                    unint64_t v110 = v99 + 1;
                    *((void *)this + 1) = v99 + 1;
                    char v111 = *(unsigned char *)(v100 + v99);
                    v109 |= (unint64_t)(v111 & 0x7F) << v107;
                    if ((v111 & 0x80) == 0) {
                      goto LABEL_139;
                    }
                    v107 += 7;
                    unint64_t v99 = v110;
                    BOOL v101 = v108++ > 8;
                    if (v101)
                    {
                      uint64_t v109 = 0;
                      goto LABEL_139;
                    }
                  }
                }
                char v102 = 0;
                unsigned int v103 = 0;
                uint64_t v109 = 0;
                if (v98 <= v99) {
                  uint64_t v104 = *((void *)this + 1);
                }
                else {
                  uint64_t v104 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v104 == v99)
                  {
                    *((unsigned char *)this + 24) = 1;
                    *((void *)v88 - 1) = 0;
                    goto LABEL_311;
                  }
                  unint64_t v105 = v99++;
                  char v106 = *(unsigned char *)(v100 + v105);
                  *((void *)this + 1) = v99;
                  v109 |= (unint64_t)(v106 & 0x7F) << v102;
                  if ((v106 & 0x80) == 0) {
                    break;
                  }
                  v102 += 7;
                  BOOL v101 = v103++ > 8;
                  if (v101)
                  {
                    uint64_t v109 = 0;
                    goto LABEL_138;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v109 = 0;
                }
LABEL_138:
                unint64_t v110 = v105 + 1;
LABEL_139:
                *((void *)v88 - 1) = v109;
              }
              while (v110 < v98 && !*((unsigned char *)this + 24));
            }
            goto LABEL_311;
          case 205:
            if (v23 == 2)
            {
              if (PB::Reader::placeMark()) {
                return 0;
              }
              unint64_t v112 = *((void *)this + 1);
              unint64_t v113 = *((void *)this + 2);
              while (v112 < v113 && !*((unsigned char *)this + 24))
              {
                int v115 = *(char **)(a1 + 40);
                unint64_t v114 = *(void *)(a1 + 48);
                if ((unint64_t)v115 >= v114)
                {
                  char v117 = (char *)*v8;
                  uint64_t v118 = (v115 - (unsigned char *)*v8) >> 2;
                  unint64_t v119 = v118 + 1;
                  if ((unint64_t)(v118 + 1) >> 62) {
                    goto LABEL_359;
                  }
                  uint64_t v120 = v114 - (void)v117;
                  if (v120 >> 1 > v119) {
                    unint64_t v119 = v120 >> 1;
                  }
                  if ((unint64_t)v120 >= 0x7FFFFFFFFFFFFFFCLL) {
                    unint64_t v121 = 0x3FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v121 = v119;
                  }
                  if (v121)
                  {
                    unsigned int v122 = (char *)sub_227B8BBB8(v9, v121);
                    char v117 = *(char **)(a1 + 32);
                    int v115 = *(char **)(a1 + 40);
                  }
                  else
                  {
                    unsigned int v122 = 0;
                  }
                  unint64_t v123 = &v122[4 * v118];
                  *(_DWORD *)unint64_t v123 = 0;
                  BOOL v116 = v123 + 4;
                  while (v115 != v117)
                  {
                    int v124 = *((_DWORD *)v115 - 1);
                    v115 -= 4;
                    *((_DWORD *)v123 - 1) = v124;
                    v123 -= 4;
                  }
                  *(void *)(a1 + 32) = v123;
                  *(void *)(a1 + 40) = v116;
                  *(void *)(a1 + 48) = &v122[4 * v121];
                  if (v117) {
                    operator delete(v117);
                  }
                }
                else
                {
                  *(_DWORD *)int v115 = 0;
                  BOOL v116 = v115 + 4;
                }
                *(void *)(a1 + 40) = v116;
                unint64_t v125 = *((void *)this + 1);
                if (v125 > 0xFFFFFFFFFFFFFFFBLL || v125 + 4 > *((void *)this + 2))
                {
                  *((unsigned char *)this + 24) = 1;
                  break;
                }
                *(v116 - 1) = *(_DWORD *)(*(void *)this + v125);
                unint64_t v113 = *((void *)this + 2);
                unint64_t v112 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v112;
              }
LABEL_311:
              PB::Reader::recallMark();
            }
            else
            {
              unint64_t v182 = *(char **)(a1 + 40);
              unint64_t v181 = *(void *)(a1 + 48);
              if ((unint64_t)v182 >= v181)
              {
                char v198 = (char *)*v8;
                uint64_t v199 = (v182 - (unsigned char *)*v8) >> 2;
                unint64_t v200 = v199 + 1;
                if ((unint64_t)(v199 + 1) >> 62) {
LABEL_359:
                }
                  sub_227B8B89C();
                uint64_t v201 = v181 - (void)v198;
                if (v201 >> 1 > v200) {
                  unint64_t v200 = v201 >> 1;
                }
                if ((unint64_t)v201 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v202 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v202 = v200;
                }
                if (v202)
                {
                  unint64_t v203 = (char *)sub_227B8BBB8(v9, v202);
                  char v198 = *(char **)(a1 + 32);
                  unint64_t v182 = *(char **)(a1 + 40);
                }
                else
                {
                  unint64_t v203 = 0;
                }
                unsigned int v217 = &v203[4 * v199];
                *(_DWORD *)unsigned int v217 = 0;
                unint64_t v183 = v217 + 4;
                while (v182 != v198)
                {
                  int v218 = *((_DWORD *)v182 - 1);
                  v182 -= 4;
                  *((_DWORD *)v217 - 1) = v218;
                  v217 -= 4;
                }
                *(void *)(a1 + 32) = v217;
                *(void *)(a1 + 40) = v183;
                *(void *)(a1 + 48) = &v203[4 * v202];
                if (v198) {
                  operator delete(v198);
                }
              }
              else
              {
                *(_DWORD *)unint64_t v182 = 0;
                unint64_t v183 = v182 + 4;
              }
              *(void *)(a1 + 40) = v183;
              unint64_t v219 = *((void *)this + 1);
              if (v219 <= 0xFFFFFFFFFFFFFFFBLL && v219 + 4 <= *((void *)this + 2))
              {
                *(v183 - 1) = *(_DWORD *)(*(void *)this + v219);
LABEL_344:
                *((void *)this + 1) += 4;
              }
              else
              {
LABEL_342:
                *((unsigned char *)this + 24) = 1;
              }
            }
            break;
          case 206:
            *(_DWORD *)(a1 + 152) |= 1u;
            unint64_t v126 = *((void *)this + 1);
            unint64_t v127 = *((void *)this + 2);
            uint64_t v128 = *(void *)this;
            if (v126 <= 0xFFFFFFFFFFFFFFF5 && v126 + 10 <= v127)
            {
              char v129 = 0;
              unsigned int v130 = 0;
              uint64_t v131 = 0;
              do
              {
                unint64_t v132 = v126 + 1;
                *((void *)this + 1) = v126 + 1;
                char v133 = *(unsigned char *)(v128 + v126);
                v131 |= (unint64_t)(v133 & 0x7F) << v129;
                if ((v133 & 0x80) == 0) {
                  goto LABEL_306;
                }
                v129 += 7;
                unint64_t v126 = v132;
                BOOL v101 = v130++ > 8;
              }
              while (!v101);
LABEL_245:
              uint64_t v131 = 0;
              goto LABEL_306;
            }
            char v184 = 0;
            unsigned int v185 = 0;
            uint64_t v131 = 0;
            if (v127 <= v126) {
              unint64_t v127 = *((void *)this + 1);
            }
            while (2)
            {
              if (v127 == v126)
              {
                uint64_t v131 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v186 = v126 + 1;
                char v187 = *(unsigned char *)(v128 + v126);
                *((void *)this + 1) = v186;
                v131 |= (unint64_t)(v187 & 0x7F) << v184;
                if (v187 < 0)
                {
                  v184 += 7;
                  unint64_t v126 = v186;
                  BOOL v101 = v185++ > 8;
                  if (v101) {
                    goto LABEL_245;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v131 = 0;
                }
              }
              break;
            }
LABEL_306:
            *(void *)(a1 + 56) = v131;
            break;
          case 207:
            *(_DWORD *)(a1 + 152) |= 2u;
            unint64_t v134 = *((void *)this + 1);
            unint64_t v135 = *((void *)this + 2);
            uint64_t v136 = *(void *)this;
            if (v134 <= 0xFFFFFFFFFFFFFFF5 && v134 + 10 <= v135)
            {
              char v137 = 0;
              unsigned int v138 = 0;
              uint64_t v139 = 0;
              do
              {
                unint64_t v140 = v134 + 1;
                *((void *)this + 1) = v134 + 1;
                char v141 = *(unsigned char *)(v136 + v134);
                v139 |= (unint64_t)(v141 & 0x7F) << v137;
                if ((v141 & 0x80) == 0) {
                  goto LABEL_309;
                }
                v137 += 7;
                unint64_t v134 = v140;
                BOOL v101 = v138++ > 8;
              }
              while (!v101);
LABEL_252:
              uint64_t v139 = 0;
              goto LABEL_309;
            }
            char v188 = 0;
            unsigned int v189 = 0;
            uint64_t v139 = 0;
            if (v135 <= v134) {
              unint64_t v135 = *((void *)this + 1);
            }
            while (2)
            {
              if (v135 == v134)
              {
                uint64_t v139 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v190 = v134 + 1;
                char v191 = *(unsigned char *)(v136 + v134);
                *((void *)this + 1) = v190;
                v139 |= (unint64_t)(v191 & 0x7F) << v188;
                if (v191 < 0)
                {
                  v188 += 7;
                  unint64_t v134 = v190;
                  BOOL v101 = v189++ > 8;
                  if (v101) {
                    goto LABEL_252;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v139 = 0;
                }
              }
              break;
            }
LABEL_309:
            *(void *)(a1 + 64) = v139;
            break;
          case 208:
            *(_DWORD *)(a1 + 152) |= 0x20000u;
            unint64_t v142 = *((void *)this + 1);
            if (v142 >= *((void *)this + 2))
            {
              BOOL v145 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v143 = v142 + 1;
              int v144 = *(unsigned __int8 *)(*(void *)this + v142);
              *((void *)this + 1) = v143;
              BOOL v145 = v144 != 0;
            }
            *(unsigned char *)(a1 + 149) = v145;
            break;
          default:
            if (v24 == 101)
            {
              *(_DWORD *)(a1 + 152) |= 0x10000u;
              unint64_t v146 = *((void *)this + 1);
              if (v146 >= *((void *)this + 2))
              {
                BOOL v149 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v147 = v146 + 1;
                int v148 = *(unsigned __int8 *)(*(void *)this + v146);
                *((void *)this + 1) = v147;
                BOOL v149 = v148 != 0;
              }
              *(unsigned char *)(a1 + 148) = v149;
            }
            else if (v24 == 102)
            {
              *(_DWORD *)(a1 + 152) |= 0x40u;
              unint64_t v34 = *((void *)this + 1);
              unint64_t v35 = *((void *)this + 2);
              uint64_t v36 = *(void *)this;
              if (v34 > 0xFFFFFFFFFFFFFFF5 || v34 + 10 > v35)
              {
                char v154 = 0;
                unsigned int v155 = 0;
                uint64_t v39 = 0;
                if (v35 <= v34) {
                  unint64_t v35 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v35 == v34)
                  {
                    uint64_t v39 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_288;
                  }
                  unint64_t v156 = v34 + 1;
                  char v157 = *(unsigned char *)(v36 + v34);
                  *((void *)this + 1) = v156;
                  v39 |= (unint64_t)(v157 & 0x7F) << v154;
                  if ((v157 & 0x80) == 0) {
                    break;
                  }
                  v154 += 7;
                  unint64_t v34 = v156;
                  BOOL v101 = v155++ > 8;
                  if (v101)
                  {
LABEL_199:
                    uint64_t v39 = 0;
                    goto LABEL_288;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v39 = 0;
                }
              }
              else
              {
                char v37 = 0;
                unsigned int v38 = 0;
                uint64_t v39 = 0;
                while (1)
                {
                  unint64_t v40 = v34 + 1;
                  *((void *)this + 1) = v34 + 1;
                  char v41 = *(unsigned char *)(v36 + v34);
                  v39 |= (unint64_t)(v41 & 0x7F) << v37;
                  if ((v41 & 0x80) == 0) {
                    break;
                  }
                  v37 += 7;
                  unint64_t v34 = v40;
                  BOOL v101 = v38++ > 8;
                  if (v101) {
                    goto LABEL_199;
                  }
                }
              }
LABEL_288:
              *(void *)(a1 + 104) = v39;
            }
            else
            {
LABEL_184:
              if ((PB::Reader::skip(this) & 1) == 0) {
                return 0;
              }
            }
            break;
        }
      }
      else
      {
        switch((int)v24)
        {
          case 1:
            *(_DWORD *)(a1 + 152) |= 0x80u;
            unint64_t v25 = *((void *)this + 1);
            if (v25 > 0xFFFFFFFFFFFFFFFBLL || v25 + 4 > *((void *)this + 2)) {
              goto LABEL_342;
            }
            *(_DWORD *)(a1 + 112) = *(_DWORD *)(*(void *)this + v25);
            goto LABEL_344;
          case 2:
            *(_DWORD *)(a1 + 152) |= 8u;
            unint64_t v42 = *((void *)this + 1);
            unint64_t v43 = *((void *)this + 2);
            uint64_t v44 = *(void *)this;
            if (v42 <= 0xFFFFFFFFFFFFFFF5 && v42 + 10 <= v43)
            {
              char v45 = 0;
              unsigned int v46 = 0;
              uint64_t v47 = 0;
              do
              {
                unint64_t v48 = v42 + 1;
                *((void *)this + 1) = v42 + 1;
                char v49 = *(unsigned char *)(v44 + v42);
                v47 |= (unint64_t)(v49 & 0x7F) << v45;
                if ((v49 & 0x80) == 0) {
                  goto LABEL_291;
                }
                v45 += 7;
                unint64_t v42 = v48;
                BOOL v101 = v46++ > 8;
              }
              while (!v101);
LABEL_206:
              uint64_t v47 = 0;
              goto LABEL_291;
            }
            char v158 = 0;
            unsigned int v159 = 0;
            uint64_t v47 = 0;
            if (v43 <= v42) {
              unint64_t v43 = *((void *)this + 1);
            }
            while (2)
            {
              if (v43 == v42)
              {
                uint64_t v47 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v160 = v42 + 1;
                char v161 = *(unsigned char *)(v44 + v42);
                *((void *)this + 1) = v160;
                v47 |= (unint64_t)(v161 & 0x7F) << v158;
                if (v161 < 0)
                {
                  v158 += 7;
                  unint64_t v42 = v160;
                  BOOL v101 = v159++ > 8;
                  if (v101) {
                    goto LABEL_206;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v47 = 0;
                }
              }
              break;
            }
LABEL_291:
            *(void *)(a1 + 80) = v47;
            goto LABEL_349;
          case 3:
            *(_DWORD *)(a1 + 152) |= 0x800u;
            unint64_t v50 = *((void *)this + 1);
            unint64_t v51 = *((void *)this + 2);
            uint64_t v52 = *(void *)this;
            if (v50 <= 0xFFFFFFFFFFFFFFF5 && v50 + 10 <= v51)
            {
              char v53 = 0;
              unsigned int v54 = 0;
              uint64_t v55 = 0;
              do
              {
                unint64_t v56 = v50 + 1;
                *((void *)this + 1) = v50 + 1;
                char v57 = *(unsigned char *)(v52 + v50);
                v55 |= (unint64_t)(v57 & 0x7F) << v53;
                if ((v57 & 0x80) == 0) {
                  goto LABEL_294;
                }
                v53 += 7;
                unint64_t v50 = v56;
                BOOL v101 = v54++ > 8;
              }
              while (!v101);
LABEL_213:
              LODWORD(v55) = 0;
              goto LABEL_294;
            }
            char v162 = 0;
            unsigned int v163 = 0;
            uint64_t v55 = 0;
            if (v51 <= v50) {
              unint64_t v51 = *((void *)this + 1);
            }
            while (2)
            {
              if (v51 == v50)
              {
                LODWORD(v55) = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v164 = v50 + 1;
                char v165 = *(unsigned char *)(v52 + v50);
                *((void *)this + 1) = v164;
                v55 |= (unint64_t)(v165 & 0x7F) << v162;
                if (v165 < 0)
                {
                  v162 += 7;
                  unint64_t v50 = v164;
                  BOOL v101 = v163++ > 8;
                  if (v101) {
                    goto LABEL_213;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v55) = 0;
                }
              }
              break;
            }
LABEL_294:
            *(_DWORD *)(a1 + 128) = v55;
            goto LABEL_349;
          case 4:
            *(_DWORD *)(a1 + 152) |= 0x10u;
            unint64_t v58 = *((void *)this + 1);
            unint64_t v59 = *((void *)this + 2);
            uint64_t v60 = *(void *)this;
            if (v58 <= 0xFFFFFFFFFFFFFFF5 && v58 + 10 <= v59)
            {
              char v61 = 0;
              unsigned int v62 = 0;
              uint64_t v63 = 0;
              do
              {
                unint64_t v64 = v58 + 1;
                *((void *)this + 1) = v58 + 1;
                char v65 = *(unsigned char *)(v60 + v58);
                v63 |= (unint64_t)(v65 & 0x7F) << v61;
                if ((v65 & 0x80) == 0) {
                  goto LABEL_297;
                }
                v61 += 7;
                unint64_t v58 = v64;
                BOOL v101 = v62++ > 8;
              }
              while (!v101);
LABEL_220:
              uint64_t v63 = 0;
              goto LABEL_297;
            }
            char v166 = 0;
            unsigned int v167 = 0;
            uint64_t v63 = 0;
            if (v59 <= v58) {
              unint64_t v59 = *((void *)this + 1);
            }
            while (2)
            {
              if (v59 == v58)
              {
                uint64_t v63 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v168 = v58 + 1;
                char v169 = *(unsigned char *)(v60 + v58);
                *((void *)this + 1) = v168;
                v63 |= (unint64_t)(v169 & 0x7F) << v166;
                if (v169 < 0)
                {
                  v166 += 7;
                  unint64_t v58 = v168;
                  BOOL v101 = v167++ > 8;
                  if (v101) {
                    goto LABEL_220;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v63 = 0;
                }
              }
              break;
            }
LABEL_297:
            *(void *)(a1 + 88) = v63;
            goto LABEL_349;
          case 5:
            *(_DWORD *)(a1 + 152) |= 0x4000u;
            unint64_t v66 = *((void *)this + 1);
            if (v66 > 0xFFFFFFFFFFFFFFFBLL || v66 + 4 > *((void *)this + 2)) {
              goto LABEL_342;
            }
            *(_DWORD *)(a1 + 140) = *(_DWORD *)(*(void *)this + v66);
            goto LABEL_344;
          case 6:
            *(_DWORD *)(a1 + 152) |= 0x8000u;
            unint64_t v67 = *((void *)this + 1);
            if (v67 > 0xFFFFFFFFFFFFFFFBLL || v67 + 4 > *((void *)this + 2)) {
              goto LABEL_342;
            }
            *(_DWORD *)(a1 + 144) = *(_DWORD *)(*(void *)this + v67);
            goto LABEL_344;
          case 7:
            *(_DWORD *)(a1 + 152) |= 0x200u;
            unint64_t v68 = *((void *)this + 1);
            if (v68 > 0xFFFFFFFFFFFFFFFBLL || v68 + 4 > *((void *)this + 2)) {
              goto LABEL_342;
            }
            *(_DWORD *)(a1 + 120) = *(_DWORD *)(*(void *)this + v68);
            goto LABEL_344;
          case 8:
            *(_DWORD *)(a1 + 152) |= 0x400u;
            unint64_t v69 = *((void *)this + 1);
            if (v69 > 0xFFFFFFFFFFFFFFFBLL || v69 + 4 > *((void *)this + 2)) {
              goto LABEL_342;
            }
            *(_DWORD *)(a1 + 124) = *(_DWORD *)(*(void *)this + v69);
            goto LABEL_344;
          case 9:
            *(_DWORD *)(a1 + 152) |= 0x20u;
            unint64_t v70 = *((void *)this + 1);
            unint64_t v71 = *((void *)this + 2);
            uint64_t v72 = *(void *)this;
            if (v70 <= 0xFFFFFFFFFFFFFFF5 && v70 + 10 <= v71)
            {
              char v73 = 0;
              unsigned int v74 = 0;
              uint64_t v75 = 0;
              do
              {
                unint64_t v76 = v70 + 1;
                *((void *)this + 1) = v70 + 1;
                char v77 = *(unsigned char *)(v72 + v70);
                v75 |= (unint64_t)(v77 & 0x7F) << v73;
                if ((v77 & 0x80) == 0) {
                  goto LABEL_300;
                }
                v73 += 7;
                unint64_t v70 = v76;
                BOOL v101 = v74++ > 8;
              }
              while (!v101);
LABEL_227:
              uint64_t v75 = 0;
              goto LABEL_300;
            }
            char v170 = 0;
            unsigned int v171 = 0;
            uint64_t v75 = 0;
            if (v71 <= v70) {
              unint64_t v71 = *((void *)this + 1);
            }
            break;
          case 10:
            *(_DWORD *)(a1 + 152) |= 0x100u;
            unint64_t v78 = *((void *)this + 1);
            if (v78 > 0xFFFFFFFFFFFFFFFBLL || v78 + 4 > *((void *)this + 2)) {
              goto LABEL_342;
            }
            *(_DWORD *)(a1 + 116) = *(_DWORD *)(*(void *)this + v78);
            goto LABEL_344;
          default:
            goto LABEL_184;
        }
        while (1)
        {
          if (v71 == v70)
          {
            uint64_t v75 = 0;
            *((unsigned char *)this + 24) = 1;
            goto LABEL_300;
          }
          unint64_t v172 = v70 + 1;
          char v173 = *(unsigned char *)(v72 + v70);
          *((void *)this + 1) = v172;
          v75 |= (unint64_t)(v173 & 0x7F) << v170;
          if ((v173 & 0x80) == 0) {
            break;
          }
          v170 += 7;
          unint64_t v70 = v172;
          BOOL v101 = v171++ > 8;
          if (v101) {
            goto LABEL_227;
          }
        }
        if (*((unsigned char *)this + 24)) {
          uint64_t v75 = 0;
        }
LABEL_300:
        *(void *)(a1 + 96) = v75;
      }
LABEL_349:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v18 = 0;
    unsigned int v19 = 0;
    unint64_t v15 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v20 = v2 + 1;
      char v21 = *(unsigned char *)(v12 + v2);
      *((void *)this + 1) = v20;
      v15 |= (unint64_t)(v21 & 0x7F) << v18;
      if ((v21 & 0x80) == 0) {
        goto LABEL_21;
      }
      v18 += 7;
      unint64_t v2 = v20;
      if (v19++ >= 9)
      {
LABEL_20:
        unint64_t v15 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_227B663AC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 152);
  if ((v4 & 0x80) != 0)
  {
    double result = PB::Writer::write(this, *(float *)(result + 112));
    int v4 = *(_DWORD *)(v3 + 152);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 0x800) == 0) {
        goto LABEL_4;
      }
      goto LABEL_29;
    }
  }
  else if ((v4 & 8) == 0)
  {
    goto LABEL_3;
  }
  double result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x800) == 0)
  {
LABEL_4:
    if ((v4 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_30;
  }
LABEL_29:
  double result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x10) == 0)
  {
LABEL_5:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_31;
  }
LABEL_30:
  double result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x4000) == 0)
  {
LABEL_6:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_32;
  }
LABEL_31:
  double result = PB::Writer::write(this, *(float *)(v3 + 140));
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x8000) == 0)
  {
LABEL_7:
    if ((v4 & 0x200) == 0) {
      goto LABEL_8;
    }
    goto LABEL_33;
  }
LABEL_32:
  double result = PB::Writer::write(this, *(float *)(v3 + 144));
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x200) == 0)
  {
LABEL_8:
    if ((v4 & 0x400) == 0) {
      goto LABEL_9;
    }
    goto LABEL_34;
  }
LABEL_33:
  double result = PB::Writer::write(this, *(float *)(v3 + 120));
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x400) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_35;
  }
LABEL_34:
  double result = PB::Writer::write(this, *(float *)(v3 + 124));
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x20) == 0)
  {
LABEL_10:
    if ((v4 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_36;
  }
LABEL_35:
  double result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x100) == 0)
  {
LABEL_11:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_37;
  }
LABEL_36:
  double result = PB::Writer::write(this, *(float *)(v3 + 116));
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x10000) == 0)
  {
LABEL_12:
    if ((v4 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_38;
  }
LABEL_37:
  double result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x40) == 0)
  {
LABEL_13:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_39;
  }
LABEL_38:
  double result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x1000) == 0)
  {
LABEL_14:
    if ((v4 & 4) == 0) {
      goto LABEL_15;
    }
LABEL_40:
    double result = PB::Writer::writeVarInt(this);
    if ((*(_DWORD *)(v3 + 152) & 0x2000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_39:
  double result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 4) != 0) {
    goto LABEL_40;
  }
LABEL_15:
  if ((v4 & 0x2000) != 0) {
LABEL_16:
  }
    double result = PB::Writer::write(this, *(float *)(v3 + 136));
LABEL_17:
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  while (v5 != v6)
  {
    v5 += 8;
    double result = PB::Writer::writeVarInt(this);
  }
  int v7 = *(float **)(v3 + 32);
  uint64_t v8 = *(float **)(v3 + 40);
  while (v7 != v8)
  {
    float v9 = *v7++;
    double result = PB::Writer::write(this, v9);
  }
  int v10 = *(_DWORD *)(v3 + 152);
  if ((v10 & 1) == 0)
  {
    if ((v10 & 2) == 0) {
      goto LABEL_25;
    }
LABEL_43:
    double result = PB::Writer::writeVarInt(this);
    if ((*(_DWORD *)(v3 + 152) & 0x20000) == 0) {
      return result;
    }
    goto LABEL_44;
  }
  double result = PB::Writer::writeVarInt(this);
  int v10 = *(_DWORD *)(v3 + 152);
  if ((v10 & 2) != 0) {
    goto LABEL_43;
  }
LABEL_25:
  if ((v10 & 0x20000) == 0) {
    return result;
  }
LABEL_44:

  return PB::Writer::write(this);
}

uint64_t sub_227B66628(uint64_t result)
{
  *(void *)double result = &unk_26DC20D90;
  *(_DWORD *)(result + 72) = 0;
  *(_DWORD *)(result + 112) = 0;
  return result;
}

void sub_227B66654(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

uint64_t sub_227B6668C(uint64_t result, uint64_t a2)
{
  *(void *)double result = &unk_26DC20D90;
  *(_DWORD *)(result + 72) = 0;
  *(_DWORD *)(result + 112) = 0;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x40) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 56);
    int v3 = 64;
    *(_DWORD *)(result + 112) = 64;
    *(void *)(result + 56) = v4;
    int v2 = *(_DWORD *)(a2 + 112);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 8) != 0)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 32);
    v3 |= 8u;
    *(_DWORD *)(result + 112) = v3;
    *(void *)(result + 32) = v5;
    int v2 = *(_DWORD *)(a2 + 112);
  }
LABEL_6:
  if (v2)
  {
    uint64_t v6 = *(void *)(a2 + 8);
    v3 |= 1u;
    *(_DWORD *)(result + 112) = v3;
    *(void *)(result + 8) = v6;
    int v2 = *(_DWORD *)(a2 + 112);
    if ((v2 & 0x80) == 0)
    {
LABEL_8:
      if ((v2 & 0x1000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_26;
    }
  }
  else if ((v2 & 0x80) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 64);
  v3 |= 0x80u;
  *(_DWORD *)(result + 112) = v3;
  *(_DWORD *)(result + 64) = v7;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x1000) == 0)
  {
LABEL_9:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_26:
  int v8 = *(_DWORD *)(a2 + 84);
  v3 |= 0x1000u;
  *(_DWORD *)(result + 112) = v3;
  *(_DWORD *)(result + 84) = v8;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x4000) == 0)
  {
LABEL_10:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_28;
  }
LABEL_27:
  int v9 = *(_DWORD *)(a2 + 92);
  v3 |= 0x4000u;
  *(_DWORD *)(result + 112) = v3;
  *(_DWORD *)(result + 92) = v9;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x10000) == 0)
  {
LABEL_11:
    if ((v2 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_28:
  int v10 = *(_DWORD *)(a2 + 100);
  v3 |= 0x10000u;
  *(_DWORD *)(result + 112) = v3;
  *(_DWORD *)(result + 100) = v10;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x400) == 0)
  {
LABEL_12:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_30;
  }
LABEL_29:
  int v11 = *(_DWORD *)(a2 + 76);
  v3 |= 0x400u;
  *(_DWORD *)(result + 112) = v3;
  *(_DWORD *)(result + 76) = v11;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x2000) == 0)
  {
LABEL_13:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_31;
  }
LABEL_30:
  int v12 = *(_DWORD *)(a2 + 88);
  v3 |= 0x2000u;
  *(_DWORD *)(result + 112) = v3;
  *(_DWORD *)(result + 88) = v12;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x8000) == 0)
  {
LABEL_14:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_32;
  }
LABEL_31:
  int v13 = *(_DWORD *)(a2 + 96);
  v3 |= 0x8000u;
  *(_DWORD *)(result + 112) = v3;
  *(_DWORD *)(result + 96) = v13;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x20000) == 0)
  {
LABEL_15:
    if ((v2 & 0x800) == 0) {
      goto LABEL_16;
    }
    goto LABEL_33;
  }
LABEL_32:
  int v14 = *(_DWORD *)(a2 + 104);
  v3 |= 0x20000u;
  *(_DWORD *)(result + 112) = v3;
  *(_DWORD *)(result + 104) = v14;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x800) == 0)
  {
LABEL_16:
    if ((v2 & 0x100) == 0) {
      goto LABEL_17;
    }
    goto LABEL_34;
  }
LABEL_33:
  int v15 = *(_DWORD *)(a2 + 80);
  v3 |= 0x800u;
  *(_DWORD *)(result + 112) = v3;
  *(_DWORD *)(result + 80) = v15;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x100) == 0)
  {
LABEL_17:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_35;
  }
LABEL_34:
  int v16 = *(_DWORD *)(a2 + 68);
  v3 |= 0x100u;
  *(_DWORD *)(result + 112) = v3;
  *(_DWORD *)(result + 68) = v16;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x40000) == 0)
  {
LABEL_18:
    if ((v2 & 0x200) == 0) {
      goto LABEL_19;
    }
    goto LABEL_36;
  }
LABEL_35:
  char v17 = *(unsigned char *)(a2 + 108);
  v3 |= 0x40000u;
  *(_DWORD *)(result + 112) = v3;
  *(unsigned char *)(result + 108) = v17;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x200) == 0)
  {
LABEL_19:
    if ((v2 & 2) == 0) {
      goto LABEL_20;
    }
    goto LABEL_37;
  }
LABEL_36:
  int v18 = *(_DWORD *)(a2 + 72);
  v3 |= 0x200u;
  *(_DWORD *)(result + 112) = v3;
  *(_DWORD *)(result + 72) = v18;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 2) == 0)
  {
LABEL_20:
    if ((v2 & 0x20) == 0) {
      goto LABEL_21;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t v19 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_DWORD *)(result + 112) = v3;
  *(void *)(result + 16) = v19;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x20) == 0)
  {
LABEL_21:
    if ((v2 & 0x10) == 0) {
      goto LABEL_22;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t v20 = *(void *)(a2 + 48);
  v3 |= 0x20u;
  *(_DWORD *)(result + 112) = v3;
  *(void *)(result + 48) = v20;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x10) == 0)
  {
LABEL_22:
    if ((v2 & 4) == 0) {
      return result;
    }
LABEL_40:
    uint64_t v22 = *(void *)(a2 + 24);
    *(_DWORD *)(result + 112) = v3 | 4;
    *(void *)(result + 24) = v22;
    return result;
  }
LABEL_39:
  uint64_t v21 = *(void *)(a2 + 40);
  v3 |= 0x10u;
  *(_DWORD *)(result + 112) = v3;
  *(void *)(result + 40) = v21;
  if ((*(_DWORD *)(a2 + 112) & 4) != 0) {
    goto LABEL_40;
  }
  return result;
}

uint64_t sub_227B668D0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x80) != 0)
  {
    PB::TextFormatter::format(this, "accelMagnitude", *(float *)(a1 + 64));
    int v5 = *(_DWORD *)(a1 + 112);
    if ((v5 & 0x100) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_26;
    }
  }
  else if ((v5 & 0x100) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "deltaVThisImpact", *(float *)(a1 + 68));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 1) == 0)
  {
LABEL_4:
    if ((v5 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "dimensions");
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 2) == 0)
  {
LABEL_5:
    if ((v5 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "epochCounter");
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 4) == 0)
  {
LABEL_6:
    if ((v5 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "jHG");
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 8) == 0)
  {
LABEL_7:
    if ((v5 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(this, "jImpactStart");
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x10) == 0)
  {
LABEL_8:
    if ((v5 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "jLG");
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x20) == 0)
  {
LABEL_9:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(this, "nextTimestamp");
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x40000) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(this, "partOfHgPath");
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(this, "pointType");
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x400) == 0)
  {
LABEL_12:
    if ((v5 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "runningArclengthOverEpoch", *(float *)(a1 + 76));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x800) == 0)
  {
LABEL_13:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "runningArclengthThisImpact", *(float *)(a1 + 80));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x1000) == 0)
  {
LABEL_14:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "runningDeltaVXOverEpoch", *(float *)(a1 + 84));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x2000) == 0)
  {
LABEL_15:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "runningDeltaVXThisImpact", *(float *)(a1 + 88));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x4000) == 0)
  {
LABEL_16:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "runningDeltaVYOverEpoch", *(float *)(a1 + 92));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x8000) == 0)
  {
LABEL_17:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "runningDeltaVYThisImpact", *(float *)(a1 + 96));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x10000) == 0)
  {
LABEL_18:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "runningDeltaVZOverEpoch", *(float *)(a1 + 100));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x20000) == 0)
  {
LABEL_19:
    if ((v5 & 0x40) == 0) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }
LABEL_41:
  PB::TextFormatter::format(this, "runningDeltaVZThisImpact", *(float *)(a1 + 104));
  if ((*(_DWORD *)(a1 + 112) & 0x40) != 0) {
LABEL_20:
  }
    PB::TextFormatter::format(this, "timestamp");
LABEL_21:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B66B74(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_DWORD *)(a1 + 112) |= 0x40u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v71 = 0;
                unsigned int v72 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_176;
                  }
                  unint64_t v73 = v20++;
                  char v74 = *(unsigned char *)(v21 + v73);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v74 & 0x7F) << v71;
                  if ((v74 & 0x80) == 0) {
                    break;
                  }
                  v71 += 7;
                  BOOL v14 = v72++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_175;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_175:
                unint64_t v2 = v73 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_176;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_176:
              *(void *)(a1 + 56) = v24;
              goto LABEL_212;
            case 2u:
              *(_DWORD *)(a1 + 112) |= 8u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v75 = 0;
                unsigned int v76 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    uint64_t v31 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_181;
                  }
                  unint64_t v77 = v27++;
                  char v78 = *(unsigned char *)(v28 + v77);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v78 & 0x7F) << v75;
                  if ((v78 & 0x80) == 0) {
                    break;
                  }
                  v75 += 7;
                  BOOL v14 = v76++ > 8;
                  if (v14)
                  {
                    uint64_t v31 = 0;
LABEL_180:
                    unint64_t v2 = v77 + 1;
                    goto LABEL_181;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v31 = 0;
                }
                goto LABEL_180;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_181;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              uint64_t v31 = 0;
LABEL_181:
              *(void *)(a1 + 32) = -(v31 & 1) ^ (v31 >> 1);
              goto LABEL_212;
            case 3u:
              *(_DWORD *)(a1 + 112) |= 1u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v79 = 0;
                unsigned int v80 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    uint64_t v37 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_186;
                  }
                  unint64_t v81 = v33++;
                  char v82 = *(unsigned char *)(v34 + v81);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v82 & 0x7F) << v79;
                  if ((v82 & 0x80) == 0) {
                    break;
                  }
                  v79 += 7;
                  BOOL v14 = v80++ > 8;
                  if (v14)
                  {
                    uint64_t v37 = 0;
LABEL_185:
                    unint64_t v2 = v81 + 1;
                    goto LABEL_186;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v37 = 0;
                }
                goto LABEL_185;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_186;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              uint64_t v37 = 0;
LABEL_186:
              *(void *)(a1 + 8) = v37;
              goto LABEL_212;
            case 4u:
              *(_DWORD *)(a1 + 112) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_74;
              }
              *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_171;
            case 5u:
              *(_DWORD *)(a1 + 112) |= 0x1000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_74;
              }
              *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_171;
            case 6u:
              *(_DWORD *)(a1 + 112) |= 0x4000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_74;
              }
              *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_171;
            case 7u:
              *(_DWORD *)(a1 + 112) |= 0x10000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_74;
              }
              *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_171;
            case 8u:
              *(_DWORD *)(a1 + 112) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_74;
              }
              *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_171;
            case 9u:
              *(_DWORD *)(a1 + 112) |= 0x2000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_74;
              }
              *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_171;
            case 0xAu:
              *(_DWORD *)(a1 + 112) |= 0x8000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_74;
              }
              *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_171;
            case 0xBu:
              *(_DWORD *)(a1 + 112) |= 0x20000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_74;
              }
              *(_DWORD *)(a1 + 104) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_171;
            case 0xCu:
              *(_DWORD *)(a1 + 112) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_74;
              }
              *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_171;
            case 0xDu:
              *(_DWORD *)(a1 + 112) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 68) = *(_DWORD *)(*(void *)this + v2);
LABEL_171:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_74:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_212;
            case 0xEu:
              *(_DWORD *)(a1 + 112) |= 0x40000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v40 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v39 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v40 = v39 != 0;
              }
              *(unsigned char *)(a1 + 108) = v40;
              goto LABEL_212;
            case 0xFu:
              *(_DWORD *)(a1 + 112) |= 0x200u;
              unint64_t v41 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v42 = *(void *)this;
              if (v41 > 0xFFFFFFFFFFFFFFF5 || v41 + 10 > v2)
              {
                char v83 = 0;
                unsigned int v84 = 0;
                uint64_t v45 = 0;
                if (v2 <= v41) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v41)
                  {
                    LODWORD(v45) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_191;
                  }
                  unint64_t v85 = v41++;
                  char v86 = *(unsigned char *)(v42 + v85);
                  *((void *)this + 1) = v41;
                  v45 |= (unint64_t)(v86 & 0x7F) << v83;
                  if ((v86 & 0x80) == 0) {
                    break;
                  }
                  v83 += 7;
                  BOOL v14 = v84++ > 8;
                  if (v14)
                  {
                    LODWORD(v45) = 0;
LABEL_190:
                    unint64_t v2 = v85 + 1;
                    goto LABEL_191;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v45) = 0;
                }
                goto LABEL_190;
              }
              char v43 = 0;
              unsigned int v44 = 0;
              uint64_t v45 = 0;
              do
              {
                unint64_t v2 = v41 + 1;
                *((void *)this + 1) = v41 + 1;
                char v46 = *(unsigned char *)(v42 + v41);
                v45 |= (unint64_t)(v46 & 0x7F) << v43;
                if ((v46 & 0x80) == 0) {
                  goto LABEL_191;
                }
                v43 += 7;
                unint64_t v41 = v2;
                BOOL v14 = v44++ > 8;
              }
              while (!v14);
              LODWORD(v45) = 0;
LABEL_191:
              *(_DWORD *)(a1 + 72) = v45;
              goto LABEL_212;
            case 0x10u:
              *(_DWORD *)(a1 + 112) |= 2u;
              unint64_t v47 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v48 = *(void *)this;
              if (v47 > 0xFFFFFFFFFFFFFFF5 || v47 + 10 > v2)
              {
                char v87 = 0;
                unsigned int v88 = 0;
                uint64_t v51 = 0;
                if (v2 <= v47) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v47)
                  {
                    uint64_t v51 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_196;
                  }
                  unint64_t v89 = v47++;
                  char v90 = *(unsigned char *)(v48 + v89);
                  *((void *)this + 1) = v47;
                  v51 |= (unint64_t)(v90 & 0x7F) << v87;
                  if ((v90 & 0x80) == 0) {
                    break;
                  }
                  v87 += 7;
                  BOOL v14 = v88++ > 8;
                  if (v14)
                  {
                    uint64_t v51 = 0;
LABEL_195:
                    unint64_t v2 = v89 + 1;
                    goto LABEL_196;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v51 = 0;
                }
                goto LABEL_195;
              }
              char v49 = 0;
              unsigned int v50 = 0;
              uint64_t v51 = 0;
              do
              {
                unint64_t v2 = v47 + 1;
                *((void *)this + 1) = v47 + 1;
                char v52 = *(unsigned char *)(v48 + v47);
                v51 |= (unint64_t)(v52 & 0x7F) << v49;
                if ((v52 & 0x80) == 0) {
                  goto LABEL_196;
                }
                v49 += 7;
                unint64_t v47 = v2;
                BOOL v14 = v50++ > 8;
              }
              while (!v14);
              uint64_t v51 = 0;
LABEL_196:
              *(void *)(a1 + 16) = v51;
              goto LABEL_212;
            case 0x11u:
              *(_DWORD *)(a1 + 112) |= 0x20u;
              unint64_t v53 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v54 = *(void *)this;
              if (v53 > 0xFFFFFFFFFFFFFFF5 || v53 + 10 > v2)
              {
                char v91 = 0;
                unsigned int v92 = 0;
                uint64_t v57 = 0;
                if (v2 <= v53) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v53)
                  {
                    uint64_t v57 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_201;
                  }
                  unint64_t v93 = v53++;
                  char v94 = *(unsigned char *)(v54 + v93);
                  *((void *)this + 1) = v53;
                  v57 |= (unint64_t)(v94 & 0x7F) << v91;
                  if ((v94 & 0x80) == 0) {
                    break;
                  }
                  v91 += 7;
                  BOOL v14 = v92++ > 8;
                  if (v14)
                  {
                    uint64_t v57 = 0;
LABEL_200:
                    unint64_t v2 = v93 + 1;
                    goto LABEL_201;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v57 = 0;
                }
                goto LABEL_200;
              }
              char v55 = 0;
              unsigned int v56 = 0;
              uint64_t v57 = 0;
              do
              {
                unint64_t v2 = v53 + 1;
                *((void *)this + 1) = v53 + 1;
                char v58 = *(unsigned char *)(v54 + v53);
                v57 |= (unint64_t)(v58 & 0x7F) << v55;
                if ((v58 & 0x80) == 0) {
                  goto LABEL_201;
                }
                v55 += 7;
                unint64_t v53 = v2;
                BOOL v14 = v56++ > 8;
              }
              while (!v14);
              uint64_t v57 = 0;
LABEL_201:
              *(void *)(a1 + 48) = v57;
              goto LABEL_212;
            case 0x12u:
              *(_DWORD *)(a1 + 112) |= 0x10u;
              unint64_t v59 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v60 = *(void *)this;
              if (v59 > 0xFFFFFFFFFFFFFFF5 || v59 + 10 > v2)
              {
                char v95 = 0;
                unsigned int v96 = 0;
                uint64_t v63 = 0;
                if (v2 <= v59) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v59)
                  {
                    uint64_t v63 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_206;
                  }
                  unint64_t v97 = v59++;
                  char v98 = *(unsigned char *)(v60 + v97);
                  *((void *)this + 1) = v59;
                  v63 |= (unint64_t)(v98 & 0x7F) << v95;
                  if ((v98 & 0x80) == 0) {
                    break;
                  }
                  v95 += 7;
                  BOOL v14 = v96++ > 8;
                  if (v14)
                  {
                    uint64_t v63 = 0;
LABEL_205:
                    unint64_t v2 = v97 + 1;
                    goto LABEL_206;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v63 = 0;
                }
                goto LABEL_205;
              }
              char v61 = 0;
              unsigned int v62 = 0;
              uint64_t v63 = 0;
              do
              {
                unint64_t v2 = v59 + 1;
                *((void *)this + 1) = v59 + 1;
                char v64 = *(unsigned char *)(v60 + v59);
                v63 |= (unint64_t)(v64 & 0x7F) << v61;
                if ((v64 & 0x80) == 0) {
                  goto LABEL_206;
                }
                v61 += 7;
                unint64_t v59 = v2;
                BOOL v14 = v62++ > 8;
              }
              while (!v14);
              uint64_t v63 = 0;
LABEL_206:
              *(void *)(a1 + 40) = v63;
              goto LABEL_212;
            case 0x13u:
              *(_DWORD *)(a1 + 112) |= 4u;
              unint64_t v65 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v66 = *(void *)this;
              if (v65 > 0xFFFFFFFFFFFFFFF5 || v65 + 10 > v2)
              {
                char v99 = 0;
                unsigned int v100 = 0;
                uint64_t v69 = 0;
                if (v2 <= v65) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v65)
                  {
                    uint64_t v69 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_211;
                  }
                  unint64_t v101 = v65++;
                  char v102 = *(unsigned char *)(v66 + v101);
                  *((void *)this + 1) = v65;
                  v69 |= (unint64_t)(v102 & 0x7F) << v99;
                  if ((v102 & 0x80) == 0) {
                    break;
                  }
                  v99 += 7;
                  BOOL v14 = v100++ > 8;
                  if (v14)
                  {
                    uint64_t v69 = 0;
LABEL_210:
                    unint64_t v2 = v101 + 1;
                    goto LABEL_211;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v69 = 0;
                }
                goto LABEL_210;
              }
              char v67 = 0;
              unsigned int v68 = 0;
              uint64_t v69 = 0;
              do
              {
                unint64_t v2 = v65 + 1;
                *((void *)this + 1) = v65 + 1;
                char v70 = *(unsigned char *)(v66 + v65);
                v69 |= (unint64_t)(v70 & 0x7F) << v67;
                if ((v70 & 0x80) == 0) {
                  goto LABEL_211;
                }
                v67 += 7;
                unint64_t v65 = v2;
                BOOL v14 = v68++ > 8;
              }
              while (!v14);
              uint64_t v69 = 0;
LABEL_211:
              *(void *)(a1 + 24) = v69;
LABEL_212:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_212;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B67728(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 112);
  if ((v4 & 0x40) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    int v4 = *(_DWORD *)(v3 + 112);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_23;
    }
  }
  else if ((v4 & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeSInt(this);
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 1) == 0)
  {
LABEL_4:
    if ((v4 & 0x80) == 0) {
      goto LABEL_5;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x80) == 0)
  {
LABEL_5:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x1000) == 0)
  {
LABEL_6:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x4000) == 0)
  {
LABEL_7:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 92));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x10000) == 0)
  {
LABEL_8:
    if ((v4 & 0x400) == 0) {
      goto LABEL_9;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 100));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x400) == 0)
  {
LABEL_9:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x2000) == 0)
  {
LABEL_10:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 88));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x8000) == 0)
  {
LABEL_11:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 96));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x20000) == 0)
  {
LABEL_12:
    if ((v4 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 104));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x800) == 0)
  {
LABEL_13:
    if ((v4 & 0x100) == 0) {
      goto LABEL_14;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x100) == 0)
  {
LABEL_14:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 68));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x40000) == 0)
  {
LABEL_15:
    if ((v4 & 0x200) == 0) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PB::Writer::write(this);
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x200) == 0)
  {
LABEL_16:
    if ((v4 & 2) == 0) {
      goto LABEL_17;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 2) == 0)
  {
LABEL_17:
    if ((v4 & 0x20) == 0) {
      goto LABEL_18;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x20) == 0)
  {
LABEL_18:
    if ((v4 & 0x10) == 0) {
      goto LABEL_19;
    }
LABEL_38:
    uint64_t result = PB::Writer::writeVarInt(this);
    if ((*(_DWORD *)(v3 + 112) & 4) == 0) {
      return result;
    }
    goto LABEL_39;
  }
LABEL_37:
  uint64_t result = PB::Writer::writeVarInt(this);
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x10) != 0) {
    goto LABEL_38;
  }
LABEL_19:
  if ((v4 & 4) == 0) {
    return result;
  }
LABEL_39:

  return PB::Writer::writeVarInt(this);
}

uint64_t sub_227B67974(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC20DC8;
  *(_DWORD *)(result + 80) = 0;
  return result;
}

void sub_227B6799C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227B679D4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC20DC8;
  *(_DWORD *)(a1 + 80) = 0;
  __int16 v2 = *(_WORD *)(a2 + 80);
  if ((v2 & 0x100) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 72);
    __int16 v3 = 256;
    *(_WORD *)(a1 + 80) = 256;
    *(void *)(a1 + 72) = v4;
    __int16 v2 = *(_WORD *)(a2 + 80);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_5:
    double result = *(double *)(a2 + 16);
    v3 |= 2u;
    *(_WORD *)(a1 + 80) = v3;
    *(double *)(a1 + 16) = result;
    __int16 v2 = *(_WORD *)(a2 + 80);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    double result = *(double *)(a2 + 24);
    v3 |= 4u;
    *(_WORD *)(a1 + 80) = v3;
    *(double *)(a1 + 24) = result;
    __int16 v2 = *(_WORD *)(a2 + 80);
    if ((v2 & 8) == 0)
    {
LABEL_8:
      if ((v2 & 1) == 0) {
        goto LABEL_9;
      }
      goto LABEL_16;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_8;
  }
  double result = *(double *)(a2 + 32);
  v3 |= 8u;
  *(_WORD *)(a1 + 80) = v3;
  *(double *)(a1 + 32) = result;
  __int16 v2 = *(_WORD *)(a2 + 80);
  if ((v2 & 1) == 0)
  {
LABEL_9:
    if ((v2 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t v6 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(a1 + 80) = v3;
  *(void *)(a1 + 8) = v6;
  __int16 v2 = *(_WORD *)(a2 + 80);
  if ((v2 & 0x20) == 0)
  {
LABEL_10:
    if ((v2 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_18;
  }
LABEL_17:
  double result = *(double *)(a2 + 48);
  v3 |= 0x20u;
  *(_WORD *)(a1 + 80) = v3;
  *(double *)(a1 + 48) = result;
  __int16 v2 = *(_WORD *)(a2 + 80);
  if ((v2 & 0x40) == 0)
  {
LABEL_11:
    if ((v2 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_19;
  }
LABEL_18:
  double result = *(double *)(a2 + 56);
  v3 |= 0x40u;
  *(_WORD *)(a1 + 80) = v3;
  *(double *)(a1 + 56) = result;
  __int16 v2 = *(_WORD *)(a2 + 80);
  if ((v2 & 0x80) == 0)
  {
LABEL_12:
    if ((v2 & 0x10) == 0) {
      return result;
    }
LABEL_20:
    double result = *(double *)(a2 + 40);
    *(_WORD *)(a1 + 80) = v3 | 0x10;
    *(double *)(a1 + 40) = result;
    return result;
  }
LABEL_19:
  double result = *(double *)(a2 + 64);
  v3 |= 0x80u;
  *(_WORD *)(a1 + 80) = v3;
  *(double *)(a1 + 64) = result;
  if ((*(_WORD *)(a2 + 80) & 0x10) != 0) {
    goto LABEL_20;
  }
  return result;
}

uint64_t sub_227B67AFC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 80);
  if (v5)
  {
    PB::TextFormatter::format(this, "epochCounter");
    __int16 v5 = *(_WORD *)(a1 + 80);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "inertialAccelX", *(double *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 80);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "inertialAccelY", *(double *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 80);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  PB::TextFormatter::format(this, "inertialAccelZ", *(double *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 80);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "quaternionW", *(double *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 80);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "quaternionX", *(double *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 80);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "quaternionY", *(double *)(a1 + 56));
  __int16 v5 = *(_WORD *)(a1 + 80);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_21:
  PB::TextFormatter::format(this, "quaternionZ", *(double *)(a1 + 64));
  if ((*(_WORD *)(a1 + 80) & 0x100) != 0) {
LABEL_10:
  }
    PB::TextFormatter::format(this, "timestamp");
LABEL_11:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B67C60(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 80) |= 0x100u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v33 = 0;
                unsigned int v34 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_79;
                  }
                  unint64_t v35 = v20++;
                  char v36 = *(unsigned char *)(v21 + v35);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v36 & 0x7F) << v33;
                  if ((v36 & 0x80) == 0) {
                    break;
                  }
                  v33 += 7;
                  BOOL v14 = v34++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_78;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_78:
                unint64_t v2 = v35 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_79;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_79:
              *(void *)(a1 + 72) = v24;
              goto LABEL_85;
            case 2u:
              *(_WORD *)(a1 + 80) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_58;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_74;
            case 3u:
              *(_WORD *)(a1 + 80) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_58;
              }
              *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
              goto LABEL_74;
            case 4u:
              *(_WORD *)(a1 + 80) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_58;
              }
              *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
              goto LABEL_74;
            case 5u:
              *(_WORD *)(a1 + 80) |= 1u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v37 = 0;
                unsigned int v38 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    uint64_t v31 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_84;
                  }
                  unint64_t v39 = v27++;
                  char v40 = *(unsigned char *)(v28 + v39);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v40 & 0x7F) << v37;
                  if ((v40 & 0x80) == 0) {
                    break;
                  }
                  v37 += 7;
                  BOOL v14 = v38++ > 8;
                  if (v14)
                  {
                    uint64_t v31 = 0;
LABEL_83:
                    unint64_t v2 = v39 + 1;
                    goto LABEL_84;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v31 = 0;
                }
                goto LABEL_83;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_84;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              uint64_t v31 = 0;
LABEL_84:
              *(void *)(a1 + 8) = v31;
LABEL_85:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 6u:
              *(_WORD *)(a1 + 80) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_58;
              }
              *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
              goto LABEL_74;
            case 7u:
              *(_WORD *)(a1 + 80) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_58;
              }
              *(void *)(a1 + 56) = *(void *)(*(void *)this + v2);
              goto LABEL_74;
            case 8u:
              *(_WORD *)(a1 + 80) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_58;
              }
              *(void *)(a1 + 64) = *(void *)(*(void *)this + v2);
              goto LABEL_74;
            case 9u:
              *(_WORD *)(a1 + 80) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
LABEL_74:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_58:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_85;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_85;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B6816C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 80);
  if ((v4 & 0x100) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    __int16 v4 = *(_WORD *)(v3 + 80);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24));
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32));
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 1) == 0)
  {
LABEL_6:
    if ((v4 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 0x20) == 0)
  {
LABEL_7:
    if ((v4 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48));
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 0x40) == 0)
  {
LABEL_8:
    if ((v4 & 0x80) == 0) {
      goto LABEL_9;
    }
LABEL_18:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 64));
    if ((*(_WORD *)(v3 + 80) & 0x10) == 0) {
      return result;
    }
    goto LABEL_19;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 56));
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 0x80) != 0) {
    goto LABEL_18;
  }
LABEL_9:
  if ((v4 & 0x10) == 0) {
    return result;
  }
LABEL_19:
  double v5 = *(double *)(v3 + 40);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227B682A0(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC20E00;
  *(_DWORD *)(result + 104) = 0;
  return result;
}

void sub_227B682C8(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

double sub_227B68300(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC20E00;
  *(_DWORD *)(a1 + 104) = 0;
  __int16 v2 = *(_WORD *)(a2 + 104);
  if ((v2 & 0x800) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 96);
    __int16 v3 = 2048;
    *(_WORD *)(a1 + 104) = 2048;
    *(void *)(a1 + 96) = v4;
    __int16 v2 = *(_WORD *)(a2 + 104);
    if ((v2 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 0x10) != 0)
  {
LABEL_5:
    double result = *(double *)(a2 + 40);
    v3 |= 0x10u;
    *(_WORD *)(a1 + 104) = v3;
    *(double *)(a1 + 40) = result;
    __int16 v2 = *(_WORD *)(a2 + 104);
  }
LABEL_6:
  if ((v2 & 0x20) != 0)
  {
    double result = *(double *)(a2 + 48);
    v3 |= 0x20u;
    *(_WORD *)(a1 + 104) = v3;
    *(double *)(a1 + 48) = result;
    __int16 v2 = *(_WORD *)(a2 + 104);
    if ((v2 & 0x40) == 0)
    {
LABEL_8:
      if ((v2 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_19;
    }
  }
  else if ((v2 & 0x40) == 0)
  {
    goto LABEL_8;
  }
  double result = *(double *)(a2 + 56);
  v3 |= 0x40u;
  *(_WORD *)(a1 + 104) = v3;
  *(double *)(a1 + 56) = result;
  __int16 v2 = *(_WORD *)(a2 + 104);
  if ((v2 & 8) == 0)
  {
LABEL_9:
    if ((v2 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v6 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_WORD *)(a1 + 104) = v3;
  *(void *)(a1 + 32) = v6;
  __int16 v2 = *(_WORD *)(a2 + 104);
  if ((v2 & 0x100) == 0)
  {
LABEL_10:
    if ((v2 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_21;
  }
LABEL_20:
  double result = *(double *)(a2 + 72);
  v3 |= 0x100u;
  *(_WORD *)(a1 + 104) = v3;
  *(double *)(a1 + 72) = result;
  __int16 v2 = *(_WORD *)(a2 + 104);
  if ((v2 & 0x200) == 0)
  {
LABEL_11:
    if ((v2 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_21:
  double result = *(double *)(a2 + 80);
  v3 |= 0x200u;
  *(_WORD *)(a1 + 104) = v3;
  *(double *)(a1 + 80) = result;
  __int16 v2 = *(_WORD *)(a2 + 104);
  if ((v2 & 0x400) == 0)
  {
LABEL_12:
    if ((v2 & 0x80) == 0) {
      goto LABEL_13;
    }
    goto LABEL_23;
  }
LABEL_22:
  double result = *(double *)(a2 + 88);
  v3 |= 0x400u;
  *(_WORD *)(a1 + 104) = v3;
  *(double *)(a1 + 88) = result;
  __int16 v2 = *(_WORD *)(a2 + 104);
  if ((v2 & 0x80) == 0)
  {
LABEL_13:
    if ((v2 & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_24;
  }
LABEL_23:
  double result = *(double *)(a2 + 64);
  v3 |= 0x80u;
  *(_WORD *)(a1 + 104) = v3;
  *(double *)(a1 + 64) = result;
  __int16 v2 = *(_WORD *)(a2 + 104);
  if ((v2 & 1) == 0)
  {
LABEL_14:
    if ((v2 & 2) == 0) {
      goto LABEL_15;
    }
    goto LABEL_25;
  }
LABEL_24:
  double result = *(double *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(a1 + 104) = v3;
  *(double *)(a1 + 8) = result;
  __int16 v2 = *(_WORD *)(a2 + 104);
  if ((v2 & 2) == 0)
  {
LABEL_15:
    if ((v2 & 4) == 0) {
      return result;
    }
LABEL_26:
    double result = *(double *)(a2 + 24);
    *(_WORD *)(a1 + 104) = v3 | 4;
    *(double *)(a1 + 24) = result;
    return result;
  }
LABEL_25:
  double result = *(double *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(a1 + 104) = v3;
  *(double *)(a1 + 16) = result;
  if ((*(_WORD *)(a2 + 104) & 4) != 0) {
    goto LABEL_26;
  }
  return result;
}

uint64_t sub_227B6847C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 104);
  if (v5)
  {
    PB::TextFormatter::format(this, "bodyAccelX", *(double *)(a1 + 8));
    __int16 v5 = *(_WORD *)(a1 + 104);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "bodyAccelY", *(double *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 104);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "bodyAccelZ", *(double *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 104);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "epochCounter");
  __int16 v5 = *(_WORD *)(a1 + 104);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "inertialAccelX", *(double *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 104);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "inertialAccelY", *(double *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 104);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "inertialAccelZ", *(double *)(a1 + 56));
  __int16 v5 = *(_WORD *)(a1 + 104);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "quaternionW", *(double *)(a1 + 64));
  __int16 v5 = *(_WORD *)(a1 + 104);
  if ((v5 & 0x100) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "quaternionX", *(double *)(a1 + 72));
  __int16 v5 = *(_WORD *)(a1 + 104);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "quaternionY", *(double *)(a1 + 80));
  __int16 v5 = *(_WORD *)(a1 + 104);
  if ((v5 & 0x400) == 0)
  {
LABEL_12:
    if ((v5 & 0x800) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_27:
  PB::TextFormatter::format(this, "quaternionZ", *(double *)(a1 + 88));
  if ((*(_WORD *)(a1 + 104) & 0x800) != 0) {
LABEL_13:
  }
    PB::TextFormatter::format(this, "timestamp");
LABEL_14:

  return MEMORY[0x270F587F0](this);
}

uint64_t sub_227B68640(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 104) |= 0x800u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v33 = 0;
                unsigned int v34 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_88;
                  }
                  unint64_t v35 = v20++;
                  char v36 = *(unsigned char *)(v21 + v35);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v36 & 0x7F) << v33;
                  if ((v36 & 0x80) == 0) {
                    break;
                  }
                  v33 += 7;
                  BOOL v14 = v34++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_87;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_87:
                unint64_t v2 = v35 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_88;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_88:
              *(void *)(a1 + 96) = v24;
              goto LABEL_94;
            case 2u:
              *(_WORD *)(a1 + 104) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_67;
              }
              *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
              goto LABEL_83;
            case 3u:
              *(_WORD *)(a1 + 104) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_67;
              }
              *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
              goto LABEL_83;
            case 4u:
              *(_WORD *)(a1 + 104) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_67;
              }
              *(void *)(a1 + 56) = *(void *)(*(void *)this + v2);
              goto LABEL_83;
            case 5u:
              *(_WORD *)(a1 + 104) |= 8u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v37 = 0;
                unsigned int v38 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    uint64_t v31 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_93;
                  }
                  unint64_t v39 = v27++;
                  char v40 = *(unsigned char *)(v28 + v39);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v40 & 0x7F) << v37;
                  if ((v40 & 0x80) == 0) {
                    break;
                  }
                  v37 += 7;
                  BOOL v14 = v38++ > 8;
                  if (v14)
                  {
                    uint64_t v31 = 0;
LABEL_92:
                    unint64_t v2 = v39 + 1;
                    goto LABEL_93;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v31 = 0;
                }
                goto LABEL_92;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_93;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              uint64_t v31 = 0;
LABEL_93:
              *(void *)(a1 + 32) = v31;
LABEL_94:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 6u:
              *(_WORD *)(a1 + 104) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_67;
              }
              *(void *)(a1 + 72) = *(void *)(*(void *)this + v2);
              goto LABEL_83;
            case 7u:
              *(_WORD *)(a1 + 104) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_67;
              }
              *(void *)(a1 + 80) = *(void *)(*(void *)this + v2);
              goto LABEL_83;
            case 8u:
              *(_WORD *)(a1 + 104) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_67;
              }
              *(void *)(a1 + 88) = *(void *)(*(void *)this + v2);
              goto LABEL_83;
            case 9u:
              *(_WORD *)(a1 + 104) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_67;
              }
              *(void *)(a1 + 64) = *(void *)(*(void *)this + v2);
              goto LABEL_83;
            case 0xAu:
              *(_WORD *)(a1 + 104) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_67;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_83;
            case 0xBu:
              *(_WORD *)(a1 + 104) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_67;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_83;
            case 0xCu:
              *(_WORD *)(a1 + 104) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
LABEL_83:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_67:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_94;
            default:
              uint64_t result = PB::Reader::skip(this);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_94;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_227B68C00(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 104);
  if ((v4 & 0x800) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this);
    __int16 v4 = *(_WORD *)(v3 + 104);
    if ((v4 & 0x10) == 0)
    {
LABEL_3:
      if ((v4 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v4 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40));
  __int16 v4 = *(_WORD *)(v3 + 104);
  if ((v4 & 0x20) == 0)
  {
LABEL_4:
    if ((v4 & 0x40) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48));
  __int16 v4 = *(_WORD *)(v3 + 104);
  if ((v4 & 0x40) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 56));
  __int16 v4 = *(_WORD *)(v3 + 104);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x100) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::writeVarInt(this);
  __int16 v4 = *(_WORD *)(v3 + 104);
  if ((v4 & 0x100) == 0)
  {
LABEL_7:
    if ((v4 & 0x200) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 72));
  __int16 v4 = *(_WORD *)(v3 + 104);
  if ((v4 & 0x200) == 0)
  {
LABEL_8:
    if ((v4 & 0x400) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 80));
  __int16 v4 = *(_WORD *)(v3 + 104);
  if ((v4 & 0x400) == 0)
  {
LABEL_9:
    if ((v4 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 88));
  __int16 v4 = *(_WORD *)(v3 + 104);
  if ((v4 & 0x80) == 0)
  {
LABEL_10:
    if ((v4 & 1) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 64));
  __int16 v4 = *(_WORD *)(v3 + 104);
  if ((v4 & 1) == 0)
  {
LABEL_11:
    if ((v4 & 2) == 0) {
      goto LABEL_12;
    }
LABEL_24:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16));
    if ((*(_WORD *)(v3 + 104) & 4) == 0) {
      return result;
    }
    goto LABEL_25;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8));
  __int16 v4 = *(_WORD *)(v3 + 104);
  if ((v4 & 2) != 0) {
    goto LABEL_24;
  }
LABEL_12:
  if ((v4 & 4) == 0) {
    return result;
  }
LABEL_25:
  double v5 = *(double *)(v3 + 24);

  return PB::Writer::write(this, v5);
}

uint64_t sub_227B68D88(uint64_t result)
{
  *(void *)uint64_t result = &unk_26DC20E38;
  *(_DWORD *)(result + 324) = 0;
  *(void *)(result + 316) = 0;
  return result;
}

void sub_227B68DB8(PB::Base *a1)
{
  PB::Base::~Base(a1);

  JUMPOUT(0x22A6850E0);
}

float sub_227B68DF0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26DC20E38;
  unint64_t v2 = (uint64_t *)(a1 + 316);
  *(_DWORD *)(a1 + 324) = 0;
  *(void *)(a1 + 316) = 0;
  uint64_t v3 = (uint64_t *)(a2 + 316);
  char v4 = *(unsigned char *)(a2 + 324);
  if ((v4 & 8) != 0)
  {
    uint64_t v5 = 0;
    char v8 = *(unsigned char *)(a2 + 312);
    *unint64_t v2 = 0;
    char v6 = 8;
    *(unsigned char *)(a1 + 324) = 8;
    *(unsigned char *)(a1 + 312) = v8;
    uint64_t v7 = *v3;
    char v4 = *(unsigned char *)(a2 + 324);
    if ((v4 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v5 = 0;
  char v6 = 0;
  uint64_t v7 = *v3;
  if ((*(unsigned char *)(a2 + 324) & 2) != 0)
  {
LABEL_5:
    float result = *(float *)(a2 + 304);
    v6 |= 2u;
    *unint64_t v2 = 0;
    *(unsigned char *)(a1 + 324) = v6;
    *(float *)(a1 + 304) = result;
    uint64_t v7 = *v3;
    char v4 = *(unsigned char *)(a2 + 324);
  }
LABEL_6:
  if ((v4 & 4) != 0)
  {
    float result = *(float *)(a2 + 308);
    v6 |= 4u;
    *unint64_t v2 = 0;
    *(unsigned char *)(a1 + 324) = v6;
    *(float *)(a1 + 308) = result;
    uint64_t v7 = *v3;
    char v4 = *(unsigned char *)(a2 + 324);
    if ((*v3 & 0x20) == 0)
    {
LABEL_8:
      if ((v7 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_75;
    }
  }
  else if ((v7 & 0x20) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v5 = 32;
  *unint64_t v2 = 32;
  *(unsigned char *)(a1 + 324) = v6;
  *(void *)(a1 + 48) = v10;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x40) == 0)
  {
LABEL_9:
    if ((v7 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_76;
  }
LABEL_75:
  uint64_t v11 = *(void *)(a2 + 56);
  v5 |= 0x40uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(void *)(a1 + 56) = v11;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 1) == 0)
  {
LABEL_10:
    if ((v7 & 0x8000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_77;
  }
LABEL_76:
  uint64_t v12 = *(void *)(a2 + 8);
  v5 |= 1uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(void *)(a1 + 8) = v12;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x8000) == 0)
  {
LABEL_11:
    if ((v7 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_78;
  }
LABEL_77:
  float result = *(float *)(a2 + 104);
  v5 |= 0x8000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 104) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x80) == 0)
  {
LABEL_12:
    if ((v7 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_79;
  }
LABEL_78:
  uint64_t v13 = *(void *)(a2 + 64);
  v5 |= 0x80uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(void *)(a1 + 64) = v13;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x100) == 0)
  {
LABEL_13:
    if ((v7 & 0x20000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_80;
  }
LABEL_79:
  uint64_t v14 = *(void *)(a2 + 72);
  v5 |= 0x100uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(void *)(a1 + 72) = v14;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x20000) == 0)
  {
LABEL_14:
    if ((v7 & 0x10000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_81;
  }
LABEL_80:
  float result = *(float *)(a2 + 112);
  v5 |= 0x20000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 112) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x10000) == 0)
  {
LABEL_15:
    if ((v7 & 0x2000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_82;
  }
LABEL_81:
  float result = *(float *)(a2 + 108);
  v5 |= 0x10000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 108) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x2000000) == 0)
  {
LABEL_16:
    if ((v7 & 0x200) == 0) {
      goto LABEL_17;
    }
    goto LABEL_83;
  }
LABEL_82:
  float result = *(float *)(a2 + 144);
  v5 |= 0x2000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 144) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x200) == 0)
  {
LABEL_17:
    if ((v7 & 0x400) == 0) {
      goto LABEL_18;
    }
    goto LABEL_84;
  }
LABEL_83:
  float result = *(float *)(a2 + 80);
  v5 |= 0x200uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 80) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x400) == 0)
  {
LABEL_18:
    if ((v7 & 0x800000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_85;
  }
LABEL_84:
  float result = *(float *)(a2 + 84);
  v5 |= 0x400uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 84) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x800000) == 0)
  {
LABEL_19:
    if ((v7 & 0x4000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_86;
  }
LABEL_85:
  float result = *(float *)(a2 + 136);
  v5 |= 0x800000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 136) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x4000) == 0)
  {
LABEL_20:
    if ((v7 & 0x400000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_87;
  }
LABEL_86:
  float result = *(float *)(a2 + 100);
  v5 |= 0x4000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 100) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x400000) == 0)
  {
LABEL_21:
    if ((v7 & 0x2000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_88;
  }
LABEL_87:
  float result = *(float *)(a2 + 132);
  v5 |= 0x400000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 132) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x2000) == 0)
  {
LABEL_22:
    if ((v7 & 0x8000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_89;
  }
LABEL_88:
  float result = *(float *)(a2 + 96);
  v5 |= 0x2000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 96) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x8000000) == 0)
  {
LABEL_23:
    if ((v7 & 0x100000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_90;
  }
LABEL_89:
  float result = *(float *)(a2 + 152);
  v5 |= 0x8000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 152) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x100000) == 0)
  {
LABEL_24:
    if ((v7 & 0x1000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_91;
  }
LABEL_90:
  float result = *(float *)(a2 + 124);
  v5 |= 0x100000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 124) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x1000) == 0)
  {
LABEL_25:
    if ((v7 & 0x80000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_92;
  }
LABEL_91:
  float result = *(float *)(a2 + 92);
  v5 |= 0x1000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 92) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x80000) == 0)
  {
LABEL_26:
    if ((v7 & 0x800) == 0) {
      goto LABEL_27;
    }
    goto LABEL_93;
  }
LABEL_92:
  float result = *(float *)(a2 + 120);
  v5 |= 0x80000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 120) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x800) == 0)
  {
LABEL_27:
    if ((v7 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_94;
  }
LABEL_93:
  float result = *(float *)(a2 + 88);
  v5 |= 0x800uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 88) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v7 & 0x40000000000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_95;
  }
LABEL_94:
  float result = *(float *)(a2 + 148);
  v5 |= 0x4000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 148) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x40000000000000) == 0)
  {
LABEL_29:
    if ((v7 & 0x20000000000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_96;
  }
LABEL_95:
  float result = *(float *)(a2 + 260);
  v5 |= 0x40000000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 260) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x20000000000000) == 0)
  {
LABEL_30:
    if ((v7 & 0x4000000000000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_97;
  }
LABEL_96:
  float result = *(float *)(a2 + 256);
  v5 |= 0x20000000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 256) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x4000000000000000) == 0)
  {
LABEL_31:
    if ((v7 & 0x800000000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_98;
  }
LABEL_97:
  float result = *(float *)(a2 + 292);
  v5 |= 0x4000000000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 292) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x800000000000) == 0)
  {
LABEL_32:
    if ((v7 & 0x1000000000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_99;
  }
LABEL_98:
  float result = *(float *)(a2 + 232);
  v5 |= 0x800000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 232) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x1000000000000) == 0)
  {
LABEL_33:
    if ((v7 & 0x1000000000000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_100;
  }
LABEL_99:
  float result = *(float *)(a2 + 236);
  v5 |= 0x1000000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 236) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x1000000000000000) == 0)
  {
LABEL_34:
    if ((v7 & 0x10000000000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_101;
  }
LABEL_100:
  float result = *(float *)(a2 + 284);
  v5 |= 0x1000000000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 284) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x10000000000000) == 0)
  {
LABEL_35:
    if ((v7 & 0x800000000000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_102;
  }
LABEL_101:
  float result = *(float *)(a2 + 252);
  v5 |= 0x10000000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 252) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x800000000000000) == 0)
  {
LABEL_36:
    if ((v7 & 0x8000000000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_103;
  }
LABEL_102:
  float result = *(float *)(a2 + 280);
  v5 |= 0x800000000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 280) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x8000000000000) == 0)
  {
LABEL_37:
    if ((v4 & 1) == 0) {
      goto LABEL_38;
    }
    goto LABEL_104;
  }
LABEL_103:
  float result = *(float *)(a2 + 248);
  v5 |= 0x8000000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 248) = result;
  uint64_t v7 = *v3;
  if ((*(unsigned char *)(a2 + 324) & 1) == 0)
  {
LABEL_38:
    if ((v7 & 0x200000000000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_105;
  }
LABEL_104:
  float result = *(float *)(a2 + 300);
  v6 |= 1u;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 300) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x200000000000000) == 0)
  {
LABEL_39:
    if ((v7 & 0x4000000000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_106;
  }
LABEL_105:
  float result = *(float *)(a2 + 272);
  v5 |= 0x200000000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 272) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x4000000000000) == 0)
  {
LABEL_40:
    if ((v7 & 0x100000000000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_107;
  }
LABEL_106:
  float result = *(float *)(a2 + 244);
  v5 |= 0x4000000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 244) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x100000000000000) == 0)
  {
LABEL_41:
    if ((v7 & 0x2000000000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_108;
  }
LABEL_107:
  float result = *(float *)(a2 + 268);
  v5 |= 0x100000000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 268) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x2000000000000) == 0)
  {
LABEL_42:
    if ((v7 & 0x8000000000000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_109;
  }
LABEL_108:
  float result = *(float *)(a2 + 240);
  v5 |= 0x2000000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 240) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x8000000000000000) == 0)
  {
LABEL_43:
    if ((v7 & 0x800000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_110;
  }
LABEL_109:
  float result = *(float *)(a2 + 296);
  v5 |= 0x8000000000000000;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 296) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x800000000) == 0)
  {
LABEL_44:
    if ((v7 & 0x400000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_111;
  }
LABEL_110:
  float result = *(float *)(a2 + 184);
  v5 |= 0x800000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 184) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x400000000) == 0)
  {
LABEL_45:
    if ((v7 & 0x80000000000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_112;
  }
LABEL_111:
  float result = *(float *)(a2 + 180);
  v5 |= 0x400000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 180) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x80000000000) == 0)
  {
LABEL_46:
    if ((v7 & 0x10000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_113;
  }
LABEL_112:
  float result = *(float *)(a2 + 216);
  v5 |= 0x80000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 216) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x10000000) == 0)
  {
LABEL_47:
    if ((v7 & 0x20000000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_114;
  }
LABEL_113:
  float result = *(float *)(a2 + 156);
  v5 |= 0x10000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 156) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x20000000) == 0)
  {
LABEL_48:
    if ((v7 & 0x20000000000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_115;
  }
LABEL_114:
  float result = *(float *)(a2 + 160);
  v5 |= 0x20000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 160) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x20000000000) == 0)
  {
LABEL_49:
    if ((v7 & 0x200000000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_116;
  }
LABEL_115:
  float result = *(float *)(a2 + 208);
  v5 |= 0x20000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 208) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x200000000) == 0)
  {
LABEL_50:
    if ((v7 & 0x10000000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_117;
  }
LABEL_116:
  float result = *(float *)(a2 + 176);
  v5 |= 0x200000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 176) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x10000000000) == 0)
  {
LABEL_51:
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_118;
  }
LABEL_117:
  float result = *(float *)(a2 + 204);
  v5 |= 0x10000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 204) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x100000000) == 0)
  {
LABEL_52:
    if ((v7 & 0x200000000000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_119;
  }
LABEL_118:
  float result = *(float *)(a2 + 172);
  v5 |= 0x100000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 172) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x200000000000) == 0)
  {
LABEL_53:
    if ((v7 & 0x4000000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_120;
  }
LABEL_119:
  float result = *(float *)(a2 + 224);
  v5 |= 0x200000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 224) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x4000000000) == 0)
  {
LABEL_54:
    if ((v7 & 0x80000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_121;
  }
LABEL_120:
  float result = *(float *)(a2 + 196);
  v5 |= 0x4000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 196) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x80000000) == 0)
  {
LABEL_55:
    if ((v7 & 0x2000000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_122;
  }
LABEL_121:
  float result = *(float *)(a2 + 168);
  v5 |= 0x80000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 168) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x2000000000) == 0)
  {
LABEL_56:
    if ((v7 & 0x40000000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_123;
  }
LABEL_122:
  float result = *(float *)(a2 + 192);
  v5 |= 0x2000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 192) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x40000000) == 0)
  {
LABEL_57:
    if ((v7 & 0x100000000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_124;
  }
LABEL_123:
  float result = *(float *)(a2 + 164);
  v5 |= 0x40000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 164) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x100000000000) == 0)
  {
LABEL_58:
    if ((v7 & 8) == 0) {
      goto LABEL_59;
    }
    goto LABEL_125;
  }
LABEL_124:
  float result = *(float *)(a2 + 220);
  v5 |= 0x100000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 220) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 8) == 0)
  {
LABEL_59:
    if ((v7 & 0x10) == 0) {
      goto LABEL_60;
    }
    goto LABEL_126;
  }
LABEL_125:
  uint64_t v15 = *(void *)(a2 + 32);
  v5 |= 8uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(void *)(a1 + 32) = v15;
  uint64_t v7 = *v3;
  if ((*v3 & 0x10) == 0)
  {
LABEL_60:
    if ((v7 & 0x1000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_127;
  }
LABEL_126:
  uint64_t v16 = *(void *)(a2 + 40);
  v5 |= 0x10uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(void *)(a1 + 40) = v16;
  uint64_t v7 = *v3;
  if ((*v3 & 0x1000000) == 0)
  {
LABEL_61:
    if ((v7 & 0x2000000000000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_128;
  }
LABEL_127:
  float result = *(float *)(a2 + 140);
  v5 |= 0x1000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 140) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x2000000000000000) == 0)
  {
LABEL_62:
    if ((v7 & 0x40000000000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_129;
  }
LABEL_128:
  float result = *(float *)(a2 + 288);
  v5 |= 0x2000000000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 288) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x40000000000) == 0)
  {
LABEL_63:
    if ((v7 & 0x40000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_130;
  }
LABEL_129:
  float result = *(float *)(a2 + 212);
  v5 |= 0x40000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 212) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x40000) == 0)
  {
LABEL_64:
    if ((v7 & 0x80000000000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_131;
  }
LABEL_130:
  float result = *(float *)(a2 + 116);
  v5 |= 0x40000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 116) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x80000000000000) == 0)
  {
LABEL_65:
    if ((v7 & 0x1000000000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_132;
  }
LABEL_131:
  float result = *(float *)(a2 + 264);
  v5 |= 0x80000000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 264) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x1000000000) == 0)
  {
LABEL_66:
    if ((v7 & 0x200000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_133;
  }
LABEL_132:
  float result = *(float *)(a2 + 188);
  v5 |= 0x1000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 188) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x200000) == 0)
  {
LABEL_67:
    if ((v7 & 0x400000000000000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_134;
  }
LABEL_133:
  float result = *(float *)(a2 + 128);
  v5 |= 0x200000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 128) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x400000000000000) == 0)
  {
LABEL_68:
    if ((v7 & 0x8000000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_135;
  }
LABEL_134:
  float result = *(float *)(a2 + 276);
  v5 |= 0x400000000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 276) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x8000000000) == 0)
  {
LABEL_69:
    if ((v7 & 2) == 0) {
      goto LABEL_70;
    }
    goto LABEL_136;
  }
LABEL_135:
  float result = *(float *)(a2 + 200);
  v5 |= 0x8000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 200) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 2) == 0)
  {
LABEL_70:
    if ((v7 & 4) == 0) {
      goto LABEL_71;
    }
    goto LABEL_137;
  }
LABEL_136:
  uint64_t v17 = *(void *)(a2 + 16);
  v5 |= 2uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(void *)(a1 + 16) = v17;
  uint64_t v7 = *v3;
  if ((*v3 & 4) == 0)
  {
LABEL_71:
    if ((v7 & 0x400000000000) == 0) {
      return result;
    }
LABEL_138:
    float result = *(float *)(a2 + 228);
    *unint64_t v2 = v5 | 0x400000000000;
    *(unsigned char *)(a1 + 324) = v6;
    *(float *)(a1 + 228) = result;
    return result;
  }
LABEL_137:
  uint64_t v18 = *(void *)(a2 + 24);
  v5 |= 4uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(void *)(a1 + 24) = v18;
  if ((*v3 & 0x400000000000) != 0) {
    goto LABEL_138;
  }
  return result;
}

uint64_t sub_227B69738(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = (uint64_t *)(a1 + 316);
  uint64_t v6 = *(void *)(a1 + 316);
  if ((v6 & 0x200) != 0)
  {
    PB::TextFormatter::format(this, "arclengthXYBiggestImpact", *(float *)(a1 + 80));
    uint64_t v6 = *v5;
    char v7 = *(unsigned char *)(a1 + 324);
    if ((*v5 & 0x400) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v7 = *(unsigned char *)(a1 + 324);
  if ((v6 & 0x400) != 0)
  {
LABEL_5:
    PB::TextFormatter::format(this, "arclengthXYOverEpoch", *(float *)(a1 + 84));
    uint64_t v6 = *v5;
    char v7 = *(unsigned char *)(a1 + 324);
  }
LABEL_6:
  if ((v6 & 0x800) != 0)
  {
    PB::TextFormatter::format(this, "arclengthXYZBiggestImpact", *(float *)(a1 + 88));
    uint64_t v6 = *v5;
    char v7 = *(unsigned char *)(a1 + 324);
    if ((*v5 & 0x1000) == 0)
    {
LABEL_8:
      if ((v6 & 0x2000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_78;
    }
  }
  else if ((v6 & 0x1000) == 0)
  {
    goto LABEL_8;
  }
  PB::TextFormatter::format(this, "arclengthXYZOverEpoch", *(float *)(a1 + 92));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x2000) == 0)
  {
LABEL_9:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_79;
  }
LABEL_78:
  PB::TextFormatter::format(this, "arclengthZBiggestImpact", *(float *)(a1 + 96));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x4000) == 0)
  {
LABEL_10:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_80;
  }
LABEL_79:
  PB::TextFormatter::format(this, "arclengthZOverEpoch", *(float *)(a1 + 100));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x8000) == 0)
  {
LABEL_11:
    if ((v6 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_81;
  }
LABEL_80:
  PB::TextFormatter::format(this, "configDecelPulseThreshold", *(float *)(a1 + 104));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 1) == 0)
  {
LABEL_12:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_82;
  }
LABEL_81:
  PB::TextFormatter::format(this, "deltaTriggerTime");
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x10000) == 0)
  {
LABEL_13:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_83;
  }
LABEL_82:
  PB::TextFormatter::format(this, "deltaVXYBiggestImpact", *(float *)(a1 + 108));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x20000) == 0)
  {
LABEL_14:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_84;
  }
LABEL_83:
  PB::TextFormatter::format(this, "deltaVXYOverEpoch", *(float *)(a1 + 112));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x40000) == 0)
  {
LABEL_15:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_85;
  }
LABEL_84:
  PB::TextFormatter::format(this, "deltaVXYUnconditional", *(float *)(a1 + 116));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x80000) == 0)
  {
LABEL_16:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_86;
  }
LABEL_85:
  PB::TextFormatter::format(this, "deltaVXYZBiggestImpact", *(float *)(a1 + 120));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x100000) == 0)
  {
LABEL_17:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_87;
  }
LABEL_86:
  PB::TextFormatter::format(this, "deltaVXYZOverEpoch", *(float *)(a1 + 124));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x200000) == 0)
  {
LABEL_18:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_88;
  }
LABEL_87:
  PB::TextFormatter::format(this, "deltaVXYZUnconditional", *(float *)(a1 + 128));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x400000) == 0)
  {
LABEL_19:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_89;
  }
LABEL_88:
  PB::TextFormatter::format(this, "deltaVZBiggestImpact", *(float *)(a1 + 132));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x800000) == 0)
  {
LABEL_20:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_90;
  }
LABEL_89:
  PB::TextFormatter::format(this, "deltaVZOverEpoch", *(float *)(a1 + 136));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x1000000) == 0)
  {
LABEL_21:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_91;
  }
LABEL_90:
  PB::TextFormatter::format(this, "deltaVZUnconditional", *(float *)(a1 + 140));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x2000000) == 0)
  {
LABEL_22:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_92;
  }
LABEL_91:
  PB::TextFormatter::format(this, "durationXYBiggestImpact", *(float *)(a1 + 144));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x4000000) == 0)
  {
LABEL_23:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_93;
  }
LABEL_92:
  PB::TextFormatter::format(this, "durationXYZBiggestImpact", *(float *)(a1 + 148));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x8000000) == 0)
  {
LABEL_24:
    if ((v6 & 2) == 0) {
      goto LABEL_25;
    }
    goto LABEL_94;
  }
LABEL_93:
  PB::TextFormatter::format(this, "durationZBiggestImpact", *(float *)(a1 + 152));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 2) == 0)
  {
LABEL_25:
    if ((v6 & 4) == 0) {
      goto LABEL_26;
    }
    goto LABEL_95;
  }
LABEL_94:
  PB::TextFormatter::format(this, "epochFirstTimestamp");
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 4) == 0)
  {
LABEL_26:
    if ((v6 & 8) == 0) {
      goto LABEL_27;
    }
    goto LABEL_96;
  }
LABEL_95:
  PB::TextFormatter::format(this, "epochLastTimestamp");
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 8) == 0)
  {
LABEL_27:
    if ((v6 & 0x10) == 0) {
      goto LABEL_28;
    }
    goto LABEL_97;
  }
LABEL_96:
  PB::TextFormatter::format(this, "faultCounter");
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x10) == 0)
  {
LABEL_28:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_98;
  }
LABEL_97:
  PB::TextFormatter::format(this, "hgAccelBufferSize");
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x10000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_99;
  }
LABEL_98:
  PB::TextFormatter::format(this, "hgArclengthXYBiggestImpact", *(float *)(a1 + 156));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x20000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_100;
  }
LABEL_99:
  PB::TextFormatter::format(this, "hgArclengthXYOverEpoch", *(float *)(a1 + 160));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x40000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_101;
  }
LABEL_100:
  PB::TextFormatter::format(this, "hgArclengthXYZBiggestImpact", *(float *)(a1 + 164));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x80000000) == 0)
  {
LABEL_32:
    if ((v6 & 0x100000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_102;
  }
LABEL_101:
  PB::TextFormatter::format(this, "hgArclengthXYZOverEpoch", *(float *)(a1 + 168));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x100000000) == 0)
  {
LABEL_33:
    if ((v6 & 0x200000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_103;
  }
LABEL_102:
  PB::TextFormatter::format(this, "hgArclengthZBiggestImpact", *(float *)(a1 + 172));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x200000000) == 0)
  {
LABEL_34:
    if ((v6 & 0x400000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_104;
  }
LABEL_103:
  PB::TextFormatter::format(this, "hgArclengthZOverEpoch", *(float *)(a1 + 176));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x400000000) == 0)
  {
LABEL_35:
    if ((v6 & 0x800000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_105;
  }
LABEL_104:
  PB::TextFormatter::format(this, "hgDeltaVXYBiggestImpact", *(float *)(a1 + 180));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x800000000) == 0)
  {
LABEL_36:
    if ((v6 & 0x1000000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_106;
  }
LABEL_105:
  PB::TextFormatter::format(this, "hgDeltaVXYOverEpoch", *(float *)(a1 + 184));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x1000000000) == 0)
  {
LABEL_37:
    if ((v6 & 0x2000000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_107;
  }
LABEL_106:
  PB::TextFormatter::format(this, "hgDeltaVXYUnconditional", *(float *)(a1 + 188));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x2000000000) == 0)
  {
LABEL_38:
    if ((v6 & 0x4000000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_108;
  }
LABEL_107:
  PB::TextFormatter::format(this, "hgDeltaVXYZBiggestImpact", *(float *)(a1 + 192));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x4000000000) == 0)
  {
LABEL_39:
    if ((v6 & 0x8000000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_109;
  }
LABEL_108:
  PB::TextFormatter::format(this, "hgDeltaVXYZOverEpoch", *(float *)(a1 + 196));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x8000000000) == 0)
  {
LABEL_40:
    if ((v6 & 0x10000000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_110;
  }
LABEL_109:
  PB::TextFormatter::format(this, "hgDeltaVXYZUnconditional", *(float *)(a1 + 200));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x10000000000) == 0)
  {
LABEL_41:
    if ((v6 & 0x20000000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_111;
  }
LABEL_110:
  PB::TextFormatter::format(this, "hgDeltaVZBiggestImpact", *(float *)(a1 + 204));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x20000000000) == 0)
  {
LABEL_42:
    if ((v6 & 0x40000000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_112;
  }
LABEL_111:
  PB::TextFormatter::format(this, "hgDeltaVZOverEpoch", *(float *)(a1 + 208));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x40000000000) == 0)
  {
LABEL_43:
    if ((v6 & 0x80000000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_113;
  }
LABEL_112:
  PB::TextFormatter::format(this, "hgDeltaVZUnconditional", *(float *)(a1 + 212));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x80000000000) == 0)
  {
LABEL_44:
    if ((v6 & 0x100000000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_114;
  }
LABEL_113:
  PB::TextFormatter::format(this, "hgDurationXYBiggestImpact", *(float *)(a1 + 216));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x100000000000) == 0)
  {
LABEL_45:
    if ((v6 & 0x200000000000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_115;
  }
LABEL_114:
  PB::TextFormatter::format(this, "hgDurationXYZBiggestImpact", *(float *)(a1 + 220));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x200000000000) == 0)
  {
LABEL_46:
    if ((v6 & 0x400000000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_116;
  }
LABEL_115:
  PB::TextFormatter::format(this, "hgDurationZBiggestImpact", *(float *)(a1 + 224));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x400000000000) == 0)
  {
LABEL_47:
    if ((v7 & 8) == 0) {
      goto LABEL_48;
    }
    goto LABEL_117;
  }
LABEL_116:
  PB::TextFormatter::format(this, "hgWeightCoeff", *(float *)(a1 + 228));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((v7 & 8) == 0)
  {
LABEL_48:
    if ((v6 & 0x800000000000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_118;
  }
LABEL_117:
  PB::TextFormatter::format(this, "isPulseDetected");
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x800000000000) == 0)
  {
LABEL_49:
    if ((v6 & 0x1000000000000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_119;
  }
LABEL_118:
  PB::TextFormatter::format(this, "lgArclengthXYBiggestImpact", *(float *)(a1 + 232));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x1000000000000) == 0)
  {
LABEL_50:
    if ((v6 & 0x2000000000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_120;
  }
LABEL_119:
  PB::TextFormatter::format(this, "lgArclengthXYOverEpoch", *(float *)(a1 + 236));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x2000000000000) == 0)
  {
LABEL_51:
    if ((v6 & 0x4000000000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_121;
  }
LABEL_120:
  PB::TextFormatter::format(this, "lgArclengthXYZBiggestImpact", *(float *)(a1 + 240));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x4000000000000) == 0)
  {
LABEL_52:
    if ((v6 & 0x8000000000000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_122;
  }
LABEL_121:
  PB::TextFormatter::format(this, "lgArclengthXYZOverEpoch", *(float *)(a1 + 244));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x8000000000000) == 0)
  {
LABEL_53:
    if ((v6 & 0x10000000000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_123;
  }
LABEL_122:
  PB::TextFormatter::format(this, "lgArclengthZBiggestImpact", *(float *)(a1 + 248));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x10000000000000) == 0)
  {
LABEL_54:
    if ((v6 & 0x20000000000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_124;
  }
LABEL_123:
  PB::TextFormatter::format(this, "lgArclengthZOverEpoch", *(float *)(a1 + 252));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x20000000000000) == 0)
  {
LABEL_55:
    if ((v6 & 0x40000000000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_125;
  }
LABEL_124:
  PB::TextFormatter::format(this, "lgDeltaVXYBiggestImpact", *(float *)(a1 + 256));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x40000000000000) == 0)
  {
LABEL_56:
    if ((v6 & 0x80000000000000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_126;
  }
LABEL_125:
  PB::TextFormatter::format(this, "lgDeltaVXYOverEpoch", *(float *)(a1 + 260));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x80000000000000) == 0)
  {
LABEL_57:
    if ((v6 & 0x100000000000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_127;
  }
LABEL_126:
  PB::TextFormatter::format(this, "lgDeltaVXYUnconditional", *(float *)(a1 + 264));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x100000000000000) == 0)
  {
LABEL_58:
    if ((v6 & 0x200000000000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_128;
  }
LABEL_127:
  PB::TextFormatter::format(this, "lgDeltaVXYZBiggestImpact", *(float *)(a1 + 268));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x200000000000000) == 0)
  {
LABEL_59:
    if ((v6 & 0x400000000000000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_129;
  }
LABEL_128:
  PB::TextFormatter::format(this, "lgDeltaVXYZOverEpoch", *(float *)(a1 + 272));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x400000000000000) == 0)
  {
LABEL_60:
    if ((v6 & 0x800000000000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_130;
  }
LABEL_129:
  PB::TextFormatter::format(this, "lgDeltaVXYZUnconditional", *(float *)(a1 + 276));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x800000000000000) == 0)
  {
LABEL_61:
    if ((v6 & 0x1000000000000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_131;
  }
LABEL_130:
  PB::TextFormatter::format(this, "lgDeltaVZBiggestImpact", *(float *)(a1 + 280));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x1000000000000000) == 0)
  {
LABEL_62:
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_132;
  }
LABEL_131:
  PB::TextFormatter::format(this, "lgDeltaVZOverEpoch", *(float *)(a1 + 284));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x2000000000000000) == 0)
  {
LABEL_63:
    if ((v6 & 0x4000000000000000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_133;
  }
LABEL_132:
  PB::TextFormatter::format(this, "lgDeltaVZUnconditional", *(float *)(a1 + 288));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x4000000000000000) == 0)
  {
LABEL_64:
    if ((v6 & 0x8000000000000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_134;
  }
LABEL_133:
  PB::TextFormatter::format(this, "lgDurationXYBiggestImpact", *(float *)(a1 + 292));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x8000000000000000) == 0)
  {
LABEL_65:
    if ((v7 & 1) == 0) {
      goto LABEL_66;
    }
    goto LABEL_135;
  }
LABEL_134:
  PB::TextFormatter::format(this, "lgDurationXYZBiggestImpact", *(float *)(a1 + 296));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((v7 & 1) == 0)
  {
LABEL_66:
    if ((v7 & 2) == 0) {
      goto LABEL_67;
    }
    goto LABEL_136;
  }
LABEL_135:
  PB::TextFormatter::format(this, "lgDurationZBiggestImpact", *(float *)(a1 + 300));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((v7 & 2) == 0)
  {
LABEL_67:
    if ((v7 & 4) == 0) {
      goto LABEL_68;
    }
    goto LABEL_137;
  }
LABEL_136:
  PB::TextFormatter::format(this, "maxPulse", *(float *)(a1 + 304));
  uint64_t v6 = *v5;
  if ((*(unsigned char *)(a1 + 324) & 4) == 0)
  {
LABEL_68:
    if ((v6 & 0x20) == 0) {
      goto LABEL_69;
    }
    goto LABEL_138;
  }
LABEL_137:
  PB::TextFormatter::format(this, "maxPulseHeight", *(float *)(a1 + 308));
  uint64_t v6 = *v5;
  if ((*v5 & 0x20) == 0)
  {
LABEL_69:
    if ((v6 & 0x40) == 0) {
      goto LABEL_70;
    }
    goto LABEL_139;
  }
LABEL_138:
  PB::TextFormatter::format(this, "maxPulseStartTime");
  uint64_t v6 = *v5;
  if ((*v5 & 0x40) == 0)
  {
LABEL_70:
    if ((v6 & 0x80) == 0) {
      goto LABEL_71;
    }
    goto LABEL_140;
  }
LABEL_139:
  PB::TextFormatter::format(this, "maxPulseTime");
  uint64_t v6 = *v5;
  if ((*v5 & 0x80) == 0)
  {
LABEL_71:
    if ((v6 & 0x100) == 0) {
      goto LABEL_73;
    }
    goto LABEL_72;
  }
LABEL_140:
  PB::TextFormatter::format(this, "timestamp");
  if ((*v5 & 0x100) != 0) {
LABEL_72:
  }
    PB::TextFormatter::format(this, "triggerTimestamp");
LABEL_73:

  return MEMORY[0x270F587F0](this);
}